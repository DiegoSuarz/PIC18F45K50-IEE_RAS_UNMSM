

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Jul 31 21:04:10 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    51                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    52                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    53                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    54   000000                     
    55                           ; Version 2.35
    56                           ; Generated 05/05/2021 GMT
    57                           ; 
    58                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution. Publication is not required when
    72                           ;        this file is used in an embedded application.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC18F45K50 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90   000000                     _LATDbits	set	3980
    91   000000                     _CCPTMRSbits	set	3929
    92   000000                     _ANSELCbits	set	3933
    93   000000                     _ANSELD	set	3934
    94   000000                     _SLRCON	set	3962
    95   000000                     _LATD	set	3980
    96   000000                     _OSCCONbits	set	4051
    97   000000                     _TRISCbits	set	3988
    98   000000                     _TRISD	set	3989
    99   000000                     _PIR1bits	set	3998
   100   000000                     _CCP1CONbits	set	4029
   101   000000                     _CCPR1	set	4030
   102   000000                     _T1CONbits	set	4045
   103   000000                     _TMR1	set	4046
   104                           
   105                           	psect	smallconst
   106   000800                     __psmallconst:
   107                           	callstack 0
   108   000800  00                 	db	0
   109   000801                     STR_1:
   110                           
   111                           ; BSR set to: 15
   112   000801  46                 	db	70	;'F'
   113   000802  72                 	db	114	;'r'
   114   000803  65                 	db	101	;'e'
   115   000804  63                 	db	99	;'c'
   116   000805  75                 	db	117	;'u'
   117   000806  65                 	db	101	;'e'
   118   000807  6E                 	db	110	;'n'
   119   000808  63                 	db	99	;'c'
   120   000809  69                 	db	105	;'i'
   121   00080A  61                 	db	97	;'a'
   122   00080B  3A                 	db	58	;':'
   123   00080C  00                 	db	0
   124   00080D                     STR_2:
   125                           
   126                           ; BSR set to: 15
   127   00080D  25                 	db	37
   128   00080E  2E                 	db	46
   129   00080F  32                 	db	50	;'2'
   130   000810  66                 	db	102	;'f'
   131   000811  00                 	db	0
   132   000812                     STR_3:
   133                           
   134                           ; BSR set to: 15
   135   000812  69                 	db	105	;'i'
   136   000813  6E                 	db	110	;'n'
   137   000814  66                 	db	102	;'f'
   138   000815  00                 	db	0
   139   000816                     STR_6:
   140                           
   141                           ; BSR set to: 15
   142   000816  6E                 	db	110	;'n'
   143   000817  61                 	db	97	;'a'
   144   000818  6E                 	db	110	;'n'
   145   000819  00                 	db	0
   146   00081A  00                 	db	0	; dummy byte at the end
   147   000000                     
   148                           ; #config settings
   149                           
   150                           	psect	cinit
   151   00323E                     __pcinit:
   152                           	callstack 0
   153   00323E                     start_initialization:
   154                           	callstack 0
   155   00323E                     __initialization:
   156                           	callstack 0
   157                           
   158                           ; Clear objects allocated to BANK1 (80 bytes)
   159   00323E  EE01  F000         	lfsr	0,__pbssBANK1
   160   003242  0E50               	movlw	80
   161   003244                     clear_0:
   162   003244  6AEE               	clrf	postinc0,c
   163   003246  06E8               	decf	wreg,f,c
   164   003248  E1FD               	bnz	clear_0
   165                           
   166                           ; Clear objects allocated to BANK0 (36 bytes)
   167   00324A  EE00  F0A5         	lfsr	0,__pbssBANK0
   168   00324E  0E24               	movlw	36
   169   003250                     clear_1:
   170   003250  6AEE               	clrf	postinc0,c
   171   003252  06E8               	decf	wreg,f,c
   172   003254  E1FD               	bnz	clear_1
   173                           
   174                           ; Clear objects allocated to COMRAM (1 bytes)
   175   003256  6A5F               	clrf	__pbssCOMRAM& (0+255),c
   176   003258                     end_of_initialization:
   177                           	callstack 0
   178   003258                     __end_of__initialization:
   179                           	callstack 0
   180   003258  0E00               	movlw	low (__Lmediumconst shr (0+16))
   181   00325A  6EF8               	movwf	tblptru,c
   182   00325C  0100               	movlb	0
   183   00325E  EF0A  F016         	goto	_main	;jump to C main() function
   184                           
   185                           	psect	bssCOMRAM
   186   00005F                     __pbssCOMRAM:
   187                           	callstack 0
   188   00005F                     _flags:
   189                           	callstack 0
   190   00005F                     	ds	1
   191                           
   192                           	psect	bssBANK0
   193   0000A5                     __pbssBANK0:
   194                           	callstack 0
   195   0000A5                     floorf@F526:
   196                           	callstack 0
   197   0000A5                     	ds	4
   198   0000A9                     ___fpclassifyf@F465:
   199                           	callstack 0
   200   0000A9                     	ds	4
   201   0000AD                     _frecuency:
   202                           	callstack 0
   203   0000AD                     	ds	4
   204   0000B1                     _width:
   205                           	callstack 0
   206   0000B1                     	ds	2
   207   0000B3                     _prec:
   208                           	callstack 0
   209   0000B3                     	ds	2
   210   0000B5                     _str_buffer:
   211                           	callstack 0
   212   0000B5                     	ds	20
   213                           
   214                           	psect	bssBANK1
   215   000100                     __pbssBANK1:
   216                           	callstack 0
   217   000100                     _dbuf:
   218                           	callstack 0
   219   000100                     	ds	80
   220                           
   221                           	psect	cstackBANK0
   222   000060                     __pcstackBANK0:
   223                           	callstack 0
   224   000060                     efgtoa@ne:
   225                           	callstack 0
   226                           
   227                           ; 2 bytes @ 0x0
   228   000060                     	ds	2
   229   000062                     efgtoa@p:
   230                           	callstack 0
   231                           
   232                           ; 2 bytes @ 0x2
   233   000062                     	ds	2
   234   000064                     efgtoa@t:
   235                           	callstack 0
   236                           
   237                           ; 2 bytes @ 0x4
   238   000064                     	ds	2
   239   000066                     _efgtoa$1026:
   240                           	callstack 0
   241                           
   242                           ; 2 bytes @ 0x6
   243   000066                     	ds	2
   244   000068                     efgtoa@pp:
   245                           	callstack 0
   246                           
   247                           ; 1 bytes @ 0x8
   248   000068                     	ds	1
   249   000069                     efgtoa@mode:
   250                           	callstack 0
   251                           
   252                           ; 1 bytes @ 0x9
   253   000069                     	ds	1
   254   00006A                     efgtoa@nmode:
   255                           	callstack 0
   256                           
   257                           ; 1 bytes @ 0xA
   258   00006A                     	ds	1
   259   00006B                     efgtoa@d:
   260                           	callstack 0
   261                           
   262                           ; 2 bytes @ 0xB
   263   00006B                     	ds	2
   264   00006D                     efgtoa@m:
   265                           	callstack 0
   266                           
   267                           ; 2 bytes @ 0xD
   268   00006D                     	ds	2
   269   00006F                     efgtoa@e:
   270                           	callstack 0
   271                           
   272                           ; 2 bytes @ 0xF
   273   00006F                     	ds	2
   274   000071                     efgtoa@w:
   275                           	callstack 0
   276                           
   277                           ; 2 bytes @ 0x11
   278   000071                     	ds	2
   279   000073                     efgtoa@ou:
   280                           	callstack 0
   281                           
   282                           ; 4 bytes @ 0x13
   283   000073                     	ds	4
   284   000077                     efgtoa@i:
   285                           	callstack 0
   286                           
   287                           ; 2 bytes @ 0x17
   288   000077                     	ds	2
   289   000079                     efgtoa@h:
   290                           	callstack 0
   291                           
   292                           ; 4 bytes @ 0x19
   293   000079                     	ds	4
   294   00007D                     efgtoa@l:
   295                           	callstack 0
   296                           
   297                           ; 4 bytes @ 0x1D
   298   00007D                     	ds	4
   299   000081                     efgtoa@sign:
   300                           	callstack 0
   301                           
   302                           ; 1 bytes @ 0x21
   303   000081                     	ds	1
   304   000082                     efgtoa@n:
   305                           	callstack 0
   306                           
   307                           ; 2 bytes @ 0x22
   308   000082                     	ds	2
   309   000084                     efgtoa@g:
   310                           	callstack 0
   311                           
   312                           ; 4 bytes @ 0x24
   313   000084                     	ds	4
   314   000088                     efgtoa@u:
   315                           	callstack 0
   316                           
   317                           ; 4 bytes @ 0x28
   318   000088                     	ds	4
   319   00008C                     vfprintf@cfmt:
   320                           	callstack 0
   321                           
   322                           ; 2 bytes @ 0x2C
   323   00008C                     	ds	2
   324   00008E                     ?_sprintf:
   325                           	callstack 0
   326   00008E                     sprintf@s:
   327                           	callstack 0
   328                           
   329                           ; 2 bytes @ 0x2E
   330   00008E                     	ds	2
   331   000090                     sprintf@fmt:
   332                           	callstack 0
   333                           
   334                           ; 2 bytes @ 0x30
   335   000090                     	ds	6
   336   000096                     sprintf@ap:
   337                           	callstack 0
   338                           
   339                           ; 2 bytes @ 0x36
   340   000096                     	ds	2
   341   000098                     sprintf@f:
   342                           	callstack 0
   343                           
   344                           ; 11 bytes @ 0x38
   345   000098                     	ds	11
   346   0000A3                     ??_main:
   347                           
   348                           ; 1 bytes @ 0x43
   349   0000A3                     	ds	2
   350                           
   351                           	psect	cstackCOMRAM
   352   000001                     __pcstackCOMRAM:
   353                           	callstack 0
   354   000001                     ?___fpclassifyf:
   355                           	callstack 0
   356   000001                     ?_isdigit:
   357                           	callstack 0
   358   000001                     ?_isspace:
   359                           	callstack 0
   360   000001                     ?___wmul:
   361                           	callstack 0
   362   000001                     ?___fladd:
   363                           	callstack 0
   364   000001                     ?___flmul:
   365                           	callstack 0
   366   000001                     ?_labs:
   367                           	callstack 0
   368   000001                     ?___flneg:
   369                           	callstack 0
   370   000001                     ?___fltol:
   371                           	callstack 0
   372   000001                     ?___xxtofl:
   373                           	callstack 0
   374   000001                     Lcd_Port@a:
   375                           	callstack 0
   376   000001                     ___wmul@multiplier:
   377                           	callstack 0
   378   000001                     isdigit@c:
   379                           	callstack 0
   380   000001                     isspace@c:
   381                           	callstack 0
   382   000001                     memcpy@d1:
   383                           	callstack 0
   384   000001                     fputc@c:
   385                           	callstack 0
   386   000001                     strcpy@dest:
   387                           	callstack 0
   388   000001                     ___fleq@ff1:
   389                           	callstack 0
   390   000001                     ___flneg@f1:
   391                           	callstack 0
   392   000001                     ___fltol@f1:
   393                           	callstack 0
   394   000001                     ___fladd@b:
   395                           	callstack 0
   396   000001                     ___flmul@b:
   397                           	callstack 0
   398   000001                     ___xxtofl@val:
   399                           	callstack 0
   400   000001                     ___fpclassifyf@x:
   401                           	callstack 0
   402   000001                     labs@a:
   403                           	callstack 0
   404                           
   405                           ; 4 bytes @ 0x0
   406   000001                     	ds	1
   407   000002                     ??_Lcd_Cmd:
   408   000002                     Lcd_Write_Char@temp:
   409                           	callstack 0
   410                           
   411                           ; 1 bytes @ 0x1
   412   000002                     	ds	1
   413   000003                     ??_isdigit:
   414   000003                     ??_isspace:
   415   000003                     Lcd_Cmd@a:
   416                           	callstack 0
   417   000003                     Lcd_Write_Char@y:
   418                           	callstack 0
   419   000003                     ___wmul@multiplicand:
   420                           	callstack 0
   421   000003                     memcpy@s1:
   422                           	callstack 0
   423   000003                     fputc@fp:
   424                           	callstack 0
   425   000003                     strcpy@src:
   426                           	callstack 0
   427                           
   428                           ; 2 bytes @ 0x2
   429   000003                     	ds	1
   430   000004                     ??_Lcd_Init:
   431   000004                     Lcd_Set_Cursor@b:
   432                           	callstack 0
   433   000004                     Lcd_Write_Char@a:
   434                           	callstack 0
   435                           
   436                           ; 1 bytes @ 0x3
   437   000004                     	ds	1
   438   000005                     ??_fputc:
   439   000005                     ??___fpclassifyf:
   440   000005                     ??_labs:
   441   000005                     ??___fltol:
   442   000005                     ??___xxtofl:
   443   000005                     Lcd_Set_Cursor@a:
   444                           	callstack 0
   445   000005                     _isspace$1104:
   446                           	callstack 0
   447   000005                     Lcd_Write_String@a:
   448                           	callstack 0
   449   000005                     ___wmul@product:
   450                           	callstack 0
   451   000005                     memcpy@n:
   452                           	callstack 0
   453   000005                     strcpy@s:
   454                           	callstack 0
   455   000005                     ___fleq@ff2:
   456                           	callstack 0
   457   000005                     ___fladd@a:
   458                           	callstack 0
   459   000005                     ___flmul@a:
   460                           	callstack 0
   461                           
   462                           ; 4 bytes @ 0x4
   463   000005                     	ds	1
   464   000006                     Lcd_Set_Cursor@z:
   465                           	callstack 0
   466                           
   467                           ; 1 bytes @ 0x5
   468   000006                     	ds	1
   469   000007                     ??_Lcd_Write_String:
   470   000007                     ?_atoi:
   471                           	callstack 0
   472   000007                     Lcd_Set_Cursor@y:
   473                           	callstack 0
   474   000007                     atoi@s:
   475                           	callstack 0
   476   000007                     memcpy@d:
   477                           	callstack 0
   478   000007                     strcpy@d:
   479                           	callstack 0
   480                           
   481                           ; 2 bytes @ 0x6
   482   000007                     	ds	1
   483   000008                     Lcd_Set_Cursor@temp:
   484                           	callstack 0
   485                           
   486                           ; 1 bytes @ 0x7
   487   000008                     	ds	1
   488   000009                     ??___fladd:
   489   000009                     ??___flmul:
   490   000009                     ??_atoi:
   491   000009                     ??___fleq:
   492   000009                     ___fltol@sign1:
   493                           	callstack 0
   494   000009                     ___xxtofl@sign:
   495                           	callstack 0
   496   000009                     Lcd_Write_String@i:
   497                           	callstack 0
   498   000009                     ___fpclassifyf@e:
   499                           	callstack 0
   500   000009                     memcpy@s:
   501                           	callstack 0
   502                           
   503                           ; 2 bytes @ 0x8
   504   000009                     	ds	1
   505   00000A                     ___fltol@exp1:
   506                           	callstack 0
   507   00000A                     ___xxtofl@exp:
   508                           	callstack 0
   509   00000A                     fputs@s:
   510                           	callstack 0
   511                           
   512                           ; 2 bytes @ 0x9
   513   00000A                     	ds	1
   514   00000B                     memcpy@tmp:
   515                           	callstack 0
   516   00000B                     ___xxtofl@arg:
   517                           	callstack 0
   518   00000B                     ___fpclassifyf@u:
   519                           	callstack 0
   520                           
   521                           ; 4 bytes @ 0xA
   522   00000B                     	ds	1
   523   00000C                     atoi@neg:
   524                           	callstack 0
   525   00000C                     fputs@fp:
   526                           	callstack 0
   527                           
   528                           ; 2 bytes @ 0xB
   529   00000C                     	ds	1
   530   00000D                     ___fladd@signs:
   531                           	callstack 0
   532   00000D                     ___flmul@sign:
   533                           	callstack 0
   534                           
   535                           ; 1 bytes @ 0xC
   536   00000D                     	ds	1
   537   00000E                     ___fladd@aexp:
   538                           	callstack 0
   539   00000E                     fputs@c:
   540                           	callstack 0
   541   00000E                     atoi@n:
   542                           	callstack 0
   543   00000E                     ___flmul@grs:
   544                           	callstack 0
   545                           
   546                           ; 4 bytes @ 0xD
   547   00000E                     	ds	1
   548   00000F                     ?___fldiv:
   549                           	callstack 0
   550   00000F                     ___fladd@bexp:
   551                           	callstack 0
   552   00000F                     fputs@i:
   553                           	callstack 0
   554   00000F                     ___fldiv@b:
   555                           	callstack 0
   556                           
   557                           ; 4 bytes @ 0xE
   558   00000F                     	ds	1
   559   000010                     ___fladd@grs:
   560                           	callstack 0
   561                           
   562                           ; 1 bytes @ 0xF
   563   000010                     	ds	1
   564   000011                     pad@fp:
   565                           	callstack 0
   566                           
   567                           ; 2 bytes @ 0x10
   568   000011                     	ds	1
   569   000012                     ___flmul@aexp:
   570                           	callstack 0
   571                           
   572                           ; 1 bytes @ 0x11
   573   000012                     	ds	1
   574   000013                     ___flmul@bexp:
   575                           	callstack 0
   576   000013                     pad@buf:
   577                           	callstack 0
   578   000013                     ___fldiv@a:
   579                           	callstack 0
   580                           
   581                           ; 4 bytes @ 0x12
   582   000013                     	ds	1
   583   000014                     ___flmul@prod:
   584                           	callstack 0
   585                           
   586                           ; 4 bytes @ 0x13
   587   000014                     	ds	1
   588   000015                     pad@p:
   589                           	callstack 0
   590                           
   591                           ; 2 bytes @ 0x14
   592   000015                     	ds	2
   593   000017                     ??___fldiv:
   594   000017                     ??_pad:
   595                           
   596                           ; 1 bytes @ 0x16
   597   000017                     	ds	1
   598   000018                     ___flmul@temp:
   599                           	callstack 0
   600   000018                     pad@i:
   601                           	callstack 0
   602                           
   603                           ; 2 bytes @ 0x17
   604   000018                     	ds	2
   605   00001A                     ?___flsub:
   606                           	callstack 0
   607   00001A                     pad@w:
   608                           	callstack 0
   609   00001A                     ___flge@ff1:
   610                           	callstack 0
   611   00001A                     ___flsub@b:
   612                           	callstack 0
   613                           
   614                           ; 4 bytes @ 0x19
   615   00001A                     	ds	1
   616   00001B                     ___fldiv@rem:
   617                           	callstack 0
   618                           
   619                           ; 4 bytes @ 0x1A
   620   00001B                     	ds	3
   621   00001E                     ___flge@ff2:
   622                           	callstack 0
   623   00001E                     ___flsub@a:
   624                           	callstack 0
   625                           
   626                           ; 4 bytes @ 0x1D
   627   00001E                     	ds	1
   628   00001F                     ___fldiv@sign:
   629                           	callstack 0
   630                           
   631                           ; 1 bytes @ 0x1E
   632   00001F                     	ds	1
   633   000020                     ___fldiv@new_exp:
   634                           	callstack 0
   635                           
   636                           ; 2 bytes @ 0x1F
   637   000020                     	ds	2
   638   000022                     ??___flge:
   639   000022                     ___fldiv@grs:
   640                           	callstack 0
   641                           
   642                           ; 4 bytes @ 0x21
   643   000022                     	ds	4
   644   000026                     ___fldiv@bexp:
   645                           	callstack 0
   646                           
   647                           ; 1 bytes @ 0x25
   648   000026                     	ds	1
   649   000027                     ___fldiv@aexp:
   650                           	callstack 0
   651                           
   652                           ; 1 bytes @ 0x26
   653   000027                     	ds	1
   654   000028                     ?_Read_Captura:
   655                           	callstack 0
   656   000028                     ?_floorf:
   657                           	callstack 0
   658   000028                     floorf@x:
   659                           	callstack 0
   660                           
   661                           ; 4 bytes @ 0x27
   662   000028                     	ds	4
   663   00002C                     ??_Read_Captura:
   664   00002C                     ??_floorf:
   665                           
   666                           ; 1 bytes @ 0x2B
   667   00002C                     	ds	2
   668   00002E                     Read_Captura@frecuencia:
   669                           	callstack 0
   670                           
   671                           ; 4 bytes @ 0x2D
   672   00002E                     	ds	4
   673   000032                     Read_Captura@periodo:
   674                           	callstack 0
   675   000032                     floorf@m:
   676                           	callstack 0
   677                           
   678                           ; 4 bytes @ 0x31
   679   000032                     	ds	4
   680   000036                     Read_Captura@flanco_inicial:
   681                           	callstack 0
   682   000036                     floorf@e:
   683                           	callstack 0
   684                           
   685                           ; 2 bytes @ 0x35
   686   000036                     	ds	2
   687   000038                     Read_Captura@flanco_final:
   688                           	callstack 0
   689   000038                     floorf@u:
   690                           	callstack 0
   691                           
   692                           ; 4 bytes @ 0x37
   693   000038                     	ds	4
   694   00003C                     efgtoa@fp:
   695                           	callstack 0
   696                           
   697                           ; 2 bytes @ 0x3B
   698   00003C                     	ds	2
   699   00003E                     efgtoa@f:
   700                           	callstack 0
   701                           
   702                           ; 4 bytes @ 0x3D
   703   00003E                     	ds	4
   704   000042                     efgtoa@c:
   705                           	callstack 0
   706                           
   707                           ; 1 bytes @ 0x41
   708   000042                     	ds	1
   709   000043                     ??_efgtoa:
   710                           
   711                           ; 1 bytes @ 0x42
   712   000043                     	ds	2
   713   000045                     vfpfcnvrt@fp:
   714                           	callstack 0
   715                           
   716                           ; 2 bytes @ 0x44
   717   000045                     	ds	2
   718   000047                     vfpfcnvrt@fmt:
   719                           	callstack 0
   720                           
   721                           ; 2 bytes @ 0x46
   722   000047                     	ds	2
   723   000049                     vfpfcnvrt@ap:
   724                           	callstack 0
   725                           
   726                           ; 2 bytes @ 0x48
   727   000049                     	ds	2
   728   00004B                     ??_vfpfcnvrt:
   729                           
   730                           ; 1 bytes @ 0x4A
   731   00004B                     	ds	3
   732   00004E                     vfpfcnvrt@convarg:
   733                           	callstack 0
   734                           
   735                           ; 8 bytes @ 0x4D
   736   00004E                     	ds	8
   737   000056                     vfpfcnvrt@c:
   738                           	callstack 0
   739                           
   740                           ; 1 bytes @ 0x55
   741   000056                     	ds	1
   742   000057                     vfpfcnvrt@cp:
   743                           	callstack 0
   744                           
   745                           ; 2 bytes @ 0x56
   746   000057                     	ds	2
   747   000059                     ?_vfprintf:
   748                           	callstack 0
   749   000059                     vfprintf@fp:
   750                           	callstack 0
   751                           
   752                           ; 2 bytes @ 0x58
   753   000059                     	ds	2
   754   00005B                     vfprintf@fmt:
   755                           	callstack 0
   756                           
   757                           ; 2 bytes @ 0x5A
   758   00005B                     	ds	2
   759   00005D                     vfprintf@ap:
   760                           	callstack 0
   761                           
   762                           ; 2 bytes @ 0x5C
   763   00005D                     	ds	2
   764   00005F                     
   765                           ; 1 bytes @ 0x5E
   766 ;;
   767 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   768 ;;
   769 ;; *************** function _main *****************
   770 ;; Defined at:
   771 ;;		line 23 in file "main.c"
   772 ;; Parameters:    Size  Location     Type
   773 ;;		None
   774 ;; Auto vars:     Size  Location     Type
   775 ;;		None
   776 ;; Return value:  Size  Location     Type
   777 ;;                  1    wreg      void 
   778 ;; Registers used:
   779 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   780 ;; Tracked objects:
   781 ;;		On entry : 0/0
   782 ;;		On exit  : 0/0
   783 ;;		Unchanged: 0/0
   784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   785 ;;      Params:         0       0       0       0       0       0       0       0       0
   786 ;;      Locals:         0       0       0       0       0       0       0       0       0
   787 ;;      Temps:          0       2       0       0       0       0       0       0       0
   788 ;;      Totals:         0       2       0       0       0       0       0       0       0
   789 ;;Total ram usage:        2 bytes
   790 ;; Hardware stack levels required when called: 8
   791 ;; This function calls:
   792 ;;		_Config_CCP_Captura
   793 ;;		_Config_Clock
   794 ;;		_Config_Port
   795 ;;		_Lcd_Clear
   796 ;;		_Lcd_Init
   797 ;;		_Lcd_Set_Cursor
   798 ;;		_Lcd_Write_String
   799 ;;		_Read_Captura
   800 ;;		_sprintf
   801 ;; This function is called by:
   802 ;;		Startup code after reset
   803 ;; This function uses a non-reentrant model
   804 ;;
   805                           
   806                           	psect	text0
   807   002C14                     __ptext0:
   808                           	callstack 0
   809   002C14                     _main:
   810                           	callstack 23
   811   002C14                     
   812                           ;main.c: 24:     Config_Clock();
   813   002C14  EC52  F019         	call	_Config_Clock	;wreg free
   814                           
   815                           ;main.c: 25:     Config_Port();
   816   002C18  EC41  F019         	call	_Config_Port	;wreg free
   817                           
   818                           ;main.c: 26:     Config_CCP_Captura();
   819   002C1C  ECA1  F018         	call	_Config_CCP_Captura	;wreg free
   820                           
   821                           ;main.c: 27:     Lcd_Init();
   822   002C20  ECD3  F016         	call	_Lcd_Init	;wreg free
   823                           
   824                           ;main.c: 28:     Lcd_Clear();
   825   002C24  EC4B  F019         	call	_Lcd_Clear	;wreg free
   826   002C28                     
   827                           ;main.c: 29:     Lcd_Set_Cursor(1,1);
   828   002C28  0E01               	movlw	1
   829   002C2A  6E04               	movwf	Lcd_Set_Cursor@b^0,c
   830   002C2C  0E01               	movlw	1
   831   002C2E  EC40  F017         	call	_Lcd_Set_Cursor
   832   002C32                     
   833                           ;main.c: 30:     Lcd_Write_String("Frecuencia:");
   834   002C32  0E01               	movlw	low STR_1
   835   002C34  6E05               	movwf	Lcd_Write_String@a^0,c
   836   002C36  0E08               	movlw	high STR_1
   837   002C38  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
   838   002C3A  EC57  F016         	call	_Lcd_Write_String	;wreg free
   839   002C3E                     l3595:
   840                           
   841                           ;main.c: 32:         frecuency = Read_Captura();
   842   002C3E  ECE4  F014         	call	_Read_Captura	;wreg free
   843   002C42  C028  F0AD         	movff	?_Read_Captura,_frecuency
   844   002C46  C029  F0AE         	movff	?_Read_Captura+1,_frecuency+1
   845   002C4A  C02A  F0AF         	movff	?_Read_Captura+2,_frecuency+2
   846   002C4E  C02B  F0B0         	movff	?_Read_Captura+3,_frecuency+3
   847   002C52                     
   848                           ;main.c: 33:         sprintf(str_buffer,"%.2f",frecuency);
   849   002C52  0EB5               	movlw	low _str_buffer
   850   002C54  0100               	movlb	0	; () banked
   851   002C56  6F8E               	movwf	sprintf@s& (0+255),b
   852   002C58  0E00               	movlw	high _str_buffer
   853   002C5A  6F8F               	movwf	(sprintf@s+1)& (0+255),b
   854   002C5C  0E0D               	movlw	low STR_2
   855   002C5E  6F90               	movwf	sprintf@fmt& (0+255),b
   856   002C60  0E08               	movlw	high STR_2
   857   002C62  6F91               	movwf	(sprintf@fmt+1)& (0+255),b
   858   002C64  C0AD  F092         	movff	_frecuency,?_sprintf+4
   859   002C68  C0AE  F093         	movff	_frecuency+1,?_sprintf+5
   860   002C6C  C0AF  F094         	movff	_frecuency+2,?_sprintf+6
   861   002C70  C0B0  F095         	movff	_frecuency+3,?_sprintf+7
   862   002C74  ECA1  F017         	call	_sprintf	;wreg free
   863   002C78                     
   864                           ;main.c: 34:         Lcd_Set_Cursor(2,1);
   865   002C78  0E01               	movlw	1
   866   002C7A  6E04               	movwf	Lcd_Set_Cursor@b^0,c
   867   002C7C  0E02               	movlw	2
   868   002C7E  EC40  F017         	call	_Lcd_Set_Cursor
   869   002C82                     
   870                           ;main.c: 35:         Lcd_Write_String(str_buffer);
   871   002C82  0EB5               	movlw	low _str_buffer
   872   002C84  6E05               	movwf	Lcd_Write_String@a^0,c
   873   002C86  0E00               	movlw	high _str_buffer
   874   002C88  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
   875   002C8A  EC57  F016         	call	_Lcd_Write_String	;wreg free
   876   002C8E                     
   877                           ;main.c: 36:         _delay((unsigned long)((100)*(16000000UL/4000.0)));
   878   002C8E  0E03               	movlw	3
   879   002C90  0100               	movlb	0	; () banked
   880   002C92  6FA4               	movwf	(??_main+1)& (0+255),b
   881   002C94  0E08               	movlw	8
   882   002C96  6FA3               	movwf	??_main& (0+255),b
   883   002C98  0E77               	movlw	119
   884   002C9A                     u3837:
   885   002C9A  2EE8               	decfsz	wreg,f,c
   886   002C9C  D7FE               	bra	u3837
   887   002C9E  2FA3               	decfsz	??_main& (0+255),f,b
   888   002CA0  D7FC               	bra	u3837
   889   002CA2  2FA4               	decfsz	(??_main+1)& (0+255),f,b
   890   002CA4  D7FA               	bra	u3837
   891   002CA6  EF1F  F016         	goto	l3595
   892   002CAA  EF00  F000         	goto	start
   893   002CAE                     __end_of_main:
   894                           	callstack 0
   895                           
   896 ;; *************** function _sprintf *****************
   897 ;; Defined at:
   898 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
   899 ;; Parameters:    Size  Location     Type
   900 ;;  s               2   46[BANK0 ] PTR unsigned char 
   901 ;;		 -> str_buffer(20), 
   902 ;;  fmt             2   48[BANK0 ] PTR const unsigned char 
   903 ;;		 -> STR_2(5), 
   904 ;; Auto vars:     Size  Location     Type
   905 ;;  f              11   56[BANK0 ] struct _IO_FILE
   906 ;;  ap              2   54[BANK0 ] PTR void [1]
   907 ;;		 -> ?_sprintf(2), 
   908 ;;  ret             2    0        int 
   909 ;; Return value:  Size  Location     Type
   910 ;;                  2   46[BANK0 ] int 
   911 ;; Registers used:
   912 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   913 ;; Tracked objects:
   914 ;;		On entry : 0/0
   915 ;;		On exit  : 0/0
   916 ;;		Unchanged: 0/0
   917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   918 ;;      Params:         0       8       0       0       0       0       0       0       0
   919 ;;      Locals:         0      13       0       0       0       0       0       0       0
   920 ;;      Temps:          0       0       0       0       0       0       0       0       0
   921 ;;      Totals:         0      21       0       0       0       0       0       0       0
   922 ;;Total ram usage:       21 bytes
   923 ;; Hardware stack levels used: 1
   924 ;; Hardware stack levels required when called: 7
   925 ;; This function calls:
   926 ;;		_vfprintf
   927 ;; This function is called by:
   928 ;;		_main
   929 ;; This function uses a non-reentrant model
   930 ;;
   931                           
   932                           	psect	text1
   933   002F42                     __ptext1:
   934                           	callstack 0
   935   002F42                     _sprintf:
   936                           	callstack 23
   937   002F42  0E92               	movlw	low (?_sprintf+4)
   938   002F44  0100               	movlb	0	; () banked
   939   002F46  6F96               	movwf	sprintf@ap& (0+255),b
   940   002F48  0E00               	movlw	high (?_sprintf+4)
   941   002F4A  6F97               	movwf	(sprintf@ap+1)& (0+255),b
   942   002F4C  C08E  F098         	movff	sprintf@s,sprintf@f
   943   002F50  C08F  F099         	movff	sprintf@s+1,sprintf@f+1
   944   002F54                     
   945                           ; BSR set to: 0
   946   002F54  0E00               	movlw	0
   947   002F56  6F9C               	movwf	(sprintf@f+4)& (0+255),b
   948   002F58  0E00               	movlw	0
   949   002F5A  6F9B               	movwf	(sprintf@f+3)& (0+255),b
   950   002F5C                     
   951                           ; BSR set to: 0
   952   002F5C  0E00               	movlw	0
   953   002F5E  6FA2               	movwf	(sprintf@f+10)& (0+255),b
   954   002F60  0E00               	movlw	0
   955   002F62  6FA1               	movwf	(sprintf@f+9)& (0+255),b
   956   002F64                     
   957                           ; BSR set to: 0
   958   002F64  0E98               	movlw	low sprintf@f
   959   002F66  6E59               	movwf	vfprintf@fp^0,c
   960   002F68  0E00               	movlw	high sprintf@f
   961   002F6A  6E5A               	movwf	(vfprintf@fp+1)^0,c
   962   002F6C  C090  F05B         	movff	sprintf@fmt,vfprintf@fmt
   963   002F70  C091  F05C         	movff	sprintf@fmt+1,vfprintf@fmt+1
   964   002F74  0E96               	movlw	low sprintf@ap
   965   002F76  6E5D               	movwf	vfprintf@ap^0,c
   966   002F78  0E00               	movlw	high sprintf@ap
   967   002F7A  6E5E               	movwf	(vfprintf@ap+1)^0,c
   968   002F7C  ECF2  F017         	call	_vfprintf	;wreg free
   969   002F80  0100               	movlb	0	; () banked
   970   002F82  519B               	movf	(sprintf@f+3)& (0+255),w,b
   971   002F84  258E               	addwf	sprintf@s& (0+255),w,b
   972   002F86  6ED9               	movwf	fsr2l,c
   973   002F88  519C               	movf	(sprintf@f+4)& (0+255),w,b
   974   002F8A  218F               	addwfc	(sprintf@s+1)& (0+255),w,b
   975   002F8C  6EDA               	movwf	fsr2h,c
   976   002F8E  0E00               	movlw	0
   977   002F90  6EDF               	movwf	indf2,c
   978   002F92                     
   979                           ; BSR set to: 0
   980   002F92  0012               	return		;funcret
   981   002F94                     __end_of_sprintf:
   982                           	callstack 0
   983                           
   984 ;; *************** function _vfprintf *****************
   985 ;; Defined at:
   986 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
   987 ;; Parameters:    Size  Location     Type
   988 ;;  fp              2   88[COMRAM] PTR struct _IO_FILE
   989 ;;		 -> sprintf@f(11), 
   990 ;;  fmt             2   90[COMRAM] PTR const unsigned char 
   991 ;;		 -> STR_2(5), 
   992 ;;  ap              2   92[COMRAM] PTR PTR void 
   993 ;;		 -> sprintf@ap(2), 
   994 ;; Auto vars:     Size  Location     Type
   995 ;;  cfmt            2   44[BANK0 ] PTR unsigned char 
   996 ;;		 -> STR_2(5), 
   997 ;; Return value:  Size  Location     Type
   998 ;;                  2   88[COMRAM] int 
   999 ;; Registers used:
  1000 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1001 ;; Tracked objects:
  1002 ;;		On entry : 0/0
  1003 ;;		On exit  : 0/0
  1004 ;;		Unchanged: 0/0
  1005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1006 ;;      Params:         6       0       0       0       0       0       0       0       0
  1007 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1008 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1009 ;;      Totals:         6       2       0       0       0       0       0       0       0
  1010 ;;Total ram usage:        8 bytes
  1011 ;; Hardware stack levels used: 1
  1012 ;; Hardware stack levels required when called: 6
  1013 ;; This function calls:
  1014 ;;		_vfpfcnvrt
  1015 ;; This function is called by:
  1016 ;;		_sprintf
  1017 ;; This function uses a non-reentrant model
  1018 ;;
  1019                           
  1020                           	psect	text2
  1021   002FE4                     __ptext2:
  1022                           	callstack 0
  1023   002FE4                     _vfprintf:
  1024                           	callstack 23
  1025   002FE4                     
  1026                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1027   002FE4  C05B  F08C         	movff	vfprintf@fmt,vfprintf@cfmt
  1028   002FE8  C05C  F08D         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1029                           
  1030                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1031   002FEC  EF06  F018         	goto	l3487
  1032   002FF0                     l3485:
  1033                           
  1034                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1035   002FF0  C059  F045         	movff	vfprintf@fp,vfpfcnvrt@fp
  1036   002FF4  C05A  F046         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1037   002FF8  0E8C               	movlw	low vfprintf@cfmt
  1038   002FFA  6E47               	movwf	vfpfcnvrt@fmt^0,c
  1039   002FFC  0E00               	movlw	high vfprintf@cfmt
  1040   002FFE  6E48               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1041   003000  C05D  F049         	movff	vfprintf@ap,vfpfcnvrt@ap
  1042   003004  C05E  F04A         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1043   003008  EC4D  F00F         	call	_vfpfcnvrt	;wreg free
  1044   00300C                     l3487:
  1045                           
  1046                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1047   00300C  C08C  FFF6         	movff	vfprintf@cfmt,tblptrl
  1048   003010  C08D  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1049   003014                     	if	0	;tblptru may be non-zero
  1050   003014                     	endif
  1051   003014                     	if	0	;tblptru may be non-zero
  1052   003014                     	endif
  1053   003014  0008               	tblrd		*
  1054   003016  50F5               	movf	tablat,w,c
  1055   003018  0900               	iorlw	0
  1056   00301A  A4D8               	btfss	status,2,c
  1057   00301C  EF12  F018         	goto	u3751
  1058   003020  EF14  F018         	goto	u3750
  1059   003024                     u3751:
  1060   003024  EFF8  F017         	goto	l3485
  1061   003028                     u3750:
  1062   003028                     
  1063                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1064   003028  0E00               	movlw	0
  1065   00302A  6E5A               	movwf	(?_vfprintf+1)^0,c
  1066   00302C  0E00               	movlw	0
  1067   00302E  6E59               	movwf	?_vfprintf^0,c
  1068   003030  0012               	return		;funcret
  1069   003032                     __end_of_vfprintf:
  1070                           	callstack 0
  1071                           
  1072 ;; *************** function _vfpfcnvrt *****************
  1073 ;; Defined at:
  1074 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1075 ;; Parameters:    Size  Location     Type
  1076 ;;  fp              2   68[COMRAM] PTR struct _IO_FILE
  1077 ;;		 -> sprintf@f(11), 
  1078 ;;  fmt             2   70[COMRAM] PTR PTR unsigned char 
  1079 ;;		 -> vfprintf@cfmt(2), 
  1080 ;;  ap              2   72[COMRAM] PTR PTR void 
  1081 ;;		 -> sprintf@ap(2), 
  1082 ;; Auto vars:     Size  Location     Type
  1083 ;;  convarg         8   77[COMRAM] struct .
  1084 ;;  cp              2   86[COMRAM] PTR unsigned char 
  1085 ;;		 -> STR_2(5), 
  1086 ;;  i               2    0        int 
  1087 ;;  done            2    0        int 
  1088 ;;  c               1   85[COMRAM] unsigned char 
  1089 ;; Return value:  Size  Location     Type
  1090 ;;                  1    wreg      void 
  1091 ;; Registers used:
  1092 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1093 ;; Tracked objects:
  1094 ;;		On entry : 0/0
  1095 ;;		On exit  : 0/0
  1096 ;;		Unchanged: 0/0
  1097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1098 ;;      Params:         6       0       0       0       0       0       0       0       0
  1099 ;;      Locals:        11       0       0       0       0       0       0       0       0
  1100 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1101 ;;      Totals:        20       0       0       0       0       0       0       0       0
  1102 ;;Total ram usage:       20 bytes
  1103 ;; Hardware stack levels used: 1
  1104 ;; Hardware stack levels required when called: 5
  1105 ;; This function calls:
  1106 ;;		_atoi
  1107 ;;		_efgtoa
  1108 ;;		_fputc
  1109 ;;		_isdigit
  1110 ;; This function is called by:
  1111 ;;		_vfprintf
  1112 ;; This function uses a non-reentrant model
  1113 ;;
  1114                           
  1115                           	psect	text3
  1116   001E9A                     __ptext3:
  1117                           	callstack 0
  1118   001E9A                     _vfpfcnvrt:
  1119                           	callstack 23
  1120   001E9A                     
  1121                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1122   001E9A  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1123   001E9E  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1124   001EA2  CFDE FFF6          	movff	postinc2,tblptrl
  1125   001EA6  CFDD FFF7          	movff	postdec2,tblptrh
  1126   001EAA                     	if	0	;tblptru may be non-zero
  1127   001EAA                     	endif
  1128   001EAA                     	if	0	;tblptru may be non-zero
  1129   001EAA                     	endif
  1130   001EAA  0008               	tblrd		*
  1131   001EAC  50F5               	movf	tablat,w,c
  1132   001EAE  0A25               	xorlw	37
  1133   001EB0  A4D8               	btfss	status,2,c
  1134   001EB2  EF5D  F00F         	goto	u3601
  1135   001EB6  EF5F  F00F         	goto	u3600
  1136   001EBA                     u3601:
  1137   001EBA  EFC3  F010         	goto	l3389
  1138   001EBE                     u3600:
  1139   001EBE                     
  1140                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1141   001EBE  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1142   001EC2  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1143   001EC6  2ADE               	incf	postinc2,f,c
  1144   001EC8  0E00               	movlw	0
  1145   001ECA  22DD               	addwfc	postdec2,f,c
  1146   001ECC                     
  1147                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1148   001ECC  0E00               	movlw	0
  1149   001ECE  0100               	movlb	0	; () banked
  1150   001ED0  6FB2               	movwf	(_width+1)& (0+255),b
  1151   001ED2  0E00               	movlw	0
  1152   001ED4  6FB1               	movwf	_width& (0+255),b
  1153   001ED6  C0B1  F05F         	movff	_width,_flags
  1154   001EDA                     
  1155                           ; BSR set to: 0
  1156                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1157   001EDA  69B3               	setf	_prec& (0+255),b
  1158   001EDC  69B4               	setf	(_prec+1)& (0+255),b
  1159   001EDE                     
  1160                           ; BSR set to: 0
  1161                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1091:         if 
      +                          ((*fmt)[0] == '.') {
  1162   001EDE  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1163   001EE2  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1164   001EE6  CFDE FFF6          	movff	postinc2,tblptrl
  1165   001EEA  CFDD FFF7          	movff	postdec2,tblptrh
  1166   001EEE                     	if	0	;tblptru may be non-zero
  1167   001EEE                     	endif
  1168   001EEE                     	if	0	;tblptru may be non-zero
  1169   001EEE                     	endif
  1170   001EEE  0008               	tblrd		*
  1171   001EF0  50F5               	movf	tablat,w,c
  1172   001EF2  0A2E               	xorlw	46
  1173   001EF4  A4D8               	btfss	status,2,c
  1174   001EF6  EF7F  F00F         	goto	u3611
  1175   001EFA  EF81  F00F         	goto	u3610
  1176   001EFE                     u3611:
  1177   001EFE  EFEE  F00F         	goto	l3351
  1178   001F02                     u3610:
  1179   001F02                     
  1180                           ; BSR set to: 0
  1181                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1092:            
      +                           prec = 0;
  1182   001F02  0E00               	movlw	0
  1183   001F04  6FB4               	movwf	(_prec+1)& (0+255),b
  1184   001F06  0E00               	movlw	0
  1185   001F08  6FB3               	movwf	_prec& (0+255),b
  1186   001F0A                     
  1187                           ; BSR set to: 0
  1188                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1093:            
      +                           ++*fmt;
  1189   001F0A  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1190   001F0E  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1191   001F12  2ADE               	incf	postinc2,f,c
  1192   001F14  0E00               	movlw	0
  1193   001F16  22DD               	addwfc	postdec2,f,c
  1194   001F18                     
  1195                           ; BSR set to: 0
  1196                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1094:            
      +                           if ((*fmt)[0] == '*') {
  1197   001F18  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1198   001F1C  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1199   001F20  CFDE FFF6          	movff	postinc2,tblptrl
  1200   001F24  CFDD FFF7          	movff	postdec2,tblptrh
  1201   001F28                     	if	0	;tblptru may be non-zero
  1202   001F28                     	endif
  1203   001F28                     	if	0	;tblptru may be non-zero
  1204   001F28                     	endif
  1205   001F28  0008               	tblrd		*
  1206   001F2A  50F5               	movf	tablat,w,c
  1207   001F2C  0A2A               	xorlw	42
  1208   001F2E  A4D8               	btfss	status,2,c
  1209   001F30  EF9C  F00F         	goto	u3621
  1210   001F34  EF9E  F00F         	goto	u3620
  1211   001F38                     u3621:
  1212   001F38  EFBB  F00F         	goto	l3343
  1213   001F3C                     u3620:
  1214   001F3C                     
  1215                           ; BSR set to: 0
  1216                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1095:            
      +                               ++*fmt;
  1217   001F3C  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1218   001F40  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1219   001F44  2ADE               	incf	postinc2,f,c
  1220   001F46  0E00               	movlw	0
  1221   001F48  22DD               	addwfc	postdec2,f,c
  1222                           
  1223                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1096:            
      +                               prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1224   001F4A  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1225   001F4E  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1226   001F52  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  1227   001F56  0E02               	movlw	2
  1228   001F58  26DE               	addwf	postinc2,f,c
  1229   001F5A  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  1230   001F5E  0E00               	movlw	0
  1231   001F60  22DD               	addwfc	postdec2,f,c
  1232   001F62  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1233   001F66  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1234   001F6A  CFDE F0B3          	movff	postinc2,_prec
  1235   001F6E  CFDD F0B4          	movff	postdec2,_prec+1
  1236                           
  1237                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1097:            
      +                           } else {
  1238   001F72  EFEE  F00F         	goto	l3351
  1239   001F76                     l3343:
  1240                           
  1241                           ; BSR set to: 0
  1242                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1098:            
      +                               prec = atoi(*fmt);
  1243   001F76  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1244   001F7A  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1245   001F7E  CFDE F007          	movff	postinc2,atoi@s
  1246   001F82  CFDD F008          	movff	postdec2,atoi@s+1
  1247   001F86  ECBB  F012         	call	_atoi	;wreg free
  1248   001F8A  C007  F0B3         	movff	?_atoi,_prec
  1249   001F8E  C008  F0B4         	movff	?_atoi+1,_prec+1
  1250                           
  1251                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1099:            
      +                               while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  1252   001F92  EFD2  F00F         	goto	l3349
  1253   001F96                     l3345:
  1254                           
  1255                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1100:            
      +                                   ++*fmt;
  1256   001F96  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1257   001F9A  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1258   001F9E  2ADE               	incf	postinc2,f,c
  1259   001FA0  0E00               	movlw	0
  1260   001FA2  22DD               	addwfc	postdec2,f,c
  1261   001FA4                     l3349:
  1262   001FA4  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1263   001FA8  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1264   001FAC  CFDE FFF6          	movff	postinc2,tblptrl
  1265   001FB0  CFDD FFF7          	movff	postdec2,tblptrh
  1266   001FB4                     	if	0	;tblptru may be non-zero
  1267   001FB4                     	endif
  1268   001FB4                     	if	0	;tblptru may be non-zero
  1269   001FB4                     	endif
  1270   001FB4  0008               	tblrd		*
  1271   001FB6  CFF5 F04B          	movff	tablat,??_vfpfcnvrt
  1272   001FBA  0ED0               	movlw	208
  1273   001FBC  244B               	addwf	??_vfpfcnvrt^0,w,c
  1274   001FBE  6E4C               	movwf	(??_vfpfcnvrt+1)^0,c
  1275   001FC0  6A4D               	clrf	(??_vfpfcnvrt+2)^0,c
  1276   001FC2  0EFF               	movlw	255
  1277   001FC4  224D               	addwfc	(??_vfpfcnvrt+2)^0,f,c
  1278   001FC6  504D               	movf	(??_vfpfcnvrt+2)^0,w,c
  1279   001FC8  E109               	bnz	u3630
  1280   001FCA  0E0A               	movlw	10
  1281   001FCC  5C4C               	subwf	(??_vfpfcnvrt+1)^0,w,c
  1282   001FCE  A0D8               	btfss	status,0,c
  1283   001FD0  EFEC  F00F         	goto	u3631
  1284   001FD4  EFEE  F00F         	goto	u3630
  1285   001FD8                     u3631:
  1286   001FD8  EFCB  F00F         	goto	l3345
  1287   001FDC                     u3630:
  1288   001FDC                     l3351:
  1289                           
  1290                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1392:   cp = *fmt
      +                          ;
  1291   001FDC  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1292   001FE0  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1293   001FE4  CFDE F057          	movff	postinc2,vfpfcnvrt@cp
  1294   001FE8  CFDD F058          	movff	postdec2,vfpfcnvrt@cp+1
  1295   001FEC                     
  1296                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1393:   c = *cp;
  1297   001FEC  C057  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1298   001FF0  C058  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1299   001FF4                     	if	0	;tblptru may be non-zero
  1300   001FF4                     	endif
  1301   001FF4                     	if	0	;tblptru may be non-zero
  1302   001FF4                     	endif
  1303   001FF4  0008               	tblrd		*
  1304   001FF6  CFF5 F056          	movff	tablat,vfpfcnvrt@c
  1305                           
  1306                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1394:   switch(c)
      +                           {
  1307   001FFA  EF0B  F010         	goto	l3363
  1308   001FFE                     l3355:
  1309                           
  1310                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1398:     cp++;
  1311   001FFE  4A57               	infsnz	vfpfcnvrt@cp^0,f,c
  1312   002000  2A58               	incf	(vfpfcnvrt@cp+1)^0,f,c
  1313                           
  1314                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1399:     break;
  1315   002002  EF24  F010         	goto	l3365
  1316   002006                     l3357:
  1317                           
  1318                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1424:     c = 'l'
      +                          ;
  1319   002006  0E6C               	movlw	108
  1320   002008  6E56               	movwf	vfpfcnvrt@c^0,c
  1321                           
  1322                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1425:     break;
  1323   00200A  EF24  F010         	goto	l3365
  1324   00200E                     l3359:
  1325                           
  1326                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1427:     c = 0;
  1327   00200E  0E00               	movlw	0
  1328   002010  6E56               	movwf	vfpfcnvrt@c^0,c
  1329                           
  1330                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1428:     break;
  1331   002012  EF24  F010         	goto	l3365
  1332   002016                     l3363:
  1333   002016  5056               	movf	vfpfcnvrt@c^0,w,c
  1334   002018  6E4B               	movwf	??_vfpfcnvrt^0,c
  1335   00201A  6A4C               	clrf	(??_vfpfcnvrt+1)^0,c
  1336                           
  1337                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1338                           ; Switch size 1, requested type "simple"
  1339                           ; Number of cases is 1, Range of values is 0 to 0
  1340                           ; switch strategies available:
  1341                           ; Name         Instructions Cycles
  1342                           ; simple_byte            4     3 (average)
  1343                           ;	Chosen strategy is simple_byte
  1344   00201C  504C               	movf	(??_vfpfcnvrt+1)^0,w,c
  1345   00201E  0A00               	xorlw	0	; case 0
  1346   002020  B4D8               	btfsc	status,2,c
  1347   002022  EF15  F010         	goto	l3689
  1348   002026  EF07  F010         	goto	l3359
  1349   00202A                     l3689:
  1350                           
  1351                           ; Switch size 1, requested type "simple"
  1352                           ; Number of cases is 3, Range of values is 76 to 108
  1353                           ; switch strategies available:
  1354                           ; Name         Instructions Cycles
  1355                           ; simple_byte           10     6 (average)
  1356                           ;	Chosen strategy is simple_byte
  1357   00202A  504B               	movf	??_vfpfcnvrt^0,w,c
  1358   00202C  0A4C               	xorlw	76	; case 76
  1359   00202E  B4D8               	btfsc	status,2,c
  1360   002030  EFFF  F00F         	goto	l3355
  1361   002034  0A2A               	xorlw	42	; case 102
  1362   002036  B4D8               	btfsc	status,2,c
  1363   002038  EF03  F010         	goto	l3357
  1364   00203C  0A0A               	xorlw	10	; case 108
  1365   00203E  B4D8               	btfsc	status,2,c
  1366   002040  EFFF  F00F         	goto	l3355
  1367   002044  EF07  F010         	goto	l3359
  1368   002048                     l3365:
  1369   002048  C057  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1370   00204C  C058  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1371   002050                     	if	0	;tblptru may be non-zero
  1372   002050                     	endif
  1373   002050                     	if	0	;tblptru may be non-zero
  1374   002050                     	endif
  1375   002050  0008               	tblrd		*
  1376   002052  50F5               	movf	tablat,w,c
  1377   002054  0A66               	xorlw	102
  1378   002056  A4D8               	btfss	status,2,c
  1379   002058  EF30  F010         	goto	u3641
  1380   00205C  EF32  F010         	goto	u3640
  1381   002060                     u3641:
  1382   002060  EFBA  F010         	goto	l3385
  1383   002064                     u3640:
  1384   002064  EF68  F010         	goto	l3373
  1385   002068                     l3367:
  1386                           
  1387                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1459:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1388   002068  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1389   00206C  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1390   002070  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  1391   002074  0E04               	movlw	4
  1392   002076  26DE               	addwf	postinc2,f,c
  1393   002078  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  1394   00207C  0E00               	movlw	0
  1395   00207E  22DD               	addwfc	postdec2,f,c
  1396   002080  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1397   002084  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1398   002088  CFDE F04E          	movff	postinc2,vfpfcnvrt@convarg
  1399   00208C  CFDE F04F          	movff	postinc2,vfpfcnvrt@convarg+1
  1400   002090  CFDE F050          	movff	postinc2,vfpfcnvrt@convarg+2
  1401   002094  CFDE F051          	movff	postinc2,vfpfcnvrt@convarg+3
  1402                           
  1403                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1460:      break;
  1404   002098  EF7D  F010         	goto	l3375
  1405   00209C                     l3369:
  1406                           
  1407                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1462:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  1408   00209C  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1409   0020A0  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1410   0020A4  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  1411   0020A8  0E04               	movlw	4
  1412   0020AA  26DE               	addwf	postinc2,f,c
  1413   0020AC  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  1414   0020B0  0E00               	movlw	0
  1415   0020B2  22DD               	addwfc	postdec2,f,c
  1416   0020B4  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1417   0020B8  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1418   0020BC  CFDE F04E          	movff	postinc2,vfpfcnvrt@convarg
  1419   0020C0  CFDE F04F          	movff	postinc2,vfpfcnvrt@convarg+1
  1420   0020C4  CFDE F050          	movff	postinc2,vfpfcnvrt@convarg+2
  1421   0020C8  CFDE F051          	movff	postinc2,vfpfcnvrt@convarg+3
  1422                           
  1423                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1463:      break;
  1424   0020CC  EF7D  F010         	goto	l3375
  1425   0020D0                     l3373:
  1426   0020D0  5056               	movf	vfpfcnvrt@c^0,w,c
  1427   0020D2  6E4B               	movwf	??_vfpfcnvrt^0,c
  1428   0020D4  6A4C               	clrf	(??_vfpfcnvrt+1)^0,c
  1429                           
  1430                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1431                           ; Switch size 1, requested type "simple"
  1432                           ; Number of cases is 1, Range of values is 0 to 0
  1433                           ; switch strategies available:
  1434                           ; Name         Instructions Cycles
  1435                           ; simple_byte            4     3 (average)
  1436                           ;	Chosen strategy is simple_byte
  1437   0020D6  504C               	movf	(??_vfpfcnvrt+1)^0,w,c
  1438   0020D8  0A00               	xorlw	0	; case 0
  1439   0020DA  B4D8               	btfsc	status,2,c
  1440   0020DC  EF72  F010         	goto	l3691
  1441   0020E0  EF7D  F010         	goto	l3375
  1442   0020E4                     l3691:
  1443                           
  1444                           ; Switch size 1, requested type "simple"
  1445                           ; Number of cases is 2, Range of values is 76 to 108
  1446                           ; switch strategies available:
  1447                           ; Name         Instructions Cycles
  1448                           ; simple_byte            7     4 (average)
  1449                           ;	Chosen strategy is simple_byte
  1450   0020E4  504B               	movf	??_vfpfcnvrt^0,w,c
  1451   0020E6  0A4C               	xorlw	76	; case 76
  1452   0020E8  B4D8               	btfsc	status,2,c
  1453   0020EA  EF4E  F010         	goto	l3369
  1454   0020EE  0A20               	xorlw	32	; case 108
  1455   0020F0  B4D8               	btfsc	status,2,c
  1456   0020F2  EF34  F010         	goto	l3367
  1457   0020F6  EF7D  F010         	goto	l3375
  1458   0020FA                     l3375:
  1459                           
  1460                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1465:    *fmt = c
      +                          p+1;
  1461   0020FA  0E01               	movlw	1
  1462   0020FC  2457               	addwf	vfpfcnvrt@cp^0,w,c
  1463   0020FE  6E4B               	movwf	??_vfpfcnvrt^0,c
  1464   002100  0E00               	movlw	0
  1465   002102  2058               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1466   002104  6E4C               	movwf	(??_vfpfcnvrt+1)^0,c
  1467   002106  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1468   00210A  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1469   00210E  C04B  FFDE         	movff	??_vfpfcnvrt,postinc2
  1470   002112  C04C  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1471                           
  1472                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1466:    switch (
      +                          *cp) {
  1473   002116  EFA4  F010         	goto	l3383
  1474   00211A                     l3377:
  1475                           
  1476                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1493:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  1477   00211A  C045  F03C         	movff	vfpfcnvrt@fp,efgtoa@fp
  1478   00211E  C046  F03D         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  1479   002122  C04E  F03E         	movff	vfpfcnvrt@convarg,efgtoa@f
  1480   002126  C04F  F03F         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  1481   00212A  C050  F040         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  1482   00212E  C051  F041         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  1483   002132  C057  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1484   002136  C058  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1485   00213A                     	if	0	;tblptru may be non-zero
  1486   00213A                     	endif
  1487   00213A                     	if	0	;tblptru may be non-zero
  1488   00213A                     	endif
  1489   00213A  0008               	tblrd		*
  1490   00213C  CFF5 F042          	movff	tablat,efgtoa@c
  1491   002140  EC0E  F004         	call	_efgtoa	;wreg free
  1492   002144  EFD7  F010         	goto	l919
  1493   002148                     l3383:
  1494   002148  C057  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1495   00214C  C058  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1496   002150                     	if	0	;tblptru may be non-zero
  1497   002150                     	endif
  1498   002150                     	if	0	;tblptru may be non-zero
  1499   002150                     	endif
  1500   002150  0008               	tblrd		*
  1501   002152  50F5               	movf	tablat,w,c
  1502   002154  6E4B               	movwf	??_vfpfcnvrt^0,c
  1503   002156  6A4C               	clrf	(??_vfpfcnvrt+1)^0,c
  1504                           
  1505                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1506                           ; Switch size 1, requested type "simple"
  1507                           ; Number of cases is 1, Range of values is 0 to 0
  1508                           ; switch strategies available:
  1509                           ; Name         Instructions Cycles
  1510                           ; simple_byte            4     3 (average)
  1511                           ;	Chosen strategy is simple_byte
  1512   002158  504C               	movf	(??_vfpfcnvrt+1)^0,w,c
  1513   00215A  0A00               	xorlw	0	; case 0
  1514   00215C  B4D8               	btfsc	status,2,c
  1515   00215E  EFB3  F010         	goto	l3693
  1516   002162  EFBA  F010         	goto	l3385
  1517   002166                     l3693:
  1518                           
  1519                           ; Switch size 1, requested type "simple"
  1520                           ; Number of cases is 1, Range of values is 102 to 102
  1521                           ; switch strategies available:
  1522                           ; Name         Instructions Cycles
  1523                           ; simple_byte            4     3 (average)
  1524                           ;	Chosen strategy is simple_byte
  1525   002166  504B               	movf	??_vfpfcnvrt^0,w,c
  1526   002168  0A66               	xorlw	102	; case 102
  1527   00216A  B4D8               	btfsc	status,2,c
  1528   00216C  EF8D  F010         	goto	l3377
  1529   002170  EFBA  F010         	goto	l3385
  1530   002174                     l3385:
  1531                           
  1532                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1533   002174  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1534   002178  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1535   00217C  2ADE               	incf	postinc2,f,c
  1536   00217E  0E00               	movlw	0
  1537   002180  22DD               	addwfc	postdec2,f,c
  1538   002182  EFD7  F010         	goto	l919
  1539   002186                     l3389:
  1540                           
  1541                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1542   002186  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1543   00218A  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1544   00218E  CFDE FFF6          	movff	postinc2,tblptrl
  1545   002192  CFDD FFF7          	movff	postdec2,tblptrh
  1546   002196                     	if	0	;tblptru may be non-zero
  1547   002196                     	endif
  1548   002196                     	if	0	;tblptru may be non-zero
  1549   002196                     	endif
  1550   002196  0008               	tblrd		*
  1551   002198  50F5               	movf	tablat,w,c
  1552   00219A  6E01               	movwf	fputc@c^0,c
  1553   00219C  6A02               	clrf	(fputc@c+1)^0,c
  1554   00219E  C045  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1555   0021A2  C046  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1556   0021A6  EC50  F015         	call	_fputc	;wreg free
  1557   0021AA  EFBA  F010         	goto	l3385
  1558   0021AE                     l919:
  1559   0021AE  0012               	return		;funcret
  1560   0021B0                     __end_of_vfpfcnvrt:
  1561                           	callstack 0
  1562                           
  1563 ;; *************** function _efgtoa *****************
  1564 ;; Defined at:
  1565 ;;		line 506 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1566 ;; Parameters:    Size  Location     Type
  1567 ;;  fp              2   59[COMRAM] PTR struct _IO_FILE
  1568 ;;		 -> sprintf@f(11), 
  1569 ;;  f               4   61[COMRAM] PTR struct _IO_FILE
  1570 ;;  c               1   65[COMRAM] unsigned char 
  1571 ;; Auto vars:     Size  Location     Type
  1572 ;;  u               4   40[BANK0 ] struct flui
  1573 ;;  g               4   36[BANK0 ] struct flui
  1574 ;;  l               4   29[BANK0 ] struct flui
  1575 ;;  h               4   25[BANK0 ] struct flui
  1576 ;;  ou              4   19[BANK0 ] struct flui
  1577 ;;  n               2   34[BANK0 ] int 
  1578 ;;  i               2   23[BANK0 ] int 
  1579 ;;  w               2   17[BANK0 ] int 
  1580 ;;  e               2   15[BANK0 ] int 
  1581 ;;  m               2   13[BANK0 ] int 
  1582 ;;  d               2   11[BANK0 ] int 
  1583 ;;  t               2    4[BANK0 ] int 
  1584 ;;  p               2    2[BANK0 ] int 
  1585 ;;  ne              2    0[BANK0 ] int 
  1586 ;;  sign            1   33[BANK0 ] unsigned char 
  1587 ;;  nmode           1   10[BANK0 ] unsigned char 
  1588 ;;  mode            1    9[BANK0 ] unsigned char 
  1589 ;;  pp              1    8[BANK0 ] unsigned char 
  1590 ;;  esign           1    0        unsigned char 
  1591 ;; Return value:  Size  Location     Type
  1592 ;;                  1    wreg      void 
  1593 ;; Registers used:
  1594 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1595 ;; Tracked objects:
  1596 ;;		On entry : 0/0
  1597 ;;		On exit  : 0/0
  1598 ;;		Unchanged: 0/0
  1599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1600 ;;      Params:         7       0       0       0       0       0       0       0       0
  1601 ;;      Locals:         0      44       0       0       0       0       0       0       0
  1602 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1603 ;;      Totals:         9      44       0       0       0       0       0       0       0
  1604 ;;Total ram usage:       53 bytes
  1605 ;; Hardware stack levels used: 1
  1606 ;; Hardware stack levels required when called: 4
  1607 ;; This function calls:
  1608 ;;		___fladd
  1609 ;;		___fldiv
  1610 ;;		___fleq
  1611 ;;		___flge
  1612 ;;		___flmul
  1613 ;;		___flneg
  1614 ;;		___flsub
  1615 ;;		___fltol
  1616 ;;		___fpclassifyf
  1617 ;;		_floorf
  1618 ;;		_labs
  1619 ;;		_memcpy
  1620 ;;		_pad
  1621 ;;		_strcpy
  1622 ;; This function is called by:
  1623 ;;		_vfpfcnvrt
  1624 ;; This function uses a non-reentrant model
  1625 ;;
  1626                           
  1627                           	psect	text4
  1628   00081C                     __ptext4:
  1629                           	callstack 0
  1630   00081C                     _efgtoa:
  1631                           	callstack 23
  1632   00081C                     
  1633                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 506: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources
      +                          \c99\common\doprnt.c: 507: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 508:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .40\pic\sources\c99\common\doprnt.c: 509:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 510:     long double h, l;
  1634   00081C  0E00               	movlw	0
  1635   00081E  0100               	movlb	0	; () banked
  1636   000820  6F81               	movwf	efgtoa@sign& (0+255),b
  1637   000822                     
  1638                           ; BSR set to: 0
  1639                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 515:     g.f = f;
  1640   000822  C03E  F084         	movff	efgtoa@f,efgtoa@g
  1641   000826  C03F  F085         	movff	efgtoa@f+1,efgtoa@g+1
  1642   00082A  C040  F086         	movff	efgtoa@f+2,efgtoa@g+2
  1643   00082E  C041  F087         	movff	efgtoa@f+3,efgtoa@g+3
  1644   000832                     
  1645                           ; BSR set to: 0
  1646                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 516:     if (g.f 
      +                          < 0.0) {
  1647   000832  BF87               	btfsc	(efgtoa@g+3)& (0+255),7,b
  1648   000834  EF20  F004         	goto	u3200
  1649   000838  EF1E  F004         	goto	u3201
  1650   00083C                     u3201:
  1651   00083C  EF34  F004         	goto	l3065
  1652   000840                     u3200:
  1653   000840                     
  1654                           ; BSR set to: 0
  1655                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 517:         sign
      +                           = 1;
  1656   000840  0E01               	movlw	1
  1657   000842  6F81               	movwf	efgtoa@sign& (0+255),b
  1658   000844                     
  1659                           ; BSR set to: 0
  1660                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 518:         g.f 
      +                          = -g.f;
  1661   000844  C084  F001         	movff	efgtoa@g,___flneg@f1
  1662   000848  C085  F002         	movff	efgtoa@g+1,___flneg@f1+1
  1663   00084C  C086  F003         	movff	efgtoa@g+2,___flneg@f1+2
  1664   000850  C087  F004         	movff	efgtoa@g+3,___flneg@f1+3
  1665   000854  ECBE  F018         	call	___flneg	;wreg free
  1666   000858  C001  F084         	movff	?___flneg,efgtoa@g
  1667   00085C  C002  F085         	movff	?___flneg+1,efgtoa@g+1
  1668   000860  C003  F086         	movff	?___flneg+2,efgtoa@g+2
  1669   000864  C004  F087         	movff	?___flneg+3,efgtoa@g+3
  1670   000868                     l3065:
  1671                           
  1672                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 522:     n = 0;
  1673   000868  0E00               	movlw	0
  1674   00086A  0100               	movlb	0	; () banked
  1675   00086C  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  1676   00086E  0E00               	movlw	0
  1677   000870  6F82               	movwf	efgtoa@n& (0+255),b
  1678   000872                     
  1679                           ; BSR set to: 0
  1680                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 523:     w = widt
      +                          h;
  1681   000872  C0B1  F071         	movff	_width,efgtoa@w
  1682   000876  C0B2  F072         	movff	_width+1,efgtoa@w+1
  1683   00087A                     
  1684                           ; BSR set to: 0
  1685                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 524:     if (sign
  1686   00087A  5181               	movf	efgtoa@sign& (0+255),w,b
  1687   00087C  B4D8               	btfsc	status,2,c
  1688   00087E  EF43  F004         	goto	u3211
  1689   000882  EF45  F004         	goto	u3210
  1690   000886                     u3211:
  1691   000886  EF59  F004         	goto	l3079
  1692   00088A                     u3210:
  1693   00088A                     
  1694                           ; BSR set to: 0
  1695                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 528:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 529:   sign = sign ? '-
      +                          ' : '+';
  1696   00088A  5181               	movf	efgtoa@sign& (0+255),w,b
  1697   00088C  A4D8               	btfss	status,2,c
  1698   00088E  EF4B  F004         	goto	u3221
  1699   000892  EF4D  F004         	goto	u3220
  1700   000896                     u3221:
  1701   000896  EF53  F004         	goto	l3075
  1702   00089A                     u3220:
  1703   00089A                     
  1704                           ; BSR set to: 0
  1705   00089A  0E00               	movlw	0
  1706   00089C  6F67               	movwf	(_efgtoa$1026+1)& (0+255),b
  1707   00089E  0E2B               	movlw	43
  1708   0008A0  6F66               	movwf	_efgtoa$1026& (0+255),b
  1709   0008A2  EF57  F004         	goto	l3077
  1710   0008A6                     l3075:
  1711                           
  1712                           ; BSR set to: 0
  1713   0008A6  0E00               	movlw	0
  1714   0008A8  6F67               	movwf	(_efgtoa$1026+1)& (0+255),b
  1715   0008AA  0E2D               	movlw	45
  1716   0008AC  6F66               	movwf	_efgtoa$1026& (0+255),b
  1717   0008AE                     l3077:
  1718                           
  1719                           ; BSR set to: 0
  1720   0008AE  C066  F081         	movff	_efgtoa$1026,efgtoa@sign
  1721   0008B2                     l3079:
  1722                           
  1723                           ; BSR set to: 0
  1724                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 538:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  1725   0008B2  C084  F001         	movff	efgtoa@g,___fpclassifyf@x
  1726   0008B6  C085  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  1727   0008BA  C086  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  1728   0008BE  C087  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  1729   0008C2  EC65  F014         	call	___fpclassifyf	;wreg free
  1730   0008C6  0401               	decf	?___fpclassifyf^0,w,c
  1731   0008C8  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  1732   0008CA  A4D8               	btfss	status,2,c
  1733   0008CC  EF6A  F004         	goto	u3231
  1734   0008D0  EF6C  F004         	goto	u3230
  1735   0008D4                     u3231:
  1736   0008D4  EF9F  F004         	goto	l3097
  1737   0008D8                     u3230:
  1738   0008D8                     
  1739                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 539:   if (sign) 
      +                          {
  1740   0008D8  0100               	movlb	0	; () banked
  1741   0008DA  5181               	movf	efgtoa@sign& (0+255),w,b
  1742   0008DC  B4D8               	btfsc	status,2,c
  1743   0008DE  EF73  F004         	goto	u3241
  1744   0008E2  EF75  F004         	goto	u3240
  1745   0008E6                     u3241:
  1746   0008E6  EF7E  F004         	goto	l3089
  1747   0008EA                     u3240:
  1748   0008EA                     
  1749                           ; BSR set to: 0
  1750                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 540:    dbuf[0] =
      +                           sign;
  1751   0008EA  C081  F100         	movff	efgtoa@sign,_dbuf
  1752   0008EE                     
  1753                           ; BSR set to: 0
  1754                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 541:    w--;
  1755   0008EE  0771               	decf	efgtoa@w& (0+255),f,b
  1756   0008F0  A0D8               	btfss	status,0,c
  1757   0008F2  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  1758   0008F4                     
  1759                           ; BSR set to: 0
  1760                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 542:    n = 1;
  1761   0008F4  0E00               	movlw	0
  1762   0008F6  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  1763   0008F8  0E01               	movlw	1
  1764   0008FA  6F82               	movwf	efgtoa@n& (0+255),b
  1765   0008FC                     l3089:
  1766                           
  1767                           ; BSR set to: 0
  1768                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 550:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 551:             strcpy(&d
      +                          buf[n], "inf");
  1769   0008FC  0E00               	movlw	low _dbuf
  1770   0008FE  2582               	addwf	efgtoa@n& (0+255),w,b
  1771   000900  6E01               	movwf	strcpy@dest^0,c
  1772   000902  0E01               	movlw	high _dbuf
  1773   000904  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  1774   000906  6E02               	movwf	(strcpy@dest+1)^0,c
  1775   000908  0E12               	movlw	low STR_3
  1776   00090A  6E03               	movwf	strcpy@src^0,c
  1777   00090C  0E08               	movlw	high STR_3
  1778   00090E  6E04               	movwf	(strcpy@src+1)^0,c
  1779   000910  EC81  F018         	call	_strcpy	;wreg free
  1780   000914                     l3091:
  1781                           
  1782                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 552:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 553:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  1783   000914  0100               	movlb	0	; () banked
  1784   000916  0EFD               	movlw	253
  1785   000918  2771               	addwf	efgtoa@w& (0+255),f,b
  1786   00091A  0EFF               	movlw	255
  1787   00091C  2372               	addwfc	(efgtoa@w+1)& (0+255),f,b
  1788   00091E                     
  1789                           ; BSR set to: 0
  1790                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 554:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  1791   00091E  C03C  F011         	movff	efgtoa@fp,pad@fp
  1792   000922  C03D  F012         	movff	efgtoa@fp+1,pad@fp+1
  1793   000926  0E00               	movlw	low _dbuf
  1794   000928  6E13               	movwf	pad@buf^0,c
  1795   00092A  0E01               	movlw	high _dbuf
  1796   00092C  6E14               	movwf	(pad@buf+1)^0,c
  1797   00092E  C071  F015         	movff	efgtoa@w,pad@p
  1798   000932  C072  F016         	movff	efgtoa@w+1,pad@p+1
  1799   000936  EC96  F016         	call	_pad	;wreg free
  1800   00093A  EF0A  F009         	goto	l851
  1801   00093E                     l3097:
  1802                           
  1803                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 556:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  1804   00093E  C084  F001         	movff	efgtoa@g,___fpclassifyf@x
  1805   000942  C085  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  1806   000946  C086  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  1807   00094A  C087  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  1808   00094E  EC65  F014         	call	___fpclassifyf	;wreg free
  1809   000952  5001               	movf	?___fpclassifyf^0,w,c
  1810   000954  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  1811   000956  A4D8               	btfss	status,2,c
  1812   000958  EFB0  F004         	goto	u3251
  1813   00095C  EFB2  F004         	goto	u3250
  1814   000960                     u3251:
  1815   000960  EFD2  F004         	goto	l3115
  1816   000964                     u3250:
  1817   000964                     
  1818                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 557:   if (sign) 
      +                          {
  1819   000964  0100               	movlb	0	; () banked
  1820   000966  5181               	movf	efgtoa@sign& (0+255),w,b
  1821   000968  B4D8               	btfsc	status,2,c
  1822   00096A  EFB9  F004         	goto	u3261
  1823   00096E  EFBB  F004         	goto	u3260
  1824   000972                     u3261:
  1825   000972  EFC4  F004         	goto	l3107
  1826   000976                     u3260:
  1827   000976                     
  1828                           ; BSR set to: 0
  1829                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 558:    dbuf[0] =
      +                           sign;
  1830   000976  C081  F100         	movff	efgtoa@sign,_dbuf
  1831   00097A                     
  1832                           ; BSR set to: 0
  1833                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 559:    w--;
  1834   00097A  0771               	decf	efgtoa@w& (0+255),f,b
  1835   00097C  A0D8               	btfss	status,0,c
  1836   00097E  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  1837   000980                     
  1838                           ; BSR set to: 0
  1839                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 560:    n = 1;
  1840   000980  0E00               	movlw	0
  1841   000982  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  1842   000984  0E01               	movlw	1
  1843   000986  6F82               	movwf	efgtoa@n& (0+255),b
  1844   000988                     l3107:
  1845                           
  1846                           ; BSR set to: 0
  1847                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 568:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 569:             strcpy(&d
      +                          buf[n], "nan");
  1848   000988  0E00               	movlw	low _dbuf
  1849   00098A  2582               	addwf	efgtoa@n& (0+255),w,b
  1850   00098C  6E01               	movwf	strcpy@dest^0,c
  1851   00098E  0E01               	movlw	high _dbuf
  1852   000990  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  1853   000992  6E02               	movwf	(strcpy@dest+1)^0,c
  1854   000994  0E16               	movlw	low STR_6
  1855   000996  6E03               	movwf	strcpy@src^0,c
  1856   000998  0E08               	movlw	high STR_6
  1857   00099A  6E04               	movwf	(strcpy@src+1)^0,c
  1858   00099C  EC81  F018         	call	_strcpy	;wreg free
  1859   0009A0  EF8A  F004         	goto	l3091
  1860   0009A4                     l3115:
  1861                           
  1862                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 576:     u.f = 1.
      +                          0;
  1863   0009A4  0E00               	movlw	0
  1864   0009A6  0100               	movlb	0	; () banked
  1865   0009A8  6F88               	movwf	efgtoa@u& (0+255),b
  1866   0009AA  0E00               	movlw	0
  1867   0009AC  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  1868   0009AE  0E80               	movlw	128
  1869   0009B0  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  1870   0009B2  0E3F               	movlw	63
  1871   0009B4  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  1872                           
  1873                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 577:     e = 0;
  1874   0009B6  0E00               	movlw	0
  1875   0009B8  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  1876   0009BA  0E00               	movlw	0
  1877   0009BC  6F6F               	movwf	efgtoa@e& (0+255),b
  1878   0009BE                     
  1879                           ; BSR set to: 0
  1880                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 578:  if (!(g.f =
      +                          = 0.0)) {
  1881   0009BE  C084  F001         	movff	efgtoa@g,___fleq@ff1
  1882   0009C2  C085  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  1883   0009C6  C086  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  1884   0009CA  C087  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  1885   0009CE  0E00               	movlw	0
  1886   0009D0  6E05               	movwf	___fleq@ff2^0,c
  1887   0009D2  0E00               	movlw	0
  1888   0009D4  6E06               	movwf	(___fleq@ff2+1)^0,c
  1889   0009D6  0E00               	movlw	0
  1890   0009D8  6E07               	movwf	(___fleq@ff2+2)^0,c
  1891   0009DA  0E00               	movlw	0
  1892   0009DC  6E08               	movwf	(___fleq@ff2+3)^0,c
  1893   0009DE  ECB5  F015         	call	___fleq	;wreg free
  1894   0009E2  B0D8               	btfsc	status,0,c
  1895   0009E4  EFF6  F004         	goto	u3271
  1896   0009E8  EFF8  F004         	goto	u3270
  1897   0009EC                     u3271:
  1898   0009EC  EFD7  F005         	goto	l854
  1899   0009F0                     u3270:
  1900   0009F0  EF05  F005         	goto	l3123
  1901   0009F4                     l856:
  1902                           
  1903                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 580:    u = ou;
  1904   0009F4  C073  F088         	movff	efgtoa@ou,efgtoa@u
  1905   0009F8  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  1906   0009FC  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  1907   000A00  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  1908   000A04                     
  1909                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 581:    ++e;
  1910   000A04  0100               	movlb	0	; () banked
  1911   000A06  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  1912   000A08  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  1913   000A0A                     l3123:
  1914                           
  1915                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 579:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  1916   000A0A  C088  F001         	movff	efgtoa@u,___flmul@b
  1917   000A0E  C089  F002         	movff	efgtoa@u+1,___flmul@b+1
  1918   000A12  C08A  F003         	movff	efgtoa@u+2,___flmul@b+2
  1919   000A16  C08B  F004         	movff	efgtoa@u+3,___flmul@b+3
  1920   000A1A  0E00               	movlw	0
  1921   000A1C  6E05               	movwf	___flmul@a^0,c
  1922   000A1E  0E00               	movlw	0
  1923   000A20  6E06               	movwf	(___flmul@a+1)^0,c
  1924   000A22  0E20               	movlw	32
  1925   000A24  6E07               	movwf	(___flmul@a+2)^0,c
  1926   000A26  0E41               	movlw	65
  1927   000A28  6E08               	movwf	(___flmul@a+3)^0,c
  1928   000A2A  EC6B  F00B         	call	___flmul	;wreg free
  1929   000A2E  C001  F073         	movff	?___flmul,efgtoa@ou
  1930   000A32  C002  F074         	movff	?___flmul+1,efgtoa@ou+1
  1931   000A36  C003  F075         	movff	?___flmul+2,efgtoa@ou+2
  1932   000A3A  C004  F076         	movff	?___flmul+3,efgtoa@ou+3
  1933   000A3E  0100               	movlb	0	; () banked
  1934   000A40  5173               	movf	efgtoa@ou& (0+255),w,b
  1935   000A42  5D84               	subwf	efgtoa@g& (0+255),w,b
  1936   000A44  6E01               	movwf	labs@a^0,c
  1937   000A46  5174               	movf	(efgtoa@ou+1)& (0+255),w,b
  1938   000A48  5985               	subwfb	(efgtoa@g+1)& (0+255),w,b
  1939   000A4A  6E02               	movwf	(labs@a+1)^0,c
  1940   000A4C  5175               	movf	(efgtoa@ou+2)& (0+255),w,b
  1941   000A4E  5986               	subwfb	(efgtoa@g+2)& (0+255),w,b
  1942   000A50  6E03               	movwf	(labs@a+2)^0,c
  1943   000A52  5176               	movf	(efgtoa@ou+3)& (0+255),w,b
  1944   000A54  5987               	subwfb	(efgtoa@g+3)& (0+255),w,b
  1945   000A56  6E04               	movwf	(labs@a+3)^0,c
  1946   000A58  EC0D  F017         	call	_labs	;wreg free
  1947   000A5C  BE04               	btfsc	(?_labs+3)^0,7,c
  1948   000A5E  EF3C  F005         	goto	u3281
  1949   000A62  5004               	movf	(?_labs+3)^0,w,c
  1950   000A64  1003               	iorwf	(?_labs+2)^0,w,c
  1951   000A66  1002               	iorwf	(?_labs+1)^0,w,c
  1952   000A68  E109               	bnz	u3280
  1953   000A6A  0E02               	movlw	2
  1954   000A6C  5C01               	subwf	?_labs^0,w,c
  1955   000A6E  A0D8               	btfss	status,0,c
  1956   000A70  EF3C  F005         	goto	u3281
  1957   000A74  EF3E  F005         	goto	u3280
  1958   000A78                     u3281:
  1959   000A78  EFFA  F004         	goto	l856
  1960   000A7C                     u3280:
  1961   000A7C  C073  F01A         	movff	efgtoa@ou,___flge@ff1
  1962   000A80  C074  F01B         	movff	efgtoa@ou+1,___flge@ff1+1
  1963   000A84  C075  F01C         	movff	efgtoa@ou+2,___flge@ff1+2
  1964   000A88  C076  F01D         	movff	efgtoa@ou+3,___flge@ff1+3
  1965   000A8C  C084  F01E         	movff	efgtoa@g,___flge@ff2
  1966   000A90  C085  F01F         	movff	efgtoa@g+1,___flge@ff2+1
  1967   000A94  C086  F020         	movff	efgtoa@g+2,___flge@ff2+2
  1968   000A98  C087  F021         	movff	efgtoa@g+3,___flge@ff2+3
  1969   000A9C  ECE3  F013         	call	___flge	;wreg free
  1970   000AA0  A0D8               	btfss	status,0,c
  1971   000AA2  EF55  F005         	goto	u3291
  1972   000AA6  EF57  F005         	goto	u3290
  1973   000AAA                     u3291:
  1974   000AAA  EFFA  F004         	goto	l856
  1975   000AAE                     u3290:
  1976   000AAE                     
  1977                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 583:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  1978   000AAE  0100               	movlb	0	; () banked
  1979   000AB0  5188               	movf	efgtoa@u& (0+255),w,b
  1980   000AB2  5D84               	subwf	efgtoa@g& (0+255),w,b
  1981   000AB4  6E01               	movwf	labs@a^0,c
  1982   000AB6  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  1983   000AB8  5985               	subwfb	(efgtoa@g+1)& (0+255),w,b
  1984   000ABA  6E02               	movwf	(labs@a+1)^0,c
  1985   000ABC  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  1986   000ABE  5986               	subwfb	(efgtoa@g+2)& (0+255),w,b
  1987   000AC0  6E03               	movwf	(labs@a+2)^0,c
  1988   000AC2  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  1989   000AC4  5987               	subwfb	(efgtoa@g+3)& (0+255),w,b
  1990   000AC6  6E04               	movwf	(labs@a+3)^0,c
  1991   000AC8  EC0D  F017         	call	_labs	;wreg free
  1992   000ACC  BE04               	btfsc	(?_labs+3)^0,7,c
  1993   000ACE  EF76  F005         	goto	u3300
  1994   000AD2  5004               	movf	(?_labs+3)^0,w,c
  1995   000AD4  1003               	iorwf	(?_labs+2)^0,w,c
  1996   000AD6  1002               	iorwf	(?_labs+1)^0,w,c
  1997   000AD8  E107               	bnz	u3301
  1998   000ADA  0E02               	movlw	2
  1999   000ADC  5C01               	subwf	?_labs^0,w,c
  2000   000ADE  B0D8               	btfsc	status,0,c
  2001   000AE0  EF74  F005         	goto	u3301
  2002   000AE4  EF76  F005         	goto	u3300
  2003   000AE8                     u3301:
  2004   000AE8  EFBE  F005         	goto	l3141
  2005   000AEC                     u3300:
  2006   000AEC                     l3131:
  2007                           
  2008                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 584:    g = u;
  2009   000AEC  C088  F084         	movff	efgtoa@u,efgtoa@g
  2010   000AF0  C089  F085         	movff	efgtoa@u+1,efgtoa@g+1
  2011   000AF4  C08A  F086         	movff	efgtoa@u+2,efgtoa@g+2
  2012   000AF8  C08B  F087         	movff	efgtoa@u+3,efgtoa@g+3
  2013                           
  2014                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 585:   }
  2015   000AFC  EFD7  F005         	goto	l854
  2016   000B00                     l3133:
  2017                           
  2018                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 588:     u.f = u.
      +                          f/10.0;
  2019   000B00  C088  F00F         	movff	efgtoa@u,___fldiv@b
  2020   000B04  C089  F010         	movff	efgtoa@u+1,___fldiv@b+1
  2021   000B08  C08A  F011         	movff	efgtoa@u+2,___fldiv@b+2
  2022   000B0C  C08B  F012         	movff	efgtoa@u+3,___fldiv@b+3
  2023   000B10  0E00               	movlw	0
  2024   000B12  6E13               	movwf	___fldiv@a^0,c
  2025   000B14  0E00               	movlw	0
  2026   000B16  6E14               	movwf	(___fldiv@a+1)^0,c
  2027   000B18  0E20               	movlw	32
  2028   000B1A  6E15               	movwf	(___fldiv@a+2)^0,c
  2029   000B1C  0E41               	movlw	65
  2030   000B1E  6E16               	movwf	(___fldiv@a+3)^0,c
  2031   000B20  EC80  F00D         	call	___fldiv	;wreg free
  2032   000B24  C00F  F088         	movff	?___fldiv,efgtoa@u
  2033   000B28  C010  F089         	movff	?___fldiv+1,efgtoa@u+1
  2034   000B2C  C011  F08A         	movff	?___fldiv+2,efgtoa@u+2
  2035   000B30  C012  F08B         	movff	?___fldiv+3,efgtoa@u+3
  2036   000B34                     
  2037                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 589:     --e;
  2038   000B34  0100               	movlb	0	; () banked
  2039   000B36  076F               	decf	efgtoa@e& (0+255),f,b
  2040   000B38  A0D8               	btfss	status,0,c
  2041   000B3A  0770               	decf	(efgtoa@e+1)& (0+255),f,b
  2042   000B3C                     
  2043                           ; BSR set to: 0
  2044                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 590:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  2045   000B3C  5188               	movf	efgtoa@u& (0+255),w,b
  2046   000B3E  5D84               	subwf	efgtoa@g& (0+255),w,b
  2047   000B40  6E01               	movwf	labs@a^0,c
  2048   000B42  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  2049   000B44  5985               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2050   000B46  6E02               	movwf	(labs@a+1)^0,c
  2051   000B48  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  2052   000B4A  5986               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2053   000B4C  6E03               	movwf	(labs@a+2)^0,c
  2054   000B4E  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  2055   000B50  5987               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2056   000B52  6E04               	movwf	(labs@a+3)^0,c
  2057   000B54  EC0D  F017         	call	_labs	;wreg free
  2058   000B58  BE04               	btfsc	(?_labs+3)^0,7,c
  2059   000B5A  EFBC  F005         	goto	u3310
  2060   000B5E  5004               	movf	(?_labs+3)^0,w,c
  2061   000B60  1003               	iorwf	(?_labs+2)^0,w,c
  2062   000B62  1002               	iorwf	(?_labs+1)^0,w,c
  2063   000B64  E107               	bnz	u3311
  2064   000B66  0E02               	movlw	2
  2065   000B68  5C01               	subwf	?_labs^0,w,c
  2066   000B6A  B0D8               	btfsc	status,0,c
  2067   000B6C  EFBA  F005         	goto	u3311
  2068   000B70  EFBC  F005         	goto	u3310
  2069   000B74                     u3311:
  2070   000B74  EFBE  F005         	goto	l3141
  2071   000B78                     u3310:
  2072   000B78  EF76  F005         	goto	l3131
  2073   000B7C                     l3141:
  2074                           
  2075                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 587:    while (g.
      +                          f < u.f) {
  2076   000B7C  C084  F01A         	movff	efgtoa@g,___flge@ff1
  2077   000B80  C085  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  2078   000B84  C086  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  2079   000B88  C087  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  2080   000B8C  C088  F01E         	movff	efgtoa@u,___flge@ff2
  2081   000B90  C089  F01F         	movff	efgtoa@u+1,___flge@ff2+1
  2082   000B94  C08A  F020         	movff	efgtoa@u+2,___flge@ff2+2
  2083   000B98  C08B  F021         	movff	efgtoa@u+3,___flge@ff2+3
  2084   000B9C  ECE3  F013         	call	___flge	;wreg free
  2085   000BA0  A0D8               	btfss	status,0,c
  2086   000BA2  EFD5  F005         	goto	u3321
  2087   000BA6  EFD7  F005         	goto	u3320
  2088   000BAA                     u3321:
  2089   000BAA  EF80  F005         	goto	l3133
  2090   000BAE                     u3320:
  2091   000BAE                     l854:
  2092                           
  2093                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 602:  mode = c;
  2094   000BAE  C042  F069         	movff	efgtoa@c,efgtoa@mode
  2095                           
  2096                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 604:     nmode = 
      +                          mode;
  2097   000BB2  C069  F06A         	movff	efgtoa@mode,efgtoa@nmode
  2098   000BB6                     
  2099                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 614:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 615:         p = (prec < 0)
      +                           ? 6 : prec;
  2100   000BB6  0100               	movlb	0	; () banked
  2101   000BB8  BFB4               	btfsc	(_prec+1)& (0+255),7,b
  2102   000BBA  EFE1  F005         	goto	u3331
  2103   000BBE  EFE3  F005         	goto	u3330
  2104   000BC2                     u3331:
  2105   000BC2  EFE9  F005         	goto	l3147
  2106   000BC6                     u3330:
  2107   000BC6                     
  2108                           ; BSR set to: 0
  2109   000BC6  C0B3  F062         	movff	_prec,efgtoa@p
  2110   000BCA  C0B4  F063         	movff	_prec+1,efgtoa@p+1
  2111   000BCE  EFED  F005         	goto	l3149
  2112   000BD2                     l3147:
  2113                           
  2114                           ; BSR set to: 0
  2115   000BD2  0E00               	movlw	0
  2116   000BD4  6F63               	movwf	(efgtoa@p+1)& (0+255),b
  2117   000BD6  0E06               	movlw	6
  2118   000BD8  6F62               	movwf	efgtoa@p& (0+255),b
  2119   000BDA                     l3149:
  2120                           
  2121                           ; BSR set to: 0
  2122                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 616:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 630:     m = p;
  2123   000BDA  C062  F06D         	movff	efgtoa@p,efgtoa@m
  2124   000BDE  C063  F06E         	movff	efgtoa@p+1,efgtoa@m+1
  2125   000BE2                     
  2126                           ; BSR set to: 0
  2127                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 634:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 635:         ++m;
  2128   000BE2  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  2129   000BE4  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  2130   000BE6                     
  2131                           ; BSR set to: 0
  2132                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 636:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 640:     if (nmode == 'f
      +                          ') {
  2133   000BE6  0E66               	movlw	102
  2134   000BE8  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  2135   000BEA  A4D8               	btfss	status,2,c
  2136   000BEC  EFFA  F005         	goto	u3341
  2137   000BF0  EFFC  F005         	goto	u3340
  2138   000BF4                     u3341:
  2139   000BF4  EF1C  F006         	goto	l3163
  2140   000BF8                     u3340:
  2141   000BF8                     
  2142                           ; BSR set to: 0
  2143                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 641:         if (
      +                          e < 0) {
  2144   000BF8  BF70               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2145   000BFA  EF03  F006         	goto	u3350
  2146   000BFE  EF01  F006         	goto	u3351
  2147   000C02                     u3351:
  2148   000C02  EF0F  F006         	goto	l3159
  2149   000C06                     u3350:
  2150   000C06                     
  2151                           ; BSR set to: 0
  2152                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 642:             
      +                          u.f = 1.0;
  2153   000C06  0E00               	movlw	0
  2154   000C08  6F88               	movwf	efgtoa@u& (0+255),b
  2155   000C0A  0E00               	movlw	0
  2156   000C0C  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  2157   000C0E  0E80               	movlw	128
  2158   000C10  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  2159   000C12  0E3F               	movlw	63
  2160   000C14  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  2161                           
  2162                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 643:             
      +                          e = 0;
  2163   000C16  0E00               	movlw	0
  2164   000C18  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  2165   000C1A  0E00               	movlw	0
  2166   000C1C  6F6F               	movwf	efgtoa@e& (0+255),b
  2167   000C1E                     l3159:
  2168                           
  2169                           ; BSR set to: 0
  2170                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 645:         if (
      +                          !(mode == 'g')) {
  2171   000C1E  0E67               	movlw	103
  2172   000C20  1969               	xorwf	efgtoa@mode& (0+255),w,b
  2173   000C22  B4D8               	btfsc	status,2,c
  2174   000C24  EF16  F006         	goto	u3361
  2175   000C28  EF18  F006         	goto	u3360
  2176   000C2C                     u3361:
  2177   000C2C  EF1C  F006         	goto	l3163
  2178   000C30                     u3360:
  2179   000C30                     
  2180                           ; BSR set to: 0
  2181                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 646:             
      +                          m += e;
  2182   000C30  516F               	movf	efgtoa@e& (0+255),w,b
  2183   000C32  276D               	addwf	efgtoa@m& (0+255),f,b
  2184   000C34  5170               	movf	(efgtoa@e+1)& (0+255),w,b
  2185   000C36  236E               	addwfc	(efgtoa@m+1)& (0+255),f,b
  2186   000C38                     l3163:
  2187                           
  2188                           ; BSR set to: 0
  2189                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 652:     i = 0;
  2190   000C38  0E00               	movlw	0
  2191   000C3A  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  2192   000C3C  0E00               	movlw	0
  2193   000C3E  6F77               	movwf	efgtoa@i& (0+255),b
  2194   000C40                     
  2195                           ; BSR set to: 0
  2196                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 653:     h = g.f;
  2197   000C40  C084  F079         	movff	efgtoa@g,efgtoa@h
  2198   000C44  C085  F07A         	movff	efgtoa@g+1,efgtoa@h+1
  2199   000C48  C086  F07B         	movff	efgtoa@g+2,efgtoa@h+2
  2200   000C4C  C087  F07C         	movff	efgtoa@g+3,efgtoa@h+3
  2201   000C50                     
  2202                           ; BSR set to: 0
  2203                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 654:     ou = u;
  2204   000C50  C088  F073         	movff	efgtoa@u,efgtoa@ou
  2205   000C54  C089  F074         	movff	efgtoa@u+1,efgtoa@ou+1
  2206   000C58  C08A  F075         	movff	efgtoa@u+2,efgtoa@ou+2
  2207   000C5C  C08B  F076         	movff	efgtoa@u+3,efgtoa@ou+3
  2208                           
  2209                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  2210   000C60  EFAD  F006         	goto	l3177
  2211   000C64                     l3169:
  2212                           
  2213                           ; BSR set to: 0
  2214                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 656:         l = 
      +                          floorf(h/u.f);
  2215   000C64  C079  F00F         	movff	efgtoa@h,___fldiv@b
  2216   000C68  C07A  F010         	movff	efgtoa@h+1,___fldiv@b+1
  2217   000C6C  C07B  F011         	movff	efgtoa@h+2,___fldiv@b+2
  2218   000C70  C07C  F012         	movff	efgtoa@h+3,___fldiv@b+3
  2219   000C74  C088  F013         	movff	efgtoa@u,___fldiv@a
  2220   000C78  C089  F014         	movff	efgtoa@u+1,___fldiv@a+1
  2221   000C7C  C08A  F015         	movff	efgtoa@u+2,___fldiv@a+2
  2222   000C80  C08B  F016         	movff	efgtoa@u+3,___fldiv@a+3
  2223   000C84  EC80  F00D         	call	___fldiv	;wreg free
  2224   000C88  C00F  F028         	movff	?___fldiv,floorf@x
  2225   000C8C  C010  F029         	movff	?___fldiv+1,floorf@x+1
  2226   000C90  C011  F02A         	movff	?___fldiv+2,floorf@x+2
  2227   000C94  C012  F02B         	movff	?___fldiv+3,floorf@x+3
  2228   000C98  ECD8  F010         	call	_floorf	;wreg free
  2229   000C9C  C028  F07D         	movff	?_floorf,efgtoa@l
  2230   000CA0  C029  F07E         	movff	?_floorf+1,efgtoa@l+1
  2231   000CA4  C02A  F07F         	movff	?_floorf+2,efgtoa@l+2
  2232   000CA8  C02B  F080         	movff	?_floorf+3,efgtoa@l+3
  2233                           
  2234                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 657:         d = 
      +                          (int)l;
  2235   000CAC  C07D  F001         	movff	efgtoa@l,___fltol@f1
  2236   000CB0  C07E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2237   000CB4  C07F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2238   000CB8  C080  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2239   000CBC  EC60  F013         	call	___fltol	;wreg free
  2240   000CC0  C001  F06B         	movff	?___fltol,efgtoa@d
  2241   000CC4  C002  F06C         	movff	?___fltol+1,efgtoa@d+1
  2242   000CC8                     
  2243                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 658:         h -=
      +                           l*u.f;
  2244   000CC8  C079  F01A         	movff	efgtoa@h,___flsub@b
  2245   000CCC  C07A  F01B         	movff	efgtoa@h+1,___flsub@b+1
  2246   000CD0  C07B  F01C         	movff	efgtoa@h+2,___flsub@b+2
  2247   000CD4  C07C  F01D         	movff	efgtoa@h+3,___flsub@b+3
  2248   000CD8  C07D  F005         	movff	efgtoa@l,___flmul@a
  2249   000CDC  C07E  F006         	movff	efgtoa@l+1,___flmul@a+1
  2250   000CE0  C07F  F007         	movff	efgtoa@l+2,___flmul@a+2
  2251   000CE4  C080  F008         	movff	efgtoa@l+3,___flmul@a+3
  2252   000CE8  C088  F001         	movff	efgtoa@u,___flmul@b
  2253   000CEC  C089  F002         	movff	efgtoa@u+1,___flmul@b+1
  2254   000CF0  C08A  F003         	movff	efgtoa@u+2,___flmul@b+2
  2255   000CF4  C08B  F004         	movff	efgtoa@u+3,___flmul@b+3
  2256   000CF8  EC6B  F00B         	call	___flmul	;wreg free
  2257   000CFC  C001  F01E         	movff	?___flmul,___flsub@a
  2258   000D00  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  2259   000D04  C003  F020         	movff	?___flmul+2,___flsub@a+2
  2260   000D08  C004  F021         	movff	?___flmul+3,___flsub@a+3
  2261   000D0C  EC19  F018         	call	___flsub	;wreg free
  2262   000D10  C01A  F079         	movff	?___flsub,efgtoa@h
  2263   000D14  C01B  F07A         	movff	?___flsub+1,efgtoa@h+1
  2264   000D18  C01C  F07B         	movff	?___flsub+2,efgtoa@h+2
  2265   000D1C  C01D  F07C         	movff	?___flsub+3,efgtoa@h+3
  2266   000D20                     
  2267                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 659:         u.f 
      +                          = u.f/10.0;
  2268   000D20  C088  F00F         	movff	efgtoa@u,___fldiv@b
  2269   000D24  C089  F010         	movff	efgtoa@u+1,___fldiv@b+1
  2270   000D28  C08A  F011         	movff	efgtoa@u+2,___fldiv@b+2
  2271   000D2C  C08B  F012         	movff	efgtoa@u+3,___fldiv@b+3
  2272   000D30  0E00               	movlw	0
  2273   000D32  6E13               	movwf	___fldiv@a^0,c
  2274   000D34  0E00               	movlw	0
  2275   000D36  6E14               	movwf	(___fldiv@a+1)^0,c
  2276   000D38  0E20               	movlw	32
  2277   000D3A  6E15               	movwf	(___fldiv@a+2)^0,c
  2278   000D3C  0E41               	movlw	65
  2279   000D3E  6E16               	movwf	(___fldiv@a+3)^0,c
  2280   000D40  EC80  F00D         	call	___fldiv	;wreg free
  2281   000D44  C00F  F088         	movff	?___fldiv,efgtoa@u
  2282   000D48  C010  F089         	movff	?___fldiv+1,efgtoa@u+1
  2283   000D4C  C011  F08A         	movff	?___fldiv+2,efgtoa@u+2
  2284   000D50  C012  F08B         	movff	?___fldiv+3,efgtoa@u+3
  2285   000D54                     
  2286                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 660:         ++i;
  2287   000D54  0100               	movlb	0	; () banked
  2288   000D56  4B77               	infsnz	efgtoa@i& (0+255),f,b
  2289   000D58  2B78               	incf	(efgtoa@i+1)& (0+255),f,b
  2290   000D5A                     l3177:
  2291                           
  2292                           ; BSR set to: 0
  2293                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  2294   000D5A  516D               	movf	efgtoa@m& (0+255),w,b
  2295   000D5C  5D77               	subwf	efgtoa@i& (0+255),w,b
  2296   000D5E  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  2297   000D60  0A80               	xorlw	128
  2298   000D62  6E43               	movwf	??_efgtoa^0,c
  2299   000D64  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  2300   000D66  0A80               	xorlw	128
  2301   000D68  5843               	subwfb	??_efgtoa^0,w,c
  2302   000D6A  A0D8               	btfss	status,0,c
  2303   000D6C  EFBA  F006         	goto	u3371
  2304   000D70  EFBC  F006         	goto	u3370
  2305   000D74                     u3371:
  2306   000D74  EF32  F006         	goto	l3169
  2307   000D78                     u3370:
  2308   000D78                     
  2309                           ; BSR set to: 0
  2310                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 664:     l = u.f*
      +                          5.0;
  2311   000D78  C088  F001         	movff	efgtoa@u,___flmul@b
  2312   000D7C  C089  F002         	movff	efgtoa@u+1,___flmul@b+1
  2313   000D80  C08A  F003         	movff	efgtoa@u+2,___flmul@b+2
  2314   000D84  C08B  F004         	movff	efgtoa@u+3,___flmul@b+3
  2315   000D88  0E00               	movlw	0
  2316   000D8A  6E05               	movwf	___flmul@a^0,c
  2317   000D8C  0E00               	movlw	0
  2318   000D8E  6E06               	movwf	(___flmul@a+1)^0,c
  2319   000D90  0EA0               	movlw	160
  2320   000D92  6E07               	movwf	(___flmul@a+2)^0,c
  2321   000D94  0E40               	movlw	64
  2322   000D96  6E08               	movwf	(___flmul@a+3)^0,c
  2323   000D98  EC6B  F00B         	call	___flmul	;wreg free
  2324   000D9C  C001  F07D         	movff	?___flmul,efgtoa@l
  2325   000DA0  C002  F07E         	movff	?___flmul+1,efgtoa@l+1
  2326   000DA4  C003  F07F         	movff	?___flmul+2,efgtoa@l+2
  2327   000DA8  C004  F080         	movff	?___flmul+3,efgtoa@l+3
  2328   000DAC                     
  2329                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 665:     if (h < 
      +                          l) {
  2330   000DAC  C079  F01A         	movff	efgtoa@h,___flge@ff1
  2331   000DB0  C07A  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  2332   000DB4  C07B  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  2333   000DB8  C07C  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  2334   000DBC  C07D  F01E         	movff	efgtoa@l,___flge@ff2
  2335   000DC0  C07E  F01F         	movff	efgtoa@l+1,___flge@ff2+1
  2336   000DC4  C07F  F020         	movff	efgtoa@l+2,___flge@ff2+2
  2337   000DC8  C080  F021         	movff	efgtoa@l+3,___flge@ff2+3
  2338   000DCC  ECE3  F013         	call	___flge	;wreg free
  2339   000DD0  B0D8               	btfsc	status,0,c
  2340   000DD2  EFED  F006         	goto	u3381
  2341   000DD6  EFEF  F006         	goto	u3380
  2342   000DDA                     u3381:
  2343   000DDA  EFFA  F006         	goto	l3185
  2344   000DDE                     u3380:
  2345   000DDE                     
  2346                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 666:         l = 
      +                          0.0;
  2347   000DDE  0E00               	movlw	0
  2348   000DE0  0100               	movlb	0	; () banked
  2349   000DE2  6F7D               	movwf	efgtoa@l& (0+255),b
  2350   000DE4  0E00               	movlw	0
  2351   000DE6  6F7E               	movwf	(efgtoa@l+1)& (0+255),b
  2352   000DE8  0E00               	movlw	0
  2353   000DEA  6F7F               	movwf	(efgtoa@l+2)& (0+255),b
  2354   000DEC  0E00               	movlw	0
  2355   000DEE  6F80               	movwf	(efgtoa@l+3)& (0+255),b
  2356                           
  2357                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 667:     } else {
  2358   000DF0  EF23  F007         	goto	l3191
  2359   000DF4                     l3185:
  2360                           
  2361                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 669:         if (
      +                          (h == l) && !(d % 2)) {
  2362   000DF4  C079  F001         	movff	efgtoa@h,___fleq@ff1
  2363   000DF8  C07A  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  2364   000DFC  C07B  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  2365   000E00  C07C  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  2366   000E04  C07D  F005         	movff	efgtoa@l,___fleq@ff2
  2367   000E08  C07E  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  2368   000E0C  C07F  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  2369   000E10  C080  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  2370   000E14  ECB5  F015         	call	___fleq	;wreg free
  2371   000E18  A0D8               	btfss	status,0,c
  2372   000E1A  EF11  F007         	goto	u3391
  2373   000E1E  EF13  F007         	goto	u3390
  2374   000E22                     u3391:
  2375   000E22  EF23  F007         	goto	l3191
  2376   000E26                     u3390:
  2377   000E26  0100               	movlb	0	; () banked
  2378   000E28  B16B               	btfsc	efgtoa@d& (0+255),0,b
  2379   000E2A  EF19  F007         	goto	u3401
  2380   000E2E  EF1B  F007         	goto	u3400
  2381   000E32                     u3401:
  2382   000E32  EF23  F007         	goto	l3191
  2383   000E36                     u3400:
  2384   000E36                     
  2385                           ; BSR set to: 0
  2386                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 670:             
      +                          l = 0.0;
  2387   000E36  0E00               	movlw	0
  2388   000E38  6F7D               	movwf	efgtoa@l& (0+255),b
  2389   000E3A  0E00               	movlw	0
  2390   000E3C  6F7E               	movwf	(efgtoa@l+1)& (0+255),b
  2391   000E3E  0E00               	movlw	0
  2392   000E40  6F7F               	movwf	(efgtoa@l+2)& (0+255),b
  2393   000E42  0E00               	movlw	0
  2394   000E44  6F80               	movwf	(efgtoa@l+3)& (0+255),b
  2395   000E46                     l3191:
  2396                           
  2397                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 675:     h = g.f 
      +                          + l;
  2398   000E46  C084  F001         	movff	efgtoa@g,___fladd@b
  2399   000E4A  C085  F002         	movff	efgtoa@g+1,___fladd@b+1
  2400   000E4E  C086  F003         	movff	efgtoa@g+2,___fladd@b+2
  2401   000E52  C087  F004         	movff	efgtoa@g+3,___fladd@b+3
  2402   000E56  C07D  F005         	movff	efgtoa@l,___fladd@a
  2403   000E5A  C07E  F006         	movff	efgtoa@l+1,___fladd@a+1
  2404   000E5E  C07F  F007         	movff	efgtoa@l+2,___fladd@a+2
  2405   000E62  C080  F008         	movff	efgtoa@l+3,___fladd@a+3
  2406   000E66  EC0B  F009         	call	___fladd	;wreg free
  2407   000E6A  C001  F079         	movff	?___fladd,efgtoa@h
  2408   000E6E  C002  F07A         	movff	?___fladd+1,efgtoa@h+1
  2409   000E72  C003  F07B         	movff	?___fladd+2,efgtoa@h+2
  2410   000E76  C004  F07C         	movff	?___fladd+3,efgtoa@h+3
  2411   000E7A                     
  2412                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 677:  if (h >= (o
      +                          u.f*10.0)) {
  2413   000E7A  C079  F01A         	movff	efgtoa@h,___flge@ff1
  2414   000E7E  C07A  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  2415   000E82  C07B  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  2416   000E86  C07C  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  2417   000E8A  0E00               	movlw	0
  2418   000E8C  6E05               	movwf	___flmul@a^0,c
  2419   000E8E  0E00               	movlw	0
  2420   000E90  6E06               	movwf	(___flmul@a+1)^0,c
  2421   000E92  0E20               	movlw	32
  2422   000E94  6E07               	movwf	(___flmul@a+2)^0,c
  2423   000E96  0E41               	movlw	65
  2424   000E98  6E08               	movwf	(___flmul@a+3)^0,c
  2425   000E9A  C073  F001         	movff	efgtoa@ou,___flmul@b
  2426   000E9E  C074  F002         	movff	efgtoa@ou+1,___flmul@b+1
  2427   000EA2  C075  F003         	movff	efgtoa@ou+2,___flmul@b+2
  2428   000EA6  C076  F004         	movff	efgtoa@ou+3,___flmul@b+3
  2429   000EAA  EC6B  F00B         	call	___flmul	;wreg free
  2430   000EAE  C001  F01E         	movff	?___flmul,___flge@ff2
  2431   000EB2  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  2432   000EB6  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  2433   000EBA  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  2434   000EBE  ECE3  F013         	call	___flge	;wreg free
  2435   000EC2  A0D8               	btfss	status,0,c
  2436   000EC4  EF66  F007         	goto	u3411
  2437   000EC8  EF68  F007         	goto	u3410
  2438   000ECC                     u3411:
  2439   000ECC  EF91  F007         	goto	l3203
  2440   000ED0                     u3410:
  2441   000ED0                     
  2442                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 678:   e++;
  2443   000ED0  0100               	movlb	0	; () banked
  2444   000ED2  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  2445   000ED4  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  2446   000ED6                     
  2447                           ; BSR set to: 0
  2448                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 679:   ou.f *= 10
      +                          .0;
  2449   000ED6  C073  F001         	movff	efgtoa@ou,___flmul@b
  2450   000EDA  C074  F002         	movff	efgtoa@ou+1,___flmul@b+1
  2451   000EDE  C075  F003         	movff	efgtoa@ou+2,___flmul@b+2
  2452   000EE2  C076  F004         	movff	efgtoa@ou+3,___flmul@b+3
  2453   000EE6  0E00               	movlw	0
  2454   000EE8  6E05               	movwf	___flmul@a^0,c
  2455   000EEA  0E00               	movlw	0
  2456   000EEC  6E06               	movwf	(___flmul@a+1)^0,c
  2457   000EEE  0E20               	movlw	32
  2458   000EF0  6E07               	movwf	(___flmul@a+2)^0,c
  2459   000EF2  0E41               	movlw	65
  2460   000EF4  6E08               	movwf	(___flmul@a+3)^0,c
  2461   000EF6  EC6B  F00B         	call	___flmul	;wreg free
  2462   000EFA  C001  F073         	movff	?___flmul,efgtoa@ou
  2463   000EFE  C002  F074         	movff	?___flmul+1,efgtoa@ou+1
  2464   000F02  C003  F075         	movff	?___flmul+2,efgtoa@ou+2
  2465   000F06  C004  F076         	movff	?___flmul+3,efgtoa@ou+3
  2466   000F0A                     
  2467                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 681:   if (nmode 
      +                          == 'f') {
  2468   000F0A  0E66               	movlw	102
  2469   000F0C  0100               	movlb	0	; () banked
  2470   000F0E  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  2471   000F10  A4D8               	btfss	status,2,c
  2472   000F12  EF8D  F007         	goto	u3421
  2473   000F16  EF8F  F007         	goto	u3420
  2474   000F1A                     u3421:
  2475   000F1A  EF91  F007         	goto	l3203
  2476   000F1E                     u3420:
  2477   000F1E                     
  2478                           ; BSR set to: 0
  2479                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 683:    m++;
  2480   000F1E  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  2481   000F20  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  2482   000F22                     l3203:
  2483                           
  2484                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 689:     u = ou;
  2485   000F22  C073  F088         	movff	efgtoa@ou,efgtoa@u
  2486   000F26  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  2487   000F2A  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  2488   000F2E  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  2489   000F32                     
  2490                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 693:  ne = e;
  2491   000F32  C06F  F060         	movff	efgtoa@e,efgtoa@ne
  2492   000F36  C070  F061         	movff	efgtoa@e+1,efgtoa@ne+1
  2493   000F3A                     
  2494                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 695:     pp = 0;
  2495   000F3A  0E00               	movlw	0
  2496   000F3C  0100               	movlb	0	; () banked
  2497   000F3E  6F68               	movwf	efgtoa@pp& (0+255),b
  2498   000F40                     
  2499                           ; BSR set to: 0
  2500                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 696:     t = 0;
  2501   000F40  0E00               	movlw	0
  2502   000F42  6F65               	movwf	(efgtoa@t+1)& (0+255),b
  2503   000F44  0E00               	movlw	0
  2504   000F46  6F64               	movwf	efgtoa@t& (0+255),b
  2505   000F48                     
  2506                           ; BSR set to: 0
  2507                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 697:     i = 0;
  2508   000F48  0E00               	movlw	0
  2509   000F4A  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  2510   000F4C  0E00               	movlw	0
  2511   000F4E  6F77               	movwf	efgtoa@i& (0+255),b
  2512                           
  2513                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  2514   000F50  EF8F  F008         	goto	l3253
  2515   000F54                     l3213:
  2516                           
  2517                           ; BSR set to: 0
  2518                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 699:         l = 
      +                          floorf(h/u.f);
  2519   000F54  C079  F00F         	movff	efgtoa@h,___fldiv@b
  2520   000F58  C07A  F010         	movff	efgtoa@h+1,___fldiv@b+1
  2521   000F5C  C07B  F011         	movff	efgtoa@h+2,___fldiv@b+2
  2522   000F60  C07C  F012         	movff	efgtoa@h+3,___fldiv@b+3
  2523   000F64  C088  F013         	movff	efgtoa@u,___fldiv@a
  2524   000F68  C089  F014         	movff	efgtoa@u+1,___fldiv@a+1
  2525   000F6C  C08A  F015         	movff	efgtoa@u+2,___fldiv@a+2
  2526   000F70  C08B  F016         	movff	efgtoa@u+3,___fldiv@a+3
  2527   000F74  EC80  F00D         	call	___fldiv	;wreg free
  2528   000F78  C00F  F028         	movff	?___fldiv,floorf@x
  2529   000F7C  C010  F029         	movff	?___fldiv+1,floorf@x+1
  2530   000F80  C011  F02A         	movff	?___fldiv+2,floorf@x+2
  2531   000F84  C012  F02B         	movff	?___fldiv+3,floorf@x+3
  2532   000F88  ECD8  F010         	call	_floorf	;wreg free
  2533   000F8C  C028  F07D         	movff	?_floorf,efgtoa@l
  2534   000F90  C029  F07E         	movff	?_floorf+1,efgtoa@l+1
  2535   000F94  C02A  F07F         	movff	?_floorf+2,efgtoa@l+2
  2536   000F98  C02B  F080         	movff	?_floorf+3,efgtoa@l+3
  2537                           
  2538                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 700:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  2539   000F9C  C07D  F001         	movff	efgtoa@l,___fltol@f1
  2540   000FA0  C07E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2541   000FA4  C07F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2542   000FA8  C080  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2543   000FAC  EC60  F013         	call	___fltol	;wreg free
  2544   000FB0  BE02               	btfsc	(?___fltol+1)^0,7,c
  2545   000FB2  EFE6  F007         	goto	u3430
  2546   000FB6  5002               	movf	(?___fltol+1)^0,w,c
  2547   000FB8  E107               	bnz	u3431
  2548   000FBA  0E0A               	movlw	10
  2549   000FBC  5C01               	subwf	?___fltol^0,w,c
  2550   000FBE  B0D8               	btfsc	status,0,c
  2551   000FC0  EFE4  F007         	goto	u3431
  2552   000FC4  EFE6  F007         	goto	u3430
  2553   000FC8                     u3431:
  2554   000FC8  EFF6  F007         	goto	l3217
  2555   000FCC                     u3430:
  2556   000FCC  C07D  F001         	movff	efgtoa@l,___fltol@f1
  2557   000FD0  C07E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2558   000FD4  C07F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2559   000FD8  C080  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2560   000FDC  EC60  F013         	call	___fltol	;wreg free
  2561   000FE0  C001  F06B         	movff	?___fltol,efgtoa@d
  2562   000FE4  C002  F06C         	movff	?___fltol+1,efgtoa@d+1
  2563   000FE8  EFFB  F007         	goto	l884
  2564   000FEC                     l3217:
  2565   000FEC  0E00               	movlw	0
  2566   000FEE  0100               	movlb	0	; () banked
  2567   000FF0  6F6C               	movwf	(efgtoa@d+1)& (0+255),b
  2568   000FF2  0E09               	movlw	9
  2569   000FF4  6F6B               	movwf	efgtoa@d& (0+255),b
  2570   000FF6                     l884:
  2571                           
  2572                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 711:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 712:             if (!pp &
      +                          & (ne < 0)) {
  2573   000FF6  0100               	movlb	0	; () banked
  2574   000FF8  5168               	movf	efgtoa@pp& (0+255),w,b
  2575   000FFA  A4D8               	btfss	status,2,c
  2576   000FFC  EF02  F008         	goto	u3441
  2577   001000  EF04  F008         	goto	u3440
  2578   001004                     u3441:
  2579   001004  EF2C  F008         	goto	l3237
  2580   001008                     u3440:
  2581   001008                     
  2582                           ; BSR set to: 0
  2583   001008  BF61               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  2584   00100A  EF0B  F008         	goto	u3450
  2585   00100E  EF09  F008         	goto	u3451
  2586   001012                     u3451:
  2587   001012  EF2C  F008         	goto	l3237
  2588   001016                     u3450:
  2589   001016                     
  2590                           ; BSR set to: 0
  2591                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 713:             
      +                              dbuf[n++] = '.';
  2592   001016  0E00               	movlw	low _dbuf
  2593   001018  2582               	addwf	efgtoa@n& (0+255),w,b
  2594   00101A  6ED9               	movwf	fsr2l,c
  2595   00101C  0E01               	movlw	high _dbuf
  2596   00101E  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2597   001020  6EDA               	movwf	fsr2h,c
  2598   001022  0E2E               	movlw	46
  2599   001024  6EDF               	movwf	indf2,c
  2600   001026                     
  2601                           ; BSR set to: 0
  2602   001026  4B82               	infsnz	efgtoa@n& (0+255),f,b
  2603   001028  2B83               	incf	(efgtoa@n+1)& (0+255),f,b
  2604   00102A                     
  2605                           ; BSR set to: 0
  2606                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 714:             
      +                              --w;
  2607   00102A  0771               	decf	efgtoa@w& (0+255),f,b
  2608   00102C  A0D8               	btfss	status,0,c
  2609   00102E  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2610   001030                     
  2611                           ; BSR set to: 0
  2612                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 715:             
      +                              pp = 1;
  2613   001030  0E01               	movlw	1
  2614   001032  6F68               	movwf	efgtoa@pp& (0+255),b
  2615   001034  EF2C  F008         	goto	l3237
  2616   001038                     l3229:
  2617                           
  2618                           ; BSR set to: 0
  2619                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 718:             
      +                              dbuf[n++] = '0';
  2620   001038  0E00               	movlw	low _dbuf
  2621   00103A  2582               	addwf	efgtoa@n& (0+255),w,b
  2622   00103C  6ED9               	movwf	fsr2l,c
  2623   00103E  0E01               	movlw	high _dbuf
  2624   001040  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2625   001042  6EDA               	movwf	fsr2h,c
  2626   001044  0E30               	movlw	48
  2627   001046  6EDF               	movwf	indf2,c
  2628   001048                     
  2629                           ; BSR set to: 0
  2630   001048  4B82               	infsnz	efgtoa@n& (0+255),f,b
  2631   00104A  2B83               	incf	(efgtoa@n+1)& (0+255),f,b
  2632   00104C                     
  2633                           ; BSR set to: 0
  2634                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 719:             
      +                              --w;
  2635   00104C  0771               	decf	efgtoa@w& (0+255),f,b
  2636   00104E  A0D8               	btfss	status,0,c
  2637   001050  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2638   001052                     
  2639                           ; BSR set to: 0
  2640                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 720:             
      +                              --t;
  2641   001052  0764               	decf	efgtoa@t& (0+255),f,b
  2642   001054  A0D8               	btfss	status,0,c
  2643   001056  0765               	decf	(efgtoa@t+1)& (0+255),f,b
  2644   001058                     l3237:
  2645                           
  2646                           ; BSR set to: 0
  2647                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 717:             
      +                          while (t) {
  2648   001058  5164               	movf	efgtoa@t& (0+255),w,b
  2649   00105A  1165               	iorwf	(efgtoa@t+1)& (0+255),w,b
  2650   00105C  A4D8               	btfss	status,2,c
  2651   00105E  EF33  F008         	goto	u3461
  2652   001062  EF35  F008         	goto	u3460
  2653   001066                     u3461:
  2654   001066  EF1C  F008         	goto	l3229
  2655   00106A                     u3460:
  2656   00106A                     
  2657                           ; BSR set to: 0
  2658                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 722:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  2659   00106A  0E00               	movlw	low _dbuf
  2660   00106C  2582               	addwf	efgtoa@n& (0+255),w,b
  2661   00106E  6ED9               	movwf	fsr2l,c
  2662   001070  0E01               	movlw	high _dbuf
  2663   001072  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2664   001074  6EDA               	movwf	fsr2h,c
  2665   001076  516B               	movf	efgtoa@d& (0+255),w,b
  2666   001078  0F30               	addlw	48
  2667   00107A  6EDF               	movwf	indf2,c
  2668   00107C                     
  2669                           ; BSR set to: 0
  2670   00107C  4B82               	infsnz	efgtoa@n& (0+255),f,b
  2671   00107E  2B83               	incf	(efgtoa@n+1)& (0+255),f,b
  2672   001080                     
  2673                           ; BSR set to: 0
  2674                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 723:             
      +                          --w;
  2675   001080  0771               	decf	efgtoa@w& (0+255),f,b
  2676   001082  A0D8               	btfss	status,0,c
  2677   001084  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2678   001086                     
  2679                           ; BSR set to: 0
  2680                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 724:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 725:         h -= l*
      +                          u.f;
  2681   001086  C079  F01A         	movff	efgtoa@h,___flsub@b
  2682   00108A  C07A  F01B         	movff	efgtoa@h+1,___flsub@b+1
  2683   00108E  C07B  F01C         	movff	efgtoa@h+2,___flsub@b+2
  2684   001092  C07C  F01D         	movff	efgtoa@h+3,___flsub@b+3
  2685   001096  C07D  F005         	movff	efgtoa@l,___flmul@a
  2686   00109A  C07E  F006         	movff	efgtoa@l+1,___flmul@a+1
  2687   00109E  C07F  F007         	movff	efgtoa@l+2,___flmul@a+2
  2688   0010A2  C080  F008         	movff	efgtoa@l+3,___flmul@a+3
  2689   0010A6  C088  F001         	movff	efgtoa@u,___flmul@b
  2690   0010AA  C089  F002         	movff	efgtoa@u+1,___flmul@b+1
  2691   0010AE  C08A  F003         	movff	efgtoa@u+2,___flmul@b+2
  2692   0010B2  C08B  F004         	movff	efgtoa@u+3,___flmul@b+3
  2693   0010B6  EC6B  F00B         	call	___flmul	;wreg free
  2694   0010BA  C001  F01E         	movff	?___flmul,___flsub@a
  2695   0010BE  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  2696   0010C2  C003  F020         	movff	?___flmul+2,___flsub@a+2
  2697   0010C6  C004  F021         	movff	?___flmul+3,___flsub@a+3
  2698   0010CA  EC19  F018         	call	___flsub	;wreg free
  2699   0010CE  C01A  F079         	movff	?___flsub,efgtoa@h
  2700   0010D2  C01B  F07A         	movff	?___flsub+1,efgtoa@h+1
  2701   0010D6  C01C  F07B         	movff	?___flsub+2,efgtoa@h+2
  2702   0010DA  C01D  F07C         	movff	?___flsub+3,efgtoa@h+3
  2703   0010DE                     
  2704                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 726:         u.f 
      +                          = u.f/10.0;
  2705   0010DE  C088  F00F         	movff	efgtoa@u,___fldiv@b
  2706   0010E2  C089  F010         	movff	efgtoa@u+1,___fldiv@b+1
  2707   0010E6  C08A  F011         	movff	efgtoa@u+2,___fldiv@b+2
  2708   0010EA  C08B  F012         	movff	efgtoa@u+3,___fldiv@b+3
  2709   0010EE  0E00               	movlw	0
  2710   0010F0  6E13               	movwf	___fldiv@a^0,c
  2711   0010F2  0E00               	movlw	0
  2712   0010F4  6E14               	movwf	(___fldiv@a+1)^0,c
  2713   0010F6  0E20               	movlw	32
  2714   0010F8  6E15               	movwf	(___fldiv@a+2)^0,c
  2715   0010FA  0E41               	movlw	65
  2716   0010FC  6E16               	movwf	(___fldiv@a+3)^0,c
  2717   0010FE  EC80  F00D         	call	___fldiv	;wreg free
  2718   001102  C00F  F088         	movff	?___fldiv,efgtoa@u
  2719   001106  C010  F089         	movff	?___fldiv+1,efgtoa@u+1
  2720   00110A  C011  F08A         	movff	?___fldiv+2,efgtoa@u+2
  2721   00110E  C012  F08B         	movff	?___fldiv+3,efgtoa@u+3
  2722   001112                     
  2723                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 727:         --ne
      +                          ;
  2724   001112  0100               	movlb	0	; () banked
  2725   001114  0760               	decf	efgtoa@ne& (0+255),f,b
  2726   001116  A0D8               	btfss	status,0,c
  2727   001118  0761               	decf	(efgtoa@ne+1)& (0+255),f,b
  2728   00111A                     
  2729                           ; BSR set to: 0
  2730                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 728:         ++i;
  2731   00111A  4B77               	infsnz	efgtoa@i& (0+255),f,b
  2732   00111C  2B78               	incf	(efgtoa@i+1)& (0+255),f,b
  2733   00111E                     l3253:
  2734                           
  2735                           ; BSR set to: 0
  2736                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  2737   00111E  516D               	movf	efgtoa@m& (0+255),w,b
  2738   001120  5D77               	subwf	efgtoa@i& (0+255),w,b
  2739   001122  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  2740   001124  0A80               	xorlw	128
  2741   001126  6E43               	movwf	??_efgtoa^0,c
  2742   001128  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  2743   00112A  0A80               	xorlw	128
  2744   00112C  5843               	subwfb	??_efgtoa^0,w,c
  2745   00112E  B0D8               	btfsc	status,0,c
  2746   001130  EF9C  F008         	goto	u3471
  2747   001134  EF9E  F008         	goto	u3470
  2748   001138                     u3471:
  2749   001138  EFAC  F008         	goto	l3257
  2750   00113C                     u3470:
  2751   00113C                     
  2752                           ; BSR set to: 0
  2753   00113C  BF83               	btfsc	(efgtoa@n+1)& (0+255),7,b
  2754   00113E  EFAA  F008         	goto	u3481
  2755   001142  5183               	movf	(efgtoa@n+1)& (0+255),w,b
  2756   001144  E109               	bnz	u3480
  2757   001146  0E4B               	movlw	75
  2758   001148  5D82               	subwf	efgtoa@n& (0+255),w,b
  2759   00114A  A0D8               	btfss	status,0,c
  2760   00114C  EFAA  F008         	goto	u3481
  2761   001150  EFAC  F008         	goto	u3480
  2762   001154                     u3481:
  2763   001154  EFAA  F007         	goto	l3213
  2764   001158                     u3480:
  2765   001158                     l3257:
  2766                           
  2767                           ; BSR set to: 0
  2768                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 735:  i = sizeof(
      +                          dbuf) - 1;
  2769   001158  0E00               	movlw	0
  2770   00115A  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  2771   00115C  0E4F               	movlw	79
  2772   00115E  6F77               	movwf	efgtoa@i& (0+255),b
  2773   001160                     
  2774                           ; BSR set to: 0
  2775                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 736:     dbuf[i] 
      +                          = '\0';
  2776   001160  0E00               	movlw	low _dbuf
  2777   001162  2577               	addwf	efgtoa@i& (0+255),w,b
  2778   001164  6ED9               	movwf	fsr2l,c
  2779   001166  0E01               	movlw	high _dbuf
  2780   001168  2178               	addwfc	(efgtoa@i+1)& (0+255),w,b
  2781   00116A  6EDA               	movwf	fsr2h,c
  2782   00116C  0E00               	movlw	0
  2783   00116E  6EDF               	movwf	indf2,c
  2784   001170                     
  2785                           ; BSR set to: 0
  2786                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 767:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  2787   001170  0E00               	movlw	low _dbuf
  2788   001172  6E43               	movwf	??_efgtoa^0,c
  2789   001174  0E01               	movlw	high _dbuf
  2790   001176  6E44               	movwf	(??_efgtoa+1)^0,c
  2791   001178  5182               	movf	efgtoa@n& (0+255),w,b
  2792   00117A  5E43               	subwf	??_efgtoa^0,f,c
  2793   00117C  5183               	movf	(efgtoa@n+1)& (0+255),w,b
  2794   00117E  5A44               	subwfb	(??_efgtoa+1)^0,f,c
  2795   001180  5177               	movf	efgtoa@i& (0+255),w,b
  2796   001182  2443               	addwf	??_efgtoa^0,w,c
  2797   001184  6E01               	movwf	memcpy@d1^0,c
  2798   001186  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  2799   001188  2044               	addwfc	(??_efgtoa+1)^0,w,c
  2800   00118A  6E02               	movwf	(memcpy@d1+1)^0,c
  2801   00118C  0E00               	movlw	low _dbuf
  2802   00118E  6E03               	movwf	memcpy@s1^0,c
  2803   001190  0E01               	movlw	high _dbuf
  2804   001192  6E04               	movwf	(memcpy@s1+1)^0,c
  2805   001194  C082  F005         	movff	efgtoa@n,memcpy@n
  2806   001198  C083  F006         	movff	efgtoa@n+1,memcpy@n+1
  2807   00119C  ECCA  F017         	call	_memcpy	;wreg free
  2808   0011A0                     
  2809                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 768:  n = i-n;
  2810   0011A0  0100               	movlb	0	; () banked
  2811   0011A2  5182               	movf	efgtoa@n& (0+255),w,b
  2812   0011A4  5D77               	subwf	efgtoa@i& (0+255),w,b
  2813   0011A6  6F82               	movwf	efgtoa@n& (0+255),b
  2814   0011A8  5183               	movf	(efgtoa@n+1)& (0+255),w,b
  2815   0011AA  5978               	subwfb	(efgtoa@i+1)& (0+255),w,b
  2816   0011AC  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  2817   0011AE                     
  2818                           ; BSR set to: 0
  2819                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 769:  i = sign ==
      +                           0 ? 0 : 1;
  2820   0011AE  5181               	movf	efgtoa@sign& (0+255),w,b
  2821   0011B0  A4D8               	btfss	status,2,c
  2822   0011B2  EFDD  F008         	goto	u3491
  2823   0011B6  EFE0  F008         	goto	u3490
  2824   0011BA                     u3491:
  2825   0011BA  0E01               	movlw	1
  2826   0011BC  EFE1  F008         	goto	u3500
  2827   0011C0                     u3490:
  2828   0011C0  0E00               	movlw	0
  2829   0011C2                     u3500:
  2830   0011C2  6F77               	movwf	efgtoa@i& (0+255),b
  2831   0011C4  6B78               	clrf	(efgtoa@i+1)& (0+255),b
  2832   0011C6                     
  2833                           ; BSR set to: 0
  2834                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 780:  if (sign) {
  2835   0011C6  5181               	movf	efgtoa@sign& (0+255),w,b
  2836   0011C8  B4D8               	btfsc	status,2,c
  2837   0011CA  EFE9  F008         	goto	u3511
  2838   0011CE  EFEB  F008         	goto	u3510
  2839   0011D2                     u3511:
  2840   0011D2  EFF6  F008         	goto	l3271
  2841   0011D6                     u3510:
  2842   0011D6                     
  2843                           ; BSR set to: 0
  2844                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 781:   dbuf[--n] 
      +                          = sign;
  2845   0011D6  0782               	decf	efgtoa@n& (0+255),f,b
  2846   0011D8  A0D8               	btfss	status,0,c
  2847   0011DA  0783               	decf	(efgtoa@n+1)& (0+255),f,b
  2848   0011DC  0E00               	movlw	low _dbuf
  2849   0011DE  2582               	addwf	efgtoa@n& (0+255),w,b
  2850   0011E0  6ED9               	movwf	fsr2l,c
  2851   0011E2  0E01               	movlw	high _dbuf
  2852   0011E4  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2853   0011E6  6EDA               	movwf	fsr2h,c
  2854   0011E8  C081  FFDF         	movff	efgtoa@sign,indf2
  2855   0011EC                     l3271:
  2856                           
  2857                           ; BSR set to: 0
  2858                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 783:  w -= i;
  2859   0011EC  5177               	movf	efgtoa@i& (0+255),w,b
  2860   0011EE  5F71               	subwf	efgtoa@w& (0+255),f,b
  2861   0011F0  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  2862   0011F2  5B72               	subwfb	(efgtoa@w+1)& (0+255),f,b
  2863   0011F4                     
  2864                           ; BSR set to: 0
  2865                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 786:     return (
      +                          void) pad(fp, &dbuf[n], w);
  2866   0011F4  C03C  F011         	movff	efgtoa@fp,pad@fp
  2867   0011F8  C03D  F012         	movff	efgtoa@fp+1,pad@fp+1
  2868   0011FC  0E00               	movlw	low _dbuf
  2869   0011FE  2582               	addwf	efgtoa@n& (0+255),w,b
  2870   001200  6E13               	movwf	pad@buf^0,c
  2871   001202  0E01               	movlw	high _dbuf
  2872   001204  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2873   001206  6E14               	movwf	(pad@buf+1)^0,c
  2874   001208  C071  F015         	movff	efgtoa@w,pad@p
  2875   00120C  C072  F016         	movff	efgtoa@w+1,pad@p+1
  2876   001210  EC96  F016         	call	_pad	;wreg free
  2877   001214                     l851:
  2878   001214  0012               	return		;funcret
  2879   001216                     __end_of_efgtoa:
  2880                           	callstack 0
  2881                           
  2882 ;; *************** function _strcpy *****************
  2883 ;; Defined at:
  2884 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  2885 ;; Parameters:    Size  Location     Type
  2886 ;;  dest            2    0[COMRAM] PTR unsigned char 
  2887 ;;		 -> dbuf(80), 
  2888 ;;  src             2    2[COMRAM] PTR const unsigned char 
  2889 ;;		 -> STR_6(4), STR_3(4), 
  2890 ;; Auto vars:     Size  Location     Type
  2891 ;;  d               2    6[COMRAM] PTR unsigned char 
  2892 ;;		 -> dbuf(80), 
  2893 ;;  s               2    4[COMRAM] PTR const unsigned char 
  2894 ;;		 -> STR_6(4), STR_3(4), 
  2895 ;; Return value:  Size  Location     Type
  2896 ;;                  2    0[COMRAM] PTR unsigned char 
  2897 ;; Registers used:
  2898 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2899 ;; Tracked objects:
  2900 ;;		On entry : 0/0
  2901 ;;		On exit  : 0/0
  2902 ;;		Unchanged: 0/0
  2903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2904 ;;      Params:         4       0       0       0       0       0       0       0       0
  2905 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2906 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2907 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2908 ;;Total ram usage:        8 bytes
  2909 ;; Hardware stack levels used: 1
  2910 ;; This function calls:
  2911 ;;		Nothing
  2912 ;; This function is called by:
  2913 ;;		_efgtoa
  2914 ;; This function uses a non-reentrant model
  2915 ;;
  2916                           
  2917                           	psect	text5
  2918   003102                     __ptext5:
  2919                           	callstack 0
  2920   003102                     _strcpy:
  2921                           	callstack 26
  2922   003102  C003  F005         	movff	strcpy@src,strcpy@s
  2923   003106  C004  F006         	movff	strcpy@src+1,strcpy@s+1
  2924   00310A  C001  F007         	movff	strcpy@dest,strcpy@d
  2925   00310E  C002  F008         	movff	strcpy@dest+1,strcpy@d+1
  2926   003112                     l2993:
  2927   003112  C005  FFF6         	movff	strcpy@s,tblptrl
  2928   003116  C006  FFF7         	movff	strcpy@s+1,tblptrh
  2929   00311A  4A05               	infsnz	strcpy@s^0,f,c
  2930   00311C  2A06               	incf	(strcpy@s+1)^0,f,c
  2931   00311E                     	if	0	;tblptru may be non-zero
  2932   00311E                     	endif
  2933   00311E                     	if	0	;tblptru may be non-zero
  2934   00311E                     	endif
  2935   00311E  C007  FFD9         	movff	strcpy@d,fsr2l
  2936   003122  C008  FFDA         	movff	strcpy@d+1,fsr2h
  2937   003126  4A07               	infsnz	strcpy@d^0,f,c
  2938   003128  2A08               	incf	(strcpy@d+1)^0,f,c
  2939   00312A  0008               	tblrd		*
  2940   00312C  CFF5 FFDF          	movff	tablat,indf2
  2941   003130  50DF               	movf	indf2,w,c
  2942   003132  A4D8               	btfss	status,2,c
  2943   003134  EF9E  F018         	goto	u3031
  2944   003138  EFA0  F018         	goto	u3030
  2945   00313C                     u3031:
  2946   00313C  EF89  F018         	goto	l2993
  2947   003140                     u3030:
  2948   003140  0012               	return		;funcret
  2949   003142                     __end_of_strcpy:
  2950                           	callstack 0
  2951                           
  2952 ;; *************** function _pad *****************
  2953 ;; Defined at:
  2954 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2955 ;; Parameters:    Size  Location     Type
  2956 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  2957 ;;		 -> sprintf@f(11), 
  2958 ;;  buf             2   18[COMRAM] PTR unsigned char 
  2959 ;;		 -> dbuf(80), 
  2960 ;;  p               2   20[COMRAM] int 
  2961 ;; Auto vars:     Size  Location     Type
  2962 ;;  w               2   25[COMRAM] int 
  2963 ;;  i               2   23[COMRAM] int 
  2964 ;; Return value:  Size  Location     Type
  2965 ;;                  1    wreg      void 
  2966 ;; Registers used:
  2967 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2968 ;; Tracked objects:
  2969 ;;		On entry : 0/0
  2970 ;;		On exit  : 0/0
  2971 ;;		Unchanged: 0/0
  2972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2973 ;;      Params:         6       0       0       0       0       0       0       0       0
  2974 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2975 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2976 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2977 ;;Total ram usage:       11 bytes
  2978 ;; Hardware stack levels used: 1
  2979 ;; Hardware stack levels required when called: 3
  2980 ;; This function calls:
  2981 ;;		_fputc
  2982 ;;		_fputs
  2983 ;; This function is called by:
  2984 ;;		_efgtoa
  2985 ;; This function uses a non-reentrant model
  2986 ;;
  2987                           
  2988                           	psect	text6
  2989   002D2C                     __ptext6:
  2990                           	callstack 0
  2991   002D2C                     _pad:
  2992                           	callstack 23
  2993   002D2C                     
  2994                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  2995   002D2C  BE16               	btfsc	(pad@p+1)^0,7,c
  2996   002D2E  EF9B  F016         	goto	u2941
  2997   002D32  EF9D  F016         	goto	u2940
  2998   002D36                     u2941:
  2999   002D36  EFA3  F016         	goto	l2959
  3000   002D3A                     u2940:
  3001   002D3A  C015  F01A         	movff	pad@p,pad@w
  3002   002D3E  C016  F01B         	movff	pad@p+1,pad@w+1
  3003   002D42  EFA7  F016         	goto	l836
  3004   002D46                     l2959:
  3005   002D46  0E00               	movlw	0
  3006   002D48  6E1B               	movwf	(pad@w+1)^0,c
  3007   002D4A  0E00               	movlw	0
  3008   002D4C  6E1A               	movwf	pad@w^0,c
  3009   002D4E                     l836:
  3010                           
  3011                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  3012   002D4E  0E00               	movlw	0
  3013   002D50  6E19               	movwf	(pad@i+1)^0,c
  3014   002D52  0E00               	movlw	0
  3015   002D54  6E18               	movwf	pad@i^0,c
  3016                           
  3017                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  3018   002D56  EFB9  F016         	goto	l2965
  3019   002D5A                     l2961:
  3020                           
  3021                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  3022   002D5A  0E00               	movlw	0
  3023   002D5C  6E02               	movwf	(fputc@c+1)^0,c
  3024   002D5E  0E20               	movlw	32
  3025   002D60  6E01               	movwf	fputc@c^0,c
  3026   002D62  C011  F003         	movff	pad@fp,fputc@fp
  3027   002D66  C012  F004         	movff	pad@fp+1,fputc@fp+1
  3028   002D6A  EC50  F015         	call	_fputc	;wreg free
  3029   002D6E                     
  3030                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  3031   002D6E  4A18               	infsnz	pad@i^0,f,c
  3032   002D70  2A19               	incf	(pad@i+1)^0,f,c
  3033   002D72                     l2965:
  3034                           
  3035                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  3036   002D72  501A               	movf	pad@w^0,w,c
  3037   002D74  5C18               	subwf	pad@i^0,w,c
  3038   002D76  5019               	movf	(pad@i+1)^0,w,c
  3039   002D78  0A80               	xorlw	128
  3040   002D7A  6E17               	movwf	??_pad^0,c
  3041   002D7C  501B               	movf	(pad@w+1)^0,w,c
  3042   002D7E  0A80               	xorlw	128
  3043   002D80  5817               	subwfb	??_pad^0,w,c
  3044   002D82  A0D8               	btfss	status,0,c
  3045   002D84  EFC6  F016         	goto	u2951
  3046   002D88  EFC8  F016         	goto	u2950
  3047   002D8C                     u2951:
  3048   002D8C  EFAD  F016         	goto	l2961
  3049   002D90                     u2950:
  3050   002D90                     
  3051                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  3052   002D90  C013  F00A         	movff	pad@buf,fputs@s
  3053   002D94  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3054   002D98  C011  F00C         	movff	pad@fp,fputs@fp
  3055   002D9C  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3056   002DA0  EC5F  F018         	call	_fputs	;wreg free
  3057   002DA4  0012               	return		;funcret
  3058   002DA6                     __end_of_pad:
  3059                           	callstack 0
  3060                           
  3061 ;; *************** function _fputs *****************
  3062 ;; Defined at:
  3063 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  3064 ;; Parameters:    Size  Location     Type
  3065 ;;  s               2    9[COMRAM] PTR const unsigned char 
  3066 ;;		 -> dbuf(80), 
  3067 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  3068 ;;		 -> sprintf@f(11), 
  3069 ;; Auto vars:     Size  Location     Type
  3070 ;;  i               2   14[COMRAM] int 
  3071 ;;  c               1   13[COMRAM] unsigned char 
  3072 ;; Return value:  Size  Location     Type
  3073 ;;                  2    9[COMRAM] int 
  3074 ;; Registers used:
  3075 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3076 ;; Tracked objects:
  3077 ;;		On entry : 0/0
  3078 ;;		On exit  : 0/0
  3079 ;;		Unchanged: 0/0
  3080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3081 ;;      Params:         4       0       0       0       0       0       0       0       0
  3082 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3083 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3084 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3085 ;;Total ram usage:        7 bytes
  3086 ;; Hardware stack levels used: 1
  3087 ;; Hardware stack levels required when called: 2
  3088 ;; This function calls:
  3089 ;;		_fputc
  3090 ;; This function is called by:
  3091 ;;		_pad
  3092 ;; This function uses a non-reentrant model
  3093 ;;
  3094                           
  3095                           	psect	text7
  3096   0030BE                     __ptext7:
  3097                           	callstack 0
  3098   0030BE                     _fputs:
  3099                           	callstack 23
  3100   0030BE  0E00               	movlw	0
  3101   0030C0  6E10               	movwf	(fputs@i+1)^0,c
  3102   0030C2  0E00               	movlw	0
  3103   0030C4  6E0F               	movwf	fputs@i^0,c
  3104   0030C6  EF70  F018         	goto	l2583
  3105   0030CA                     l2579:
  3106   0030CA  C00E  F001         	movff	fputs@c,fputc@c
  3107   0030CE  6A02               	clrf	(fputc@c+1)^0,c
  3108   0030D0  C00C  F003         	movff	fputs@fp,fputc@fp
  3109   0030D4  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  3110   0030D8  EC50  F015         	call	_fputc	;wreg free
  3111   0030DC  4A0F               	infsnz	fputs@i^0,f,c
  3112   0030DE  2A10               	incf	(fputs@i+1)^0,f,c
  3113   0030E0                     l2583:
  3114   0030E0  500F               	movf	fputs@i^0,w,c
  3115   0030E2  240A               	addwf	fputs@s^0,w,c
  3116   0030E4  6ED9               	movwf	fsr2l,c
  3117   0030E6  5010               	movf	(fputs@i+1)^0,w,c
  3118   0030E8  200B               	addwfc	(fputs@s+1)^0,w,c
  3119   0030EA  6EDA               	movwf	fsr2h,c
  3120   0030EC  50DF               	movf	indf2,w,c
  3121   0030EE  6E0E               	movwf	fputs@c^0,c
  3122   0030F0  500E               	movf	fputs@c^0,w,c
  3123   0030F2  A4D8               	btfss	status,2,c
  3124   0030F4  EF7E  F018         	goto	u2351
  3125   0030F8  EF80  F018         	goto	u2350
  3126   0030FC                     u2351:
  3127   0030FC  EF65  F018         	goto	l2579
  3128   003100                     u2350:
  3129   003100  0012               	return		;funcret
  3130   003102                     __end_of_fputs:
  3131                           	callstack 0
  3132                           
  3133 ;; *************** function _fputc *****************
  3134 ;; Defined at:
  3135 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  3136 ;; Parameters:    Size  Location     Type
  3137 ;;  c               2    0[COMRAM] int 
  3138 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  3139 ;;		 -> sprintf@f(11), 
  3140 ;; Auto vars:     Size  Location     Type
  3141 ;;		None
  3142 ;; Return value:  Size  Location     Type
  3143 ;;                  2    0[COMRAM] int 
  3144 ;; Registers used:
  3145 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3146 ;; Tracked objects:
  3147 ;;		On entry : 0/0
  3148 ;;		On exit  : 0/0
  3149 ;;		Unchanged: 0/0
  3150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3151 ;;      Params:         4       0       0       0       0       0       0       0       0
  3152 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3153 ;;      Temps:          5       0       0       0       0       0       0       0       0
  3154 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3155 ;;Total ram usage:        9 bytes
  3156 ;; Hardware stack levels used: 1
  3157 ;; Hardware stack levels required when called: 1
  3158 ;; This function calls:
  3159 ;;		_putch
  3160 ;; This function is called by:
  3161 ;;		_pad
  3162 ;;		_vfpfcnvrt
  3163 ;;		_fputs
  3164 ;; This function uses a non-reentrant model
  3165 ;;
  3166                           
  3167                           	psect	text8
  3168   002AA0                     __ptext8:
  3169                           	callstack 0
  3170   002AA0                     _fputc:
  3171                           	callstack 26
  3172   002AA0  5003               	movf	fputc@fp^0,w,c
  3173   002AA2  1004               	iorwf	(fputc@fp+1)^0,w,c
  3174   002AA4  B4D8               	btfsc	status,2,c
  3175   002AA6  EF57  F015         	goto	u1921
  3176   002AAA  EF59  F015         	goto	u1920
  3177   002AAE                     u1921:
  3178   002AAE  EF62  F015         	goto	l2365
  3179   002AB2                     u1920:
  3180   002AB2  5003               	movf	fputc@fp^0,w,c
  3181   002AB4  1004               	iorwf	(fputc@fp+1)^0,w,c
  3182   002AB6  A4D8               	btfss	status,2,c
  3183   002AB8  EF60  F015         	goto	u1931
  3184   002ABC  EF62  F015         	goto	u1930
  3185   002AC0                     u1931:
  3186   002AC0  EF67  F015         	goto	l2367
  3187   002AC4                     u1930:
  3188   002AC4                     l2365:
  3189   002AC4  5001               	movf	fputc@c^0,w,c
  3190   002AC6  EC59  F019         	call	_putch
  3191   002ACA  EFB4  F015         	goto	l1014
  3192   002ACE                     l2367:
  3193   002ACE  EE20 F009          	lfsr	2,9
  3194   002AD2  5003               	movf	fputc@fp^0,w,c
  3195   002AD4  26D9               	addwf	fsr2l,f,c
  3196   002AD6  5004               	movf	(fputc@fp+1)^0,w,c
  3197   002AD8  22DA               	addwfc	fsr2h,f,c
  3198   002ADA  50DE               	movf	postinc2,w,c
  3199   002ADC  10DE               	iorwf	postinc2,w,c
  3200   002ADE  B4D8               	btfsc	status,2,c
  3201   002AE0  EF74  F015         	goto	u1941
  3202   002AE4  EF76  F015         	goto	u1940
  3203   002AE8                     u1941:
  3204   002AE8  EF91  F015         	goto	l2371
  3205   002AEC                     u1940:
  3206   002AEC  EE20 F009          	lfsr	2,9
  3207   002AF0  5003               	movf	fputc@fp^0,w,c
  3208   002AF2  26D9               	addwf	fsr2l,f,c
  3209   002AF4  5004               	movf	(fputc@fp+1)^0,w,c
  3210   002AF6  22DA               	addwfc	fsr2h,f,c
  3211   002AF8  EE10 F003          	lfsr	1,3
  3212   002AFC  5003               	movf	fputc@fp^0,w,c
  3213   002AFE  26E1               	addwf	fsr1l,f,c
  3214   002B00  5004               	movf	(fputc@fp+1)^0,w,c
  3215   002B02  22E2               	addwfc	fsr1h,f,c
  3216   002B04  50DE               	movf	postinc2,w,c
  3217   002B06  5CE6               	subwf	postinc1,w,c
  3218   002B08  50E6               	movf	postinc1,w,c
  3219   002B0A  0A80               	xorlw	128
  3220   002B0C  6E09               	movwf	(??_fputc+4)^0,c
  3221   002B0E  50DE               	movf	postinc2,w,c
  3222   002B10  0A80               	xorlw	128
  3223   002B12  5809               	subwfb	(??_fputc+4)^0,w,c
  3224   002B14  B0D8               	btfsc	status,0,c
  3225   002B16  EF8F  F015         	goto	u1951
  3226   002B1A  EF91  F015         	goto	u1950
  3227   002B1E                     u1951:
  3228   002B1E  EFB4  F015         	goto	l1014
  3229   002B22                     u1950:
  3230   002B22                     l2371:
  3231   002B22  EE20 F003          	lfsr	2,3
  3232   002B26  5003               	movf	fputc@fp^0,w,c
  3233   002B28  26D9               	addwf	fsr2l,f,c
  3234   002B2A  5004               	movf	(fputc@fp+1)^0,w,c
  3235   002B2C  22DA               	addwfc	fsr2h,f,c
  3236   002B2E  CFDE F005          	movff	postinc2,??_fputc
  3237   002B32  CFDD F006          	movff	postdec2,??_fputc+1
  3238   002B36  C003  FFD9         	movff	fputc@fp,fsr2l
  3239   002B3A  C004  FFDA         	movff	fputc@fp+1,fsr2h
  3240   002B3E  CFDE F007          	movff	postinc2,??_fputc+2
  3241   002B42  CFDD F008          	movff	postdec2,??_fputc+3
  3242   002B46  5005               	movf	??_fputc^0,w,c
  3243   002B48  2407               	addwf	(??_fputc+2)^0,w,c
  3244   002B4A  6ED9               	movwf	fsr2l,c
  3245   002B4C  5006               	movf	(??_fputc+1)^0,w,c
  3246   002B4E  2008               	addwfc	(??_fputc+3)^0,w,c
  3247   002B50  6EDA               	movwf	fsr2h,c
  3248   002B52  C001  FFDF         	movff	fputc@c,indf2
  3249   002B56  EE20 F003          	lfsr	2,3
  3250   002B5A  5003               	movf	fputc@fp^0,w,c
  3251   002B5C  26D9               	addwf	fsr2l,f,c
  3252   002B5E  5004               	movf	(fputc@fp+1)^0,w,c
  3253   002B60  22DA               	addwfc	fsr2h,f,c
  3254   002B62  2ADE               	incf	postinc2,f,c
  3255   002B64  0E00               	movlw	0
  3256   002B66  22DD               	addwfc	postdec2,f,c
  3257   002B68                     l1014:
  3258   002B68  0012               	return		;funcret
  3259   002B6A                     __end_of_fputc:
  3260                           	callstack 0
  3261                           
  3262 ;; *************** function _putch *****************
  3263 ;; Defined at:
  3264 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  3265 ;; Parameters:    Size  Location     Type
  3266 ;;  c               1    wreg     unsigned char 
  3267 ;; Auto vars:     Size  Location     Type
  3268 ;;  c               1    0[COMRAM] unsigned char 
  3269 ;; Return value:  Size  Location     Type
  3270 ;;                  1    wreg      void 
  3271 ;; Registers used:
  3272 ;;		wreg
  3273 ;; Tracked objects:
  3274 ;;		On entry : 0/0
  3275 ;;		On exit  : 0/0
  3276 ;;		Unchanged: 0/0
  3277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3278 ;;      Params:         0       0       0       0       0       0       0       0       0
  3279 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3280 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3281 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3282 ;;Total ram usage:        0 bytes
  3283 ;; Hardware stack levels used: 1
  3284 ;; This function calls:
  3285 ;;		Nothing
  3286 ;; This function is called by:
  3287 ;;		_fputc
  3288 ;; This function uses a non-reentrant model
  3289 ;;
  3290                           
  3291                           	psect	text9
  3292   0032B2                     __ptext9:
  3293                           	callstack 0
  3294   0032B2                     _putch:
  3295                           	callstack 26
  3296   0032B2  0012               	return		;funcret
  3297   0032B4                     __end_of_putch:
  3298                           	callstack 0
  3299                           
  3300 ;; *************** function _memcpy *****************
  3301 ;; Defined at:
  3302 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
  3303 ;; Parameters:    Size  Location     Type
  3304 ;;  d1              2    0[COMRAM] PTR void 
  3305 ;;		 -> dbuf(80), 
  3306 ;;  s1              2    2[COMRAM] PTR const void 
  3307 ;;		 -> dbuf(80), 
  3308 ;;  n               2    4[COMRAM] unsigned int 
  3309 ;; Auto vars:     Size  Location     Type
  3310 ;;  s               2    8[COMRAM] PTR const unsigned char 
  3311 ;;		 -> dbuf(80), 
  3312 ;;  d               2    6[COMRAM] PTR unsigned char 
  3313 ;;		 -> dbuf(80), 
  3314 ;;  tmp             1   10[COMRAM] unsigned char 
  3315 ;; Return value:  Size  Location     Type
  3316 ;;                  2    0[COMRAM] PTR void 
  3317 ;; Registers used:
  3318 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3319 ;; Tracked objects:
  3320 ;;		On entry : 0/0
  3321 ;;		On exit  : 0/0
  3322 ;;		Unchanged: 0/0
  3323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3324 ;;      Params:         6       0       0       0       0       0       0       0       0
  3325 ;;      Locals:         5       0       0       0       0       0       0       0       0
  3326 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3327 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3328 ;;Total ram usage:       11 bytes
  3329 ;; Hardware stack levels used: 1
  3330 ;; This function calls:
  3331 ;;		Nothing
  3332 ;; This function is called by:
  3333 ;;		_efgtoa
  3334 ;; This function uses a non-reentrant model
  3335 ;;
  3336                           
  3337                           	psect	text10
  3338   002F94                     __ptext10:
  3339                           	callstack 0
  3340   002F94                     _memcpy:
  3341                           	callstack 26
  3342   002F94  C003  F009         	movff	memcpy@s1,memcpy@s
  3343   002F98  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
  3344   002F9C  C001  F007         	movff	memcpy@d1,memcpy@d
  3345   002FA0  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
  3346   002FA4  EFE4  F017         	goto	l3037
  3347   002FA8                     l3029:
  3348   002FA8  C009  FFD9         	movff	memcpy@s,fsr2l
  3349   002FAC  C00A  FFDA         	movff	memcpy@s+1,fsr2h
  3350   002FB0  50DF               	movf	indf2,w,c
  3351   002FB2  6E0B               	movwf	memcpy@tmp^0,c
  3352   002FB4  4A09               	infsnz	memcpy@s^0,f,c
  3353   002FB6  2A0A               	incf	(memcpy@s+1)^0,f,c
  3354   002FB8  C007  FFD9         	movff	memcpy@d,fsr2l
  3355   002FBC  C008  FFDA         	movff	memcpy@d+1,fsr2h
  3356   002FC0  C00B  FFDF         	movff	memcpy@tmp,indf2
  3357   002FC4  4A07               	infsnz	memcpy@d^0,f,c
  3358   002FC6  2A08               	incf	(memcpy@d+1)^0,f,c
  3359   002FC8                     l3037:
  3360   002FC8  0605               	decf	memcpy@n^0,f,c
  3361   002FCA  A0D8               	btfss	status,0,c
  3362   002FCC  0606               	decf	(memcpy@n+1)^0,f,c
  3363   002FCE  2805               	incf	memcpy@n^0,w,c
  3364   002FD0  E106               	bnz	u3151
  3365   002FD2  2806               	incf	(memcpy@n+1)^0,w,c
  3366   002FD4  A4D8               	btfss	status,2,c
  3367   002FD6  EFEF  F017         	goto	u3151
  3368   002FDA  EFF1  F017         	goto	u3150
  3369   002FDE                     u3151:
  3370   002FDE  EFD4  F017         	goto	l3029
  3371   002FE2                     u3150:
  3372   002FE2  0012               	return		;funcret
  3373   002FE4                     __end_of_memcpy:
  3374                           	callstack 0
  3375                           
  3376 ;; *************** function _labs *****************
  3377 ;; Defined at:
  3378 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\labs.c"
  3379 ;; Parameters:    Size  Location     Type
  3380 ;;  a               4    0[COMRAM] long 
  3381 ;; Auto vars:     Size  Location     Type
  3382 ;;		None
  3383 ;; Return value:  Size  Location     Type
  3384 ;;                  4    0[COMRAM] long 
  3385 ;; Registers used:
  3386 ;;		wreg, status,2, status,0
  3387 ;; Tracked objects:
  3388 ;;		On entry : 0/0
  3389 ;;		On exit  : 0/0
  3390 ;;		Unchanged: 0/0
  3391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3392 ;;      Params:         4       0       0       0       0       0       0       0       0
  3393 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3394 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3395 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3396 ;;Total ram usage:        8 bytes
  3397 ;; Hardware stack levels used: 1
  3398 ;; This function calls:
  3399 ;;		Nothing
  3400 ;; This function is called by:
  3401 ;;		_efgtoa
  3402 ;; This function uses a non-reentrant model
  3403 ;;
  3404                           
  3405                           	psect	text11
  3406   002E1A                     __ptext11:
  3407                           	callstack 0
  3408   002E1A                     _labs:
  3409                           	callstack 26
  3410   002E1A  BE04               	btfsc	(labs@a+3)^0,7,c
  3411   002E1C  EF1C  F017         	goto	u3040
  3412   002E20  5004               	movf	(labs@a+3)^0,w,c
  3413   002E22  1003               	iorwf	(labs@a+2)^0,w,c
  3414   002E24  1002               	iorwf	(labs@a+1)^0,w,c
  3415   002E26  E106               	bnz	u3041
  3416   002E28  0401               	decf	labs@a^0,w,c
  3417   002E2A  B0D8               	btfsc	status,0,c
  3418   002E2C  EF1A  F017         	goto	u3041
  3419   002E30  EF1C  F017         	goto	u3040
  3420   002E34                     u3041:
  3421   002E34  EF37  F017         	goto	l993
  3422   002E38                     u3040:
  3423   002E38  C001  F005         	movff	labs@a,??_labs
  3424   002E3C  C002  F006         	movff	labs@a+1,??_labs+1
  3425   002E40  C003  F007         	movff	labs@a+2,??_labs+2
  3426   002E44  C004  F008         	movff	labs@a+3,??_labs+3
  3427   002E48  1E05               	comf	??_labs^0,f,c
  3428   002E4A  1E06               	comf	(??_labs+1)^0,f,c
  3429   002E4C  1E07               	comf	(??_labs+2)^0,f,c
  3430   002E4E  1E08               	comf	(??_labs+3)^0,f,c
  3431   002E50  2A05               	incf	??_labs^0,f,c
  3432   002E52  0E00               	movlw	0
  3433   002E54  2206               	addwfc	(??_labs+1)^0,f,c
  3434   002E56  2207               	addwfc	(??_labs+2)^0,f,c
  3435   002E58  2208               	addwfc	(??_labs+3)^0,f,c
  3436   002E5A  C005  F001         	movff	??_labs,?_labs
  3437   002E5E  C006  F002         	movff	??_labs+1,?_labs+1
  3438   002E62  C007  F003         	movff	??_labs+2,?_labs+2
  3439   002E66  C008  F004         	movff	??_labs+3,?_labs+3
  3440   002E6A  EF3F  F017         	goto	l996
  3441   002E6E                     l993:
  3442   002E6E  C001  F001         	movff	labs@a,?_labs
  3443   002E72  C002  F002         	movff	labs@a+1,?_labs+1
  3444   002E76  C003  F003         	movff	labs@a+2,?_labs+2
  3445   002E7A  C004  F004         	movff	labs@a+3,?_labs+3
  3446   002E7E                     l996:
  3447   002E7E  0012               	return		;funcret
  3448   002E80                     __end_of_labs:
  3449                           	callstack 0
  3450                           
  3451 ;; *************** function _floorf *****************
  3452 ;; Defined at:
  3453 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\floorf.c"
  3454 ;; Parameters:    Size  Location     Type
  3455 ;;  x               4   39[COMRAM] float 
  3456 ;; Auto vars:     Size  Location     Type
  3457 ;;  u               4   55[COMRAM] struct .
  3458 ;;  m               4   49[COMRAM] unsigned long 
  3459 ;;  e               2   53[COMRAM] int 
  3460 ;; Return value:  Size  Location     Type
  3461 ;;                  4   39[COMRAM] float 
  3462 ;; Registers used:
  3463 ;;		wreg, status,2, status,0
  3464 ;; Tracked objects:
  3465 ;;		On entry : 0/0
  3466 ;;		On exit  : 0/0
  3467 ;;		Unchanged: 0/0
  3468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3469 ;;      Params:         4       0       0       0       0       0       0       0       0
  3470 ;;      Locals:        10       0       0       0       0       0       0       0       0
  3471 ;;      Temps:          6       0       0       0       0       0       0       0       0
  3472 ;;      Totals:        20       0       0       0       0       0       0       0       0
  3473 ;;Total ram usage:       20 bytes
  3474 ;; Hardware stack levels used: 1
  3475 ;; This function calls:
  3476 ;;		Nothing
  3477 ;; This function is called by:
  3478 ;;		_efgtoa
  3479 ;; This function uses a non-reentrant model
  3480 ;;
  3481                           
  3482                           	psect	text12
  3483   0021B0                     __ptext12:
  3484                           	callstack 0
  3485   0021B0                     _floorf:
  3486                           	callstack 26
  3487   0021B0  C0A5  F038         	movff	floorf@F526,floorf@u
  3488   0021B4  C0A6  F039         	movff	floorf@F526+1,floorf@u+1
  3489   0021B8  C0A7  F03A         	movff	floorf@F526+2,floorf@u+2
  3490   0021BC  C0A8  F03B         	movff	floorf@F526+3,floorf@u+3
  3491   0021C0  C028  F038         	movff	floorf@x,floorf@u
  3492   0021C4  C029  F039         	movff	floorf@x+1,floorf@u+1
  3493   0021C8  C02A  F03A         	movff	floorf@x+2,floorf@u+2
  3494   0021CC  C02B  F03B         	movff	floorf@x+3,floorf@u+3
  3495   0021D0  0E81               	movlw	129
  3496   0021D2  6E2C               	movwf	??_floorf^0,c
  3497   0021D4  0EFF               	movlw	255
  3498   0021D6  6E2D               	movwf	(??_floorf+1)^0,c
  3499   0021D8  C038  F02E         	movff	floorf@u,??_floorf+2
  3500   0021DC  C039  F02F         	movff	floorf@u+1,??_floorf+3
  3501   0021E0  C03A  F030         	movff	floorf@u+2,??_floorf+4
  3502   0021E4  C03B  F031         	movff	floorf@u+3,??_floorf+5
  3503   0021E8  0E18               	movlw	24
  3504   0021EA  EFFC  F010         	goto	u3050
  3505   0021EE                     u3055:
  3506   0021EE  90D8               	bcf	status,0,c
  3507   0021F0  3231               	rrcf	(??_floorf+5)^0,f,c
  3508   0021F2  3230               	rrcf	(??_floorf+4)^0,f,c
  3509   0021F4  322F               	rrcf	(??_floorf+3)^0,f,c
  3510   0021F6  322E               	rrcf	(??_floorf+2)^0,f,c
  3511   0021F8                     u3050:
  3512   0021F8  2EE8               	decfsz	wreg,f,c
  3513   0021FA  EFF7  F010         	goto	u3055
  3514   0021FE  502E               	movf	(??_floorf+2)^0,w,c
  3515   002200  242C               	addwf	??_floorf^0,w,c
  3516   002202  6E36               	movwf	floorf@e^0,c
  3517   002204  0E00               	movlw	0
  3518   002206  202D               	addwfc	(??_floorf+1)^0,w,c
  3519   002208  6E37               	movwf	(floorf@e+1)^0,c
  3520   00220A  BE37               	btfsc	(floorf@e+1)^0,7,c
  3521   00220C  EF11  F011         	goto	u3061
  3522   002210  5037               	movf	(floorf@e+1)^0,w,c
  3523   002212  E109               	bnz	u3060
  3524   002214  0E17               	movlw	23
  3525   002216  5C36               	subwf	floorf@e^0,w,c
  3526   002218  A0D8               	btfss	status,0,c
  3527   00221A  EF11  F011         	goto	u3061
  3528   00221E  EF13  F011         	goto	u3060
  3529   002222                     u3061:
  3530   002222  EF1D  F011         	goto	l3005
  3531   002226                     u3060:
  3532   002226                     l3003:
  3533   002226  C028  F028         	movff	floorf@x,?_floorf
  3534   00222A  C029  F029         	movff	floorf@x+1,?_floorf+1
  3535   00222E  C02A  F02A         	movff	floorf@x+2,?_floorf+2
  3536   002232  C02B  F02B         	movff	floorf@x+3,?_floorf+3
  3537   002236  EFE0  F011         	goto	l968
  3538   00223A                     l3005:
  3539   00223A  BE37               	btfsc	(floorf@e+1)^0,7,c
  3540   00223C  EF22  F011         	goto	u3071
  3541   002240  EF24  F011         	goto	u3070
  3542   002244                     u3071:
  3543   002244  EF94  F011         	goto	l3015
  3544   002248                     u3070:
  3545   002248  C036  F02C         	movff	floorf@e,??_floorf
  3546   00224C  0EFF               	movlw	255
  3547   00224E  6E2D               	movwf	(??_floorf+1)^0,c
  3548   002250  0EFF               	movlw	255
  3549   002252  6E2E               	movwf	(??_floorf+2)^0,c
  3550   002254  0E7F               	movlw	127
  3551   002256  6E2F               	movwf	(??_floorf+3)^0,c
  3552   002258  0E00               	movlw	0
  3553   00225A  6E30               	movwf	(??_floorf+4)^0,c
  3554   00225C                     u3085:
  3555   00225C  662C               	tstfsz	??_floorf^0,c
  3556   00225E  EF33  F011         	goto	u3086
  3557   002262  EF3B  F011         	goto	u3087
  3558   002266                     u3086:
  3559   002266  3430               	rlcf	(??_floorf+4)^0,w,c
  3560   002268  3230               	rrcf	(??_floorf+4)^0,f,c
  3561   00226A  322F               	rrcf	(??_floorf+3)^0,f,c
  3562   00226C  322E               	rrcf	(??_floorf+2)^0,f,c
  3563   00226E  322D               	rrcf	(??_floorf+1)^0,f,c
  3564   002270  2E2C               	decfsz	??_floorf^0,f,c
  3565   002272  EF2E  F011         	goto	u3085
  3566   002276                     u3087:
  3567   002276  C02D  F032         	movff	??_floorf+1,floorf@m
  3568   00227A  C02E  F033         	movff	??_floorf+2,floorf@m+1
  3569   00227E  C02F  F034         	movff	??_floorf+3,floorf@m+2
  3570   002282  C030  F035         	movff	??_floorf+4,floorf@m+3
  3571   002286  5032               	movf	floorf@m^0,w,c
  3572   002288  1438               	andwf	floorf@u^0,w,c
  3573   00228A  6E2C               	movwf	??_floorf^0,c
  3574   00228C  5033               	movf	(floorf@m+1)^0,w,c
  3575   00228E  1439               	andwf	(floorf@u+1)^0,w,c
  3576   002290  6E2D               	movwf	(??_floorf+1)^0,c
  3577   002292  5034               	movf	(floorf@m+2)^0,w,c
  3578   002294  143A               	andwf	(floorf@u+2)^0,w,c
  3579   002296  6E2E               	movwf	(??_floorf+2)^0,c
  3580   002298  5035               	movf	(floorf@m+3)^0,w,c
  3581   00229A  143B               	andwf	(floorf@u+3)^0,w,c
  3582   00229C  6E2F               	movwf	(??_floorf+3)^0,c
  3583   00229E  502C               	movf	??_floorf^0,w,c
  3584   0022A0  102D               	iorwf	(??_floorf+1)^0,w,c
  3585   0022A2  102E               	iorwf	(??_floorf+2)^0,w,c
  3586   0022A4  102F               	iorwf	(??_floorf+3)^0,w,c
  3587   0022A6  A4D8               	btfss	status,2,c
  3588   0022A8  EF58  F011         	goto	u3091
  3589   0022AC  EF5A  F011         	goto	u3090
  3590   0022B0                     u3091:
  3591   0022B0  EF5C  F011         	goto	l3011
  3592   0022B4                     u3090:
  3593   0022B4  EF13  F011         	goto	l3003
  3594   0022B8                     l3011:
  3595   0022B8  C038  F02C         	movff	floorf@u,??_floorf
  3596   0022BC  C039  F02D         	movff	floorf@u+1,??_floorf+1
  3597   0022C0  C03A  F02E         	movff	floorf@u+2,??_floorf+2
  3598   0022C4  C03B  F02F         	movff	floorf@u+3,??_floorf+3
  3599   0022C8  0E20               	movlw	32
  3600   0022CA  EF6C  F011         	goto	u3100
  3601   0022CE                     u3105:
  3602   0022CE  90D8               	bcf	status,0,c
  3603   0022D0  322F               	rrcf	(??_floorf+3)^0,f,c
  3604   0022D2  322E               	rrcf	(??_floorf+2)^0,f,c
  3605   0022D4  322D               	rrcf	(??_floorf+1)^0,f,c
  3606   0022D6  322C               	rrcf	??_floorf^0,f,c
  3607   0022D8                     u3100:
  3608   0022D8  2EE8               	decfsz	wreg,f,c
  3609   0022DA  EF67  F011         	goto	u3105
  3610   0022DE  502C               	movf	??_floorf^0,w,c
  3611   0022E0  102D               	iorwf	(??_floorf+1)^0,w,c
  3612   0022E2  102E               	iorwf	(??_floorf+2)^0,w,c
  3613   0022E4  102F               	iorwf	(??_floorf+3)^0,w,c
  3614   0022E6  B4D8               	btfsc	status,2,c
  3615   0022E8  EF78  F011         	goto	u3111
  3616   0022EC  EF7A  F011         	goto	u3110
  3617   0022F0                     u3111:
  3618   0022F0  EF82  F011         	goto	l971
  3619   0022F4                     u3110:
  3620   0022F4  5032               	movf	floorf@m^0,w,c
  3621   0022F6  2638               	addwf	floorf@u^0,f,c
  3622   0022F8  5033               	movf	(floorf@m+1)^0,w,c
  3623   0022FA  2239               	addwfc	(floorf@u+1)^0,f,c
  3624   0022FC  5034               	movf	(floorf@m+2)^0,w,c
  3625   0022FE  223A               	addwfc	(floorf@u+2)^0,f,c
  3626   002300  5035               	movf	(floorf@m+3)^0,w,c
  3627   002302  223B               	addwfc	(floorf@u+3)^0,f,c
  3628   002304                     l971:
  3629   002304  1C32               	comf	floorf@m^0,w,c
  3630   002306  6E2C               	movwf	??_floorf^0,c
  3631   002308  1C33               	comf	(floorf@m+1)^0,w,c
  3632   00230A  6E2D               	movwf	(??_floorf+1)^0,c
  3633   00230C  1C34               	comf	(floorf@m+2)^0,w,c
  3634   00230E  6E2E               	movwf	(??_floorf+2)^0,c
  3635   002310  1C35               	comf	(floorf@m+3)^0,w,c
  3636   002312  6E2F               	movwf	(??_floorf+3)^0,c
  3637   002314  502C               	movf	??_floorf^0,w,c
  3638   002316  1638               	andwf	floorf@u^0,f,c
  3639   002318  502D               	movf	(??_floorf+1)^0,w,c
  3640   00231A  1639               	andwf	(floorf@u+1)^0,f,c
  3641   00231C  502E               	movf	(??_floorf+2)^0,w,c
  3642   00231E  163A               	andwf	(floorf@u+2)^0,f,c
  3643   002320  502F               	movf	(??_floorf+3)^0,w,c
  3644   002322  163B               	andwf	(floorf@u+3)^0,f,c
  3645   002324  EFD8  F011         	goto	l3023
  3646   002328                     l3015:
  3647   002328  C038  F02C         	movff	floorf@u,??_floorf
  3648   00232C  C039  F02D         	movff	floorf@u+1,??_floorf+1
  3649   002330  C03A  F02E         	movff	floorf@u+2,??_floorf+2
  3650   002334  C03B  F02F         	movff	floorf@u+3,??_floorf+3
  3651   002338  0E20               	movlw	32
  3652   00233A  EFA4  F011         	goto	u3120
  3653   00233E                     u3125:
  3654   00233E  90D8               	bcf	status,0,c
  3655   002340  322F               	rrcf	(??_floorf+3)^0,f,c
  3656   002342  322E               	rrcf	(??_floorf+2)^0,f,c
  3657   002344  322D               	rrcf	(??_floorf+1)^0,f,c
  3658   002346  322C               	rrcf	??_floorf^0,f,c
  3659   002348                     u3120:
  3660   002348  2EE8               	decfsz	wreg,f,c
  3661   00234A  EF9F  F011         	goto	u3125
  3662   00234E  502C               	movf	??_floorf^0,w,c
  3663   002350  102D               	iorwf	(??_floorf+1)^0,w,c
  3664   002352  102E               	iorwf	(??_floorf+2)^0,w,c
  3665   002354  102F               	iorwf	(??_floorf+3)^0,w,c
  3666   002356  A4D8               	btfss	status,2,c
  3667   002358  EFB0  F011         	goto	u3131
  3668   00235C  EFB2  F011         	goto	u3130
  3669   002360                     u3131:
  3670   002360  EFBC  F011         	goto	l3019
  3671   002364                     u3130:
  3672   002364  0E00               	movlw	0
  3673   002366  6E38               	movwf	floorf@u^0,c
  3674   002368  0E00               	movlw	0
  3675   00236A  6E39               	movwf	(floorf@u+1)^0,c
  3676   00236C  0E00               	movlw	0
  3677   00236E  6E3A               	movwf	(floorf@u+2)^0,c
  3678   002370  0E00               	movlw	0
  3679   002372  6E3B               	movwf	(floorf@u+3)^0,c
  3680   002374  EFD8  F011         	goto	l3023
  3681   002378                     l3019:
  3682   002378  90D8               	bcf	status,0,c
  3683   00237A  3438               	rlcf	floorf@u^0,w,c
  3684   00237C  6E2C               	movwf	??_floorf^0,c
  3685   00237E  3439               	rlcf	(floorf@u+1)^0,w,c
  3686   002380  6E2D               	movwf	(??_floorf+1)^0,c
  3687   002382  343A               	rlcf	(floorf@u+2)^0,w,c
  3688   002384  6E2E               	movwf	(??_floorf+2)^0,c
  3689   002386  343B               	rlcf	(floorf@u+3)^0,w,c
  3690   002388  6E2F               	movwf	(??_floorf+3)^0,c
  3691   00238A  502C               	movf	??_floorf^0,w,c
  3692   00238C  102D               	iorwf	(??_floorf+1)^0,w,c
  3693   00238E  102E               	iorwf	(??_floorf+2)^0,w,c
  3694   002390  102F               	iorwf	(??_floorf+3)^0,w,c
  3695   002392  B4D8               	btfsc	status,2,c
  3696   002394  EFCE  F011         	goto	u3141
  3697   002398  EFD0  F011         	goto	u3140
  3698   00239C                     u3141:
  3699   00239C  EFD8  F011         	goto	l3023
  3700   0023A0                     u3140:
  3701   0023A0  0E00               	movlw	0
  3702   0023A2  6E38               	movwf	floorf@u^0,c
  3703   0023A4  0E00               	movlw	0
  3704   0023A6  6E39               	movwf	(floorf@u+1)^0,c
  3705   0023A8  0E80               	movlw	128
  3706   0023AA  6E3A               	movwf	(floorf@u+2)^0,c
  3707   0023AC  0EBF               	movlw	191
  3708   0023AE  6E3B               	movwf	(floorf@u+3)^0,c
  3709   0023B0                     l3023:
  3710   0023B0  C038  F028         	movff	floorf@u,?_floorf
  3711   0023B4  C039  F029         	movff	floorf@u+1,?_floorf+1
  3712   0023B8  C03A  F02A         	movff	floorf@u+2,?_floorf+2
  3713   0023BC  C03B  F02B         	movff	floorf@u+3,?_floorf+3
  3714   0023C0                     l968:
  3715   0023C0  0012               	return		;funcret
  3716   0023C2                     __end_of_floorf:
  3717                           	callstack 0
  3718                           
  3719 ;; *************** function ___fpclassifyf *****************
  3720 ;; Defined at:
  3721 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__fpclassifyf.c"
  3722 ;; Parameters:    Size  Location     Type
  3723 ;;  x               4    0[COMRAM] float 
  3724 ;; Auto vars:     Size  Location     Type
  3725 ;;  u               4   10[COMRAM] struct .
  3726 ;;  e               2    8[COMRAM] int 
  3727 ;; Return value:  Size  Location     Type
  3728 ;;                  2    0[COMRAM] int 
  3729 ;; Registers used:
  3730 ;;		wreg, status,2, status,0
  3731 ;; Tracked objects:
  3732 ;;		On entry : 0/0
  3733 ;;		On exit  : 0/0
  3734 ;;		Unchanged: 0/0
  3735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3736 ;;      Params:         4       0       0       0       0       0       0       0       0
  3737 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3738 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3739 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3740 ;;Total ram usage:       14 bytes
  3741 ;; Hardware stack levels used: 1
  3742 ;; This function calls:
  3743 ;;		Nothing
  3744 ;; This function is called by:
  3745 ;;		_efgtoa
  3746 ;; This function uses a non-reentrant model
  3747 ;;
  3748                           
  3749                           	psect	text13
  3750   0028CA                     __ptext13:
  3751                           	callstack 0
  3752   0028CA                     ___fpclassifyf:
  3753                           	callstack 26
  3754   0028CA  C0A9  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  3755   0028CE  C0AA  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  3756   0028D2  C0AB  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  3757   0028D6  C0AC  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  3758   0028DA  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  3759   0028DE  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  3760   0028E2  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  3761   0028E6  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  3762   0028EA  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  3763   0028EE  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  3764   0028F2  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  3765   0028F6  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  3766   0028FA  0E18               	movlw	24
  3767   0028FC  EF85  F014         	goto	u2960
  3768   002900                     u2965:
  3769   002900  90D8               	bcf	status,0,c
  3770   002902  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  3771   002904  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  3772   002906  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  3773   002908  3205               	rrcf	??___fpclassifyf^0,f,c
  3774   00290A                     u2960:
  3775   00290A  2EE8               	decfsz	wreg,f,c
  3776   00290C  EF80  F014         	goto	u2965
  3777   002910  5005               	movf	??___fpclassifyf^0,w,c
  3778   002912  6E09               	movwf	___fpclassifyf@e^0,c
  3779   002914  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  3780   002916  5009               	movf	___fpclassifyf@e^0,w,c
  3781   002918  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  3782   00291A  A4D8               	btfss	status,2,c
  3783   00291C  EF92  F014         	goto	u2971
  3784   002920  EF94  F014         	goto	u2970
  3785   002924                     u2971:
  3786   002924  EFB4  F014         	goto	l2981
  3787   002928                     u2970:
  3788   002928  90D8               	bcf	status,0,c
  3789   00292A  340B               	rlcf	___fpclassifyf@u^0,w,c
  3790   00292C  6E05               	movwf	??___fpclassifyf^0,c
  3791   00292E  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  3792   002930  6E06               	movwf	(??___fpclassifyf+1)^0,c
  3793   002932  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  3794   002934  6E07               	movwf	(??___fpclassifyf+2)^0,c
  3795   002936  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  3796   002938  6E08               	movwf	(??___fpclassifyf+3)^0,c
  3797   00293A  5005               	movf	??___fpclassifyf^0,w,c
  3798   00293C  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  3799   00293E  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  3800   002940  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  3801   002942  A4D8               	btfss	status,2,c
  3802   002944  EFA6  F014         	goto	u2981
  3803   002948  EFA8  F014         	goto	u2980
  3804   00294C                     u2981:
  3805   00294C  EFAE  F014         	goto	l2977
  3806   002950                     u2980:
  3807   002950  0E00               	movlw	0
  3808   002952  6E02               	movwf	(?___fpclassifyf+1)^0,c
  3809   002954  0E02               	movlw	2
  3810   002956  6E01               	movwf	?___fpclassifyf^0,c
  3811   002958  EFE3  F014         	goto	l936
  3812   00295C                     l2977:
  3813   00295C  0E00               	movlw	0
  3814   00295E  6E02               	movwf	(?___fpclassifyf+1)^0,c
  3815   002960  0E03               	movlw	3
  3816   002962  6E01               	movwf	?___fpclassifyf^0,c
  3817   002964  EFE3  F014         	goto	l936
  3818   002968                     l2981:
  3819   002968  2809               	incf	___fpclassifyf@e^0,w,c
  3820   00296A  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  3821   00296C  A4D8               	btfss	status,2,c
  3822   00296E  EFBB  F014         	goto	u2991
  3823   002972  EFBD  F014         	goto	u2990
  3824   002976                     u2991:
  3825   002976  EFDF  F014         	goto	l2987
  3826   00297A                     u2990:
  3827   00297A  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  3828   00297E  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  3829   002982  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  3830   002986  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  3831   00298A  0E09               	movlw	9
  3832   00298C                     u3005:
  3833   00298C  90D8               	bcf	status,0,c
  3834   00298E  3605               	rlcf	??___fpclassifyf^0,f,c
  3835   002990  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  3836   002992  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  3837   002994  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  3838   002996  2EE8               	decfsz	wreg,f,c
  3839   002998  EFC6  F014         	goto	u3005
  3840   00299C  5005               	movf	??___fpclassifyf^0,w,c
  3841   00299E  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  3842   0029A0  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  3843   0029A2  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  3844   0029A4  B4D8               	btfsc	status,2,c
  3845   0029A6  EFD7  F014         	goto	u3011
  3846   0029AA  EFDA  F014         	goto	u3010
  3847   0029AE                     u3011:
  3848   0029AE  0E01               	movlw	1
  3849   0029B0  EFDB  F014         	goto	u3020
  3850   0029B4                     u3010:
  3851   0029B4  0E00               	movlw	0
  3852   0029B6                     u3020:
  3853   0029B6  6E01               	movwf	?___fpclassifyf^0,c
  3854   0029B8  6A02               	clrf	(?___fpclassifyf+1)^0,c
  3855   0029BA  EFE3  F014         	goto	l936
  3856   0029BE                     l2987:
  3857   0029BE  0E00               	movlw	0
  3858   0029C0  6E02               	movwf	(?___fpclassifyf+1)^0,c
  3859   0029C2  0E04               	movlw	4
  3860   0029C4  6E01               	movwf	?___fpclassifyf^0,c
  3861   0029C6                     l936:
  3862   0029C6  0012               	return		;funcret
  3863   0029C8                     __end_of___fpclassifyf:
  3864                           	callstack 0
  3865                           
  3866 ;; *************** function ___fltol *****************
  3867 ;; Defined at:
  3868 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  3869 ;; Parameters:    Size  Location     Type
  3870 ;;  f1              4    0[COMRAM] int 
  3871 ;; Auto vars:     Size  Location     Type
  3872 ;;  exp1            1    9[COMRAM] unsigned char 
  3873 ;;  sign1           1    8[COMRAM] unsigned char 
  3874 ;; Return value:  Size  Location     Type
  3875 ;;                  4    0[COMRAM] long 
  3876 ;; Registers used:
  3877 ;;		wreg, status,2, status,0
  3878 ;; Tracked objects:
  3879 ;;		On entry : 0/0
  3880 ;;		On exit  : 0/0
  3881 ;;		Unchanged: 0/0
  3882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3883 ;;      Params:         4       0       0       0       0       0       0       0       0
  3884 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3885 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3886 ;;      Totals:        10       0       0       0       0       0       0       0       0
  3887 ;;Total ram usage:       10 bytes
  3888 ;; Hardware stack levels used: 1
  3889 ;; This function calls:
  3890 ;;		Nothing
  3891 ;; This function is called by:
  3892 ;;		_efgtoa
  3893 ;; This function uses a non-reentrant model
  3894 ;;
  3895                           
  3896                           	psect	text14
  3897   0026C0                     __ptext14:
  3898                           	callstack 0
  3899   0026C0                     ___fltol:
  3900                           	callstack 26
  3901   0026C0  3403               	rlcf	(___fltol@f1+2)^0,w,c
  3902   0026C2  3404               	rlcf	(___fltol@f1+3)^0,w,c
  3903   0026C4  6E0A               	movwf	___fltol@exp1^0,c
  3904   0026C6  500A               	movf	___fltol@exp1^0,w,c
  3905   0026C8  A4D8               	btfss	status,2,c
  3906   0026CA  EF69  F013         	goto	u2871
  3907   0026CE  EF6B  F013         	goto	u2870
  3908   0026D2                     u2871:
  3909   0026D2  EF75  F013         	goto	l2917
  3910   0026D6                     u2870:
  3911   0026D6                     l2913:
  3912   0026D6  0E00               	movlw	0
  3913   0026D8  6E01               	movwf	?___fltol^0,c
  3914   0026DA  0E00               	movlw	0
  3915   0026DC  6E02               	movwf	(?___fltol+1)^0,c
  3916   0026DE  0E00               	movlw	0
  3917   0026E0  6E03               	movwf	(?___fltol+2)^0,c
  3918   0026E2  0E00               	movlw	0
  3919   0026E4  6E04               	movwf	(?___fltol+3)^0,c
  3920   0026E6  EFE2  F013         	goto	l421
  3921   0026EA                     l2917:
  3922   0026EA  C001  F005         	movff	___fltol@f1,??___fltol
  3923   0026EE  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  3924   0026F2  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  3925   0026F6  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  3926   0026FA  0E20               	movlw	32
  3927   0026FC  EF85  F013         	goto	u2880
  3928   002700                     u2885:
  3929   002700  90D8               	bcf	status,0,c
  3930   002702  3208               	rrcf	(??___fltol+3)^0,f,c
  3931   002704  3207               	rrcf	(??___fltol+2)^0,f,c
  3932   002706  3206               	rrcf	(??___fltol+1)^0,f,c
  3933   002708  3205               	rrcf	??___fltol^0,f,c
  3934   00270A                     u2880:
  3935   00270A  2EE8               	decfsz	wreg,f,c
  3936   00270C  EF80  F013         	goto	u2885
  3937   002710  5005               	movf	??___fltol^0,w,c
  3938   002712  6E09               	movwf	___fltol@sign1^0,c
  3939   002714  8E03               	bsf	(___fltol@f1+2)^0,7,c
  3940   002716  0EFF               	movlw	255
  3941   002718  1601               	andwf	___fltol@f1^0,f,c
  3942   00271A  0EFF               	movlw	255
  3943   00271C  1602               	andwf	(___fltol@f1+1)^0,f,c
  3944   00271E  0EFF               	movlw	255
  3945   002720  1603               	andwf	(___fltol@f1+2)^0,f,c
  3946   002722  0E00               	movlw	0
  3947   002724  1604               	andwf	(___fltol@f1+3)^0,f,c
  3948   002726  0E96               	movlw	150
  3949   002728  5E0A               	subwf	___fltol@exp1^0,f,c
  3950   00272A  BE0A               	btfsc	___fltol@exp1^0,7,c
  3951   00272C  EF9C  F013         	goto	u2890
  3952   002730  EF9A  F013         	goto	u2891
  3953   002734                     u2891:
  3954   002734  EFB2  F013         	goto	l2937
  3955   002738                     u2890:
  3956   002738  500A               	movf	___fltol@exp1^0,w,c
  3957   00273A  0A80               	xorlw	128
  3958   00273C  0F97               	addlw	151
  3959   00273E  B0D8               	btfsc	status,0,c
  3960   002740  EFA4  F013         	goto	u2901
  3961   002744  EFA6  F013         	goto	u2900
  3962   002748                     u2901:
  3963   002748  EFA8  F013         	goto	l2933
  3964   00274C                     u2900:
  3965   00274C  EF6B  F013         	goto	l2913
  3966   002750                     l2933:
  3967   002750  90D8               	bcf	status,0,c
  3968   002752  3204               	rrcf	(___fltol@f1+3)^0,f,c
  3969   002754  3203               	rrcf	(___fltol@f1+2)^0,f,c
  3970   002756  3202               	rrcf	(___fltol@f1+1)^0,f,c
  3971   002758  3201               	rrcf	___fltol@f1^0,f,c
  3972   00275A  3E0A               	incfsz	___fltol@exp1^0,f,c
  3973   00275C  EFA8  F013         	goto	l2933
  3974   002760  EFCA  F013         	goto	l2947
  3975   002764                     l2937:
  3976   002764  0E1F               	movlw	31
  3977   002766  640A               	cpfsgt	___fltol@exp1^0,c
  3978   002768  EFB8  F013         	goto	u2911
  3979   00276C  EFBA  F013         	goto	u2910
  3980   002770                     u2911:
  3981   002770  EFC2  F013         	goto	l2945
  3982   002774                     u2910:
  3983   002774  EF6B  F013         	goto	l2913
  3984   002778                     l2943:
  3985   002778  90D8               	bcf	status,0,c
  3986   00277A  3601               	rlcf	___fltol@f1^0,f,c
  3987   00277C  3602               	rlcf	(___fltol@f1+1)^0,f,c
  3988   00277E  3603               	rlcf	(___fltol@f1+2)^0,f,c
  3989   002780  3604               	rlcf	(___fltol@f1+3)^0,f,c
  3990   002782  060A               	decf	___fltol@exp1^0,f,c
  3991   002784                     l2945:
  3992   002784  500A               	movf	___fltol@exp1^0,w,c
  3993   002786  A4D8               	btfss	status,2,c
  3994   002788  EFC8  F013         	goto	u2921
  3995   00278C  EFCA  F013         	goto	u2920
  3996   002790                     u2921:
  3997   002790  EFBC  F013         	goto	l2943
  3998   002794                     u2920:
  3999   002794                     l2947:
  4000   002794  5009               	movf	___fltol@sign1^0,w,c
  4001   002796  B4D8               	btfsc	status,2,c
  4002   002798  EFD0  F013         	goto	u2931
  4003   00279C  EFD2  F013         	goto	u2930
  4004   0027A0                     u2931:
  4005   0027A0  EFDA  F013         	goto	l2951
  4006   0027A4                     u2930:
  4007   0027A4  1E04               	comf	(___fltol@f1+3)^0,f,c
  4008   0027A6  1E03               	comf	(___fltol@f1+2)^0,f,c
  4009   0027A8  1E02               	comf	(___fltol@f1+1)^0,f,c
  4010   0027AA  6C01               	negf	___fltol@f1^0,c
  4011   0027AC  0E00               	movlw	0
  4012   0027AE  2202               	addwfc	(___fltol@f1+1)^0,f,c
  4013   0027B0  2203               	addwfc	(___fltol@f1+2)^0,f,c
  4014   0027B2  2204               	addwfc	(___fltol@f1+3)^0,f,c
  4015   0027B4                     l2951:
  4016   0027B4  C001  F001         	movff	___fltol@f1,?___fltol
  4017   0027B8  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  4018   0027BC  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  4019   0027C0  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  4020   0027C4                     l421:
  4021   0027C4  0012               	return		;funcret
  4022   0027C6                     __end_of___fltol:
  4023                           	callstack 0
  4024                           
  4025 ;; *************** function ___flsub *****************
  4026 ;; Defined at:
  4027 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  4028 ;; Parameters:    Size  Location     Type
  4029 ;;  b               4   25[COMRAM] long 
  4030 ;;  a               4   29[COMRAM] long 
  4031 ;; Auto vars:     Size  Location     Type
  4032 ;;		None
  4033 ;; Return value:  Size  Location     Type
  4034 ;;                  4   25[COMRAM] long 
  4035 ;; Registers used:
  4036 ;;		wreg, status,2, status,0, cstack
  4037 ;; Tracked objects:
  4038 ;;		On entry : 0/0
  4039 ;;		On exit  : 0/0
  4040 ;;		Unchanged: 0/0
  4041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4042 ;;      Params:         8       0       0       0       0       0       0       0       0
  4043 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4044 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4045 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4046 ;;Total ram usage:        8 bytes
  4047 ;; Hardware stack levels used: 1
  4048 ;; Hardware stack levels required when called: 1
  4049 ;; This function calls:
  4050 ;;		___fladd
  4051 ;; This function is called by:
  4052 ;;		_efgtoa
  4053 ;; This function uses a non-reentrant model
  4054 ;;
  4055                           
  4056                           	psect	text15
  4057   003032                     __ptext15:
  4058                           	callstack 0
  4059   003032                     ___flsub:
  4060                           	callstack 25
  4061   003032  0E00               	movlw	0
  4062   003034  1A1E               	xorwf	___flsub@a^0,f,c
  4063   003036  0E00               	movlw	0
  4064   003038  1A1F               	xorwf	(___flsub@a+1)^0,f,c
  4065   00303A  0E00               	movlw	0
  4066   00303C  1A20               	xorwf	(___flsub@a+2)^0,f,c
  4067   00303E  0E80               	movlw	128
  4068   003040  1A21               	xorwf	(___flsub@a+3)^0,f,c
  4069   003042  C01A  F001         	movff	___flsub@b,___fladd@b
  4070   003046  C01B  F002         	movff	___flsub@b+1,___fladd@b+1
  4071   00304A  C01C  F003         	movff	___flsub@b+2,___fladd@b+2
  4072   00304E  C01D  F004         	movff	___flsub@b+3,___fladd@b+3
  4073   003052  C01E  F005         	movff	___flsub@a,___fladd@a
  4074   003056  C01F  F006         	movff	___flsub@a+1,___fladd@a+1
  4075   00305A  C020  F007         	movff	___flsub@a+2,___fladd@a+2
  4076   00305E  C021  F008         	movff	___flsub@a+3,___fladd@a+3
  4077   003062  EC0B  F009         	call	___fladd	;wreg free
  4078   003066  C001  F01A         	movff	?___fladd,?___flsub
  4079   00306A  C002  F01B         	movff	?___fladd+1,?___flsub+1
  4080   00306E  C003  F01C         	movff	?___fladd+2,?___flsub+2
  4081   003072  C004  F01D         	movff	?___fladd+3,?___flsub+3
  4082   003076  0012               	return		;funcret
  4083   003078                     __end_of___flsub:
  4084                           	callstack 0
  4085                           
  4086 ;; *************** function ___fladd *****************
  4087 ;; Defined at:
  4088 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  4089 ;; Parameters:    Size  Location     Type
  4090 ;;  b               4    0[COMRAM] long 
  4091 ;;  a               4    4[COMRAM] long 
  4092 ;; Auto vars:     Size  Location     Type
  4093 ;;  grs             1   15[COMRAM] unsigned char 
  4094 ;;  bexp            1   14[COMRAM] unsigned char 
  4095 ;;  aexp            1   13[COMRAM] unsigned char 
  4096 ;;  signs           1   12[COMRAM] unsigned char 
  4097 ;; Return value:  Size  Location     Type
  4098 ;;                  4    0[COMRAM] unsigned char 
  4099 ;; Registers used:
  4100 ;;		wreg, status,2, status,0
  4101 ;; Tracked objects:
  4102 ;;		On entry : 0/0
  4103 ;;		On exit  : 0/0
  4104 ;;		Unchanged: 0/0
  4105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4106 ;;      Params:         8       0       0       0       0       0       0       0       0
  4107 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4108 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4109 ;;      Totals:        16       0       0       0       0       0       0       0       0
  4110 ;;Total ram usage:       16 bytes
  4111 ;; Hardware stack levels used: 1
  4112 ;; This function calls:
  4113 ;;		Nothing
  4114 ;; This function is called by:
  4115 ;;		___flsub
  4116 ;;		_efgtoa
  4117 ;; This function uses a non-reentrant model
  4118 ;;
  4119                           
  4120                           	psect	text16
  4121   001216                     __ptext16:
  4122                           	callstack 0
  4123   001216                     ___fladd:
  4124                           	callstack 25
  4125   001216  5004               	movf	(___fladd@b+3)^0,w,c
  4126   001218  0B80               	andlw	128
  4127   00121A  6E0D               	movwf	___fladd@signs^0,c
  4128   00121C  5004               	movf	(___fladd@b+3)^0,w,c
  4129   00121E  2404               	addwf	(___fladd@b+3)^0,w,c
  4130   001220  6E0F               	movwf	___fladd@bexp^0,c
  4131   001222  AE03               	btfss	(___fladd@b+2)^0,7,c
  4132   001224  EF16  F009         	goto	u1961
  4133   001228  EF18  F009         	goto	u1960
  4134   00122C                     u1961:
  4135   00122C  EF19  F009         	goto	l2381
  4136   001230                     u1960:
  4137   001230  800F               	bsf	___fladd@bexp^0,0,c
  4138   001232                     l2381:
  4139   001232  500F               	movf	___fladd@bexp^0,w,c
  4140   001234  B4D8               	btfsc	status,2,c
  4141   001236  EF1F  F009         	goto	u1971
  4142   00123A  EF21  F009         	goto	u1970
  4143   00123E                     u1971:
  4144   00123E  EF36  F009         	goto	l2391
  4145   001242                     u1970:
  4146   001242  280F               	incf	___fladd@bexp^0,w,c
  4147   001244  A4D8               	btfss	status,2,c
  4148   001246  EF27  F009         	goto	u1981
  4149   00124A  EF29  F009         	goto	u1980
  4150   00124E                     u1981:
  4151   00124E  EF31  F009         	goto	l2387
  4152   001252                     u1980:
  4153   001252  0E00               	movlw	0
  4154   001254  6E01               	movwf	___fladd@b^0,c
  4155   001256  0E00               	movlw	0
  4156   001258  6E02               	movwf	(___fladd@b+1)^0,c
  4157   00125A  0E00               	movlw	0
  4158   00125C  6E03               	movwf	(___fladd@b+2)^0,c
  4159   00125E  0E00               	movlw	0
  4160   001260  6E04               	movwf	(___fladd@b+3)^0,c
  4161   001262                     l2387:
  4162   001262  8E03               	bsf	(___fladd@b+2)^0,7,c
  4163   001264  0E00               	movlw	0
  4164   001266  6E04               	movwf	(___fladd@b+3)^0,c
  4165   001268  EF3E  F009         	goto	l2393
  4166   00126C                     l2391:
  4167   00126C  0E00               	movlw	0
  4168   00126E  6E01               	movwf	___fladd@b^0,c
  4169   001270  0E00               	movlw	0
  4170   001272  6E02               	movwf	(___fladd@b+1)^0,c
  4171   001274  0E00               	movlw	0
  4172   001276  6E03               	movwf	(___fladd@b+2)^0,c
  4173   001278  0E00               	movlw	0
  4174   00127A  6E04               	movwf	(___fladd@b+3)^0,c
  4175   00127C                     l2393:
  4176   00127C  5008               	movf	(___fladd@a+3)^0,w,c
  4177   00127E  0B80               	andlw	128
  4178   001280  6E0E               	movwf	___fladd@aexp^0,c
  4179   001282  500D               	movf	___fladd@signs^0,w,c
  4180   001284  180E               	xorwf	___fladd@aexp^0,w,c
  4181   001286  B4D8               	btfsc	status,2,c
  4182   001288  EF48  F009         	goto	u1991
  4183   00128C  EF4A  F009         	goto	u1990
  4184   001290                     u1991:
  4185   001290  EF4B  F009         	goto	l2399
  4186   001294                     u1990:
  4187   001294  8C0D               	bsf	___fladd@signs^0,6,c
  4188   001296                     l2399:
  4189   001296  5008               	movf	(___fladd@a+3)^0,w,c
  4190   001298  2408               	addwf	(___fladd@a+3)^0,w,c
  4191   00129A  6E0E               	movwf	___fladd@aexp^0,c
  4192   00129C  AE07               	btfss	(___fladd@a+2)^0,7,c
  4193   00129E  EF53  F009         	goto	u2001
  4194   0012A2  EF55  F009         	goto	u2000
  4195   0012A6                     u2001:
  4196   0012A6  EF56  F009         	goto	l2405
  4197   0012AA                     u2000:
  4198   0012AA  800E               	bsf	___fladd@aexp^0,0,c
  4199   0012AC                     l2405:
  4200   0012AC  500E               	movf	___fladd@aexp^0,w,c
  4201   0012AE  B4D8               	btfsc	status,2,c
  4202   0012B0  EF5C  F009         	goto	u2011
  4203   0012B4  EF5E  F009         	goto	u2010
  4204   0012B8                     u2011:
  4205   0012B8  EF73  F009         	goto	l2415
  4206   0012BC                     u2010:
  4207   0012BC  280E               	incf	___fladd@aexp^0,w,c
  4208   0012BE  A4D8               	btfss	status,2,c
  4209   0012C0  EF64  F009         	goto	u2021
  4210   0012C4  EF66  F009         	goto	u2020
  4211   0012C8                     u2021:
  4212   0012C8  EF6E  F009         	goto	l2411
  4213   0012CC                     u2020:
  4214   0012CC  0E00               	movlw	0
  4215   0012CE  6E05               	movwf	___fladd@a^0,c
  4216   0012D0  0E00               	movlw	0
  4217   0012D2  6E06               	movwf	(___fladd@a+1)^0,c
  4218   0012D4  0E00               	movlw	0
  4219   0012D6  6E07               	movwf	(___fladd@a+2)^0,c
  4220   0012D8  0E00               	movlw	0
  4221   0012DA  6E08               	movwf	(___fladd@a+3)^0,c
  4222   0012DC                     l2411:
  4223   0012DC  8E07               	bsf	(___fladd@a+2)^0,7,c
  4224   0012DE  0E00               	movlw	0
  4225   0012E0  6E08               	movwf	(___fladd@a+3)^0,c
  4226   0012E2  EF7B  F009         	goto	l2417
  4227   0012E6                     l2415:
  4228   0012E6  0E00               	movlw	0
  4229   0012E8  6E05               	movwf	___fladd@a^0,c
  4230   0012EA  0E00               	movlw	0
  4231   0012EC  6E06               	movwf	(___fladd@a+1)^0,c
  4232   0012EE  0E00               	movlw	0
  4233   0012F0  6E07               	movwf	(___fladd@a+2)^0,c
  4234   0012F2  0E00               	movlw	0
  4235   0012F4  6E08               	movwf	(___fladd@a+3)^0,c
  4236   0012F6                     l2417:
  4237   0012F6  500F               	movf	___fladd@bexp^0,w,c
  4238   0012F8  5C0E               	subwf	___fladd@aexp^0,w,c
  4239   0012FA  B0D8               	btfsc	status,0,c
  4240   0012FC  EF82  F009         	goto	u2031
  4241   001300  EF84  F009         	goto	u2030
  4242   001304                     u2031:
  4243   001304  EFAB  F009         	goto	l2453
  4244   001308                     u2030:
  4245   001308  AC0D               	btfss	___fladd@signs^0,6,c
  4246   00130A  EF89  F009         	goto	u2041
  4247   00130E  EF8B  F009         	goto	u2040
  4248   001312                     u2041:
  4249   001312  EF8D  F009         	goto	l2423
  4250   001316                     u2040:
  4251   001316  0E80               	movlw	128
  4252   001318  1A0D               	xorwf	___fladd@signs^0,f,c
  4253   00131A                     l2423:
  4254   00131A  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  4255   00131E  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  4256   001322  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  4257   001326  C001  F010         	movff	___fladd@b,___fladd@grs
  4258   00132A  C005  F001         	movff	___fladd@a,___fladd@b
  4259   00132E  C010  F005         	movff	___fladd@grs,___fladd@a
  4260   001332  C002  F010         	movff	___fladd@b+1,___fladd@grs
  4261   001336  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  4262   00133A  C010  F006         	movff	___fladd@grs,___fladd@a+1
  4263   00133E  C003  F010         	movff	___fladd@b+2,___fladd@grs
  4264   001342  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  4265   001346  C010  F007         	movff	___fladd@grs,___fladd@a+2
  4266   00134A  C004  F010         	movff	___fladd@b+3,___fladd@grs
  4267   00134E  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  4268   001352  C010  F008         	movff	___fladd@grs,___fladd@a+3
  4269   001356                     l2453:
  4270   001356  0E00               	movlw	0
  4271   001358  6E10               	movwf	___fladd@grs^0,c
  4272   00135A  500F               	movf	___fladd@bexp^0,w,c
  4273   00135C  C00E  F009         	movff	___fladd@aexp,??___fladd
  4274   001360  6A0A               	clrf	(??___fladd+1)^0,c
  4275   001362  5E09               	subwf	??___fladd^0,f,c
  4276   001364  0E00               	movlw	0
  4277   001366  5A0A               	subwfb	(??___fladd+1)^0,f,c
  4278   001368  BE0A               	btfsc	(??___fladd+1)^0,7,c
  4279   00136A  EFC0  F009         	goto	u2051
  4280   00136E  500A               	movf	(??___fladd+1)^0,w,c
  4281   001370  E109               	bnz	u2050
  4282   001372  0E1A               	movlw	26
  4283   001374  5C09               	subwf	??___fladd^0,w,c
  4284   001376  A0D8               	btfss	status,0,c
  4285   001378  EFC0  F009         	goto	u2051
  4286   00137C  EFC2  F009         	goto	u2050
  4287   001380                     u2051:
  4288   001380  EFF9  F009         	goto	l653
  4289   001384                     u2050:
  4290   001384  5001               	movf	___fladd@b^0,w,c
  4291   001386  1002               	iorwf	(___fladd@b+1)^0,w,c
  4292   001388  1003               	iorwf	(___fladd@b+2)^0,w,c
  4293   00138A  1004               	iorwf	(___fladd@b+3)^0,w,c
  4294   00138C  A4D8               	btfss	status,2,c
  4295   00138E  EFCB  F009         	goto	u2061
  4296   001392  EFCE  F009         	goto	u2060
  4297   001396                     u2061:
  4298   001396  0E01               	movlw	1
  4299   001398  EFCF  F009         	goto	u2070
  4300   00139C                     u2060:
  4301   00139C  0E00               	movlw	0
  4302   00139E                     u2070:
  4303   00139E  6E10               	movwf	___fladd@grs^0,c
  4304   0013A0  0E00               	movlw	0
  4305   0013A2  6E01               	movwf	___fladd@b^0,c
  4306   0013A4  0E00               	movlw	0
  4307   0013A6  6E02               	movwf	(___fladd@b+1)^0,c
  4308   0013A8  0E00               	movlw	0
  4309   0013AA  6E03               	movwf	(___fladd@b+2)^0,c
  4310   0013AC  0E00               	movlw	0
  4311   0013AE  6E04               	movwf	(___fladd@b+3)^0,c
  4312   0013B0  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  4313   0013B4  EF02  F00A         	goto	l652
  4314   0013B8                     l654:
  4315   0013B8  A010               	btfss	___fladd@grs^0,0,c
  4316   0013BA  EFE1  F009         	goto	u2081
  4317   0013BE  EFE3  F009         	goto	u2080
  4318   0013C2                     u2081:
  4319   0013C2  EFE9  F009         	goto	l2465
  4320   0013C6                     u2080:
  4321   0013C6  90D8               	bcf	status,0,c
  4322   0013C8  3010               	rrcf	___fladd@grs^0,w,c
  4323   0013CA  0901               	iorlw	1
  4324   0013CC  6E10               	movwf	___fladd@grs^0,c
  4325   0013CE  EFEB  F009         	goto	l2467
  4326   0013D2                     l2465:
  4327   0013D2  90D8               	bcf	status,0,c
  4328   0013D4  3210               	rrcf	___fladd@grs^0,f,c
  4329   0013D6                     l2467:
  4330   0013D6  A001               	btfss	___fladd@b^0,0,c
  4331   0013D8  EFF0  F009         	goto	u2091
  4332   0013DC  EFF2  F009         	goto	u2090
  4333   0013E0                     u2091:
  4334   0013E0  EFF3  F009         	goto	l2471
  4335   0013E4                     u2090:
  4336   0013E4  8E10               	bsf	___fladd@grs^0,7,c
  4337   0013E6                     l2471:
  4338   0013E6  3404               	rlcf	(___fladd@b+3)^0,w,c
  4339   0013E8  3204               	rrcf	(___fladd@b+3)^0,f,c
  4340   0013EA  3203               	rrcf	(___fladd@b+2)^0,f,c
  4341   0013EC  3202               	rrcf	(___fladd@b+1)^0,f,c
  4342   0013EE  3201               	rrcf	___fladd@b^0,f,c
  4343   0013F0  2A0F               	incf	___fladd@bexp^0,f,c
  4344   0013F2                     l653:
  4345   0013F2  500E               	movf	___fladd@aexp^0,w,c
  4346   0013F4  5C0F               	subwf	___fladd@bexp^0,w,c
  4347   0013F6  A0D8               	btfss	status,0,c
  4348   0013F8  EF00  F00A         	goto	u2101
  4349   0013FC  EF02  F00A         	goto	u2100
  4350   001400                     u2101:
  4351   001400  EFDC  F009         	goto	l654
  4352   001404                     u2100:
  4353   001404                     l652:
  4354   001404  BC0D               	btfsc	___fladd@signs^0,6,c
  4355   001406  EF07  F00A         	goto	u2111
  4356   00140A  EF09  F00A         	goto	u2110
  4357   00140E                     u2111:
  4358   00140E  EF49  F00A         	goto	l2499
  4359   001412                     u2110:
  4360   001412  500F               	movf	___fladd@bexp^0,w,c
  4361   001414  A4D8               	btfss	status,2,c
  4362   001416  EF0F  F00A         	goto	u2121
  4363   00141A  EF11  F00A         	goto	u2120
  4364   00141E                     u2121:
  4365   00141E  EF1B  F00A         	goto	l2481
  4366   001422                     u2120:
  4367   001422  0E00               	movlw	0
  4368   001424  6E01               	movwf	?___fladd^0,c
  4369   001426  0E00               	movlw	0
  4370   001428  6E02               	movwf	(?___fladd+1)^0,c
  4371   00142A  0E00               	movlw	0
  4372   00142C  6E03               	movwf	(?___fladd+2)^0,c
  4373   00142E  0E00               	movlw	0
  4374   001430  6E04               	movwf	(?___fladd+3)^0,c
  4375   001432  EF6A  F00B         	goto	l661
  4376   001436                     l2481:
  4377   001436  5005               	movf	___fladd@a^0,w,c
  4378   001438  2601               	addwf	___fladd@b^0,f,c
  4379   00143A  5006               	movf	(___fladd@a+1)^0,w,c
  4380   00143C  2202               	addwfc	(___fladd@b+1)^0,f,c
  4381   00143E  5007               	movf	(___fladd@a+2)^0,w,c
  4382   001440  2203               	addwfc	(___fladd@b+2)^0,f,c
  4383   001442  5008               	movf	(___fladd@a+3)^0,w,c
  4384   001444  2204               	addwfc	(___fladd@b+3)^0,f,c
  4385   001446  A004               	btfss	(___fladd@b+3)^0,0,c
  4386   001448  EF28  F00A         	goto	u2131
  4387   00144C  EF2A  F00A         	goto	u2130
  4388   001450                     u2131:
  4389   001450  EFD6  F00A         	goto	l2535
  4390   001454                     u2130:
  4391   001454  A010               	btfss	___fladd@grs^0,0,c
  4392   001456  EF2F  F00A         	goto	u2141
  4393   00145A  EF31  F00A         	goto	u2140
  4394   00145E                     u2141:
  4395   00145E  EF37  F00A         	goto	l2489
  4396   001462                     u2140:
  4397   001462  90D8               	bcf	status,0,c
  4398   001464  3010               	rrcf	___fladd@grs^0,w,c
  4399   001466  0901               	iorlw	1
  4400   001468  6E10               	movwf	___fladd@grs^0,c
  4401   00146A  EF39  F00A         	goto	l2491
  4402   00146E                     l2489:
  4403   00146E  90D8               	bcf	status,0,c
  4404   001470  3210               	rrcf	___fladd@grs^0,f,c
  4405   001472                     l2491:
  4406   001472  A001               	btfss	___fladd@b^0,0,c
  4407   001474  EF3E  F00A         	goto	u2151
  4408   001478  EF40  F00A         	goto	u2150
  4409   00147C                     u2151:
  4410   00147C  EF41  F00A         	goto	l2495
  4411   001480                     u2150:
  4412   001480  8E10               	bsf	___fladd@grs^0,7,c
  4413   001482                     l2495:
  4414   001482  3404               	rlcf	(___fladd@b+3)^0,w,c
  4415   001484  3204               	rrcf	(___fladd@b+3)^0,f,c
  4416   001486  3203               	rrcf	(___fladd@b+2)^0,f,c
  4417   001488  3202               	rrcf	(___fladd@b+1)^0,f,c
  4418   00148A  3201               	rrcf	___fladd@b^0,f,c
  4419   00148C  2A0F               	incf	___fladd@bexp^0,f,c
  4420   00148E  EFD6  F00A         	goto	l2535
  4421   001492                     l2499:
  4422   001492  5005               	movf	___fladd@a^0,w,c
  4423   001494  5C01               	subwf	___fladd@b^0,w,c
  4424   001496  5006               	movf	(___fladd@a+1)^0,w,c
  4425   001498  5802               	subwfb	(___fladd@b+1)^0,w,c
  4426   00149A  5007               	movf	(___fladd@a+2)^0,w,c
  4427   00149C  5803               	subwfb	(___fladd@b+2)^0,w,c
  4428   00149E  5004               	movf	(___fladd@b+3)^0,w,c
  4429   0014A0  0A80               	xorlw	128
  4430   0014A2  6E09               	movwf	??___fladd^0,c
  4431   0014A4  5008               	movf	(___fladd@a+3)^0,w,c
  4432   0014A6  0A80               	xorlw	128
  4433   0014A8  5809               	subwfb	??___fladd^0,w,c
  4434   0014AA  B0D8               	btfsc	status,0,c
  4435   0014AC  EF5A  F00A         	goto	u2161
  4436   0014B0  EF5C  F00A         	goto	u2160
  4437   0014B4                     u2161:
  4438   0014B4  EF87  F00A         	goto	l2509
  4439   0014B8                     u2160:
  4440   0014B8  5001               	movf	___fladd@b^0,w,c
  4441   0014BA  5C05               	subwf	___fladd@a^0,w,c
  4442   0014BC  6E09               	movwf	??___fladd^0,c
  4443   0014BE  5002               	movf	(___fladd@b+1)^0,w,c
  4444   0014C0  5806               	subwfb	(___fladd@a+1)^0,w,c
  4445   0014C2  6E0A               	movwf	(??___fladd+1)^0,c
  4446   0014C4  5003               	movf	(___fladd@b+2)^0,w,c
  4447   0014C6  5807               	subwfb	(___fladd@a+2)^0,w,c
  4448   0014C8  6E0B               	movwf	(??___fladd+2)^0,c
  4449   0014CA  5004               	movf	(___fladd@b+3)^0,w,c
  4450   0014CC  5808               	subwfb	(___fladd@a+3)^0,w,c
  4451   0014CE  6E0C               	movwf	(??___fladd+3)^0,c
  4452   0014D0  0EFF               	movlw	255
  4453   0014D2  2409               	addwf	??___fladd^0,w,c
  4454   0014D4  6E01               	movwf	___fladd@b^0,c
  4455   0014D6  0EFF               	movlw	255
  4456   0014D8  200A               	addwfc	(??___fladd+1)^0,w,c
  4457   0014DA  6E02               	movwf	(___fladd@b+1)^0,c
  4458   0014DC  0EFF               	movlw	255
  4459   0014DE  200B               	addwfc	(??___fladd+2)^0,w,c
  4460   0014E0  6E03               	movwf	(___fladd@b+2)^0,c
  4461   0014E2  0EFF               	movlw	255
  4462   0014E4  200C               	addwfc	(??___fladd+3)^0,w,c
  4463   0014E6  6E04               	movwf	(___fladd@b+3)^0,c
  4464   0014E8  0E80               	movlw	128
  4465   0014EA  1A0D               	xorwf	___fladd@signs^0,f,c
  4466   0014EC  6C10               	negf	___fladd@grs^0,c
  4467   0014EE  5010               	movf	___fladd@grs^0,w,c
  4468   0014F0  A4D8               	btfss	status,2,c
  4469   0014F2  EF7D  F00A         	goto	u2171
  4470   0014F6  EF7F  F00A         	goto	u2170
  4471   0014FA                     u2171:
  4472   0014FA  EF8F  F00A         	goto	l669
  4473   0014FE                     u2170:
  4474   0014FE  0E01               	movlw	1
  4475   001500  2601               	addwf	___fladd@b^0,f,c
  4476   001502  0E00               	movlw	0
  4477   001504  2202               	addwfc	(___fladd@b+1)^0,f,c
  4478   001506  2203               	addwfc	(___fladd@b+2)^0,f,c
  4479   001508  2204               	addwfc	(___fladd@b+3)^0,f,c
  4480   00150A  EF8F  F00A         	goto	l669
  4481   00150E                     l2509:
  4482   00150E  5005               	movf	___fladd@a^0,w,c
  4483   001510  5E01               	subwf	___fladd@b^0,f,c
  4484   001512  5006               	movf	(___fladd@a+1)^0,w,c
  4485   001514  5A02               	subwfb	(___fladd@b+1)^0,f,c
  4486   001516  5007               	movf	(___fladd@a+2)^0,w,c
  4487   001518  5A03               	subwfb	(___fladd@b+2)^0,f,c
  4488   00151A  5008               	movf	(___fladd@a+3)^0,w,c
  4489   00151C  5A04               	subwfb	(___fladd@b+3)^0,f,c
  4490   00151E                     l669:
  4491   00151E  5001               	movf	___fladd@b^0,w,c
  4492   001520  1002               	iorwf	(___fladd@b+1)^0,w,c
  4493   001522  1003               	iorwf	(___fladd@b+2)^0,w,c
  4494   001524  1004               	iorwf	(___fladd@b+3)^0,w,c
  4495   001526  A4D8               	btfss	status,2,c
  4496   001528  EF98  F00A         	goto	u2181
  4497   00152C  EF9A  F00A         	goto	u2180
  4498   001530                     u2181:
  4499   001530  EFCF  F00A         	goto	l2533
  4500   001534                     u2180:
  4501   001534  5010               	movf	___fladd@grs^0,w,c
  4502   001536  A4D8               	btfss	status,2,c
  4503   001538  EFA0  F00A         	goto	u2191
  4504   00153C  EFA2  F00A         	goto	u2190
  4505   001540                     u2191:
  4506   001540  EFCF  F00A         	goto	l2533
  4507   001544                     u2190:
  4508   001544  0E00               	movlw	0
  4509   001546  6E01               	movwf	?___fladd^0,c
  4510   001548  0E00               	movlw	0
  4511   00154A  6E02               	movwf	(?___fladd+1)^0,c
  4512   00154C  0E00               	movlw	0
  4513   00154E  6E03               	movwf	(?___fladd+2)^0,c
  4514   001550  0E00               	movlw	0
  4515   001552  6E04               	movwf	(?___fladd+3)^0,c
  4516   001554  EF6A  F00B         	goto	l661
  4517   001558                     l2517:
  4518   001558  90D8               	bcf	status,0,c
  4519   00155A  3601               	rlcf	___fladd@b^0,f,c
  4520   00155C  3602               	rlcf	(___fladd@b+1)^0,f,c
  4521   00155E  3603               	rlcf	(___fladd@b+2)^0,f,c
  4522   001560  3604               	rlcf	(___fladd@b+3)^0,f,c
  4523   001562  AE10               	btfss	___fladd@grs^0,7,c
  4524   001564  EFB6  F00A         	goto	u2201
  4525   001568  EFB8  F00A         	goto	u2200
  4526   00156C                     u2201:
  4527   00156C  EFB9  F00A         	goto	l2523
  4528   001570                     u2200:
  4529   001570  8001               	bsf	___fladd@b^0,0,c
  4530   001572                     l2523:
  4531   001572  A010               	btfss	___fladd@grs^0,0,c
  4532   001574  EFBE  F00A         	goto	u2211
  4533   001578  EFC0  F00A         	goto	u2210
  4534   00157C                     u2211:
  4535   00157C  EFC4  F00A         	goto	l2527
  4536   001580                     u2210:
  4537   001580  80D8               	bsf	status,0,c
  4538   001582  3610               	rlcf	___fladd@grs^0,f,c
  4539   001584  EFC6  F00A         	goto	l2529
  4540   001588                     l2527:
  4541   001588  90D8               	bcf	status,0,c
  4542   00158A  3610               	rlcf	___fladd@grs^0,f,c
  4543   00158C                     l2529:
  4544   00158C  500F               	movf	___fladd@bexp^0,w,c
  4545   00158E  B4D8               	btfsc	status,2,c
  4546   001590  EFCC  F00A         	goto	u2221
  4547   001594  EFCE  F00A         	goto	u2220
  4548   001598                     u2221:
  4549   001598  EFCF  F00A         	goto	l2533
  4550   00159C                     u2220:
  4551   00159C  060F               	decf	___fladd@bexp^0,f,c
  4552   00159E                     l2533:
  4553   00159E  AE03               	btfss	(___fladd@b+2)^0,7,c
  4554   0015A0  EFD4  F00A         	goto	u2231
  4555   0015A4  EFD6  F00A         	goto	u2230
  4556   0015A8                     u2231:
  4557   0015A8  EFAC  F00A         	goto	l2517
  4558   0015AC                     u2230:
  4559   0015AC                     l2535:
  4560   0015AC  0E00               	movlw	0
  4561   0015AE  6E0E               	movwf	___fladd@aexp^0,c
  4562   0015B0  AE10               	btfss	___fladd@grs^0,7,c
  4563   0015B2  EFDD  F00A         	goto	u2241
  4564   0015B6  EFDF  F00A         	goto	u2240
  4565   0015BA                     u2241:
  4566   0015BA  EFF7  F00A         	goto	l678
  4567   0015BE                     u2240:
  4568   0015BE  C010  F009         	movff	___fladd@grs,??___fladd
  4569   0015C2  0E7F               	movlw	127
  4570   0015C4  1609               	andwf	??___fladd^0,f,c
  4571   0015C6  B4D8               	btfsc	status,2,c
  4572   0015C8  EFE8  F00A         	goto	u2251
  4573   0015CC  EFEA  F00A         	goto	u2250
  4574   0015D0                     u2251:
  4575   0015D0  EFEE  F00A         	goto	l679
  4576   0015D4                     u2250:
  4577   0015D4                     l2541:
  4578   0015D4  0E01               	movlw	1
  4579   0015D6  6E0E               	movwf	___fladd@aexp^0,c
  4580   0015D8  EFF7  F00A         	goto	l678
  4581   0015DC                     l679:
  4582   0015DC  A001               	btfss	___fladd@b^0,0,c
  4583   0015DE  EFF3  F00A         	goto	u2261
  4584   0015E2  EFF5  F00A         	goto	u2260
  4585   0015E6                     u2261:
  4586   0015E6  EFF7  F00A         	goto	l678
  4587   0015EA                     u2260:
  4588   0015EA  EFEA  F00A         	goto	l2541
  4589   0015EE                     l678:
  4590   0015EE  500E               	movf	___fladd@aexp^0,w,c
  4591   0015F0  B4D8               	btfsc	status,2,c
  4592   0015F2  EFFD  F00A         	goto	u2271
  4593   0015F6  EFFF  F00A         	goto	u2270
  4594   0015FA                     u2271:
  4595   0015FA  EF2A  F00B         	goto	l2553
  4596   0015FE                     u2270:
  4597   0015FE  0E01               	movlw	1
  4598   001600  2601               	addwf	___fladd@b^0,f,c
  4599   001602  0E00               	movlw	0
  4600   001604  2202               	addwfc	(___fladd@b+1)^0,f,c
  4601   001606  2203               	addwfc	(___fladd@b+2)^0,f,c
  4602   001608  2204               	addwfc	(___fladd@b+3)^0,f,c
  4603   00160A  A004               	btfss	(___fladd@b+3)^0,0,c
  4604   00160C  EF0A  F00B         	goto	u2281
  4605   001610  EF0C  F00B         	goto	u2280
  4606   001614                     u2281:
  4607   001614  EF2A  F00B         	goto	l2553
  4608   001618                     u2280:
  4609   001618  C001  F009         	movff	___fladd@b,??___fladd
  4610   00161C  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  4611   001620  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  4612   001624  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  4613   001628  340C               	rlcf	(??___fladd+3)^0,w,c
  4614   00162A  320C               	rrcf	(??___fladd+3)^0,f,c
  4615   00162C  320B               	rrcf	(??___fladd+2)^0,f,c
  4616   00162E  320A               	rrcf	(??___fladd+1)^0,f,c
  4617   001630  3209               	rrcf	??___fladd^0,f,c
  4618   001632  C009  F001         	movff	??___fladd,___fladd@b
  4619   001636  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  4620   00163A  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  4621   00163E  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  4622   001642  280F               	incf	___fladd@bexp^0,w,c
  4623   001644  B4D8               	btfsc	status,2,c
  4624   001646  EF27  F00B         	goto	u2291
  4625   00164A  EF29  F00B         	goto	u2290
  4626   00164E                     u2291:
  4627   00164E  EF2A  F00B         	goto	l2553
  4628   001652                     u2290:
  4629   001652  2A0F               	incf	___fladd@bexp^0,f,c
  4630   001654                     l2553:
  4631   001654  280F               	incf	___fladd@bexp^0,w,c
  4632   001656  B4D8               	btfsc	status,2,c
  4633   001658  EF30  F00B         	goto	u2301
  4634   00165C  EF32  F00B         	goto	u2300
  4635   001660                     u2301:
  4636   001660  EF3A  F00B         	goto	l2557
  4637   001664                     u2300:
  4638   001664  500F               	movf	___fladd@bexp^0,w,c
  4639   001666  A4D8               	btfss	status,2,c
  4640   001668  EF38  F00B         	goto	u2311
  4641   00166C  EF3A  F00B         	goto	u2310
  4642   001670                     u2311:
  4643   001670  EF4C  F00B         	goto	l2561
  4644   001674                     u2310:
  4645   001674                     l2557:
  4646   001674  0E00               	movlw	0
  4647   001676  6E01               	movwf	___fladd@b^0,c
  4648   001678  0E00               	movlw	0
  4649   00167A  6E02               	movwf	(___fladd@b+1)^0,c
  4650   00167C  0E00               	movlw	0
  4651   00167E  6E03               	movwf	(___fladd@b+2)^0,c
  4652   001680  0E00               	movlw	0
  4653   001682  6E04               	movwf	(___fladd@b+3)^0,c
  4654   001684  500F               	movf	___fladd@bexp^0,w,c
  4655   001686  A4D8               	btfss	status,2,c
  4656   001688  EF48  F00B         	goto	u2321
  4657   00168C  EF4A  F00B         	goto	u2320
  4658   001690                     u2321:
  4659   001690  EF4C  F00B         	goto	l2561
  4660   001694                     u2320:
  4661   001694  0E00               	movlw	0
  4662   001696  6E0D               	movwf	___fladd@signs^0,c
  4663   001698                     l2561:
  4664   001698  A00F               	btfss	___fladd@bexp^0,0,c
  4665   00169A  EF51  F00B         	goto	u2331
  4666   00169E  EF53  F00B         	goto	u2330
  4667   0016A2                     u2331:
  4668   0016A2  EF56  F00B         	goto	l2565
  4669   0016A6                     u2330:
  4670   0016A6  8E03               	bsf	(___fladd@b+2)^0,7,c
  4671   0016A8  EF57  F00B         	goto	l2567
  4672   0016AC                     l2565:
  4673   0016AC  9E03               	bcf	(___fladd@b+2)^0,7,c
  4674   0016AE                     l2567:
  4675   0016AE  90D8               	bcf	status,0,c
  4676   0016B0  300F               	rrcf	___fladd@bexp^0,w,c
  4677   0016B2  6E04               	movwf	(___fladd@b+3)^0,c
  4678   0016B4  AE0D               	btfss	___fladd@signs^0,7,c
  4679   0016B6  EF5F  F00B         	goto	u2341
  4680   0016BA  EF61  F00B         	goto	u2340
  4681   0016BE                     u2341:
  4682   0016BE  EF62  F00B         	goto	l2573
  4683   0016C2                     u2340:
  4684   0016C2  8E04               	bsf	(___fladd@b+3)^0,7,c
  4685   0016C4                     l2573:
  4686   0016C4  C001  F001         	movff	___fladd@b,?___fladd
  4687   0016C8  C002  F002         	movff	___fladd@b+1,?___fladd+1
  4688   0016CC  C003  F003         	movff	___fladd@b+2,?___fladd+2
  4689   0016D0  C004  F004         	movff	___fladd@b+3,?___fladd+3
  4690   0016D4                     l661:
  4691   0016D4  0012               	return		;funcret
  4692   0016D6                     __end_of___fladd:
  4693                           	callstack 0
  4694                           
  4695 ;; *************** function ___flneg *****************
  4696 ;; Defined at:
  4697 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flneg.c"
  4698 ;; Parameters:    Size  Location     Type
  4699 ;;  f1              4    0[COMRAM] unsigned char 
  4700 ;; Auto vars:     Size  Location     Type
  4701 ;;		None
  4702 ;; Return value:  Size  Location     Type
  4703 ;;                  4    0[COMRAM] unsigned char 
  4704 ;; Registers used:
  4705 ;;		wreg, status,2, status,0
  4706 ;; Tracked objects:
  4707 ;;		On entry : 0/0
  4708 ;;		On exit  : 0/0
  4709 ;;		Unchanged: 0/0
  4710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4711 ;;      Params:         4       0       0       0       0       0       0       0       0
  4712 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4713 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4714 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4715 ;;Total ram usage:        4 bytes
  4716 ;; Hardware stack levels used: 1
  4717 ;; This function calls:
  4718 ;;		Nothing
  4719 ;; This function is called by:
  4720 ;;		_efgtoa
  4721 ;; This function uses a non-reentrant model
  4722 ;;
  4723                           
  4724                           	psect	text17
  4725   00317C                     __ptext17:
  4726                           	callstack 0
  4727   00317C                     ___flneg:
  4728                           	callstack 26
  4729   00317C  5001               	movf	___flneg@f1^0,w,c
  4730   00317E  1002               	iorwf	(___flneg@f1+1)^0,w,c
  4731   003180  1003               	iorwf	(___flneg@f1+2)^0,w,c
  4732   003182  1004               	iorwf	(___flneg@f1+3)^0,w,c
  4733   003184  B4D8               	btfsc	status,2,c
  4734   003186  EFC7  F018         	goto	u2861
  4735   00318A  EFC9  F018         	goto	u2860
  4736   00318E                     u2861:
  4737   00318E  EFD1  F018         	goto	l2907
  4738   003192                     u2860:
  4739   003192  0E00               	movlw	0
  4740   003194  1A01               	xorwf	___flneg@f1^0,f,c
  4741   003196  0E00               	movlw	0
  4742   003198  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  4743   00319A  0E00               	movlw	0
  4744   00319C  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  4745   00319E  0E80               	movlw	128
  4746   0031A0  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  4747   0031A2                     l2907:
  4748   0031A2  C001  F001         	movff	___flneg@f1,?___flneg
  4749   0031A6  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  4750   0031AA  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  4751   0031AE  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  4752   0031B2  0012               	return		;funcret
  4753   0031B4                     __end_of___flneg:
  4754                           	callstack 0
  4755                           
  4756 ;; *************** function ___flmul *****************
  4757 ;; Defined at:
  4758 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  4759 ;; Parameters:    Size  Location     Type
  4760 ;;  b               4    0[COMRAM] unsigned char 
  4761 ;;  a               4    4[COMRAM] unsigned char 
  4762 ;; Auto vars:     Size  Location     Type
  4763 ;;  prod            4   19[COMRAM] struct .
  4764 ;;  grs             4   13[COMRAM] unsigned long 
  4765 ;;  temp            2   23[COMRAM] struct .
  4766 ;;  bexp            1   18[COMRAM] unsigned char 
  4767 ;;  aexp            1   17[COMRAM] unsigned char 
  4768 ;;  sign            1   12[COMRAM] unsigned char 
  4769 ;; Return value:  Size  Location     Type
  4770 ;;                  4    0[COMRAM] unsigned char 
  4771 ;; Registers used:
  4772 ;;		wreg, status,2, status,0, prodl, prodh
  4773 ;; Tracked objects:
  4774 ;;		On entry : 0/0
  4775 ;;		On exit  : 0/0
  4776 ;;		Unchanged: 0/0
  4777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4778 ;;      Params:         8       0       0       0       0       0       0       0       0
  4779 ;;      Locals:        13       0       0       0       0       0       0       0       0
  4780 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4781 ;;      Totals:        25       0       0       0       0       0       0       0       0
  4782 ;;Total ram usage:       25 bytes
  4783 ;; Hardware stack levels used: 1
  4784 ;; This function calls:
  4785 ;;		Nothing
  4786 ;; This function is called by:
  4787 ;;		_efgtoa
  4788 ;; This function uses a non-reentrant model
  4789 ;;
  4790                           
  4791                           	psect	text18
  4792   0016D6                     __ptext18:
  4793                           	callstack 0
  4794   0016D6                     ___flmul:
  4795                           	callstack 26
  4796   0016D6  5004               	movf	(___flmul@b+3)^0,w,c
  4797   0016D8  0B80               	andlw	128
  4798   0016DA  6E0D               	movwf	___flmul@sign^0,c
  4799   0016DC  5004               	movf	(___flmul@b+3)^0,w,c
  4800   0016DE  2404               	addwf	(___flmul@b+3)^0,w,c
  4801   0016E0  6E13               	movwf	___flmul@bexp^0,c
  4802   0016E2  AE03               	btfss	(___flmul@b+2)^0,7,c
  4803   0016E4  EF76  F00B         	goto	u2591
  4804   0016E8  EF78  F00B         	goto	u2590
  4805   0016EC                     u2591:
  4806   0016EC  EF79  F00B         	goto	l2735
  4807   0016F0                     u2590:
  4808   0016F0  8013               	bsf	___flmul@bexp^0,0,c
  4809   0016F2                     l2735:
  4810   0016F2  5013               	movf	___flmul@bexp^0,w,c
  4811   0016F4  B4D8               	btfsc	status,2,c
  4812   0016F6  EF7F  F00B         	goto	u2601
  4813   0016FA  EF81  F00B         	goto	u2600
  4814   0016FE                     u2601:
  4815   0016FE  EF94  F00B         	goto	l2743
  4816   001702                     u2600:
  4817   001702  2813               	incf	___flmul@bexp^0,w,c
  4818   001704  A4D8               	btfss	status,2,c
  4819   001706  EF87  F00B         	goto	u2611
  4820   00170A  EF89  F00B         	goto	u2610
  4821   00170E                     u2611:
  4822   00170E  EF91  F00B         	goto	l2741
  4823   001712                     u2610:
  4824   001712  0E00               	movlw	0
  4825   001714  6E01               	movwf	___flmul@b^0,c
  4826   001716  0E00               	movlw	0
  4827   001718  6E02               	movwf	(___flmul@b+1)^0,c
  4828   00171A  0E00               	movlw	0
  4829   00171C  6E03               	movwf	(___flmul@b+2)^0,c
  4830   00171E  0E00               	movlw	0
  4831   001720  6E04               	movwf	(___flmul@b+3)^0,c
  4832   001722                     l2741:
  4833   001722  8E03               	bsf	(___flmul@b+2)^0,7,c
  4834   001724  EF9C  F00B         	goto	l2745
  4835   001728                     l2743:
  4836   001728  0E00               	movlw	0
  4837   00172A  6E01               	movwf	___flmul@b^0,c
  4838   00172C  0E00               	movlw	0
  4839   00172E  6E02               	movwf	(___flmul@b+1)^0,c
  4840   001730  0E00               	movlw	0
  4841   001732  6E03               	movwf	(___flmul@b+2)^0,c
  4842   001734  0E00               	movlw	0
  4843   001736  6E04               	movwf	(___flmul@b+3)^0,c
  4844   001738                     l2745:
  4845   001738  5008               	movf	(___flmul@a+3)^0,w,c
  4846   00173A  0B80               	andlw	128
  4847   00173C  1A0D               	xorwf	___flmul@sign^0,f,c
  4848   00173E  5008               	movf	(___flmul@a+3)^0,w,c
  4849   001740  2408               	addwf	(___flmul@a+3)^0,w,c
  4850   001742  6E12               	movwf	___flmul@aexp^0,c
  4851   001744  AE07               	btfss	(___flmul@a+2)^0,7,c
  4852   001746  EFA7  F00B         	goto	u2621
  4853   00174A  EFA9  F00B         	goto	u2620
  4854   00174E                     u2621:
  4855   00174E  EFAA  F00B         	goto	l2753
  4856   001752                     u2620:
  4857   001752  8012               	bsf	___flmul@aexp^0,0,c
  4858   001754                     l2753:
  4859   001754  5012               	movf	___flmul@aexp^0,w,c
  4860   001756  B4D8               	btfsc	status,2,c
  4861   001758  EFB0  F00B         	goto	u2631
  4862   00175C  EFB2  F00B         	goto	u2630
  4863   001760                     u2631:
  4864   001760  EFC5  F00B         	goto	l2761
  4865   001764                     u2630:
  4866   001764  2812               	incf	___flmul@aexp^0,w,c
  4867   001766  A4D8               	btfss	status,2,c
  4868   001768  EFB8  F00B         	goto	u2641
  4869   00176C  EFBA  F00B         	goto	u2640
  4870   001770                     u2641:
  4871   001770  EFC2  F00B         	goto	l2759
  4872   001774                     u2640:
  4873   001774  0E00               	movlw	0
  4874   001776  6E05               	movwf	___flmul@a^0,c
  4875   001778  0E00               	movlw	0
  4876   00177A  6E06               	movwf	(___flmul@a+1)^0,c
  4877   00177C  0E00               	movlw	0
  4878   00177E  6E07               	movwf	(___flmul@a+2)^0,c
  4879   001780  0E00               	movlw	0
  4880   001782  6E08               	movwf	(___flmul@a+3)^0,c
  4881   001784                     l2759:
  4882   001784  8E07               	bsf	(___flmul@a+2)^0,7,c
  4883   001786  EFCD  F00B         	goto	l738
  4884   00178A                     l2761:
  4885   00178A  0E00               	movlw	0
  4886   00178C  6E05               	movwf	___flmul@a^0,c
  4887   00178E  0E00               	movlw	0
  4888   001790  6E06               	movwf	(___flmul@a+1)^0,c
  4889   001792  0E00               	movlw	0
  4890   001794  6E07               	movwf	(___flmul@a+2)^0,c
  4891   001796  0E00               	movlw	0
  4892   001798  6E08               	movwf	(___flmul@a+3)^0,c
  4893   00179A                     l738:
  4894   00179A  5012               	movf	___flmul@aexp^0,w,c
  4895   00179C  B4D8               	btfsc	status,2,c
  4896   00179E  EFD3  F00B         	goto	u2651
  4897   0017A2  EFD5  F00B         	goto	u2650
  4898   0017A6                     u2651:
  4899   0017A6  EFDD  F00B         	goto	l2765
  4900   0017AA                     u2650:
  4901   0017AA  5013               	movf	___flmul@bexp^0,w,c
  4902   0017AC  A4D8               	btfss	status,2,c
  4903   0017AE  EFDB  F00B         	goto	u2661
  4904   0017B2  EFDD  F00B         	goto	u2660
  4905   0017B6                     u2661:
  4906   0017B6  EFE7  F00B         	goto	l2769
  4907   0017BA                     u2660:
  4908   0017BA                     l2765:
  4909   0017BA  0E00               	movlw	0
  4910   0017BC  6E01               	movwf	?___flmul^0,c
  4911   0017BE  0E00               	movlw	0
  4912   0017C0  6E02               	movwf	(?___flmul+1)^0,c
  4913   0017C2  0E00               	movlw	0
  4914   0017C4  6E03               	movwf	(?___flmul+2)^0,c
  4915   0017C6  0E00               	movlw	0
  4916   0017C8  6E04               	movwf	(?___flmul+3)^0,c
  4917   0017CA  EF7F  F00D         	goto	l742
  4918   0017CE                     l2769:
  4919   0017CE  5007               	movf	(___flmul@a+2)^0,w,c
  4920   0017D0  0201               	mulwf	___flmul@b^0,c
  4921   0017D2  CFF3 F018          	movff	prodl,___flmul@temp
  4922   0017D6  CFF4 F019          	movff	prodh,___flmul@temp+1
  4923   0017DA  5018               	movf	___flmul@temp^0,w,c
  4924   0017DC  6E0E               	movwf	___flmul@grs^0,c
  4925   0017DE  6A0F               	clrf	(___flmul@grs+1)^0,c
  4926   0017E0  6A10               	clrf	(___flmul@grs+2)^0,c
  4927   0017E2  6A11               	clrf	(___flmul@grs+3)^0,c
  4928   0017E4  5019               	movf	(___flmul@temp+1)^0,w,c
  4929   0017E6  6E14               	movwf	___flmul@prod^0,c
  4930   0017E8  6A15               	clrf	(___flmul@prod+1)^0,c
  4931   0017EA  6A16               	clrf	(___flmul@prod+2)^0,c
  4932   0017EC  6A17               	clrf	(___flmul@prod+3)^0,c
  4933   0017EE  5006               	movf	(___flmul@a+1)^0,w,c
  4934   0017F0  0202               	mulwf	(___flmul@b+1)^0,c
  4935   0017F2  CFF3 F018          	movff	prodl,___flmul@temp
  4936   0017F6  CFF4 F019          	movff	prodh,___flmul@temp+1
  4937   0017FA  5018               	movf	___flmul@temp^0,w,c
  4938   0017FC  260E               	addwf	___flmul@grs^0,f,c
  4939   0017FE  0E00               	movlw	0
  4940   001800  220F               	addwfc	(___flmul@grs+1)^0,f,c
  4941   001802  2210               	addwfc	(___flmul@grs+2)^0,f,c
  4942   001804  2211               	addwfc	(___flmul@grs+3)^0,f,c
  4943   001806  5019               	movf	(___flmul@temp+1)^0,w,c
  4944   001808  2614               	addwf	___flmul@prod^0,f,c
  4945   00180A  0E00               	movlw	0
  4946   00180C  2215               	addwfc	(___flmul@prod+1)^0,f,c
  4947   00180E  2216               	addwfc	(___flmul@prod+2)^0,f,c
  4948   001810  2217               	addwfc	(___flmul@prod+3)^0,f,c
  4949   001812  5005               	movf	___flmul@a^0,w,c
  4950   001814  0203               	mulwf	(___flmul@b+2)^0,c
  4951   001816  CFF3 F018          	movff	prodl,___flmul@temp
  4952   00181A  CFF4 F019          	movff	prodh,___flmul@temp+1
  4953   00181E  5018               	movf	___flmul@temp^0,w,c
  4954   001820  260E               	addwf	___flmul@grs^0,f,c
  4955   001822  0E00               	movlw	0
  4956   001824  220F               	addwfc	(___flmul@grs+1)^0,f,c
  4957   001826  2210               	addwfc	(___flmul@grs+2)^0,f,c
  4958   001828  2211               	addwfc	(___flmul@grs+3)^0,f,c
  4959   00182A  5019               	movf	(___flmul@temp+1)^0,w,c
  4960   00182C  2614               	addwf	___flmul@prod^0,f,c
  4961   00182E  0E00               	movlw	0
  4962   001830  2215               	addwfc	(___flmul@prod+1)^0,f,c
  4963   001832  2216               	addwfc	(___flmul@prod+2)^0,f,c
  4964   001834  2217               	addwfc	(___flmul@prod+3)^0,f,c
  4965   001836  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  4966   00183A  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  4967   00183E  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  4968   001842  6A0E               	clrf	___flmul@grs^0,c
  4969   001844  5005               	movf	___flmul@a^0,w,c
  4970   001846  0202               	mulwf	(___flmul@b+1)^0,c
  4971   001848  CFF3 F018          	movff	prodl,___flmul@temp
  4972   00184C  CFF4 F019          	movff	prodh,___flmul@temp+1
  4973   001850  5018               	movf	___flmul@temp^0,w,c
  4974   001852  260E               	addwf	___flmul@grs^0,f,c
  4975   001854  5019               	movf	(___flmul@temp+1)^0,w,c
  4976   001856  220F               	addwfc	(___flmul@grs+1)^0,f,c
  4977   001858  0E00               	movlw	0
  4978   00185A  2210               	addwfc	(___flmul@grs+2)^0,f,c
  4979   00185C  0E00               	movlw	0
  4980   00185E  2211               	addwfc	(___flmul@grs+3)^0,f,c
  4981   001860  5006               	movf	(___flmul@a+1)^0,w,c
  4982   001862  0201               	mulwf	___flmul@b^0,c
  4983   001864  CFF3 F018          	movff	prodl,___flmul@temp
  4984   001868  CFF4 F019          	movff	prodh,___flmul@temp+1
  4985   00186C  5018               	movf	___flmul@temp^0,w,c
  4986   00186E  260E               	addwf	___flmul@grs^0,f,c
  4987   001870  5019               	movf	(___flmul@temp+1)^0,w,c
  4988   001872  220F               	addwfc	(___flmul@grs+1)^0,f,c
  4989   001874  0E00               	movlw	0
  4990   001876  2210               	addwfc	(___flmul@grs+2)^0,f,c
  4991   001878  0E00               	movlw	0
  4992   00187A  2211               	addwfc	(___flmul@grs+3)^0,f,c
  4993   00187C  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  4994   001880  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  4995   001884  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  4996   001888  6A0E               	clrf	___flmul@grs^0,c
  4997   00188A  5005               	movf	___flmul@a^0,w,c
  4998   00188C  0201               	mulwf	___flmul@b^0,c
  4999   00188E  CFF3 F018          	movff	prodl,___flmul@temp
  5000   001892  CFF4 F019          	movff	prodh,___flmul@temp+1
  5001   001896  5018               	movf	___flmul@temp^0,w,c
  5002   001898  260E               	addwf	___flmul@grs^0,f,c
  5003   00189A  5019               	movf	(___flmul@temp+1)^0,w,c
  5004   00189C  220F               	addwfc	(___flmul@grs+1)^0,f,c
  5005   00189E  0E00               	movlw	0
  5006   0018A0  2210               	addwfc	(___flmul@grs+2)^0,f,c
  5007   0018A2  0E00               	movlw	0
  5008   0018A4  2211               	addwfc	(___flmul@grs+3)^0,f,c
  5009   0018A6  5007               	movf	(___flmul@a+2)^0,w,c
  5010   0018A8  0202               	mulwf	(___flmul@b+1)^0,c
  5011   0018AA  CFF3 F018          	movff	prodl,___flmul@temp
  5012   0018AE  CFF4 F019          	movff	prodh,___flmul@temp+1
  5013   0018B2  5018               	movf	___flmul@temp^0,w,c
  5014   0018B4  2614               	addwf	___flmul@prod^0,f,c
  5015   0018B6  5019               	movf	(___flmul@temp+1)^0,w,c
  5016   0018B8  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5017   0018BA  0E00               	movlw	0
  5018   0018BC  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5019   0018BE  0E00               	movlw	0
  5020   0018C0  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5021   0018C2  5006               	movf	(___flmul@a+1)^0,w,c
  5022   0018C4  0203               	mulwf	(___flmul@b+2)^0,c
  5023   0018C6  CFF3 F018          	movff	prodl,___flmul@temp
  5024   0018CA  CFF4 F019          	movff	prodh,___flmul@temp+1
  5025   0018CE  5018               	movf	___flmul@temp^0,w,c
  5026   0018D0  2614               	addwf	___flmul@prod^0,f,c
  5027   0018D2  5019               	movf	(___flmul@temp+1)^0,w,c
  5028   0018D4  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5029   0018D6  0E00               	movlw	0
  5030   0018D8  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5031   0018DA  0E00               	movlw	0
  5032   0018DC  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5033   0018DE  5007               	movf	(___flmul@a+2)^0,w,c
  5034   0018E0  0203               	mulwf	(___flmul@b+2)^0,c
  5035   0018E2  CFF3 F018          	movff	prodl,___flmul@temp
  5036   0018E6  CFF4 F019          	movff	prodh,___flmul@temp+1
  5037   0018EA  5018               	movf	___flmul@temp^0,w,c
  5038   0018EC  6E09               	movwf	??___flmul^0,c
  5039   0018EE  5019               	movf	(___flmul@temp+1)^0,w,c
  5040   0018F0  6E0A               	movwf	(??___flmul+1)^0,c
  5041   0018F2  6A0B               	clrf	(??___flmul+2)^0,c
  5042   0018F4  6A0C               	clrf	(??___flmul+3)^0,c
  5043   0018F6  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  5044   0018FA  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  5045   0018FE  C009  F00A         	movff	??___flmul,??___flmul+1
  5046   001902  6A09               	clrf	??___flmul^0,c
  5047   001904  5009               	movf	??___flmul^0,w,c
  5048   001906  2614               	addwf	___flmul@prod^0,f,c
  5049   001908  500A               	movf	(??___flmul+1)^0,w,c
  5050   00190A  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5051   00190C  500B               	movf	(??___flmul+2)^0,w,c
  5052   00190E  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5053   001910  500C               	movf	(??___flmul+3)^0,w,c
  5054   001912  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5055   001914  C00E  F009         	movff	___flmul@grs,??___flmul
  5056   001918  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  5057   00191C  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  5058   001920  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  5059   001924  0E19               	movlw	25
  5060   001926  EF9A  F00C         	goto	u2670
  5061   00192A                     u2675:
  5062   00192A  90D8               	bcf	status,0,c
  5063   00192C  320C               	rrcf	(??___flmul+3)^0,f,c
  5064   00192E  320B               	rrcf	(??___flmul+2)^0,f,c
  5065   001930  320A               	rrcf	(??___flmul+1)^0,f,c
  5066   001932  3209               	rrcf	??___flmul^0,f,c
  5067   001934                     u2670:
  5068   001934  2EE8               	decfsz	wreg,f,c
  5069   001936  EF95  F00C         	goto	u2675
  5070   00193A  5009               	movf	??___flmul^0,w,c
  5071   00193C  2614               	addwf	___flmul@prod^0,f,c
  5072   00193E  500A               	movf	(??___flmul+1)^0,w,c
  5073   001940  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5074   001942  500B               	movf	(??___flmul+2)^0,w,c
  5075   001944  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5076   001946  500C               	movf	(??___flmul+3)^0,w,c
  5077   001948  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5078   00194A  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  5079   00194E  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  5080   001952  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  5081   001956  6A0E               	clrf	___flmul@grs^0,c
  5082   001958  5012               	movf	___flmul@aexp^0,w,c
  5083   00195A  C013  F009         	movff	___flmul@bexp,??___flmul
  5084   00195E  6A0A               	clrf	(??___flmul+1)^0,c
  5085   001960  2609               	addwf	??___flmul^0,f,c
  5086   001962  0E00               	movlw	0
  5087   001964  220A               	addwfc	(??___flmul+1)^0,f,c
  5088   001966  0E82               	movlw	130
  5089   001968  2409               	addwf	??___flmul^0,w,c
  5090   00196A  6E18               	movwf	___flmul@temp^0,c
  5091   00196C  0EFF               	movlw	255
  5092   00196E  200A               	addwfc	(??___flmul+1)^0,w,c
  5093   001970  6E19               	movwf	(___flmul@temp+1)^0,c
  5094   001972  EFD0  F00C         	goto	l2817
  5095   001976                     l2811:
  5096   001976  90D8               	bcf	status,0,c
  5097   001978  3614               	rlcf	___flmul@prod^0,f,c
  5098   00197A  3615               	rlcf	(___flmul@prod+1)^0,f,c
  5099   00197C  3616               	rlcf	(___flmul@prod+2)^0,f,c
  5100   00197E  3617               	rlcf	(___flmul@prod+3)^0,f,c
  5101   001980  AE11               	btfss	(___flmul@grs+3)^0,7,c
  5102   001982  EFC5  F00C         	goto	u2681
  5103   001986  EFC7  F00C         	goto	u2680
  5104   00198A                     u2681:
  5105   00198A  EFC8  F00C         	goto	l745
  5106   00198E                     u2680:
  5107   00198E  8014               	bsf	___flmul@prod^0,0,c
  5108   001990                     l745:
  5109   001990  90D8               	bcf	status,0,c
  5110   001992  360E               	rlcf	___flmul@grs^0,f,c
  5111   001994  360F               	rlcf	(___flmul@grs+1)^0,f,c
  5112   001996  3610               	rlcf	(___flmul@grs+2)^0,f,c
  5113   001998  3611               	rlcf	(___flmul@grs+3)^0,f,c
  5114   00199A  0618               	decf	___flmul@temp^0,f,c
  5115   00199C  A0D8               	btfss	status,0,c
  5116   00199E  0619               	decf	(___flmul@temp+1)^0,f,c
  5117   0019A0                     l2817:
  5118   0019A0  AE16               	btfss	(___flmul@prod+2)^0,7,c
  5119   0019A2  EFD5  F00C         	goto	u2691
  5120   0019A6  EFD7  F00C         	goto	u2690
  5121   0019AA                     u2691:
  5122   0019AA  EFBB  F00C         	goto	l2811
  5123   0019AE                     u2690:
  5124   0019AE  0E00               	movlw	0
  5125   0019B0  6E12               	movwf	___flmul@aexp^0,c
  5126   0019B2  AE11               	btfss	(___flmul@grs+3)^0,7,c
  5127   0019B4  EFDE  F00C         	goto	u2701
  5128   0019B8  EFE0  F00C         	goto	u2700
  5129   0019BC                     u2701:
  5130   0019BC  EF04  F00D         	goto	l747
  5131   0019C0                     u2700:
  5132   0019C0  0EFF               	movlw	255
  5133   0019C2  140E               	andwf	___flmul@grs^0,w,c
  5134   0019C4  6E09               	movwf	??___flmul^0,c
  5135   0019C6  0EFF               	movlw	255
  5136   0019C8  140F               	andwf	(___flmul@grs+1)^0,w,c
  5137   0019CA  6E0A               	movwf	(??___flmul+1)^0,c
  5138   0019CC  0EFF               	movlw	255
  5139   0019CE  1410               	andwf	(___flmul@grs+2)^0,w,c
  5140   0019D0  6E0B               	movwf	(??___flmul+2)^0,c
  5141   0019D2  0E7F               	movlw	127
  5142   0019D4  1411               	andwf	(___flmul@grs+3)^0,w,c
  5143   0019D6  6E0C               	movwf	(??___flmul+3)^0,c
  5144   0019D8  5009               	movf	??___flmul^0,w,c
  5145   0019DA  100A               	iorwf	(??___flmul+1)^0,w,c
  5146   0019DC  100B               	iorwf	(??___flmul+2)^0,w,c
  5147   0019DE  100C               	iorwf	(??___flmul+3)^0,w,c
  5148   0019E0  B4D8               	btfsc	status,2,c
  5149   0019E2  EFF5  F00C         	goto	u2711
  5150   0019E6  EFF7  F00C         	goto	u2710
  5151   0019EA                     u2711:
  5152   0019EA  EFFB  F00C         	goto	l748
  5153   0019EE                     u2710:
  5154   0019EE                     l2825:
  5155   0019EE  0E01               	movlw	1
  5156   0019F0  6E12               	movwf	___flmul@aexp^0,c
  5157   0019F2  EF04  F00D         	goto	l747
  5158   0019F6                     l748:
  5159   0019F6  A014               	btfss	___flmul@prod^0,0,c
  5160   0019F8  EF00  F00D         	goto	u2721
  5161   0019FC  EF02  F00D         	goto	u2720
  5162   001A00                     u2721:
  5163   001A00  EF04  F00D         	goto	l747
  5164   001A04                     u2720:
  5165   001A04  EFF7  F00C         	goto	l2825
  5166   001A08                     l747:
  5167   001A08  5012               	movf	___flmul@aexp^0,w,c
  5168   001A0A  B4D8               	btfsc	status,2,c
  5169   001A0C  EF0A  F00D         	goto	u2731
  5170   001A10  EF0C  F00D         	goto	u2730
  5171   001A14                     u2731:
  5172   001A14  EF30  F00D         	goto	l2837
  5173   001A18                     u2730:
  5174   001A18  0E01               	movlw	1
  5175   001A1A  2614               	addwf	___flmul@prod^0,f,c
  5176   001A1C  0E00               	movlw	0
  5177   001A1E  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5178   001A20  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5179   001A22  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5180   001A24  A017               	btfss	(___flmul@prod+3)^0,0,c
  5181   001A26  EF17  F00D         	goto	u2741
  5182   001A2A  EF19  F00D         	goto	u2740
  5183   001A2E                     u2741:
  5184   001A2E  EF30  F00D         	goto	l2837
  5185   001A32                     u2740:
  5186   001A32  C014  F009         	movff	___flmul@prod,??___flmul
  5187   001A36  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  5188   001A3A  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  5189   001A3E  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  5190   001A42  340C               	rlcf	(??___flmul+3)^0,w,c
  5191   001A44  320C               	rrcf	(??___flmul+3)^0,f,c
  5192   001A46  320B               	rrcf	(??___flmul+2)^0,f,c
  5193   001A48  320A               	rrcf	(??___flmul+1)^0,f,c
  5194   001A4A  3209               	rrcf	??___flmul^0,f,c
  5195   001A4C  C009  F014         	movff	??___flmul,___flmul@prod
  5196   001A50  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  5197   001A54  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  5198   001A58  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  5199   001A5C  4A18               	infsnz	___flmul@temp^0,f,c
  5200   001A5E  2A19               	incf	(___flmul@temp+1)^0,f,c
  5201   001A60                     l2837:
  5202   001A60  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  5203   001A62  EF3B  F00D         	goto	u2751
  5204   001A66  5019               	movf	(___flmul@temp+1)^0,w,c
  5205   001A68  E108               	bnz	u2750
  5206   001A6A  2818               	incf	___flmul@temp^0,w,c
  5207   001A6C  A0D8               	btfss	status,0,c
  5208   001A6E  EF3B  F00D         	goto	u2751
  5209   001A72  EF3D  F00D         	goto	u2750
  5210   001A76                     u2751:
  5211   001A76  EF47  F00D         	goto	l2841
  5212   001A7A                     u2750:
  5213   001A7A  0E00               	movlw	0
  5214   001A7C  6E14               	movwf	___flmul@prod^0,c
  5215   001A7E  0E00               	movlw	0
  5216   001A80  6E15               	movwf	(___flmul@prod+1)^0,c
  5217   001A82  0E80               	movlw	128
  5218   001A84  6E16               	movwf	(___flmul@prod+2)^0,c
  5219   001A86  0E7F               	movlw	127
  5220   001A88  6E17               	movwf	(___flmul@prod+3)^0,c
  5221   001A8A  EF75  F00D         	goto	l2853
  5222   001A8E                     l2841:
  5223   001A8E  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  5224   001A90  EF54  F00D         	goto	u2760
  5225   001A94  5019               	movf	(___flmul@temp+1)^0,w,c
  5226   001A96  E106               	bnz	u2761
  5227   001A98  0418               	decf	___flmul@temp^0,w,c
  5228   001A9A  B0D8               	btfsc	status,0,c
  5229   001A9C  EF52  F00D         	goto	u2761
  5230   001AA0  EF54  F00D         	goto	u2760
  5231   001AA4                     u2761:
  5232   001AA4  EF60  F00D         	goto	l755
  5233   001AA8                     u2760:
  5234   001AA8  0E00               	movlw	0
  5235   001AAA  6E14               	movwf	___flmul@prod^0,c
  5236   001AAC  0E00               	movlw	0
  5237   001AAE  6E15               	movwf	(___flmul@prod+1)^0,c
  5238   001AB0  0E00               	movlw	0
  5239   001AB2  6E16               	movwf	(___flmul@prod+2)^0,c
  5240   001AB4  0E00               	movlw	0
  5241   001AB6  6E17               	movwf	(___flmul@prod+3)^0,c
  5242   001AB8  0E00               	movlw	0
  5243   001ABA  6E0D               	movwf	___flmul@sign^0,c
  5244   001ABC  EF75  F00D         	goto	l2853
  5245   001AC0                     l755:
  5246   001AC0  C018  F013         	movff	___flmul@temp,___flmul@bexp
  5247   001AC4  0EFF               	movlw	255
  5248   001AC6  1614               	andwf	___flmul@prod^0,f,c
  5249   001AC8  0EFF               	movlw	255
  5250   001ACA  1615               	andwf	(___flmul@prod+1)^0,f,c
  5251   001ACC  0E7F               	movlw	127
  5252   001ACE  1616               	andwf	(___flmul@prod+2)^0,f,c
  5253   001AD0  0E00               	movlw	0
  5254   001AD2  1617               	andwf	(___flmul@prod+3)^0,f,c
  5255   001AD4  A013               	btfss	___flmul@bexp^0,0,c
  5256   001AD6  EF6F  F00D         	goto	u2771
  5257   001ADA  EF71  F00D         	goto	u2770
  5258   001ADE                     u2771:
  5259   001ADE  EF72  F00D         	goto	l2851
  5260   001AE2                     u2770:
  5261   001AE2  8E16               	bsf	(___flmul@prod+2)^0,7,c
  5262   001AE4                     l2851:
  5263   001AE4  90D8               	bcf	status,0,c
  5264   001AE6  3013               	rrcf	___flmul@bexp^0,w,c
  5265   001AE8  6E17               	movwf	(___flmul@prod+3)^0,c
  5266   001AEA                     l2853:
  5267   001AEA  500D               	movf	___flmul@sign^0,w,c
  5268   001AEC  1217               	iorwf	(___flmul@prod+3)^0,f,c
  5269   001AEE  C014  F001         	movff	___flmul@prod,?___flmul
  5270   001AF2  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  5271   001AF6  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  5272   001AFA  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  5273   001AFE                     l742:
  5274   001AFE  0012               	return		;funcret
  5275   001B00                     __end_of___flmul:
  5276                           	callstack 0
  5277                           
  5278 ;; *************** function ___flge *****************
  5279 ;; Defined at:
  5280 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  5281 ;; Parameters:    Size  Location     Type
  5282 ;;  ff1             4   25[COMRAM] unsigned char 
  5283 ;;  ff2             4   29[COMRAM] unsigned char 
  5284 ;; Auto vars:     Size  Location     Type
  5285 ;;		None
  5286 ;; Return value:  Size  Location     Type
  5287 ;;		None               void
  5288 ;; Registers used:
  5289 ;;		wreg, status,2, status,0
  5290 ;; Tracked objects:
  5291 ;;		On entry : 0/0
  5292 ;;		On exit  : 0/0
  5293 ;;		Unchanged: 0/0
  5294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5295 ;;      Params:         8       0       0       0       0       0       0       0       0
  5296 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5297 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5298 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5299 ;;Total ram usage:       12 bytes
  5300 ;; Hardware stack levels used: 1
  5301 ;; This function calls:
  5302 ;;		Nothing
  5303 ;; This function is called by:
  5304 ;;		_efgtoa
  5305 ;; This function uses a non-reentrant model
  5306 ;;
  5307                           
  5308                           	psect	text19
  5309   0027C6                     __ptext19:
  5310                           	callstack 0
  5311   0027C6                     ___flge:
  5312                           	callstack 26
  5313   0027C6  0E00               	movlw	0
  5314   0027C8  141A               	andwf	___flge@ff1^0,w,c
  5315   0027CA  6E22               	movwf	??___flge^0,c
  5316   0027CC  0E00               	movlw	0
  5317   0027CE  141B               	andwf	(___flge@ff1+1)^0,w,c
  5318   0027D0  6E23               	movwf	(??___flge+1)^0,c
  5319   0027D2  0E80               	movlw	128
  5320   0027D4  141C               	andwf	(___flge@ff1+2)^0,w,c
  5321   0027D6  6E24               	movwf	(??___flge+2)^0,c
  5322   0027D8  0E7F               	movlw	127
  5323   0027DA  141D               	andwf	(___flge@ff1+3)^0,w,c
  5324   0027DC  6E25               	movwf	(??___flge+3)^0,c
  5325   0027DE  5022               	movf	??___flge^0,w,c
  5326   0027E0  1023               	iorwf	(??___flge+1)^0,w,c
  5327   0027E2  1024               	iorwf	(??___flge+2)^0,w,c
  5328   0027E4  1025               	iorwf	(??___flge+3)^0,w,c
  5329   0027E6  A4D8               	btfss	status,2,c
  5330   0027E8  EFF8  F013         	goto	u2811
  5331   0027EC  EFFA  F013         	goto	u2810
  5332   0027F0                     u2811:
  5333   0027F0  EF02  F014         	goto	l2885
  5334   0027F4                     u2810:
  5335   0027F4  0E00               	movlw	0
  5336   0027F6  6E1A               	movwf	___flge@ff1^0,c
  5337   0027F8  0E00               	movlw	0
  5338   0027FA  6E1B               	movwf	(___flge@ff1+1)^0,c
  5339   0027FC  0E00               	movlw	0
  5340   0027FE  6E1C               	movwf	(___flge@ff1+2)^0,c
  5341   002800  0E00               	movlw	0
  5342   002802  6E1D               	movwf	(___flge@ff1+3)^0,c
  5343   002804                     l2885:
  5344   002804  0E00               	movlw	0
  5345   002806  141E               	andwf	___flge@ff2^0,w,c
  5346   002808  6E22               	movwf	??___flge^0,c
  5347   00280A  0E00               	movlw	0
  5348   00280C  141F               	andwf	(___flge@ff2+1)^0,w,c
  5349   00280E  6E23               	movwf	(??___flge+1)^0,c
  5350   002810  0E80               	movlw	128
  5351   002812  1420               	andwf	(___flge@ff2+2)^0,w,c
  5352   002814  6E24               	movwf	(??___flge+2)^0,c
  5353   002816  0E7F               	movlw	127
  5354   002818  1421               	andwf	(___flge@ff2+3)^0,w,c
  5355   00281A  6E25               	movwf	(??___flge+3)^0,c
  5356   00281C  5022               	movf	??___flge^0,w,c
  5357   00281E  1023               	iorwf	(??___flge+1)^0,w,c
  5358   002820  1024               	iorwf	(??___flge+2)^0,w,c
  5359   002822  1025               	iorwf	(??___flge+3)^0,w,c
  5360   002824  A4D8               	btfss	status,2,c
  5361   002826  EF17  F014         	goto	u2821
  5362   00282A  EF19  F014         	goto	u2820
  5363   00282E                     u2821:
  5364   00282E  EF21  F014         	goto	l2889
  5365   002832                     u2820:
  5366   002832  0E00               	movlw	0
  5367   002834  6E1E               	movwf	___flge@ff2^0,c
  5368   002836  0E00               	movlw	0
  5369   002838  6E1F               	movwf	(___flge@ff2+1)^0,c
  5370   00283A  0E00               	movlw	0
  5371   00283C  6E20               	movwf	(___flge@ff2+2)^0,c
  5372   00283E  0E00               	movlw	0
  5373   002840  6E21               	movwf	(___flge@ff2+3)^0,c
  5374   002842                     l2889:
  5375   002842  AE1D               	btfss	(___flge@ff1+3)^0,7,c
  5376   002844  EF26  F014         	goto	u2831
  5377   002848  EF28  F014         	goto	u2830
  5378   00284C                     u2831:
  5379   00284C  EF31  F014         	goto	l2893
  5380   002850                     u2830:
  5381   002850  6C1A               	negf	___flge@ff1^0,c
  5382   002852  1E1B               	comf	(___flge@ff1+1)^0,f,c
  5383   002854  B0D8               	btfsc	status,0,c
  5384   002856  2A1B               	incf	(___flge@ff1+1)^0,f,c
  5385   002858  1E1C               	comf	(___flge@ff1+2)^0,f,c
  5386   00285A  B0D8               	btfsc	status,0,c
  5387   00285C  2A1C               	incf	(___flge@ff1+2)^0,f,c
  5388   00285E  0E80               	movlw	128
  5389   002860  561D               	subfwb	(___flge@ff1+3)^0,f,c
  5390   002862                     l2893:
  5391   002862  AE21               	btfss	(___flge@ff2+3)^0,7,c
  5392   002864  EF36  F014         	goto	u2841
  5393   002868  EF38  F014         	goto	u2840
  5394   00286C                     u2841:
  5395   00286C  EF41  F014         	goto	l389
  5396   002870                     u2840:
  5397   002870  6C1E               	negf	___flge@ff2^0,c
  5398   002872  1E1F               	comf	(___flge@ff2+1)^0,f,c
  5399   002874  B0D8               	btfsc	status,0,c
  5400   002876  2A1F               	incf	(___flge@ff2+1)^0,f,c
  5401   002878  1E20               	comf	(___flge@ff2+2)^0,f,c
  5402   00287A  B0D8               	btfsc	status,0,c
  5403   00287C  2A20               	incf	(___flge@ff2+2)^0,f,c
  5404   00287E  0E80               	movlw	128
  5405   002880  5621               	subfwb	(___flge@ff2+3)^0,f,c
  5406   002882                     l389:
  5407   002882  0E00               	movlw	0
  5408   002884  1A1A               	xorwf	___flge@ff1^0,f,c
  5409   002886  0E00               	movlw	0
  5410   002888  1A1B               	xorwf	(___flge@ff1+1)^0,f,c
  5411   00288A  0E00               	movlw	0
  5412   00288C  1A1C               	xorwf	(___flge@ff1+2)^0,f,c
  5413   00288E  0E80               	movlw	128
  5414   002890  1A1D               	xorwf	(___flge@ff1+3)^0,f,c
  5415   002892  0E00               	movlw	0
  5416   002894  1A1E               	xorwf	___flge@ff2^0,f,c
  5417   002896  0E00               	movlw	0
  5418   002898  1A1F               	xorwf	(___flge@ff2+1)^0,f,c
  5419   00289A  0E00               	movlw	0
  5420   00289C  1A20               	xorwf	(___flge@ff2+2)^0,f,c
  5421   00289E  0E80               	movlw	128
  5422   0028A0  1A21               	xorwf	(___flge@ff2+3)^0,f,c
  5423   0028A2  501E               	movf	___flge@ff2^0,w,c
  5424   0028A4  5C1A               	subwf	___flge@ff1^0,w,c
  5425   0028A6  501F               	movf	(___flge@ff2+1)^0,w,c
  5426   0028A8  581B               	subwfb	(___flge@ff1+1)^0,w,c
  5427   0028AA  5020               	movf	(___flge@ff2+2)^0,w,c
  5428   0028AC  581C               	subwfb	(___flge@ff1+2)^0,w,c
  5429   0028AE  5021               	movf	(___flge@ff2+3)^0,w,c
  5430   0028B0  581D               	subwfb	(___flge@ff1+3)^0,w,c
  5431   0028B2  B0D8               	btfsc	status,0,c
  5432   0028B4  EF5E  F014         	goto	u2851
  5433   0028B8  EF60  F014         	goto	u2850
  5434   0028BC                     u2851:
  5435   0028BC  EF63  F014         	goto	l2899
  5436   0028C0                     u2850:
  5437   0028C0  90D8               	bcf	status,0,c
  5438   0028C2  EF64  F014         	goto	l394
  5439   0028C6                     l2899:
  5440   0028C6  80D8               	bsf	status,0,c
  5441   0028C8                     l394:
  5442   0028C8  0012               	return		;funcret
  5443   0028CA                     __end_of___flge:
  5444                           	callstack 0
  5445                           
  5446 ;; *************** function ___fleq *****************
  5447 ;; Defined at:
  5448 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
  5449 ;; Parameters:    Size  Location     Type
  5450 ;;  ff1             4    0[COMRAM] unsigned char 
  5451 ;;  ff2             4    4[COMRAM] unsigned char 
  5452 ;; Auto vars:     Size  Location     Type
  5453 ;;		None
  5454 ;; Return value:  Size  Location     Type
  5455 ;;		None               void
  5456 ;; Registers used:
  5457 ;;		wreg, status,2, status,0
  5458 ;; Tracked objects:
  5459 ;;		On entry : 0/0
  5460 ;;		On exit  : 0/0
  5461 ;;		Unchanged: 0/0
  5462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5463 ;;      Params:         8       0       0       0       0       0       0       0       0
  5464 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5465 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5466 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5467 ;;Total ram usage:       12 bytes
  5468 ;; Hardware stack levels used: 1
  5469 ;; This function calls:
  5470 ;;		Nothing
  5471 ;; This function is called by:
  5472 ;;		_efgtoa
  5473 ;; This function uses a non-reentrant model
  5474 ;;
  5475                           
  5476                           	psect	text20
  5477   002B6A                     __ptext20:
  5478                           	callstack 0
  5479   002B6A                     ___fleq:
  5480                           	callstack 26
  5481   002B6A  0E00               	movlw	0
  5482   002B6C  1401               	andwf	___fleq@ff1^0,w,c
  5483   002B6E  6E09               	movwf	??___fleq^0,c
  5484   002B70  0E00               	movlw	0
  5485   002B72  1402               	andwf	(___fleq@ff1+1)^0,w,c
  5486   002B74  6E0A               	movwf	(??___fleq+1)^0,c
  5487   002B76  0E80               	movlw	128
  5488   002B78  1403               	andwf	(___fleq@ff1+2)^0,w,c
  5489   002B7A  6E0B               	movwf	(??___fleq+2)^0,c
  5490   002B7C  0E7F               	movlw	127
  5491   002B7E  1404               	andwf	(___fleq@ff1+3)^0,w,c
  5492   002B80  6E0C               	movwf	(??___fleq+3)^0,c
  5493   002B82  5009               	movf	??___fleq^0,w,c
  5494   002B84  100A               	iorwf	(??___fleq+1)^0,w,c
  5495   002B86  100B               	iorwf	(??___fleq+2)^0,w,c
  5496   002B88  100C               	iorwf	(??___fleq+3)^0,w,c
  5497   002B8A  A4D8               	btfss	status,2,c
  5498   002B8C  EFCA  F015         	goto	u2781
  5499   002B90  EFCC  F015         	goto	u2780
  5500   002B94                     u2781:
  5501   002B94  EFD4  F015         	goto	l2869
  5502   002B98                     u2780:
  5503   002B98  0E00               	movlw	0
  5504   002B9A  6E01               	movwf	___fleq@ff1^0,c
  5505   002B9C  0E00               	movlw	0
  5506   002B9E  6E02               	movwf	(___fleq@ff1+1)^0,c
  5507   002BA0  0E00               	movlw	0
  5508   002BA2  6E03               	movwf	(___fleq@ff1+2)^0,c
  5509   002BA4  0E00               	movlw	0
  5510   002BA6  6E04               	movwf	(___fleq@ff1+3)^0,c
  5511   002BA8                     l2869:
  5512   002BA8  0E00               	movlw	0
  5513   002BAA  1405               	andwf	___fleq@ff2^0,w,c
  5514   002BAC  6E09               	movwf	??___fleq^0,c
  5515   002BAE  0E00               	movlw	0
  5516   002BB0  1406               	andwf	(___fleq@ff2+1)^0,w,c
  5517   002BB2  6E0A               	movwf	(??___fleq+1)^0,c
  5518   002BB4  0E80               	movlw	128
  5519   002BB6  1407               	andwf	(___fleq@ff2+2)^0,w,c
  5520   002BB8  6E0B               	movwf	(??___fleq+2)^0,c
  5521   002BBA  0E7F               	movlw	127
  5522   002BBC  1408               	andwf	(___fleq@ff2+3)^0,w,c
  5523   002BBE  6E0C               	movwf	(??___fleq+3)^0,c
  5524   002BC0  5009               	movf	??___fleq^0,w,c
  5525   002BC2  100A               	iorwf	(??___fleq+1)^0,w,c
  5526   002BC4  100B               	iorwf	(??___fleq+2)^0,w,c
  5527   002BC6  100C               	iorwf	(??___fleq+3)^0,w,c
  5528   002BC8  A4D8               	btfss	status,2,c
  5529   002BCA  EFE9  F015         	goto	u2791
  5530   002BCE  EFEB  F015         	goto	u2790
  5531   002BD2                     u2791:
  5532   002BD2  EFF3  F015         	goto	l2873
  5533   002BD6                     u2790:
  5534   002BD6  0E00               	movlw	0
  5535   002BD8  6E05               	movwf	___fleq@ff2^0,c
  5536   002BDA  0E00               	movlw	0
  5537   002BDC  6E06               	movwf	(___fleq@ff2+1)^0,c
  5538   002BDE  0E00               	movlw	0
  5539   002BE0  6E07               	movwf	(___fleq@ff2+2)^0,c
  5540   002BE2  0E00               	movlw	0
  5541   002BE4  6E08               	movwf	(___fleq@ff2+3)^0,c
  5542   002BE6                     l2873:
  5543   002BE6  5005               	movf	___fleq@ff2^0,w,c
  5544   002BE8  1801               	xorwf	___fleq@ff1^0,w,c
  5545   002BEA  E10F               	bnz	u2800
  5546   002BEC  5006               	movf	(___fleq@ff2+1)^0,w,c
  5547   002BEE  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  5548   002BF0  E10C               	bnz	u2800
  5549   002BF2  5007               	movf	(___fleq@ff2+2)^0,w,c
  5550   002BF4  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  5551   002BF6  E109               	bnz	u2800
  5552   002BF8  5008               	movf	(___fleq@ff2+3)^0,w,c
  5553   002BFA  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  5554   002BFC  B4D8               	btfsc	status,2,c
  5555   002BFE  EF03  F016         	goto	u2801
  5556   002C02  EF05  F016         	goto	u2800
  5557   002C06                     u2801:
  5558   002C06  EF08  F016         	goto	l2877
  5559   002C0A                     u2800:
  5560   002C0A  90D8               	bcf	status,0,c
  5561   002C0C  EF09  F016         	goto	l383
  5562   002C10                     l2877:
  5563   002C10  80D8               	bsf	status,0,c
  5564   002C12                     l383:
  5565   002C12  0012               	return		;funcret
  5566   002C14                     __end_of___fleq:
  5567                           	callstack 0
  5568                           
  5569 ;; *************** function _atoi *****************
  5570 ;; Defined at:
  5571 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\atoi.c"
  5572 ;; Parameters:    Size  Location     Type
  5573 ;;  s               2    6[COMRAM] PTR const unsigned char 
  5574 ;;		 -> STR_2(5), 
  5575 ;; Auto vars:     Size  Location     Type
  5576 ;;  n               2   13[COMRAM] int 
  5577 ;;  neg             2   11[COMRAM] int 
  5578 ;; Return value:  Size  Location     Type
  5579 ;;                  2    6[COMRAM] int 
  5580 ;; Registers used:
  5581 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5582 ;; Tracked objects:
  5583 ;;		On entry : 0/0
  5584 ;;		On exit  : 0/0
  5585 ;;		Unchanged: 0/0
  5586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5587 ;;      Params:         2       0       0       0       0       0       0       0       0
  5588 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5589 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5590 ;;      Totals:         9       0       0       0       0       0       0       0       0
  5591 ;;Total ram usage:        9 bytes
  5592 ;; Hardware stack levels used: 1
  5593 ;; Hardware stack levels required when called: 1
  5594 ;; This function calls:
  5595 ;;		___wmul
  5596 ;;		_isdigit
  5597 ;;		_isspace
  5598 ;; This function is called by:
  5599 ;;		_vfpfcnvrt
  5600 ;; This function uses a non-reentrant model
  5601 ;;
  5602                           
  5603                           	psect	text21
  5604   002576                     __ptext21:
  5605                           	callstack 0
  5606   002576                     _atoi:
  5607                           	callstack 26
  5608   002576  0E00               	movlw	0
  5609   002578  6E0F               	movwf	(atoi@n+1)^0,c
  5610   00257A  0E00               	movlw	0
  5611   00257C  6E0E               	movwf	atoi@n^0,c
  5612   00257E  0E00               	movlw	0
  5613   002580  6E0D               	movwf	(atoi@neg+1)^0,c
  5614   002582  0E00               	movlw	0
  5615   002584  6E0C               	movwf	atoi@neg^0,c
  5616   002586  EFC7  F012         	goto	l3283
  5617   00258A                     l3279:
  5618   00258A  4A07               	infsnz	atoi@s^0,f,c
  5619   00258C  2A08               	incf	(atoi@s+1)^0,f,c
  5620   00258E                     l3283:
  5621   00258E  C007  FFF6         	movff	atoi@s,tblptrl
  5622   002592  C008  FFF7         	movff	atoi@s+1,tblptrh
  5623   002596                     	if	0	;tblptru may be non-zero
  5624   002596                     	endif
  5625   002596                     	if	0	;tblptru may be non-zero
  5626   002596                     	endif
  5627   002596  0008               	tblrd		*
  5628   002598  50F5               	movf	tablat,w,c
  5629   00259A  0A20               	xorlw	32
  5630   00259C  B4D8               	btfsc	status,2,c
  5631   00259E  EFD3  F012         	goto	u3521
  5632   0025A2  EFD5  F012         	goto	u3520
  5633   0025A6                     u3521:
  5634   0025A6  EFC5  F012         	goto	l3279
  5635   0025AA                     u3520:
  5636   0025AA  C007  FFF6         	movff	atoi@s,tblptrl
  5637   0025AE  C008  FFF7         	movff	atoi@s+1,tblptrh
  5638   0025B2                     	if	0	;tblptru may be non-zero
  5639   0025B2                     	endif
  5640   0025B2                     	if	0	;tblptru may be non-zero
  5641   0025B2                     	endif
  5642   0025B2  0008               	tblrd		*
  5643   0025B4  CFF5 F009          	movff	tablat,??_atoi
  5644   0025B8  0EF7               	movlw	247
  5645   0025BA  2409               	addwf	??_atoi^0,w,c
  5646   0025BC  6E0A               	movwf	(??_atoi+1)^0,c
  5647   0025BE  6A0B               	clrf	(??_atoi+2)^0,c
  5648   0025C0  0EFF               	movlw	255
  5649   0025C2  220B               	addwfc	(??_atoi+2)^0,f,c
  5650   0025C4  500B               	movf	(??_atoi+2)^0,w,c
  5651   0025C6  E109               	bnz	u3530
  5652   0025C8  0E05               	movlw	5
  5653   0025CA  5C0A               	subwf	(??_atoi+1)^0,w,c
  5654   0025CC  A0D8               	btfss	status,0,c
  5655   0025CE  EFEB  F012         	goto	u3531
  5656   0025D2  EFED  F012         	goto	u3530
  5657   0025D6                     u3531:
  5658   0025D6  EFC5  F012         	goto	l3279
  5659   0025DA                     u3530:
  5660   0025DA  EFF7  F012         	goto	l3291
  5661   0025DE                     l3287:
  5662   0025DE  0E00               	movlw	0
  5663   0025E0  6E0D               	movwf	(atoi@neg+1)^0,c
  5664   0025E2  0E01               	movlw	1
  5665   0025E4  6E0C               	movwf	atoi@neg^0,c
  5666   0025E6                     l3289:
  5667   0025E6  4A07               	infsnz	atoi@s^0,f,c
  5668   0025E8  2A08               	incf	(atoi@s+1)^0,f,c
  5669   0025EA  EF2C  F013         	goto	l3299
  5670   0025EE                     l3291:
  5671   0025EE  C007  FFF6         	movff	atoi@s,tblptrl
  5672   0025F2  C008  FFF7         	movff	atoi@s+1,tblptrh
  5673   0025F6                     	if	0	;tblptru may be non-zero
  5674   0025F6                     	endif
  5675   0025F6                     	if	0	;tblptru may be non-zero
  5676   0025F6                     	endif
  5677   0025F6  0008               	tblrd		*
  5678   0025F8  50F5               	movf	tablat,w,c
  5679   0025FA  6E09               	movwf	??_atoi^0,c
  5680   0025FC  6A0A               	clrf	(??_atoi+1)^0,c
  5681                           
  5682                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5683                           ; Switch size 1, requested type "simple"
  5684                           ; Number of cases is 1, Range of values is 0 to 0
  5685                           ; switch strategies available:
  5686                           ; Name         Instructions Cycles
  5687                           ; simple_byte            4     3 (average)
  5688                           ;	Chosen strategy is simple_byte
  5689   0025FE  500A               	movf	(??_atoi+1)^0,w,c
  5690   002600  0A00               	xorlw	0	; case 0
  5691   002602  B4D8               	btfsc	status,2,c
  5692   002604  EF06  F013         	goto	l3695
  5693   002608  EF2C  F013         	goto	l3299
  5694   00260C                     l3695:
  5695                           
  5696                           ; Switch size 1, requested type "simple"
  5697                           ; Number of cases is 2, Range of values is 43 to 45
  5698                           ; switch strategies available:
  5699                           ; Name         Instructions Cycles
  5700                           ; simple_byte            7     4 (average)
  5701                           ;	Chosen strategy is simple_byte
  5702   00260C  5009               	movf	??_atoi^0,w,c
  5703   00260E  0A2B               	xorlw	43	; case 43
  5704   002610  B4D8               	btfsc	status,2,c
  5705   002612  EFF3  F012         	goto	l3289
  5706   002616  0A06               	xorlw	6	; case 45
  5707   002618  B4D8               	btfsc	status,2,c
  5708   00261A  EFEF  F012         	goto	l3287
  5709   00261E  EF2C  F013         	goto	l3299
  5710   002622                     l3293:
  5711   002622  C00E  F001         	movff	atoi@n,___wmul@multiplier
  5712   002626  C00F  F002         	movff	atoi@n+1,___wmul@multiplier+1
  5713   00262A  0E00               	movlw	0
  5714   00262C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  5715   00262E  0E0A               	movlw	10
  5716   002630  6E03               	movwf	___wmul@multiplicand^0,c
  5717   002632  EC0C  F019         	call	___wmul	;wreg free
  5718   002636  C007  FFF6         	movff	atoi@s,tblptrl
  5719   00263A  C008  FFF7         	movff	atoi@s+1,tblptrh
  5720   00263E                     	if	0	;tblptru may be non-zero
  5721   00263E                     	endif
  5722   00263E                     	if	0	;tblptru may be non-zero
  5723   00263E                     	endif
  5724   00263E  0008               	tblrd		*
  5725   002640  50F5               	movf	tablat,w,c
  5726   002642  5E01               	subwf	?___wmul^0,f,c
  5727   002644  0E00               	movlw	0
  5728   002646  5A02               	subwfb	(?___wmul+1)^0,f,c
  5729   002648  0E30               	movlw	48
  5730   00264A  2401               	addwf	?___wmul^0,w,c
  5731   00264C  6E0E               	movwf	atoi@n^0,c
  5732   00264E  0E00               	movlw	0
  5733   002650  2002               	addwfc	(?___wmul+1)^0,w,c
  5734   002652  6E0F               	movwf	(atoi@n+1)^0,c
  5735   002654  EFF3  F012         	goto	l3289
  5736   002658                     l3299:
  5737   002658  C007  FFF6         	movff	atoi@s,tblptrl
  5738   00265C  C008  FFF7         	movff	atoi@s+1,tblptrh
  5739   002660                     	if	0	;tblptru may be non-zero
  5740   002660                     	endif
  5741   002660                     	if	0	;tblptru may be non-zero
  5742   002660                     	endif
  5743   002660  0008               	tblrd		*
  5744   002662  CFF5 F009          	movff	tablat,??_atoi
  5745   002666  0ED0               	movlw	208
  5746   002668  2409               	addwf	??_atoi^0,w,c
  5747   00266A  6E0A               	movwf	(??_atoi+1)^0,c
  5748   00266C  6A0B               	clrf	(??_atoi+2)^0,c
  5749   00266E  0EFF               	movlw	255
  5750   002670  220B               	addwfc	(??_atoi+2)^0,f,c
  5751   002672  500B               	movf	(??_atoi+2)^0,w,c
  5752   002674  E109               	bnz	u3540
  5753   002676  0E0A               	movlw	10
  5754   002678  5C0A               	subwf	(??_atoi+1)^0,w,c
  5755   00267A  A0D8               	btfss	status,0,c
  5756   00267C  EF42  F013         	goto	u3541
  5757   002680  EF44  F013         	goto	u3540
  5758   002684                     u3541:
  5759   002684  EF11  F013         	goto	l3293
  5760   002688                     u3540:
  5761   002688  500C               	movf	atoi@neg^0,w,c
  5762   00268A  100D               	iorwf	(atoi@neg+1)^0,w,c
  5763   00268C  A4D8               	btfss	status,2,c
  5764   00268E  EF4B  F013         	goto	u3551
  5765   002692  EF4D  F013         	goto	u3550
  5766   002696                     u3551:
  5767   002696  EF5B  F013         	goto	l959
  5768   00269A                     u3550:
  5769   00269A  C00E  F009         	movff	atoi@n,??_atoi
  5770   00269E  C00F  F00A         	movff	atoi@n+1,??_atoi+1
  5771   0026A2  1E09               	comf	??_atoi^0,f,c
  5772   0026A4  1E0A               	comf	(??_atoi+1)^0,f,c
  5773   0026A6  4A09               	infsnz	??_atoi^0,f,c
  5774   0026A8  2A0A               	incf	(??_atoi+1)^0,f,c
  5775   0026AA  C009  F007         	movff	??_atoi,?_atoi
  5776   0026AE  C00A  F008         	movff	??_atoi+1,?_atoi+1
  5777   0026B2  EF5F  F013         	goto	l962
  5778   0026B6                     l959:
  5779   0026B6  C00E  F007         	movff	atoi@n,?_atoi
  5780   0026BA  C00F  F008         	movff	atoi@n+1,?_atoi+1
  5781   0026BE                     l962:
  5782   0026BE  0012               	return		;funcret
  5783   0026C0                     __end_of_atoi:
  5784                           	callstack 0
  5785                           
  5786 ;; *************** function _isspace *****************
  5787 ;; Defined at:
  5788 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isspace.c"
  5789 ;; Parameters:    Size  Location     Type
  5790 ;;  c               2    0[COMRAM] int 
  5791 ;; Auto vars:     Size  Location     Type
  5792 ;;		None
  5793 ;; Return value:  Size  Location     Type
  5794 ;;                  2    0[COMRAM] int 
  5795 ;; Registers used:
  5796 ;;		wreg, status,2, status,0
  5797 ;; Tracked objects:
  5798 ;;		On entry : 0/0
  5799 ;;		On exit  : 0/0
  5800 ;;		Unchanged: 0/0
  5801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5802 ;;      Params:         2       0       0       0       0       0       0       0       0
  5803 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5804 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5805 ;;      Totals:         5       0       0       0       0       0       0       0       0
  5806 ;;Total ram usage:        5 bytes
  5807 ;; Hardware stack levels used: 1
  5808 ;; This function calls:
  5809 ;;		Nothing
  5810 ;; This function is called by:
  5811 ;;		_atoi
  5812 ;; This function uses a non-reentrant model
  5813 ;;
  5814                           
  5815                           	psect	text22
  5816   003078                     __ptext22:
  5817                           	callstack 0
  5818   003078                     _isspace:
  5819                           	callstack 26
  5820   003078  0E01               	movlw	1
  5821   00307A  6E05               	movwf	_isspace$1104^0,c
  5822   00307C  0E20               	movlw	32
  5823   00307E  1801               	xorwf	isspace@c^0,w,c
  5824   003080  1002               	iorwf	(isspace@c+1)^0,w,c
  5825   003082  B4D8               	btfsc	status,2,c
  5826   003084  EF46  F018         	goto	u3181
  5827   003088  EF48  F018         	goto	u3180
  5828   00308C                     u3181:
  5829   00308C  EF5B  F018         	goto	l3051
  5830   003090                     u3180:
  5831   003090  0EF7               	movlw	247
  5832   003092  2401               	addwf	isspace@c^0,w,c
  5833   003094  6E03               	movwf	??_isspace^0,c
  5834   003096  0EFF               	movlw	255
  5835   003098  2002               	addwfc	(isspace@c+1)^0,w,c
  5836   00309A  6E04               	movwf	(??_isspace+1)^0,c
  5837   00309C  5004               	movf	(??_isspace+1)^0,w,c
  5838   00309E  E109               	bnz	u3190
  5839   0030A0  0E05               	movlw	5
  5840   0030A2  5C03               	subwf	??_isspace^0,w,c
  5841   0030A4  A0D8               	btfss	status,0,c
  5842   0030A6  EF57  F018         	goto	u3191
  5843   0030AA  EF59  F018         	goto	u3190
  5844   0030AE                     u3191:
  5845   0030AE  EF5B  F018         	goto	l3051
  5846   0030B2                     u3190:
  5847   0030B2  0E00               	movlw	0
  5848   0030B4  6E05               	movwf	_isspace$1104^0,c
  5849   0030B6                     l3051:
  5850   0030B6  C005  F001         	movff	_isspace$1104,?_isspace
  5851   0030BA  6A02               	clrf	(?_isspace+1)^0,c
  5852   0030BC  0012               	return		;funcret
  5853   0030BE                     __end_of_isspace:
  5854                           	callstack 0
  5855                           
  5856 ;; *************** function _isdigit *****************
  5857 ;; Defined at:
  5858 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isdigit.c"
  5859 ;; Parameters:    Size  Location     Type
  5860 ;;  c               2    0[COMRAM] int 
  5861 ;; Auto vars:     Size  Location     Type
  5862 ;;		None
  5863 ;; Return value:  Size  Location     Type
  5864 ;;                  2    0[COMRAM] int 
  5865 ;; Registers used:
  5866 ;;		wreg, status,2, status,0
  5867 ;; Tracked objects:
  5868 ;;		On entry : 0/0
  5869 ;;		On exit  : 0/0
  5870 ;;		Unchanged: 0/0
  5871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5872 ;;      Params:         2       0       0       0       0       0       0       0       0
  5873 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5874 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5875 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5876 ;;Total ram usage:        4 bytes
  5877 ;; Hardware stack levels used: 1
  5878 ;; This function calls:
  5879 ;;		Nothing
  5880 ;; This function is called by:
  5881 ;;		_vfpfcnvrt
  5882 ;;		_atoi
  5883 ;; This function uses a non-reentrant model
  5884 ;;
  5885                           
  5886                           	psect	text23
  5887   0031EC                     __ptext23:
  5888                           	callstack 0
  5889   0031EC                     _isdigit:
  5890                           	callstack 27
  5891   0031EC  0ED0               	movlw	208
  5892   0031EE  2401               	addwf	isdigit@c^0,w,c
  5893   0031F0  6E03               	movwf	??_isdigit^0,c
  5894   0031F2  0EFF               	movlw	255
  5895   0031F4  2002               	addwfc	(isdigit@c+1)^0,w,c
  5896   0031F6  6E04               	movwf	(??_isdigit+1)^0,c
  5897   0031F8  5004               	movf	(??_isdigit+1)^0,w,c
  5898   0031FA  E10A               	bnz	u3160
  5899   0031FC  0E0A               	movlw	10
  5900   0031FE  5C03               	subwf	??_isdigit^0,w,c
  5901   003200  A0D8               	btfss	status,0,c
  5902   003202  EF05  F019         	goto	u3161
  5903   003206  EF08  F019         	goto	u3160
  5904   00320A                     u3161:
  5905   00320A  0E01               	movlw	1
  5906   00320C  EF09  F019         	goto	u3170
  5907   003210                     u3160:
  5908   003210  0E00               	movlw	0
  5909   003212                     u3170:
  5910   003212  6E01               	movwf	?_isdigit^0,c
  5911   003214  6A02               	clrf	(?_isdigit+1)^0,c
  5912   003216  0012               	return		;funcret
  5913   003218                     __end_of_isdigit:
  5914                           	callstack 0
  5915                           
  5916 ;; *************** function ___wmul *****************
  5917 ;; Defined at:
  5918 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  5919 ;; Parameters:    Size  Location     Type
  5920 ;;  multiplier      2    0[COMRAM] unsigned int 
  5921 ;;  multiplicand    2    2[COMRAM] unsigned int 
  5922 ;; Auto vars:     Size  Location     Type
  5923 ;;  product         2    4[COMRAM] unsigned int 
  5924 ;; Return value:  Size  Location     Type
  5925 ;;                  2    0[COMRAM] unsigned int 
  5926 ;; Registers used:
  5927 ;;		wreg, status,2, status,0, prodl, prodh
  5928 ;; Tracked objects:
  5929 ;;		On entry : 0/0
  5930 ;;		On exit  : 0/0
  5931 ;;		Unchanged: 0/0
  5932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5933 ;;      Params:         4       0       0       0       0       0       0       0       0
  5934 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5935 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5936 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5937 ;;Total ram usage:        6 bytes
  5938 ;; Hardware stack levels used: 1
  5939 ;; This function calls:
  5940 ;;		Nothing
  5941 ;; This function is called by:
  5942 ;;		_atoi
  5943 ;; This function uses a non-reentrant model
  5944 ;;
  5945                           
  5946                           	psect	text24
  5947   003218                     __ptext24:
  5948                           	callstack 0
  5949   003218                     ___wmul:
  5950                           	callstack 26
  5951   003218  5001               	movf	___wmul@multiplier^0,w,c
  5952   00321A  0203               	mulwf	___wmul@multiplicand^0,c
  5953   00321C  CFF3 F005          	movff	prodl,___wmul@product
  5954   003220  CFF4 F006          	movff	prodh,___wmul@product+1
  5955   003224  5001               	movf	___wmul@multiplier^0,w,c
  5956   003226  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  5957   003228  50F3               	movf	243,w,c
  5958   00322A  2606               	addwf	(___wmul@product+1)^0,f,c
  5959   00322C  5002               	movf	(___wmul@multiplier+1)^0,w,c
  5960   00322E  0203               	mulwf	___wmul@multiplicand^0,c
  5961   003230  50F3               	movf	243,w,c
  5962   003232  2606               	addwf	(___wmul@product+1)^0,f,c
  5963   003234  C005  F001         	movff	___wmul@product,?___wmul
  5964   003238  C006  F002         	movff	___wmul@product+1,?___wmul+1
  5965   00323C  0012               	return		;funcret
  5966   00323E                     __end_of___wmul:
  5967                           	callstack 0
  5968                           
  5969 ;; *************** function _Read_Captura *****************
  5970 ;; Defined at:
  5971 ;;		line 88 in file "main.c"
  5972 ;; Parameters:    Size  Location     Type
  5973 ;;		None
  5974 ;; Auto vars:     Size  Location     Type
  5975 ;;  periodo         4   49[COMRAM] float 
  5976 ;;  frecuencia      4   45[COMRAM] float 
  5977 ;;  flanco_final    2   55[COMRAM] unsigned short 
  5978 ;;  flanco_inici    2   53[COMRAM] unsigned short 
  5979 ;; Return value:  Size  Location     Type
  5980 ;;                  4   39[COMRAM] float 
  5981 ;; Registers used:
  5982 ;;		wreg, status,2, status,0, cstack
  5983 ;; Tracked objects:
  5984 ;;		On entry : 0/0
  5985 ;;		On exit  : 0/0
  5986 ;;		Unchanged: 0/0
  5987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5988 ;;      Params:         4       0       0       0       0       0       0       0       0
  5989 ;;      Locals:        12       0       0       0       0       0       0       0       0
  5990 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5991 ;;      Totals:        18       0       0       0       0       0       0       0       0
  5992 ;;Total ram usage:       18 bytes
  5993 ;; Hardware stack levels used: 1
  5994 ;; Hardware stack levels required when called: 1
  5995 ;; This function calls:
  5996 ;;		___fldiv
  5997 ;;		___xxtofl
  5998 ;; This function is called by:
  5999 ;;		_main
  6000 ;; This function uses a non-reentrant model
  6001 ;;
  6002                           
  6003                           	psect	text25
  6004   0029C8                     __ptext25:
  6005                           	callstack 0
  6006   0029C8                     _Read_Captura:
  6007                           	callstack 29
  6008   0029C8                     
  6009                           ;main.c: 91:     uint16_t flanco_inicial=0;
  6010   0029C8  0E00               	movlw	0
  6011   0029CA  6E37               	movwf	(Read_Captura@flanco_inicial+1)^0,c
  6012   0029CC  0E00               	movlw	0
  6013   0029CE  6E36               	movwf	Read_Captura@flanco_inicial^0,c
  6014                           
  6015                           ;main.c: 92:     uint16_t flanco_final=0;
  6016   0029D0  0E00               	movlw	0
  6017   0029D2  6E39               	movwf	(Read_Captura@flanco_final+1)^0,c
  6018   0029D4  0E00               	movlw	0
  6019   0029D6  6E38               	movwf	Read_Captura@flanco_final^0,c
  6020   0029D8                     l70:
  6021   0029D8  A49E               	btfss	158,2,c	;volatile
  6022   0029DA  EFF1  F014         	goto	u3811
  6023   0029DE  EFF3  F014         	goto	u3810
  6024   0029E2                     u3811:
  6025   0029E2  EFEC  F014         	goto	l70
  6026   0029E6                     u3810:
  6027   0029E6                     
  6028                           ;main.c: 97:     PIR1bits.CCP1IF=0;
  6029   0029E6  949E               	bcf	158,2,c	;volatile
  6030                           
  6031                           ;main.c: 98:     flanco_inicial = CCPR1;
  6032   0029E8  CFBE F036          	movff	4030,Read_Captura@flanco_inicial	;volatile
  6033   0029EC  CFBF F037          	movff	4031,Read_Captura@flanco_inicial+1	;volatile
  6034   0029F0                     l73:
  6035   0029F0  A49E               	btfss	158,2,c	;volatile
  6036   0029F2  EFFD  F014         	goto	u3821
  6037   0029F6  EFFF  F014         	goto	u3820
  6038   0029FA                     u3821:
  6039   0029FA  EFF8  F014         	goto	l73
  6040   0029FE                     u3820:
  6041   0029FE                     
  6042                           ;main.c: 101:     PIR1bits.CCP1IF=0;
  6043   0029FE  949E               	bcf	158,2,c	;volatile
  6044                           
  6045                           ;main.c: 102:     flanco_final = CCPR1;
  6046   002A00  CFBE F038          	movff	4030,Read_Captura@flanco_final	;volatile
  6047   002A04  CFBF F039          	movff	4031,Read_Captura@flanco_final+1	;volatile
  6048   002A08                     
  6049                           ;main.c: 106:      periodo =(flanco_final - flanco_inicial)/(float)(16000000UL/4);
  6050   002A08  5036               	movf	Read_Captura@flanco_inicial^0,w,c
  6051   002A0A  5C38               	subwf	Read_Captura@flanco_final^0,w,c
  6052   002A0C  6E2C               	movwf	??_Read_Captura^0,c
  6053   002A0E  5037               	movf	(Read_Captura@flanco_inicial+1)^0,w,c
  6054   002A10  5839               	subwfb	(Read_Captura@flanco_final+1)^0,w,c
  6055   002A12  6E2D               	movwf	(??_Read_Captura+1)^0,c
  6056   002A14  C02C  F001         	movff	??_Read_Captura,___xxtofl@val
  6057   002A18  C02D  F002         	movff	??_Read_Captura+1,___xxtofl@val+1
  6058   002A1C  6A03               	clrf	(___xxtofl@val+2)^0,c
  6059   002A1E  6A04               	clrf	(___xxtofl@val+3)^0,c
  6060   002A20  0E00               	movlw	0
  6061   002A22  ECE1  F011         	call	___xxtofl
  6062   002A26  C001  F00F         	movff	?___xxtofl,___fldiv@b
  6063   002A2A  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  6064   002A2E  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  6065   002A32  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  6066   002A36  0E00               	movlw	0
  6067   002A38  6E13               	movwf	___fldiv@a^0,c
  6068   002A3A  0E24               	movlw	36
  6069   002A3C  6E14               	movwf	(___fldiv@a+1)^0,c
  6070   002A3E  0E74               	movlw	116
  6071   002A40  6E15               	movwf	(___fldiv@a+2)^0,c
  6072   002A42  0E4A               	movlw	74
  6073   002A44  6E16               	movwf	(___fldiv@a+3)^0,c
  6074   002A46  EC80  F00D         	call	___fldiv	;wreg free
  6075   002A4A  C00F  F032         	movff	?___fldiv,Read_Captura@periodo
  6076   002A4E  C010  F033         	movff	?___fldiv+1,Read_Captura@periodo+1
  6077   002A52  C011  F034         	movff	?___fldiv+2,Read_Captura@periodo+2
  6078   002A56  C012  F035         	movff	?___fldiv+3,Read_Captura@periodo+3
  6079                           
  6080                           ;main.c: 107:     frecuencia=1/periodo;
  6081   002A5A  0E00               	movlw	0
  6082   002A5C  6E0F               	movwf	___fldiv@b^0,c
  6083   002A5E  0E00               	movlw	0
  6084   002A60  6E10               	movwf	(___fldiv@b+1)^0,c
  6085   002A62  0E80               	movlw	128
  6086   002A64  6E11               	movwf	(___fldiv@b+2)^0,c
  6087   002A66  0E3F               	movlw	63
  6088   002A68  6E12               	movwf	(___fldiv@b+3)^0,c
  6089   002A6A  C032  F013         	movff	Read_Captura@periodo,___fldiv@a
  6090   002A6E  C033  F014         	movff	Read_Captura@periodo+1,___fldiv@a+1
  6091   002A72  C034  F015         	movff	Read_Captura@periodo+2,___fldiv@a+2
  6092   002A76  C035  F016         	movff	Read_Captura@periodo+3,___fldiv@a+3
  6093   002A7A  EC80  F00D         	call	___fldiv	;wreg free
  6094   002A7E  C00F  F02E         	movff	?___fldiv,Read_Captura@frecuencia
  6095   002A82  C010  F02F         	movff	?___fldiv+1,Read_Captura@frecuencia+1
  6096   002A86  C011  F030         	movff	?___fldiv+2,Read_Captura@frecuencia+2
  6097   002A8A  C012  F031         	movff	?___fldiv+3,Read_Captura@frecuencia+3
  6098   002A8E                     
  6099                           ;main.c: 108:     return frecuencia;
  6100   002A8E  C02E  F028         	movff	Read_Captura@frecuencia,?_Read_Captura
  6101   002A92  C02F  F029         	movff	Read_Captura@frecuencia+1,?_Read_Captura+1
  6102   002A96  C030  F02A         	movff	Read_Captura@frecuencia+2,?_Read_Captura+2
  6103   002A9A  C031  F02B         	movff	Read_Captura@frecuencia+3,?_Read_Captura+3
  6104   002A9E  0012               	return		;funcret
  6105   002AA0                     __end_of_Read_Captura:
  6106                           	callstack 0
  6107                           
  6108 ;; *************** function ___xxtofl *****************
  6109 ;; Defined at:
  6110 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  6111 ;; Parameters:    Size  Location     Type
  6112 ;;  sign            1    wreg     unsigned char 
  6113 ;;  val             4    0[COMRAM] long 
  6114 ;; Auto vars:     Size  Location     Type
  6115 ;;  sign            1    8[COMRAM] unsigned char 
  6116 ;;  arg             4   10[COMRAM] unsigned long 
  6117 ;;  exp             1    9[COMRAM] unsigned char 
  6118 ;; Return value:  Size  Location     Type
  6119 ;;                  4    0[COMRAM] unsigned char 
  6120 ;; Registers used:
  6121 ;;		wreg, status,2, status,0
  6122 ;; Tracked objects:
  6123 ;;		On entry : 0/0
  6124 ;;		On exit  : 0/0
  6125 ;;		Unchanged: 0/0
  6126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6127 ;;      Params:         4       0       0       0       0       0       0       0       0
  6128 ;;      Locals:         6       0       0       0       0       0       0       0       0
  6129 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6130 ;;      Totals:        14       0       0       0       0       0       0       0       0
  6131 ;;Total ram usage:       14 bytes
  6132 ;; Hardware stack levels used: 1
  6133 ;; This function calls:
  6134 ;;		Nothing
  6135 ;; This function is called by:
  6136 ;;		_Read_Captura
  6137 ;; This function uses a non-reentrant model
  6138 ;;
  6139                           
  6140                           	psect	text26
  6141   0023C2                     __ptext26:
  6142                           	callstack 0
  6143   0023C2                     ___xxtofl:
  6144                           	callstack 29
  6145                           
  6146                           ;incstack = 0
  6147                           ;___xxtofl@sign stored from wreg
  6148   0023C2  6E09               	movwf	___xxtofl@sign^0,c
  6149   0023C4  5009               	movf	___xxtofl@sign^0,w,c
  6150   0023C6  B4D8               	btfsc	status,2,c
  6151   0023C8  EFE8  F011         	goto	u3651
  6152   0023CC  EFEA  F011         	goto	u3650
  6153   0023D0                     u3651:
  6154   0023D0  EF0C  F012         	goto	l779
  6155   0023D4                     u3650:
  6156   0023D4  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  6157   0023D6  EFF1  F011         	goto	u3660
  6158   0023DA  EFEF  F011         	goto	u3661
  6159   0023DE                     u3661:
  6160   0023DE  EF0C  F012         	goto	l779
  6161   0023E2                     u3660:
  6162   0023E2  C001  F005         	movff	___xxtofl@val,??___xxtofl
  6163   0023E6  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  6164   0023EA  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  6165   0023EE  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  6166   0023F2  1E05               	comf	??___xxtofl^0,f,c
  6167   0023F4  1E06               	comf	(??___xxtofl+1)^0,f,c
  6168   0023F6  1E07               	comf	(??___xxtofl+2)^0,f,c
  6169   0023F8  1E08               	comf	(??___xxtofl+3)^0,f,c
  6170   0023FA  2A05               	incf	??___xxtofl^0,f,c
  6171   0023FC  0E00               	movlw	0
  6172   0023FE  2206               	addwfc	(??___xxtofl+1)^0,f,c
  6173   002400  2207               	addwfc	(??___xxtofl+2)^0,f,c
  6174   002402  2208               	addwfc	(??___xxtofl+3)^0,f,c
  6175   002404  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  6176   002408  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  6177   00240C  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  6178   002410  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  6179   002414  EF14  F012         	goto	l3443
  6180   002418                     l779:
  6181   002418  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  6182   00241C  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6183   002420  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6184   002424  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6185   002428                     l3443:
  6186   002428  5001               	movf	___xxtofl@val^0,w,c
  6187   00242A  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  6188   00242C  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  6189   00242E  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  6190   002430  A4D8               	btfss	status,2,c
  6191   002432  EF1D  F012         	goto	u3671
  6192   002436  EF1F  F012         	goto	u3670
  6193   00243A                     u3671:
  6194   00243A  EF29  F012         	goto	l3449
  6195   00243E                     u3670:
  6196   00243E  0E00               	movlw	0
  6197   002440  6E01               	movwf	?___xxtofl^0,c
  6198   002442  0E00               	movlw	0
  6199   002444  6E02               	movwf	(?___xxtofl+1)^0,c
  6200   002446  0E00               	movlw	0
  6201   002448  6E03               	movwf	(?___xxtofl+2)^0,c
  6202   00244A  0E00               	movlw	0
  6203   00244C  6E04               	movwf	(?___xxtofl+3)^0,c
  6204   00244E  EFBA  F012         	goto	l782
  6205   002452                     l3449:
  6206   002452  0E96               	movlw	150
  6207   002454  6E0A               	movwf	___xxtofl@exp^0,c
  6208   002456  EF33  F012         	goto	l3453
  6209   00245A                     l3451:
  6210   00245A  2A0A               	incf	___xxtofl@exp^0,f,c
  6211   00245C  90D8               	bcf	status,0,c
  6212   00245E  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  6213   002460  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  6214   002462  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  6215   002464  320B               	rrcf	___xxtofl@arg^0,f,c
  6216   002466                     l3453:
  6217   002466  0E00               	movlw	0
  6218   002468  140B               	andwf	___xxtofl@arg^0,w,c
  6219   00246A  6E05               	movwf	??___xxtofl^0,c
  6220   00246C  0E00               	movlw	0
  6221   00246E  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  6222   002470  6E06               	movwf	(??___xxtofl+1)^0,c
  6223   002472  0E00               	movlw	0
  6224   002474  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  6225   002476  6E07               	movwf	(??___xxtofl+2)^0,c
  6226   002478  0EFE               	movlw	254
  6227   00247A  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  6228   00247C  6E08               	movwf	(??___xxtofl+3)^0,c
  6229   00247E  5005               	movf	??___xxtofl^0,w,c
  6230   002480  1006               	iorwf	(??___xxtofl+1)^0,w,c
  6231   002482  1007               	iorwf	(??___xxtofl+2)^0,w,c
  6232   002484  1008               	iorwf	(??___xxtofl+3)^0,w,c
  6233   002486  A4D8               	btfss	status,2,c
  6234   002488  EF48  F012         	goto	u3681
  6235   00248C  EF4A  F012         	goto	u3680
  6236   002490                     u3681:
  6237   002490  EF2D  F012         	goto	l3451
  6238   002494                     u3680:
  6239   002494  EF58  F012         	goto	l786
  6240   002498                     l3455:
  6241   002498  2A0A               	incf	___xxtofl@exp^0,f,c
  6242   00249A  0E01               	movlw	1
  6243   00249C  260B               	addwf	___xxtofl@arg^0,f,c
  6244   00249E  0E00               	movlw	0
  6245   0024A0  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  6246   0024A2  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  6247   0024A4  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  6248   0024A6  90D8               	bcf	status,0,c
  6249   0024A8  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  6250   0024AA  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  6251   0024AC  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  6252   0024AE  320B               	rrcf	___xxtofl@arg^0,f,c
  6253   0024B0                     l786:
  6254   0024B0  0E00               	movlw	0
  6255   0024B2  140B               	andwf	___xxtofl@arg^0,w,c
  6256   0024B4  6E05               	movwf	??___xxtofl^0,c
  6257   0024B6  0E00               	movlw	0
  6258   0024B8  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  6259   0024BA  6E06               	movwf	(??___xxtofl+1)^0,c
  6260   0024BC  0E00               	movlw	0
  6261   0024BE  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  6262   0024C0  6E07               	movwf	(??___xxtofl+2)^0,c
  6263   0024C2  0EFF               	movlw	255
  6264   0024C4  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  6265   0024C6  6E08               	movwf	(??___xxtofl+3)^0,c
  6266   0024C8  5005               	movf	??___xxtofl^0,w,c
  6267   0024CA  1006               	iorwf	(??___xxtofl+1)^0,w,c
  6268   0024CC  1007               	iorwf	(??___xxtofl+2)^0,w,c
  6269   0024CE  1008               	iorwf	(??___xxtofl+3)^0,w,c
  6270   0024D0  A4D8               	btfss	status,2,c
  6271   0024D2  EF6D  F012         	goto	u3691
  6272   0024D6  EF6F  F012         	goto	u3690
  6273   0024DA                     u3691:
  6274   0024DA  EF4C  F012         	goto	l3455
  6275   0024DE                     u3690:
  6276   0024DE  EF77  F012         	goto	l3463
  6277   0024E2                     l3461:
  6278   0024E2  060A               	decf	___xxtofl@exp^0,f,c
  6279   0024E4  90D8               	bcf	status,0,c
  6280   0024E6  360B               	rlcf	___xxtofl@arg^0,f,c
  6281   0024E8  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  6282   0024EA  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  6283   0024EC  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  6284   0024EE                     l3463:
  6285   0024EE  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  6286   0024F0  EF7C  F012         	goto	u3701
  6287   0024F4  EF7E  F012         	goto	u3700
  6288   0024F8                     u3701:
  6289   0024F8  EF86  F012         	goto	l793
  6290   0024FC                     u3700:
  6291   0024FC  0E02               	movlw	2
  6292   0024FE  600A               	cpfslt	___xxtofl@exp^0,c
  6293   002500  EF84  F012         	goto	u3711
  6294   002504  EF86  F012         	goto	u3710
  6295   002508                     u3711:
  6296   002508  EF71  F012         	goto	l3461
  6297   00250C                     u3710:
  6298   00250C                     l793:
  6299   00250C  B00A               	btfsc	___xxtofl@exp^0,0,c
  6300   00250E  EF8B  F012         	goto	u3721
  6301   002512  EF8D  F012         	goto	u3720
  6302   002516                     u3721:
  6303   002516  EF8E  F012         	goto	l3469
  6304   00251A                     u3720:
  6305   00251A  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  6306   00251C                     l3469:
  6307   00251C  90D8               	bcf	status,0,c
  6308   00251E  320A               	rrcf	___xxtofl@exp^0,f,c
  6309   002520  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  6310   002524  6A06               	clrf	(??___xxtofl+1)^0,c
  6311   002526  6A07               	clrf	(??___xxtofl+2)^0,c
  6312   002528  6A08               	clrf	(??___xxtofl+3)^0,c
  6313   00252A  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  6314   00252E  6A07               	clrf	(??___xxtofl+2)^0,c
  6315   002530  6A06               	clrf	(??___xxtofl+1)^0,c
  6316   002532  6A05               	clrf	??___xxtofl^0,c
  6317   002534  5005               	movf	??___xxtofl^0,w,c
  6318   002536  120B               	iorwf	___xxtofl@arg^0,f,c
  6319   002538  5006               	movf	(??___xxtofl+1)^0,w,c
  6320   00253A  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  6321   00253C  5007               	movf	(??___xxtofl+2)^0,w,c
  6322   00253E  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  6323   002540  5008               	movf	(??___xxtofl+3)^0,w,c
  6324   002542  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  6325   002544  5009               	movf	___xxtofl@sign^0,w,c
  6326   002546  B4D8               	btfsc	status,2,c
  6327   002548  EFA8  F012         	goto	u3731
  6328   00254C  EFAA  F012         	goto	u3730
  6329   002550                     u3731:
  6330   002550  EFB2  F012         	goto	l3479
  6331   002554                     u3730:
  6332   002554  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  6333   002556  EFB1  F012         	goto	u3740
  6334   00255A  EFAF  F012         	goto	u3741
  6335   00255E                     u3741:
  6336   00255E  EFB2  F012         	goto	l3479
  6337   002562                     u3740:
  6338   002562  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  6339   002564                     l3479:
  6340   002564  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  6341   002568  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  6342   00256C  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  6343   002570  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  6344   002574                     l782:
  6345   002574  0012               	return		;funcret
  6346   002576                     __end_of___xxtofl:
  6347                           	callstack 0
  6348                           
  6349 ;; *************** function ___fldiv *****************
  6350 ;; Defined at:
  6351 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  6352 ;; Parameters:    Size  Location     Type
  6353 ;;  b               4   14[COMRAM] unsigned char 
  6354 ;;  a               4   18[COMRAM] unsigned char 
  6355 ;; Auto vars:     Size  Location     Type
  6356 ;;  grs             4   33[COMRAM] unsigned long 
  6357 ;;  rem             4   26[COMRAM] unsigned long 
  6358 ;;  new_exp         2   31[COMRAM] short 
  6359 ;;  aexp            1   38[COMRAM] unsigned char 
  6360 ;;  bexp            1   37[COMRAM] unsigned char 
  6361 ;;  sign            1   30[COMRAM] unsigned char 
  6362 ;; Return value:  Size  Location     Type
  6363 ;;                  4   14[COMRAM] unsigned char 
  6364 ;; Registers used:
  6365 ;;		wreg, status,2, status,0
  6366 ;; Tracked objects:
  6367 ;;		On entry : 0/0
  6368 ;;		On exit  : 0/0
  6369 ;;		Unchanged: 0/0
  6370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6371 ;;      Params:         8       0       0       0       0       0       0       0       0
  6372 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6373 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6374 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6375 ;;Total ram usage:       25 bytes
  6376 ;; Hardware stack levels used: 1
  6377 ;; This function calls:
  6378 ;;		Nothing
  6379 ;; This function is called by:
  6380 ;;		_Read_Captura
  6381 ;;		_efgtoa
  6382 ;; This function uses a non-reentrant model
  6383 ;;
  6384                           
  6385                           	psect	text27
  6386   001B00                     __ptext27:
  6387                           	callstack 0
  6388   001B00                     ___fldiv:
  6389                           	callstack 26
  6390   001B00  5012               	movf	(___fldiv@b+3)^0,w,c
  6391   001B02  0B80               	andlw	128
  6392   001B04  6E1F               	movwf	___fldiv@sign^0,c
  6393   001B06  5012               	movf	(___fldiv@b+3)^0,w,c
  6394   001B08  2412               	addwf	(___fldiv@b+3)^0,w,c
  6395   001B0A  6E26               	movwf	___fldiv@bexp^0,c
  6396   001B0C  AE11               	btfss	(___fldiv@b+2)^0,7,c
  6397   001B0E  EF8B  F00D         	goto	u2361
  6398   001B12  EF8D  F00D         	goto	u2360
  6399   001B16                     u2361:
  6400   001B16  EF8E  F00D         	goto	l2597
  6401   001B1A                     u2360:
  6402   001B1A  8026               	bsf	___fldiv@bexp^0,0,c
  6403   001B1C                     l2597:
  6404   001B1C  5026               	movf	___fldiv@bexp^0,w,c
  6405   001B1E  B4D8               	btfsc	status,2,c
  6406   001B20  EF94  F00D         	goto	u2371
  6407   001B24  EF96  F00D         	goto	u2370
  6408   001B28                     u2371:
  6409   001B28  EFAB  F00D         	goto	l2607
  6410   001B2C                     u2370:
  6411   001B2C  2826               	incf	___fldiv@bexp^0,w,c
  6412   001B2E  A4D8               	btfss	status,2,c
  6413   001B30  EF9C  F00D         	goto	u2381
  6414   001B34  EF9E  F00D         	goto	u2380
  6415   001B38                     u2381:
  6416   001B38  EFA6  F00D         	goto	l2603
  6417   001B3C                     u2380:
  6418   001B3C  0E00               	movlw	0
  6419   001B3E  6E0F               	movwf	___fldiv@b^0,c
  6420   001B40  0E00               	movlw	0
  6421   001B42  6E10               	movwf	(___fldiv@b+1)^0,c
  6422   001B44  0E00               	movlw	0
  6423   001B46  6E11               	movwf	(___fldiv@b+2)^0,c
  6424   001B48  0E00               	movlw	0
  6425   001B4A  6E12               	movwf	(___fldiv@b+3)^0,c
  6426   001B4C                     l2603:
  6427   001B4C  8E11               	bsf	(___fldiv@b+2)^0,7,c
  6428   001B4E  0E00               	movlw	0
  6429   001B50  6E12               	movwf	(___fldiv@b+3)^0,c
  6430   001B52  EFB3  F00D         	goto	l2609
  6431   001B56                     l2607:
  6432   001B56  0E00               	movlw	0
  6433   001B58  6E0F               	movwf	___fldiv@b^0,c
  6434   001B5A  0E00               	movlw	0
  6435   001B5C  6E10               	movwf	(___fldiv@b+1)^0,c
  6436   001B5E  0E00               	movlw	0
  6437   001B60  6E11               	movwf	(___fldiv@b+2)^0,c
  6438   001B62  0E00               	movlw	0
  6439   001B64  6E12               	movwf	(___fldiv@b+3)^0,c
  6440   001B66                     l2609:
  6441   001B66  5016               	movf	(___fldiv@a+3)^0,w,c
  6442   001B68  0B80               	andlw	128
  6443   001B6A  1A1F               	xorwf	___fldiv@sign^0,f,c
  6444   001B6C  5016               	movf	(___fldiv@a+3)^0,w,c
  6445   001B6E  2416               	addwf	(___fldiv@a+3)^0,w,c
  6446   001B70  6E27               	movwf	___fldiv@aexp^0,c
  6447   001B72  AE15               	btfss	(___fldiv@a+2)^0,7,c
  6448   001B74  EFBE  F00D         	goto	u2391
  6449   001B78  EFC0  F00D         	goto	u2390
  6450   001B7C                     u2391:
  6451   001B7C  EFC1  F00D         	goto	l2617
  6452   001B80                     u2390:
  6453   001B80  8027               	bsf	___fldiv@aexp^0,0,c
  6454   001B82                     l2617:
  6455   001B82  5027               	movf	___fldiv@aexp^0,w,c
  6456   001B84  B4D8               	btfsc	status,2,c
  6457   001B86  EFC7  F00D         	goto	u2401
  6458   001B8A  EFC9  F00D         	goto	u2400
  6459   001B8E                     u2401:
  6460   001B8E  EFDE  F00D         	goto	l2627
  6461   001B92                     u2400:
  6462   001B92  2827               	incf	___fldiv@aexp^0,w,c
  6463   001B94  A4D8               	btfss	status,2,c
  6464   001B96  EFCF  F00D         	goto	u2411
  6465   001B9A  EFD1  F00D         	goto	u2410
  6466   001B9E                     u2411:
  6467   001B9E  EFD9  F00D         	goto	l2623
  6468   001BA2                     u2410:
  6469   001BA2  0E00               	movlw	0
  6470   001BA4  6E13               	movwf	___fldiv@a^0,c
  6471   001BA6  0E00               	movlw	0
  6472   001BA8  6E14               	movwf	(___fldiv@a+1)^0,c
  6473   001BAA  0E00               	movlw	0
  6474   001BAC  6E15               	movwf	(___fldiv@a+2)^0,c
  6475   001BAE  0E00               	movlw	0
  6476   001BB0  6E16               	movwf	(___fldiv@a+3)^0,c
  6477   001BB2                     l2623:
  6478   001BB2  8E15               	bsf	(___fldiv@a+2)^0,7,c
  6479   001BB4  0E00               	movlw	0
  6480   001BB6  6E16               	movwf	(___fldiv@a+3)^0,c
  6481   001BB8  EFE6  F00D         	goto	l2629
  6482   001BBC                     l2627:
  6483   001BBC  0E00               	movlw	0
  6484   001BBE  6E13               	movwf	___fldiv@a^0,c
  6485   001BC0  0E00               	movlw	0
  6486   001BC2  6E14               	movwf	(___fldiv@a+1)^0,c
  6487   001BC4  0E00               	movlw	0
  6488   001BC6  6E15               	movwf	(___fldiv@a+2)^0,c
  6489   001BC8  0E00               	movlw	0
  6490   001BCA  6E16               	movwf	(___fldiv@a+3)^0,c
  6491   001BCC                     l2629:
  6492   001BCC  5013               	movf	___fldiv@a^0,w,c
  6493   001BCE  1014               	iorwf	(___fldiv@a+1)^0,w,c
  6494   001BD0  1015               	iorwf	(___fldiv@a+2)^0,w,c
  6495   001BD2  1016               	iorwf	(___fldiv@a+3)^0,w,c
  6496   001BD4  A4D8               	btfss	status,2,c
  6497   001BD6  EFEF  F00D         	goto	u2421
  6498   001BDA  EFF1  F00D         	goto	u2420
  6499   001BDE                     u2421:
  6500   001BDE  EF09  F00E         	goto	l2641
  6501   001BE2                     u2420:
  6502   001BE2  0E00               	movlw	0
  6503   001BE4  6E0F               	movwf	___fldiv@b^0,c
  6504   001BE6  0E00               	movlw	0
  6505   001BE8  6E10               	movwf	(___fldiv@b+1)^0,c
  6506   001BEA  0E00               	movlw	0
  6507   001BEC  6E11               	movwf	(___fldiv@b+2)^0,c
  6508   001BEE  0E00               	movlw	0
  6509   001BF0  6E12               	movwf	(___fldiv@b+3)^0,c
  6510   001BF2  0E80               	movlw	128
  6511   001BF4  1211               	iorwf	(___fldiv@b+2)^0,f,c
  6512   001BF6  0E7F               	movlw	127
  6513   001BF8  1212               	iorwf	(___fldiv@b+3)^0,f,c
  6514   001BFA                     l2635:
  6515   001BFA  501F               	movf	___fldiv@sign^0,w,c
  6516   001BFC  1212               	iorwf	(___fldiv@b+3)^0,f,c
  6517   001BFE  C00F  F00F         	movff	___fldiv@b,?___fldiv
  6518   001C02  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
  6519   001C06  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
  6520   001C0A  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
  6521   001C0E  EF4C  F00F         	goto	l706
  6522   001C12                     l2641:
  6523   001C12  5026               	movf	___fldiv@bexp^0,w,c
  6524   001C14  A4D8               	btfss	status,2,c
  6525   001C16  EF0F  F00E         	goto	u2431
  6526   001C1A  EF11  F00E         	goto	u2430
  6527   001C1E                     u2431:
  6528   001C1E  EF1B  F00E         	goto	l2649
  6529   001C22                     u2430:
  6530   001C22  0E00               	movlw	0
  6531   001C24  6E0F               	movwf	?___fldiv^0,c
  6532   001C26  0E00               	movlw	0
  6533   001C28  6E10               	movwf	(?___fldiv+1)^0,c
  6534   001C2A  0E00               	movlw	0
  6535   001C2C  6E11               	movwf	(?___fldiv+2)^0,c
  6536   001C2E  0E00               	movlw	0
  6537   001C30  6E12               	movwf	(?___fldiv+3)^0,c
  6538   001C32  EF4C  F00F         	goto	l706
  6539   001C36                     l2649:
  6540   001C36  5027               	movf	___fldiv@aexp^0,w,c
  6541   001C38  C026  F017         	movff	___fldiv@bexp,??___fldiv
  6542   001C3C  6A18               	clrf	(??___fldiv+1)^0,c
  6543   001C3E  5E17               	subwf	??___fldiv^0,f,c
  6544   001C40  0E00               	movlw	0
  6545   001C42  5A18               	subwfb	(??___fldiv+1)^0,f,c
  6546   001C44  0E7F               	movlw	127
  6547   001C46  2417               	addwf	??___fldiv^0,w,c
  6548   001C48  6E20               	movwf	___fldiv@new_exp^0,c
  6549   001C4A  0E00               	movlw	0
  6550   001C4C  2018               	addwfc	(??___fldiv+1)^0,w,c
  6551   001C4E  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  6552   001C50  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
  6553   001C54  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
  6554   001C58  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
  6555   001C5C  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
  6556   001C60  0E00               	movlw	0
  6557   001C62  6E0F               	movwf	___fldiv@b^0,c
  6558   001C64  0E00               	movlw	0
  6559   001C66  6E10               	movwf	(___fldiv@b+1)^0,c
  6560   001C68  0E00               	movlw	0
  6561   001C6A  6E11               	movwf	(___fldiv@b+2)^0,c
  6562   001C6C  0E00               	movlw	0
  6563   001C6E  6E12               	movwf	(___fldiv@b+3)^0,c
  6564   001C70  0E00               	movlw	0
  6565   001C72  6E22               	movwf	___fldiv@grs^0,c
  6566   001C74  0E00               	movlw	0
  6567   001C76  6E23               	movwf	(___fldiv@grs+1)^0,c
  6568   001C78  0E00               	movlw	0
  6569   001C7A  6E24               	movwf	(___fldiv@grs+2)^0,c
  6570   001C7C  0E00               	movlw	0
  6571   001C7E  6E25               	movwf	(___fldiv@grs+3)^0,c
  6572   001C80  0E00               	movlw	0
  6573   001C82  6E27               	movwf	___fldiv@aexp^0,c
  6574   001C84  EF7C  F00E         	goto	l708
  6575   001C88                     l2659:
  6576   001C88  5027               	movf	___fldiv@aexp^0,w,c
  6577   001C8A  B4D8               	btfsc	status,2,c
  6578   001C8C  EF4A  F00E         	goto	u2441
  6579   001C90  EF4C  F00E         	goto	u2440
  6580   001C94                     u2441:
  6581   001C94  EF63  F00E         	goto	l2667
  6582   001C98                     u2440:
  6583   001C98  90D8               	bcf	status,0,c
  6584   001C9A  361B               	rlcf	___fldiv@rem^0,f,c
  6585   001C9C  361C               	rlcf	(___fldiv@rem+1)^0,f,c
  6586   001C9E  361D               	rlcf	(___fldiv@rem+2)^0,f,c
  6587   001CA0  361E               	rlcf	(___fldiv@rem+3)^0,f,c
  6588   001CA2  90D8               	bcf	status,0,c
  6589   001CA4  360F               	rlcf	___fldiv@b^0,f,c
  6590   001CA6  3610               	rlcf	(___fldiv@b+1)^0,f,c
  6591   001CA8  3611               	rlcf	(___fldiv@b+2)^0,f,c
  6592   001CAA  3612               	rlcf	(___fldiv@b+3)^0,f,c
  6593   001CAC  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  6594   001CAE  EF5B  F00E         	goto	u2451
  6595   001CB2  EF5D  F00E         	goto	u2450
  6596   001CB6                     u2451:
  6597   001CB6  EF5E  F00E         	goto	l711
  6598   001CBA                     u2450:
  6599   001CBA  800F               	bsf	___fldiv@b^0,0,c
  6600   001CBC                     l711:
  6601   001CBC  90D8               	bcf	status,0,c
  6602   001CBE  3622               	rlcf	___fldiv@grs^0,f,c
  6603   001CC0  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  6604   001CC2  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  6605   001CC4  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  6606   001CC6                     l2667:
  6607   001CC6  5013               	movf	___fldiv@a^0,w,c
  6608   001CC8  5C1B               	subwf	___fldiv@rem^0,w,c
  6609   001CCA  5014               	movf	(___fldiv@a+1)^0,w,c
  6610   001CCC  581C               	subwfb	(___fldiv@rem+1)^0,w,c
  6611   001CCE  5015               	movf	(___fldiv@a+2)^0,w,c
  6612   001CD0  581D               	subwfb	(___fldiv@rem+2)^0,w,c
  6613   001CD2  5016               	movf	(___fldiv@a+3)^0,w,c
  6614   001CD4  581E               	subwfb	(___fldiv@rem+3)^0,w,c
  6615   001CD6  A0D8               	btfss	status,0,c
  6616   001CD8  EF70  F00E         	goto	u2461
  6617   001CDC  EF72  F00E         	goto	u2460
  6618   001CE0                     u2461:
  6619   001CE0  EF7B  F00E         	goto	l2673
  6620   001CE4                     u2460:
  6621   001CE4  8C25               	bsf	(___fldiv@grs+3)^0,6,c
  6622   001CE6  5013               	movf	___fldiv@a^0,w,c
  6623   001CE8  5E1B               	subwf	___fldiv@rem^0,f,c
  6624   001CEA  5014               	movf	(___fldiv@a+1)^0,w,c
  6625   001CEC  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
  6626   001CEE  5015               	movf	(___fldiv@a+2)^0,w,c
  6627   001CF0  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
  6628   001CF2  5016               	movf	(___fldiv@a+3)^0,w,c
  6629   001CF4  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
  6630   001CF6                     l2673:
  6631   001CF6  2A27               	incf	___fldiv@aexp^0,f,c
  6632   001CF8                     l708:
  6633   001CF8  0E19               	movlw	25
  6634   001CFA  6427               	cpfsgt	___fldiv@aexp^0,c
  6635   001CFC  EF82  F00E         	goto	u2471
  6636   001D00  EF84  F00E         	goto	u2470
  6637   001D04                     u2471:
  6638   001D04  EF44  F00E         	goto	l2659
  6639   001D08                     u2470:
  6640   001D08  501B               	movf	___fldiv@rem^0,w,c
  6641   001D0A  101C               	iorwf	(___fldiv@rem+1)^0,w,c
  6642   001D0C  101D               	iorwf	(___fldiv@rem+2)^0,w,c
  6643   001D0E  101E               	iorwf	(___fldiv@rem+3)^0,w,c
  6644   001D10  B4D8               	btfsc	status,2,c
  6645   001D12  EF8D  F00E         	goto	u2481
  6646   001D16  EF8F  F00E         	goto	u2480
  6647   001D1A                     u2481:
  6648   001D1A  EFA7  F00E         	goto	l2685
  6649   001D1E                     u2480:
  6650   001D1E  8022               	bsf	___fldiv@grs^0,0,c
  6651   001D20  EFA7  F00E         	goto	l2685
  6652   001D24                     l2679:
  6653   001D24  90D8               	bcf	status,0,c
  6654   001D26  360F               	rlcf	___fldiv@b^0,f,c
  6655   001D28  3610               	rlcf	(___fldiv@b+1)^0,f,c
  6656   001D2A  3611               	rlcf	(___fldiv@b+2)^0,f,c
  6657   001D2C  3612               	rlcf	(___fldiv@b+3)^0,f,c
  6658   001D2E  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  6659   001D30  EF9C  F00E         	goto	u2491
  6660   001D34  EF9E  F00E         	goto	u2490
  6661   001D38                     u2491:
  6662   001D38  EF9F  F00E         	goto	l717
  6663   001D3C                     u2490:
  6664   001D3C  800F               	bsf	___fldiv@b^0,0,c
  6665   001D3E                     l717:
  6666   001D3E  90D8               	bcf	status,0,c
  6667   001D40  3622               	rlcf	___fldiv@grs^0,f,c
  6668   001D42  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  6669   001D44  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  6670   001D46  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  6671   001D48  0620               	decf	___fldiv@new_exp^0,f,c
  6672   001D4A  A0D8               	btfss	status,0,c
  6673   001D4C  0621               	decf	(___fldiv@new_exp+1)^0,f,c
  6674   001D4E                     l2685:
  6675   001D4E  AE11               	btfss	(___fldiv@b+2)^0,7,c
  6676   001D50  EFAC  F00E         	goto	u2501
  6677   001D54  EFAE  F00E         	goto	u2500
  6678   001D58                     u2501:
  6679   001D58  EF92  F00E         	goto	l2679
  6680   001D5C                     u2500:
  6681   001D5C  0E00               	movlw	0
  6682   001D5E  6E27               	movwf	___fldiv@aexp^0,c
  6683   001D60  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  6684   001D62  EFB5  F00E         	goto	u2511
  6685   001D66  EFB7  F00E         	goto	u2510
  6686   001D6A                     u2511:
  6687   001D6A  EFDB  F00E         	goto	l719
  6688   001D6E                     u2510:
  6689   001D6E  0EFF               	movlw	255
  6690   001D70  1422               	andwf	___fldiv@grs^0,w,c
  6691   001D72  6E17               	movwf	??___fldiv^0,c
  6692   001D74  0EFF               	movlw	255
  6693   001D76  1423               	andwf	(___fldiv@grs+1)^0,w,c
  6694   001D78  6E18               	movwf	(??___fldiv+1)^0,c
  6695   001D7A  0EFF               	movlw	255
  6696   001D7C  1424               	andwf	(___fldiv@grs+2)^0,w,c
  6697   001D7E  6E19               	movwf	(??___fldiv+2)^0,c
  6698   001D80  0E7F               	movlw	127
  6699   001D82  1425               	andwf	(___fldiv@grs+3)^0,w,c
  6700   001D84  6E1A               	movwf	(??___fldiv+3)^0,c
  6701   001D86  5017               	movf	??___fldiv^0,w,c
  6702   001D88  1018               	iorwf	(??___fldiv+1)^0,w,c
  6703   001D8A  1019               	iorwf	(??___fldiv+2)^0,w,c
  6704   001D8C  101A               	iorwf	(??___fldiv+3)^0,w,c
  6705   001D8E  B4D8               	btfsc	status,2,c
  6706   001D90  EFCC  F00E         	goto	u2521
  6707   001D94  EFCE  F00E         	goto	u2520
  6708   001D98                     u2521:
  6709   001D98  EFD2  F00E         	goto	l720
  6710   001D9C                     u2520:
  6711   001D9C                     l2693:
  6712   001D9C  0E01               	movlw	1
  6713   001D9E  6E27               	movwf	___fldiv@aexp^0,c
  6714   001DA0  EFDB  F00E         	goto	l719
  6715   001DA4                     l720:
  6716   001DA4  A00F               	btfss	___fldiv@b^0,0,c
  6717   001DA6  EFD7  F00E         	goto	u2531
  6718   001DAA  EFD9  F00E         	goto	u2530
  6719   001DAE                     u2531:
  6720   001DAE  EFDB  F00E         	goto	l719
  6721   001DB2                     u2530:
  6722   001DB2  EFCE  F00E         	goto	l2693
  6723   001DB6                     l719:
  6724   001DB6  5027               	movf	___fldiv@aexp^0,w,c
  6725   001DB8  B4D8               	btfsc	status,2,c
  6726   001DBA  EFE1  F00E         	goto	u2541
  6727   001DBE  EFE3  F00E         	goto	u2540
  6728   001DC2                     u2541:
  6729   001DC2  EF07  F00F         	goto	l2705
  6730   001DC6                     u2540:
  6731   001DC6  0E01               	movlw	1
  6732   001DC8  260F               	addwf	___fldiv@b^0,f,c
  6733   001DCA  0E00               	movlw	0
  6734   001DCC  2210               	addwfc	(___fldiv@b+1)^0,f,c
  6735   001DCE  2211               	addwfc	(___fldiv@b+2)^0,f,c
  6736   001DD0  2212               	addwfc	(___fldiv@b+3)^0,f,c
  6737   001DD2  A012               	btfss	(___fldiv@b+3)^0,0,c
  6738   001DD4  EFEE  F00E         	goto	u2551
  6739   001DD8  EFF0  F00E         	goto	u2550
  6740   001DDC                     u2551:
  6741   001DDC  EF07  F00F         	goto	l2705
  6742   001DE0                     u2550:
  6743   001DE0  C00F  F017         	movff	___fldiv@b,??___fldiv
  6744   001DE4  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
  6745   001DE8  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
  6746   001DEC  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
  6747   001DF0  341A               	rlcf	(??___fldiv+3)^0,w,c
  6748   001DF2  321A               	rrcf	(??___fldiv+3)^0,f,c
  6749   001DF4  3219               	rrcf	(??___fldiv+2)^0,f,c
  6750   001DF6  3218               	rrcf	(??___fldiv+1)^0,f,c
  6751   001DF8  3217               	rrcf	??___fldiv^0,f,c
  6752   001DFA  C017  F00F         	movff	??___fldiv,___fldiv@b
  6753   001DFE  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
  6754   001E02  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
  6755   001E06  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
  6756   001E0A  4A20               	infsnz	___fldiv@new_exp^0,f,c
  6757   001E0C  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
  6758   001E0E                     l2705:
  6759   001E0E  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6760   001E10  EF12  F00F         	goto	u2561
  6761   001E14  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  6762   001E16  E108               	bnz	u2560
  6763   001E18  2820               	incf	___fldiv@new_exp^0,w,c
  6764   001E1A  A0D8               	btfss	status,0,c
  6765   001E1C  EF12  F00F         	goto	u2561
  6766   001E20  EF14  F00F         	goto	u2560
  6767   001E24                     u2561:
  6768   001E24  EF1F  F00F         	goto	l2709
  6769   001E28                     u2560:
  6770   001E28  0E00               	movlw	0
  6771   001E2A  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  6772   001E2C  6820               	setf	___fldiv@new_exp^0,c
  6773   001E2E  0E00               	movlw	0
  6774   001E30  6E0F               	movwf	___fldiv@b^0,c
  6775   001E32  0E00               	movlw	0
  6776   001E34  6E10               	movwf	(___fldiv@b+1)^0,c
  6777   001E36  0E00               	movlw	0
  6778   001E38  6E11               	movwf	(___fldiv@b+2)^0,c
  6779   001E3A  0E00               	movlw	0
  6780   001E3C  6E12               	movwf	(___fldiv@b+3)^0,c
  6781   001E3E                     l2709:
  6782   001E3E  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6783   001E40  EF2C  F00F         	goto	u2570
  6784   001E44  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  6785   001E46  E106               	bnz	u2571
  6786   001E48  0420               	decf	___fldiv@new_exp^0,w,c
  6787   001E4A  B0D8               	btfsc	status,0,c
  6788   001E4C  EF2A  F00F         	goto	u2571
  6789   001E50  EF2C  F00F         	goto	u2570
  6790   001E54                     u2571:
  6791   001E54  EF3A  F00F         	goto	l2713
  6792   001E58                     u2570:
  6793   001E58  0E00               	movlw	0
  6794   001E5A  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  6795   001E5C  0E00               	movlw	0
  6796   001E5E  6E20               	movwf	___fldiv@new_exp^0,c
  6797   001E60  0E00               	movlw	0
  6798   001E62  6E0F               	movwf	___fldiv@b^0,c
  6799   001E64  0E00               	movlw	0
  6800   001E66  6E10               	movwf	(___fldiv@b+1)^0,c
  6801   001E68  0E00               	movlw	0
  6802   001E6A  6E11               	movwf	(___fldiv@b+2)^0,c
  6803   001E6C  0E00               	movlw	0
  6804   001E6E  6E12               	movwf	(___fldiv@b+3)^0,c
  6805   001E70  0E00               	movlw	0
  6806   001E72  6E1F               	movwf	___fldiv@sign^0,c
  6807   001E74                     l2713:
  6808   001E74  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
  6809   001E78  A026               	btfss	___fldiv@bexp^0,0,c
  6810   001E7A  EF41  F00F         	goto	u2581
  6811   001E7E  EF43  F00F         	goto	u2580
  6812   001E82                     u2581:
  6813   001E82  EF46  F00F         	goto	l2719
  6814   001E86                     u2580:
  6815   001E86  8E11               	bsf	(___fldiv@b+2)^0,7,c
  6816   001E88  EF47  F00F         	goto	l2721
  6817   001E8C                     l2719:
  6818   001E8C  9E11               	bcf	(___fldiv@b+2)^0,7,c
  6819   001E8E                     l2721:
  6820   001E8E  90D8               	bcf	status,0,c
  6821   001E90  3026               	rrcf	___fldiv@bexp^0,w,c
  6822   001E92  6E12               	movwf	(___fldiv@b+3)^0,c
  6823   001E94  EFFD  F00D         	goto	l2635
  6824   001E98                     l706:
  6825   001E98  0012               	return		;funcret
  6826   001E9A                     __end_of___fldiv:
  6827                           	callstack 0
  6828                           
  6829 ;; *************** function _Lcd_Write_String *****************
  6830 ;; Defined at:
  6831 ;;		line 97 in file "lcd.c"
  6832 ;; Parameters:    Size  Location     Type
  6833 ;;  a               2    4[COMRAM] PTR unsigned char 
  6834 ;;		 -> str_buffer(20), STR_1(12), 
  6835 ;; Auto vars:     Size  Location     Type
  6836 ;;  i               2    8[COMRAM] int 
  6837 ;; Return value:  Size  Location     Type
  6838 ;;                  1    wreg      void 
  6839 ;; Registers used:
  6840 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6841 ;; Tracked objects:
  6842 ;;		On entry : 0/0
  6843 ;;		On exit  : 0/0
  6844 ;;		Unchanged: 0/0
  6845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6846 ;;      Params:         2       0       0       0       0       0       0       0       0
  6847 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6848 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6849 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6850 ;;Total ram usage:        6 bytes
  6851 ;; Hardware stack levels used: 1
  6852 ;; Hardware stack levels required when called: 2
  6853 ;; This function calls:
  6854 ;;		_Lcd_Write_Char
  6855 ;; This function is called by:
  6856 ;;		_main
  6857 ;; This function uses a non-reentrant model
  6858 ;;
  6859                           
  6860                           	psect	text28
  6861   002CAE                     __ptext28:
  6862                           	callstack 0
  6863   002CAE                     _Lcd_Write_String:
  6864                           	callstack 28
  6865   002CAE                     
  6866                           ;lcd.c: 97: void Lcd_Write_String(unsigned char *a);lcd.c: 98: {;lcd.c: 99:  int i;;lcd.
      +                          c: 100:  for(i=0;a[i]!='\0';i++)
  6867   002CAE  0E00               	movlw	0
  6868   002CB0  6E0A               	movwf	(Lcd_Write_String@i+1)^0,c
  6869   002CB2  0E00               	movlw	0
  6870   002CB4  6E09               	movwf	Lcd_Write_String@i^0,c
  6871   002CB6  EF77  F016         	goto	l3567
  6872   002CBA                     l3563:
  6873                           
  6874                           ;lcd.c: 101:     Lcd_Write_Char(a[i]);
  6875   002CBA  5009               	movf	Lcd_Write_String@i^0,w,c
  6876   002CBC  2405               	addwf	Lcd_Write_String@a^0,w,c
  6877   002CBE  6E07               	movwf	??_Lcd_Write_String^0,c
  6878   002CC0  500A               	movf	(Lcd_Write_String@i+1)^0,w,c
  6879   002CC2  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
  6880   002CC4  6E08               	movwf	(??_Lcd_Write_String+1)^0,c
  6881   002CC6  C007  FFF6         	movff	??_Lcd_Write_String,tblptrl
  6882   002CCA  C008  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
  6883   002CCE  6AF8               	clrf	tblptru,c
  6884   002CD0  0E07               	movlw	(high __ramtop+-1)
  6885   002CD2  64F7               	cpfsgt	tblptrh,c
  6886   002CD4  D003               	bra	u3787
  6887   002CD6  0008               	tblrd		*
  6888   002CD8  50F5               	movf	tablat,w,c
  6889   002CDA  D005               	bra	u3780
  6890   002CDC                     u3787:
  6891   002CDC  CFF6 FFE1          	movff	tblptrl,fsr1l
  6892   002CE0  CFF7 FFE2          	movff	tblptrh,fsr1h
  6893   002CE4  50E7               	movf	indf1,w,c
  6894   002CE6                     u3780:
  6895   002CE6  ECDA  F018         	call	_Lcd_Write_Char
  6896   002CEA  4A09               	infsnz	Lcd_Write_String@i^0,f,c
  6897   002CEC  2A0A               	incf	(Lcd_Write_String@i+1)^0,f,c
  6898   002CEE                     l3567:
  6899   002CEE  5009               	movf	Lcd_Write_String@i^0,w,c
  6900   002CF0  2405               	addwf	Lcd_Write_String@a^0,w,c
  6901   002CF2  6E07               	movwf	??_Lcd_Write_String^0,c
  6902   002CF4  500A               	movf	(Lcd_Write_String@i+1)^0,w,c
  6903   002CF6  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
  6904   002CF8  6E08               	movwf	(??_Lcd_Write_String+1)^0,c
  6905   002CFA  C007  FFF6         	movff	??_Lcd_Write_String,tblptrl
  6906   002CFE  C008  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
  6907   002D02  6AF8               	clrf	tblptru,c
  6908   002D04  0E07               	movlw	(high __ramtop+-1)
  6909   002D06  64F7               	cpfsgt	tblptrh,c
  6910   002D08  D003               	bra	u3797
  6911   002D0A  0008               	tblrd		*
  6912   002D0C  50F5               	movf	tablat,w,c
  6913   002D0E  D005               	bra	u3790
  6914   002D10                     u3797:
  6915   002D10  CFF6 FFE1          	movff	tblptrl,fsr1l
  6916   002D14  CFF7 FFE2          	movff	tblptrh,fsr1h
  6917   002D18  50E7               	movf	indf1,w,c
  6918   002D1A                     u3790:
  6919   002D1A  0900               	iorlw	0
  6920   002D1C  A4D8               	btfss	status,2,c
  6921   002D1E  EF93  F016         	goto	u3801
  6922   002D22  EF95  F016         	goto	u3800
  6923   002D26                     u3801:
  6924   002D26  EF5D  F016         	goto	l3563
  6925   002D2A                     u3800:
  6926   002D2A  0012               	return		;funcret
  6927   002D2C                     __end_of_Lcd_Write_String:
  6928                           	callstack 0
  6929                           
  6930 ;; *************** function _Lcd_Write_Char *****************
  6931 ;; Defined at:
  6932 ;;		line 81 in file "lcd.c"
  6933 ;; Parameters:    Size  Location     Type
  6934 ;;  a               1    wreg     unsigned char 
  6935 ;; Auto vars:     Size  Location     Type
  6936 ;;  a               1    3[COMRAM] unsigned char 
  6937 ;;  y               1    2[COMRAM] unsigned char 
  6938 ;;  temp            1    1[COMRAM] unsigned char 
  6939 ;; Return value:  Size  Location     Type
  6940 ;;                  1    wreg      void 
  6941 ;; Registers used:
  6942 ;;		wreg, status,2, status,0, cstack
  6943 ;; Tracked objects:
  6944 ;;		On entry : 0/0
  6945 ;;		On exit  : 0/0
  6946 ;;		Unchanged: 0/0
  6947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6948 ;;      Params:         0       0       0       0       0       0       0       0       0
  6949 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6950 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6951 ;;      Totals:         3       0       0       0       0       0       0       0       0
  6952 ;;Total ram usage:        3 bytes
  6953 ;; Hardware stack levels used: 1
  6954 ;; Hardware stack levels required when called: 1
  6955 ;; This function calls:
  6956 ;;		_Lcd_Port
  6957 ;; This function is called by:
  6958 ;;		_Lcd_Write_String
  6959 ;; This function uses a non-reentrant model
  6960 ;;
  6961                           
  6962                           	psect	text29
  6963   0031B4                     __ptext29:
  6964                           	callstack 0
  6965   0031B4                     _Lcd_Write_Char:
  6966                           	callstack 28
  6967                           
  6968                           ;incstack = 0
  6969                           ;Lcd_Write_Char@a stored from wreg
  6970   0031B4  6E04               	movwf	Lcd_Write_Char@a^0,c
  6971   0031B6                     
  6972                           ;lcd.c: 81: void Lcd_Write_Char(unsigned char a);lcd.c: 82: {;lcd.c: 83:    char temp,y;
      +                          ;lcd.c: 84:    temp = a&0x0F;
  6973   0031B6  5004               	movf	Lcd_Write_Char@a^0,w,c
  6974   0031B8  0B0F               	andlw	15
  6975   0031BA  6E02               	movwf	Lcd_Write_Char@temp^0,c
  6976                           
  6977                           ;lcd.c: 85:    y = a&0xF0;
  6978   0031BC  5004               	movf	Lcd_Write_Char@a^0,w,c
  6979   0031BE  0BF0               	andlw	240
  6980   0031C0  6E03               	movwf	Lcd_Write_Char@y^0,c
  6981   0031C2                     
  6982                           ;lcd.c: 86:    LATDbits.LATD2 = 1;
  6983   0031C2  848C               	bsf	140,2,c	;volatile
  6984   0031C4                     
  6985                           ;lcd.c: 87:    Lcd_Port(y>>4);
  6986   0031C4  3803               	swapf	Lcd_Write_Char@y^0,w,c
  6987   0031C6  0B0F               	andlw	15
  6988   0031C8  EC73  F017         	call	_Lcd_Port
  6989   0031CC                     
  6990                           ;lcd.c: 88:    LATDbits.LATD3 = 1;
  6991   0031CC  868C               	bsf	140,3,c	;volatile
  6992   0031CE                     
  6993                           ;lcd.c: 89:    _delay((unsigned long)((40)*(16000000/4000000.0)));
  6994   0031CE  0E35               	movlw	53
  6995   0031D0                     u3847:
  6996   0031D0  2EE8               	decfsz	wreg,f,c
  6997   0031D2  D7FE               	bra	u3847
  6998   0031D4  F000               	nop	
  6999   0031D6                     
  7000                           ;lcd.c: 90:    LATDbits.LATD3 = 0;
  7001   0031D6  968C               	bcf	140,3,c	;volatile
  7002   0031D8                     
  7003                           ;lcd.c: 91:    Lcd_Port(temp);
  7004   0031D8  5002               	movf	Lcd_Write_Char@temp^0,w,c
  7005   0031DA  EC73  F017         	call	_Lcd_Port
  7006   0031DE                     
  7007                           ;lcd.c: 92:    LATDbits.LATD3 = 1;
  7008   0031DE  868C               	bsf	140,3,c	;volatile
  7009   0031E0                     
  7010                           ;lcd.c: 93:    _delay((unsigned long)((40)*(16000000/4000000.0)));
  7011   0031E0  0E35               	movlw	53
  7012   0031E2                     u3857:
  7013   0031E2  2EE8               	decfsz	wreg,f,c
  7014   0031E4  D7FE               	bra	u3857
  7015   0031E6  F000               	nop	
  7016   0031E8                     
  7017                           ;lcd.c: 94:    LATDbits.LATD3 = 0;
  7018   0031E8  968C               	bcf	140,3,c	;volatile
  7019   0031EA  0012               	return		;funcret
  7020   0031EC                     __end_of_Lcd_Write_Char:
  7021                           	callstack 0
  7022                           
  7023 ;; *************** function _Lcd_Set_Cursor *****************
  7024 ;; Defined at:
  7025 ;;		line 41 in file "lcd.c"
  7026 ;; Parameters:    Size  Location     Type
  7027 ;;  a               1    wreg     unsigned char 
  7028 ;;  b               1    3[COMRAM] unsigned char 
  7029 ;; Auto vars:     Size  Location     Type
  7030 ;;  a               1    4[COMRAM] unsigned char 
  7031 ;;  temp            1    7[COMRAM] unsigned char 
  7032 ;;  y               1    6[COMRAM] unsigned char 
  7033 ;;  z               1    5[COMRAM] unsigned char 
  7034 ;; Return value:  Size  Location     Type
  7035 ;;                  1    wreg      void 
  7036 ;; Registers used:
  7037 ;;		wreg, status,2, status,0, cstack
  7038 ;; Tracked objects:
  7039 ;;		On entry : 0/0
  7040 ;;		On exit  : 0/0
  7041 ;;		Unchanged: 0/0
  7042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7043 ;;      Params:         1       0       0       0       0       0       0       0       0
  7044 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7045 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7046 ;;      Totals:         5       0       0       0       0       0       0       0       0
  7047 ;;Total ram usage:        5 bytes
  7048 ;; Hardware stack levels used: 1
  7049 ;; Hardware stack levels required when called: 2
  7050 ;; This function calls:
  7051 ;;		_Lcd_Cmd
  7052 ;; This function is called by:
  7053 ;;		_main
  7054 ;; This function uses a non-reentrant model
  7055 ;;
  7056                           
  7057                           	psect	text30
  7058   002E80                     __ptext30:
  7059                           	callstack 0
  7060   002E80                     _Lcd_Set_Cursor:
  7061                           	callstack 28
  7062                           
  7063                           ;incstack = 0
  7064                           ;Lcd_Set_Cursor@a stored from wreg
  7065   002E80  6E05               	movwf	Lcd_Set_Cursor@a^0,c
  7066   002E82                     
  7067                           ;lcd.c: 41: void Lcd_Set_Cursor(unsigned char a, unsigned char b);lcd.c: 42: {;lcd.c: 43
      +                          :  char temp,z,y;;lcd.c: 44:  if(a == 1)
  7068   002E82  0405               	decf	Lcd_Set_Cursor@a^0,w,c
  7069   002E84  A4D8               	btfss	status,2,c
  7070   002E86  EF47  F017         	goto	u3761
  7071   002E8A  EF49  F017         	goto	u3760
  7072   002E8E                     u3761:
  7073   002E8E  EF5A  F017         	goto	l3553
  7074   002E92                     u3760:
  7075   002E92                     
  7076                           ;lcd.c: 45:  {;lcd.c: 46:    temp = 0x80 + b - 1;
  7077   002E92  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  7078   002E94  0F7F               	addlw	127
  7079   002E96  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  7080                           
  7081                           ;lcd.c: 47:   z = temp>>4;
  7082   002E98  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  7083   002E9A  0B0F               	andlw	15
  7084   002E9C  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  7085                           
  7086                           ;lcd.c: 48:   y = temp & 0x0F;
  7087   002E9E  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  7088   002EA0  0B0F               	andlw	15
  7089   002EA2  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  7090   002EA4                     
  7091                           ;lcd.c: 49:   Lcd_Cmd(z);
  7092   002EA4  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  7093   002EA6  EC31  F019         	call	_Lcd_Cmd
  7094   002EAA                     
  7095                           ;lcd.c: 50:   Lcd_Cmd(y);
  7096   002EAA  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  7097   002EAC  EC31  F019         	call	_Lcd_Cmd
  7098                           
  7099                           ;lcd.c: 51:  }
  7100   002EB0  EF72  F017         	goto	l103
  7101   002EB4                     l3553:
  7102   002EB4  0E02               	movlw	2
  7103   002EB6  1805               	xorwf	Lcd_Set_Cursor@a^0,w,c
  7104   002EB8  A4D8               	btfss	status,2,c
  7105   002EBA  EF61  F017         	goto	u3771
  7106   002EBE  EF63  F017         	goto	u3770
  7107   002EC2                     u3771:
  7108   002EC2  EF72  F017         	goto	l103
  7109   002EC6                     u3770:
  7110   002EC6                     
  7111                           ;lcd.c: 53:  {;lcd.c: 54:   temp = 0xC0 + b - 1;
  7112   002EC6  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  7113   002EC8  0FBF               	addlw	191
  7114   002ECA  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  7115                           
  7116                           ;lcd.c: 55:   z = temp>>4;
  7117   002ECC  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  7118   002ECE  0B0F               	andlw	15
  7119   002ED0  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  7120                           
  7121                           ;lcd.c: 56:   y = temp & 0x0F;
  7122   002ED2  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  7123   002ED4  0B0F               	andlw	15
  7124   002ED6  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  7125   002ED8                     
  7126                           ;lcd.c: 57:   Lcd_Cmd(z);
  7127   002ED8  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  7128   002EDA  EC31  F019         	call	_Lcd_Cmd
  7129   002EDE                     
  7130                           ;lcd.c: 58:   Lcd_Cmd(y);
  7131   002EDE  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  7132   002EE0  EC31  F019         	call	_Lcd_Cmd
  7133   002EE4                     l103:
  7134   002EE4  0012               	return		;funcret
  7135   002EE6                     __end_of_Lcd_Set_Cursor:
  7136                           	callstack 0
  7137                           
  7138 ;; *************** function _Lcd_Init *****************
  7139 ;; Defined at:
  7140 ;;		line 62 in file "lcd.c"
  7141 ;; Parameters:    Size  Location     Type
  7142 ;;		None
  7143 ;; Auto vars:     Size  Location     Type
  7144 ;;		None
  7145 ;; Return value:  Size  Location     Type
  7146 ;;                  1    wreg      void 
  7147 ;; Registers used:
  7148 ;;		wreg, status,2, cstack
  7149 ;; Tracked objects:
  7150 ;;		On entry : 0/0
  7151 ;;		On exit  : 0/0
  7152 ;;		Unchanged: 0/0
  7153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7154 ;;      Params:         0       0       0       0       0       0       0       0       0
  7155 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7156 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7157 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7158 ;;Total ram usage:        1 bytes
  7159 ;; Hardware stack levels used: 1
  7160 ;; Hardware stack levels required when called: 2
  7161 ;; This function calls:
  7162 ;;		_Lcd_Cmd
  7163 ;;		_Lcd_Port
  7164 ;; This function is called by:
  7165 ;;		_main
  7166 ;; This function uses a non-reentrant model
  7167 ;;
  7168                           
  7169                           	psect	text31
  7170   002DA6                     __ptext31:
  7171                           	callstack 0
  7172   002DA6                     _Lcd_Init:
  7173                           	callstack 28
  7174   002DA6                     
  7175                           ;lcd.c: 64:   Lcd_Port(0x00);
  7176   002DA6  0E00               	movlw	0
  7177   002DA8  EC73  F017         	call	_Lcd_Port
  7178   002DAC                     
  7179                           ;lcd.c: 65:    _delay((unsigned long)((20)*(16000000/4000.0)));
  7180   002DAC  0E68               	movlw	104
  7181   002DAE  6E04               	movwf	??_Lcd_Init^0,c
  7182   002DB0  0EE4               	movlw	228
  7183   002DB2                     u3867:
  7184   002DB2  2EE8               	decfsz	wreg,f,c
  7185   002DB4  D7FE               	bra	u3867
  7186   002DB6  2E04               	decfsz	??_Lcd_Init^0,f,c
  7187   002DB8  D7FC               	bra	u3867
  7188   002DBA  D000               	nop2	
  7189   002DBC                     
  7190                           ;lcd.c: 66:   Lcd_Cmd(0x03);
  7191   002DBC  0E03               	movlw	3
  7192   002DBE  EC31  F019         	call	_Lcd_Cmd
  7193   002DC2                     
  7194                           ;lcd.c: 67:  _delay((unsigned long)((5)*(16000000/4000.0)));
  7195   002DC2  0E1A               	movlw	26
  7196   002DC4  6E04               	movwf	??_Lcd_Init^0,c
  7197   002DC6  0EF8               	movlw	248
  7198   002DC8                     u3877:
  7199   002DC8  2EE8               	decfsz	wreg,f,c
  7200   002DCA  D7FE               	bra	u3877
  7201   002DCC  2E04               	decfsz	??_Lcd_Init^0,f,c
  7202   002DCE  D7FC               	bra	u3877
  7203   002DD0  D000               	nop2	
  7204   002DD2                     
  7205                           ;lcd.c: 68:   Lcd_Cmd(0x03);
  7206   002DD2  0E03               	movlw	3
  7207   002DD4  EC31  F019         	call	_Lcd_Cmd
  7208   002DD8                     
  7209                           ;lcd.c: 69:  _delay((unsigned long)((11)*(16000000/4000.0)));
  7210   002DD8  0E3A               	movlw	58
  7211   002DDA  6E04               	movwf	??_Lcd_Init^0,c
  7212   002DDC  0E23               	movlw	35
  7213   002DDE                     u3887:
  7214   002DDE  2EE8               	decfsz	wreg,f,c
  7215   002DE0  D7FE               	bra	u3887
  7216   002DE2  2E04               	decfsz	??_Lcd_Init^0,f,c
  7217   002DE4  D7FC               	bra	u3887
  7218   002DE6  F000               	nop	
  7219   002DE8                     
  7220                           ;lcd.c: 70:   Lcd_Cmd(0x03);
  7221   002DE8  0E03               	movlw	3
  7222   002DEA  EC31  F019         	call	_Lcd_Cmd
  7223   002DEE                     
  7224                           ;lcd.c: 72:   Lcd_Cmd(0x02);
  7225   002DEE  0E02               	movlw	2
  7226   002DF0  EC31  F019         	call	_Lcd_Cmd
  7227   002DF4                     
  7228                           ;lcd.c: 73:   Lcd_Cmd(0x02);
  7229   002DF4  0E02               	movlw	2
  7230   002DF6  EC31  F019         	call	_Lcd_Cmd
  7231   002DFA                     
  7232                           ;lcd.c: 74:   Lcd_Cmd(0x08);
  7233   002DFA  0E08               	movlw	8
  7234   002DFC  EC31  F019         	call	_Lcd_Cmd
  7235   002E00                     
  7236                           ;lcd.c: 75:   Lcd_Cmd(0x00);
  7237   002E00  0E00               	movlw	0
  7238   002E02  EC31  F019         	call	_Lcd_Cmd
  7239   002E06                     
  7240                           ;lcd.c: 76:   Lcd_Cmd(0x0C);
  7241   002E06  0E0C               	movlw	12
  7242   002E08  EC31  F019         	call	_Lcd_Cmd
  7243   002E0C                     
  7244                           ;lcd.c: 77:   Lcd_Cmd(0x00);
  7245   002E0C  0E00               	movlw	0
  7246   002E0E  EC31  F019         	call	_Lcd_Cmd
  7247   002E12                     
  7248                           ;lcd.c: 78:   Lcd_Cmd(0x06);
  7249   002E12  0E06               	movlw	6
  7250   002E14  EC31  F019         	call	_Lcd_Cmd
  7251   002E18  0012               	return		;funcret
  7252   002E1A                     __end_of_Lcd_Init:
  7253                           	callstack 0
  7254                           
  7255 ;; *************** function _Lcd_Clear *****************
  7256 ;; Defined at:
  7257 ;;		line 35 in file "lcd.c"
  7258 ;; Parameters:    Size  Location     Type
  7259 ;;		None
  7260 ;; Auto vars:     Size  Location     Type
  7261 ;;		None
  7262 ;; Return value:  Size  Location     Type
  7263 ;;                  1    wreg      void 
  7264 ;; Registers used:
  7265 ;;		wreg, status,2, cstack
  7266 ;; Tracked objects:
  7267 ;;		On entry : 0/0
  7268 ;;		On exit  : 0/0
  7269 ;;		Unchanged: 0/0
  7270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7271 ;;      Params:         0       0       0       0       0       0       0       0       0
  7272 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7273 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7274 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7275 ;;Total ram usage:        0 bytes
  7276 ;; Hardware stack levels used: 1
  7277 ;; Hardware stack levels required when called: 2
  7278 ;; This function calls:
  7279 ;;		_Lcd_Cmd
  7280 ;; This function is called by:
  7281 ;;		_main
  7282 ;; This function uses a non-reentrant model
  7283 ;;
  7284                           
  7285                           	psect	text32
  7286   003296                     __ptext32:
  7287                           	callstack 0
  7288   003296                     _Lcd_Clear:
  7289                           	callstack 28
  7290   003296                     
  7291                           ;lcd.c: 37:  Lcd_Cmd(0);
  7292   003296  0E00               	movlw	0
  7293   003298  EC31  F019         	call	_Lcd_Cmd
  7294                           
  7295                           ;lcd.c: 38:  Lcd_Cmd(1);
  7296   00329C  0E01               	movlw	1
  7297   00329E  EC31  F019         	call	_Lcd_Cmd
  7298   0032A2  0012               	return		;funcret
  7299   0032A4                     __end_of_Lcd_Clear:
  7300                           	callstack 0
  7301                           
  7302 ;; *************** function _Lcd_Cmd *****************
  7303 ;; Defined at:
  7304 ;;		line 26 in file "lcd.c"
  7305 ;; Parameters:    Size  Location     Type
  7306 ;;  a               1    wreg     unsigned char 
  7307 ;; Auto vars:     Size  Location     Type
  7308 ;;  a               1    2[COMRAM] unsigned char 
  7309 ;; Return value:  Size  Location     Type
  7310 ;;                  1    wreg      void 
  7311 ;; Registers used:
  7312 ;;		wreg, status,2, cstack
  7313 ;; Tracked objects:
  7314 ;;		On entry : 0/0
  7315 ;;		On exit  : 0/0
  7316 ;;		Unchanged: 0/0
  7317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7318 ;;      Params:         0       0       0       0       0       0       0       0       0
  7319 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7320 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7321 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7322 ;;Total ram usage:        2 bytes
  7323 ;; Hardware stack levels used: 1
  7324 ;; Hardware stack levels required when called: 1
  7325 ;; This function calls:
  7326 ;;		_Lcd_Port
  7327 ;; This function is called by:
  7328 ;;		_Lcd_Clear
  7329 ;;		_Lcd_Set_Cursor
  7330 ;;		_Lcd_Init
  7331 ;;		_Lcd_Shift_Right
  7332 ;;		_Lcd_Shift_Left
  7333 ;; This function uses a non-reentrant model
  7334 ;;
  7335                           
  7336                           	psect	text33
  7337   003262                     __ptext33:
  7338                           	callstack 0
  7339   003262                     _Lcd_Cmd:
  7340                           	callstack 28
  7341                           
  7342                           ;incstack = 0
  7343                           ;Lcd_Cmd@a stored from wreg
  7344   003262  6E03               	movwf	Lcd_Cmd@a^0,c
  7345   003264                     
  7346                           ;lcd.c: 26: void Lcd_Cmd(unsigned char a);lcd.c: 27: {;lcd.c: 28:  LATDbits.LATD2 = 0;
  7347   003264  948C               	bcf	140,2,c	;volatile
  7348   003266                     
  7349                           ;lcd.c: 29:  Lcd_Port(a);
  7350   003266  5003               	movf	Lcd_Cmd@a^0,w,c
  7351   003268  EC73  F017         	call	_Lcd_Port
  7352   00326C                     
  7353                           ;lcd.c: 30:  LATDbits.LATD3 = 1;
  7354   00326C  868C               	bsf	140,3,c	;volatile
  7355   00326E                     
  7356                           ;lcd.c: 31:         _delay((unsigned long)((4)*(16000000/4000.0)));
  7357   00326E  0E15               	movlw	21
  7358   003270  6E02               	movwf	??_Lcd_Cmd^0,c
  7359   003272  0EC6               	movlw	198
  7360   003274                     u3897:
  7361   003274  2EE8               	decfsz	wreg,f,c
  7362   003276  D7FE               	bra	u3897
  7363   003278  2E02               	decfsz	??_Lcd_Cmd^0,f,c
  7364   00327A  D7FC               	bra	u3897
  7365   00327C  D000               	nop2	
  7366   00327E                     
  7367                           ;lcd.c: 32:         LATDbits.LATD3 = 0;
  7368   00327E  968C               	bcf	140,3,c	;volatile
  7369   003280  0012               	return		;funcret
  7370   003282                     __end_of_Lcd_Cmd:
  7371                           	callstack 0
  7372                           
  7373 ;; *************** function _Lcd_Port *****************
  7374 ;; Defined at:
  7375 ;;		line 3 in file "lcd.c"
  7376 ;; Parameters:    Size  Location     Type
  7377 ;;  a               1    wreg     unsigned char 
  7378 ;; Auto vars:     Size  Location     Type
  7379 ;;  a               1    0[COMRAM] unsigned char 
  7380 ;; Return value:  Size  Location     Type
  7381 ;;                  1    wreg      void 
  7382 ;; Registers used:
  7383 ;;		wreg
  7384 ;; Tracked objects:
  7385 ;;		On entry : 0/0
  7386 ;;		On exit  : 0/0
  7387 ;;		Unchanged: 0/0
  7388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7389 ;;      Params:         0       0       0       0       0       0       0       0       0
  7390 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7391 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7392 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7393 ;;Total ram usage:        1 bytes
  7394 ;; Hardware stack levels used: 1
  7395 ;; This function calls:
  7396 ;;		Nothing
  7397 ;; This function is called by:
  7398 ;;		_Lcd_Cmd
  7399 ;;		_Lcd_Init
  7400 ;;		_Lcd_Write_Char
  7401 ;; This function uses a non-reentrant model
  7402 ;;
  7403                           
  7404                           	psect	text34
  7405   002EE6                     __ptext34:
  7406                           	callstack 0
  7407   002EE6                     _Lcd_Port:
  7408                           	callstack 28
  7409                           
  7410                           ;incstack = 0
  7411                           ;Lcd_Port@a stored from wreg
  7412   002EE6  6E01               	movwf	Lcd_Port@a^0,c
  7413   002EE8                     
  7414                           ;lcd.c: 3: void Lcd_Port(unsigned char a);lcd.c: 4: {;lcd.c: 5:  if(a & 1)
  7415   002EE8  A001               	btfss	Lcd_Port@a^0,0,c
  7416   002EEA  EF79  F017         	goto	u3561
  7417   002EEE  EF7B  F017         	goto	u3560
  7418   002EF2                     u3561:
  7419   002EF2  EF7E  F017         	goto	l83
  7420   002EF6                     u3560:
  7421   002EF6                     
  7422                           ;lcd.c: 6:   LATDbits.LATD4 = 1;
  7423   002EF6  888C               	bsf	140,4,c	;volatile
  7424   002EF8  EF7F  F017         	goto	l3313
  7425   002EFC                     l83:
  7426                           
  7427                           ;lcd.c: 8:   LATDbits.LATD4 = 0;
  7428   002EFC  988C               	bcf	140,4,c	;volatile
  7429   002EFE                     l3313:
  7430                           
  7431                           ;lcd.c: 10:  if(a & 2)
  7432   002EFE  A201               	btfss	Lcd_Port@a^0,1,c
  7433   002F00  EF84  F017         	goto	u3571
  7434   002F04  EF86  F017         	goto	u3570
  7435   002F08                     u3571:
  7436   002F08  EF89  F017         	goto	l85
  7437   002F0C                     u3570:
  7438   002F0C                     
  7439                           ;lcd.c: 11:   LATDbits.LATD5 = 1;
  7440   002F0C  8A8C               	bsf	140,5,c	;volatile
  7441   002F0E  EF8A  F017         	goto	l3317
  7442   002F12                     l85:
  7443                           
  7444                           ;lcd.c: 13:   LATDbits.LATD5 = 0;
  7445   002F12  9A8C               	bcf	140,5,c	;volatile
  7446   002F14                     l3317:
  7447                           
  7448                           ;lcd.c: 15:  if(a & 4)
  7449   002F14  A401               	btfss	Lcd_Port@a^0,2,c
  7450   002F16  EF8F  F017         	goto	u3581
  7451   002F1A  EF91  F017         	goto	u3580
  7452   002F1E                     u3581:
  7453   002F1E  EF94  F017         	goto	l87
  7454   002F22                     u3580:
  7455   002F22                     
  7456                           ;lcd.c: 16:   LATDbits.LATD6 = 1;
  7457   002F22  8C8C               	bsf	140,6,c	;volatile
  7458   002F24  EF95  F017         	goto	l3321
  7459   002F28                     l87:
  7460                           
  7461                           ;lcd.c: 18:   LATDbits.LATD6 = 0;
  7462   002F28  9C8C               	bcf	140,6,c	;volatile
  7463   002F2A                     l3321:
  7464                           
  7465                           ;lcd.c: 20:  if(a & 8)
  7466   002F2A  A601               	btfss	Lcd_Port@a^0,3,c
  7467   002F2C  EF9A  F017         	goto	u3591
  7468   002F30  EF9C  F017         	goto	u3590
  7469   002F34                     u3591:
  7470   002F34  EF9F  F017         	goto	l89
  7471   002F38                     u3590:
  7472   002F38                     
  7473                           ;lcd.c: 21:   LATDbits.LATD7 = 1;
  7474   002F38  8E8C               	bsf	140,7,c	;volatile
  7475   002F3A  EFA0  F017         	goto	l91
  7476   002F3E                     l89:
  7477                           
  7478                           ;lcd.c: 23:   LATDbits.LATD7 = 0;
  7479   002F3E  9E8C               	bcf	140,7,c	;volatile
  7480   002F40                     l91:
  7481   002F40  0012               	return		;funcret
  7482   002F42                     __end_of_Lcd_Port:
  7483                           	callstack 0
  7484                           
  7485 ;; *************** function _Config_Port *****************
  7486 ;; Defined at:
  7487 ;;		line 46 in file "main.c"
  7488 ;; Parameters:    Size  Location     Type
  7489 ;;		None
  7490 ;; Auto vars:     Size  Location     Type
  7491 ;;		None
  7492 ;; Return value:  Size  Location     Type
  7493 ;;                  1    wreg      void 
  7494 ;; Registers used:
  7495 ;;		wreg, status,2
  7496 ;; Tracked objects:
  7497 ;;		On entry : 0/0
  7498 ;;		On exit  : 0/0
  7499 ;;		Unchanged: 0/0
  7500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7501 ;;      Params:         0       0       0       0       0       0       0       0       0
  7502 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7503 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7504 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7505 ;;Total ram usage:        0 bytes
  7506 ;; Hardware stack levels used: 1
  7507 ;; This function calls:
  7508 ;;		Nothing
  7509 ;; This function is called by:
  7510 ;;		_main
  7511 ;; This function uses a non-reentrant model
  7512 ;;
  7513                           
  7514                           	psect	text35
  7515   003282                     __ptext35:
  7516                           	callstack 0
  7517   003282                     _Config_Port:
  7518                           	callstack 30
  7519   003282                     
  7520                           ;main.c: 48:     LATD = 0x00;
  7521   003282  0E00               	movlw	0
  7522   003284  6E8C               	movwf	140,c	;volatile
  7523                           
  7524                           ;main.c: 51:     SLRCON=0b00000000;
  7525   003286  0E00               	movlw	0
  7526   003288  6E7A               	movwf	122,c	;volatile
  7527                           
  7528                           ;main.c: 54:     ANSELD = 0x00;
  7529   00328A  0E00               	movlw	0
  7530   00328C  010F               	movlb	15	; () banked
  7531   00328E  6F5E               	movwf	94,b	;volatile
  7532                           
  7533                           ;main.c: 57:     TRISD = 0x00;
  7534   003290  0E00               	movlw	0
  7535   003292  6E95               	movwf	149,c	;volatile
  7536   003294                     
  7537                           ; BSR set to: 15
  7538   003294  0012               	return		;funcret
  7539   003296                     __end_of_Config_Port:
  7540                           	callstack 0
  7541                           
  7542 ;; *************** function _Config_Clock *****************
  7543 ;; Defined at:
  7544 ;;		line 41 in file "main.c"
  7545 ;; Parameters:    Size  Location     Type
  7546 ;;		None
  7547 ;; Auto vars:     Size  Location     Type
  7548 ;;		None
  7549 ;; Return value:  Size  Location     Type
  7550 ;;                  1    wreg      void 
  7551 ;; Registers used:
  7552 ;;		wreg, status,2
  7553 ;; Tracked objects:
  7554 ;;		On entry : 0/0
  7555 ;;		On exit  : 0/0
  7556 ;;		Unchanged: 0/0
  7557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7558 ;;      Params:         0       0       0       0       0       0       0       0       0
  7559 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7560 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7561 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7562 ;;Total ram usage:        0 bytes
  7563 ;; Hardware stack levels used: 1
  7564 ;; This function calls:
  7565 ;;		Nothing
  7566 ;; This function is called by:
  7567 ;;		_main
  7568 ;; This function uses a non-reentrant model
  7569 ;;
  7570                           
  7571                           	psect	text36
  7572   0032A4                     __ptext36:
  7573                           	callstack 0
  7574   0032A4                     _Config_Clock:
  7575                           	callstack 30
  7576   0032A4                     
  7577                           ;main.c: 42:     OSCCONbits.IRCF=0b111;
  7578   0032A4  0E70               	movlw	112
  7579   0032A6  12D3               	iorwf	211,f,c	;volatile
  7580                           
  7581                           ;main.c: 43:     OSCCONbits.SCS=0b10;
  7582   0032A8  50D3               	movf	211,w,c	;volatile
  7583   0032AA  0BFC               	andlw	-4
  7584   0032AC  0902               	iorlw	2
  7585   0032AE  6ED3               	movwf	211,c	;volatile
  7586   0032B0  0012               	return		;funcret
  7587   0032B2                     __end_of_Config_Clock:
  7588                           	callstack 0
  7589                           
  7590 ;; *************** function _Config_CCP_Captura *****************
  7591 ;; Defined at:
  7592 ;;		line 61 in file "main.c"
  7593 ;; Parameters:    Size  Location     Type
  7594 ;;		None
  7595 ;; Auto vars:     Size  Location     Type
  7596 ;;		None
  7597 ;; Return value:  Size  Location     Type
  7598 ;;                  1    wreg      void 
  7599 ;; Registers used:
  7600 ;;		wreg, status,2
  7601 ;; Tracked objects:
  7602 ;;		On entry : 0/0
  7603 ;;		On exit  : 0/0
  7604 ;;		Unchanged: 0/0
  7605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7606 ;;      Params:         0       0       0       0       0       0       0       0       0
  7607 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7608 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7609 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7610 ;;Total ram usage:        0 bytes
  7611 ;; Hardware stack levels used: 1
  7612 ;; This function calls:
  7613 ;;		Nothing
  7614 ;; This function is called by:
  7615 ;;		_main
  7616 ;; This function uses a non-reentrant model
  7617 ;;
  7618                           
  7619                           	psect	text37
  7620   003142                     __ptext37:
  7621                           	callstack 0
  7622   003142                     _Config_CCP_Captura:
  7623                           	callstack 30
  7624   003142                     
  7625                           ;main.c: 63:     ANSELCbits.ANSC2 = 0;
  7626   003142  010F               	movlb	15	; () banked
  7627   003144  955D               	bcf	93,2,b	;volatile
  7628                           
  7629                           ;main.c: 64:     TRISCbits.TRISC2 = 1;
  7630   003146  8494               	bsf	148,2,c	;volatile
  7631   003148                     
  7632                           ; BSR set to: 15
  7633                           ;main.c: 67:     CCP1CONbits.DC1B = 0b00;
  7634   003148  0ECF               	movlw	-49
  7635   00314A  16BD               	andwf	189,f,c	;volatile
  7636                           
  7637                           ;main.c: 68:     CCP1CONbits.CCP1M = 0b0101;
  7638   00314C  50BD               	movf	189,w,c	;volatile
  7639   00314E  0BF0               	andlw	-16
  7640   003150  0905               	iorlw	5
  7641   003152  6EBD               	movwf	189,c	;volatile
  7642   003154                     
  7643                           ; BSR set to: 15
  7644                           ;main.c: 69:     CCPTMRSbits.C1TSEL = 0;
  7645   003154  9159               	bcf	89,0,b	;volatile
  7646                           
  7647                           ;main.c: 72:     T1CONbits.TMR1CS = 0b00;
  7648   003156  0E3F               	movlw	-193
  7649   003158  16CD               	andwf	205,f,c	;volatile
  7650                           
  7651                           ;main.c: 73:     T1CONbits.T1CKPS = 0b00;
  7652   00315A  0ECF               	movlw	-49
  7653   00315C  16CD               	andwf	205,f,c	;volatile
  7654   00315E                     
  7655                           ; BSR set to: 15
  7656                           ;main.c: 74:     T1CONbits.SOSCEN = 0;
  7657   00315E  96CD               	bcf	205,3,c	;volatile
  7658   003160                     
  7659                           ; BSR set to: 15
  7660                           ;main.c: 75:     T1CONbits.T1SYNC = 0;
  7661   003160  94CD               	bcf	205,2,c	;volatile
  7662   003162                     
  7663                           ; BSR set to: 15
  7664                           ;main.c: 76:     T1CONbits.RD16 = 1;
  7665   003162  82CD               	bsf	205,1,c	;volatile
  7666   003164                     
  7667                           ; BSR set to: 15
  7668                           ;main.c: 77:     T1CONbits.TMR1ON = 0;
  7669   003164  90CD               	bcf	205,0,c	;volatile
  7670                           
  7671                           ;main.c: 79:     CCPR1 = 0;
  7672   003166  0E00               	movlw	0
  7673   003168  6EBF               	movwf	191,c	;volatile
  7674   00316A  0E00               	movlw	0
  7675   00316C  6EBE               	movwf	190,c	;volatile
  7676                           
  7677                           ;main.c: 80:     TMR1 = 0;
  7678   00316E  0E00               	movlw	0
  7679   003170  6ECF               	movwf	207,c	;volatile
  7680   003172  0E00               	movlw	0
  7681   003174  6ECE               	movwf	206,c	;volatile
  7682   003176                     
  7683                           ; BSR set to: 15
  7684                           ;main.c: 83:     PIR1bits.CCP1IF = 0;
  7685   003176  949E               	bcf	158,2,c	;volatile
  7686   003178                     
  7687                           ; BSR set to: 15
  7688                           ;main.c: 84:     T1CONbits.TMR1ON = 1;
  7689   003178  80CD               	bsf	205,0,c	;volatile
  7690   00317A                     
  7691                           ; BSR set to: 15
  7692   00317A  0012               	return		;funcret
  7693   00317C                     __end_of_Config_CCP_Captura:
  7694                           	callstack 0
  7695                           
  7696                           	psect	rparam
  7697   000000                     
  7698                           	psect	idloc
  7699                           
  7700                           ;Config register IDLOC0 @ 0x200000
  7701                           ;	unspecified, using default values
  7702   200000                     	org	2097152
  7703   200000  FF                 	db	255
  7704                           
  7705                           ;Config register IDLOC1 @ 0x200001
  7706                           ;	unspecified, using default values
  7707   200001                     	org	2097153
  7708   200001  FF                 	db	255
  7709                           
  7710                           ;Config register IDLOC2 @ 0x200002
  7711                           ;	unspecified, using default values
  7712   200002                     	org	2097154
  7713   200002  FF                 	db	255
  7714                           
  7715                           ;Config register IDLOC3 @ 0x200003
  7716                           ;	unspecified, using default values
  7717   200003                     	org	2097155
  7718   200003  FF                 	db	255
  7719                           
  7720                           ;Config register IDLOC4 @ 0x200004
  7721                           ;	unspecified, using default values
  7722   200004                     	org	2097156
  7723   200004  FF                 	db	255
  7724                           
  7725                           ;Config register IDLOC5 @ 0x200005
  7726                           ;	unspecified, using default values
  7727   200005                     	org	2097157
  7728   200005  FF                 	db	255
  7729                           
  7730                           ;Config register IDLOC6 @ 0x200006
  7731                           ;	unspecified, using default values
  7732   200006                     	org	2097158
  7733   200006  FF                 	db	255
  7734                           
  7735                           ;Config register IDLOC7 @ 0x200007
  7736                           ;	unspecified, using default values
  7737   200007                     	org	2097159
  7738   200007  FF                 	db	255
  7739                           
  7740                           	psect	config
  7741                           
  7742                           ;Config register CONFIG1L @ 0x300000
  7743                           ;	PLL Selection
  7744                           ;	PLLSEL = PLL4X, 4x clock multiplier
  7745                           ;	PLL Enable Configuration bit
  7746                           ;	CFGPLLEN = OFF, PLL Disabled (firmware controlled)
  7747                           ;	CPU System Clock Postscaler
  7748                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
  7749                           ;	Low Speed USB mode with 48 MHz system clock
  7750                           ;	LS48MHZ = SYS24X4, System clock at 24 MHz, USB clock divider is set to 4
  7751   300000                     	org	3145728
  7752   300000  00                 	db	0
  7753                           
  7754                           ;Config register CONFIG1H @ 0x300001
  7755                           ;	Oscillator Selection
  7756                           ;	FOSC = INTOSCIO, Internal oscillator
  7757                           ;	Primary Oscillator Shutdown
  7758                           ;	PCLKEN = ON, Primary oscillator enabled
  7759                           ;	Fail-Safe Clock Monitor
  7760                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  7761                           ;	Internal/External Oscillator Switchover
  7762                           ;	IESO = OFF, Oscillator Switchover mode disabled
  7763   300001                     	org	3145729
  7764   300001  28                 	db	40
  7765                           
  7766                           ;Config register CONFIG2L @ 0x300002
  7767                           ;	Power-up Timer Enable
  7768                           ;	nPWRTEN = ON, Power up timer enabled
  7769                           ;	Brown-out Reset Enable
  7770                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
  7771                           ;	Brown-out Reset Voltage
  7772                           ;	BORV = 190, BOR set to 1.9V nominal
  7773                           ;	Low-Power Brown-out Reset
  7774                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  7775   300002                     	org	3145730
  7776   300002  5E                 	db	94
  7777                           
  7778                           ;Config register CONFIG2H @ 0x300003
  7779                           ;	Watchdog Timer Enable bits
  7780                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  7781                           ;	Watchdog Timer Postscaler
  7782                           ;	WDTPS = 32768, 1:32768
  7783   300003                     	org	3145731
  7784   300003  3C                 	db	60
  7785                           
  7786                           ; Padding undefined space
  7787   300004                     	org	3145732
  7788   300004  FF                 	db	255
  7789                           
  7790                           ;Config register CONFIG3H @ 0x300005
  7791                           ;	CCP2 MUX bit
  7792                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  7793                           ;	PORTB A/D Enable bit
  7794                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  7795                           ;	Timer3 Clock Input MUX bit
  7796                           ;	T3CMX = RC0, T3CKI function is on RC0
  7797                           ;	SDO Output MUX bit
  7798                           ;	SDOMX = RB3, SDO function is on RB3
  7799                           ;	Master Clear Reset Pin Enable
  7800                           ;	MCLRE = OFF, RE3 input pin enabled; external MCLR disabled
  7801   300005                     	org	3145733
  7802   300005  53                 	db	83
  7803                           
  7804                           ;Config register CONFIG4L @ 0x300006
  7805                           ;	Stack Full/Underflow Reset
  7806                           ;	STVREN = ON, Stack full/underflow will cause Reset
  7807                           ;	Single-Supply ICSP Enable bit
  7808                           ;	LVP = OFF, Single-Supply ICSP disabled
  7809                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  7810                           ;	ICPRT = OFF, ICPORT disabled
  7811                           ;	Extended Instruction Set Enable bit
  7812                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  7813                           ;	Background Debugger Enable bit
  7814                           ;	DEBUG = 0x1, unprogrammed default
  7815   300006                     	org	3145734
  7816   300006  81                 	db	129
  7817                           
  7818                           ; Padding undefined space
  7819   300007                     	org	3145735
  7820   300007  FF                 	db	255
  7821                           
  7822                           ;Config register CONFIG5L @ 0x300008
  7823                           ;	Block 0 Code Protect
  7824                           ;	CP0 = OFF, Block 0 is not code-protected
  7825                           ;	Block 1 Code Protect
  7826                           ;	CP1 = OFF, Block 1 is not code-protected
  7827                           ;	Block 2 Code Protect
  7828                           ;	CP2 = OFF, Block 2 is not code-protected
  7829                           ;	Block 3 Code Protect
  7830                           ;	CP3 = OFF, Block 3 is not code-protected
  7831   300008                     	org	3145736
  7832   300008  0F                 	db	15
  7833                           
  7834                           ;Config register CONFIG5H @ 0x300009
  7835                           ;	Boot Block Code Protect
  7836                           ;	CPB = OFF, Boot block is not code-protected
  7837                           ;	Data EEPROM Code Protect
  7838                           ;	CPD = OFF, Data EEPROM is not code-protected
  7839   300009                     	org	3145737
  7840   300009  C0                 	db	192
  7841                           
  7842                           ;Config register CONFIG6L @ 0x30000A
  7843                           ;	Block 0 Write Protect
  7844                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
  7845                           ;	Block 1 Write Protect
  7846                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
  7847                           ;	Block 2 Write Protect
  7848                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
  7849                           ;	Block 3 Write Protect
  7850                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
  7851   30000A                     	org	3145738
  7852   30000A  0F                 	db	15
  7853                           
  7854                           ;Config register CONFIG6H @ 0x30000B
  7855                           ;	Configuration Registers Write Protect
  7856                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  7857                           ;	Boot Block Write Protect
  7858                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
  7859                           ;	Data EEPROM Write Protect
  7860                           ;	WRTD = OFF, Data EEPROM is not write-protected
  7861   30000B                     	org	3145739
  7862   30000B  E0                 	db	224
  7863                           
  7864                           ;Config register CONFIG7L @ 0x30000C
  7865                           ;	Block 0 Table Read Protect
  7866                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
  7867                           ;	Block 1 Table Read Protect
  7868                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
  7869                           ;	Block 2 Table Read Protect
  7870                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
  7871                           ;	Block 3 Table Read Protect
  7872                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
  7873   30000C                     	org	3145740
  7874   30000C  0F                 	db	15
  7875                           
  7876                           ;Config register CONFIG7H @ 0x30000D
  7877                           ;	Boot Block Table Read Protect
  7878                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
  7879   30000D                     	org	3145741
  7880   30000D  40                 	db	64
  7881                           tosu	equ	0xFFF
  7882                           tosh	equ	0xFFE
  7883                           tosl	equ	0xFFD
  7884                           stkptr	equ	0xFFC
  7885                           pclatu	equ	0xFFB
  7886                           pclath	equ	0xFFA
  7887                           pcl	equ	0xFF9
  7888                           tblptru	equ	0xFF8
  7889                           tblptrh	equ	0xFF7
  7890                           tblptrl	equ	0xFF6
  7891                           tablat	equ	0xFF5
  7892                           prodh	equ	0xFF4
  7893                           prodl	equ	0xFF3
  7894                           indf0	equ	0xFEF
  7895                           postinc0	equ	0xFEE
  7896                           postdec0	equ	0xFED
  7897                           preinc0	equ	0xFEC
  7898                           plusw0	equ	0xFEB
  7899                           fsr0h	equ	0xFEA
  7900                           fsr0l	equ	0xFE9
  7901                           wreg	equ	0xFE8
  7902                           indf1	equ	0xFE7
  7903                           postinc1	equ	0xFE6
  7904                           postdec1	equ	0xFE5
  7905                           preinc1	equ	0xFE4
  7906                           plusw1	equ	0xFE3
  7907                           fsr1h	equ	0xFE2
  7908                           fsr1l	equ	0xFE1
  7909                           bsr	equ	0xFE0
  7910                           indf2	equ	0xFDF
  7911                           postinc2	equ	0xFDE
  7912                           postdec2	equ	0xFDD
  7913                           preinc2	equ	0xFDC
  7914                           plusw2	equ	0xFDB
  7915                           fsr2h	equ	0xFDA
  7916                           fsr2l	equ	0xFD9
  7917                           status	equ	0xFD8

Data Sizes:
    Strings     25
    Constant    0
    Data        0
    BSS         117
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      95
    BANK0           160     69     105
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_6(CODE[4]), STR_3(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_6(CODE[4]), STR_3(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_2(CODE[5]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_2(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_2(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 5
		 -> STR_2(CODE[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S967$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_2(CODE[5]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> str_buffer(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S888$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S888$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> str_buffer(BANK0[20]), STR_1(CODE[12]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _atoi->___wmul
    _Read_Captura->___fldiv
    ___fldiv->___xxtofl
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   26515
                                             67 BANK0      2     2      0
                 _Config_CCP_Captura
                       _Config_Clock
                        _Config_Port
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                       _Read_Captura
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    15      8   22451
                                             46 BANK0     21    13      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   22096
                                             88 COMRAM     6     0      6
                                             44 BANK0      2     2      0
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           24    18      6   21735
                                             68 COMRAM    20    14      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              54    47      7   18885
                                             59 COMRAM     9     2      7
                                              0 BANK0     44    44      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     4      4     400
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2455
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     371
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     294
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             39 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     457
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2889
                                             25 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2504
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     790
                                             25 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 9     7      2    1080
                                              6 COMRAM     9     7      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              5     3      2     207
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              4     2      2     237
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _Read_Captura                                        18    14      4    2804
                                             39 COMRAM    18    14      4
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2311
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     6     4      2     420
                                              4 COMRAM     6     4      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       3     3      0     178
                                              1 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       5     4      1     532
                                              3 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     198
                                              3 COMRAM     1     1      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     2      0     110
                                              1 COMRAM     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Config_Port                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Config_Clock                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Config_CCP_Captura                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Config_CCP_Captura
   _Config_Clock
   _Config_Port
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _Read_Captura
     ___fldiv
       ___xxtofl (ARG)
     ___xxtofl
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
             _fputc
               _putch
             _fputs
               _fputc
           _strcpy
         _fputc
         _isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      31        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     45      69       5       65.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5F       1      100.0%
BITBIGSFRh          2C      0       0      20        0.0%
BITBIGSFRlhhlh      1E      0       0      23        0.0%
BITBIGSFRlllh       1B      0       0      27        0.0%
BITBIGSFRllh        11      0       0      26        0.0%
BITBIGSFRlhhhl       D      0       0      22        0.0%
BITBIGSFRlhhll       8      0       0      24        0.0%
BITBIGSFRlhl         7      0       0      25        0.0%
BITBIGSFRlllll       6      0       0      29        0.0%
BITBIGSFRlhhhh       3      0       0      21        0.0%
BITBIGSFRllllh       3      0       0      28        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     118      30        0.0%
DATA                 0      0     118       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Jul 31 21:04:10 2022

              ___fldiv@aexp 0027                ___fldiv@bexp 0026                ___fldiv@sign 001F  
                        l61 32B0                          l70 29D8                          l64 3294  
                        l72 29E6                          l73 29F0                          l67 317A  
                        l91 2F40                          l83 2EFC                          l75 29FE  
                        l76 2A9E                          l85 2F12                          l94 3280  
                        l87 2F28                          l89 2F3E                          l97 32A2  
       ___wmul@multiplicand 0003                         l103 2EE4                         l106 2E18  
                       l115 2D2A                         l124 323C                         l109 31EA  
                       l421 27C4                         l711 1CBC                         l383 2C12  
                       l720 1DA4                         l706 1E98                         l394 28C8  
                       l802 2F92                         l708 1CF8                         l652 1404  
                       l717 1D3E                         l389 2882                         l661 16D4  
                       l653 13F2                         l742 1AFE                         l398 31B2  
                       l654 13B8                         l719 1DB6                         l840 2DA4  
                       l745 1990                         l738 179A                         l755 1AC0  
                       l747 1A08                         l851 1214                         l748 19F6  
                       l836 2D4E                         l669 151E                         l782 2574  
                       l678 15EE                         l694 3076                         l854 0BAE  
                       l926 3030                         l679 15DC                         l919 21AE  
                       l936 29C6                         l856 09F4                         l793 250C  
                       l786 24B0                         l962 26BE                         l779 2418  
                       l971 2304                         l884 0FF6                         l959 26B6  
                       l968 23C0                         l993 2E6E                         l978 3216  
                       l986 30BC                         l996 2E7E                         _pad 2D2C  
                       wreg 000FE8                ___flmul@aexp 0012                ___flmul@bexp 0013  
              ___flmul@sign 000D                ___flmul@temp 0018                ___flmul@prod 0014  
              ___fltol@exp1 000A                        l1002 2FE2                        l1014 2B68  
                      l1022 3100                        l1031 3140                        l1025 32B2  
                      l3001 21D0                        l3011 22B8                        l3003 2226  
                      l3021 23A0                        l3013 22F4                        l3005 223A  
                      l3101 0976                        l3023 23B0                        l3007 2248  
                      l3015 2328                        l3031 2FB4                        l3103 097A  
                      l2401 129C                        l3017 2364                        l3033 2FB8  
                      l3201 0F1E                        l3121 0A04                        l3105 0980  
                      l3051 30B6                        l3043 3078                        l2411 12DC  
                      l2403 12AA                        l3019 2378                        l3035 2FC4  
                      l3027 2F94                        l3211 0F48                        l3203 0F22  
                      l3131 0AEC                        l3123 0A0A                        l3107 0988  
                      l3115 09A4                        l3045 307C                        l3301 2688  
                      l2501 14B8                        l2421 1316                        l2413 12DE  
                      l2405 12AC                        l3029 2FA8                        l3037 2FC8  
                      l3221 1016                        l3213 0F54                        l3205 0F32  
                      l3133 0B00                        l3141 0B7C                        l3125 0A3E  
                      l3117 09BE                        l3061 0840                        l3311 2EF6  
                      l3039 31EC                        l3047 3090                        l3303 269A  
                      l2511 1534                        l2503 14EC                        l2431 132A  
                      l2423 131A                        l2407 12BC                        l2415 12E6  
                      l3231 1048                        l3223 1026                        l3215 0FCC  
                      l3207 0F3A                        l3151 0BE2                        l3143 0BB6  
                      l3135 0B34                        l3127 0A7C                        l3071 088A  
                      l3063 0844                        l3055 081C                        l3321 2F2A  
                      l3313 2EFE                        l2601 1B3C                        l3049 30B2  
                      l2521 1570                        l2513 1544                        l2505 14EE  
                      l2441 133E                        l2433 132E                        l2425 131E  
                      l2417 12F6                        l2409 12CC                        l2361 2AA0  
                      l3241 107C                        l3233 104C                        l3225 102A  
                      l3217 0FEC                        l3209 0F40                        l3161 0C30  
                      l3153 0BE6                        l3145 0BC6                        l3137 0B3C  
                      l3129 0AAE                        l3081 08D8                        l3073 089A  
                      l3065 0868                        l3057 0822                        l3323 2F38  
                      l3315 2F0C                        l3411 326C                        l2611 1B6C  
                      l2603 1B4C                        l2531 159C                        l2523 1572  
                      l2507 14FE                        l2451 1352                        l2443 1342  
                      l2435 1332                        l2427 1322                        l2419 1308  
                      l2371 2B22                        l2363 2AB2                        l3251 111A  
                      l3243 1080                        l3235 1052                        l3227 1030  
                      l3219 1008                        l3171 0CC8                        l3155 0BF8  
                      l3163 0C38                        l3147 0BD2                        l3091 0914  
                      l3083 08EA                        l3075 08A6                        l3067 0872  
                      l3059 0832                        l3331 1EDA                        l3501 3154  
                      l3317 2F14                        l3309 2EE8                        l3413 326E  
                      l3421 31C4                        l2701 1DE0                        l2621 1BA2  
                      l2613 1B72                        l2605 1B4E                        l2541 15D4  
                      l2525 1580                        l2517 1558                        l2533 159E  
                      l2509 150E                        l2461 13B0                        l2445 1346  
                      l2437 1336                        l2429 1326                        l2453 1356  
                      l2381 1232                        l2365 2AC4                        l3261 1170  
                      l3245 1086                        l3229 1038                        l3237 1058  
                      l3253 111E                        l3181 0DAC                        l3173 0D20  
                      l3165 0C40                        l3157 0C06                        l3149 0BDA  
                      l3093 091E                        l3085 08EE                        l3077 08AE  
                      l3069 087A                        l3341 1F3C                        l3333 1EDE  
                      l3325 1E9A                        l3511 3176                        l3503 315E  
                      l3319 2F22                        l3415 327E                        l3407 3264  
                      l3431 31DE                        l3423 31CC                        l2711 1E58  
                      l2703 1E0A                        l2631 1BE2                        l2623 1BB2  
                      l2615 1B80                        l2607 1B56                        l2551 1652  
                      l2527 1588                        l2519 1562                        l2535 15AC  
                      l2471 13E6                        l2463 13C6                        l2455 135A  
                      l2447 134A                        l2439 133A                        l2383 1242  
                      l2391 126C                        l2375 1216                        l2367 2ACE  
                      l3271 11EC                        l3263 11A0                        l3255 113C  
                      l3247 10DE                        l3239 106A                        l3191 0E46  
                      l3183 0DDE                        l3175 0D54                        l3167 0C50  
                      l3159 0C1E                        l3087 08F4                        l3079 08B2  
                      l3343 1F76                        l3335 1F02                        l3351 1FDC  
                      l3327 1EBE                        l3513 3178                        l3505 3160  
                      l3409 3266                        l3521 2DC2                        l3433 31E0  
                      l3425 31CE                        l3417 31B6                        l2721 1E8E  
                      l2713 1E74                        l2705 1E0E                        l2633 1BF2  
                      l2641 1C12                        l2625 1BB4                        l2617 1B82  
                      l2609 1B66                        l3441 23E2                        l2801 18CE  
                      l2561 1698                        l2545 15FE                        l2553 1654  
                      l2537 15B0                        l2529 158C                        l2481 1436  
                      l2473 13F0                        l2465 13D2                        l2457 1384  
                      l2449 134E                        l2393 127C                        l2385 1252  
                      l2377 1222                        l2369 2AEC                        l3273 11F4  
                      l3265 11AE                        l3257 1158                        l3249 1112  
                      l3193 0E7A                        l3185 0DF4                        l3169 0C64  
                      l3177 0D5A                        l3089 08FC                        l3097 093E  
                      l3353 1FEC                        l3345 1F96                        l3337 1F0A  
                      l3329 1ECC                        l3601 2C82                        l3507 3162  
                      l3531 2DF4                        l3523 2DD2                        l3515 2DA6  
                      l3435 31E8                        l3427 31D6                        l3419 31C2  
                      l2715 1E78                        l2707 1E28                        l2651 1C50  
                      l2643 1C22                        l2635 1BFA                        l2619 1B92  
                      l2627 1BBC                        l3451 245A                        l3443 2428  
                      l3291 25EE                        l3283 258E                        l2811 1976  
                      l2803 18EA                        l2731 16E2                        l2571 16C2  
                      l2563 16A6                        l2555 1664                        l2547 160A  
                      l2539 15BE                        l2491 1472                        l2483 1446  
                      l2475 1412                        l2467 13D6                        l2459 13A0  
                      l2395 1282                        l2387 1262                        l2379 1230  
                      l3267 11C6                        l3259 1160                        l3195 0ED0  
                      l3187 0E26                        l3179 0D78                        l3099 0964  
                      l3355 1FFE                        l3363 2016                        l3339 1F18  
                      l3603 2C8E                        l3509 3164                        l3541 2E12  
                      l3533 2DFA                        l3525 2DD8                        l3517 2DAC  
                      l3429 31D8                        l2717 1E86                        l2709 1E3E  
                      l2661 1C98                        l2653 1C60                        l2645 1C22  
                      l2637 1BFE                        l2629 1BCC                        l3461 24E2  
                      l3453 2466                        l3445 243E                        l3437 23C4  
                      l3293 2622                        l3285 25AA                        l3277 2576  
                      l2821 19B2                        l2813 1980                        l2805 1914  
                      l2741 1722                        l2733 16F0                        l2573 16C4  
                      l2565 16AC                        l2557 1674                        l2549 1618  
                      l2493 1480                        l2485 1454                        l2477 1422  
                      l2469 13E4                        l2397 1294                        l2389 1264  
                      l2581 30DC                        l3269 11D6                        l3197 0ED6  
                      l3189 0E36                        l3373 20D0                        l3357 2006  
                      l3365 2048                        l3349 1FA4                        l3543 3296  
                      l3535 2E00                        l3527 2DE8                        l3519 2DBC  
                      l3551 2EAA                        l2719 1E8C                        l2671 1CE6  
                      l2663 1CAC                        l2655 1C70                        l2591 1B00  
                      l3471 2520                        l3463 24EE                        l3455 2498  
                      l3439 23D4                        l3287 25DE                        l3279 258A  
                      l2831 1A24                        l2823 19C0                        l2815 198E  
                      l2807 194A                        l2751 1752                        l2743 1728  
                      l2735 16F2                        l2903 317C                        l2567 16AE  
                      l2559 1694                        l2495 1482                        l2487 1462  
                      l2399 1296                        l2911 26C0                        l2583 30E0  
                      l3199 0F0A                        l3383 2148                        l3375 20FA  
                      l3367 2068                        l3359 200E                        l3537 2E06  
                      l3529 2DEE                        l3553 2EB4                        l3545 2E82  
                      l3561 2CAE                        l2681 1D2E                        l2673 1CF6  
                      l2665 1CBA                        l2657 1C80                        l2649 1C36  
                      l2593 1B0C                        l3473 2544                        l3465 24FC  
                      l3457 249A                        l3449 2452                        l2585 3218  
                      l3289 25E6                        l2841 1A8E                        l2833 1A32  
                      l2825 19EE                        l2817 19A0                        l2809 1958  
                      l2761 178A                        l2753 1754                        l2745 1738  
                      l2737 1702                        l2729 16D6                        l2905 3192  
                      l2569 16B4                        l2497 148C                        l2489 146E  
                      l2921 2716                        l2913 26D6                        l2577 30BE  
                      l3377 211A                        l3369 209C                        l3385 2174  
                      l3539 2E0C                        l3555 2EC6                        l3547 2E92  
                      l3563 2CBA                        l2691 1D6E                        l2683 1D3C  
                      l2675 1D08                        l2667 1CC6                        l2659 1C88  
                      l2595 1B1A                        l3475 2554                        l3467 251A  
                      l3459 24A6                        l3571 2A08                        l2587 3234  
                      l3299 2658                        l2851 1AE4                        l2843 1AA8  
                      l2835 1A5C                        l2819 19AE                        l2771 17DA  
                      l2763 17AA                        l2755 1764                        l2747 173E  
                      l2739 1712                        l2907 31A2                        l2499 1492  
                      l2923 2726                        l2579 30CA                        l3483 2FE4  
                      l3493 32A4                        l3557 2ED8                        l3549 2EA4  
                      l3565 2CEA                        l2693 1D9C                        l2677 1D1E  
                      l2685 1D4E                        l2669 1CE4                        l2597 1B1C  
                      l3477 2562                        l3469 251C                        l3573 2A8E  
                      l2845 1AC4                        l2853 1AEA                        l2829 1A18  
                      l2837 1A60                        l2781 182A                        l2773 17E4  
                      l2765 17BA                        l2757 1774                        l2749 1744  
                      l2861 3042                        l2933 2750                        l2925 272A  
                      l2917 26EA                        l3389 2186                        l3485 2FF0  
                      l3581 2F5C                        ?_pad 0011                        l3495 3282  
                      l3559 2EDE                        l3567 2CEE                        l2687 1D5C  
                      l2679 1D24                        l2599 1B2C                        l3479 2564  
                      l2871 2BD6                        l2855 1AEE                        l2847 1AD4  
                      l2839 1A7A                        l2791 186C                        l2783 1836  
                      l2775 17FA                        l2759 1784                        l2951 27B4  
                      l2943 2778                        l2935 275A                        l2927 2738  
                      l2919 2714                        l3487 300C                        l3583 2F64  
                      l3591 2C28                        l3497 3142                        l2697 1DC6  
                      l2689 1D60                        l3569 29C8                        l2873 2BE6  
                      l2865 2B6A                        l2881 27C6                        l2849 1AE2  
                      l2793 187C                        l2785 1844                        l2777 1806  
                      l2769 17CE                        l2945 2784                        l2937 2764  
                      l2961 2D5A                        l3489 3028                        l3585 2F80  
                      l3577 2F42                        l3593 2C32                        l3499 3148  
                      l2699 1DD2                        l2875 2C0A                        l2867 2B98  
                      l2891 2850                        l2883 27F4                        l2795 1896  
                      l2787 1850                        l2779 181E                        l2859 3032  
                      l2947 2794                        l2971 28EA                        l2963 2D6E  
                      l2955 2D2C                        l3691 20E4                        l3579 2F54  
                      l3595 2C3E                        l2877 2C10                        l2869 2BA8  
                      l2893 2862                        l2885 2804                        l2797 18A6  
                      l2789 1860                        l2949 27A4                        l2973 2928  
                      l2981 2968                        l2965 2D72                        l2957 2D3A  
                      l3693 2166                        l3597 2C52                        l3589 2C14  
                      l3695 260C                        l2895 2870                        l2887 2832  
                      l2799 18C2                        l2983 297A                        l2975 2950  
                      l2967 2D90                        l2959 2D46                        l2991 3102  
                      l3599 2C78                        l2897 28C0                        l2889 2842  
                      l2977 295C                        l2969 28CA                        l2993 3112  
                      l3689 202A                        l2899 28C6                        l2987 29BE  
                      l2995 2E1A                        l2997 2E38                        l2999 21B0  
                      STR_1 0801                        STR_2 080D                        STR_3 0812  
                      STR_6 0816                        u2000 12AA                        u2001 12A6  
                      u2010 12BC                        u2011 12B8                        u2100 1404  
                      u2020 12CC                        u2101 1400                        u2021 12C8  
                      u2110 1412                        u2030 1308                        u2111 140E  
                      u2031 1304                        u2200 1570                        u2120 1422  
                      u2040 1316                        u2201 156C                        u2121 141E  
                      u2041 1312                        u2210 1580                        u2130 1454  
                      u2050 1384                        u3010 29B4                        u2211 157C  
                      u2131 1450                        u2051 1380                        u3011 29AE  
                      u2300 1664                        u2220 159C                        u2140 1462  
                      u2060 139C                        u3020 29B6                        u3100 22D8  
                      u2301 1660                        u2221 1598                        u2141 145E  
                      u2061 1396                        u3005 298C                        u2310 1674  
                      u2230 15AC                        u2150 1480                        u2070 139E  
                      u3110 22F4                        u3030 3140                        u2311 1670  
                      u2231 15A8                        u2151 147C                        u3111 22F0  
                      u3031 313C                        u2400 1B92                        u2320 1694  
                      u2240 15BE                        u2160 14B8                        u2080 13C6  
                      u3120 2348                        u3040 2E38                        u3200 0840  
                      _LATD 000F8C                        u2401 1B8E                        u2321 1690  
                      u2241 15BA                        u2161 14B4                        u2081 13C2  
                      u3105 22CE                        u3041 2E34                        u3201 083C  
                      u2410 1BA2                        u2330 16A6                        u2250 15D4  
                      u2170 14FE                        u2090 13E4                        u3130 2364  
                      u3050 21F8                        u3210 088A                        u2411 1B9E  
                      u2331 16A2                        u2251 15D0                        u2171 14FA  
                      u2091 13E0                        u3131 2360                        u3211 0886  
                      u2500 1D5C                        u2420 1BE2                        u2340 16C2  
                      u2260 15EA                        u2180 1534                        u3140 23A0  
                      u3060 2226                        u3300 0AEC                        u3220 089A  
                      u2501 1D58                        u2421 1BDE                        u2341 16BE  
                      u2261 15E6                        u2181 1530                        u3141 239C  
                      u3125 233E                        u3061 2222                        u3301 0AE8  
                      u3221 0896                        u2510 1D6E                        u2430 1C22  
                      u2270 15FE                        u2190 1544                        u3070 2248  
                      u3150 2FE2                        u2350 3100                        u3310 0B78  
                      u3230 08D8                        u2511 1D6A                        u2431 1C1E  
                      u2271 15FA                        u2191 1540                        u3071 2244  
                      u3055 21EE                        u3151 2FDE                        u2351 30FC  
                      u3311 0B74                        u3231 08D4                        u2520 1D9C  
                      u2440 1C98                        u2360 1B1A                        u3160 3210  
                      u2600 1702                        u2280 1618                        u3400 0E36  
                      u3320 0BAE                        u3240 08EA                        u2521 1D98  
                      u2441 1C94                        u2361 1B16                        u3161 320A  
                      u2601 16FE                        u2281 1614                        u3401 0E32  
                      u3321 0BAA                        u3241 08E6                        u2530 1DB2  
                      u2450 1CBA                        u2370 1B2C                        u3170 3212  
                      u2610 1712                        u2290 1652                        u3090 22B4  
                      u3410 0ED0                        u3330 0BC6                        u3250 0964  
                      u2531 1DAE                        u2451 1CB6                        u2371 1B28  
                      u2611 170E                        u2291 164E                        u3091 22B0  
                      u3411 0ECC                        u3331 0BC2                        u3251 0960  
                      u2540 1DC6                        u2460 1CE4                        u2380 1B3C  
                      u3180 3090                        u2700 19C0                        u2620 1752  
                      u3500 11C2                        u3420 0F1E                        u3340 0BF8  
                      u3260 0976                        u2541 1DC2                        u2461 1CE0  
                      u2381 1B38                        u3181 308C                        u2701 19BC  
                      u2621 174E                        u3085 225C                        u3421 0F1A  
                      u3341 0BF4                        u3261 0972                        u2550 1DE0  
                      u2470 1D08                        u2390 1B80                        u3190 30B2  
                      u2710 19EE                        u2630 1764                        u3086 2266  
                      u3510 11D6                        u3430 0FCC                        u3350 0C06  
                      u3270 09F0                        u2551 1DDC                        u2471 1D04  
                      u2391 1B7C                        u3191 30AE                        u2711 19EA  
                      u2631 1760                        u3087 2276                        u3511 11D2  
                      u3431 0FC8                        u3351 0C02                        u3271 09EC  
                      u2560 1E28                        u2480 1D1E                        u3520 25AA  
                      u2800 2C0A                        u2720 1A04                        u2640 1774  
                      u1920 2AB2                        u3440 1008                        u3360 0C30  
                      u3280 0A7C                        u3600 1EBE                        u2561 1E24  
                      u2481 1D1A                        u3521 25A6                        u2801 2C06  
                      u2721 1A00                        u2641 1770                        u1921 2AAE  
                      u3441 1004                        u3361 0C2C                        u3281 0A78  
                      u3601 1EBA                        u2570 1E58                        u2490 1D3C  
                      u3530 25DA                        u2810 27F4                        u2730 1A18  
                      u2650 17AA                        u1930 2AC4                        u3450 1016  
                      u3370 0D78                        u3290 0AAE                        u3610 1F02  
                      u2571 1E54                        u2491 1D38                        u3531 25D6  
                      u2811 27F0                        u2731 1A14                        u2651 17A6  
                      u1931 2AC0                        u3451 1012                        u3371 0D74  
                      u3291 0AAA                        u3611 1EFE                        u2580 1E86  
                      u3700 24FC                        u3540 2688                        u2820 2832  
                      u2740 1A32                        u2660 17BA                        u2900 274C  
                      u1940 2AEC                        u3460 106A                        u3380 0DDE  
                      u3620 1F3C                        u2581 1E82                        u3701 24F8  
                      u3541 2684                        u2821 282E                        u2741 1A2E  
                      u2661 17B6                        u2901 2748                        u1941 2AE8  
                      u3461 1066                        u3381 0DDA                        u3621 1F38  
                      u3710 250C                        u3550 269A                        u2830 2850  
                      u2750 1A7A                        u2670 1934                        u2590 16F0  
                      u2910 2774                        u1950 2B22                        u3470 113C  
                      u3390 0E26                        u3630 1FDC                        u3711 2508  
                      u3551 2696                        u2831 284C                        u2751 1A76  
                      u2591 16EC                        u2911 2770                        u1951 2B1E  
                      u3471 1138                        u3391 0E22                        u3631 1FD8  
                      u3560 2EF6                        u3800 2D2A                        u3720 251A  
                      u2840 2870                        u2760 1AA8                        u2680 198E  
                      u1960 1230                        u2920 2794                        u3480 1158  
                      u3640 2064                        u3561 2EF2                        u3801 2D26  
                      u3721 2516                        u2841 286C                        u2761 1AA4  
                      u2681 198A                        u1961 122C                        u2921 2790  
                      u3481 1154                        u3641 2060                        u3570 2F0C  
                      u3730 2554                        u3650 23D4                        u3810 29E6  
                      u2850 28C0                        u2770 1AE2                        u2690 19AE  
                      u1970 1242                        u2930 27A4                        u3490 11C0  
                      u3571 2F08                        u3731 2550                        u3651 23D0  
                      u3811 29E2                        u2851 28BC                        u2771 1ADE  
                      u2691 19AA                        u2675 192A                        u1971 123E  
                      u2931 27A0                        u3491 11BA                        u3580 2F22  
                      u3740 2562                        u3660 23E2                        u3820 29FE  
                      u2780 2B98                        u2860 3192                        u1980 1252  
                      u2940 2D3A                        u3581 2F1E                        u3741 255E  
                      u3661 23DE                        u3821 29FA                        u2781 2B94  
                      u2861 318E                        u1981 124E                        u2941 2D36  
                      u3590 2F38                        u3670 243E                        u2790 2BD6  
                      u1990 1294                        u2870 26D6                        u2950 2D90  
                      u3750 3028                        u3591 2F34                        u3671 243A  
                      u2791 2BD2                        u1991 1290                        u2871 26D2  
                      u2951 2D8C                        u3751 3024                        u3760 2E92  
                      u3680 2494                        u2880 270A                        u2960 290A  
                      u3761 2E8E                        u3681 2490                        u3770 2EC6  
                      u3690 24DE                        u2890 2738                        u2970 2928  
                      u3771 2EC2                        u3691 24DA                        u2891 2734  
                      u2971 2924                        u3780 2CE6                        u2980 2950  
                      u2885 2700                        u2981 294C                        u2965 2900  
                      u3837 2C9A                        u3790 2D1A                        u2990 297A  
                      u3847 31D0                        u2991 2976                        u3857 31E2  
                      u3867 2DB2                        u3787 2CDC                        u3877 2DC8  
                      u3797 2D10                        u3887 2DDE                        u3897 3274  
                      _TMR1 000FCE           ?_Lcd_Write_String 0005                        _dbuf 0100  
                      _labs 2E1A                        _atoi 2576                        _main 2C14  
                      _prec 00B3                        pad@i 0018                        pad@p 0015  
                      fsr1h 000FE2                        fsr2h 000FDA                        indf1 000FE7  
                      indf2 000FDF                        fsr1l 000FE1                        pad@w 001A  
                      fsr2l 000FD9               ___fpclassifyf 28CA                        prodh 000FF4  
                      prodl 000FF3                        start 0000          ??_Lcd_Write_String 0007  
           ___fldiv@new_exp 0020             __end_of_Lcd_Cmd 3282                ___param_bank 000000  
       __end_of_Config_Port 3296                       ??_pad 0017               ?_Read_Captura 0028  
             ___fltol@sign1 0009                       ?_labs 0001                       ?_atoi 0007  
           __end_of___fladd 16D6                       ?_main 0001             __end_of___fldiv 1E9A  
           __end_of___flneg 31B4                       _CCPR1 000FBE             __end_of___flmul 1B00  
           __end_of___flsub 3078             __end_of___fltol 27C6                vfpfcnvrt@fmt 0047  
                     _TRISD 000F95                       _flags 005F                       _fputc 2AA0  
                     _fputs 30BE             __end_of_isdigit 3218                       labs@a 0001  
                     atoi@n 000E                       pad@fp 0011                       atoi@s 0007  
                     _width 00B1                       _putch 32B2             __end_of_isspace 30BE  
                     tablat 000FF5                       status 000FD8             __end_of_sprintf 2F94  
            ?___fpclassifyf 0001            __end_of_Lcd_Init 2E1A            __end_of_Lcd_Port 2F42  
           __initialization 323E        __end_of_Config_Clock 32B2                __end_of_labs 2E80  
              __end_of_atoi 26C0                __end_of_main 2CAE              ??_Read_Captura 002C  
        _Config_CCP_Captura 3142                      ??_labs 0005                      ??_atoi 0009  
                    ??_main 00A3               __activetblptr 000002         ?_Config_CCP_Captura 0001  
                    ?_fputc 0001                      ?_fputs 000A                      ?_putch 0001  
                    _ANSELD 000F5E                   ??_Lcd_Cmd 0002                      _SLRCON 000F7A  
               _Config_Port 3282            __end_of___xxtofl 2576        ??_Config_CCP_Captura 0001  
              vfprintf@cfmt 008C                      ___flge 27C6                      ___fleq 2B6A  
                 ??___fladd 0009                      ___wmul 3218                   ??___fldiv 0017  
                 ??___flneg 0005                   ??___flmul 0009                   ??___flsub 0022  
                 ??___fltol 0005                      _efgtoa 081C                      _floorf 21B0  
                    _memcpy 2F94                      clear_0 3244                      clear_1 3250  
                    isa$std 000001                      pad@buf 0013                      _strcpy 3102  
                    fputc@c 0001                      fputs@c 000E                      fputs@i 000F  
                    fputs@s 000A                   ??_isdigit 0003             ___fpclassifyf@e 0009  
           ___fpclassifyf@u 000B             ___fpclassifyf@x 0001                __mediumconst 0000  
                 ??_isspace 0003                      tblptrh 000FF7                      tblptrl 000FF6  
                    tblptru 000FF8                      putch@c 0001            __end_of_vfprintf 3032  
                 ??_sprintf 005F             Lcd_Set_Cursor@a 0005             Lcd_Set_Cursor@b 0004  
           Lcd_Set_Cursor@y 0007             Lcd_Set_Cursor@z 0006                  ___flge@ff1 001A  
                ___flge@ff2 001E             ??___fpclassifyf 0005                ___xxtofl@arg 000B  
              ___xxtofl@exp 000A                ___xxtofl@val 0001                  ___fleq@ff1 0001  
                ___fleq@ff2 0005                  __accesstop 0060     __end_of__initialization 3258  
                ___flneg@f1 0001           __end_of_Lcd_Clear 32A4               ___rparam_used 000001  
                ___fltol@f1 0001              __pcstackCOMRAM 0001               __end_of_fputc 2B6A  
             __end_of_fputs 3102               __end_of_putch 32B4              _Lcd_Set_Cursor 2E80  
                 ?_Lcd_Init 0001                   ?_Lcd_Port 0001                     ??_fputc 0005  
                   ??_fputs 000E                     ??_putch 0001        __end_of_Read_Captura 2AA0  
                __pbssBANK0 00A5                  __pbssBANK1 0100                     ?___flge 001A  
                   ?___fleq 0001                     ?___wmul 0001                     ?_efgtoa 003C  
                   ?_floorf 0028                     ?_memcpy 0001      __end_of_Lcd_Set_Cursor 2EE6  
                   ?_strcpy 0001                   ?___xxtofl 0001                  ??_Lcd_Init 0004  
              _Config_Clock 32A4                  ??_Lcd_Port 0001              _Lcd_Write_Char 31B4  
                   _Lcd_Cmd 3262                     __Hparam 0000                     __Lparam 0000  
                   ___fladd 1216                     ___fldiv 1B00                     ___flneg 317C  
                   ___flmul 16D6                     ___flsub 3032                     ___fltol 26C0  
                 ?_vfprintf 0059                __psmallconst 0800                     __pcinit 323E  
                   __ramtop 0800             ?_Lcd_Set_Cursor 0004                     __ptext0 2C14  
                   __ptext1 2F42                     __ptext2 2FE4                     __ptext3 1E9A  
                   __ptext4 081C                     __ptext5 3102                     __ptext6 2D2C  
                   __ptext7 30BE                     __ptext8 2AA0                     __ptext9 32B2  
                 _T1CONbits 000FCD                     _isdigit 31EC                  ??___xxtofl 0005  
                   _isspace 3078                     efgtoa@c 0042                     efgtoa@d 006B  
                   efgtoa@e 006F                     efgtoa@f 003E                     efgtoa@g 0084  
                   efgtoa@h 0079                     efgtoa@i 0077                     efgtoa@l 007D  
                   efgtoa@m 006D                     efgtoa@n 0082                     efgtoa@p 0062  
                   efgtoa@t 0064                     efgtoa@u 0088                     efgtoa@w 0071  
                   atoi@neg 000C                     _sprintf 2F42      __end_of_Lcd_Write_Char 31EC  
      end_of_initialization 3258                     floorf@e 0036                     floorf@m 0032  
                   floorf@u 0038                     floorf@x 0028                     memcpy@d 0007  
                   memcpy@n 0005                     memcpy@s 0009                     fputc@fp 0003  
             __Lmediumconst 0000                ?_Config_Port 0001                     fputs@fp 000C  
         __end_of_vfpfcnvrt 21B0                  efgtoa@mode 0069                  efgtoa@sign 0081  
                   postdec2 000FDD                     postinc0 000FEE                     postinc1 000FE6  
                   postinc2 000FDE            vfpfcnvrt@convarg 004E                   Lcd_Port@a 0001  
                ??_vfprintf 005F                     strcpy@d 0007                     strcpy@s 0005  
               ___fladd@grs 0010               ___xxtofl@sign 0009                   _TRISCbits 000F94  
               ___fldiv@grs 0022                 ___fldiv@rem 001B             ?_Lcd_Write_Char 0001  
         Lcd_Write_String@a 0005           Lcd_Write_String@i 0009                 ___flmul@grs 000E  
               _CCP1CONbits 000FBD                  _str_buffer 00B5                   _Lcd_Clear 3296  
            __end_of___flge 28CA              __end_of___fleq 2C14                _Read_Captura 29C8  
               vfpfcnvrt@ap 0049                 vfpfcnvrt@cp 0057                 vfpfcnvrt@fp 0045  
            __end_of___wmul 323E            _Lcd_Write_String 2CAE              __end_of_efgtoa 1216  
            __end_of_floorf 23C2              __end_of_memcpy 2FE4                  floorf@F526 00A5  
            __end_of_strcpy 3142         start_initialization 323E                 __end_of_pad 2DA6  
Read_Captura@flanco_inicial 0036       __end_of___fpclassifyf 29C8                 vfprintf@fmt 005B  
                ?_Lcd_Clear 0001                    ??___flge 0022                    ??___fleq 0009  
                  ??___wmul 0005                 _CCPTMRSbits 000F59                    ??_efgtoa 0043  
                  ??_floorf 002C                    ??_memcpy 0007             Lcd_Write_Char@a 0004  
           Lcd_Write_Char@y 0003                    ??_strcpy 0005                   ___fladd@a 0005  
                 ___fladd@b 0001                   ___fldiv@a 0013                   ___fldiv@b 000F  
                 ___flmul@a 0005                   ___flmul@b 0001                 __pbssCOMRAM 005F  
                 ___flsub@a 001E                   ___flsub@b 001A               __pcstackBANK0 0060  
                  ?_Lcd_Cmd 0001                 _efgtoa$1026 0066            ??_Lcd_Set_Cursor 0005  
                  ?___fladd 0001                    ?___fldiv 000F                    ?___flneg 0001  
                  ?___flmul 0001                    ?___flsub 001A                    ?___fltol 0001  
               __smallconst 0800                    ?_isdigit 0001                   _frecuency 00AD  
                  ?_isspace 0001                    ?_sprintf 008E              ___wmul@product 0005  
                  _LATDbits 000F8C                    Lcd_Cmd@a 0003                    _PIR1bits 000F9E  
               ??_Lcd_Clear 0004      Read_Captura@frecuencia 002E                   _vfpfcnvrt 1E9A  
         ___wmul@multiplier 0001            ??_Lcd_Write_Char 0002                _isspace$1104 0005  
                  _Lcd_Init 2DA6                    _Lcd_Port 2EE6                  vfpfcnvrt@c 0056  
  __end_of_Lcd_Write_String 2D2C                    __Hrparam 0000                   memcpy@tmp 000B  
                vfprintf@ap 005D                    __Lrparam 0000                  vfprintf@fp 0059  
                ?_vfpfcnvrt 0045                  _ANSELCbits 000F5D          ___fpclassifyf@F465 00A9  
                sprintf@fmt 0090                    ___xxtofl 23C2                    __ptext10 2F94  
                  __ptext11 2E1A                    __ptext20 2B6A                    __ptext12 21B0  
                  __ptext21 2576                    __ptext13 28CA                    __ptext30 2E80  
                  __ptext22 3078                    __ptext14 26C0                    __ptext31 2DA6  
                  __ptext23 31EC                    __ptext15 3032                    __ptext32 3296  
                  __ptext24 3218                    __ptext16 1216                    __ptext33 3262  
                  __ptext25 29C8                    __ptext17 317C                    __ptext34 2EE6  
                  __ptext26 23C2                    __ptext18 16D6                    __ptext35 3282  
                  __ptext27 1B00                    __ptext19 27C6                    __ptext36 32A4  
                  __ptext28 2CAE                    __ptext37 3142                    __ptext29 31B4  
                strcpy@dest 0001    Read_Captura@flanco_final 0038         Read_Captura@periodo 0032  
__end_of_Config_CCP_Captura 317C                    efgtoa@fp 003C                    efgtoa@ne 0060  
                  efgtoa@pp 0068                    efgtoa@ou 0073                    isa$xinst 000000  
                  _vfprintf 2FE4                    memcpy@d1 0001                    memcpy@s1 0003  
             ?_Config_Clock 0001                    isdigit@c 0001          Lcd_Write_Char@temp 0002  
                 sprintf@ap 0096                    isspace@c 0001                   strcpy@src 0003  
                _OSCCONbits 000FD3                 efgtoa@nmode 006A                 ??_vfpfcnvrt 004B  
        Lcd_Set_Cursor@temp 0008                    sprintf@f 0098                    sprintf@s 008E  
            ??_Config_Clock 0001               ___fladd@signs 000D               ??_Config_Port 0001  
              ___fladd@aexp 000E                ___fladd@bexp 000F  
