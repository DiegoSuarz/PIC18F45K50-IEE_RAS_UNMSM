

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Aug 02 18:38:51 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    16   000000                     
    17                           ; Version 2.35
    18                           ; Generated 05/05/2021 GMT
    19                           ; 
    20                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F45K50 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52   000000                     _CCPTMRSbits	set	3929
    53   000000                     _ANSELBbits	set	3932
    54   000000                     _SLRCON	set	3962
    55   000000                     _PIR1bits	set	3998
    56   000000                     _TMR1	set	4046
    57   000000                     _CCP1CONbits	set	4029
    58   000000                     _OSCCONbits	set	4051
    59   000000                     _CCPR1	set	4030
    60   000000                     _T1CONbits	set	4045
    61   000000                     _TRISCbits	set	3988
    62   000000                     _CCP2CONbits	set	3991
    63                           
    64                           ; #config settings
    65                           
    66                           	psect	cinit
    67   007F44                     __pcinit:
    68                           	callstack 0
    69   007F44                     start_initialization:
    70                           	callstack 0
    71   007F44                     __initialization:
    72                           	callstack 0
    73   007F44                     end_of_initialization:
    74                           	callstack 0
    75   007F44                     __end_of__initialization:
    76                           	callstack 0
    77   007F44  0100               	movlb	0
    78   007F46  EFAC  F03F         	goto	_main	;jump to C main() function
    79                           
    80                           	psect	cstackCOMRAM
    81   000001                     __pcstackCOMRAM:
    82                           	callstack 0
    83   000001                     dutyCycle@frec:
    84                           	callstack 0
    85                           
    86                           ; 2 bytes @ 0x0
    87   000001                     	ds	2
    88   000003                     dutyCycle@duty:
    89                           	callstack 0
    90                           
    91                           ; 1 bytes @ 0x2
    92   000003                     	ds	1
    93   000004                     
    94                           ; 1 bytes @ 0x3
    95 ;;
    96 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    97 ;;
    98 ;; *************** function _main *****************
    99 ;; Defined at:
   100 ;;		line 20 in file "main.c"
   101 ;; Parameters:    Size  Location     Type
   102 ;;		None
   103 ;; Auto vars:     Size  Location     Type
   104 ;;		None
   105 ;; Return value:  Size  Location     Type
   106 ;;                  1    wreg      void 
   107 ;; Registers used:
   108 ;;		wreg, status,2, cstack
   109 ;; Tracked objects:
   110 ;;		On entry : 0/0
   111 ;;		On exit  : 0/0
   112 ;;		Unchanged: 0/0
   113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   114 ;;      Params:         0       0       0       0       0       0       0       0       0
   115 ;;      Locals:         0       0       0       0       0       0       0       0       0
   116 ;;      Temps:          0       0       0       0       0       0       0       0       0
   117 ;;      Totals:         0       0       0       0       0       0       0       0       0
   118 ;;Total ram usage:        0 bytes
   119 ;; Hardware stack levels required when called: 1
   120 ;; This function calls:
   121 ;;		_Config_CCP_Compara
   122 ;;		_Config_Clock
   123 ;;		_Config_Port
   124 ;;		_dutyCycle
   125 ;; This function is called by:
   126 ;;		Startup code after reset
   127 ;; This function uses a non-reentrant model
   128 ;;
   129                           
   130                           	psect	text0
   131   007F58                     __ptext0:
   132                           	callstack 0
   133   007F58                     _main:
   134                           	callstack 30
   135   007F58                     
   136                           ;main.c: 21:     Config_Clock();
   137   007F58  ECA5  F03F         	call	_Config_Clock	;wreg free
   138                           
   139                           ;main.c: 22:     Config_Port();
   140   007F5C  EC9F  F03F         	call	_Config_Port	;wreg free
   141                           
   142                           ;main.c: 23:     Config_CCP_Compara();
   143   007F60  ECBE  F03F         	call	_Config_CCP_Compara	;wreg free
   144   007F64                     l35:
   145                           
   146                           ;main.c: 25:         dutyCycle(1000,80);
   147   007F64  0E03               	movlw	3
   148   007F66  6E02               	movwf	(dutyCycle@frec+1)^0,c
   149   007F68  0EE8               	movlw	232
   150   007F6A  6E01               	movwf	dutyCycle@frec^0,c
   151   007F6C  0E50               	movlw	80
   152   007F6E  6E03               	movwf	dutyCycle@duty^0,c
   153   007F70  ECD7  F03F         	call	_dutyCycle	;wreg free
   154   007F74  EFB2  F03F         	goto	l35
   155   007F78  EF00  F000         	goto	start
   156   007F7C                     __end_of_main:
   157                           	callstack 0
   158                           
   159 ;; *************** function _dutyCycle *****************
   160 ;; Defined at:
   161 ;;		line 31 in file "main.c"
   162 ;; Parameters:    Size  Location     Type
   163 ;;  frec            2    0[COMRAM] unsigned short 
   164 ;;  duty            1    2[COMRAM] unsigned char 
   165 ;; Auto vars:     Size  Location     Type
   166 ;;		None
   167 ;; Return value:  Size  Location     Type
   168 ;;                  1    wreg      void 
   169 ;; Registers used:
   170 ;;		wreg, status,2
   171 ;; Tracked objects:
   172 ;;		On entry : 0/0
   173 ;;		On exit  : 0/0
   174 ;;		Unchanged: 0/0
   175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   176 ;;      Params:         3       0       0       0       0       0       0       0       0
   177 ;;      Locals:         0       0       0       0       0       0       0       0       0
   178 ;;      Temps:          0       0       0       0       0       0       0       0       0
   179 ;;      Totals:         3       0       0       0       0       0       0       0       0
   180 ;;Total ram usage:        3 bytes
   181 ;; Hardware stack levels used: 1
   182 ;; This function calls:
   183 ;;		Nothing
   184 ;; This function is called by:
   185 ;;		_main
   186 ;; This function uses a non-reentrant model
   187 ;;
   188                           
   189                           	psect	text1
   190   007FAE                     __ptext1:
   191                           	callstack 0
   192   007FAE                     _dutyCycle:
   193                           	callstack 30
   194   007FAE                     l41:
   195   007FAE  A49E               	btfss	158,2,c	;volatile
   196   007FB0  EFDC  F03F         	goto	u31
   197   007FB4  EFDE  F03F         	goto	u30
   198   007FB8                     u31:
   199   007FB8  EFD7  F03F         	goto	l41
   200   007FBC                     u30:
   201   007FBC                     
   202                           ;main.c: 34:     PIR1bits.CCP1IF=0;
   203   007FBC  949E               	bcf	158,2,c	;volatile
   204   007FBE                     
   205                           ;main.c: 35:     TMR1=0;
   206   007FBE  0E00               	movlw	0
   207   007FC0  6ECF               	movwf	207,c	;volatile
   208   007FC2  0E00               	movlw	0
   209   007FC4  6ECE               	movwf	206,c	;volatile
   210                           
   211                           ;main.c: 36:     CCP1CONbits.CCP1M = 0b1000;
   212   007FC6  50BD               	movf	189,w,c	;volatile
   213   007FC8  0BF0               	andlw	-16
   214   007FCA  0908               	iorlw	8
   215   007FCC  6EBD               	movwf	189,c	;volatile
   216                           
   217                           ;main.c: 37:     CCPR1=(uint16_t)(((1.0/1000)*(80/100.0))*(16000000UL/4));
   218   007FCE  0E0C               	movlw	12
   219   007FD0  6EBF               	movwf	191,c	;volatile
   220   007FD2  0E80               	movlw	128
   221   007FD4  6EBE               	movwf	190,c	;volatile
   222   007FD6                     l44:
   223   007FD6  A49E               	btfss	158,2,c	;volatile
   224   007FD8  EFF0  F03F         	goto	u41
   225   007FDC  EFF2  F03F         	goto	u40
   226   007FE0                     u41:
   227   007FE0  EFEB  F03F         	goto	l44
   228   007FE4                     u40:
   229   007FE4                     
   230                           ;main.c: 41:     PIR1bits.CCP1IF=0;
   231   007FE4  949E               	bcf	158,2,c	;volatile
   232   007FE6                     
   233                           ;main.c: 42:     TMR1=0;
   234   007FE6  0E00               	movlw	0
   235   007FE8  6ECF               	movwf	207,c	;volatile
   236   007FEA  0E00               	movlw	0
   237   007FEC  6ECE               	movwf	206,c	;volatile
   238                           
   239                           ;main.c: 43:     CCP1CONbits.CCP1M = 0b1001;
   240   007FEE  50BD               	movf	189,w,c	;volatile
   241   007FF0  0BF0               	andlw	-16
   242   007FF2  0909               	iorlw	9
   243   007FF4  6EBD               	movwf	189,c	;volatile
   244                           
   245                           ;main.c: 44:     CCPR1=(uint16_t)(((1.0/1000)*((20)/100.0))*(16000000UL/4));
   246   007FF6  0E03               	movlw	3
   247   007FF8  6EBF               	movwf	191,c	;volatile
   248   007FFA  0E20               	movlw	32
   249   007FFC  6EBE               	movwf	190,c	;volatile
   250   007FFE  0012               	return		;funcret
   251   008000                     __end_of_dutyCycle:
   252                           	callstack 0
   253                           
   254 ;; *************** function _Config_Port *****************
   255 ;; Defined at:
   256 ;;		line 52 in file "main.c"
   257 ;; Parameters:    Size  Location     Type
   258 ;;		None
   259 ;; Auto vars:     Size  Location     Type
   260 ;;		None
   261 ;; Return value:  Size  Location     Type
   262 ;;                  1    wreg      void 
   263 ;; Registers used:
   264 ;;		wreg, status,2
   265 ;; Tracked objects:
   266 ;;		On entry : 0/0
   267 ;;		On exit  : 0/0
   268 ;;		Unchanged: 0/0
   269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   270 ;;      Params:         0       0       0       0       0       0       0       0       0
   271 ;;      Locals:         0       0       0       0       0       0       0       0       0
   272 ;;      Temps:          0       0       0       0       0       0       0       0       0
   273 ;;      Totals:         0       0       0       0       0       0       0       0       0
   274 ;;Total ram usage:        0 bytes
   275 ;; Hardware stack levels used: 1
   276 ;; This function calls:
   277 ;;		Nothing
   278 ;; This function is called by:
   279 ;;		_main
   280 ;; This function uses a non-reentrant model
   281 ;;
   282                           
   283                           	psect	text2
   284   007F3E                     __ptext2:
   285                           	callstack 0
   286   007F3E                     _Config_Port:
   287                           	callstack 30
   288   007F3E                     
   289                           ;main.c: 57:     SLRCON=0b00000000;
   290   007F3E  0E00               	movlw	0
   291   007F40  6E7A               	movwf	122,c	;volatile
   292   007F42  0012               	return		;funcret
   293   007F44                     __end_of_Config_Port:
   294                           	callstack 0
   295                           
   296 ;; *************** function _Config_Clock *****************
   297 ;; Defined at:
   298 ;;		line 47 in file "main.c"
   299 ;; Parameters:    Size  Location     Type
   300 ;;		None
   301 ;; Auto vars:     Size  Location     Type
   302 ;;		None
   303 ;; Return value:  Size  Location     Type
   304 ;;                  1    wreg      void 
   305 ;; Registers used:
   306 ;;		wreg, status,2
   307 ;; Tracked objects:
   308 ;;		On entry : 0/0
   309 ;;		On exit  : 0/0
   310 ;;		Unchanged: 0/0
   311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   312 ;;      Params:         0       0       0       0       0       0       0       0       0
   313 ;;      Locals:         0       0       0       0       0       0       0       0       0
   314 ;;      Temps:          0       0       0       0       0       0       0       0       0
   315 ;;      Totals:         0       0       0       0       0       0       0       0       0
   316 ;;Total ram usage:        0 bytes
   317 ;; Hardware stack levels used: 1
   318 ;; This function calls:
   319 ;;		Nothing
   320 ;; This function is called by:
   321 ;;		_main
   322 ;; This function uses a non-reentrant model
   323 ;;
   324                           
   325                           	psect	text3
   326   007F4A                     __ptext3:
   327                           	callstack 0
   328   007F4A                     _Config_Clock:
   329                           	callstack 30
   330   007F4A                     
   331                           ;main.c: 48:     OSCCONbits.IRCF=0b111;
   332   007F4A  0E70               	movlw	112
   333   007F4C  12D3               	iorwf	211,f,c	;volatile
   334                           
   335                           ;main.c: 49:     OSCCONbits.SCS=0b10;
   336   007F4E  50D3               	movf	211,w,c	;volatile
   337   007F50  0BFC               	andlw	-4
   338   007F52  0902               	iorlw	2
   339   007F54  6ED3               	movwf	211,c	;volatile
   340   007F56  0012               	return		;funcret
   341   007F58                     __end_of_Config_Clock:
   342                           	callstack 0
   343                           
   344 ;; *************** function _Config_CCP_Compara *****************
   345 ;; Defined at:
   346 ;;		line 67 in file "main.c"
   347 ;; Parameters:    Size  Location     Type
   348 ;;		None
   349 ;; Auto vars:     Size  Location     Type
   350 ;;		None
   351 ;; Return value:  Size  Location     Type
   352 ;;                  1    wreg      void 
   353 ;; Registers used:
   354 ;;		wreg, status,2
   355 ;; Tracked objects:
   356 ;;		On entry : 0/0
   357 ;;		On exit  : 0/0
   358 ;;		Unchanged: 0/0
   359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   360 ;;      Params:         0       0       0       0       0       0       0       0       0
   361 ;;      Locals:         0       0       0       0       0       0       0       0       0
   362 ;;      Temps:          0       0       0       0       0       0       0       0       0
   363 ;;      Totals:         0       0       0       0       0       0       0       0       0
   364 ;;Total ram usage:        0 bytes
   365 ;; Hardware stack levels used: 1
   366 ;; This function calls:
   367 ;;		Nothing
   368 ;; This function is called by:
   369 ;;		_main
   370 ;; This function uses a non-reentrant model
   371 ;;
   372                           
   373                           	psect	text4
   374   007F7C                     __ptext4:
   375                           	callstack 0
   376   007F7C                     _Config_CCP_Compara:
   377                           	callstack 30
   378   007F7C                     
   379                           ;main.c: 69:     ANSELBbits.ANSB2 = 0;
   380   007F7C  010F               	movlb	15	; () banked
   381   007F7E  955C               	bcf	92,2,b	;volatile
   382                           
   383                           ;main.c: 70:     TRISCbits.TRISC2 = 0;
   384   007F80  9494               	bcf	148,2,c	;volatile
   385   007F82                     
   386                           ; BSR set to: 15
   387                           ;main.c: 73:     CCP2CONbits.DC2B = 0b00;
   388   007F82  0ECF               	movlw	-49
   389   007F84  1697               	andwf	151,f,c	;volatile
   390                           
   391                           ;main.c: 74:     CCP1CONbits.CCP1M = 0b0010;
   392   007F86  50BD               	movf	189,w,c	;volatile
   393   007F88  0BF0               	andlw	-16
   394   007F8A  0902               	iorlw	2
   395   007F8C  6EBD               	movwf	189,c	;volatile
   396   007F8E                     
   397                           ; BSR set to: 15
   398                           ;main.c: 75:     CCPTMRSbits.C1TSEL = 0;
   399   007F8E  9159               	bcf	89,0,b	;volatile
   400                           
   401                           ;main.c: 78:     T1CONbits.TMR1CS = 0b00;
   402   007F90  0E3F               	movlw	-193
   403   007F92  16CD               	andwf	205,f,c	;volatile
   404                           
   405                           ;main.c: 79:     T1CONbits.T1CKPS = 0b00;
   406   007F94  0ECF               	movlw	-49
   407   007F96  16CD               	andwf	205,f,c	;volatile
   408   007F98                     
   409                           ; BSR set to: 15
   410                           ;main.c: 80:     T1CONbits.SOSCEN = 0;
   411   007F98  96CD               	bcf	205,3,c	;volatile
   412   007F9A                     
   413                           ; BSR set to: 15
   414                           ;main.c: 81:     T1CONbits.T1SYNC = 0;
   415   007F9A  94CD               	bcf	205,2,c	;volatile
   416   007F9C                     
   417                           ; BSR set to: 15
   418                           ;main.c: 82:     T1CONbits.RD16 = 1;
   419   007F9C  82CD               	bsf	205,1,c	;volatile
   420   007F9E                     
   421                           ; BSR set to: 15
   422                           ;main.c: 83:     T1CONbits.TMR1ON = 0;
   423   007F9E  90CD               	bcf	205,0,c	;volatile
   424                           
   425                           ;main.c: 96:     TMR1 = 0;
   426   007FA0  0E00               	movlw	0
   427   007FA2  6ECF               	movwf	207,c	;volatile
   428   007FA4  0E00               	movlw	0
   429   007FA6  6ECE               	movwf	206,c	;volatile
   430   007FA8                     
   431                           ; BSR set to: 15
   432                           ;main.c: 99:     PIR1bits.CCP1IF = 0;
   433   007FA8  949E               	bcf	158,2,c	;volatile
   434   007FAA                     
   435                           ; BSR set to: 15
   436                           ;main.c: 100:     T1CONbits.TMR1ON = 1;
   437   007FAA  80CD               	bsf	205,0,c	;volatile
   438   007FAC                     
   439                           ; BSR set to: 15
   440   007FAC  0012               	return		;funcret
   441   007FAE                     __end_of_Config_CCP_Compara:
   442                           	callstack 0
   443   000000                     
   444                           	psect	rparam
   445   000000                     
   446                           	psect	idloc
   447                           
   448                           ;Config register IDLOC0 @ 0x200000
   449                           ;	unspecified, using default values
   450   200000                     	org	2097152
   451   200000  FF                 	db	255
   452                           
   453                           ;Config register IDLOC1 @ 0x200001
   454                           ;	unspecified, using default values
   455   200001                     	org	2097153
   456   200001  FF                 	db	255
   457                           
   458                           ;Config register IDLOC2 @ 0x200002
   459                           ;	unspecified, using default values
   460   200002                     	org	2097154
   461   200002  FF                 	db	255
   462                           
   463                           ;Config register IDLOC3 @ 0x200003
   464                           ;	unspecified, using default values
   465   200003                     	org	2097155
   466   200003  FF                 	db	255
   467                           
   468                           ;Config register IDLOC4 @ 0x200004
   469                           ;	unspecified, using default values
   470   200004                     	org	2097156
   471   200004  FF                 	db	255
   472                           
   473                           ;Config register IDLOC5 @ 0x200005
   474                           ;	unspecified, using default values
   475   200005                     	org	2097157
   476   200005  FF                 	db	255
   477                           
   478                           ;Config register IDLOC6 @ 0x200006
   479                           ;	unspecified, using default values
   480   200006                     	org	2097158
   481   200006  FF                 	db	255
   482                           
   483                           ;Config register IDLOC7 @ 0x200007
   484                           ;	unspecified, using default values
   485   200007                     	org	2097159
   486   200007  FF                 	db	255
   487                           
   488                           	psect	config
   489                           
   490                           ;Config register CONFIG1L @ 0x300000
   491                           ;	PLL Selection
   492                           ;	PLLSEL = PLL4X, 4x clock multiplier
   493                           ;	PLL Enable Configuration bit
   494                           ;	CFGPLLEN = OFF, PLL Disabled (firmware controlled)
   495                           ;	CPU System Clock Postscaler
   496                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
   497                           ;	Low Speed USB mode with 48 MHz system clock
   498                           ;	LS48MHZ = SYS24X4, System clock at 24 MHz, USB clock divider is set to 4
   499   300000                     	org	3145728
   500   300000  00                 	db	0
   501                           
   502                           ;Config register CONFIG1H @ 0x300001
   503                           ;	Oscillator Selection
   504                           ;	FOSC = INTOSCIO, Internal oscillator
   505                           ;	Primary Oscillator Shutdown
   506                           ;	PCLKEN = ON, Primary oscillator enabled
   507                           ;	Fail-Safe Clock Monitor
   508                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   509                           ;	Internal/External Oscillator Switchover
   510                           ;	IESO = OFF, Oscillator Switchover mode disabled
   511   300001                     	org	3145729
   512   300001  28                 	db	40
   513                           
   514                           ;Config register CONFIG2L @ 0x300002
   515                           ;	Power-up Timer Enable
   516                           ;	nPWRTEN = ON, Power up timer enabled
   517                           ;	Brown-out Reset Enable
   518                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
   519                           ;	Brown-out Reset Voltage
   520                           ;	BORV = 190, BOR set to 1.9V nominal
   521                           ;	Low-Power Brown-out Reset
   522                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
   523   300002                     	org	3145730
   524   300002  5E                 	db	94
   525                           
   526                           ;Config register CONFIG2H @ 0x300003
   527                           ;	Watchdog Timer Enable bits
   528                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
   529                           ;	Watchdog Timer Postscaler
   530                           ;	WDTPS = 32768, 1:32768
   531   300003                     	org	3145731
   532   300003  3C                 	db	60
   533                           
   534                           ; Padding undefined space
   535   300004                     	org	3145732
   536   300004  FF                 	db	255
   537                           
   538                           ;Config register CONFIG3H @ 0x300005
   539                           ;	CCP2 MUX bit
   540                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
   541                           ;	PORTB A/D Enable bit
   542                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
   543                           ;	Timer3 Clock Input MUX bit
   544                           ;	T3CMX = RC0, T3CKI function is on RC0
   545                           ;	SDO Output MUX bit
   546                           ;	SDOMX = RB3, SDO function is on RB3
   547                           ;	Master Clear Reset Pin Enable
   548                           ;	MCLRE = OFF, RE3 input pin enabled; external MCLR disabled
   549   300005                     	org	3145733
   550   300005  53                 	db	83
   551                           
   552                           ;Config register CONFIG4L @ 0x300006
   553                           ;	Stack Full/Underflow Reset
   554                           ;	STVREN = ON, Stack full/underflow will cause Reset
   555                           ;	Single-Supply ICSP Enable bit
   556                           ;	LVP = OFF, Single-Supply ICSP disabled
   557                           ;	Dedicated In-Circuit Debug/Programming Port Enable
   558                           ;	ICPRT = OFF, ICPORT disabled
   559                           ;	Extended Instruction Set Enable bit
   560                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
   561                           ;	Background Debugger Enable bit
   562                           ;	DEBUG = 0x1, unprogrammed default
   563   300006                     	org	3145734
   564   300006  81                 	db	129
   565                           
   566                           ; Padding undefined space
   567   300007                     	org	3145735
   568   300007  FF                 	db	255
   569                           
   570                           ;Config register CONFIG5L @ 0x300008
   571                           ;	Block 0 Code Protect
   572                           ;	CP0 = OFF, Block 0 is not code-protected
   573                           ;	Block 1 Code Protect
   574                           ;	CP1 = OFF, Block 1 is not code-protected
   575                           ;	Block 2 Code Protect
   576                           ;	CP2 = OFF, Block 2 is not code-protected
   577                           ;	Block 3 Code Protect
   578                           ;	CP3 = OFF, Block 3 is not code-protected
   579   300008                     	org	3145736
   580   300008  0F                 	db	15
   581                           
   582                           ;Config register CONFIG5H @ 0x300009
   583                           ;	Boot Block Code Protect
   584                           ;	CPB = OFF, Boot block is not code-protected
   585                           ;	Data EEPROM Code Protect
   586                           ;	CPD = OFF, Data EEPROM is not code-protected
   587   300009                     	org	3145737
   588   300009  C0                 	db	192
   589                           
   590                           ;Config register CONFIG6L @ 0x30000A
   591                           ;	Block 0 Write Protect
   592                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
   593                           ;	Block 1 Write Protect
   594                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
   595                           ;	Block 2 Write Protect
   596                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
   597                           ;	Block 3 Write Protect
   598                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
   599   30000A                     	org	3145738
   600   30000A  0F                 	db	15
   601                           
   602                           ;Config register CONFIG6H @ 0x30000B
   603                           ;	Configuration Registers Write Protect
   604                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   605                           ;	Boot Block Write Protect
   606                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
   607                           ;	Data EEPROM Write Protect
   608                           ;	WRTD = OFF, Data EEPROM is not write-protected
   609   30000B                     	org	3145739
   610   30000B  E0                 	db	224
   611                           
   612                           ;Config register CONFIG7L @ 0x30000C
   613                           ;	Block 0 Table Read Protect
   614                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
   615                           ;	Block 1 Table Read Protect
   616                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
   617                           ;	Block 2 Table Read Protect
   618                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
   619                           ;	Block 3 Table Read Protect
   620                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
   621   30000C                     	org	3145740
   622   30000C  0F                 	db	15
   623                           
   624                           ;Config register CONFIG7H @ 0x30000D
   625                           ;	Boot Block Table Read Protect
   626                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
   627   30000D                     	org	3145741
   628   30000D  40                 	db	64
   629                           tosu	equ	0xFFF
   630                           tosh	equ	0xFFE
   631                           tosl	equ	0xFFD
   632                           stkptr	equ	0xFFC
   633                           pclatu	equ	0xFFB
   634                           pclath	equ	0xFFA
   635                           pcl	equ	0xFF9
   636                           tblptru	equ	0xFF8
   637                           tblptrh	equ	0xFF7
   638                           tblptrl	equ	0xFF6
   639                           tablat	equ	0xFF5
   640                           prodh	equ	0xFF4
   641                           prodl	equ	0xFF3
   642                           indf0	equ	0xFEF
   643                           postinc0	equ	0xFEE
   644                           postdec0	equ	0xFED
   645                           preinc0	equ	0xFEC
   646                           plusw0	equ	0xFEB
   647                           fsr0h	equ	0xFEA
   648                           fsr0l	equ	0xFE9
   649                           wreg	equ	0xFE8
   650                           indf1	equ	0xFE7
   651                           postinc1	equ	0xFE6
   652                           postdec1	equ	0xFE5
   653                           preinc1	equ	0xFE4
   654                           plusw1	equ	0xFE3
   655                           fsr1h	equ	0xFE2
   656                           fsr1l	equ	0xFE1
   657                           bsr	equ	0xFE0
   658                           indf2	equ	0xFDF
   659                           postinc2	equ	0xFDE
   660                           postdec2	equ	0xFDD
   661                           preinc2	equ	0xFDC
   662                           plusw2	equ	0xFDB
   663                           fsr2h	equ	0xFDA
   664                           fsr2l	equ	0xFD9
   665                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      3       3
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_dutyCycle

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     152
                 _Config_CCP_Compara
                       _Config_Clock
                        _Config_Port
                          _dutyCycle
 ---------------------------------------------------------------------------------
 (1) _dutyCycle                                            3     0      3     152
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _Config_Port                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Config_Clock                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Config_CCP_Compara                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Config_CCP_Compara
   _Config_Clock
   _Config_Port
   _dutyCycle

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      3       3       1        3.2%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBIGSFRhhh        2C      0       0      20        0.0%
BITBIGSFRhhl         3      0       0      21        0.0%
BITBIGSFRhlh         D      0       0      22        0.0%
BITBIGSFRhll        1E      0       0      23        0.0%
BITBIGSFRlhhh        6      0       0      24        0.0%
BITBIGSFRlhhl        2      0       0      25        0.0%
BITBIGSFRlhl        19      0       0      26        0.0%
BITBIGSFRllh        1D      0       0      27        0.0%
BITBIGSFRlllh        2      0       0      28        0.0%
BITBIGSFRllll        6      0       0      29        0.0%
ABS                  0      0       0      30        0.0%
BIGRAM             7FF      0       0      31        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Aug 02 18:38:51 2022

                        l41 7FAE                          l50 7F56                          l43 7FBC  
                        l35 7F64                          l44 7FD6                          l53 7F42  
                        l46 7FE4                          l47 7FFE                          l56 7FAC  
                        u30 7FBC                          u31 7FB8                          u40 7FE4  
                        u41 7FE0                         l740 7F8E                         l732 7F4A  
                       l750 7FA8                         l742 7F98                         l734 7F3E  
                       l752 7FAA                         l744 7F9A                         l736 7F7C  
                       l746 7F9C                         l738 7F82                         l762 7FAE  
                       l748 7F9E                         l764 7FBE                         l766 7FE6  
                       l768 7F58                        _TMR1 000FCE                        _main 7F58  
                      start 0000                ___param_bank 000000         __end_of_Config_Port 7F44  
                     ?_main 0001                       _CCPR1 000FBE             __initialization 7F44  
      __end_of_Config_Clock 7F58                __end_of_main 7F7C          _Config_CCP_Compara 7F7C  
                    ??_main 0004               __activetblptr 000000         ?_Config_CCP_Compara 0001  
                    _SLRCON 000F7A                 _Config_Port 7F3E        ??_Config_CCP_Compara 0001  
                    isa$std 000001                  __accesstop 0060     __end_of__initialization 7F44  
             ___rparam_used 000001              __pcstackCOMRAM 0001                _Config_Clock 7F4A  
                   __Hparam 0000                     __Lparam 0000                     __pcinit 7F44  
                   __ramtop 0800                     __ptext0 7F58                     __ptext1 7FAE  
                   __ptext2 7F3E                     __ptext3 7F4A                     __ptext4 7F7C  
                 _T1CONbits 000FCD           __end_of_dutyCycle 8000        end_of_initialization 7F44  
              ?_Config_Port 0001                   _TRISCbits 000F94                 _CCP1CONbits 000FBD  
               _CCP2CONbits 000F97         start_initialization 7F44                 _CCPTMRSbits 000F59  
                 _dutyCycle 7FAE                    _PIR1bits 000F9E                  ?_dutyCycle 0001  
                  __Hrparam 0000                    __Lrparam 0000                  _ANSELBbits 000F5C  
__end_of_Config_CCP_Compara 7FAE                    isa$xinst 000000               ?_Config_Clock 0001  
               ??_dutyCycle 0004                  _OSCCONbits 000FD3               dutyCycle@frec 0001  
             dutyCycle@duty 0003              ??_Config_Clock 0001               ??_Config_Port 0001  
