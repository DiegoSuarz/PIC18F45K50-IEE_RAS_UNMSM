

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Aug 04 21:27:21 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    16   000000                     
    17                           ; Version 2.35
    18                           ; Generated 05/05/2021 GMT
    19                           ; 
    20                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F45K50 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52   000000                     _TMR2	set	4028
    53   000000                     _CCP1CON	set	4029
    54   000000                     _ANSELCbits	set	3933
    55   000000                     _SLRCON	set	3962
    56   000000                     _OSCCONbits	set	4051
    57   000000                     _TRISCbits	set	3988
    58   000000                     _T2CONbits	set	4026
    59   000000                     _PR2	set	4027
    60   000000                     _CCP1CONbits	set	4029
    61   000000                     _CCPR1L	set	4030
    62                           
    63                           ; #config settings
    64                           
    65                           	psect	cinit
    66   007F50                     __pcinit:
    67                           	callstack 0
    68   007F50                     start_initialization:
    69                           	callstack 0
    70   007F50                     __initialization:
    71                           	callstack 0
    72   007F50                     end_of_initialization:
    73                           	callstack 0
    74   007F50                     __end_of__initialization:
    75                           	callstack 0
    76   007F50  0100               	movlb	0
    77   007F52  EFB2  F03F         	goto	_main	;jump to C main() function
    78                           
    79                           	psect	cstackCOMRAM
    80   000001                     __pcstackCOMRAM:
    81                           	callstack 0
    82   000001                     ??_change_dutyCycle:
    83   000001                     
    84                           ; 1 bytes @ 0x0
    85   000001                     	ds	2
    86   000003                     change_dutyCycle@dutyCycle:
    87                           	callstack 0
    88                           
    89                           ; 2 bytes @ 0x2
    90   000003                     	ds	2
    91   000005                     
    92                           ; 1 bytes @ 0x4
    93 ;;
    94 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    95 ;;
    96 ;; *************** function _main *****************
    97 ;; Defined at:
    98 ;;		line 23 in file "main.c"
    99 ;; Parameters:    Size  Location     Type
   100 ;;		None
   101 ;; Auto vars:     Size  Location     Type
   102 ;;		None
   103 ;; Return value:  Size  Location     Type
   104 ;;                  1    wreg      void 
   105 ;; Registers used:
   106 ;;		wreg, status,2, status,0, cstack
   107 ;; Tracked objects:
   108 ;;		On entry : 0/0
   109 ;;		On exit  : 0/0
   110 ;;		Unchanged: 0/0
   111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   112 ;;      Params:         0       0       0       0       0       0       0       0       0
   113 ;;      Locals:         0       0       0       0       0       0       0       0       0
   114 ;;      Temps:          0       0       0       0       0       0       0       0       0
   115 ;;      Totals:         0       0       0       0       0       0       0       0       0
   116 ;;Total ram usage:        0 bytes
   117 ;; Hardware stack levels required when called: 1
   118 ;; This function calls:
   119 ;;		_Config_CCP_PWM
   120 ;;		_Config_Clock
   121 ;;		_Config_Port
   122 ;;		_change_dutyCycle
   123 ;; This function is called by:
   124 ;;		Startup code after reset
   125 ;; This function uses a non-reentrant model
   126 ;;
   127                           
   128                           	psect	text0
   129   007F64                     __ptext0:
   130                           	callstack 0
   131   007F64                     _main:
   132                           	callstack 30
   133   007F64                     
   134                           ;main.c: 24:     Config_Clock();
   135   007F64  ECAB  F03F         	call	_Config_Clock	;wreg free
   136                           
   137                           ;main.c: 25:     Config_Port();
   138   007F68  ECA5  F03F         	call	_Config_Port	;wreg free
   139                           
   140                           ;main.c: 26:     Config_CCP_PWM();
   141   007F6C  ECBE  F03F         	call	_Config_CCP_PWM	;wreg free
   142   007F70                     l754:
   143                           
   144                           ;main.c: 28:        change_dutyCycle();
   145   007F70  ECD4  F03F         	call	_change_dutyCycle	;wreg free
   146   007F74  EFB8  F03F         	goto	l754
   147   007F78  EF00  F000         	goto	start
   148   007F7C                     __end_of_main:
   149                           	callstack 0
   150                           
   151 ;; *************** function _change_dutyCycle *****************
   152 ;; Defined at:
   153 ;;		line 90 in file "main.c"
   154 ;; Parameters:    Size  Location     Type
   155 ;;		None
   156 ;; Auto vars:     Size  Location     Type
   157 ;;  dutyCycle       2    2[COMRAM] unsigned short 
   158 ;; Return value:  Size  Location     Type
   159 ;;                  1    wreg      void 
   160 ;; Registers used:
   161 ;;		wreg, status,2, status,0
   162 ;; Tracked objects:
   163 ;;		On entry : 0/0
   164 ;;		On exit  : 0/0
   165 ;;		Unchanged: 0/0
   166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   167 ;;      Params:         0       0       0       0       0       0       0       0       0
   168 ;;      Locals:         2       0       0       0       0       0       0       0       0
   169 ;;      Temps:          2       0       0       0       0       0       0       0       0
   170 ;;      Totals:         4       0       0       0       0       0       0       0       0
   171 ;;Total ram usage:        4 bytes
   172 ;; Hardware stack levels used: 1
   173 ;; This function calls:
   174 ;;		Nothing
   175 ;; This function is called by:
   176 ;;		_main
   177 ;; This function uses a non-reentrant model
   178 ;;
   179                           
   180                           	psect	text1
   181   007FA8                     __ptext1:
   182                           	callstack 0
   183   007FA8                     _change_dutyCycle:
   184                           	callstack 30
   185   007FA8                     
   186                           ;main.c: 91:     for(uint16_t dutyCycle=0;dutyCycle<1000;dutyCycle++){
   187   007FA8  0E00               	movlw	0
   188   007FAA  6E04               	movwf	(change_dutyCycle@dutyCycle+1)^0,c
   189   007FAC  0E00               	movlw	0
   190   007FAE  6E03               	movwf	change_dutyCycle@dutyCycle^0,c
   191   007FB0                     l746:
   192                           
   193                           ;main.c: 92:         CCPR1L=dutyCycle>>2;
   194   007FB0  C003  F001         	movff	change_dutyCycle@dutyCycle,??_change_dutyCycle
   195   007FB4  C004  F002         	movff	change_dutyCycle@dutyCycle+1,??_change_dutyCycle+1
   196   007FB8  90D8               	bcf	status,0,c
   197   007FBA  3202               	rrcf	(??_change_dutyCycle+1)^0,f,c
   198   007FBC  3201               	rrcf	??_change_dutyCycle^0,f,c
   199   007FBE  90D8               	bcf	status,0,c
   200   007FC0  3202               	rrcf	(??_change_dutyCycle+1)^0,f,c
   201   007FC2  3201               	rrcf	??_change_dutyCycle^0,f,c
   202   007FC4  5001               	movf	??_change_dutyCycle^0,w,c
   203   007FC6  6EBE               	movwf	190,c	;volatile
   204                           
   205                           ;main.c: 93:         CCP1CON |= ((dutyCycle & 0x0003)<<4);
   206   007FC8  C003  F001         	movff	change_dutyCycle@dutyCycle,??_change_dutyCycle	;volatile
   207   007FCC  0E03               	movlw	3
   208   007FCE  1601               	andwf	??_change_dutyCycle^0,f,c
   209   007FD0  3801               	swapf	??_change_dutyCycle^0,w,c
   210   007FD2  0BF0               	andlw	240
   211   007FD4  12BD               	iorwf	189,f,c	;volatile
   212   007FD6                     
   213                           ;main.c: 94:         _delay((unsigned long)((10)*(16000000UL/4000.0)));
   214   007FD6  0E34               	movlw	52
   215   007FD8  6E01               	movwf	??_change_dutyCycle^0,c
   216   007FDA  0EF2               	movlw	242
   217   007FDC                     u27:
   218   007FDC  2EE8               	decfsz	wreg,f,c
   219   007FDE  D7FE               	bra	u27
   220   007FE0  2E01               	decfsz	??_change_dutyCycle^0,f,c
   221   007FE2  D7FC               	bra	u27
   222                           
   223                           ;main.c: 95:     }
   224   007FE4  4A03               	infsnz	change_dutyCycle@dutyCycle^0,f,c
   225   007FE6  2A04               	incf	(change_dutyCycle@dutyCycle+1)^0,f,c
   226   007FE8  0EE8               	movlw	232
   227   007FEA  5C03               	subwf	change_dutyCycle@dutyCycle^0,w,c
   228   007FEC  0E03               	movlw	3
   229   007FEE  5804               	subwfb	(change_dutyCycle@dutyCycle+1)^0,w,c
   230   007FF0  A0D8               	btfss	status,0,c
   231   007FF2  EFFD  F03F         	goto	u11
   232   007FF6  EFFF  F03F         	goto	u10
   233   007FFA                     u11:
   234   007FFA  EFD8  F03F         	goto	l746
   235   007FFE                     u10:
   236   007FFE  0012               	return		;funcret
   237   008000                     __end_of_change_dutyCycle:
   238                           	callstack 0
   239                           
   240 ;; *************** function _Config_Port *****************
   241 ;; Defined at:
   242 ;;		line 40 in file "main.c"
   243 ;; Parameters:    Size  Location     Type
   244 ;;		None
   245 ;; Auto vars:     Size  Location     Type
   246 ;;		None
   247 ;; Return value:  Size  Location     Type
   248 ;;                  1    wreg      void 
   249 ;; Registers used:
   250 ;;		wreg, status,2
   251 ;; Tracked objects:
   252 ;;		On entry : 0/0
   253 ;;		On exit  : 0/0
   254 ;;		Unchanged: 0/0
   255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   256 ;;      Params:         0       0       0       0       0       0       0       0       0
   257 ;;      Locals:         0       0       0       0       0       0       0       0       0
   258 ;;      Temps:          0       0       0       0       0       0       0       0       0
   259 ;;      Totals:         0       0       0       0       0       0       0       0       0
   260 ;;Total ram usage:        0 bytes
   261 ;; Hardware stack levels used: 1
   262 ;; This function calls:
   263 ;;		Nothing
   264 ;; This function is called by:
   265 ;;		_main
   266 ;; This function uses a non-reentrant model
   267 ;;
   268                           
   269                           	psect	text2
   270   007F4A                     __ptext2:
   271                           	callstack 0
   272   007F4A                     _Config_Port:
   273                           	callstack 30
   274   007F4A                     
   275                           ;main.c: 45:     SLRCON=0b00000000;
   276   007F4A  0E00               	movlw	0
   277   007F4C  6E7A               	movwf	122,c	;volatile
   278   007F4E  0012               	return		;funcret
   279   007F50                     __end_of_Config_Port:
   280                           	callstack 0
   281                           
   282 ;; *************** function _Config_Clock *****************
   283 ;; Defined at:
   284 ;;		line 35 in file "main.c"
   285 ;; Parameters:    Size  Location     Type
   286 ;;		None
   287 ;; Auto vars:     Size  Location     Type
   288 ;;		None
   289 ;; Return value:  Size  Location     Type
   290 ;;                  1    wreg      void 
   291 ;; Registers used:
   292 ;;		wreg, status,2
   293 ;; Tracked objects:
   294 ;;		On entry : 0/0
   295 ;;		On exit  : 0/0
   296 ;;		Unchanged: 0/0
   297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   298 ;;      Params:         0       0       0       0       0       0       0       0       0
   299 ;;      Locals:         0       0       0       0       0       0       0       0       0
   300 ;;      Temps:          0       0       0       0       0       0       0       0       0
   301 ;;      Totals:         0       0       0       0       0       0       0       0       0
   302 ;;Total ram usage:        0 bytes
   303 ;; Hardware stack levels used: 1
   304 ;; This function calls:
   305 ;;		Nothing
   306 ;; This function is called by:
   307 ;;		_main
   308 ;; This function uses a non-reentrant model
   309 ;;
   310                           
   311                           	psect	text3
   312   007F56                     __ptext3:
   313                           	callstack 0
   314   007F56                     _Config_Clock:
   315                           	callstack 30
   316   007F56                     
   317                           ;main.c: 36:     OSCCONbits.IRCF=0b111;
   318   007F56  0E70               	movlw	112
   319   007F58  12D3               	iorwf	211,f,c	;volatile
   320                           
   321                           ;main.c: 37:     OSCCONbits.SCS=0b10;
   322   007F5A  50D3               	movf	211,w,c	;volatile
   323   007F5C  0BFC               	andlw	-4
   324   007F5E  0902               	iorlw	2
   325   007F60  6ED3               	movwf	211,c	;volatile
   326   007F62  0012               	return		;funcret
   327   007F64                     __end_of_Config_Clock:
   328                           	callstack 0
   329                           
   330 ;; *************** function _Config_CCP_PWM *****************
   331 ;; Defined at:
   332 ;;		line 55 in file "main.c"
   333 ;; Parameters:    Size  Location     Type
   334 ;;		None
   335 ;; Auto vars:     Size  Location     Type
   336 ;;		None
   337 ;; Return value:  Size  Location     Type
   338 ;;                  1    wreg      void 
   339 ;; Registers used:
   340 ;;		wreg, status,2
   341 ;; Tracked objects:
   342 ;;		On entry : 0/0
   343 ;;		On exit  : 0/0
   344 ;;		Unchanged: 0/0
   345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   346 ;;      Params:         0       0       0       0       0       0       0       0       0
   347 ;;      Locals:         0       0       0       0       0       0       0       0       0
   348 ;;      Temps:          0       0       0       0       0       0       0       0       0
   349 ;;      Totals:         0       0       0       0       0       0       0       0       0
   350 ;;Total ram usage:        0 bytes
   351 ;; Hardware stack levels used: 1
   352 ;; This function calls:
   353 ;;		Nothing
   354 ;; This function is called by:
   355 ;;		_main
   356 ;; This function uses a non-reentrant model
   357 ;;
   358                           
   359                           	psect	text4
   360   007F7C                     __ptext4:
   361                           	callstack 0
   362   007F7C                     _Config_CCP_PWM:
   363                           	callstack 30
   364   007F7C                     
   365                           ;main.c: 57:     ANSELCbits.ANSC2 = 0;
   366   007F7C  010F               	movlb	15	; () banked
   367   007F7E  955D               	bcf	93,2,b	;volatile
   368                           
   369                           ;main.c: 58:     TRISCbits.TRISC2 = 0;
   370   007F80  9494               	bcf	148,2,c	;volatile
   371   007F82                     
   372                           ; BSR set to: 15
   373                           ;main.c: 61:     CCP1CONbits.CCP1M = 0b1100;
   374   007F82  50BD               	movf	189,w,c	;volatile
   375   007F84  0BF0               	andlw	-16
   376   007F86  090C               	iorlw	12
   377   007F88  6EBD               	movwf	189,c	;volatile
   378                           
   379                           ;main.c: 69:     PR2 = 99;
   380   007F8A  0E63               	movlw	99
   381   007F8C  6EBB               	movwf	187,c	;volatile
   382                           
   383                           ;main.c: 77:     CCP1CONbits.DC1B = 0b00;
   384   007F8E  0ECF               	movlw	-49
   385   007F90  16BD               	andwf	189,f,c	;volatile
   386                           
   387                           ;main.c: 78:     CCPR1L = 0b00010100;
   388   007F92  0E14               	movlw	20
   389   007F94  6EBE               	movwf	190,c	;volatile
   390                           
   391                           ;main.c: 81:     T2CONbits.T2CKPS = 0b01;
   392   007F96  50BA               	movf	186,w,c	;volatile
   393   007F98  0BFC               	andlw	-4
   394   007F9A  0901               	iorlw	1
   395   007F9C  6EBA               	movwf	186,c	;volatile
   396   007F9E                     
   397                           ; BSR set to: 15
   398                           ;main.c: 82:     T2CONbits.TMR2ON = 0;
   399   007F9E  94BA               	bcf	186,2,c	;volatile
   400                           
   401                           ;main.c: 83:     TMR2 = 0;
   402   007FA0  0E00               	movlw	0
   403   007FA2  6EBC               	movwf	188,c	;volatile
   404   007FA4                     
   405                           ; BSR set to: 15
   406                           ;main.c: 84:     T2CONbits.TMR2ON=1;
   407   007FA4  84BA               	bsf	186,2,c	;volatile
   408   007FA6                     
   409                           ; BSR set to: 15
   410   007FA6  0012               	return		;funcret
   411   007FA8                     __end_of_Config_CCP_PWM:
   412                           	callstack 0
   413   000000                     
   414                           	psect	rparam
   415   000000                     
   416                           	psect	idloc
   417                           
   418                           ;Config register IDLOC0 @ 0x200000
   419                           ;	unspecified, using default values
   420   200000                     	org	2097152
   421   200000  FF                 	db	255
   422                           
   423                           ;Config register IDLOC1 @ 0x200001
   424                           ;	unspecified, using default values
   425   200001                     	org	2097153
   426   200001  FF                 	db	255
   427                           
   428                           ;Config register IDLOC2 @ 0x200002
   429                           ;	unspecified, using default values
   430   200002                     	org	2097154
   431   200002  FF                 	db	255
   432                           
   433                           ;Config register IDLOC3 @ 0x200003
   434                           ;	unspecified, using default values
   435   200003                     	org	2097155
   436   200003  FF                 	db	255
   437                           
   438                           ;Config register IDLOC4 @ 0x200004
   439                           ;	unspecified, using default values
   440   200004                     	org	2097156
   441   200004  FF                 	db	255
   442                           
   443                           ;Config register IDLOC5 @ 0x200005
   444                           ;	unspecified, using default values
   445   200005                     	org	2097157
   446   200005  FF                 	db	255
   447                           
   448                           ;Config register IDLOC6 @ 0x200006
   449                           ;	unspecified, using default values
   450   200006                     	org	2097158
   451   200006  FF                 	db	255
   452                           
   453                           ;Config register IDLOC7 @ 0x200007
   454                           ;	unspecified, using default values
   455   200007                     	org	2097159
   456   200007  FF                 	db	255
   457                           
   458                           	psect	config
   459                           
   460                           ;Config register CONFIG1L @ 0x300000
   461                           ;	PLL Selection
   462                           ;	PLLSEL = PLL4X, 4x clock multiplier
   463                           ;	PLL Enable Configuration bit
   464                           ;	CFGPLLEN = OFF, PLL Disabled (firmware controlled)
   465                           ;	CPU System Clock Postscaler
   466                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
   467                           ;	Low Speed USB mode with 48 MHz system clock
   468                           ;	LS48MHZ = SYS24X4, System clock at 24 MHz, USB clock divider is set to 4
   469   300000                     	org	3145728
   470   300000  00                 	db	0
   471                           
   472                           ;Config register CONFIG1H @ 0x300001
   473                           ;	Oscillator Selection
   474                           ;	FOSC = INTOSCIO, Internal oscillator
   475                           ;	Primary Oscillator Shutdown
   476                           ;	PCLKEN = ON, Primary oscillator enabled
   477                           ;	Fail-Safe Clock Monitor
   478                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   479                           ;	Internal/External Oscillator Switchover
   480                           ;	IESO = OFF, Oscillator Switchover mode disabled
   481   300001                     	org	3145729
   482   300001  28                 	db	40
   483                           
   484                           ;Config register CONFIG2L @ 0x300002
   485                           ;	Power-up Timer Enable
   486                           ;	nPWRTEN = ON, Power up timer enabled
   487                           ;	Brown-out Reset Enable
   488                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
   489                           ;	Brown-out Reset Voltage
   490                           ;	BORV = 190, BOR set to 1.9V nominal
   491                           ;	Low-Power Brown-out Reset
   492                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
   493   300002                     	org	3145730
   494   300002  5E                 	db	94
   495                           
   496                           ;Config register CONFIG2H @ 0x300003
   497                           ;	Watchdog Timer Enable bits
   498                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
   499                           ;	Watchdog Timer Postscaler
   500                           ;	WDTPS = 32768, 1:32768
   501   300003                     	org	3145731
   502   300003  3C                 	db	60
   503                           
   504                           ; Padding undefined space
   505   300004                     	org	3145732
   506   300004  FF                 	db	255
   507                           
   508                           ;Config register CONFIG3H @ 0x300005
   509                           ;	CCP2 MUX bit
   510                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
   511                           ;	PORTB A/D Enable bit
   512                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
   513                           ;	Timer3 Clock Input MUX bit
   514                           ;	T3CMX = RC0, T3CKI function is on RC0
   515                           ;	SDO Output MUX bit
   516                           ;	SDOMX = RB3, SDO function is on RB3
   517                           ;	Master Clear Reset Pin Enable
   518                           ;	MCLRE = OFF, RE3 input pin enabled; external MCLR disabled
   519   300005                     	org	3145733
   520   300005  53                 	db	83
   521                           
   522                           ;Config register CONFIG4L @ 0x300006
   523                           ;	Stack Full/Underflow Reset
   524                           ;	STVREN = ON, Stack full/underflow will cause Reset
   525                           ;	Single-Supply ICSP Enable bit
   526                           ;	LVP = OFF, Single-Supply ICSP disabled
   527                           ;	Dedicated In-Circuit Debug/Programming Port Enable
   528                           ;	ICPRT = OFF, ICPORT disabled
   529                           ;	Extended Instruction Set Enable bit
   530                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
   531                           ;	Background Debugger Enable bit
   532                           ;	DEBUG = 0x1, unprogrammed default
   533   300006                     	org	3145734
   534   300006  81                 	db	129
   535                           
   536                           ; Padding undefined space
   537   300007                     	org	3145735
   538   300007  FF                 	db	255
   539                           
   540                           ;Config register CONFIG5L @ 0x300008
   541                           ;	Block 0 Code Protect
   542                           ;	CP0 = OFF, Block 0 is not code-protected
   543                           ;	Block 1 Code Protect
   544                           ;	CP1 = OFF, Block 1 is not code-protected
   545                           ;	Block 2 Code Protect
   546                           ;	CP2 = OFF, Block 2 is not code-protected
   547                           ;	Block 3 Code Protect
   548                           ;	CP3 = OFF, Block 3 is not code-protected
   549   300008                     	org	3145736
   550   300008  0F                 	db	15
   551                           
   552                           ;Config register CONFIG5H @ 0x300009
   553                           ;	Boot Block Code Protect
   554                           ;	CPB = OFF, Boot block is not code-protected
   555                           ;	Data EEPROM Code Protect
   556                           ;	CPD = OFF, Data EEPROM is not code-protected
   557   300009                     	org	3145737
   558   300009  C0                 	db	192
   559                           
   560                           ;Config register CONFIG6L @ 0x30000A
   561                           ;	Block 0 Write Protect
   562                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
   563                           ;	Block 1 Write Protect
   564                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
   565                           ;	Block 2 Write Protect
   566                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
   567                           ;	Block 3 Write Protect
   568                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
   569   30000A                     	org	3145738
   570   30000A  0F                 	db	15
   571                           
   572                           ;Config register CONFIG6H @ 0x30000B
   573                           ;	Configuration Registers Write Protect
   574                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   575                           ;	Boot Block Write Protect
   576                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
   577                           ;	Data EEPROM Write Protect
   578                           ;	WRTD = OFF, Data EEPROM is not write-protected
   579   30000B                     	org	3145739
   580   30000B  E0                 	db	224
   581                           
   582                           ;Config register CONFIG7L @ 0x30000C
   583                           ;	Block 0 Table Read Protect
   584                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
   585                           ;	Block 1 Table Read Protect
   586                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
   587                           ;	Block 2 Table Read Protect
   588                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
   589                           ;	Block 3 Table Read Protect
   590                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
   591   30000C                     	org	3145740
   592   30000C  0F                 	db	15
   593                           
   594                           ;Config register CONFIG7H @ 0x30000D
   595                           ;	Boot Block Table Read Protect
   596                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
   597   30000D                     	org	3145741
   598   30000D  40                 	db	64
   599                           tosu	equ	0xFFF
   600                           tosh	equ	0xFFE
   601                           tosl	equ	0xFFD
   602                           stkptr	equ	0xFFC
   603                           pclatu	equ	0xFFB
   604                           pclath	equ	0xFFA
   605                           pcl	equ	0xFF9
   606                           tblptru	equ	0xFF8
   607                           tblptrh	equ	0xFF7
   608                           tblptrl	equ	0xFF6
   609                           tablat	equ	0xFF5
   610                           prodh	equ	0xFF4
   611                           prodl	equ	0xFF3
   612                           indf0	equ	0xFEF
   613                           postinc0	equ	0xFEE
   614                           postdec0	equ	0xFED
   615                           preinc0	equ	0xFEC
   616                           plusw0	equ	0xFEB
   617                           fsr0h	equ	0xFEA
   618                           fsr0l	equ	0xFE9
   619                           wreg	equ	0xFE8
   620                           indf1	equ	0xFE7
   621                           postinc1	equ	0xFE6
   622                           postdec1	equ	0xFE5
   623                           preinc1	equ	0xFE4
   624                           plusw1	equ	0xFE3
   625                           fsr1h	equ	0xFE2
   626                           fsr1l	equ	0xFE1
   627                           bsr	equ	0xFE0
   628                           indf2	equ	0xFDF
   629                           postinc2	equ	0xFDE
   630                           postdec2	equ	0xFDD
   631                           preinc2	equ	0xFDC
   632                           plusw2	equ	0xFDB
   633                           fsr2h	equ	0xFDA
   634                           fsr2l	equ	0xFD9
   635                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      4       4
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_change_dutyCycle

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      60
                     _Config_CCP_PWM
                       _Config_Clock
                        _Config_Port
                   _change_dutyCycle
 ---------------------------------------------------------------------------------
 (1) _change_dutyCycle                                     4     4      0      60
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _Config_Port                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Config_Clock                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Config_CCP_PWM                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Config_CCP_PWM
   _Config_Clock
   _Config_Port
   _change_dutyCycle

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      4       4       1        4.2%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBIGSFRh          2C      0       0      20        0.0%
BITBIGSFRlhhh       14      0       0      21        0.0%
BITBIGSFRlhhll      25      0       0      22        0.0%
BITBIGSFRlhl        19      0       0      23        0.0%
BITBIGSFRllh        1C      0       0      24        0.0%
BITBIGSFRlll         A      0       0      25        0.0%
ABS                  0      0       0      26        0.0%
BIGRAM             7FF      0       0      27        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Aug 04 21:27:21 2022

                       l41 7F62                         l44 7F4E                         l52 7FFE  
                       l47 7FA6                         u10 7FFE                         u11 7FFA  
                       u27 7FDC                        l730 7F4A                        l732 7F7C  
                      l740 7FA8                        l734 7F82                        l750 7FE8  
                      l736 7F9E                        l728 7F56                        l752 7F64  
                      l738 7FA4                        l746 7FB0                        l754 7F70  
                      l748 7FD6                        _PR2 000FBB                        wreg 000FE8  
                     _TMR2 000FBC                       _main 7F64                       start 0000  
             ___param_bank 000000        __end_of_Config_Port 7F50                      ?_main 0001  
                    status 000FD8            __initialization 7F50       __end_of_Config_Clock 7F64  
             __end_of_main 7F7C                     ??_main 0005              __activetblptr 000000  
                   _CCPR1L 000FBE                     _SLRCON 000F7A                _Config_Port 7F4A  
         _change_dutyCycle 7FA8                     isa$std 000001                 __accesstop 0060  
  __end_of__initialization 7F50              ___rparam_used 000001             __pcstackCOMRAM 0001  
                  _CCP1CON 000FBD               _Config_Clock 7F56                    __Hparam 0000  
                  __Lparam 0000                    __pcinit 7F50                    __ramtop 0800  
                  __ptext0 7F64                    __ptext1 7FA8                    __ptext2 7F4A  
                  __ptext3 7F56                    __ptext4 7F7C                  _T2CONbits 000FBA  
 __end_of_change_dutyCycle 8000       end_of_initialization 7F50             _Config_CCP_PWM 7F7C  
             ?_Config_Port 0001                  _TRISCbits 000F94     __end_of_Config_CCP_PWM 7FA8  
              _CCP1CONbits 000FBD        start_initialization 7F50            ?_Config_CCP_PWM 0001  
change_dutyCycle@dutyCycle 0003          ?_change_dutyCycle 0001         ??_change_dutyCycle 0001  
                 __Hrparam 0000                   __Lrparam 0000                 _ANSELCbits 000F5D  
         ??_Config_CCP_PWM 0001                   isa$xinst 000000              ?_Config_Clock 0001  
               _OSCCONbits 000FD3             ??_Config_Clock 0001              ??_Config_Port 0001  
