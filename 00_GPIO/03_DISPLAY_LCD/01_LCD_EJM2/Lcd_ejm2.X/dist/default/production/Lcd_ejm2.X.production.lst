

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Mon Jun 27 15:25:59 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    61                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    62                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    63                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    64  0000                     
    65                           ; Version 2.35
    66                           ; Generated 05/05/2021 GMT
    67                           ; 
    68                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    69                           ; All rights reserved.
    70                           ; 
    71                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    72                           ; 
    73                           ; Redistribution and use in source and binary forms, with or without modification, are
    74                           ; permitted provided that the following conditions are met:
    75                           ; 
    76                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    77                           ;        conditions and the following disclaimer.
    78                           ; 
    79                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    80                           ;        of conditions and the following disclaimer in the documentation and/or other
    81                           ;        materials provided with the distribution. Publication is not required when
    82                           ;        this file is used in an embedded application.
    83                           ; 
    84                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    85                           ;        software without specific prior written permission.
    86                           ; 
    87                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    88                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    89                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    90                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    91                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    92                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    93                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    94                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    95                           ; 
    96                           ; 
    97                           ; Code-generator required, PIC18F45K50 Definitions
    98                           ; 
    99                           ; SFR Addresses
   100  0000                     
   101                           	psect	idataBANK0
   102  004392                     __pidataBANK0:
   103                           	callstack 0
   104                           
   105                           ;initializer for ejemplo2@F5205
   106  004392  68                 	db	104
   107  004393  6F                 	db	111
   108  004394  6C                 	db	108
   109  004395  61                 	db	97
   110  004396  00                 	db	0
   111  0000                     _LATD	set	3980
   112  0000                     _ANSELAbits	set	3931
   113  0000                     _ANSELD	set	3934
   114  0000                     _SLRCON	set	3962
   115  0000                     _LATDbits	set	3980
   116  0000                     _TRISAbits	set	3986
   117  0000                     _TRISD	set	3989
   118  0000                     _OSCCONbits	set	4051
   119  0000                     _INTCON2bits	set	4081
   120  0000                     _PORTAbits	set	3968
   121  0000                     _WPUBbits	set	3973
   122  0000                     _ANSELBbits	set	3932
   123  0000                     _TRISBbits	set	3987
   124  0000                     _PORTBbits	set	3969
   125                           
   126                           	psect	smallconst
   127  000800                     __psmallconst:
   128                           	callstack 0
   129  000800  00                 	db	0
   130  000801  6E                 	db	110	;'n'
   131  000802  3D                 	db	61	;'='
   132  000803  25                 	db	37
   133  000804  30                 	db	48	;'0'
   134  000805  34                 	db	52	;'4'
   135  000806  64                 	db	100	;'d'
   136  000807  20                 	db	32
   137  000808  70                 	db	112	;'p'
   138  000809  69                 	db	105	;'i'
   139  00080A  3D                 	db	61	;'='
   140  00080B  25                 	db	37
   141  00080C  32                 	db	50	;'2'
   142  00080D  2E                 	db	46
   143  00080E  31                 	db	49	;'1'
   144  00080F  66                 	db	102	;'f'
   145  000810  00                 	db	0
   146  000811  6E                 	db	110	;'n'
   147  000812  3D                 	db	61	;'='
   148  000813  25                 	db	37
   149  000814  30                 	db	48	;'0'
   150  000815  34                 	db	52	;'4'
   151  000816  64                 	db	100	;'d'
   152  000817  20                 	db	32
   153  000818  54                 	db	84	;'T'
   154  000819  3D                 	db	61	;'='
   155  00081A  25                 	db	37
   156  00081B  33                 	db	51	;'3'
   157  00081C  2E                 	db	46
   158  00081D  31                 	db	49	;'1'
   159  00081E  66                 	db	102	;'f'
   160  00081F  00                 	db	0
   161  000820                     STR_1:
   162  000820  52                 	db	82	;'R'
   163  000821  41                 	db	65	;'A'
   164  000822  53                 	db	83	;'S'
   165  000823  20                 	db	32
   166  000824  55                 	db	85	;'U'
   167  000825  4E                 	db	78	;'N'
   168  000826  4D                 	db	77	;'M'
   169  000827  53                 	db	83	;'S'
   170  000828  4D                 	db	77	;'M'
   171  000829  00                 	db	0
   172  00082A                     STR_10:
   173  00082A  43                 	db	67	;'C'
   174  00082B  6F                 	db	111	;'o'
   175  00082C  6E                 	db	110	;'n'
   176  00082D  74                 	db	116	;'t'
   177  00082E  3A                 	db	58	;':'
   178  00082F  25                 	db	37
   179  000830  30                 	db	48	;'0'
   180  000831  33                 	db	51	;'3'
   181  000832  64                 	db	100	;'d'
   182  000833  00                 	db	0
   183  000834  74                 	db	116	;'t'
   184  000835  3A                 	db	58	;':'
   185  000836  25                 	db	37
   186  000837  30                 	db	48	;'0'
   187  000838  32                 	db	50	;'2'
   188  000839  2E                 	db	46
   189  00083A  31                 	db	49	;'1'
   190  00083B  66                 	db	102	;'f'
   191  00083C  00                 	db	0
   192  00083D  70                 	db	112	;'p'
   193  00083E  69                 	db	105	;'i'
   194  00083F  3A                 	db	58	;':'
   195  000840  25                 	db	37
   196  000841  2E                 	db	46
   197  000842  34                 	db	52	;'4'
   198  000843  66                 	db	102	;'f'
   199  000844  00                 	db	0
   200  000845  70                 	db	112	;'p'
   201  000846  3A                 	db	58	;':'
   202  000847  30                 	db	48	;'0'
   203  000848  32                 	db	50	;'2'
   204  000849  25                 	db	37
   205  00084A  64                 	db	100	;'d'
   206  00084B  00                 	db	0
   207  00084C  6E                 	db	110	;'n'
   208  00084D  3A                 	db	58	;':'
   209  00084E  30                 	db	48	;'0'
   210  00084F  34                 	db	52	;'4'
   211  000850  25                 	db	37
   212  000851  64                 	db	100	;'d'
   213  000852  00                 	db	0
   214  000853  6E                 	db	110	;'n'
   215  000854  3A                 	db	58	;':'
   216  000855  25                 	db	37
   217  000856  75                 	db	117	;'u'
   218  000857  00                 	db	0
   219  000858                     STR_12:
   220  000858  49                 	db	73	;'I'
   221  000859  4E                 	db	78	;'N'
   222  00085A  46                 	db	70	;'F'
   223  00085B  00                 	db	0
   224  00085C                     STR_16:
   225  00085C  4E                 	db	78	;'N'
   226  00085D  41                 	db	65	;'A'
   227  00085E  4E                 	db	78	;'N'
   228  00085F  00                 	db	0
   229  000860                     STR_13:
   230  000860  69                 	db	105	;'i'
   231  000861  6E                 	db	110	;'n'
   232  000862  66                 	db	102	;'f'
   233  000863  00                 	db	0
   234  000864                     STR_17:
   235  000864  6E                 	db	110	;'n'
   236  000865  61                 	db	97	;'a'
   237  000866  6E                 	db	110	;'n'
   238  000867  00                 	db	0
   239  000868                     STR_20:
   240  000868  6C                 	db	108	;'l'
   241  000869  66                 	db	102	;'f'
   242  00086A  00                 	db	0
   243  00086B  00                 	db	0	; dummy byte at the end
   244  0000                     
   245                           ; #config settings
   246                           
   247                           	psect	cinit
   248  00415C                     __pcinit:
   249                           	callstack 0
   250  00415C                     start_initialization:
   251                           	callstack 0
   252  00415C                     __initialization:
   253                           	callstack 0
   254                           
   255                           ; Initialize objects allocated to BANK0 (5 bytes)
   256                           ; load TBLPTR registers with __pidataBANK0
   257  00415C  0E92               	movlw	low __pidataBANK0
   258  00415E  6EF6               	movwf	tblptrl,c
   259  004160  0E43               	movlw	high __pidataBANK0
   260  004162  6EF7               	movwf	tblptrh,c
   261  004164  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   262  004166  6EF8               	movwf	tblptru,c
   263  004168  EE00  F0D7         	lfsr	0,__pdataBANK0
   264  00416C  EE10 F005          	lfsr	1,5
   265  004170                     copy_data0:
   266  004170  0009               	tblrd		*+
   267  004172  CFF5 FFEE          	movff	tablat,postinc0
   268  004176  50E5               	movf	postdec1,w,c
   269  004178  50E1               	movf	fsr1l,w,c
   270  00417A  E1FA               	bnz	copy_data0
   271                           
   272                           ; Clear objects allocated to BANK1 (80 bytes)
   273  00417C  EE01  F000         	lfsr	0,__pbssBANK1
   274  004180  0E50               	movlw	80
   275  004182                     clear_0:
   276  004182  6AEE               	clrf	postinc0,c
   277  004184  06E8               	decf	wreg,f,c
   278  004186  E1FD               	bnz	clear_0
   279                           
   280                           ; Clear objects allocated to BANK0 (16 bytes)
   281  004188  EE00  F0C7         	lfsr	0,__pbssBANK0
   282  00418C  0E10               	movlw	16
   283  00418E                     clear_1:
   284  00418E  6AEE               	clrf	postinc0,c
   285  004190  06E8               	decf	wreg,f,c
   286  004192  E1FD               	bnz	clear_1
   287  004194                     end_of_initialization:
   288                           	callstack 0
   289  004194                     __end_of__initialization:
   290                           	callstack 0
   291  004194  0E00               	movlw	low (__Lmediumconst shr (0+16))
   292  004196  6EF8               	movwf	tblptru,c
   293  004198  0100               	movlb	0
   294  00419A  EFAD  F021         	goto	_main	;jump to C main() function
   295                           
   296                           	psect	bssBANK0
   297  0000C7                     __pbssBANK0:
   298                           	callstack 0
   299  0000C7                     floorf@F526:
   300                           	callstack 0
   301  0000C7                     	ds	4
   302  0000CB                     ___fpclassifyf@F465:
   303                           	callstack 0
   304  0000CB                     	ds	4
   305  0000CF                     _nout:
   306                           	callstack 0
   307  0000CF                     	ds	2
   308  0000D1                     _width:
   309                           	callstack 0
   310  0000D1                     	ds	2
   311  0000D3                     _prec:
   312                           	callstack 0
   313  0000D3                     	ds	2
   314  0000D5                     _flags:
   315                           	callstack 0
   316  0000D5                     	ds	2
   317                           
   318                           	psect	dataBANK0
   319  0000D7                     __pdataBANK0:
   320                           	callstack 0
   321  0000D7                     ejemplo2@F5205:
   322                           	callstack 0
   323  0000D7                     	ds	5
   324                           
   325                           	psect	bssBANK1
   326  000100                     __pbssBANK1:
   327                           	callstack 0
   328  000100                     _dbuf:
   329                           	callstack 0
   330  000100                     	ds	80
   331                           
   332                           	psect	cstackBANK0
   333  000060                     __pcstackBANK0:
   334                           	callstack 0
   335  000060                     _efgtoa$1143:
   336                           	callstack 0
   337                           
   338                           ; 2 bytes @ 0x0
   339  000060                     	ds	2
   340  000062                     _efgtoa$1150:
   341                           	callstack 0
   342                           
   343                           ; 2 bytes @ 0x2
   344  000062                     	ds	2
   345  000064                     _efgtoa$1151:
   346                           	callstack 0
   347                           
   348                           ; 2 bytes @ 0x4
   349  000064                     	ds	2
   350  000066                     efgtoa@t:
   351                           	callstack 0
   352                           
   353                           ; 2 bytes @ 0x6
   354  000066                     	ds	2
   355  000068                     efgtoa@pp:
   356                           	callstack 0
   357                           
   358                           ; 2 bytes @ 0x8
   359  000068                     	ds	2
   360  00006A                     efgtoa@ne:
   361                           	callstack 0
   362                           
   363                           ; 2 bytes @ 0xA
   364  00006A                     	ds	2
   365  00006C                     efgtoa@m:
   366                           	callstack 0
   367                           
   368                           ; 2 bytes @ 0xC
   369  00006C                     	ds	2
   370  00006E                     efgtoa@ou:
   371                           	callstack 0
   372                           
   373                           ; 4 bytes @ 0xE
   374  00006E                     	ds	4
   375  000072                     efgtoa@d:
   376                           	callstack 0
   377                           
   378                           ; 2 bytes @ 0x12
   379  000072                     	ds	2
   380  000074                     efgtoa@sign:
   381                           	callstack 0
   382                           
   383                           ; 2 bytes @ 0x14
   384  000074                     	ds	2
   385  000076                     efgtoa@p:
   386                           	callstack 0
   387                           
   388                           ; 2 bytes @ 0x16
   389  000076                     	ds	2
   390  000078                     efgtoa@w:
   391                           	callstack 0
   392                           
   393                           ; 2 bytes @ 0x18
   394  000078                     	ds	2
   395  00007A                     efgtoa@nmode:
   396                           	callstack 0
   397                           
   398                           ; 1 bytes @ 0x1A
   399  00007A                     	ds	1
   400  00007B                     efgtoa@mode:
   401                           	callstack 0
   402                           
   403                           ; 1 bytes @ 0x1B
   404  00007B                     	ds	1
   405  00007C                     efgtoa@h:
   406                           	callstack 0
   407                           
   408                           ; 4 bytes @ 0x1C
   409  00007C                     	ds	4
   410  000080                     efgtoa@l:
   411                           	callstack 0
   412                           
   413                           ; 4 bytes @ 0x20
   414  000080                     	ds	4
   415  000084                     efgtoa@i:
   416                           	callstack 0
   417                           
   418                           ; 2 bytes @ 0x24
   419  000084                     	ds	2
   420  000086                     efgtoa@g:
   421                           	callstack 0
   422                           
   423                           ; 4 bytes @ 0x26
   424  000086                     	ds	4
   425  00008A                     efgtoa@e:
   426                           	callstack 0
   427                           
   428                           ; 2 bytes @ 0x2A
   429  00008A                     	ds	2
   430  00008C                     efgtoa@n:
   431                           	callstack 0
   432                           
   433                           ; 2 bytes @ 0x2C
   434  00008C                     	ds	2
   435  00008E                     efgtoa@u:
   436                           	callstack 0
   437                           
   438                           ; 4 bytes @ 0x2E
   439  00008E                     	ds	4
   440  000092                     ?_vfpfcnvrt:
   441                           	callstack 0
   442  000092                     vfpfcnvrt@fp:
   443                           	callstack 0
   444                           
   445                           ; 2 bytes @ 0x32
   446  000092                     	ds	2
   447  000094                     vfpfcnvrt@fmt:
   448                           	callstack 0
   449                           
   450                           ; 2 bytes @ 0x34
   451  000094                     	ds	2
   452  000096                     vfpfcnvrt@ap:
   453                           	callstack 0
   454                           
   455                           ; 2 bytes @ 0x36
   456  000096                     	ds	2
   457  000098                     ?_vfprintf:
   458                           	callstack 0
   459  000098                     vfprintf@fp:
   460                           	callstack 0
   461                           
   462                           ; 2 bytes @ 0x38
   463  000098                     	ds	2
   464  00009A                     vfprintf@fmt:
   465                           	callstack 0
   466                           
   467                           ; 2 bytes @ 0x3A
   468  00009A                     	ds	2
   469  00009C                     vfprintf@ap:
   470                           	callstack 0
   471                           
   472                           ; 2 bytes @ 0x3C
   473  00009C                     	ds	2
   474  00009E                     ?_sprintf:
   475                           	callstack 0
   476  00009E                     sprintf@s:
   477                           	callstack 0
   478                           
   479                           ; 2 bytes @ 0x3E
   480  00009E                     	ds	2
   481  0000A0                     sprintf@fmt:
   482                           	callstack 0
   483                           
   484                           ; 2 bytes @ 0x40
   485  0000A0                     	ds	8
   486  0000A8                     sprintf@ap:
   487                           	callstack 0
   488                           
   489                           ; 2 bytes @ 0x48
   490  0000A8                     	ds	2
   491  0000AA                     sprintf@f:
   492                           	callstack 0
   493                           
   494                           ; 11 bytes @ 0x4A
   495  0000AA                     	ds	11
   496  0000B5                     ejemplo5@str_contador:
   497                           	callstack 0
   498                           
   499                           ; 17 bytes @ 0x55
   500  0000B5                     	ds	17
   501  0000C6                     ejemplo5@contador:
   502                           	callstack 0
   503                           
   504                           ; 1 bytes @ 0x66
   505  0000C6                     	ds	1
   506                           
   507                           	psect	cstackCOMRAM
   508  000001                     __pcstackCOMRAM:
   509                           	callstack 0
   510  000001                     ?_strlen:
   511                           	callstack 0
   512  000001                     ?___fpclassifyf:
   513                           	callstack 0
   514  000001                     ?_isupper:
   515                           	callstack 0
   516  000001                     ?_isdigit:
   517                           	callstack 0
   518  000001                     ?_strncmp:
   519                           	callstack 0
   520  000001                     ?_isspace:
   521                           	callstack 0
   522  000001                     ?___wmul:
   523                           	callstack 0
   524  000001                     ?___awdiv:
   525                           	callstack 0
   526  000001                     ?___awmod:
   527                           	callstack 0
   528  000001                     ?___fladd:
   529                           	callstack 0
   530  000001                     ?___fldiv:
   531                           	callstack 0
   532  000001                     ?___flmul:
   533                           	callstack 0
   534  000001                     ?___flneg:
   535                           	callstack 0
   536  000001                     ?___fltol:
   537                           	callstack 0
   538  000001                     ?___aodiv:
   539                           	callstack 0
   540  000001                     ?___aomod:
   541                           	callstack 0
   542  000001                     ?___lodiv:
   543                           	callstack 0
   544  000001                     ?___lomod:
   545                           	callstack 0
   546  000001                     Lcd_Port@a:
   547                           	callstack 0
   548  000001                     ___wmul@multiplier:
   549                           	callstack 0
   550  000001                     ___awdiv@dividend:
   551                           	callstack 0
   552  000001                     ___awmod@dividend:
   553                           	callstack 0
   554  000001                     isdigit@c:
   555                           	callstack 0
   556  000001                     isspace@c:
   557                           	callstack 0
   558  000001                     isupper@c:
   559                           	callstack 0
   560  000001                     fputc@c:
   561                           	callstack 0
   562  000001                     strcpy@dest:
   563                           	callstack 0
   564  000001                     strlen@s:
   565                           	callstack 0
   566  000001                     strncmp@_l:
   567                           	callstack 0
   568  000001                     ___fleq@ff1:
   569                           	callstack 0
   570  000001                     ___flneg@f1:
   571                           	callstack 0
   572  000001                     ___fltol@f1:
   573                           	callstack 0
   574  000001                     ___fladd@b:
   575                           	callstack 0
   576  000001                     ___fldiv@b:
   577                           	callstack 0
   578  000001                     ___flmul@b:
   579                           	callstack 0
   580  000001                     ___fpclassifyf@x:
   581                           	callstack 0
   582  000001                     ___aodiv@dividend:
   583                           	callstack 0
   584  000001                     ___aomod@dividend:
   585                           	callstack 0
   586  000001                     ___lodiv@dividend:
   587                           	callstack 0
   588  000001                     ___lomod@dividend:
   589                           	callstack 0
   590                           
   591                           ; 8 bytes @ 0x0
   592  000001                     	ds	1
   593  000002                     ??_Lcd_Cmd:
   594  000002                     Lcd_Write_Char@temp:
   595                           	callstack 0
   596                           
   597                           ; 1 bytes @ 0x1
   598  000002                     	ds	1
   599  000003                     ??_isupper:
   600  000003                     ??_isdigit:
   601  000003                     ??_isspace:
   602  000003                     Lcd_Cmd@a:
   603                           	callstack 0
   604  000003                     Lcd_Write_Char@y:
   605                           	callstack 0
   606  000003                     ___wmul@multiplicand:
   607                           	callstack 0
   608  000003                     ___awdiv@divisor:
   609                           	callstack 0
   610  000003                     ___awmod@divisor:
   611                           	callstack 0
   612  000003                     fputc@fp:
   613                           	callstack 0
   614  000003                     strcpy@src:
   615                           	callstack 0
   616  000003                     strlen@a:
   617                           	callstack 0
   618  000003                     strncmp@_r:
   619                           	callstack 0
   620                           
   621                           ; 2 bytes @ 0x2
   622  000003                     	ds	1
   623  000004                     ??_Lcd_Init:
   624  000004                     Lcd_Set_Cursor@b:
   625                           	callstack 0
   626  000004                     Lcd_Write_Char@a:
   627                           	callstack 0
   628                           
   629                           ; 1 bytes @ 0x3
   630  000004                     	ds	1
   631  000005                     ??_fputc:
   632  000005                     ??___fpclassifyf:
   633  000005                     ??_strcpy:
   634  000005                     ??___fltol:
   635  000005                     Lcd_Set_Cursor@a:
   636                           	callstack 0
   637  000005                     ___awdiv@counter:
   638                           	callstack 0
   639  000005                     ___awmod@counter:
   640                           	callstack 0
   641  000005                     Lcd_Write_String@a:
   642                           	callstack 0
   643  000005                     ___wmul@product:
   644                           	callstack 0
   645  000005                     strncmp@n:
   646                           	callstack 0
   647  000005                     ___fleq@ff2:
   648                           	callstack 0
   649  000005                     ___fladd@a:
   650                           	callstack 0
   651  000005                     ___fldiv@a:
   652                           	callstack 0
   653  000005                     ___flmul@a:
   654                           	callstack 0
   655                           
   656                           ; 4 bytes @ 0x4
   657  000005                     	ds	1
   658  000006                     Lcd_Set_Cursor@z:
   659                           	callstack 0
   660  000006                     ___awdiv@sign:
   661                           	callstack 0
   662  000006                     ___awmod@sign:
   663                           	callstack 0
   664                           
   665                           ; 1 bytes @ 0x5
   666  000006                     	ds	1
   667  000007                     ??_strncmp:
   668  000007                     ??_Lcd_Write_String:
   669  000007                     ?_tolower:
   670                           	callstack 0
   671  000007                     Lcd_Set_Cursor@y:
   672                           	callstack 0
   673  000007                     _isspace$1240:
   674                           	callstack 0
   675  000007                     ___awdiv@quotient:
   676                           	callstack 0
   677  000007                     strcpy@s:
   678                           	callstack 0
   679  000007                     tolower@c:
   680                           	callstack 0
   681                           
   682                           ; 2 bytes @ 0x6
   683  000007                     	ds	1
   684  000008                     ?_atoi:
   685                           	callstack 0
   686  000008                     Lcd_Set_Cursor@temp:
   687                           	callstack 0
   688  000008                     atoi@s:
   689                           	callstack 0
   690  000008                     strncmp@l:
   691                           	callstack 0
   692                           
   693                           ; 2 bytes @ 0x7
   694  000008                     	ds	1
   695  000009                     ??___fladd:
   696  000009                     ??___fldiv:
   697  000009                     ??___flmul:
   698  000009                     ??_tolower:
   699  000009                     ??___fleq:
   700  000009                     ___fltol@sign1:
   701                           	callstack 0
   702  000009                     Lcd_Write_String@i:
   703                           	callstack 0
   704  000009                     ___fpclassifyf@e:
   705                           	callstack 0
   706  000009                     strcpy@d:
   707                           	callstack 0
   708  000009                     ___aodiv@divisor:
   709                           	callstack 0
   710  000009                     ___aomod@divisor:
   711                           	callstack 0
   712  000009                     ___lodiv@divisor:
   713                           	callstack 0
   714  000009                     ___lomod@divisor:
   715                           	callstack 0
   716                           
   717                           ; 8 bytes @ 0x8
   718  000009                     	ds	1
   719  00000A                     ??_atoi:
   720  00000A                     ___fltol@exp1:
   721                           	callstack 0
   722  00000A                     fputs@s:
   723                           	callstack 0
   724  00000A                     strncmp@r:
   725                           	callstack 0
   726                           
   727                           ; 2 bytes @ 0x9
   728  00000A                     	ds	1
   729  00000B                     ___fpclassifyf@u:
   730                           	callstack 0
   731                           
   732                           ; 4 bytes @ 0xA
   733  00000B                     	ds	1
   734  00000C                     fputs@fp:
   735                           	callstack 0
   736                           
   737                           ; 2 bytes @ 0xB
   738  00000C                     	ds	1
   739  00000D                     ___fladd@signs:
   740                           	callstack 0
   741  00000D                     ___flmul@sign:
   742                           	callstack 0
   743  00000D                     ___fldiv@rem:
   744                           	callstack 0
   745                           
   746                           ; 4 bytes @ 0xC
   747  00000D                     	ds	1
   748  00000E                     ___fladd@aexp:
   749                           	callstack 0
   750  00000E                     fputs@c:
   751                           	callstack 0
   752  00000E                     atoi@neg:
   753                           	callstack 0
   754  00000E                     ___flmul@grs:
   755                           	callstack 0
   756                           
   757                           ; 4 bytes @ 0xD
   758  00000E                     	ds	1
   759  00000F                     ___fladd@bexp:
   760                           	callstack 0
   761  00000F                     fputs@i:
   762                           	callstack 0
   763                           
   764                           ; 2 bytes @ 0xE
   765  00000F                     	ds	1
   766  000010                     ___fladd@grs:
   767                           	callstack 0
   768  000010                     atoi@n:
   769                           	callstack 0
   770                           
   771                           ; 2 bytes @ 0xF
   772  000010                     	ds	1
   773  000011                     ?_pad:
   774                           	callstack 0
   775  000011                     ___aodiv@counter:
   776                           	callstack 0
   777  000011                     ___aomod@counter:
   778                           	callstack 0
   779  000011                     ___lomod@counter:
   780                           	callstack 0
   781  000011                     ___fldiv@sign:
   782                           	callstack 0
   783  000011                     pad@fp:
   784                           	callstack 0
   785  000011                     ___lodiv@quotient:
   786                           	callstack 0
   787                           
   788                           ; 8 bytes @ 0x10
   789  000011                     	ds	1
   790  000012                     ___aodiv@sign:
   791                           	callstack 0
   792  000012                     ___aomod@sign:
   793                           	callstack 0
   794  000012                     ___flmul@aexp:
   795                           	callstack 0
   796  000012                     ___fldiv@new_exp:
   797                           	callstack 0
   798                           
   799                           ; 2 bytes @ 0x11
   800  000012                     	ds	1
   801  000013                     ?_abs:
   802                           	callstack 0
   803  000013                     ___flmul@bexp:
   804                           	callstack 0
   805  000013                     pad@buf:
   806                           	callstack 0
   807  000013                     abs@a:
   808                           	callstack 0
   809  000013                     ___aodiv@quotient:
   810                           	callstack 0
   811                           
   812                           ; 8 bytes @ 0x12
   813  000013                     	ds	1
   814  000014                     ___fldiv@grs:
   815                           	callstack 0
   816  000014                     ___flmul@prod:
   817                           	callstack 0
   818                           
   819                           ; 4 bytes @ 0x13
   820  000014                     	ds	1
   821  000015                     ??_abs:
   822  000015                     pad@p:
   823                           	callstack 0
   824                           
   825                           ; 2 bytes @ 0x14
   826  000015                     	ds	2
   827  000017                     ??_pad:
   828                           
   829                           ; 1 bytes @ 0x16
   830  000017                     	ds	1
   831  000018                     ___fldiv@bexp:
   832                           	callstack 0
   833  000018                     ___flmul@temp:
   834                           	callstack 0
   835  000018                     pad@i:
   836                           	callstack 0
   837                           
   838                           ; 2 bytes @ 0x17
   839  000018                     	ds	1
   840  000019                     ___lodiv@counter:
   841                           	callstack 0
   842  000019                     ___fldiv@aexp:
   843                           	callstack 0
   844                           
   845                           ; 1 bytes @ 0x18
   846  000019                     	ds	1
   847  00001A                     ?___flsub:
   848                           	callstack 0
   849  00001A                     ?_floorf:
   850                           	callstack 0
   851  00001A                     pad@w:
   852                           	callstack 0
   853  00001A                     ___flge@ff1:
   854                           	callstack 0
   855  00001A                     ___flsub@b:
   856                           	callstack 0
   857  00001A                     floorf@x:
   858                           	callstack 0
   859                           
   860                           ; 4 bytes @ 0x19
   861  00001A                     	ds	2
   862  00001C                     ?_dtoa:
   863                           	callstack 0
   864  00001C                     ?_utoa:
   865                           	callstack 0
   866  00001C                     dtoa@fp:
   867                           	callstack 0
   868  00001C                     utoa@fp:
   869                           	callstack 0
   870                           
   871                           ; 2 bytes @ 0x1B
   872  00001C                     	ds	2
   873  00001E                     ??_floorf:
   874  00001E                     ___flge@ff2:
   875                           	callstack 0
   876  00001E                     ___flsub@a:
   877                           	callstack 0
   878  00001E                     dtoa@d:
   879                           	callstack 0
   880  00001E                     utoa@d:
   881                           	callstack 0
   882                           
   883                           ; 8 bytes @ 0x1D
   884  00001E                     	ds	4
   885  000022                     ??___flge:
   886                           
   887                           ; 1 bytes @ 0x21
   888  000022                     	ds	2
   889  000024                     floorf@m:
   890                           	callstack 0
   891                           
   892                           ; 4 bytes @ 0x23
   893  000024                     	ds	2
   894  000026                     ??_dtoa:
   895  000026                     ??_utoa:
   896                           
   897                           ; 1 bytes @ 0x25
   898  000026                     	ds	2
   899  000028                     floorf@e:
   900                           	callstack 0
   901                           
   902                           ; 2 bytes @ 0x27
   903  000028                     	ds	2
   904  00002A                     floorf@u:
   905                           	callstack 0
   906                           
   907                           ; 4 bytes @ 0x29
   908  00002A                     	ds	4
   909  00002E                     ?_efgtoa:
   910                           	callstack 0
   911  00002E                     _dtoa$1119:
   912                           	callstack 0
   913  00002E                     efgtoa@fp:
   914                           	callstack 0
   915  00002E                     utoa@p:
   916                           	callstack 0
   917                           
   918                           ; 2 bytes @ 0x2D
   919  00002E                     	ds	2
   920  000030                     dtoa@p:
   921                           	callstack 0
   922  000030                     utoa@w:
   923                           	callstack 0
   924  000030                     efgtoa@f:
   925                           	callstack 0
   926                           
   927                           ; 4 bytes @ 0x2F
   928  000030                     	ds	2
   929  000032                     dtoa@w:
   930                           	callstack 0
   931  000032                     utoa@n:
   932                           	callstack 0
   933                           
   934                           ; 8 bytes @ 0x31
   935  000032                     	ds	2
   936  000034                     efgtoa@c:
   937                           	callstack 0
   938  000034                     dtoa@s:
   939                           	callstack 0
   940                           
   941                           ; 2 bytes @ 0x33
   942  000034                     	ds	1
   943  000035                     ??_efgtoa:
   944                           
   945                           ; 1 bytes @ 0x34
   946  000035                     	ds	1
   947  000036                     dtoa@n:
   948                           	callstack 0
   949                           
   950                           ; 8 bytes @ 0x35
   951  000036                     	ds	4
   952  00003A                     utoa@i:
   953                           	callstack 0
   954                           
   955                           ; 2 bytes @ 0x39
   956  00003A                     	ds	4
   957  00003E                     dtoa@i:
   958                           	callstack 0
   959                           
   960                           ; 2 bytes @ 0x3D
   961  00003E                     	ds	2
   962  000040                     ??_vfpfcnvrt:
   963                           
   964                           ; 1 bytes @ 0x3F
   965  000040                     	ds	4
   966  000044                     vfpfcnvrt@ll:
   967                           	callstack 0
   968                           
   969                           ; 8 bytes @ 0x43
   970  000044                     	ds	8
   971  00004C                     vfpfcnvrt@llu:
   972                           	callstack 0
   973                           
   974                           ; 8 bytes @ 0x4B
   975  00004C                     	ds	8
   976  000054                     vfpfcnvrt@done:
   977                           	callstack 0
   978                           
   979                           ; 2 bytes @ 0x53
   980  000054                     	ds	2
   981  000056                     vfpfcnvrt@f:
   982                           	callstack 0
   983                           
   984                           ; 4 bytes @ 0x55
   985  000056                     	ds	4
   986  00005A                     vfpfcnvrt@ct:
   987                           	callstack 0
   988                           
   989                           ; 3 bytes @ 0x59
   990  00005A                     	ds	3
   991  00005D                     vfpfcnvrt@c:
   992                           	callstack 0
   993                           
   994                           ; 1 bytes @ 0x5C
   995  00005D                     	ds	1
   996  00005E                     vfprintf@cfmt:
   997                           	callstack 0
   998                           
   999                           ; 2 bytes @ 0x5D
  1000  00005E                     	ds	2
  1001  000060                     
  1002                           ; 1 bytes @ 0x5F
  1003 ;;
  1004 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1005 ;;
  1006 ;; *************** function _main *****************
  1007 ;; Defined at:
  1008 ;;		line 28 in file "main.c"
  1009 ;; Parameters:    Size  Location     Type
  1010 ;;		None
  1011 ;; Auto vars:     Size  Location     Type
  1012 ;;		None
  1013 ;; Return value:  Size  Location     Type
  1014 ;;                  1    wreg      void 
  1015 ;; Registers used:
  1016 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1017 ;; Tracked objects:
  1018 ;;		On entry : 0/0
  1019 ;;		On exit  : 0/0
  1020 ;;		Unchanged: 0/0
  1021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1022 ;;      Params:         0       0       0       0       0       0       0       0       0
  1023 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1024 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1025 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1026 ;;Total ram usage:        0 bytes
  1027 ;; Hardware stack levels required when called: 9
  1028 ;; This function calls:
  1029 ;;		_Config_Clock
  1030 ;;		_Config_Port
  1031 ;;		_Lcd_Clear
  1032 ;;		_Lcd_Init
  1033 ;;		_ejemplo5
  1034 ;; This function is called by:
  1035 ;;		Startup code after reset
  1036 ;; This function uses a non-reentrant model
  1037 ;;
  1038                           
  1039                           	psect	text0
  1040  00435A                     __ptext0:
  1041                           	callstack 0
  1042  00435A                     _main:
  1043                           	callstack 22
  1044  00435A                     
  1045                           ;main.c: 29:     Config_Clock();
  1046  00435A  ECC2  F021         	call	_Config_Clock	;wreg free
  1047                           
  1048                           ;main.c: 30:     Config_Port();
  1049  00435E  EC9D  F021         	call	_Config_Port	;wreg free
  1050                           
  1051                           ;main.c: 31:     Lcd_Init();
  1052  004362  ECFA  F01E         	call	_Lcd_Init	;wreg free
  1053                           
  1054                           ;main.c: 32:     Lcd_Clear();
  1055  004366  ECBB  F021         	call	_Lcd_Clear	;wreg free
  1056  00436A                     l4736:
  1057                           
  1058                           ;main.c: 39:         ejemplo5();
  1059  00436A  EC67  F01E         	call	_ejemplo5	;wreg free
  1060  00436E  EFB5  F021         	goto	l4736
  1061  004372  EF00  F000         	goto	start
  1062  004376                     __end_of_main:
  1063                           	callstack 0
  1064                           
  1065 ;; *************** function _ejemplo5 *****************
  1066 ;; Defined at:
  1067 ;;		line 156 in file "main.c"
  1068 ;; Parameters:    Size  Location     Type
  1069 ;;		None
  1070 ;; Auto vars:     Size  Location     Type
  1071 ;;  str_contador   17   85[BANK0 ] unsigned char [17]
  1072 ;;  contador        1  102[BANK0 ] unsigned char 
  1073 ;; Return value:  Size  Location     Type
  1074 ;;                  1    wreg      void 
  1075 ;; Registers used:
  1076 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1077 ;; Tracked objects:
  1078 ;;		On entry : 0/0
  1079 ;;		On exit  : 0/0
  1080 ;;		Unchanged: 0/0
  1081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1082 ;;      Params:         0       0       0       0       0       0       0       0       0
  1083 ;;      Locals:         0      18       0       0       0       0       0       0       0
  1084 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1085 ;;      Totals:         0      18       0       0       0       0       0       0       0
  1086 ;;Total ram usage:       18 bytes
  1087 ;; Hardware stack levels used: 1
  1088 ;; Hardware stack levels required when called: 8
  1089 ;; This function calls:
  1090 ;;		_Lcd_Set_Cursor
  1091 ;;		_Lcd_Write_String
  1092 ;;		_sprintf
  1093 ;; This function is called by:
  1094 ;;		_main
  1095 ;; This function uses a non-reentrant model
  1096 ;;
  1097                           
  1098                           	psect	text1
  1099  003CCE                     __ptext1:
  1100                           	callstack 0
  1101  003CCE                     _ejemplo5:
  1102                           	callstack 22
  1103  003CCE                     
  1104                           ;main.c: 157:     uint8_t contador=0;
  1105  003CCE  0E00               	movlw	0
  1106  003CD0  0100               	movlb	0	; () banked
  1107  003CD2  6FC6               	movwf	ejemplo5@contador& (0+255),b
  1108  003CD4                     l4704:
  1109                           
  1110                           ;main.c: 161:         if(!PORTAbits.RA0){
  1111  003CD4  B080               	btfsc	128,0,c	;volatile
  1112  003CD6  EF6F  F01E         	goto	u5571
  1113  003CDA  EF71  F01E         	goto	u5570
  1114  003CDE                     u5571:
  1115  003CDE  EF85  F01E         	goto	l4714
  1116  003CE2                     u5570:
  1117  003CE2                     l128:
  1118  003CE2  A080               	btfss	128,0,c	;volatile
  1119  003CE4  EF76  F01E         	goto	u5581
  1120  003CE8  EF78  F01E         	goto	u5580
  1121  003CEC                     u5581:
  1122  003CEC  EF71  F01E         	goto	l128
  1123  003CF0                     u5580:
  1124  003CF0                     
  1125                           ;main.c: 163:             contador++;
  1126  003CF0  0100               	movlb	0	; () banked
  1127  003CF2  2BC6               	incf	ejemplo5@contador& (0+255),f,b
  1128  003CF4                     
  1129                           ; BSR set to: 0
  1130                           ;main.c: 164:             if(contador==15){
  1131  003CF4  0E0F               	movlw	15
  1132  003CF6  19C6               	xorwf	ejemplo5@contador& (0+255),w,b
  1133  003CF8  A4D8               	btfss	status,2,c
  1134  003CFA  EF81  F01E         	goto	u5591
  1135  003CFE  EF83  F01E         	goto	u5590
  1136  003D02                     u5591:
  1137  003D02  EF85  F01E         	goto	l4714
  1138  003D06                     u5590:
  1139  003D06                     
  1140                           ; BSR set to: 0
  1141                           ;main.c: 165:                 contador=0;
  1142  003D06  0E00               	movlw	0
  1143  003D08  6FC6               	movwf	ejemplo5@contador& (0+255),b
  1144  003D0A                     l4714:
  1145                           
  1146                           ;main.c: 169:         if(!PORTBbits.RB1){
  1147  003D0A  B281               	btfsc	129,1,c	;volatile
  1148  003D0C  EF8A  F01E         	goto	u5601
  1149  003D10  EF8C  F01E         	goto	u5600
  1150  003D14                     u5601:
  1151  003D14  EF9F  F01E         	goto	l4724
  1152  003D18                     u5600:
  1153  003D18                     l133:
  1154  003D18  A281               	btfss	129,1,c	;volatile
  1155  003D1A  EF91  F01E         	goto	u5611
  1156  003D1E  EF93  F01E         	goto	u5610
  1157  003D22                     u5611:
  1158  003D22  EF8C  F01E         	goto	l133
  1159  003D26                     u5610:
  1160  003D26                     
  1161                           ;main.c: 171:             contador--;
  1162  003D26  0100               	movlb	0	; () banked
  1163  003D28  07C6               	decf	ejemplo5@contador& (0+255),f,b
  1164  003D2A                     
  1165                           ; BSR set to: 0
  1166                           ;main.c: 172:             if(contador==255){
  1167  003D2A  29C6               	incf	ejemplo5@contador& (0+255),w,b
  1168  003D2C  A4D8               	btfss	status,2,c
  1169  003D2E  EF9B  F01E         	goto	u5621
  1170  003D32  EF9D  F01E         	goto	u5620
  1171  003D36                     u5621:
  1172  003D36  EF9F  F01E         	goto	l4724
  1173  003D3A                     u5620:
  1174  003D3A                     
  1175                           ; BSR set to: 0
  1176                           ;main.c: 173:                 contador=0;
  1177  003D3A  0E00               	movlw	0
  1178  003D3C  6FC6               	movwf	ejemplo5@contador& (0+255),b
  1179  003D3E                     l4724:
  1180                           
  1181                           ;main.c: 177:         sprintf(str_contador,"Cont:%03d",contador);
  1182  003D3E  0EB5               	movlw	low ejemplo5@str_contador
  1183  003D40  0100               	movlb	0	; () banked
  1184  003D42  6F9E               	movwf	sprintf@s& (0+255),b
  1185  003D44  0E00               	movlw	high ejemplo5@str_contador
  1186  003D46  6F9F               	movwf	(sprintf@s+1)& (0+255),b
  1187  003D48  0E2A               	movlw	low STR_10
  1188  003D4A  6FA0               	movwf	sprintf@fmt& (0+255),b
  1189  003D4C  0E08               	movlw	high STR_10
  1190  003D4E  6FA1               	movwf	(sprintf@fmt+1)& (0+255),b
  1191  003D50  C0C6  F0A2         	movff	ejemplo5@contador,?_sprintf+4
  1192  003D54  6BA3               	clrf	(?_sprintf+5)& (0+255),b
  1193  003D56  ECF4  F01F         	call	_sprintf	;wreg free
  1194  003D5A                     
  1195                           ;main.c: 178:         Lcd_Set_Cursor(1,1);
  1196  003D5A  0E01               	movlw	1
  1197  003D5C  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1198  003D5E  0E01               	movlw	1
  1199  003D60  EC34  F01F         	call	_Lcd_Set_Cursor
  1200  003D64                     
  1201                           ;main.c: 179:         Lcd_Write_String(str_contador);
  1202  003D64  0EB5               	movlw	low ejemplo5@str_contador
  1203  003D66  6E05               	movwf	Lcd_Write_String@a^0,c
  1204  003D68  0E00               	movlw	high ejemplo5@str_contador
  1205  003D6A  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  1206  003D6C  ECBB  F01E         	call	_Lcd_Write_String	;wreg free
  1207  003D70  EF6A  F01E         	goto	l4704
  1208  003D74  0012               	return		;funcret
  1209  003D76                     __end_of_ejemplo5:
  1210                           	callstack 0
  1211                           
  1212 ;; *************** function _sprintf *****************
  1213 ;; Defined at:
  1214 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_sprintf.c"
  1215 ;; Parameters:    Size  Location     Type
  1216 ;;  s               2   62[BANK0 ] PTR unsigned char 
  1217 ;;		 -> ejemplo5@str_contador(17), ejemplo4@str_contador(10), ejemplo3@str_dato2(17), ejemplo3@str_dato(17), 
  1218 ;;		 -> ejemplo2@str_num_primo(2), ejemplo2@str_pi(7), ejemplo2@str_temp1(4), ejemplo2@str_numero(4), 
  1219 ;;  fmt             2   64[BANK0 ] PTR const unsigned char 
  1220 ;;		 -> STR_11(10), STR_10(10), STR_9(15), STR_8(16), 
  1221 ;;		 -> STR_7(7), STR_6(8), STR_5(9), STR_4(5), 
  1222 ;;		 -> STR_3(7), 
  1223 ;; Auto vars:     Size  Location     Type
  1224 ;;  f              11   74[BANK0 ] struct _IO_FILE
  1225 ;;  ap              2   72[BANK0 ] PTR void [1]
  1226 ;;		 -> ?_sprintf(2), 
  1227 ;;  ret             2    0        int 
  1228 ;; Return value:  Size  Location     Type
  1229 ;;                  2   62[BANK0 ] int 
  1230 ;; Registers used:
  1231 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1232 ;; Tracked objects:
  1233 ;;		On entry : 0/0
  1234 ;;		On exit  : 0/0
  1235 ;;		Unchanged: 0/0
  1236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1237 ;;      Params:         0      10       0       0       0       0       0       0       0
  1238 ;;      Locals:         0      13       0       0       0       0       0       0       0
  1239 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1240 ;;      Totals:         0      23       0       0       0       0       0       0       0
  1241 ;;Total ram usage:       23 bytes
  1242 ;; Hardware stack levels used: 1
  1243 ;; Hardware stack levels required when called: 7
  1244 ;; This function calls:
  1245 ;;		_vfprintf
  1246 ;; This function is called by:
  1247 ;;		_ejemplo5
  1248 ;;		_ejemplo2
  1249 ;;		_ejemplo3
  1250 ;;		_ejemplo4
  1251 ;; This function uses a non-reentrant model
  1252 ;;
  1253                           
  1254                           	psect	text2
  1255  003FE8                     __ptext2:
  1256                           	callstack 0
  1257  003FE8                     _sprintf:
  1258                           	callstack 22
  1259  003FE8  0EA2               	movlw	low (?_sprintf+4)
  1260  003FEA  0100               	movlb	0	; () banked
  1261  003FEC  6FA8               	movwf	sprintf@ap& (0+255),b
  1262  003FEE  0E00               	movlw	high (?_sprintf+4)
  1263  003FF0  6FA9               	movwf	(sprintf@ap+1)& (0+255),b
  1264  003FF2  C09E  F0AA         	movff	sprintf@s,sprintf@f
  1265  003FF6  C09F  F0AB         	movff	sprintf@s+1,sprintf@f+1
  1266  003FFA                     
  1267                           ; BSR set to: 0
  1268  003FFA  0E00               	movlw	0
  1269  003FFC  6FAE               	movwf	(sprintf@f+4)& (0+255),b
  1270  003FFE  0E00               	movlw	0
  1271  004000  6FAD               	movwf	(sprintf@f+3)& (0+255),b
  1272  004002                     
  1273                           ; BSR set to: 0
  1274  004002  0E00               	movlw	0
  1275  004004  6FB4               	movwf	(sprintf@f+10)& (0+255),b
  1276  004006  0E00               	movlw	0
  1277  004008  6FB3               	movwf	(sprintf@f+9)& (0+255),b
  1278  00400A                     
  1279                           ; BSR set to: 0
  1280  00400A  0EAA               	movlw	low sprintf@f
  1281  00400C  6F98               	movwf	vfprintf@fp& (0+255),b
  1282  00400E  0E00               	movlw	high sprintf@f
  1283  004010  6F99               	movwf	(vfprintf@fp+1)& (0+255),b
  1284  004012  C0A0  F09A         	movff	sprintf@fmt,vfprintf@fmt
  1285  004016  C0A1  F09B         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1286  00401A  0EA8               	movlw	low sprintf@ap
  1287  00401C  6F9C               	movwf	vfprintf@ap& (0+255),b
  1288  00401E  0E00               	movlw	high sprintf@ap
  1289  004020  6F9D               	movwf	(vfprintf@ap+1)& (0+255),b
  1290  004022  EC67  F01F         	call	_vfprintf	;wreg free
  1291  004026  0100               	movlb	0	; () banked
  1292  004028  51AD               	movf	(sprintf@f+3)& (0+255),w,b
  1293  00402A  259E               	addwf	sprintf@s& (0+255),w,b
  1294  00402C  6ED9               	movwf	fsr2l,c
  1295  00402E  51AE               	movf	(sprintf@f+4)& (0+255),w,b
  1296  004030  219F               	addwfc	(sprintf@s+1)& (0+255),w,b
  1297  004032  6EDA               	movwf	fsr2h,c
  1298  004034  0E00               	movlw	0
  1299  004036  6EDF               	movwf	indf2,c
  1300  004038                     
  1301                           ; BSR set to: 0
  1302  004038  0012               	return		;funcret
  1303  00403A                     __end_of_sprintf:
  1304                           	callstack 0
  1305                           
  1306 ;; *************** function _vfprintf *****************
  1307 ;; Defined at:
  1308 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1309 ;; Parameters:    Size  Location     Type
  1310 ;;  fp              2   56[BANK0 ] PTR struct _IO_FILE
  1311 ;;		 -> sprintf@f(11), 
  1312 ;;  fmt             2   58[BANK0 ] PTR const unsigned char 
  1313 ;;		 -> STR_11(10), STR_10(10), STR_9(15), STR_8(16), 
  1314 ;;		 -> STR_7(7), STR_6(8), STR_5(9), STR_4(5), 
  1315 ;;		 -> STR_3(7), 
  1316 ;;  ap              2   60[BANK0 ] PTR PTR void 
  1317 ;;		 -> sprintf@ap(2), 
  1318 ;; Auto vars:     Size  Location     Type
  1319 ;;  cfmt            2   93[COMRAM] PTR unsigned char 
  1320 ;;		 -> STR_11(10), STR_10(10), STR_9(15), STR_8(16), 
  1321 ;;		 -> STR_7(7), STR_6(8), STR_5(9), STR_4(5), 
  1322 ;;		 -> STR_3(7), 
  1323 ;; Return value:  Size  Location     Type
  1324 ;;                  2   56[BANK0 ] int 
  1325 ;; Registers used:
  1326 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1327 ;; Tracked objects:
  1328 ;;		On entry : 0/0
  1329 ;;		On exit  : 0/0
  1330 ;;		Unchanged: 0/0
  1331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1332 ;;      Params:         0       6       0       0       0       0       0       0       0
  1333 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1334 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1335 ;;      Totals:         2       6       0       0       0       0       0       0       0
  1336 ;;Total ram usage:        8 bytes
  1337 ;; Hardware stack levels used: 1
  1338 ;; Hardware stack levels required when called: 6
  1339 ;; This function calls:
  1340 ;;		_vfpfcnvrt
  1341 ;; This function is called by:
  1342 ;;		_sprintf
  1343 ;; This function uses a non-reentrant model
  1344 ;;
  1345                           
  1346                           	psect	text3
  1347  003ECE                     __ptext3:
  1348                           	callstack 0
  1349  003ECE                     _vfprintf:
  1350                           	callstack 22
  1351  003ECE                     
  1352                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1353  003ECE  C09A  F05E         	movff	vfprintf@fmt,vfprintf@cfmt
  1354  003ED2  C09B  F05F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1355  003ED6                     
  1356                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1357  003ED6  0E00               	movlw	0
  1358  003ED8  0100               	movlb	0	; () banked
  1359  003EDA  6FD0               	movwf	(_nout+1)& (0+255),b
  1360  003EDC  0E00               	movlw	0
  1361  003EDE  6FCF               	movwf	_nout& (0+255),b
  1362                           
  1363                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1364  003EE0  EF85  F01F         	goto	l4634
  1365  003EE4                     l4632:
  1366                           
  1367                           ; BSR set to: 0
  1368                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1369  003EE4  C098  F092         	movff	vfprintf@fp,vfpfcnvrt@fp
  1370  003EE8  C099  F093         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1371  003EEC  0E5E               	movlw	low vfprintf@cfmt
  1372  003EEE  6F94               	movwf	vfpfcnvrt@fmt& (0+255),b
  1373  003EF0  0E00               	movlw	high vfprintf@cfmt
  1374  003EF2  6F95               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1375  003EF4  C09C  F096         	movff	vfprintf@ap,vfpfcnvrt@ap
  1376  003EF8  C09D  F097         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1377  003EFC  EC3D  F00A         	call	_vfpfcnvrt	;wreg free
  1378  003F00  0100               	movlb	0	; () banked
  1379  003F02  5192               	movf	?_vfpfcnvrt& (0+255),w,b
  1380  003F04  27CF               	addwf	_nout& (0+255),f,b
  1381  003F06  5193               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1382  003F08  23D0               	addwfc	(_nout+1)& (0+255),f,b
  1383  003F0A                     l4634:
  1384                           
  1385                           ; BSR set to: 0
  1386                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1387  003F0A  C05E  FFF6         	movff	vfprintf@cfmt,tblptrl
  1388  003F0E  C05F  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1389  003F12                     	if	0	;tblptru may be non-zero
  1390  003F12                     	endif
  1391  003F12                     	if	0	;tblptru may be non-zero
  1392  003F12                     	endif
  1393  003F12  0008               	tblrd		*
  1394  003F14  50F5               	movf	tablat,w,c
  1395  003F16  0900               	iorlw	0
  1396  003F18  A4D8               	btfss	status,2,c
  1397  003F1A  EF91  F01F         	goto	u5511
  1398  003F1E  EF93  F01F         	goto	u5510
  1399  003F22                     u5511:
  1400  003F22  EF72  F01F         	goto	l4632
  1401  003F26                     u5510:
  1402  003F26                     
  1403                           ; BSR set to: 0
  1404                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1405  003F26  C0CF  F098         	movff	_nout,?_vfprintf
  1406  003F2A  C0D0  F099         	movff	_nout+1,?_vfprintf+1
  1407  003F2E                     
  1408                           ; BSR set to: 0
  1409  003F2E  0012               	return		;funcret
  1410  003F30                     __end_of_vfprintf:
  1411                           	callstack 0
  1412                           
  1413 ;; *************** function _vfpfcnvrt *****************
  1414 ;; Defined at:
  1415 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1416 ;; Parameters:    Size  Location     Type
  1417 ;;  fp              2   50[BANK0 ] PTR struct _IO_FILE
  1418 ;;		 -> sprintf@f(11), 
  1419 ;;  fmt             2   52[BANK0 ] PTR PTR unsigned char 
  1420 ;;		 -> vfprintf@cfmt(2), 
  1421 ;;  ap              2   54[BANK0 ] PTR PTR void 
  1422 ;;		 -> sprintf@ap(2), 
  1423 ;; Auto vars:     Size  Location     Type
  1424 ;;  llu             8   75[COMRAM] unsigned long long 
  1425 ;;  ll              8   67[COMRAM] long long 
  1426 ;;  f               4   85[COMRAM] long long 
  1427 ;;  ct              3   89[COMRAM] unsigned char [3]
  1428 ;;  vp              3    0        PTR void 
  1429 ;;  cp              3    0        PTR unsigned char 
  1430 ;;  done            2   83[COMRAM] int 
  1431 ;;  i               2    0        int 
  1432 ;;  c               1   92[COMRAM] unsigned char 
  1433 ;; Return value:  Size  Location     Type
  1434 ;;                  2   50[BANK0 ] int 
  1435 ;; Registers used:
  1436 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1437 ;; Tracked objects:
  1438 ;;		On entry : 0/0
  1439 ;;		On exit  : 0/0
  1440 ;;		Unchanged: 0/0
  1441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1442 ;;      Params:         0       6       0       0       0       0       0       0       0
  1443 ;;      Locals:        26       0       0       0       0       0       0       0       0
  1444 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1445 ;;      Totals:        30       6       0       0       0       0       0       0       0
  1446 ;;Total ram usage:       36 bytes
  1447 ;; Hardware stack levels used: 1
  1448 ;; Hardware stack levels required when called: 5
  1449 ;; This function calls:
  1450 ;;		_atoi
  1451 ;;		_dtoa
  1452 ;;		_efgtoa
  1453 ;;		_fputc
  1454 ;;		_isdigit
  1455 ;;		_isupper
  1456 ;;		_strncmp
  1457 ;;		_tolower
  1458 ;;		_utoa
  1459 ;; This function is called by:
  1460 ;;		_vfprintf
  1461 ;; This function uses a non-reentrant model
  1462 ;;
  1463                           
  1464                           	psect	text4
  1465  00147A                     __ptext4:
  1466                           	callstack 0
  1467  00147A                     _vfpfcnvrt:
  1468                           	callstack 22
  1469  00147A                     
  1470                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.36\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1471  00147A  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1472  00147E  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1473  001482  CFDE FFF6          	movff	postinc2,tblptrl
  1474  001486  CFDD FFF7          	movff	postdec2,tblptrh
  1475  00148A                     	if	0	;tblptru may be non-zero
  1476  00148A                     	endif
  1477  00148A                     	if	0	;tblptru may be non-zero
  1478  00148A                     	endif
  1479  00148A  0008               	tblrd		*
  1480  00148C  50F5               	movf	tablat,w,c
  1481  00148E  0A25               	xorlw	37
  1482  001490  A4D8               	btfss	status,2,c
  1483  001492  EF4D  F00A         	goto	u5331
  1484  001496  EF4F  F00A         	goto	u5330
  1485  00149A                     u5331:
  1486  00149A  EFC5  F00D         	goto	l4584
  1487  00149E                     u5330:
  1488  00149E                     
  1489                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1490  00149E  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1491  0014A2  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1492  0014A6  2ADE               	incf	postinc2,f,c
  1493  0014A8  0E00               	movlw	0
  1494  0014AA  22DD               	addwfc	postdec2,f,c
  1495  0014AC                     
  1496                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1497  0014AC  0E00               	movlw	0
  1498  0014AE  0100               	movlb	0	; () banked
  1499  0014B0  6FD2               	movwf	(_width+1)& (0+255),b
  1500  0014B2  0E00               	movlw	0
  1501  0014B4  6FD1               	movwf	_width& (0+255),b
  1502  0014B6  C0D1  F0D5         	movff	_width,_flags
  1503  0014BA  C0D2  F0D6         	movff	_width+1,_flags+1
  1504  0014BE                     
  1505                           ; BSR set to: 0
  1506                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1507  0014BE  69D3               	setf	_prec& (0+255),b
  1508  0014C0  69D4               	setf	(_prec+1)& (0+255),b
  1509  0014C2                     
  1510                           ; BSR set to: 0
  1511                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  1512  0014C2  0E00               	movlw	0
  1513  0014C4  6E55               	movwf	(vfpfcnvrt@done+1)^0,c
  1514  0014C6  0E00               	movlw	0
  1515  0014C8  6E54               	movwf	vfpfcnvrt@done^0,c
  1516                           
  1517                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  1518  0014CA  EFB2  F00A         	goto	l4474
  1519  0014CE                     l4448:
  1520                           
  1521                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  1522  0014CE  0100               	movlb	0	; () banked
  1523  0014D0  81D5               	bsf	_flags& (0+255),0,b
  1524  0014D2                     l4450:
  1525                           
  1526                           ; BSR set to: 0
  1527                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  1528  0014D2  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1529  0014D6  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1530  0014DA  2ADE               	incf	postinc2,f,c
  1531  0014DC  0E00               	movlw	0
  1532  0014DE  22DD               	addwfc	postdec2,f,c
  1533                           
  1534                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  1535  0014E0  EFB2  F00A         	goto	l4474
  1536  0014E4                     l4452:
  1537                           
  1538                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  1539  0014E4  0100               	movlb	0	; () banked
  1540  0014E6  83D5               	bsf	_flags& (0+255),1,b
  1541  0014E8  EF69  F00A         	goto	l4450
  1542  0014EC                     l4456:
  1543                           
  1544                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  1545  0014EC  0100               	movlb	0	; () banked
  1546  0014EE  85D5               	bsf	_flags& (0+255),2,b
  1547  0014F0  EF69  F00A         	goto	l4450
  1548  0014F4                     l4460:
  1549                           
  1550                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  1551  0014F4  0100               	movlb	0	; () banked
  1552  0014F6  87D5               	bsf	_flags& (0+255),3,b
  1553  0014F8  EF69  F00A         	goto	l4450
  1554  0014FC                     l4464:
  1555                           
  1556                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  1557  0014FC  0100               	movlb	0	; () banked
  1558  0014FE  89D5               	bsf	_flags& (0+255),4,b
  1559  001500  EF69  F00A         	goto	l4450
  1560  001504                     l4468:
  1561                           
  1562                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  1563  001504  0E00               	movlw	0
  1564  001506  6E55               	movwf	(vfpfcnvrt@done+1)^0,c
  1565  001508  0E01               	movlw	1
  1566  00150A  6E54               	movwf	vfpfcnvrt@done^0,c
  1567                           
  1568                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  1569  00150C  EFB2  F00A         	goto	l4474
  1570  001510                     l4472:
  1571  001510  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1572  001514  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1573  001518  CFDE FFF6          	movff	postinc2,tblptrl
  1574  00151C  CFDD FFF7          	movff	postdec2,tblptrh
  1575  001520                     	if	0	;tblptru may be non-zero
  1576  001520                     	endif
  1577  001520                     	if	0	;tblptru may be non-zero
  1578  001520                     	endif
  1579  001520  0008               	tblrd		*
  1580  001522  50F5               	movf	tablat,w,c
  1581  001524  6E40               	movwf	??_vfpfcnvrt^0,c
  1582  001526  6A41               	clrf	(??_vfpfcnvrt+1)^0,c
  1583                           
  1584                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1585                           ; Switch size 1, requested type "simple"
  1586                           ; Number of cases is 1, Range of values is 0 to 0
  1587                           ; switch strategies available:
  1588                           ; Name         Instructions Cycles
  1589                           ; simple_byte            4     3 (average)
  1590                           ;	Chosen strategy is simple_byte
  1591  001528  5041               	movf	(??_vfpfcnvrt+1)^0,w,c
  1592  00152A  0A00               	xorlw	0	; case 0
  1593  00152C  B4D8               	btfsc	status,2,c
  1594  00152E  EF9B  F00A         	goto	l4888
  1595  001532  EF82  F00A         	goto	l4468
  1596  001536                     l4888:
  1597                           
  1598                           ; Switch size 1, requested type "simple"
  1599                           ; Number of cases is 5, Range of values is 32 to 48
  1600                           ; switch strategies available:
  1601                           ; Name         Instructions Cycles
  1602                           ; simple_byte           16     9 (average)
  1603                           ;	Chosen strategy is simple_byte
  1604  001536  5040               	movf	??_vfpfcnvrt^0,w,c
  1605  001538  0A20               	xorlw	32	; case 32
  1606  00153A  B4D8               	btfsc	status,2,c
  1607  00153C  EF7A  F00A         	goto	l4460
  1608  001540  0A03               	xorlw	3	; case 35
  1609  001542  B4D8               	btfsc	status,2,c
  1610  001544  EF7E  F00A         	goto	l4464
  1611  001548  0A08               	xorlw	8	; case 43
  1612  00154A  B4D8               	btfsc	status,2,c
  1613  00154C  EF76  F00A         	goto	l4456
  1614  001550  0A06               	xorlw	6	; case 45
  1615  001552  B4D8               	btfsc	status,2,c
  1616  001554  EF67  F00A         	goto	l4448
  1617  001558  0A1D               	xorlw	29	; case 48
  1618  00155A  B4D8               	btfsc	status,2,c
  1619  00155C  EF72  F00A         	goto	l4452
  1620  001560  EF82  F00A         	goto	l4468
  1621  001564                     l4474:
  1622                           
  1623                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  1624  001564  5054               	movf	vfpfcnvrt@done^0,w,c
  1625  001566  1055               	iorwf	(vfpfcnvrt@done+1)^0,w,c
  1626  001568  B4D8               	btfsc	status,2,c
  1627  00156A  EFB9  F00A         	goto	u5341
  1628  00156E  EFBB  F00A         	goto	u5340
  1629  001572                     u5341:
  1630  001572  EF88  F00A         	goto	l4472
  1631  001576                     u5340:
  1632  001576                     
  1633                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  1634  001576  0100               	movlb	0	; () banked
  1635  001578  A1D5               	btfss	_flags& (0+255),0,b
  1636  00157A  EFC1  F00A         	goto	u5351
  1637  00157E  EFC3  F00A         	goto	u5350
  1638  001582                     u5351:
  1639  001582  EFC4  F00A         	goto	l4478
  1640  001586                     u5350:
  1641  001586                     
  1642                           ; BSR set to: 0
  1643                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  1644  001586  93D5               	bcf	_flags& (0+255),1,b
  1645  001588                     l4478:
  1646                           
  1647                           ; BSR set to: 0
  1648                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  1649  001588  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1650  00158C  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1651  001590  CFDE FFF6          	movff	postinc2,tblptrl
  1652  001594  CFDD FFF7          	movff	postdec2,tblptrh
  1653  001598                     	if	0	;tblptru may be non-zero
  1654  001598                     	endif
  1655  001598                     	if	0	;tblptru may be non-zero
  1656  001598                     	endif
  1657  001598  0008               	tblrd		*
  1658  00159A  50F5               	movf	tablat,w,c
  1659  00159C  0A2A               	xorlw	42
  1660  00159E  A4D8               	btfss	status,2,c
  1661  0015A0  EFD4  F00A         	goto	u5361
  1662  0015A4  EFD6  F00A         	goto	u5360
  1663  0015A8                     u5361:
  1664  0015A8  EFFF  F00A         	goto	l4486
  1665  0015AC                     u5360:
  1666  0015AC                     
  1667                           ; BSR set to: 0
  1668                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  1669  0015AC  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1670  0015B0  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1671  0015B4  2ADE               	incf	postinc2,f,c
  1672  0015B6  0E00               	movlw	0
  1673  0015B8  22DD               	addwfc	postdec2,f,c
  1674                           
  1675                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  1676  0015BA  C096  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1677  0015BE  C097  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1678  0015C2  CFDF F040          	movff	indf2,??_vfpfcnvrt
  1679  0015C6  0E02               	movlw	2
  1680  0015C8  26DE               	addwf	postinc2,f,c
  1681  0015CA  CFDF F041          	movff	indf2,??_vfpfcnvrt+1
  1682  0015CE  0E00               	movlw	0
  1683  0015D0  22DD               	addwfc	postdec2,f,c
  1684  0015D2  C040  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1685  0015D6  C041  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1686  0015DA  CFDE F0D1          	movff	postinc2,_width
  1687  0015DE  CFDD F0D2          	movff	postdec2,_width+1
  1688  0015E2                     
  1689                           ; BSR set to: 0
  1690                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  1691  0015E2  BFD2               	btfsc	(_width+1)& (0+255),7,b
  1692  0015E4  EFF8  F00A         	goto	u5370
  1693  0015E8  EFF6  F00A         	goto	u5371
  1694  0015EC                     u5371:
  1695  0015EC  EF35  F00B         	goto	l4494
  1696  0015F0                     u5370:
  1697  0015F0                     
  1698                           ; BSR set to: 0
  1699                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  1700  0015F0  81D5               	bsf	_flags& (0+255),0,b
  1701                           
  1702                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  1703  0015F2  6DD1               	negf	_width& (0+255),b
  1704  0015F4  1FD2               	comf	(_width+1)& (0+255),f,b
  1705  0015F6  B0D8               	btfsc	status,0,c
  1706  0015F8  2BD2               	incf	(_width+1)& (0+255),f,b
  1707  0015FA  EF35  F00B         	goto	l4494
  1708  0015FE                     l4486:
  1709                           
  1710                           ; BSR set to: 0
  1711                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  1712  0015FE  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1713  001602  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1714  001606  CFDE F008          	movff	postinc2,atoi@s
  1715  00160A  CFDD F009          	movff	postdec2,atoi@s+1
  1716  00160E  EC16  F019         	call	_atoi	;wreg free
  1717  001612  C008  F0D1         	movff	?_atoi,_width
  1718  001616  C009  F0D2         	movff	?_atoi+1,_width+1
  1719                           
  1720                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  1721  00161A  EF16  F00B         	goto	l4492
  1722  00161E                     l4488:
  1723                           
  1724                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  1725  00161E  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1726  001622  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1727  001626  2ADE               	incf	postinc2,f,c
  1728  001628  0E00               	movlw	0
  1729  00162A  22DD               	addwfc	postdec2,f,c
  1730  00162C                     l4492:
  1731  00162C  0ED0               	movlw	208
  1732  00162E  6E40               	movwf	??_vfpfcnvrt^0,c
  1733  001630  0EFF               	movlw	255
  1734  001632  6E41               	movwf	(??_vfpfcnvrt+1)^0,c
  1735  001634  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1736  001638  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1737  00163C  CFDE FFF6          	movff	postinc2,tblptrl
  1738  001640  CFDD FFF7          	movff	postdec2,tblptrh
  1739  001644                     	if	0	;tblptru may be non-zero
  1740  001644                     	endif
  1741  001644                     	if	0	;tblptru may be non-zero
  1742  001644                     	endif
  1743  001644  0008               	tblrd		*
  1744  001646  50F5               	movf	tablat,w,c
  1745  001648  6E42               	movwf	(??_vfpfcnvrt+2)^0,c
  1746  00164A  6A43               	clrf	(??_vfpfcnvrt+3)^0,c
  1747  00164C  5040               	movf	??_vfpfcnvrt^0,w,c
  1748  00164E  2642               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1749  001650  5041               	movf	(??_vfpfcnvrt+1)^0,w,c
  1750  001652  2243               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1751  001654  5043               	movf	(??_vfpfcnvrt+3)^0,w,c
  1752  001656  E109               	bnz	u5380
  1753  001658  0E0A               	movlw	10
  1754  00165A  5C42               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1755  00165C  A0D8               	btfss	status,0,c
  1756  00165E  EF33  F00B         	goto	u5381
  1757  001662  EF35  F00B         	goto	u5380
  1758  001666                     u5381:
  1759  001666  EF0F  F00B         	goto	l4488
  1760  00166A                     u5380:
  1761  00166A                     l4494:
  1762                           
  1763                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  1764  00166A  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1765  00166E  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1766  001672  CFDE FFF6          	movff	postinc2,tblptrl
  1767  001676  CFDD FFF7          	movff	postdec2,tblptrh
  1768  00167A                     	if	0	;tblptru may be non-zero
  1769  00167A                     	endif
  1770  00167A                     	if	0	;tblptru may be non-zero
  1771  00167A                     	endif
  1772  00167A  0008               	tblrd		*
  1773  00167C  50F5               	movf	tablat,w,c
  1774  00167E  0A2E               	xorlw	46
  1775  001680  A4D8               	btfss	status,2,c
  1776  001682  EF45  F00B         	goto	u5391
  1777  001686  EF47  F00B         	goto	u5390
  1778  00168A                     u5391:
  1779  00168A  EFB8  F00B         	goto	l4512
  1780  00168E                     u5390:
  1781  00168E                     
  1782                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  1783  00168E  0E00               	movlw	0
  1784  001690  0100               	movlb	0	; () banked
  1785  001692  6FD4               	movwf	(_prec+1)& (0+255),b
  1786  001694  0E00               	movlw	0
  1787  001696  6FD3               	movwf	_prec& (0+255),b
  1788  001698                     
  1789                           ; BSR set to: 0
  1790                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  1791  001698  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1792  00169C  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1793  0016A0  2ADE               	incf	postinc2,f,c
  1794  0016A2  0E00               	movlw	0
  1795  0016A4  22DD               	addwfc	postdec2,f,c
  1796  0016A6                     
  1797                           ; BSR set to: 0
  1798                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  1799  0016A6  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1800  0016AA  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1801  0016AE  CFDE FFF6          	movff	postinc2,tblptrl
  1802  0016B2  CFDD FFF7          	movff	postdec2,tblptrh
  1803  0016B6                     	if	0	;tblptru may be non-zero
  1804  0016B6                     	endif
  1805  0016B6                     	if	0	;tblptru may be non-zero
  1806  0016B6                     	endif
  1807  0016B6  0008               	tblrd		*
  1808  0016B8  50F5               	movf	tablat,w,c
  1809  0016BA  0A2A               	xorlw	42
  1810  0016BC  A4D8               	btfss	status,2,c
  1811  0016BE  EF63  F00B         	goto	u5401
  1812  0016C2  EF65  F00B         	goto	u5400
  1813  0016C6                     u5401:
  1814  0016C6  EF82  F00B         	goto	l4504
  1815  0016CA                     u5400:
  1816  0016CA                     
  1817                           ; BSR set to: 0
  1818                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  1819  0016CA  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1820  0016CE  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1821  0016D2  2ADE               	incf	postinc2,f,c
  1822  0016D4  0E00               	movlw	0
  1823  0016D6  22DD               	addwfc	postdec2,f,c
  1824                           
  1825                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1826  0016D8  C096  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1827  0016DC  C097  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1828  0016E0  CFDF F040          	movff	indf2,??_vfpfcnvrt
  1829  0016E4  0E02               	movlw	2
  1830  0016E6  26DE               	addwf	postinc2,f,c
  1831  0016E8  CFDF F041          	movff	indf2,??_vfpfcnvrt+1
  1832  0016EC  0E00               	movlw	0
  1833  0016EE  22DD               	addwfc	postdec2,f,c
  1834  0016F0  C040  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1835  0016F4  C041  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1836  0016F8  CFDE F0D3          	movff	postinc2,_prec
  1837  0016FC  CFDD F0D4          	movff	postdec2,_prec+1
  1838                           
  1839                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  1840  001700  EFB8  F00B         	goto	l4512
  1841  001704                     l4504:
  1842                           
  1843                           ; BSR set to: 0
  1844                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  1845  001704  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1846  001708  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1847  00170C  CFDE F008          	movff	postinc2,atoi@s
  1848  001710  CFDD F009          	movff	postdec2,atoi@s+1
  1849  001714  EC16  F019         	call	_atoi	;wreg free
  1850  001718  C008  F0D3         	movff	?_atoi,_prec
  1851  00171C  C009  F0D4         	movff	?_atoi+1,_prec+1
  1852                           
  1853                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  1854  001720  EF99  F00B         	goto	l4510
  1855  001724                     l4506:
  1856                           
  1857                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  1858  001724  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1859  001728  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1860  00172C  2ADE               	incf	postinc2,f,c
  1861  00172E  0E00               	movlw	0
  1862  001730  22DD               	addwfc	postdec2,f,c
  1863  001732                     l4510:
  1864  001732  0ED0               	movlw	208
  1865  001734  6E40               	movwf	??_vfpfcnvrt^0,c
  1866  001736  0EFF               	movlw	255
  1867  001738  6E41               	movwf	(??_vfpfcnvrt+1)^0,c
  1868  00173A  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1869  00173E  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1870  001742  CFDE FFF6          	movff	postinc2,tblptrl
  1871  001746  CFDD FFF7          	movff	postdec2,tblptrh
  1872  00174A                     	if	0	;tblptru may be non-zero
  1873  00174A                     	endif
  1874  00174A                     	if	0	;tblptru may be non-zero
  1875  00174A                     	endif
  1876  00174A  0008               	tblrd		*
  1877  00174C  50F5               	movf	tablat,w,c
  1878  00174E  6E42               	movwf	(??_vfpfcnvrt+2)^0,c
  1879  001750  6A43               	clrf	(??_vfpfcnvrt+3)^0,c
  1880  001752  5040               	movf	??_vfpfcnvrt^0,w,c
  1881  001754  2642               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1882  001756  5041               	movf	(??_vfpfcnvrt+1)^0,w,c
  1883  001758  2243               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1884  00175A  5043               	movf	(??_vfpfcnvrt+3)^0,w,c
  1885  00175C  E109               	bnz	u5410
  1886  00175E  0E0A               	movlw	10
  1887  001760  5C42               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1888  001762  A0D8               	btfss	status,0,c
  1889  001764  EFB6  F00B         	goto	u5411
  1890  001768  EFB8  F00B         	goto	u5410
  1891  00176C                     u5411:
  1892  00176C  EF92  F00B         	goto	l4506
  1893  001770                     u5410:
  1894  001770                     l4512:
  1895                           
  1896                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  1897  001770  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1898  001774  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1899  001778  CFDE FFF6          	movff	postinc2,tblptrl
  1900  00177C  CFDD FFF7          	movff	postdec2,tblptrh
  1901  001780                     	if	0	;tblptru may be non-zero
  1902  001780                     	endif
  1903  001780                     	if	0	;tblptru may be non-zero
  1904  001780                     	endif
  1905  001780  0008               	tblrd		*
  1906  001782  50F5               	movf	tablat,w,c
  1907  001784  6E07               	movwf	tolower@c^0,c
  1908  001786  6A08               	clrf	(tolower@c+1)^0,c
  1909  001788  EC46  F020         	call	_tolower	;wreg free
  1910  00178C  5007               	movf	?_tolower^0,w,c
  1911  00178E  6E5A               	movwf	vfpfcnvrt@ct^0,c
  1912  001790                     
  1913                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  1914  001790  505A               	movf	vfpfcnvrt@ct^0,w,c
  1915  001792  B4D8               	btfsc	status,2,c
  1916  001794  EFCE  F00B         	goto	u5421
  1917  001798  EFD0  F00B         	goto	u5420
  1918  00179C                     u5421:
  1919  00179C  EF08  F00C         	goto	l4522
  1920  0017A0                     u5420:
  1921  0017A0                     
  1922                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  1923  0017A0  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1924  0017A4  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1925  0017A8  CFDE F040          	movff	postinc2,??_vfpfcnvrt
  1926  0017AC  CFDD F041          	movff	postdec2,??_vfpfcnvrt+1
  1927  0017B0  0E01               	movlw	1
  1928  0017B2  2640               	addwf	??_vfpfcnvrt^0,f,c
  1929  0017B4  0E00               	movlw	0
  1930  0017B6  2241               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1931  0017B8  C040  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1932  0017BC  C041  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1933  0017C0                     	if	0	;tblptru may be non-zero
  1934  0017C0                     	endif
  1935  0017C0                     	if	0	;tblptru may be non-zero
  1936  0017C0                     	endif
  1937  0017C0  0008               	tblrd		*
  1938  0017C2  50F5               	movf	tablat,w,c
  1939  0017C4  6E07               	movwf	tolower@c^0,c
  1940  0017C6  6A08               	clrf	(tolower@c+1)^0,c
  1941  0017C8  EC46  F020         	call	_tolower	;wreg free
  1942  0017CC  5007               	movf	?_tolower^0,w,c
  1943  0017CE  6E5B               	movwf	(vfpfcnvrt@ct+1)^0,c
  1944  0017D0                     
  1945                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  1946  0017D0  505B               	movf	(vfpfcnvrt@ct+1)^0,w,c
  1947  0017D2  B4D8               	btfsc	status,2,c
  1948  0017D4  EFEE  F00B         	goto	u5431
  1949  0017D8  EFF0  F00B         	goto	u5430
  1950  0017DC                     u5431:
  1951  0017DC  EF08  F00C         	goto	l4522
  1952  0017E0                     u5430:
  1953  0017E0                     
  1954                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  1955  0017E0  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1956  0017E4  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1957  0017E8  CFDE F040          	movff	postinc2,??_vfpfcnvrt
  1958  0017EC  CFDD F041          	movff	postdec2,??_vfpfcnvrt+1
  1959  0017F0  0E02               	movlw	2
  1960  0017F2  2640               	addwf	??_vfpfcnvrt^0,f,c
  1961  0017F4  0E00               	movlw	0
  1962  0017F6  2241               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1963  0017F8  C040  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1964  0017FC  C041  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1965  001800                     	if	0	;tblptru may be non-zero
  1966  001800                     	endif
  1967  001800                     	if	0	;tblptru may be non-zero
  1968  001800                     	endif
  1969  001800  0008               	tblrd		*
  1970  001802  50F5               	movf	tablat,w,c
  1971  001804  6E07               	movwf	tolower@c^0,c
  1972  001806  6A08               	clrf	(tolower@c+1)^0,c
  1973  001808  EC46  F020         	call	_tolower	;wreg free
  1974  00180C  5007               	movf	?_tolower^0,w,c
  1975  00180E  6E5C               	movwf	(vfpfcnvrt@ct+2)^0,c
  1976  001810                     l4522:
  1977                           
  1978                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1979  001810  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1980  001814  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1981  001818  CFDE FFF6          	movff	postinc2,tblptrl
  1982  00181C  CFDD FFF7          	movff	postdec2,tblptrh
  1983  001820                     	if	0	;tblptru may be non-zero
  1984  001820                     	endif
  1985  001820                     	if	0	;tblptru may be non-zero
  1986  001820                     	endif
  1987  001820  0008               	tblrd		*
  1988  001822  50F5               	movf	tablat,w,c
  1989  001824  0A64               	xorlw	100
  1990  001826  B4D8               	btfsc	status,2,c
  1991  001828  EF18  F00C         	goto	u5441
  1992  00182C  EF1A  F00C         	goto	u5440
  1993  001830                     u5441:
  1994  001830  EF2C  F00C         	goto	l4526
  1995  001834                     u5440:
  1996  001834  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1997  001838  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1998  00183C  CFDE FFF6          	movff	postinc2,tblptrl
  1999  001840  CFDD FFF7          	movff	postdec2,tblptrh
  2000  001844                     	if	0	;tblptru may be non-zero
  2001  001844                     	endif
  2002  001844                     	if	0	;tblptru may be non-zero
  2003  001844                     	endif
  2004  001844  0008               	tblrd		*
  2005  001846  50F5               	movf	tablat,w,c
  2006  001848  0A69               	xorlw	105
  2007  00184A  A4D8               	btfss	status,2,c
  2008  00184C  EF2A  F00C         	goto	u5451
  2009  001850  EF2C  F00C         	goto	u5450
  2010  001854                     u5451:
  2011  001854  EF6C  F00C         	goto	l4532
  2012  001858                     u5450:
  2013  001858                     l4526:
  2014                           
  2015                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  2016  001858  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2017  00185C  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2018  001860  2ADE               	incf	postinc2,f,c
  2019  001862  0E00               	movlw	0
  2020  001864  22DD               	addwfc	postdec2,f,c
  2021                           
  2022                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2023  001866  C096  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2024  00186A  C097  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2025  00186E  CFDF F040          	movff	indf2,??_vfpfcnvrt
  2026  001872  0E02               	movlw	2
  2027  001874  26DE               	addwf	postinc2,f,c
  2028  001876  CFDF F041          	movff	indf2,??_vfpfcnvrt+1
  2029  00187A  0E00               	movlw	0
  2030  00187C  22DD               	addwfc	postdec2,f,c
  2031  00187E  C040  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2032  001882  C041  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2033  001886  CFDE F044          	movff	postinc2,vfpfcnvrt@ll
  2034  00188A  CFDD F045          	movff	postdec2,vfpfcnvrt@ll+1
  2035  00188E  0E00               	movlw	0
  2036  001890  BE45               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  2037  001892  0EFF               	movlw	-1
  2038  001894  6E46               	movwf	(vfpfcnvrt@ll+2)^0,c
  2039  001896  6E47               	movwf	(vfpfcnvrt@ll+3)^0,c
  2040  001898  6E48               	movwf	(vfpfcnvrt@ll+4)^0,c
  2041  00189A  6E49               	movwf	(vfpfcnvrt@ll+5)^0,c
  2042  00189C  6E4A               	movwf	(vfpfcnvrt@ll+6)^0,c
  2043  00189E  6E4B               	movwf	(vfpfcnvrt@ll+7)^0,c
  2044  0018A0                     
  2045                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  2046  0018A0  C092  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2047  0018A4  C093  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2048  0018A8  C044  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  2049  0018AC  C045  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2050  0018B0  C046  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2051  0018B4  C047  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2052  0018B8  C048  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2053  0018BC  C049  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2054  0018C0  C04A  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2055  0018C4  C04B  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2056  0018C8  EC23  F014         	call	_dtoa	;wreg free
  2057  0018CC  C01C  F092         	movff	?_dtoa,?_vfpfcnvrt
  2058  0018D0  C01D  F093         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2059  0018D4  EFE0  F00D         	goto	l1033
  2060  0018D8                     l4532:
  2061                           
  2062                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  2063  0018D8  0E66               	movlw	102
  2064  0018DA  185A               	xorwf	vfpfcnvrt@ct^0,w,c
  2065  0018DC  A4D8               	btfss	status,2,c
  2066  0018DE  EF73  F00C         	goto	u5461
  2067  0018E2  EF75  F00C         	goto	u5460
  2068  0018E6                     u5461:
  2069  0018E6  EFB5  F00C         	goto	l4544
  2070  0018EA                     u5460:
  2071  0018EA                     
  2072                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  2073  0018EA  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2074  0018EE  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2075  0018F2  CFDE FFF6          	movff	postinc2,tblptrl
  2076  0018F6  CFDD FFF7          	movff	postdec2,tblptrh
  2077  0018FA                     	if	0	;tblptru may be non-zero
  2078  0018FA                     	endif
  2079  0018FA                     	if	0	;tblptru may be non-zero
  2080  0018FA                     	endif
  2081  0018FA  0008               	tblrd		*
  2082  0018FC  CFF5 F05D          	movff	tablat,vfpfcnvrt@c
  2083  001900                     
  2084                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  2085  001900  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2086  001904  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2087  001908  2ADE               	incf	postinc2,f,c
  2088  00190A  0E00               	movlw	0
  2089  00190C  22DD               	addwfc	postdec2,f,c
  2090  00190E                     
  2091                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2092  00190E  C096  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2093  001912  C097  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2094  001916  CFDF F040          	movff	indf2,??_vfpfcnvrt
  2095  00191A  0E04               	movlw	4
  2096  00191C  26DE               	addwf	postinc2,f,c
  2097  00191E  CFDF F041          	movff	indf2,??_vfpfcnvrt+1
  2098  001922  0E00               	movlw	0
  2099  001924  22DD               	addwfc	postdec2,f,c
  2100  001926  C040  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2101  00192A  C041  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2102  00192E  CFDE F056          	movff	postinc2,vfpfcnvrt@f
  2103  001932  CFDE F057          	movff	postinc2,vfpfcnvrt@f+1
  2104  001936  CFDE F058          	movff	postinc2,vfpfcnvrt@f+2
  2105  00193A  CFDE F059          	movff	postinc2,vfpfcnvrt@f+3
  2106  00193E                     l4540:
  2107                           
  2108                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  2109  00193E  C092  F02E         	movff	vfpfcnvrt@fp,efgtoa@fp
  2110  001942  C093  F02F         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2111  001946  C056  F030         	movff	vfpfcnvrt@f,efgtoa@f
  2112  00194A  C057  F031         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2113  00194E  C058  F032         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2114  001952  C059  F033         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2115  001956  C05D  F034         	movff	vfpfcnvrt@c,efgtoa@c
  2116  00195A  EC36  F004         	call	_efgtoa	;wreg free
  2117  00195E  C02E  F092         	movff	?_efgtoa,?_vfpfcnvrt
  2118  001962  C02F  F093         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2119  001966  EFE0  F00D         	goto	l1033
  2120  00196A                     l4544:
  2121                           
  2122                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2123  00196A  0E5A               	movlw	low vfpfcnvrt@ct
  2124  00196C  6E01               	movwf	strncmp@_l^0,c
  2125  00196E  0E00               	movlw	high vfpfcnvrt@ct
  2126  001970  6E02               	movwf	(strncmp@_l+1)^0,c
  2127  001972  0E68               	movlw	low STR_20
  2128  001974  6E03               	movwf	strncmp@_r^0,c
  2129  001976  0E08               	movlw	high STR_20
  2130  001978  6E04               	movwf	(strncmp@_r+1)^0,c
  2131  00197A  0E00               	movlw	0
  2132  00197C  6E06               	movwf	(strncmp@n+1)^0,c
  2133  00197E  0E02               	movlw	2
  2134  001980  6E05               	movwf	strncmp@n^0,c
  2135  001982  ECBD  F01B         	call	_strncmp	;wreg free
  2136  001986  5001               	movf	?_strncmp^0,w,c
  2137  001988  1002               	iorwf	(?_strncmp+1)^0,w,c
  2138  00198A  A4D8               	btfss	status,2,c
  2139  00198C  EFCA  F00C         	goto	u5471
  2140  001990  EFCC  F00C         	goto	u5470
  2141  001994                     u5471:
  2142  001994  EF3A  F00D         	goto	l4560
  2143  001998                     u5470:
  2144  001998                     
  2145                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 952:             
      +                          c = (*fmt)[1];
  2146  001998  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2147  00199C  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2148  0019A0  CFDE F040          	movff	postinc2,??_vfpfcnvrt
  2149  0019A4  CFDD F041          	movff	postdec2,??_vfpfcnvrt+1
  2150  0019A8  0E01               	movlw	1
  2151  0019AA  2640               	addwf	??_vfpfcnvrt^0,f,c
  2152  0019AC  0E00               	movlw	0
  2153  0019AE  2241               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2154  0019B0  C040  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2155  0019B4  C041  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2156  0019B8                     	if	0	;tblptru may be non-zero
  2157  0019B8                     	endif
  2158  0019B8                     	if	0	;tblptru may be non-zero
  2159  0019B8                     	endif
  2160  0019B8  0008               	tblrd		*
  2161  0019BA  CFF5 F05D          	movff	tablat,vfpfcnvrt@c
  2162  0019BE  0EBF               	movlw	191
  2163  0019C0  6E40               	movwf	??_vfpfcnvrt^0,c
  2164  0019C2  0EFF               	movlw	255
  2165  0019C4  6E41               	movwf	(??_vfpfcnvrt+1)^0,c
  2166  0019C6  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2167  0019CA  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2168  0019CE  CFDE FFF6          	movff	postinc2,tblptrl
  2169  0019D2  CFDD FFF7          	movff	postdec2,tblptrh
  2170  0019D6                     	if	0	;tblptru may be non-zero
  2171  0019D6                     	endif
  2172  0019D6                     	if	0	;tblptru may be non-zero
  2173  0019D6                     	endif
  2174  0019D6  0008               	tblrd		*
  2175  0019D8  50F5               	movf	tablat,w,c
  2176  0019DA  6E42               	movwf	(??_vfpfcnvrt+2)^0,c
  2177  0019DC  6A43               	clrf	(??_vfpfcnvrt+3)^0,c
  2178  0019DE  5040               	movf	??_vfpfcnvrt^0,w,c
  2179  0019E0  2642               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2180  0019E2  5041               	movf	(??_vfpfcnvrt+1)^0,w,c
  2181  0019E4  2243               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2182  0019E6  5043               	movf	(??_vfpfcnvrt+3)^0,w,c
  2183  0019E8  E107               	bnz	u5481
  2184  0019EA  0E1A               	movlw	26
  2185  0019EC  5C42               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2186  0019EE  B0D8               	btfsc	status,0,c
  2187  0019F0  EFFC  F00C         	goto	u5481
  2188  0019F4  EFFE  F00C         	goto	u5480
  2189  0019F8                     u5481:
  2190  0019F8  EF18  F00D         	goto	l4554
  2191  0019FC                     u5480:
  2192  0019FC                     
  2193                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2194  0019FC  C096  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2195  001A00  C097  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2196  001A04  CFDF F040          	movff	indf2,??_vfpfcnvrt
  2197  001A08  0E04               	movlw	4
  2198  001A0A  26DE               	addwf	postinc2,f,c
  2199  001A0C  CFDF F041          	movff	indf2,??_vfpfcnvrt+1
  2200  001A10  0E00               	movlw	0
  2201  001A12  22DD               	addwfc	postdec2,f,c
  2202  001A14  C040  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2203  001A18  C041  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2204  001A1C  CFDE F056          	movff	postinc2,vfpfcnvrt@f
  2205  001A20  CFDE F057          	movff	postinc2,vfpfcnvrt@f+1
  2206  001A24  CFDE F058          	movff	postinc2,vfpfcnvrt@f+2
  2207  001A28  CFDE F059          	movff	postinc2,vfpfcnvrt@f+3
  2208                           
  2209                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  2210  001A2C  EF30  F00D         	goto	l1039
  2211  001A30                     l4554:
  2212                           
  2213                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2214  001A30  C096  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2215  001A34  C097  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2216  001A38  CFDF F040          	movff	indf2,??_vfpfcnvrt
  2217  001A3C  0E04               	movlw	4
  2218  001A3E  26DE               	addwf	postinc2,f,c
  2219  001A40  CFDF F041          	movff	indf2,??_vfpfcnvrt+1
  2220  001A44  0E00               	movlw	0
  2221  001A46  22DD               	addwfc	postdec2,f,c
  2222  001A48  C040  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2223  001A4C  C041  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2224  001A50  CFDE F056          	movff	postinc2,vfpfcnvrt@f
  2225  001A54  CFDE F057          	movff	postinc2,vfpfcnvrt@f+1
  2226  001A58  CFDE F058          	movff	postinc2,vfpfcnvrt@f+2
  2227  001A5C  CFDE F059          	movff	postinc2,vfpfcnvrt@f+3
  2228  001A60                     l1039:
  2229                           
  2230                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2231  001A60  0E02               	movlw	2
  2232  001A62  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2233  001A66  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2234  001A6A  26DE               	addwf	postinc2,f,c
  2235  001A6C  0E00               	movlw	0
  2236  001A6E  22DD               	addwfc	postdec2,f,c
  2237  001A70  EF9F  F00C         	goto	l4540
  2238  001A74                     l4560:
  2239                           
  2240                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1204:         if 
      +                          (*fmt[0] == 'u') {
  2241  001A74  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2242  001A78  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2243  001A7C  CFDE FFF6          	movff	postinc2,tblptrl
  2244  001A80  CFDD FFF7          	movff	postdec2,tblptrh
  2245  001A84                     	if	0	;tblptru may be non-zero
  2246  001A84                     	endif
  2247  001A84                     	if	0	;tblptru may be non-zero
  2248  001A84                     	endif
  2249  001A84  0008               	tblrd		*
  2250  001A86  50F5               	movf	tablat,w,c
  2251  001A88  0A75               	xorlw	117
  2252  001A8A  A4D8               	btfss	status,2,c
  2253  001A8C  EF4A  F00D         	goto	u5491
  2254  001A90  EF4C  F00D         	goto	u5490
  2255  001A94                     u5491:
  2256  001A94  EF8D  F00D         	goto	l4568
  2257  001A98                     u5490:
  2258  001A98                     
  2259                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1206:            
      +                           ++*fmt;
  2260  001A98  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2261  001A9C  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2262  001AA0  2ADE               	incf	postinc2,f,c
  2263  001AA2  0E00               	movlw	0
  2264  001AA4  22DD               	addwfc	postdec2,f,c
  2265                           
  2266                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1207:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  2267  001AA6  C096  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2268  001AAA  C097  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2269  001AAE  CFDF F040          	movff	indf2,??_vfpfcnvrt
  2270  001AB2  0E02               	movlw	2
  2271  001AB4  26DE               	addwf	postinc2,f,c
  2272  001AB6  CFDF F041          	movff	indf2,??_vfpfcnvrt+1
  2273  001ABA  0E00               	movlw	0
  2274  001ABC  22DD               	addwfc	postdec2,f,c
  2275  001ABE  C040  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2276  001AC2  C041  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2277  001AC6  CFDE F042          	movff	postinc2,??_vfpfcnvrt+2
  2278  001ACA  CFDD F043          	movff	postdec2,??_vfpfcnvrt+3
  2279  001ACE  C042  F04C         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  2280  001AD2  C043  F04D         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  2281  001AD6  6A4E               	clrf	(vfpfcnvrt@llu+2)^0,c
  2282  001AD8  6A4F               	clrf	(vfpfcnvrt@llu+3)^0,c
  2283  001ADA  6A50               	clrf	(vfpfcnvrt@llu+4)^0,c
  2284  001ADC  6A51               	clrf	(vfpfcnvrt@llu+5)^0,c
  2285  001ADE  6A52               	clrf	(vfpfcnvrt@llu+6)^0,c
  2286  001AE0  6A53               	clrf	(vfpfcnvrt@llu+7)^0,c
  2287  001AE2                     
  2288                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1209:            
      +                           return utoa(fp, llu);
  2289  001AE2  C092  F01C         	movff	vfpfcnvrt@fp,utoa@fp
  2290  001AE6  C093  F01D         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  2291  001AEA  C04C  F01E         	movff	vfpfcnvrt@llu,utoa@d
  2292  001AEE  C04D  F01F         	movff	vfpfcnvrt@llu+1,utoa@d+1
  2293  001AF2  C04E  F020         	movff	vfpfcnvrt@llu+2,utoa@d+2
  2294  001AF6  C04F  F021         	movff	vfpfcnvrt@llu+3,utoa@d+3
  2295  001AFA  C050  F022         	movff	vfpfcnvrt@llu+4,utoa@d+4
  2296  001AFE  C051  F023         	movff	vfpfcnvrt@llu+5,utoa@d+5
  2297  001B02  C052  F024         	movff	vfpfcnvrt@llu+6,utoa@d+6
  2298  001B06  C053  F025         	movff	vfpfcnvrt@llu+7,utoa@d+7
  2299  001B0A  EC9E  F016         	call	_utoa	;wreg free
  2300  001B0E  C01C  F092         	movff	?_utoa,?_vfpfcnvrt
  2301  001B12  C01D  F093         	movff	?_utoa+1,?_vfpfcnvrt+1
  2302  001B16  EFE0  F00D         	goto	l1033
  2303  001B1A                     l4568:
  2304                           
  2305                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2306  001B1A  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2307  001B1E  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2308  001B22  CFDE FFF6          	movff	postinc2,tblptrl
  2309  001B26  CFDD FFF7          	movff	postdec2,tblptrh
  2310  001B2A                     	if	0	;tblptru may be non-zero
  2311  001B2A                     	endif
  2312  001B2A                     	if	0	;tblptru may be non-zero
  2313  001B2A                     	endif
  2314  001B2A  0008               	tblrd		*
  2315  001B2C  50F5               	movf	tablat,w,c
  2316  001B2E  0A25               	xorlw	37
  2317  001B30  A4D8               	btfss	status,2,c
  2318  001B32  EF9D  F00D         	goto	u5501
  2319  001B36  EF9F  F00D         	goto	u5500
  2320  001B3A                     u5501:
  2321  001B3A  EFB7  F00D         	goto	l4578
  2322  001B3E                     u5500:
  2323  001B3E                     
  2324                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2325  001B3E  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2326  001B42  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2327  001B46  2ADE               	incf	postinc2,f,c
  2328  001B48  0E00               	movlw	0
  2329  001B4A  22DD               	addwfc	postdec2,f,c
  2330  001B4C                     
  2331                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2332  001B4C  0E00               	movlw	0
  2333  001B4E  6E02               	movwf	(fputc@c+1)^0,c
  2334  001B50  0E25               	movlw	37
  2335  001B52  6E01               	movwf	fputc@c^0,c
  2336  001B54  C092  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2337  001B58  C093  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2338  001B5C  EC90  F01C         	call	_fputc	;wreg free
  2339  001B60                     l4574:
  2340                           
  2341                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2342  001B60  0E00               	movlw	0
  2343  001B62  0100               	movlb	0	; () banked
  2344  001B64  6F93               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2345  001B66  0E01               	movlw	1
  2346  001B68  6F92               	movwf	?_vfpfcnvrt& (0+255),b
  2347  001B6A  EFE0  F00D         	goto	l1033
  2348  001B6E                     l4578:
  2349                           
  2350                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2351  001B6E  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2352  001B72  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2353  001B76  2ADE               	incf	postinc2,f,c
  2354  001B78  0E00               	movlw	0
  2355  001B7A  22DD               	addwfc	postdec2,f,c
  2356  001B7C                     
  2357                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2358  001B7C  0E00               	movlw	0
  2359  001B7E  0100               	movlb	0	; () banked
  2360  001B80  6F93               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2361  001B82  0E00               	movlw	0
  2362  001B84  6F92               	movwf	?_vfpfcnvrt& (0+255),b
  2363  001B86  EFE0  F00D         	goto	l1033
  2364  001B8A                     l4584:
  2365                           
  2366                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2367  001B8A  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2368  001B8E  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2369  001B92  CFDE FFF6          	movff	postinc2,tblptrl
  2370  001B96  CFDD FFF7          	movff	postdec2,tblptrh
  2371  001B9A                     	if	0	;tblptru may be non-zero
  2372  001B9A                     	endif
  2373  001B9A                     	if	0	;tblptru may be non-zero
  2374  001B9A                     	endif
  2375  001B9A  0008               	tblrd		*
  2376  001B9C  50F5               	movf	tablat,w,c
  2377  001B9E  6E01               	movwf	fputc@c^0,c
  2378  001BA0  6A02               	clrf	(fputc@c+1)^0,c
  2379  001BA2  C092  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2380  001BA6  C093  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2381  001BAA  EC90  F01C         	call	_fputc	;wreg free
  2382  001BAE                     
  2383                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2384  001BAE  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2385  001BB2  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2386  001BB6  2ADE               	incf	postinc2,f,c
  2387  001BB8  0E00               	movlw	0
  2388  001BBA  22DD               	addwfc	postdec2,f,c
  2389  001BBC  EFB0  F00D         	goto	l4574
  2390  001BC0                     l1033:
  2391  001BC0  0012               	return		;funcret
  2392  001BC2                     __end_of_vfpfcnvrt:
  2393                           	callstack 0
  2394                           
  2395 ;; *************** function _utoa *****************
  2396 ;; Defined at:
  2397 ;;		line 615 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2398 ;; Parameters:    Size  Location     Type
  2399 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  2400 ;;		 -> sprintf@f(11), 
  2401 ;;  d               8   29[COMRAM] unsigned long long 
  2402 ;; Auto vars:     Size  Location     Type
  2403 ;;  n               8   49[COMRAM] unsigned long long 
  2404 ;;  i               2   57[COMRAM] int 
  2405 ;;  w               2   47[COMRAM] int 
  2406 ;;  p               2   45[COMRAM] int 
  2407 ;; Return value:  Size  Location     Type
  2408 ;;                  2   27[COMRAM] int 
  2409 ;; Registers used:
  2410 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2411 ;; Tracked objects:
  2412 ;;		On entry : 0/0
  2413 ;;		On exit  : 0/0
  2414 ;;		Unchanged: 0/0
  2415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2416 ;;      Params:        10       0       0       0       0       0       0       0       0
  2417 ;;      Locals:        14       0       0       0       0       0       0       0       0
  2418 ;;      Temps:          8       0       0       0       0       0       0       0       0
  2419 ;;      Totals:        32       0       0       0       0       0       0       0       0
  2420 ;;Total ram usage:       32 bytes
  2421 ;; Hardware stack levels used: 1
  2422 ;; Hardware stack levels required when called: 4
  2423 ;; This function calls:
  2424 ;;		___lodiv
  2425 ;;		___lomod
  2426 ;;		_pad
  2427 ;; This function is called by:
  2428 ;;		_vfpfcnvrt
  2429 ;; This function uses a non-reentrant model
  2430 ;;
  2431                           
  2432                           	psect	text5
  2433  002D3C                     __ptext5:
  2434                           	callstack 0
  2435  002D3C                     _utoa:
  2436                           	callstack 22
  2437  002D3C                     
  2438                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 615: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99
      +                          \common\doprnt.c: 616: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\dop
      +                          rnt.c: 617:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common
      +                          \doprnt.c: 618:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.36\pic\sourc
      +                          es\c99\common\doprnt.c: 621:     if (!(prec < 0)) {
  2439  002D3C  0100               	movlb	0	; () banked
  2440  002D3E  BFD4               	btfsc	(_prec+1)& (0+255),7,b
  2441  002D40  EFA4  F016         	goto	u5131
  2442  002D44  EFA6  F016         	goto	u5130
  2443  002D48                     u5131:
  2444  002D48  EFA7  F016         	goto	l4338
  2445  002D4C                     u5130:
  2446  002D4C                     
  2447                           ; BSR set to: 0
  2448                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 622:         flag
      +                          s &= ~(1 << 1);
  2449  002D4C  93D5               	bcf	_flags& (0+255),1,b
  2450  002D4E                     l4338:
  2451                           
  2452                           ; BSR set to: 0
  2453                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 624:     p = (0 <
      +                           prec) ? prec : 1;
  2454  002D4E  BFD4               	btfsc	(_prec+1)& (0+255),7,b
  2455  002D50  EFB4  F016         	goto	u5140
  2456  002D54  51D4               	movf	(_prec+1)& (0+255),w,b
  2457  002D56  E106               	bnz	u5141
  2458  002D58  05D3               	decf	_prec& (0+255),w,b
  2459  002D5A  B0D8               	btfsc	status,0,c
  2460  002D5C  EFB2  F016         	goto	u5141
  2461  002D60  EFB4  F016         	goto	u5140
  2462  002D64                     u5141:
  2463  002D64  EFBA  F016         	goto	l986
  2464  002D68                     u5140:
  2465  002D68                     
  2466                           ; BSR set to: 0
  2467  002D68  0E00               	movlw	0
  2468  002D6A  6E2F               	movwf	(utoa@p+1)^0,c
  2469  002D6C  0E01               	movlw	1
  2470  002D6E  6E2E               	movwf	utoa@p^0,c
  2471  002D70  EFBE  F016         	goto	l988
  2472  002D74                     l986:
  2473                           
  2474                           ; BSR set to: 0
  2475  002D74  C0D3  F02E         	movff	_prec,utoa@p
  2476  002D78  C0D4  F02F         	movff	_prec+1,utoa@p+1
  2477  002D7C                     l988:
  2478                           
  2479                           ; BSR set to: 0
  2480                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 625:     w = widt
      +                          h;
  2481  002D7C  C0D1  F030         	movff	_width,utoa@w
  2482  002D80  C0D2  F031         	movff	_width+1,utoa@w+1
  2483                           
  2484                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 628:     n = d;
  2485  002D84  C01E  F032         	movff	utoa@d,utoa@n
  2486  002D88  C01F  F033         	movff	utoa@d+1,utoa@n+1
  2487  002D8C  C020  F034         	movff	utoa@d+2,utoa@n+2
  2488  002D90  C021  F035         	movff	utoa@d+3,utoa@n+3
  2489  002D94  C022  F036         	movff	utoa@d+4,utoa@n+4
  2490  002D98  C023  F037         	movff	utoa@d+5,utoa@n+5
  2491  002D9C  C024  F038         	movff	utoa@d+6,utoa@n+6
  2492  002DA0  C025  F039         	movff	utoa@d+7,utoa@n+7
  2493  002DA4                     
  2494                           ; BSR set to: 0
  2495                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 629:     i = size
      +                          of(dbuf) - 1;
  2496  002DA4  0E00               	movlw	0
  2497  002DA6  6E3B               	movwf	(utoa@i+1)^0,c
  2498  002DA8  0E4F               	movlw	79
  2499  002DAA  6E3A               	movwf	utoa@i^0,c
  2500  002DAC                     
  2501                           ; BSR set to: 0
  2502                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 630:     dbuf[i] 
      +                          = '\0';
  2503  002DAC  0E00               	movlw	0
  2504  002DAE  0101               	movlb	1	; () banked
  2505  002DB0  6F4F               	movwf	(_dbuf+79)& (0+255),b
  2506                           
  2507                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2508  002DB2  EF51  F017         	goto	l4356
  2509  002DB6                     l4346:
  2510                           
  2511                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 632:         --i;
  2512  002DB6  063A               	decf	utoa@i^0,f,c
  2513  002DB8  A0D8               	btfss	status,0,c
  2514  002DBA  063B               	decf	(utoa@i+1)^0,f,c
  2515  002DBC                     
  2516                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 633:         dbuf
      +                          [i] = '0' + (n % 10);
  2517  002DBC  0E00               	movlw	low _dbuf
  2518  002DBE  243A               	addwf	utoa@i^0,w,c
  2519  002DC0  6ED9               	movwf	fsr2l,c
  2520  002DC2  0E01               	movlw	high _dbuf
  2521  002DC4  203B               	addwfc	(utoa@i+1)^0,w,c
  2522  002DC6  6EDA               	movwf	fsr2h,c
  2523  002DC8  C032  F001         	movff	utoa@n,___lomod@dividend
  2524  002DCC  C033  F002         	movff	utoa@n+1,___lomod@dividend+1
  2525  002DD0  C034  F003         	movff	utoa@n+2,___lomod@dividend+2
  2526  002DD4  C035  F004         	movff	utoa@n+3,___lomod@dividend+3
  2527  002DD8  C036  F005         	movff	utoa@n+4,___lomod@dividend+4
  2528  002DDC  C037  F006         	movff	utoa@n+5,___lomod@dividend+5
  2529  002DE0  C038  F007         	movff	utoa@n+6,___lomod@dividend+6
  2530  002DE4  C039  F008         	movff	utoa@n+7,___lomod@dividend+7
  2531  002DE8  0E0A               	movlw	10
  2532  002DEA  6E09               	movwf	___lomod@divisor^0,c
  2533  002DEC  0E00               	movlw	0
  2534  002DEE  6E0A               	movwf	(___lomod@divisor+1)^0,c
  2535  002DF0  0E00               	movlw	0
  2536  002DF2  6E0B               	movwf	(___lomod@divisor+2)^0,c
  2537  002DF4  0E00               	movlw	0
  2538  002DF6  6E0C               	movwf	(___lomod@divisor+3)^0,c
  2539  002DF8  0E00               	movlw	0
  2540  002DFA  6E0D               	movwf	(___lomod@divisor+4)^0,c
  2541  002DFC  0E00               	movlw	0
  2542  002DFE  6E0E               	movwf	(___lomod@divisor+5)^0,c
  2543  002E00  0E00               	movlw	0
  2544  002E02  6E0F               	movwf	(___lomod@divisor+6)^0,c
  2545  002E04  0E00               	movlw	0
  2546  002E06  6E10               	movwf	(___lomod@divisor+7)^0,c
  2547  002E08  EC28  F01C         	call	___lomod	;wreg free
  2548  002E0C  C001  F026         	movff	?___lomod,??_utoa
  2549  002E10  C002  F027         	movff	?___lomod+1,??_utoa+1
  2550  002E14  C003  F028         	movff	?___lomod+2,??_utoa+2
  2551  002E18  C004  F029         	movff	?___lomod+3,??_utoa+3
  2552  002E1C  C005  F02A         	movff	?___lomod+4,??_utoa+4
  2553  002E20  C006  F02B         	movff	?___lomod+5,??_utoa+5
  2554  002E24  C007  F02C         	movff	?___lomod+6,??_utoa+6
  2555  002E28  C008  F02D         	movff	?___lomod+7,??_utoa+7
  2556  002E2C  5026               	movf	??_utoa^0,w,c
  2557  002E2E  0F30               	addlw	48
  2558  002E30  6EDF               	movwf	indf2,c
  2559  002E32                     
  2560                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 634:         --p;
  2561  002E32  062E               	decf	utoa@p^0,f,c
  2562  002E34  A0D8               	btfss	status,0,c
  2563  002E36  062F               	decf	(utoa@p+1)^0,f,c
  2564  002E38                     
  2565                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 635:         --w;
  2566  002E38  0630               	decf	utoa@w^0,f,c
  2567  002E3A  A0D8               	btfss	status,0,c
  2568  002E3C  0631               	decf	(utoa@w+1)^0,f,c
  2569  002E3E                     
  2570                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 636:         n = 
      +                          n / 10;
  2571  002E3E  C032  F001         	movff	utoa@n,___lodiv@dividend
  2572  002E42  C033  F002         	movff	utoa@n+1,___lodiv@dividend+1
  2573  002E46  C034  F003         	movff	utoa@n+2,___lodiv@dividend+2
  2574  002E4A  C035  F004         	movff	utoa@n+3,___lodiv@dividend+3
  2575  002E4E  C036  F005         	movff	utoa@n+4,___lodiv@dividend+4
  2576  002E52  C037  F006         	movff	utoa@n+5,___lodiv@dividend+5
  2577  002E56  C038  F007         	movff	utoa@n+6,___lodiv@dividend+6
  2578  002E5A  C039  F008         	movff	utoa@n+7,___lodiv@dividend+7
  2579  002E5E  0E0A               	movlw	10
  2580  002E60  6E09               	movwf	___lodiv@divisor^0,c
  2581  002E62  0E00               	movlw	0
  2582  002E64  6E0A               	movwf	(___lodiv@divisor+1)^0,c
  2583  002E66  0E00               	movlw	0
  2584  002E68  6E0B               	movwf	(___lodiv@divisor+2)^0,c
  2585  002E6A  0E00               	movlw	0
  2586  002E6C  6E0C               	movwf	(___lodiv@divisor+3)^0,c
  2587  002E6E  0E00               	movlw	0
  2588  002E70  6E0D               	movwf	(___lodiv@divisor+4)^0,c
  2589  002E72  0E00               	movlw	0
  2590  002E74  6E0E               	movwf	(___lodiv@divisor+5)^0,c
  2591  002E76  0E00               	movlw	0
  2592  002E78  6E0F               	movwf	(___lodiv@divisor+6)^0,c
  2593  002E7A  0E00               	movlw	0
  2594  002E7C  6E10               	movwf	(___lodiv@divisor+7)^0,c
  2595  002E7E  EC45  F01B         	call	___lodiv	;wreg free
  2596  002E82  C001  F032         	movff	?___lodiv,utoa@n
  2597  002E86  C002  F033         	movff	?___lodiv+1,utoa@n+1
  2598  002E8A  C003  F034         	movff	?___lodiv+2,utoa@n+2
  2599  002E8E  C004  F035         	movff	?___lodiv+3,utoa@n+3
  2600  002E92  C005  F036         	movff	?___lodiv+4,utoa@n+4
  2601  002E96  C006  F037         	movff	?___lodiv+5,utoa@n+5
  2602  002E9A  C007  F038         	movff	?___lodiv+6,utoa@n+6
  2603  002E9E  C008  F039         	movff	?___lodiv+7,utoa@n+7
  2604  002EA2                     l4356:
  2605                           
  2606                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2607  002EA2  503A               	movf	utoa@i^0,w,c
  2608  002EA4  103B               	iorwf	(utoa@i+1)^0,w,c
  2609  002EA6  B4D8               	btfsc	status,2,c
  2610  002EA8  EF58  F017         	goto	u5151
  2611  002EAC  EF5A  F017         	goto	u5150
  2612  002EB0                     u5151:
  2613  002EB0  EF8B  F017         	goto	l4366
  2614  002EB4                     u5150:
  2615  002EB4  5032               	movf	utoa@n^0,w,c
  2616  002EB6  1033               	iorwf	(utoa@n+1)^0,w,c
  2617  002EB8  1034               	iorwf	(utoa@n+2)^0,w,c
  2618  002EBA  1035               	iorwf	(utoa@n+3)^0,w,c
  2619  002EBC  1036               	iorwf	(utoa@n+4)^0,w,c
  2620  002EBE  1037               	iorwf	(utoa@n+5)^0,w,c
  2621  002EC0  1038               	iorwf	(utoa@n+6)^0,w,c
  2622  002EC2  1039               	iorwf	(utoa@n+7)^0,w,c
  2623  002EC4  A4D8               	btfss	status,2,c
  2624  002EC6  EF67  F017         	goto	u5161
  2625  002ECA  EF69  F017         	goto	u5160
  2626  002ECE                     u5161:
  2627  002ECE  EFDB  F016         	goto	l4346
  2628  002ED2                     u5160:
  2629  002ED2  BE2F               	btfsc	(utoa@p+1)^0,7,c
  2630  002ED4  EF76  F017         	goto	u5170
  2631  002ED8  502F               	movf	(utoa@p+1)^0,w,c
  2632  002EDA  E106               	bnz	u5171
  2633  002EDC  042E               	decf	utoa@p^0,w,c
  2634  002EDE  B0D8               	btfsc	status,0,c
  2635  002EE0  EF74  F017         	goto	u5171
  2636  002EE4  EF76  F017         	goto	u5170
  2637  002EE8                     u5171:
  2638  002EE8  EFDB  F016         	goto	l4346
  2639  002EEC                     u5170:
  2640  002EEC  BE31               	btfsc	(utoa@w+1)^0,7,c
  2641  002EEE  EF81  F017         	goto	u5181
  2642  002EF2  5031               	movf	(utoa@w+1)^0,w,c
  2643  002EF4  E108               	bnz	u5180
  2644  002EF6  0430               	decf	utoa@w^0,w,c
  2645  002EF8  A0D8               	btfss	status,0,c
  2646  002EFA  EF81  F017         	goto	u5181
  2647  002EFE  EF83  F017         	goto	u5180
  2648  002F02                     u5181:
  2649  002F02  EF8B  F017         	goto	l4366
  2650  002F06                     u5180:
  2651  002F06  0100               	movlb	0	; () banked
  2652  002F08  B3D5               	btfsc	_flags& (0+255),1,b
  2653  002F0A  EF89  F017         	goto	u5191
  2654  002F0E  EF8B  F017         	goto	u5190
  2655  002F12                     u5191:
  2656  002F12  EFDB  F016         	goto	l4346
  2657  002F16                     u5190:
  2658  002F16                     l4366:
  2659                           
  2660                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 640:     return p
      +                          ad(fp, &dbuf[i], w);
  2661  002F16  C01C  F011         	movff	utoa@fp,pad@fp
  2662  002F1A  C01D  F012         	movff	utoa@fp+1,pad@fp+1
  2663  002F1E  0E00               	movlw	low _dbuf
  2664  002F20  243A               	addwf	utoa@i^0,w,c
  2665  002F22  6E13               	movwf	pad@buf^0,c
  2666  002F24  0E01               	movlw	high _dbuf
  2667  002F26  203B               	addwfc	(utoa@i+1)^0,w,c
  2668  002F28  6E14               	movwf	(pad@buf+1)^0,c
  2669  002F2A  C030  F015         	movff	utoa@w,pad@p
  2670  002F2E  C031  F016         	movff	utoa@w+1,pad@p+1
  2671  002F32  ECF5  F01C         	call	_pad	;wreg free
  2672  002F36  C011  F01C         	movff	?_pad,?_utoa
  2673  002F3A  C012  F01D         	movff	?_pad+1,?_utoa+1
  2674  002F3E  0012               	return		;funcret
  2675  002F40                     __end_of_utoa:
  2676                           	callstack 0
  2677                           
  2678 ;; *************** function ___lomod *****************
  2679 ;; Defined at:
  2680 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lomod.c"
  2681 ;; Parameters:    Size  Location     Type
  2682 ;;  dividend        8    0[COMRAM] unsigned long long 
  2683 ;;  divisor         8    8[COMRAM] unsigned long long 
  2684 ;; Auto vars:     Size  Location     Type
  2685 ;;  counter         1   16[COMRAM] unsigned char 
  2686 ;; Return value:  Size  Location     Type
  2687 ;;                  8    0[COMRAM] unsigned long long 
  2688 ;; Registers used:
  2689 ;;		wreg, status,2, status,0
  2690 ;; Tracked objects:
  2691 ;;		On entry : 0/0
  2692 ;;		On exit  : 0/0
  2693 ;;		Unchanged: 0/0
  2694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2695 ;;      Params:        16       0       0       0       0       0       0       0       0
  2696 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2697 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2698 ;;      Totals:        17       0       0       0       0       0       0       0       0
  2699 ;;Total ram usage:       17 bytes
  2700 ;; Hardware stack levels used: 1
  2701 ;; This function calls:
  2702 ;;		Nothing
  2703 ;; This function is called by:
  2704 ;;		_utoa
  2705 ;; This function uses a non-reentrant model
  2706 ;;
  2707                           
  2708                           	psect	text6
  2709  003850                     __ptext6:
  2710                           	callstack 0
  2711  003850                     ___lomod:
  2712                           	callstack 25
  2713  003850  5009               	movf	___lomod@divisor^0,w,c
  2714  003852  100A               	iorwf	(___lomod@divisor+1)^0,w,c
  2715  003854  100B               	iorwf	(___lomod@divisor+2)^0,w,c
  2716  003856  100C               	iorwf	(___lomod@divisor+3)^0,w,c
  2717  003858  100D               	iorwf	(___lomod@divisor+4)^0,w,c
  2718  00385A  100E               	iorwf	(___lomod@divisor+5)^0,w,c
  2719  00385C  100F               	iorwf	(___lomod@divisor+6)^0,w,c
  2720  00385E  1010               	iorwf	(___lomod@divisor+7)^0,w,c
  2721  003860  B4D8               	btfsc	status,2,c
  2722  003862  EF35  F01C         	goto	u4181
  2723  003866  EF37  F01C         	goto	u4180
  2724  00386A                     u4181:
  2725  00386A  EF7F  F01C         	goto	l590
  2726  00386E                     u4180:
  2727  00386E  0E01               	movlw	1
  2728  003870  6E11               	movwf	___lomod@counter^0,c
  2729  003872  EF45  F01C         	goto	l3850
  2730  003876                     l3848:
  2731  003876  90D8               	bcf	status,0,c
  2732  003878  3609               	rlcf	___lomod@divisor^0,f,c
  2733  00387A  360A               	rlcf	(___lomod@divisor+1)^0,f,c
  2734  00387C  360B               	rlcf	(___lomod@divisor+2)^0,f,c
  2735  00387E  360C               	rlcf	(___lomod@divisor+3)^0,f,c
  2736  003880  360D               	rlcf	(___lomod@divisor+4)^0,f,c
  2737  003882  360E               	rlcf	(___lomod@divisor+5)^0,f,c
  2738  003884  360F               	rlcf	(___lomod@divisor+6)^0,f,c
  2739  003886  3610               	rlcf	(___lomod@divisor+7)^0,f,c
  2740  003888  2A11               	incf	___lomod@counter^0,f,c
  2741  00388A                     l3850:
  2742  00388A  AE10               	btfss	(___lomod@divisor+7)^0,7,c
  2743  00388C  EF4A  F01C         	goto	u4191
  2744  003890  EF4C  F01C         	goto	u4190
  2745  003894                     u4191:
  2746  003894  EF3B  F01C         	goto	l3848
  2747  003898                     u4190:
  2748  003898                     l3852:
  2749  003898  5009               	movf	___lomod@divisor^0,w,c
  2750  00389A  5C01               	subwf	___lomod@dividend^0,w,c
  2751  00389C  500A               	movf	(___lomod@divisor+1)^0,w,c
  2752  00389E  5802               	subwfb	(___lomod@dividend+1)^0,w,c
  2753  0038A0  500B               	movf	(___lomod@divisor+2)^0,w,c
  2754  0038A2  5803               	subwfb	(___lomod@dividend+2)^0,w,c
  2755  0038A4  500C               	movf	(___lomod@divisor+3)^0,w,c
  2756  0038A6  5804               	subwfb	(___lomod@dividend+3)^0,w,c
  2757  0038A8  500D               	movf	(___lomod@divisor+4)^0,w,c
  2758  0038AA  5805               	subwfb	(___lomod@dividend+4)^0,w,c
  2759  0038AC  500E               	movf	(___lomod@divisor+5)^0,w,c
  2760  0038AE  5806               	subwfb	(___lomod@dividend+5)^0,w,c
  2761  0038B0  500F               	movf	(___lomod@divisor+6)^0,w,c
  2762  0038B2  5807               	subwfb	(___lomod@dividend+6)^0,w,c
  2763  0038B4  5010               	movf	(___lomod@divisor+7)^0,w,c
  2764  0038B6  5808               	subwfb	(___lomod@dividend+7)^0,w,c
  2765  0038B8  A0D8               	btfss	status,0,c
  2766  0038BA  EF61  F01C         	goto	u4201
  2767  0038BE  EF63  F01C         	goto	u4200
  2768  0038C2                     u4201:
  2769  0038C2  EF73  F01C         	goto	l3856
  2770  0038C6                     u4200:
  2771  0038C6  5009               	movf	___lomod@divisor^0,w,c
  2772  0038C8  5E01               	subwf	___lomod@dividend^0,f,c
  2773  0038CA  500A               	movf	(___lomod@divisor+1)^0,w,c
  2774  0038CC  5A02               	subwfb	(___lomod@dividend+1)^0,f,c
  2775  0038CE  500B               	movf	(___lomod@divisor+2)^0,w,c
  2776  0038D0  5A03               	subwfb	(___lomod@dividend+2)^0,f,c
  2777  0038D2  500C               	movf	(___lomod@divisor+3)^0,w,c
  2778  0038D4  5A04               	subwfb	(___lomod@dividend+3)^0,f,c
  2779  0038D6  500D               	movf	(___lomod@divisor+4)^0,w,c
  2780  0038D8  5A05               	subwfb	(___lomod@dividend+4)^0,f,c
  2781  0038DA  500E               	movf	(___lomod@divisor+5)^0,w,c
  2782  0038DC  5A06               	subwfb	(___lomod@dividend+5)^0,f,c
  2783  0038DE  500F               	movf	(___lomod@divisor+6)^0,w,c
  2784  0038E0  5A07               	subwfb	(___lomod@dividend+6)^0,f,c
  2785  0038E2  5010               	movf	(___lomod@divisor+7)^0,w,c
  2786  0038E4  5A08               	subwfb	(___lomod@dividend+7)^0,f,c
  2787  0038E6                     l3856:
  2788  0038E6  90D8               	bcf	status,0,c
  2789  0038E8  3210               	rrcf	(___lomod@divisor+7)^0,f,c
  2790  0038EA  320F               	rrcf	(___lomod@divisor+6)^0,f,c
  2791  0038EC  320E               	rrcf	(___lomod@divisor+5)^0,f,c
  2792  0038EE  320D               	rrcf	(___lomod@divisor+4)^0,f,c
  2793  0038F0  320C               	rrcf	(___lomod@divisor+3)^0,f,c
  2794  0038F2  320B               	rrcf	(___lomod@divisor+2)^0,f,c
  2795  0038F4  320A               	rrcf	(___lomod@divisor+1)^0,f,c
  2796  0038F6  3209               	rrcf	___lomod@divisor^0,f,c
  2797  0038F8  2E11               	decfsz	___lomod@counter^0,f,c
  2798  0038FA  EF4C  F01C         	goto	l3852
  2799  0038FE                     l590:
  2800  0038FE  C001  F001         	movff	___lomod@dividend,?___lomod
  2801  003902  C002  F002         	movff	___lomod@dividend+1,?___lomod+1
  2802  003906  C003  F003         	movff	___lomod@dividend+2,?___lomod+2
  2803  00390A  C004  F004         	movff	___lomod@dividend+3,?___lomod+3
  2804  00390E  C005  F005         	movff	___lomod@dividend+4,?___lomod+4
  2805  003912  C006  F006         	movff	___lomod@dividend+5,?___lomod+5
  2806  003916  C007  F007         	movff	___lomod@dividend+6,?___lomod+6
  2807  00391A  C008  F008         	movff	___lomod@dividend+7,?___lomod+7
  2808  00391E  0012               	return		;funcret
  2809  003920                     __end_of___lomod:
  2810                           	callstack 0
  2811                           
  2812 ;; *************** function ___lodiv *****************
  2813 ;; Defined at:
  2814 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lodiv.c"
  2815 ;; Parameters:    Size  Location     Type
  2816 ;;  dividend        8    0[COMRAM] unsigned long long 
  2817 ;;  divisor         8    8[COMRAM] unsigned long long 
  2818 ;; Auto vars:     Size  Location     Type
  2819 ;;  quotient        8   16[COMRAM] unsigned long long 
  2820 ;;  counter         1   24[COMRAM] unsigned char 
  2821 ;; Return value:  Size  Location     Type
  2822 ;;                  8    0[COMRAM] unsigned long long 
  2823 ;; Registers used:
  2824 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2825 ;; Tracked objects:
  2826 ;;		On entry : 0/0
  2827 ;;		On exit  : 0/0
  2828 ;;		Unchanged: 0/0
  2829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2830 ;;      Params:        16       0       0       0       0       0       0       0       0
  2831 ;;      Locals:         9       0       0       0       0       0       0       0       0
  2832 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2833 ;;      Totals:        25       0       0       0       0       0       0       0       0
  2834 ;;Total ram usage:       25 bytes
  2835 ;; Hardware stack levels used: 1
  2836 ;; This function calls:
  2837 ;;		Nothing
  2838 ;; This function is called by:
  2839 ;;		_utoa
  2840 ;; This function uses a non-reentrant model
  2841 ;;
  2842                           
  2843                           	psect	text7
  2844  00368A                     __ptext7:
  2845                           	callstack 0
  2846  00368A                     ___lodiv:
  2847                           	callstack 25
  2848  00368A  EE20  F011         	lfsr	2,___lodiv@quotient
  2849  00368E  0E07               	movlw	7
  2850  003690                     u4141:
  2851  003690  6ADE               	clrf	postinc2,c
  2852  003692  06E8               	decf	wreg,f,c
  2853  003694  E2FD               	bc	u4141
  2854  003696  5009               	movf	___lodiv@divisor^0,w,c
  2855  003698  100A               	iorwf	(___lodiv@divisor+1)^0,w,c
  2856  00369A  100B               	iorwf	(___lodiv@divisor+2)^0,w,c
  2857  00369C  100C               	iorwf	(___lodiv@divisor+3)^0,w,c
  2858  00369E  100D               	iorwf	(___lodiv@divisor+4)^0,w,c
  2859  0036A0  100E               	iorwf	(___lodiv@divisor+5)^0,w,c
  2860  0036A2  100F               	iorwf	(___lodiv@divisor+6)^0,w,c
  2861  0036A4  1010               	iorwf	(___lodiv@divisor+7)^0,w,c
  2862  0036A6  B4D8               	btfsc	status,2,c
  2863  0036A8  EF58  F01B         	goto	u4151
  2864  0036AC  EF5A  F01B         	goto	u4150
  2865  0036B0                     u4151:
  2866  0036B0  EFAC  F01B         	goto	l580
  2867  0036B4                     u4150:
  2868  0036B4  0E01               	movlw	1
  2869  0036B6  6E19               	movwf	___lodiv@counter^0,c
  2870  0036B8  EF68  F01B         	goto	l3830
  2871  0036BC                     l3828:
  2872  0036BC  90D8               	bcf	status,0,c
  2873  0036BE  3609               	rlcf	___lodiv@divisor^0,f,c
  2874  0036C0  360A               	rlcf	(___lodiv@divisor+1)^0,f,c
  2875  0036C2  360B               	rlcf	(___lodiv@divisor+2)^0,f,c
  2876  0036C4  360C               	rlcf	(___lodiv@divisor+3)^0,f,c
  2877  0036C6  360D               	rlcf	(___lodiv@divisor+4)^0,f,c
  2878  0036C8  360E               	rlcf	(___lodiv@divisor+5)^0,f,c
  2879  0036CA  360F               	rlcf	(___lodiv@divisor+6)^0,f,c
  2880  0036CC  3610               	rlcf	(___lodiv@divisor+7)^0,f,c
  2881  0036CE  2A19               	incf	___lodiv@counter^0,f,c
  2882  0036D0                     l3830:
  2883  0036D0  AE10               	btfss	(___lodiv@divisor+7)^0,7,c
  2884  0036D2  EF6D  F01B         	goto	u4161
  2885  0036D6  EF6F  F01B         	goto	u4160
  2886  0036DA                     u4161:
  2887  0036DA  EF5E  F01B         	goto	l3828
  2888  0036DE                     u4160:
  2889  0036DE                     l3832:
  2890  0036DE  90D8               	bcf	status,0,c
  2891  0036E0  3611               	rlcf	___lodiv@quotient^0,f,c
  2892  0036E2  3612               	rlcf	(___lodiv@quotient+1)^0,f,c
  2893  0036E4  3613               	rlcf	(___lodiv@quotient+2)^0,f,c
  2894  0036E6  3614               	rlcf	(___lodiv@quotient+3)^0,f,c
  2895  0036E8  3615               	rlcf	(___lodiv@quotient+4)^0,f,c
  2896  0036EA  3616               	rlcf	(___lodiv@quotient+5)^0,f,c
  2897  0036EC  3617               	rlcf	(___lodiv@quotient+6)^0,f,c
  2898  0036EE  3618               	rlcf	(___lodiv@quotient+7)^0,f,c
  2899  0036F0  5009               	movf	___lodiv@divisor^0,w,c
  2900  0036F2  5C01               	subwf	___lodiv@dividend^0,w,c
  2901  0036F4  500A               	movf	(___lodiv@divisor+1)^0,w,c
  2902  0036F6  5802               	subwfb	(___lodiv@dividend+1)^0,w,c
  2903  0036F8  500B               	movf	(___lodiv@divisor+2)^0,w,c
  2904  0036FA  5803               	subwfb	(___lodiv@dividend+2)^0,w,c
  2905  0036FC  500C               	movf	(___lodiv@divisor+3)^0,w,c
  2906  0036FE  5804               	subwfb	(___lodiv@dividend+3)^0,w,c
  2907  003700  500D               	movf	(___lodiv@divisor+4)^0,w,c
  2908  003702  5805               	subwfb	(___lodiv@dividend+4)^0,w,c
  2909  003704  500E               	movf	(___lodiv@divisor+5)^0,w,c
  2910  003706  5806               	subwfb	(___lodiv@dividend+5)^0,w,c
  2911  003708  500F               	movf	(___lodiv@divisor+6)^0,w,c
  2912  00370A  5807               	subwfb	(___lodiv@dividend+6)^0,w,c
  2913  00370C  5010               	movf	(___lodiv@divisor+7)^0,w,c
  2914  00370E  5808               	subwfb	(___lodiv@dividend+7)^0,w,c
  2915  003710  A0D8               	btfss	status,0,c
  2916  003712  EF8D  F01B         	goto	u4171
  2917  003716  EF8F  F01B         	goto	u4170
  2918  00371A                     u4171:
  2919  00371A  EFA0  F01B         	goto	l3840
  2920  00371E                     u4170:
  2921  00371E  5009               	movf	___lodiv@divisor^0,w,c
  2922  003720  5E01               	subwf	___lodiv@dividend^0,f,c
  2923  003722  500A               	movf	(___lodiv@divisor+1)^0,w,c
  2924  003724  5A02               	subwfb	(___lodiv@dividend+1)^0,f,c
  2925  003726  500B               	movf	(___lodiv@divisor+2)^0,w,c
  2926  003728  5A03               	subwfb	(___lodiv@dividend+2)^0,f,c
  2927  00372A  500C               	movf	(___lodiv@divisor+3)^0,w,c
  2928  00372C  5A04               	subwfb	(___lodiv@dividend+3)^0,f,c
  2929  00372E  500D               	movf	(___lodiv@divisor+4)^0,w,c
  2930  003730  5A05               	subwfb	(___lodiv@dividend+4)^0,f,c
  2931  003732  500E               	movf	(___lodiv@divisor+5)^0,w,c
  2932  003734  5A06               	subwfb	(___lodiv@dividend+5)^0,f,c
  2933  003736  500F               	movf	(___lodiv@divisor+6)^0,w,c
  2934  003738  5A07               	subwfb	(___lodiv@dividend+6)^0,f,c
  2935  00373A  5010               	movf	(___lodiv@divisor+7)^0,w,c
  2936  00373C  5A08               	subwfb	(___lodiv@dividend+7)^0,f,c
  2937  00373E  8011               	bsf	___lodiv@quotient^0,0,c
  2938  003740                     l3840:
  2939  003740  90D8               	bcf	status,0,c
  2940  003742  3210               	rrcf	(___lodiv@divisor+7)^0,f,c
  2941  003744  320F               	rrcf	(___lodiv@divisor+6)^0,f,c
  2942  003746  320E               	rrcf	(___lodiv@divisor+5)^0,f,c
  2943  003748  320D               	rrcf	(___lodiv@divisor+4)^0,f,c
  2944  00374A  320C               	rrcf	(___lodiv@divisor+3)^0,f,c
  2945  00374C  320B               	rrcf	(___lodiv@divisor+2)^0,f,c
  2946  00374E  320A               	rrcf	(___lodiv@divisor+1)^0,f,c
  2947  003750  3209               	rrcf	___lodiv@divisor^0,f,c
  2948  003752  2E19               	decfsz	___lodiv@counter^0,f,c
  2949  003754  EF6F  F01B         	goto	l3832
  2950  003758                     l580:
  2951  003758  C011  F001         	movff	___lodiv@quotient,?___lodiv
  2952  00375C  C012  F002         	movff	___lodiv@quotient+1,?___lodiv+1
  2953  003760  C013  F003         	movff	___lodiv@quotient+2,?___lodiv+2
  2954  003764  C014  F004         	movff	___lodiv@quotient+3,?___lodiv+3
  2955  003768  C015  F005         	movff	___lodiv@quotient+4,?___lodiv+4
  2956  00376C  C016  F006         	movff	___lodiv@quotient+5,?___lodiv+5
  2957  003770  C017  F007         	movff	___lodiv@quotient+6,?___lodiv+6
  2958  003774  C018  F008         	movff	___lodiv@quotient+7,?___lodiv+7
  2959  003778  0012               	return		;funcret
  2960  00377A                     __end_of___lodiv:
  2961                           	callstack 0
  2962                           
  2963 ;; *************** function _strncmp *****************
  2964 ;; Defined at:
  2965 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strncmp.c"
  2966 ;; Parameters:    Size  Location     Type
  2967 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  2968 ;;		 -> vfpfcnvrt@ct(3), 
  2969 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  2970 ;;		 -> STR_22(3), 
  2971 ;;  n               2    4[COMRAM] unsigned int 
  2972 ;; Auto vars:     Size  Location     Type
  2973 ;;  r               2    9[COMRAM] PTR const unsigned char 
  2974 ;;		 -> STR_22(3), 
  2975 ;;  l               2    7[COMRAM] PTR const unsigned char 
  2976 ;;		 -> vfpfcnvrt@ct(3), 
  2977 ;; Return value:  Size  Location     Type
  2978 ;;                  2    0[COMRAM] int 
  2979 ;; Registers used:
  2980 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2981 ;; Tracked objects:
  2982 ;;		On entry : 0/0
  2983 ;;		On exit  : 0/0
  2984 ;;		Unchanged: 0/0
  2985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2986 ;;      Params:         6       0       0       0       0       0       0       0       0
  2987 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2988 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2989 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2990 ;;Total ram usage:       11 bytes
  2991 ;; Hardware stack levels used: 1
  2992 ;; This function calls:
  2993 ;;		Nothing
  2994 ;; This function is called by:
  2995 ;;		_vfpfcnvrt
  2996 ;; This function uses a non-reentrant model
  2997 ;;
  2998                           
  2999                           	psect	text8
  3000  00377A                     __ptext8:
  3001                           	callstack 0
  3002  00377A                     _strncmp:
  3003                           	callstack 26
  3004  00377A  C001  F008         	movff	strncmp@_l,strncmp@l
  3005  00377E  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  3006  003782  C003  F00A         	movff	strncmp@_r,strncmp@r
  3007  003786  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  3008  00378A  0605               	decf	strncmp@n^0,f,c
  3009  00378C  A0D8               	btfss	status,0,c
  3010  00378E  0606               	decf	(strncmp@n+1)^0,f,c
  3011  003790  2805               	incf	strncmp@n^0,w,c
  3012  003792  E106               	bnz	u5241
  3013  003794  2806               	incf	(strncmp@n+1)^0,w,c
  3014  003796  A4D8               	btfss	status,2,c
  3015  003798  EFD0  F01B         	goto	u5241
  3016  00379C  EFD2  F01B         	goto	u5240
  3017  0037A0                     u5241:
  3018  0037A0  EFDF  F01B         	goto	l4410
  3019  0037A4                     u5240:
  3020  0037A4  0E00               	movlw	0
  3021  0037A6  6E02               	movwf	(?_strncmp+1)^0,c
  3022  0037A8  0E00               	movlw	0
  3023  0037AA  6E01               	movwf	?_strncmp^0,c
  3024  0037AC  EF27  F01C         	goto	l1162
  3025  0037B0                     l4408:
  3026  0037B0  4A08               	infsnz	strncmp@l^0,f,c
  3027  0037B2  2A09               	incf	(strncmp@l+1)^0,f,c
  3028  0037B4  4A0A               	infsnz	strncmp@r^0,f,c
  3029  0037B6  2A0B               	incf	(strncmp@r+1)^0,f,c
  3030  0037B8  0605               	decf	strncmp@n^0,f,c
  3031  0037BA  A0D8               	btfss	status,0,c
  3032  0037BC  0606               	decf	(strncmp@n+1)^0,f,c
  3033  0037BE                     l4410:
  3034  0037BE  C008  FFD9         	movff	strncmp@l,fsr2l
  3035  0037C2  C009  FFDA         	movff	strncmp@l+1,fsr2h
  3036  0037C6  50DF               	movf	indf2,w,c
  3037  0037C8  B4D8               	btfsc	status,2,c
  3038  0037CA  EFE9  F01B         	goto	u5251
  3039  0037CE  EFEB  F01B         	goto	u5250
  3040  0037D2                     u5251:
  3041  0037D2  EF16  F01C         	goto	l4418
  3042  0037D6                     u5250:
  3043  0037D6  C00A  FFF6         	movff	strncmp@r,tblptrl
  3044  0037DA  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3045  0037DE                     	if	0	;tblptru may be non-zero
  3046  0037DE                     	endif
  3047  0037DE                     	if	0	;tblptru may be non-zero
  3048  0037DE                     	endif
  3049  0037DE  0008               	tblrd		*
  3050  0037E0  50F5               	movf	tablat,w,c
  3051  0037E2  0900               	iorlw	0
  3052  0037E4  B4D8               	btfsc	status,2,c
  3053  0037E6  EFF7  F01B         	goto	u5261
  3054  0037EA  EFF9  F01B         	goto	u5260
  3055  0037EE                     u5261:
  3056  0037EE  EF16  F01C         	goto	l4418
  3057  0037F2                     u5260:
  3058  0037F2  5005               	movf	strncmp@n^0,w,c
  3059  0037F4  1006               	iorwf	(strncmp@n+1)^0,w,c
  3060  0037F6  B4D8               	btfsc	status,2,c
  3061  0037F8  EF00  F01C         	goto	u5271
  3062  0037FC  EF02  F01C         	goto	u5270
  3063  003800                     u5271:
  3064  003800  EF16  F01C         	goto	l4418
  3065  003804                     u5270:
  3066  003804  C008  FFD9         	movff	strncmp@l,fsr2l
  3067  003808  C009  FFDA         	movff	strncmp@l+1,fsr2h
  3068  00380C  50DF               	movf	indf2,w,c
  3069  00380E  6E07               	movwf	??_strncmp^0,c
  3070  003810  C00A  FFF6         	movff	strncmp@r,tblptrl
  3071  003814  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3072  003818                     	if	0	;tblptru may be non-zero
  3073  003818                     	endif
  3074  003818                     	if	0	;tblptru may be non-zero
  3075  003818                     	endif
  3076  003818  0008               	tblrd		*
  3077  00381A  50F5               	movf	tablat,w,c
  3078  00381C  1807               	xorwf	??_strncmp^0,w,c
  3079  00381E  B4D8               	btfsc	status,2,c
  3080  003820  EF14  F01C         	goto	u5281
  3081  003824  EF16  F01C         	goto	u5280
  3082  003828                     u5281:
  3083  003828  EFD8  F01B         	goto	l4408
  3084  00382C                     u5280:
  3085  00382C                     l4418:
  3086  00382C  C008  FFD9         	movff	strncmp@l,fsr2l
  3087  003830  C009  FFDA         	movff	strncmp@l+1,fsr2h
  3088  003834  50DF               	movf	indf2,w,c
  3089  003836  6E07               	movwf	??_strncmp^0,c
  3090  003838  C00A  FFF6         	movff	strncmp@r,tblptrl
  3091  00383C  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3092  003840                     	if	0	;tblptru may be non-zero
  3093  003840                     	endif
  3094  003840                     	if	0	;tblptru may be non-zero
  3095  003840                     	endif
  3096  003840  0008               	tblrd		*
  3097  003842  50F5               	movf	tablat,w,c
  3098  003844  5C07               	subwf	??_strncmp^0,w,c
  3099  003846  6E01               	movwf	?_strncmp^0,c
  3100  003848  6A02               	clrf	(?_strncmp+1)^0,c
  3101  00384A  A0D8               	btfss	status,0,c
  3102  00384C  0602               	decf	(?_strncmp+1)^0,f,c
  3103  00384E                     l1162:
  3104  00384E  0012               	return		;funcret
  3105  003850                     __end_of_strncmp:
  3106                           	callstack 0
  3107                           
  3108 ;; *************** function _efgtoa *****************
  3109 ;; Defined at:
  3110 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  3111 ;; Parameters:    Size  Location     Type
  3112 ;;  fp              2   45[COMRAM] PTR struct _IO_FILE
  3113 ;;		 -> sprintf@f(11), 
  3114 ;;  f               4   47[COMRAM] PTR struct _IO_FILE
  3115 ;;  c               1   51[COMRAM] unsigned char 
  3116 ;; Auto vars:     Size  Location     Type
  3117 ;;  u               4   46[BANK0 ] unsigned char 
  3118 ;;  g               4   38[BANK0 ] unsigned char 
  3119 ;;  l               4   32[BANK0 ] unsigned char 
  3120 ;;  h               4   28[BANK0 ] unsigned char 
  3121 ;;  ou              4   14[BANK0 ] unsigned char 
  3122 ;;  n               2   44[BANK0 ] int 
  3123 ;;  e               2   42[BANK0 ] int 
  3124 ;;  i               2   36[BANK0 ] int 
  3125 ;;  w               2   24[BANK0 ] int 
  3126 ;;  p               2   22[BANK0 ] int 
  3127 ;;  sign            2   20[BANK0 ] int 
  3128 ;;  d               2   18[BANK0 ] int 
  3129 ;;  m               2   12[BANK0 ] int 
  3130 ;;  ne              2   10[BANK0 ] int 
  3131 ;;  pp              2    8[BANK0 ] int 
  3132 ;;  t               2    6[BANK0 ] int 
  3133 ;;  mode            1   27[BANK0 ] unsigned char 
  3134 ;;  nmode           1   26[BANK0 ] unsigned char 
  3135 ;; Return value:  Size  Location     Type
  3136 ;;                  2   45[COMRAM] int 
  3137 ;; Registers used:
  3138 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3139 ;; Tracked objects:
  3140 ;;		On entry : 0/0
  3141 ;;		On exit  : 0/0
  3142 ;;		Unchanged: 0/0
  3143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3144 ;;      Params:         7       0       0       0       0       0       0       0       0
  3145 ;;      Locals:         0      50       0       0       0       0       0       0       0
  3146 ;;      Temps:          5       0       0       0       0       0       0       0       0
  3147 ;;      Totals:        12      50       0       0       0       0       0       0       0
  3148 ;;Total ram usage:       62 bytes
  3149 ;; Hardware stack levels used: 1
  3150 ;; Hardware stack levels required when called: 4
  3151 ;; This function calls:
  3152 ;;		___awdiv
  3153 ;;		___awmod
  3154 ;;		___fladd
  3155 ;;		___fldiv
  3156 ;;		___fleq
  3157 ;;		___flge
  3158 ;;		___flmul
  3159 ;;		___flneg
  3160 ;;		___flsub
  3161 ;;		___fltol
  3162 ;;		___fpclassifyf
  3163 ;;		_floorf
  3164 ;;		_isupper
  3165 ;;		_pad
  3166 ;;		_strcpy
  3167 ;;		_tolower
  3168 ;; This function is called by:
  3169 ;;		_vfpfcnvrt
  3170 ;; This function uses a non-reentrant model
  3171 ;;
  3172                           
  3173                           	psect	text9
  3174  00086C                     __ptext9:
  3175                           	callstack 0
  3176  00086C                     _efgtoa:
  3177                           	callstack 22
  3178  00086C                     
  3179                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.36\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  3180  00086C  0E00               	movlw	0
  3181  00086E  0100               	movlb	0	; () banked
  3182  000870  6F75               	movwf	(efgtoa@sign+1)& (0+255),b
  3183  000872  0E00               	movlw	0
  3184  000874  6F74               	movwf	efgtoa@sign& (0+255),b
  3185  000876                     
  3186                           ; BSR set to: 0
  3187                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 340:     g = f;
  3188  000876  C030  F086         	movff	efgtoa@f,efgtoa@g
  3189  00087A  C031  F087         	movff	efgtoa@f+1,efgtoa@g+1
  3190  00087E  C032  F088         	movff	efgtoa@f+2,efgtoa@g+2
  3191  000882  C033  F089         	movff	efgtoa@f+3,efgtoa@g+3
  3192  000886                     
  3193                           ; BSR set to: 0
  3194                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  3195  000886  BF89               	btfsc	(efgtoa@g+3)& (0+255),7,b
  3196  000888  EF4A  F004         	goto	u4650
  3197  00088C  EF48  F004         	goto	u4651
  3198  000890                     u4651:
  3199  000890  EF60  F004         	goto	l4038
  3200  000894                     u4650:
  3201  000894                     
  3202                           ; BSR set to: 0
  3203                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  3204  000894  0E00               	movlw	0
  3205  000896  6F75               	movwf	(efgtoa@sign+1)& (0+255),b
  3206  000898  0E01               	movlw	1
  3207  00089A  6F74               	movwf	efgtoa@sign& (0+255),b
  3208  00089C                     
  3209                           ; BSR set to: 0
  3210                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  3211  00089C  C086  F001         	movff	efgtoa@g,___flneg@f1
  3212  0008A0  C087  F002         	movff	efgtoa@g+1,___flneg@f1+1
  3213  0008A4  C088  F003         	movff	efgtoa@g+2,___flneg@f1+2
  3214  0008A8  C089  F004         	movff	efgtoa@g+3,___flneg@f1+3
  3215  0008AC  EC0B  F021         	call	___flneg	;wreg free
  3216  0008B0  C001  F086         	movff	?___flneg,efgtoa@g
  3217  0008B4  C002  F087         	movff	?___flneg+1,efgtoa@g+1
  3218  0008B8  C003  F088         	movff	?___flneg+2,efgtoa@g+2
  3219  0008BC  C004  F089         	movff	?___flneg+3,efgtoa@g+3
  3220  0008C0                     l4038:
  3221                           
  3222                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  3223  0008C0  0E00               	movlw	0
  3224  0008C2  0100               	movlb	0	; () banked
  3225  0008C4  6F8D               	movwf	(efgtoa@n+1)& (0+255),b
  3226  0008C6  0E00               	movlw	0
  3227  0008C8  6F8C               	movwf	efgtoa@n& (0+255),b
  3228  0008CA                     
  3229                           ; BSR set to: 0
  3230                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  3231  0008CA  C0D1  F078         	movff	_width,efgtoa@w
  3232  0008CE  C0D2  F079         	movff	_width+1,efgtoa@w+1
  3233  0008D2                     
  3234                           ; BSR set to: 0
  3235                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  3236  0008D2  5174               	movf	efgtoa@sign& (0+255),w,b
  3237  0008D4  1175               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3238  0008D6  A4D8               	btfss	status,2,c
  3239  0008D8  EF70  F004         	goto	u4661
  3240  0008DC  EF72  F004         	goto	u4660
  3241  0008E0                     u4661:
  3242  0008E0  EF79  F004         	goto	l4046
  3243  0008E4                     u4660:
  3244  0008E4                     
  3245                           ; BSR set to: 0
  3246  0008E4  A5D5               	btfss	_flags& (0+255),2,b
  3247  0008E6  EF77  F004         	goto	u4671
  3248  0008EA  EF79  F004         	goto	u4670
  3249  0008EE                     u4671:
  3250  0008EE  EF93  F004         	goto	l4058
  3251  0008F2                     u4670:
  3252  0008F2                     l4046:
  3253                           
  3254                           ; BSR set to: 0
  3255                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  3256  0008F2  5174               	movf	efgtoa@sign& (0+255),w,b
  3257  0008F4  1175               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3258  0008F6  A4D8               	btfss	status,2,c
  3259  0008F8  EF80  F004         	goto	u4681
  3260  0008FC  EF82  F004         	goto	u4680
  3261  000900                     u4681:
  3262  000900  EF88  F004         	goto	l4050
  3263  000904                     u4680:
  3264  000904                     
  3265                           ; BSR set to: 0
  3266  000904  0E00               	movlw	0
  3267  000906  6F61               	movwf	(_efgtoa$1143+1)& (0+255),b
  3268  000908  0E2B               	movlw	43
  3269  00090A  6F60               	movwf	_efgtoa$1143& (0+255),b
  3270  00090C  EF8C  F004         	goto	l4052
  3271  000910                     l4050:
  3272                           
  3273                           ; BSR set to: 0
  3274  000910  0E00               	movlw	0
  3275  000912  6F61               	movwf	(_efgtoa$1143+1)& (0+255),b
  3276  000914  0E2D               	movlw	45
  3277  000916  6F60               	movwf	_efgtoa$1143& (0+255),b
  3278  000918                     l4052:
  3279                           
  3280                           ; BSR set to: 0
  3281  000918  C060  F100         	movff	_efgtoa$1143,_dbuf
  3282  00091C                     
  3283                           ; BSR set to: 0
  3284                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 351:         ++n;
  3285  00091C  4B8C               	infsnz	efgtoa@n& (0+255),f,b
  3286  00091E  2B8D               	incf	(efgtoa@n+1)& (0+255),f,b
  3287  000920                     
  3288                           ; BSR set to: 0
  3289                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 352:         --w;
  3290  000920  0778               	decf	efgtoa@w& (0+255),f,b
  3291  000922  A0D8               	btfss	status,0,c
  3292  000924  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  3293  000926                     l4058:
  3294                           
  3295                           ; BSR set to: 0
  3296                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 356:     if (( __
      +                          fpclassifyf(g) == 1 )) {
  3297  000926  C086  F001         	movff	efgtoa@g,___fpclassifyf@x
  3298  00092A  C087  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3299  00092E  C088  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3300  000932  C089  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3301  000936  ECC6  F01A         	call	___fpclassifyf	;wreg free
  3302  00093A  0401               	decf	?___fpclassifyf^0,w,c
  3303  00093C  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3304  00093E  A4D8               	btfss	status,2,c
  3305  000940  EFA4  F004         	goto	u4691
  3306  000944  EFA6  F004         	goto	u4690
  3307  000948                     u4691:
  3308  000948  EFF1  F004         	goto	l4076
  3309  00094C                     u4690:
  3310  00094C  0EBF               	movlw	191
  3311  00094E  6E35               	movwf	??_efgtoa^0,c
  3312  000950  0EFF               	movlw	255
  3313  000952  6E36               	movwf	(??_efgtoa+1)^0,c
  3314  000954  5034               	movf	efgtoa@c^0,w,c
  3315  000956  6E37               	movwf	(??_efgtoa+2)^0,c
  3316  000958  6A38               	clrf	(??_efgtoa+3)^0,c
  3317  00095A  5035               	movf	??_efgtoa^0,w,c
  3318  00095C  2637               	addwf	(??_efgtoa+2)^0,f,c
  3319  00095E  5036               	movf	(??_efgtoa+1)^0,w,c
  3320  000960  2238               	addwfc	(??_efgtoa+3)^0,f,c
  3321  000962  5038               	movf	(??_efgtoa+3)^0,w,c
  3322  000964  E107               	bnz	u4701
  3323  000966  0E1A               	movlw	26
  3324  000968  5C37               	subwf	(??_efgtoa+2)^0,w,c
  3325  00096A  B0D8               	btfsc	status,0,c
  3326  00096C  EFBA  F004         	goto	u4701
  3327  000970  EFBC  F004         	goto	u4700
  3328  000974                     u4701:
  3329  000974  EFCB  F004         	goto	l4068
  3330  000978                     u4700:
  3331  000978                     
  3332                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  3333  000978  0E00               	movlw	low _dbuf
  3334  00097A  0100               	movlb	0	; () banked
  3335  00097C  258C               	addwf	efgtoa@n& (0+255),w,b
  3336  00097E  6E01               	movwf	strcpy@dest^0,c
  3337  000980  0E01               	movlw	high _dbuf
  3338  000982  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3339  000984  6E02               	movwf	(strcpy@dest+1)^0,c
  3340  000986  0E58               	movlw	low STR_12
  3341  000988  6E03               	movwf	strcpy@src^0,c
  3342  00098A  0E08               	movlw	high STR_12
  3343  00098C  6E04               	movwf	(strcpy@src+1)^0,c
  3344  00098E  EC98  F01F         	call	_strcpy	;wreg free
  3345                           
  3346                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  3347  000992  EFD8  F004         	goto	l4070
  3348  000996                     l4068:
  3349                           
  3350                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  3351  000996  0E00               	movlw	low _dbuf
  3352  000998  0100               	movlb	0	; () banked
  3353  00099A  258C               	addwf	efgtoa@n& (0+255),w,b
  3354  00099C  6E01               	movwf	strcpy@dest^0,c
  3355  00099E  0E01               	movlw	high _dbuf
  3356  0009A0  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3357  0009A2  6E02               	movwf	(strcpy@dest+1)^0,c
  3358  0009A4  0E60               	movlw	low STR_13
  3359  0009A6  6E03               	movwf	strcpy@src^0,c
  3360  0009A8  0E08               	movlw	high STR_13
  3361  0009AA  6E04               	movwf	(strcpy@src+1)^0,c
  3362  0009AC  EC98  F01F         	call	_strcpy	;wreg free
  3363  0009B0                     l4070:
  3364                           
  3365                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  3366  0009B0  0100               	movlb	0	; () banked
  3367  0009B2  0EFD               	movlw	253
  3368  0009B4  2778               	addwf	efgtoa@w& (0+255),f,b
  3369  0009B6  0EFF               	movlw	255
  3370  0009B8  2379               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3371  0009BA                     l4072:
  3372                           
  3373                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  3374  0009BA  C02E  F011         	movff	efgtoa@fp,pad@fp
  3375  0009BE  C02F  F012         	movff	efgtoa@fp+1,pad@fp+1
  3376  0009C2  0E00               	movlw	low _dbuf
  3377  0009C4  6E13               	movwf	pad@buf^0,c
  3378  0009C6  0E01               	movlw	high _dbuf
  3379  0009C8  6E14               	movwf	(pad@buf+1)^0,c
  3380  0009CA  C078  F015         	movff	efgtoa@w,pad@p
  3381  0009CE  C079  F016         	movff	efgtoa@w+1,pad@p+1
  3382  0009D2  ECF5  F01C         	call	_pad	;wreg free
  3383  0009D6  C011  F02E         	movff	?_pad,?_efgtoa
  3384  0009DA  C012  F02F         	movff	?_pad+1,?_efgtoa+1
  3385  0009DE  EF3C  F00A         	goto	l910
  3386  0009E2                     l4076:
  3387                           
  3388                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 365:     if (( __
      +                          fpclassifyf(g) == 0 )) {
  3389  0009E2  C086  F001         	movff	efgtoa@g,___fpclassifyf@x
  3390  0009E6  C087  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3391  0009EA  C088  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3392  0009EE  C089  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3393  0009F2  ECC6  F01A         	call	___fpclassifyf	;wreg free
  3394  0009F6  5001               	movf	?___fpclassifyf^0,w,c
  3395  0009F8  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3396  0009FA  A4D8               	btfss	status,2,c
  3397  0009FC  EF02  F005         	goto	u4711
  3398  000A00  EF04  F005         	goto	u4710
  3399  000A04                     u4711:
  3400  000A04  EF38  F005         	goto	l4094
  3401  000A08                     u4710:
  3402  000A08  0EBF               	movlw	191
  3403  000A0A  6E35               	movwf	??_efgtoa^0,c
  3404  000A0C  0EFF               	movlw	255
  3405  000A0E  6E36               	movwf	(??_efgtoa+1)^0,c
  3406  000A10  5034               	movf	efgtoa@c^0,w,c
  3407  000A12  6E37               	movwf	(??_efgtoa+2)^0,c
  3408  000A14  6A38               	clrf	(??_efgtoa+3)^0,c
  3409  000A16  5035               	movf	??_efgtoa^0,w,c
  3410  000A18  2637               	addwf	(??_efgtoa+2)^0,f,c
  3411  000A1A  5036               	movf	(??_efgtoa+1)^0,w,c
  3412  000A1C  2238               	addwfc	(??_efgtoa+3)^0,f,c
  3413  000A1E  5038               	movf	(??_efgtoa+3)^0,w,c
  3414  000A20  E107               	bnz	u4721
  3415  000A22  0E1A               	movlw	26
  3416  000A24  5C37               	subwf	(??_efgtoa+2)^0,w,c
  3417  000A26  B0D8               	btfsc	status,0,c
  3418  000A28  EF18  F005         	goto	u4721
  3419  000A2C  EF1A  F005         	goto	u4720
  3420  000A30                     u4721:
  3421  000A30  EF29  F005         	goto	l4086
  3422  000A34                     u4720:
  3423  000A34                     
  3424                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  3425  000A34  0E00               	movlw	low _dbuf
  3426  000A36  0100               	movlb	0	; () banked
  3427  000A38  258C               	addwf	efgtoa@n& (0+255),w,b
  3428  000A3A  6E01               	movwf	strcpy@dest^0,c
  3429  000A3C  0E01               	movlw	high _dbuf
  3430  000A3E  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3431  000A40  6E02               	movwf	(strcpy@dest+1)^0,c
  3432  000A42  0E5C               	movlw	low STR_16
  3433  000A44  6E03               	movwf	strcpy@src^0,c
  3434  000A46  0E08               	movlw	high STR_16
  3435  000A48  6E04               	movwf	(strcpy@src+1)^0,c
  3436  000A4A  EC98  F01F         	call	_strcpy	;wreg free
  3437                           
  3438                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  3439  000A4E  EFD8  F004         	goto	l4070
  3440  000A52                     l4086:
  3441                           
  3442                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  3443  000A52  0E00               	movlw	low _dbuf
  3444  000A54  0100               	movlb	0	; () banked
  3445  000A56  258C               	addwf	efgtoa@n& (0+255),w,b
  3446  000A58  6E01               	movwf	strcpy@dest^0,c
  3447  000A5A  0E01               	movlw	high _dbuf
  3448  000A5C  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3449  000A5E  6E02               	movwf	(strcpy@dest+1)^0,c
  3450  000A60  0E64               	movlw	low STR_17
  3451  000A62  6E03               	movwf	strcpy@src^0,c
  3452  000A64  0E08               	movlw	high STR_17
  3453  000A66  6E04               	movwf	(strcpy@src+1)^0,c
  3454  000A68  EC98  F01F         	call	_strcpy	;wreg free
  3455  000A6C  EFD8  F004         	goto	l4070
  3456  000A70                     l4094:
  3457                           
  3458                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  3459  000A70  0E00               	movlw	0
  3460  000A72  0100               	movlb	0	; () banked
  3461  000A74  6F8E               	movwf	efgtoa@u& (0+255),b
  3462  000A76  0E00               	movlw	0
  3463  000A78  6F8F               	movwf	(efgtoa@u+1)& (0+255),b
  3464  000A7A  0E80               	movlw	128
  3465  000A7C  6F90               	movwf	(efgtoa@u+2)& (0+255),b
  3466  000A7E  0E3F               	movlw	63
  3467  000A80  6F91               	movwf	(efgtoa@u+3)& (0+255),b
  3468                           
  3469                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  3470  000A82  0E00               	movlw	0
  3471  000A84  6F8B               	movwf	(efgtoa@e+1)& (0+255),b
  3472  000A86  0E00               	movlw	0
  3473  000A88  6F8A               	movwf	efgtoa@e& (0+255),b
  3474  000A8A                     
  3475                           ; BSR set to: 0
  3476                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  3477  000A8A  C086  F001         	movff	efgtoa@g,___fleq@ff1
  3478  000A8E  C087  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  3479  000A92  C088  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  3480  000A96  C089  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  3481  000A9A  0E00               	movlw	0
  3482  000A9C  6E05               	movwf	___fleq@ff2^0,c
  3483  000A9E  0E00               	movlw	0
  3484  000AA0  6E06               	movwf	(___fleq@ff2+1)^0,c
  3485  000AA2  0E00               	movlw	0
  3486  000AA4  6E07               	movwf	(___fleq@ff2+2)^0,c
  3487  000AA6  0E00               	movlw	0
  3488  000AA8  6E08               	movwf	(___fleq@ff2+3)^0,c
  3489  000AAA  EC12  F01E         	call	___fleq	;wreg free
  3490  000AAE  B0D8               	btfsc	status,0,c
  3491  000AB0  EF5C  F005         	goto	u4731
  3492  000AB4  EF5E  F005         	goto	u4730
  3493  000AB8                     u4731:
  3494  000AB8  EFE1  F005         	goto	l4112
  3495  000ABC                     u4730:
  3496  000ABC  EF7D  F005         	goto	l4104
  3497  000AC0                     l4100:
  3498                           
  3499                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  3500  000AC0  C08E  F001         	movff	efgtoa@u,___flmul@b
  3501  000AC4  C08F  F002         	movff	efgtoa@u+1,___flmul@b+1
  3502  000AC8  C090  F003         	movff	efgtoa@u+2,___flmul@b+2
  3503  000ACC  C091  F004         	movff	efgtoa@u+3,___flmul@b+3
  3504  000AD0  0E00               	movlw	0
  3505  000AD2  6E05               	movwf	___flmul@a^0,c
  3506  000AD4  0E00               	movlw	0
  3507  000AD6  6E06               	movwf	(___flmul@a+1)^0,c
  3508  000AD8  0E20               	movlw	32
  3509  000ADA  6E07               	movwf	(___flmul@a+2)^0,c
  3510  000ADC  0E41               	movlw	65
  3511  000ADE  6E08               	movwf	(___flmul@a+3)^0,c
  3512  000AE0  EC41  F010         	call	___flmul	;wreg free
  3513  000AE4  C001  F08E         	movff	?___flmul,efgtoa@u
  3514  000AE8  C002  F08F         	movff	?___flmul+1,efgtoa@u+1
  3515  000AEC  C003  F090         	movff	?___flmul+2,efgtoa@u+2
  3516  000AF0  C004  F091         	movff	?___flmul+3,efgtoa@u+3
  3517  000AF4                     
  3518                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  3519  000AF4  0100               	movlb	0	; () banked
  3520  000AF6  4B8A               	infsnz	efgtoa@e& (0+255),f,b
  3521  000AF8  2B8B               	incf	(efgtoa@e+1)& (0+255),f,b
  3522  000AFA                     l4104:
  3523                           
  3524                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  3525  000AFA  C086  F01A         	movff	efgtoa@g,___flge@ff1
  3526  000AFE  C087  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  3527  000B02  C088  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  3528  000B06  C089  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  3529  000B0A  0E00               	movlw	0
  3530  000B0C  6E05               	movwf	___flmul@a^0,c
  3531  000B0E  0E00               	movlw	0
  3532  000B10  6E06               	movwf	(___flmul@a+1)^0,c
  3533  000B12  0E20               	movlw	32
  3534  000B14  6E07               	movwf	(___flmul@a+2)^0,c
  3535  000B16  0E41               	movlw	65
  3536  000B18  6E08               	movwf	(___flmul@a+3)^0,c
  3537  000B1A  C08E  F001         	movff	efgtoa@u,___flmul@b
  3538  000B1E  C08F  F002         	movff	efgtoa@u+1,___flmul@b+1
  3539  000B22  C090  F003         	movff	efgtoa@u+2,___flmul@b+2
  3540  000B26  C091  F004         	movff	efgtoa@u+3,___flmul@b+3
  3541  000B2A  EC41  F010         	call	___flmul	;wreg free
  3542  000B2E  C001  F01E         	movff	?___flmul,___flge@ff2
  3543  000B32  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  3544  000B36  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  3545  000B3A  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  3546  000B3E  EC44  F01A         	call	___flge	;wreg free
  3547  000B42  B0D8               	btfsc	status,0,c
  3548  000B44  EFA6  F005         	goto	u4741
  3549  000B48  EFA8  F005         	goto	u4740
  3550  000B4C                     u4741:
  3551  000B4C  EF60  F005         	goto	l4100
  3552  000B50                     u4740:
  3553  000B50  EFC8  F005         	goto	l4110
  3554  000B54                     l4106:
  3555                           
  3556                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  3557  000B54  C08E  F001         	movff	efgtoa@u,___fldiv@b
  3558  000B58  C08F  F002         	movff	efgtoa@u+1,___fldiv@b+1
  3559  000B5C  C090  F003         	movff	efgtoa@u+2,___fldiv@b+2
  3560  000B60  C091  F004         	movff	efgtoa@u+3,___fldiv@b+3
  3561  000B64  0E00               	movlw	0
  3562  000B66  6E05               	movwf	___fldiv@a^0,c
  3563  000B68  0E00               	movlw	0
  3564  000B6A  6E06               	movwf	(___fldiv@a+1)^0,c
  3565  000B6C  0E20               	movlw	32
  3566  000B6E  6E07               	movwf	(___fldiv@a+2)^0,c
  3567  000B70  0E41               	movlw	65
  3568  000B72  6E08               	movwf	(___fldiv@a+3)^0,c
  3569  000B74  EC56  F012         	call	___fldiv	;wreg free
  3570  000B78  C001  F08E         	movff	?___fldiv,efgtoa@u
  3571  000B7C  C002  F08F         	movff	?___fldiv+1,efgtoa@u+1
  3572  000B80  C003  F090         	movff	?___fldiv+2,efgtoa@u+2
  3573  000B84  C004  F091         	movff	?___fldiv+3,efgtoa@u+3
  3574  000B88                     
  3575                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  3576  000B88  0100               	movlb	0	; () banked
  3577  000B8A  078A               	decf	efgtoa@e& (0+255),f,b
  3578  000B8C  A0D8               	btfss	status,0,c
  3579  000B8E  078B               	decf	(efgtoa@e+1)& (0+255),f,b
  3580  000B90                     l4110:
  3581                           
  3582                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  3583  000B90  C086  F01A         	movff	efgtoa@g,___flge@ff1
  3584  000B94  C087  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  3585  000B98  C088  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  3586  000B9C  C089  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  3587  000BA0  C08E  F01E         	movff	efgtoa@u,___flge@ff2
  3588  000BA4  C08F  F01F         	movff	efgtoa@u+1,___flge@ff2+1
  3589  000BA8  C090  F020         	movff	efgtoa@u+2,___flge@ff2+2
  3590  000BAC  C091  F021         	movff	efgtoa@u+3,___flge@ff2+3
  3591  000BB0  EC44  F01A         	call	___flge	;wreg free
  3592  000BB4  A0D8               	btfss	status,0,c
  3593  000BB6  EFDF  F005         	goto	u4751
  3594  000BBA  EFE1  F005         	goto	u4750
  3595  000BBE                     u4751:
  3596  000BBE  EFAA  F005         	goto	l4106
  3597  000BC2                     u4750:
  3598  000BC2                     l4112:
  3599                           
  3600                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  3601  000BC2  C034  F007         	movff	efgtoa@c,tolower@c
  3602  000BC6  6A08               	clrf	(tolower@c+1)^0,c
  3603  000BC8  EC46  F020         	call	_tolower	;wreg free
  3604  000BCC  5007               	movf	?_tolower^0,w,c
  3605  000BCE  0100               	movlb	0	; () banked
  3606  000BD0  6F7B               	movwf	efgtoa@mode& (0+255),b
  3607  000BD2                     
  3608                           ; BSR set to: 0
  3609                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  3610  000BD2  C07B  F07A         	movff	efgtoa@mode,efgtoa@nmode
  3611  000BD6                     
  3612                           ; BSR set to: 0
  3613                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  3614  000BD6  0E67               	movlw	103
  3615  000BD8  197B               	xorwf	efgtoa@mode& (0+255),w,b
  3616  000BDA  A4D8               	btfss	status,2,c
  3617  000BDC  EFF2  F005         	goto	u4761
  3618  000BE0  EFF4  F005         	goto	u4760
  3619  000BE4                     u4761:
  3620  000BE4  EF1A  F006         	goto	l4126
  3621  000BE8                     u4760:
  3622  000BE8                     
  3623                           ; BSR set to: 0
  3624                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  3625  000BE8  51D3               	movf	_prec& (0+255),w,b
  3626  000BEA  11D4               	iorwf	(_prec+1)& (0+255),w,b
  3627  000BEC  A4D8               	btfss	status,2,c
  3628  000BEE  EFFB  F005         	goto	u4771
  3629  000BF2  EFFD  F005         	goto	u4770
  3630  000BF6                     u4771:
  3631  000BF6  EF01  F006         	goto	l4122
  3632  000BFA                     u4770:
  3633  000BFA                     
  3634                           ; BSR set to: 0
  3635                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  3636  000BFA  0E00               	movlw	0
  3637  000BFC  6FD4               	movwf	(_prec+1)& (0+255),b
  3638  000BFE  0E01               	movlw	1
  3639  000C00  6FD3               	movwf	_prec& (0+255),b
  3640  000C02                     l4122:
  3641                           
  3642                           ; BSR set to: 0
  3643                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  3644  000C02  BFD4               	btfsc	(_prec+1)& (0+255),7,b
  3645  000C04  EF0E  F006         	goto	u4780
  3646  000C08  51D4               	movf	(_prec+1)& (0+255),w,b
  3647  000C0A  E106               	bnz	u4781
  3648  000C0C  05D3               	decf	_prec& (0+255),w,b
  3649  000C0E  B0D8               	btfsc	status,0,c
  3650  000C10  EF0C  F006         	goto	u4781
  3651  000C14  EF0E  F006         	goto	u4780
  3652  000C18                     u4781:
  3653  000C18  EF14  F006         	goto	l926
  3654  000C1C                     u4780:
  3655  000C1C                     l4124:
  3656                           
  3657                           ; BSR set to: 0
  3658  000C1C  0E00               	movlw	0
  3659  000C1E  6F77               	movwf	(efgtoa@p+1)& (0+255),b
  3660  000C20  0E06               	movlw	6
  3661  000C22  6F76               	movwf	efgtoa@p& (0+255),b
  3662  000C24  EF23  F006         	goto	l4132
  3663  000C28                     l926:
  3664                           
  3665                           ; BSR set to: 0
  3666  000C28  C0D3  F076         	movff	_prec,efgtoa@p
  3667  000C2C  C0D4  F077         	movff	_prec+1,efgtoa@p+1
  3668  000C30  EF23  F006         	goto	l4132
  3669  000C34                     l4126:
  3670                           
  3671                           ; BSR set to: 0
  3672                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  3673  000C34  BFD4               	btfsc	(_prec+1)& (0+255),7,b
  3674  000C36  EF1F  F006         	goto	u4791
  3675  000C3A  EF21  F006         	goto	u4790
  3676  000C3E                     u4791:
  3677  000C3E  EF0E  F006         	goto	l4124
  3678  000C42                     u4790:
  3679  000C42  EF14  F006         	goto	l926
  3680  000C46                     l4132:
  3681                           
  3682                           ; BSR set to: 0
  3683                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  3684  000C46  0E67               	movlw	103
  3685  000C48  197B               	xorwf	efgtoa@mode& (0+255),w,b
  3686  000C4A  A4D8               	btfss	status,2,c
  3687  000C4C  EF2A  F006         	goto	u4801
  3688  000C50  EF2C  F006         	goto	u4800
  3689  000C54                     u4801:
  3690  000C54  EF5B  F006         	goto	l4142
  3691  000C58                     u4800:
  3692  000C58                     
  3693                           ; BSR set to: 0
  3694                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  3695  000C58  AF8B               	btfss	(efgtoa@e+1)& (0+255),7,b
  3696  000C5A  EF3A  F006         	goto	u4810
  3697  000C5E  0EFC               	movlw	252
  3698  000C60  5D8A               	subwf	efgtoa@e& (0+255),w,b
  3699  000C62  0EFF               	movlw	255
  3700  000C64  598B               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3701  000C66  A0D8               	btfss	status,0,c
  3702  000C68  EF38  F006         	goto	u4811
  3703  000C6C  EF3A  F006         	goto	u4810
  3704  000C70                     u4811:
  3705  000C70  EF59  F006         	goto	l4140
  3706  000C74                     u4810:
  3707  000C74                     
  3708                           ; BSR set to: 0
  3709  000C74  0EFF               	movlw	255
  3710  000C76  6E35               	movwf	??_efgtoa^0,c
  3711  000C78  0EFF               	movlw	255
  3712  000C7A  6E36               	movwf	(??_efgtoa+1)^0,c
  3713  000C7C  C076  F037         	movff	efgtoa@p,??_efgtoa+2
  3714  000C80  C077  F038         	movff	efgtoa@p+1,??_efgtoa+3
  3715  000C84  5035               	movf	??_efgtoa^0,w,c
  3716  000C86  2637               	addwf	(??_efgtoa+2)^0,f,c
  3717  000C88  5036               	movf	(??_efgtoa+1)^0,w,c
  3718  000C8A  2238               	addwfc	(??_efgtoa+3)^0,f,c
  3719  000C8C  518A               	movf	efgtoa@e& (0+255),w,b
  3720  000C8E  5C37               	subwf	(??_efgtoa+2)^0,w,c
  3721  000C90  5038               	movf	(??_efgtoa+3)^0,w,c
  3722  000C92  0A80               	xorlw	128
  3723  000C94  6E39               	movwf	(??_efgtoa+4)^0,c
  3724  000C96  518B               	movf	(efgtoa@e+1)& (0+255),w,b
  3725  000C98  0A80               	xorlw	128
  3726  000C9A  5839               	subwfb	(??_efgtoa+4)^0,w,c
  3727  000C9C  A0D8               	btfss	status,0,c
  3728  000C9E  EF53  F006         	goto	u4821
  3729  000CA2  EF55  F006         	goto	u4820
  3730  000CA6                     u4821:
  3731  000CA6  EF59  F006         	goto	l4140
  3732  000CAA                     u4820:
  3733  000CAA                     
  3734                           ; BSR set to: 0
  3735                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  3736  000CAA  0E66               	movlw	102
  3737  000CAC  6F7A               	movwf	efgtoa@nmode& (0+255),b
  3738                           
  3739                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  3740  000CAE  EF5B  F006         	goto	l4142
  3741  000CB2                     l4140:
  3742                           
  3743                           ; BSR set to: 0
  3744                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  3745  000CB2  0E65               	movlw	101
  3746  000CB4  6F7A               	movwf	efgtoa@nmode& (0+255),b
  3747  000CB6                     l4142:
  3748                           
  3749                           ; BSR set to: 0
  3750                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 411:     m = p;
  3751  000CB6  C076  F06C         	movff	efgtoa@p,efgtoa@m
  3752  000CBA  C077  F06D         	movff	efgtoa@p+1,efgtoa@m+1
  3753  000CBE                     
  3754                           ; BSR set to: 0
  3755                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  3756  000CBE  0E67               	movlw	103
  3757  000CC0  197B               	xorwf	efgtoa@mode& (0+255),w,b
  3758  000CC2  A4D8               	btfss	status,2,c
  3759  000CC4  EF66  F006         	goto	u4831
  3760  000CC8  EF68  F006         	goto	u4830
  3761  000CCC                     u4831:
  3762  000CCC  EF78  F006         	goto	l4150
  3763  000CD0                     u4830:
  3764  000CD0                     
  3765                           ; BSR set to: 0
  3766  000CD0  0E66               	movlw	102
  3767  000CD2  197A               	xorwf	efgtoa@nmode& (0+255),w,b
  3768  000CD4  A4D8               	btfss	status,2,c
  3769  000CD6  EF6F  F006         	goto	u4841
  3770  000CDA  EF71  F006         	goto	u4840
  3771  000CDE                     u4841:
  3772  000CDE  EF7A  F006         	goto	l4152
  3773  000CE2                     u4840:
  3774  000CE2                     
  3775                           ; BSR set to: 0
  3776  000CE2  BF8B               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3777  000CE4  EF78  F006         	goto	u4850
  3778  000CE8  EF76  F006         	goto	u4851
  3779  000CEC                     u4851:
  3780  000CEC  EF7A  F006         	goto	l4152
  3781  000CF0                     u4850:
  3782  000CF0                     l4150:
  3783                           
  3784                           ; BSR set to: 0
  3785                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 413:         ++m;
  3786  000CF0  4B6C               	infsnz	efgtoa@m& (0+255),f,b
  3787  000CF2  2B6D               	incf	(efgtoa@m+1)& (0+255),f,b
  3788  000CF4                     l4152:
  3789                           
  3790                           ; BSR set to: 0
  3791                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  3792  000CF4  0E66               	movlw	102
  3793  000CF6  197A               	xorwf	efgtoa@nmode& (0+255),w,b
  3794  000CF8  A4D8               	btfss	status,2,c
  3795  000CFA  EF81  F006         	goto	u4861
  3796  000CFE  EF83  F006         	goto	u4860
  3797  000D02                     u4861:
  3798  000D02  EFA3  F006         	goto	l4162
  3799  000D06                     u4860:
  3800  000D06                     
  3801                           ; BSR set to: 0
  3802                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  3803  000D06  BF8B               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3804  000D08  EF8A  F006         	goto	u4870
  3805  000D0C  EF88  F006         	goto	u4871
  3806  000D10                     u4871:
  3807  000D10  EF96  F006         	goto	l4158
  3808  000D14                     u4870:
  3809  000D14                     
  3810                           ; BSR set to: 0
  3811                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  3812  000D14  0E00               	movlw	0
  3813  000D16  6F8E               	movwf	efgtoa@u& (0+255),b
  3814  000D18  0E00               	movlw	0
  3815  000D1A  6F8F               	movwf	(efgtoa@u+1)& (0+255),b
  3816  000D1C  0E80               	movlw	128
  3817  000D1E  6F90               	movwf	(efgtoa@u+2)& (0+255),b
  3818  000D20  0E3F               	movlw	63
  3819  000D22  6F91               	movwf	(efgtoa@u+3)& (0+255),b
  3820                           
  3821                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  3822  000D24  0E00               	movlw	0
  3823  000D26  6F8B               	movwf	(efgtoa@e+1)& (0+255),b
  3824  000D28  0E00               	movlw	0
  3825  000D2A  6F8A               	movwf	efgtoa@e& (0+255),b
  3826  000D2C                     l4158:
  3827                           
  3828                           ; BSR set to: 0
  3829                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  3830  000D2C  0E67               	movlw	103
  3831  000D2E  197B               	xorwf	efgtoa@mode& (0+255),w,b
  3832  000D30  B4D8               	btfsc	status,2,c
  3833  000D32  EF9D  F006         	goto	u4881
  3834  000D36  EF9F  F006         	goto	u4880
  3835  000D3A                     u4881:
  3836  000D3A  EFA3  F006         	goto	l4162
  3837  000D3E                     u4880:
  3838  000D3E                     
  3839                           ; BSR set to: 0
  3840                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  3841  000D3E  518A               	movf	efgtoa@e& (0+255),w,b
  3842  000D40  276C               	addwf	efgtoa@m& (0+255),f,b
  3843  000D42  518B               	movf	(efgtoa@e+1)& (0+255),w,b
  3844  000D44  236D               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3845  000D46                     l4162:
  3846                           
  3847                           ; BSR set to: 0
  3848                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  3849  000D46  0E00               	movlw	0
  3850  000D48  6F85               	movwf	(efgtoa@i+1)& (0+255),b
  3851  000D4A  0E00               	movlw	0
  3852  000D4C  6F84               	movwf	efgtoa@i& (0+255),b
  3853  000D4E                     
  3854                           ; BSR set to: 0
  3855                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 429:     h = g;
  3856  000D4E  C086  F07C         	movff	efgtoa@g,efgtoa@h
  3857  000D52  C087  F07D         	movff	efgtoa@g+1,efgtoa@h+1
  3858  000D56  C088  F07E         	movff	efgtoa@g+2,efgtoa@h+2
  3859  000D5A  C089  F07F         	movff	efgtoa@g+3,efgtoa@h+3
  3860  000D5E                     
  3861                           ; BSR set to: 0
  3862                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  3863  000D5E  C08E  F06E         	movff	efgtoa@u,efgtoa@ou
  3864  000D62  C08F  F06F         	movff	efgtoa@u+1,efgtoa@ou+1
  3865  000D66  C090  F070         	movff	efgtoa@u+2,efgtoa@ou+2
  3866  000D6A  C091  F071         	movff	efgtoa@u+3,efgtoa@ou+3
  3867                           
  3868                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3869  000D6E  EF34  F007         	goto	l4176
  3870  000D72                     l4168:
  3871                           
  3872                           ; BSR set to: 0
  3873                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  3874  000D72  C07C  F001         	movff	efgtoa@h,___fldiv@b
  3875  000D76  C07D  F002         	movff	efgtoa@h+1,___fldiv@b+1
  3876  000D7A  C07E  F003         	movff	efgtoa@h+2,___fldiv@b+2
  3877  000D7E  C07F  F004         	movff	efgtoa@h+3,___fldiv@b+3
  3878  000D82  C08E  F005         	movff	efgtoa@u,___fldiv@a
  3879  000D86  C08F  F006         	movff	efgtoa@u+1,___fldiv@a+1
  3880  000D8A  C090  F007         	movff	efgtoa@u+2,___fldiv@a+2
  3881  000D8E  C091  F008         	movff	efgtoa@u+3,___fldiv@a+3
  3882  000D92  EC56  F012         	call	___fldiv	;wreg free
  3883  000D96  C001  F01A         	movff	?___fldiv,floorf@x
  3884  000D9A  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  3885  000D9E  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  3886  000DA2  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  3887  000DA6  EC95  F015         	call	_floorf	;wreg free
  3888  000DAA  C01A  F080         	movff	?_floorf,efgtoa@l
  3889  000DAE  C01B  F081         	movff	?_floorf+1,efgtoa@l+1
  3890  000DB2  C01C  F082         	movff	?_floorf+2,efgtoa@l+2
  3891  000DB6  C01D  F083         	movff	?_floorf+3,efgtoa@l+3
  3892                           
  3893                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  3894  000DBA  C080  F001         	movff	efgtoa@l,___fltol@f1
  3895  000DBE  C081  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3896  000DC2  C082  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3897  000DC6  C083  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3898  000DCA  ECC1  F019         	call	___fltol	;wreg free
  3899  000DCE  C001  F072         	movff	?___fltol,efgtoa@d
  3900  000DD2  C002  F073         	movff	?___fltol+1,efgtoa@d+1
  3901  000DD6                     
  3902                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  3903  000DD6  C07C  F01A         	movff	efgtoa@h,___flsub@b
  3904  000DDA  C07D  F01B         	movff	efgtoa@h+1,___flsub@b+1
  3905  000DDE  C07E  F01C         	movff	efgtoa@h+2,___flsub@b+2
  3906  000DE2  C07F  F01D         	movff	efgtoa@h+3,___flsub@b+3
  3907  000DE6  C08E  F005         	movff	efgtoa@u,___flmul@a
  3908  000DEA  C08F  F006         	movff	efgtoa@u+1,___flmul@a+1
  3909  000DEE  C090  F007         	movff	efgtoa@u+2,___flmul@a+2
  3910  000DF2  C091  F008         	movff	efgtoa@u+3,___flmul@a+3
  3911  000DF6  C080  F001         	movff	efgtoa@l,___flmul@b
  3912  000DFA  C081  F002         	movff	efgtoa@l+1,___flmul@b+1
  3913  000DFE  C082  F003         	movff	efgtoa@l+2,___flmul@b+2
  3914  000E02  C083  F004         	movff	efgtoa@l+3,___flmul@b+3
  3915  000E06  EC41  F010         	call	___flmul	;wreg free
  3916  000E0A  C001  F01E         	movff	?___flmul,___flsub@a
  3917  000E0E  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  3918  000E12  C003  F020         	movff	?___flmul+2,___flsub@a+2
  3919  000E16  C004  F021         	movff	?___flmul+3,___flsub@a+3
  3920  000E1A  EC69  F020         	call	___flsub	;wreg free
  3921  000E1E  C01A  F07C         	movff	?___flsub,efgtoa@h
  3922  000E22  C01B  F07D         	movff	?___flsub+1,efgtoa@h+1
  3923  000E26  C01C  F07E         	movff	?___flsub+2,efgtoa@h+2
  3924  000E2A  C01D  F07F         	movff	?___flsub+3,efgtoa@h+3
  3925  000E2E                     
  3926                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  3927  000E2E  C08E  F001         	movff	efgtoa@u,___fldiv@b
  3928  000E32  C08F  F002         	movff	efgtoa@u+1,___fldiv@b+1
  3929  000E36  C090  F003         	movff	efgtoa@u+2,___fldiv@b+2
  3930  000E3A  C091  F004         	movff	efgtoa@u+3,___fldiv@b+3
  3931  000E3E  0E00               	movlw	0
  3932  000E40  6E05               	movwf	___fldiv@a^0,c
  3933  000E42  0E00               	movlw	0
  3934  000E44  6E06               	movwf	(___fldiv@a+1)^0,c
  3935  000E46  0E20               	movlw	32
  3936  000E48  6E07               	movwf	(___fldiv@a+2)^0,c
  3937  000E4A  0E41               	movlw	65
  3938  000E4C  6E08               	movwf	(___fldiv@a+3)^0,c
  3939  000E4E  EC56  F012         	call	___fldiv	;wreg free
  3940  000E52  C001  F08E         	movff	?___fldiv,efgtoa@u
  3941  000E56  C002  F08F         	movff	?___fldiv+1,efgtoa@u+1
  3942  000E5A  C003  F090         	movff	?___fldiv+2,efgtoa@u+2
  3943  000E5E  C004  F091         	movff	?___fldiv+3,efgtoa@u+3
  3944  000E62                     
  3945                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 436:         ++i;
  3946  000E62  0100               	movlb	0	; () banked
  3947  000E64  4B84               	infsnz	efgtoa@i& (0+255),f,b
  3948  000E66  2B85               	incf	(efgtoa@i+1)& (0+255),f,b
  3949  000E68                     l4176:
  3950                           
  3951                           ; BSR set to: 0
  3952                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3953  000E68  516C               	movf	efgtoa@m& (0+255),w,b
  3954  000E6A  5D84               	subwf	efgtoa@i& (0+255),w,b
  3955  000E6C  5185               	movf	(efgtoa@i+1)& (0+255),w,b
  3956  000E6E  0A80               	xorlw	128
  3957  000E70  6E35               	movwf	??_efgtoa^0,c
  3958  000E72  516D               	movf	(efgtoa@m+1)& (0+255),w,b
  3959  000E74  0A80               	xorlw	128
  3960  000E76  5835               	subwfb	??_efgtoa^0,w,c
  3961  000E78  A0D8               	btfss	status,0,c
  3962  000E7A  EF41  F007         	goto	u4891
  3963  000E7E  EF43  F007         	goto	u4890
  3964  000E82                     u4891:
  3965  000E82  EFB9  F006         	goto	l4168
  3966  000E86                     u4890:
  3967  000E86                     
  3968                           ; BSR set to: 0
  3969                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  3970  000E86  C08E  F001         	movff	efgtoa@u,___flmul@b
  3971  000E8A  C08F  F002         	movff	efgtoa@u+1,___flmul@b+1
  3972  000E8E  C090  F003         	movff	efgtoa@u+2,___flmul@b+2
  3973  000E92  C091  F004         	movff	efgtoa@u+3,___flmul@b+3
  3974  000E96  0E00               	movlw	0
  3975  000E98  6E05               	movwf	___flmul@a^0,c
  3976  000E9A  0E00               	movlw	0
  3977  000E9C  6E06               	movwf	(___flmul@a+1)^0,c
  3978  000E9E  0EA0               	movlw	160
  3979  000EA0  6E07               	movwf	(___flmul@a+2)^0,c
  3980  000EA2  0E40               	movlw	64
  3981  000EA4  6E08               	movwf	(___flmul@a+3)^0,c
  3982  000EA6  EC41  F010         	call	___flmul	;wreg free
  3983  000EAA  C001  F080         	movff	?___flmul,efgtoa@l
  3984  000EAE  C002  F081         	movff	?___flmul+1,efgtoa@l+1
  3985  000EB2  C003  F082         	movff	?___flmul+2,efgtoa@l+2
  3986  000EB6  C004  F083         	movff	?___flmul+3,efgtoa@l+3
  3987  000EBA                     
  3988                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  3989  000EBA  C07C  F01A         	movff	efgtoa@h,___flge@ff1
  3990  000EBE  C07D  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  3991  000EC2  C07E  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  3992  000EC6  C07F  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  3993  000ECA  C080  F01E         	movff	efgtoa@l,___flge@ff2
  3994  000ECE  C081  F01F         	movff	efgtoa@l+1,___flge@ff2+1
  3995  000ED2  C082  F020         	movff	efgtoa@l+2,___flge@ff2+2
  3996  000ED6  C083  F021         	movff	efgtoa@l+3,___flge@ff2+3
  3997  000EDA  EC44  F01A         	call	___flge	;wreg free
  3998  000EDE  B0D8               	btfsc	status,0,c
  3999  000EE0  EF74  F007         	goto	u4901
  4000  000EE4  EF76  F007         	goto	u4900
  4001  000EE8                     u4901:
  4002  000EE8  EF81  F007         	goto	l4184
  4003  000EEC                     u4900:
  4004  000EEC                     
  4005                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  4006  000EEC  0E00               	movlw	0
  4007  000EEE  0100               	movlb	0	; () banked
  4008  000EF0  6F80               	movwf	efgtoa@l& (0+255),b
  4009  000EF2  0E00               	movlw	0
  4010  000EF4  6F81               	movwf	(efgtoa@l+1)& (0+255),b
  4011  000EF6  0E00               	movlw	0
  4012  000EF8  6F82               	movwf	(efgtoa@l+2)& (0+255),b
  4013  000EFA  0E00               	movlw	0
  4014  000EFC  6F83               	movwf	(efgtoa@l+3)& (0+255),b
  4015                           
  4016                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 443:     } else {
  4017  000EFE  EFAA  F007         	goto	l4190
  4018  000F02                     l4184:
  4019                           
  4020                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  4021  000F02  C07C  F001         	movff	efgtoa@h,___fleq@ff1
  4022  000F06  C07D  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  4023  000F0A  C07E  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  4024  000F0E  C07F  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  4025  000F12  C080  F005         	movff	efgtoa@l,___fleq@ff2
  4026  000F16  C081  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  4027  000F1A  C082  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  4028  000F1E  C083  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  4029  000F22  EC12  F01E         	call	___fleq	;wreg free
  4030  000F26  A0D8               	btfss	status,0,c
  4031  000F28  EF98  F007         	goto	u4911
  4032  000F2C  EF9A  F007         	goto	u4910
  4033  000F30                     u4911:
  4034  000F30  EFAA  F007         	goto	l4190
  4035  000F34                     u4910:
  4036  000F34  0100               	movlb	0	; () banked
  4037  000F36  B172               	btfsc	efgtoa@d& (0+255),0,b
  4038  000F38  EFA0  F007         	goto	u4921
  4039  000F3C  EFA2  F007         	goto	u4920
  4040  000F40                     u4921:
  4041  000F40  EFAA  F007         	goto	l4190
  4042  000F44                     u4920:
  4043  000F44                     
  4044                           ; BSR set to: 0
  4045                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  4046  000F44  0E00               	movlw	0
  4047  000F46  6F80               	movwf	efgtoa@l& (0+255),b
  4048  000F48  0E00               	movlw	0
  4049  000F4A  6F81               	movwf	(efgtoa@l+1)& (0+255),b
  4050  000F4C  0E00               	movlw	0
  4051  000F4E  6F82               	movwf	(efgtoa@l+2)& (0+255),b
  4052  000F50  0E00               	movlw	0
  4053  000F52  6F83               	movwf	(efgtoa@l+3)& (0+255),b
  4054  000F54                     l4190:
  4055                           
  4056                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  4057  000F54  C086  F001         	movff	efgtoa@g,___fladd@b
  4058  000F58  C087  F002         	movff	efgtoa@g+1,___fladd@b+1
  4059  000F5C  C088  F003         	movff	efgtoa@g+2,___fladd@b+2
  4060  000F60  C089  F004         	movff	efgtoa@g+3,___fladd@b+3
  4061  000F64  C080  F005         	movff	efgtoa@l,___fladd@a
  4062  000F68  C081  F006         	movff	efgtoa@l+1,___fladd@a+1
  4063  000F6C  C082  F007         	movff	efgtoa@l+2,___fladd@a+2
  4064  000F70  C083  F008         	movff	efgtoa@l+3,___fladd@a+3
  4065  000F74  ECE1  F00D         	call	___fladd	;wreg free
  4066  000F78  C001  F07C         	movff	?___fladd,efgtoa@h
  4067  000F7C  C002  F07D         	movff	?___fladd+1,efgtoa@h+1
  4068  000F80  C003  F07E         	movff	?___fladd+2,efgtoa@h+2
  4069  000F84  C004  F07F         	movff	?___fladd+3,efgtoa@h+3
  4070  000F88                     
  4071                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  4072  000F88  C07C  F01A         	movff	efgtoa@h,___flge@ff1
  4073  000F8C  C07D  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  4074  000F90  C07E  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  4075  000F94  C07F  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  4076  000F98  0E00               	movlw	0
  4077  000F9A  6E05               	movwf	___flmul@a^0,c
  4078  000F9C  0E00               	movlw	0
  4079  000F9E  6E06               	movwf	(___flmul@a+1)^0,c
  4080  000FA0  0E20               	movlw	32
  4081  000FA2  6E07               	movwf	(___flmul@a+2)^0,c
  4082  000FA4  0E41               	movlw	65
  4083  000FA6  6E08               	movwf	(___flmul@a+3)^0,c
  4084  000FA8  C06E  F001         	movff	efgtoa@ou,___flmul@b
  4085  000FAC  C06F  F002         	movff	efgtoa@ou+1,___flmul@b+1
  4086  000FB0  C070  F003         	movff	efgtoa@ou+2,___flmul@b+2
  4087  000FB4  C071  F004         	movff	efgtoa@ou+3,___flmul@b+3
  4088  000FB8  EC41  F010         	call	___flmul	;wreg free
  4089  000FBC  C001  F01E         	movff	?___flmul,___flge@ff2
  4090  000FC0  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  4091  000FC4  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  4092  000FC8  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  4093  000FCC  EC44  F01A         	call	___flge	;wreg free
  4094  000FD0  A0D8               	btfss	status,0,c
  4095  000FD2  EFED  F007         	goto	u4931
  4096  000FD6  EFEF  F007         	goto	u4930
  4097  000FDA                     u4931:
  4098  000FDA  EF18  F008         	goto	l4202
  4099  000FDE                     u4930:
  4100  000FDE                     
  4101                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 454:   e++;
  4102  000FDE  0100               	movlb	0	; () banked
  4103  000FE0  4B8A               	infsnz	efgtoa@e& (0+255),f,b
  4104  000FE2  2B8B               	incf	(efgtoa@e+1)& (0+255),f,b
  4105  000FE4                     
  4106                           ; BSR set to: 0
  4107                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  4108  000FE4  C06E  F001         	movff	efgtoa@ou,___flmul@b
  4109  000FE8  C06F  F002         	movff	efgtoa@ou+1,___flmul@b+1
  4110  000FEC  C070  F003         	movff	efgtoa@ou+2,___flmul@b+2
  4111  000FF0  C071  F004         	movff	efgtoa@ou+3,___flmul@b+3
  4112  000FF4  0E00               	movlw	0
  4113  000FF6  6E05               	movwf	___flmul@a^0,c
  4114  000FF8  0E00               	movlw	0
  4115  000FFA  6E06               	movwf	(___flmul@a+1)^0,c
  4116  000FFC  0E20               	movlw	32
  4117  000FFE  6E07               	movwf	(___flmul@a+2)^0,c
  4118  001000  0E41               	movlw	65
  4119  001002  6E08               	movwf	(___flmul@a+3)^0,c
  4120  001004  EC41  F010         	call	___flmul	;wreg free
  4121  001008  C001  F06E         	movff	?___flmul,efgtoa@ou
  4122  00100C  C002  F06F         	movff	?___flmul+1,efgtoa@ou+1
  4123  001010  C003  F070         	movff	?___flmul+2,efgtoa@ou+2
  4124  001014  C004  F071         	movff	?___flmul+3,efgtoa@ou+3
  4125  001018                     
  4126                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  4127  001018  0E66               	movlw	102
  4128  00101A  0100               	movlb	0	; () banked
  4129  00101C  197A               	xorwf	efgtoa@nmode& (0+255),w,b
  4130  00101E  A4D8               	btfss	status,2,c
  4131  001020  EF14  F008         	goto	u4941
  4132  001024  EF16  F008         	goto	u4940
  4133  001028                     u4941:
  4134  001028  EF18  F008         	goto	l4202
  4135  00102C                     u4940:
  4136  00102C                     
  4137                           ; BSR set to: 0
  4138                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 458:    m++;
  4139  00102C  4B6C               	infsnz	efgtoa@m& (0+255),f,b
  4140  00102E  2B6D               	incf	(efgtoa@m+1)& (0+255),f,b
  4141  001030                     l4202:
  4142                           
  4143                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  4144  001030  C06E  F08E         	movff	efgtoa@ou,efgtoa@u
  4145  001034  C06F  F08F         	movff	efgtoa@ou+1,efgtoa@u+1
  4146  001038  C070  F090         	movff	efgtoa@ou+2,efgtoa@u+2
  4147  00103C  C071  F091         	movff	efgtoa@ou+3,efgtoa@u+3
  4148  001040                     
  4149                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  4150  001040  0E65               	movlw	101
  4151  001042  0100               	movlb	0	; () banked
  4152  001044  197A               	xorwf	efgtoa@nmode& (0+255),w,b
  4153  001046  B4D8               	btfsc	status,2,c
  4154  001048  EF28  F008         	goto	u4951
  4155  00104C  EF2A  F008         	goto	u4950
  4156  001050                     u4951:
  4157  001050  EF30  F008         	goto	l4208
  4158  001054                     u4950:
  4159  001054                     
  4160                           ; BSR set to: 0
  4161  001054  C08A  F06A         	movff	efgtoa@e,efgtoa@ne
  4162  001058  C08B  F06B         	movff	efgtoa@e+1,efgtoa@ne+1
  4163  00105C  EF34  F008         	goto	l954
  4164  001060                     l4208:
  4165                           
  4166                           ; BSR set to: 0
  4167  001060  0E00               	movlw	0
  4168  001062  6F6B               	movwf	(efgtoa@ne+1)& (0+255),b
  4169  001064  0E00               	movlw	0
  4170  001066  6F6A               	movwf	efgtoa@ne& (0+255),b
  4171  001068                     l954:
  4172                           
  4173                           ; BSR set to: 0
  4174                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  4175  001068  0E00               	movlw	0
  4176  00106A  6F69               	movwf	(efgtoa@pp+1)& (0+255),b
  4177  00106C  0E00               	movlw	0
  4178  00106E  6F68               	movwf	efgtoa@pp& (0+255),b
  4179                           
  4180                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  4181  001070  0E00               	movlw	0
  4182  001072  6F67               	movwf	(efgtoa@t+1)& (0+255),b
  4183  001074  0E00               	movlw	0
  4184  001076  6F66               	movwf	efgtoa@t& (0+255),b
  4185                           
  4186                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  4187  001078  0E00               	movlw	0
  4188  00107A  6F85               	movwf	(efgtoa@i+1)& (0+255),b
  4189  00107C  0E00               	movlw	0
  4190  00107E  6F84               	movwf	efgtoa@i& (0+255),b
  4191                           
  4192                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4193  001080  EF2F  F009         	goto	l4258
  4194  001084                     l4210:
  4195                           
  4196                           ; BSR set to: 0
  4197                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  4198  001084  C07C  F001         	movff	efgtoa@h,___fldiv@b
  4199  001088  C07D  F002         	movff	efgtoa@h+1,___fldiv@b+1
  4200  00108C  C07E  F003         	movff	efgtoa@h+2,___fldiv@b+2
  4201  001090  C07F  F004         	movff	efgtoa@h+3,___fldiv@b+3
  4202  001094  C08E  F005         	movff	efgtoa@u,___fldiv@a
  4203  001098  C08F  F006         	movff	efgtoa@u+1,___fldiv@a+1
  4204  00109C  C090  F007         	movff	efgtoa@u+2,___fldiv@a+2
  4205  0010A0  C091  F008         	movff	efgtoa@u+3,___fldiv@a+3
  4206  0010A4  EC56  F012         	call	___fldiv	;wreg free
  4207  0010A8  C001  F01A         	movff	?___fldiv,floorf@x
  4208  0010AC  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  4209  0010B0  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  4210  0010B4  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  4211  0010B8  EC95  F015         	call	_floorf	;wreg free
  4212  0010BC  C01A  F080         	movff	?_floorf,efgtoa@l
  4213  0010C0  C01B  F081         	movff	?_floorf+1,efgtoa@l+1
  4214  0010C4  C01C  F082         	movff	?_floorf+2,efgtoa@l+2
  4215  0010C8  C01D  F083         	movff	?_floorf+3,efgtoa@l+3
  4216                           
  4217                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  4218  0010CC  C080  F001         	movff	efgtoa@l,___fltol@f1
  4219  0010D0  C081  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4220  0010D4  C082  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4221  0010D8  C083  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4222  0010DC  ECC1  F019         	call	___fltol	;wreg free
  4223  0010E0  C001  F072         	movff	?___fltol,efgtoa@d
  4224  0010E4  C002  F073         	movff	?___fltol+1,efgtoa@d+1
  4225  0010E8                     
  4226                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  4227  0010E8  0100               	movlb	0	; () banked
  4228  0010EA  B9D5               	btfsc	_flags& (0+255),4,b
  4229  0010EC  EF7A  F008         	goto	u4961
  4230  0010F0  EF7C  F008         	goto	u4960
  4231  0010F4                     u4961:
  4232  0010F4  EF99  F008         	goto	l4222
  4233  0010F8                     u4960:
  4234  0010F8                     
  4235                           ; BSR set to: 0
  4236  0010F8  5172               	movf	efgtoa@d& (0+255),w,b
  4237  0010FA  1173               	iorwf	(efgtoa@d+1)& (0+255),w,b
  4238  0010FC  A4D8               	btfss	status,2,c
  4239  0010FE  EF83  F008         	goto	u4971
  4240  001102  EF85  F008         	goto	u4970
  4241  001106                     u4971:
  4242  001106  EF99  F008         	goto	l4222
  4243  00110A                     u4970:
  4244  00110A                     
  4245                           ; BSR set to: 0
  4246  00110A  0E67               	movlw	103
  4247  00110C  197B               	xorwf	efgtoa@mode& (0+255),w,b
  4248  00110E  A4D8               	btfss	status,2,c
  4249  001110  EF8C  F008         	goto	u4981
  4250  001114  EF8E  F008         	goto	u4980
  4251  001118                     u4981:
  4252  001118  EF99  F008         	goto	l4222
  4253  00111C                     u4980:
  4254  00111C                     
  4255                           ; BSR set to: 0
  4256  00111C  BF6B               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4257  00111E  EF95  F008         	goto	u4990
  4258  001122  EF93  F008         	goto	u4991
  4259  001126                     u4991:
  4260  001126  EF99  F008         	goto	l4222
  4261  00112A                     u4990:
  4262  00112A                     
  4263                           ; BSR set to: 0
  4264                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  4265  00112A  4B66               	infsnz	efgtoa@t& (0+255),f,b
  4266  00112C  2B67               	incf	(efgtoa@t+1)& (0+255),f,b
  4267                           
  4268                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  4269  00112E  EFE3  F008         	goto	l4250
  4270  001132                     l4222:
  4271                           
  4272                           ; BSR set to: 0
  4273                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  4274  001132  5168               	movf	efgtoa@pp& (0+255),w,b
  4275  001134  1169               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4276  001136  A4D8               	btfss	status,2,c
  4277  001138  EFA0  F008         	goto	u5001
  4278  00113C  EFA2  F008         	goto	u5000
  4279  001140                     u5001:
  4280  001140  EFCC  F008         	goto	l4242
  4281  001144                     u5000:
  4282  001144                     
  4283                           ; BSR set to: 0
  4284  001144  BF6B               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4285  001146  EFA9  F008         	goto	u5010
  4286  00114A  EFA7  F008         	goto	u5011
  4287  00114E                     u5011:
  4288  00114E  EFCC  F008         	goto	l4242
  4289  001152                     u5010:
  4290  001152                     
  4291                           ; BSR set to: 0
  4292                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  4293  001152  0E00               	movlw	low _dbuf
  4294  001154  258C               	addwf	efgtoa@n& (0+255),w,b
  4295  001156  6ED9               	movwf	fsr2l,c
  4296  001158  0E01               	movlw	high _dbuf
  4297  00115A  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4298  00115C  6EDA               	movwf	fsr2h,c
  4299  00115E  0E2E               	movlw	46
  4300  001160  6EDF               	movwf	indf2,c
  4301  001162                     
  4302                           ; BSR set to: 0
  4303  001162  4B8C               	infsnz	efgtoa@n& (0+255),f,b
  4304  001164  2B8D               	incf	(efgtoa@n+1)& (0+255),f,b
  4305  001166                     
  4306                           ; BSR set to: 0
  4307                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  4308  001166  0778               	decf	efgtoa@w& (0+255),f,b
  4309  001168  A0D8               	btfss	status,0,c
  4310  00116A  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  4311  00116C                     
  4312                           ; BSR set to: 0
  4313                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  4314  00116C  0E00               	movlw	0
  4315  00116E  6F69               	movwf	(efgtoa@pp+1)& (0+255),b
  4316  001170  0E01               	movlw	1
  4317  001172  6F68               	movwf	efgtoa@pp& (0+255),b
  4318  001174  EFCC  F008         	goto	l4242
  4319  001178                     l4234:
  4320                           
  4321                           ; BSR set to: 0
  4322                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  4323  001178  0E00               	movlw	low _dbuf
  4324  00117A  258C               	addwf	efgtoa@n& (0+255),w,b
  4325  00117C  6ED9               	movwf	fsr2l,c
  4326  00117E  0E01               	movlw	high _dbuf
  4327  001180  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4328  001182  6EDA               	movwf	fsr2h,c
  4329  001184  0E30               	movlw	48
  4330  001186  6EDF               	movwf	indf2,c
  4331  001188                     
  4332                           ; BSR set to: 0
  4333  001188  4B8C               	infsnz	efgtoa@n& (0+255),f,b
  4334  00118A  2B8D               	incf	(efgtoa@n+1)& (0+255),f,b
  4335  00118C                     
  4336                           ; BSR set to: 0
  4337                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  4338  00118C  0778               	decf	efgtoa@w& (0+255),f,b
  4339  00118E  A0D8               	btfss	status,0,c
  4340  001190  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  4341  001192                     
  4342                           ; BSR set to: 0
  4343                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  4344  001192  0766               	decf	efgtoa@t& (0+255),f,b
  4345  001194  A0D8               	btfss	status,0,c
  4346  001196  0767               	decf	(efgtoa@t+1)& (0+255),f,b
  4347  001198                     l4242:
  4348                           
  4349                           ; BSR set to: 0
  4350                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  4351  001198  5166               	movf	efgtoa@t& (0+255),w,b
  4352  00119A  1167               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4353  00119C  A4D8               	btfss	status,2,c
  4354  00119E  EFD3  F008         	goto	u5021
  4355  0011A2  EFD5  F008         	goto	u5020
  4356  0011A6                     u5021:
  4357  0011A6  EFBC  F008         	goto	l4234
  4358  0011AA                     u5020:
  4359  0011AA                     
  4360                           ; BSR set to: 0
  4361                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  4362  0011AA  0E00               	movlw	low _dbuf
  4363  0011AC  258C               	addwf	efgtoa@n& (0+255),w,b
  4364  0011AE  6ED9               	movwf	fsr2l,c
  4365  0011B0  0E01               	movlw	high _dbuf
  4366  0011B2  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4367  0011B4  6EDA               	movwf	fsr2h,c
  4368  0011B6  5172               	movf	efgtoa@d& (0+255),w,b
  4369  0011B8  0F30               	addlw	48
  4370  0011BA  6EDF               	movwf	indf2,c
  4371  0011BC                     
  4372                           ; BSR set to: 0
  4373  0011BC  4B8C               	infsnz	efgtoa@n& (0+255),f,b
  4374  0011BE  2B8D               	incf	(efgtoa@n+1)& (0+255),f,b
  4375  0011C0                     
  4376                           ; BSR set to: 0
  4377                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  4378  0011C0  0778               	decf	efgtoa@w& (0+255),f,b
  4379  0011C2  A0D8               	btfss	status,0,c
  4380  0011C4  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  4381  0011C6                     l4250:
  4382                           
  4383                           ; BSR set to: 0
  4384                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  4385  0011C6  C07C  F01A         	movff	efgtoa@h,___flsub@b
  4386  0011CA  C07D  F01B         	movff	efgtoa@h+1,___flsub@b+1
  4387  0011CE  C07E  F01C         	movff	efgtoa@h+2,___flsub@b+2
  4388  0011D2  C07F  F01D         	movff	efgtoa@h+3,___flsub@b+3
  4389  0011D6  C08E  F005         	movff	efgtoa@u,___flmul@a
  4390  0011DA  C08F  F006         	movff	efgtoa@u+1,___flmul@a+1
  4391  0011DE  C090  F007         	movff	efgtoa@u+2,___flmul@a+2
  4392  0011E2  C091  F008         	movff	efgtoa@u+3,___flmul@a+3
  4393  0011E6  C080  F001         	movff	efgtoa@l,___flmul@b
  4394  0011EA  C081  F002         	movff	efgtoa@l+1,___flmul@b+1
  4395  0011EE  C082  F003         	movff	efgtoa@l+2,___flmul@b+2
  4396  0011F2  C083  F004         	movff	efgtoa@l+3,___flmul@b+3
  4397  0011F6  EC41  F010         	call	___flmul	;wreg free
  4398  0011FA  C001  F01E         	movff	?___flmul,___flsub@a
  4399  0011FE  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  4400  001202  C003  F020         	movff	?___flmul+2,___flsub@a+2
  4401  001206  C004  F021         	movff	?___flmul+3,___flsub@a+3
  4402  00120A  EC69  F020         	call	___flsub	;wreg free
  4403  00120E  C01A  F07C         	movff	?___flsub,efgtoa@h
  4404  001212  C01B  F07D         	movff	?___flsub+1,efgtoa@h+1
  4405  001216  C01C  F07E         	movff	?___flsub+2,efgtoa@h+2
  4406  00121A  C01D  F07F         	movff	?___flsub+3,efgtoa@h+3
  4407  00121E                     
  4408                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  4409  00121E  C08E  F001         	movff	efgtoa@u,___fldiv@b
  4410  001222  C08F  F002         	movff	efgtoa@u+1,___fldiv@b+1
  4411  001226  C090  F003         	movff	efgtoa@u+2,___fldiv@b+2
  4412  00122A  C091  F004         	movff	efgtoa@u+3,___fldiv@b+3
  4413  00122E  0E00               	movlw	0
  4414  001230  6E05               	movwf	___fldiv@a^0,c
  4415  001232  0E00               	movlw	0
  4416  001234  6E06               	movwf	(___fldiv@a+1)^0,c
  4417  001236  0E20               	movlw	32
  4418  001238  6E07               	movwf	(___fldiv@a+2)^0,c
  4419  00123A  0E41               	movlw	65
  4420  00123C  6E08               	movwf	(___fldiv@a+3)^0,c
  4421  00123E  EC56  F012         	call	___fldiv	;wreg free
  4422  001242  C001  F08E         	movff	?___fldiv,efgtoa@u
  4423  001246  C002  F08F         	movff	?___fldiv+1,efgtoa@u+1
  4424  00124A  C003  F090         	movff	?___fldiv+2,efgtoa@u+2
  4425  00124E  C004  F091         	movff	?___fldiv+3,efgtoa@u+3
  4426  001252                     
  4427                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  4428  001252  0100               	movlb	0	; () banked
  4429  001254  076A               	decf	efgtoa@ne& (0+255),f,b
  4430  001256  A0D8               	btfss	status,0,c
  4431  001258  076B               	decf	(efgtoa@ne+1)& (0+255),f,b
  4432  00125A                     
  4433                           ; BSR set to: 0
  4434                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 490:         ++i;
  4435  00125A  4B84               	infsnz	efgtoa@i& (0+255),f,b
  4436  00125C  2B85               	incf	(efgtoa@i+1)& (0+255),f,b
  4437  00125E                     l4258:
  4438                           
  4439                           ; BSR set to: 0
  4440                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4441  00125E  516C               	movf	efgtoa@m& (0+255),w,b
  4442  001260  5D84               	subwf	efgtoa@i& (0+255),w,b
  4443  001262  5185               	movf	(efgtoa@i+1)& (0+255),w,b
  4444  001264  0A80               	xorlw	128
  4445  001266  6E35               	movwf	??_efgtoa^0,c
  4446  001268  516D               	movf	(efgtoa@m+1)& (0+255),w,b
  4447  00126A  0A80               	xorlw	128
  4448  00126C  5835               	subwfb	??_efgtoa^0,w,c
  4449  00126E  B0D8               	btfsc	status,0,c
  4450  001270  EF3C  F009         	goto	u5031
  4451  001274  EF3E  F009         	goto	u5030
  4452  001278                     u5031:
  4453  001278  EF4C  F009         	goto	l4262
  4454  00127C                     u5030:
  4455  00127C                     
  4456                           ; BSR set to: 0
  4457  00127C  BF8D               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4458  00127E  EF4A  F009         	goto	u5041
  4459  001282  518D               	movf	(efgtoa@n+1)& (0+255),w,b
  4460  001284  E109               	bnz	u5040
  4461  001286  0E4B               	movlw	75
  4462  001288  5D8C               	subwf	efgtoa@n& (0+255),w,b
  4463  00128A  A0D8               	btfss	status,0,c
  4464  00128C  EF4A  F009         	goto	u5041
  4465  001290  EF4C  F009         	goto	u5040
  4466  001294                     u5041:
  4467  001294  EF42  F008         	goto	l4210
  4468  001298                     u5040:
  4469  001298                     l4262:
  4470                           
  4471                           ; BSR set to: 0
  4472                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  4473  001298  5168               	movf	efgtoa@pp& (0+255),w,b
  4474  00129A  1169               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4475  00129C  A4D8               	btfss	status,2,c
  4476  00129E  EF53  F009         	goto	u5051
  4477  0012A2  EF55  F009         	goto	u5050
  4478  0012A6                     u5051:
  4479  0012A6  EF66  F009         	goto	l4270
  4480  0012AA                     u5050:
  4481  0012AA                     
  4482                           ; BSR set to: 0
  4483  0012AA  A9D5               	btfss	_flags& (0+255),4,b
  4484  0012AC  EF5A  F009         	goto	u5061
  4485  0012B0  EF5C  F009         	goto	u5060
  4486  0012B4                     u5061:
  4487  0012B4  EF66  F009         	goto	l4270
  4488  0012B8                     u5060:
  4489  0012B8                     
  4490                           ; BSR set to: 0
  4491                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  4492  0012B8  0E00               	movlw	low _dbuf
  4493  0012BA  258C               	addwf	efgtoa@n& (0+255),w,b
  4494  0012BC  6ED9               	movwf	fsr2l,c
  4495  0012BE  0E01               	movlw	high _dbuf
  4496  0012C0  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4497  0012C2  6EDA               	movwf	fsr2h,c
  4498  0012C4  0E2E               	movlw	46
  4499  0012C6  6EDF               	movwf	indf2,c
  4500  0012C8                     
  4501                           ; BSR set to: 0
  4502  0012C8  4B8C               	infsnz	efgtoa@n& (0+255),f,b
  4503  0012CA  2B8D               	incf	(efgtoa@n+1)& (0+255),f,b
  4504  0012CC                     l4270:
  4505                           
  4506                           ; BSR set to: 0
  4507                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  4508  0012CC  0E00               	movlw	low _dbuf
  4509  0012CE  258C               	addwf	efgtoa@n& (0+255),w,b
  4510  0012D0  6ED9               	movwf	fsr2l,c
  4511  0012D2  0E01               	movlw	high _dbuf
  4512  0012D4  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4513  0012D6  6EDA               	movwf	fsr2h,c
  4514  0012D8  0E00               	movlw	0
  4515  0012DA  6EDF               	movwf	indf2,c
  4516  0012DC                     
  4517                           ; BSR set to: 0
  4518                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  4519  0012DC  0E65               	movlw	101
  4520  0012DE  197A               	xorwf	efgtoa@nmode& (0+255),w,b
  4521  0012E0  A4D8               	btfss	status,2,c
  4522  0012E2  EF75  F009         	goto	u5071
  4523  0012E6  EF77  F009         	goto	u5070
  4524  0012EA                     u5071:
  4525  0012EA  EFDD  F004         	goto	l4072
  4526  0012EE                     u5070:
  4527  0012EE                     
  4528                           ; BSR set to: 0
  4529                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  4530  0012EE  0E00               	movlw	0
  4531  0012F0  6F85               	movwf	(efgtoa@i+1)& (0+255),b
  4532  0012F2  0E4F               	movlw	79
  4533  0012F4  6F84               	movwf	efgtoa@i& (0+255),b
  4534  0012F6                     
  4535                           ; BSR set to: 0
  4536                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  4537  0012F6  0E00               	movlw	low _dbuf
  4538  0012F8  2584               	addwf	efgtoa@i& (0+255),w,b
  4539  0012FA  6ED9               	movwf	fsr2l,c
  4540  0012FC  0E01               	movlw	high _dbuf
  4541  0012FE  2185               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4542  001300  6EDA               	movwf	fsr2h,c
  4543  001302  0E00               	movlw	0
  4544  001304  6EDF               	movwf	indf2,c
  4545  001306                     
  4546                           ; BSR set to: 0
  4547                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  4548  001306  0E00               	movlw	0
  4549  001308  6F75               	movwf	(efgtoa@sign+1)& (0+255),b
  4550  00130A  0E00               	movlw	0
  4551  00130C  6F74               	movwf	efgtoa@sign& (0+255),b
  4552  00130E                     
  4553                           ; BSR set to: 0
  4554                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  4555  00130E  BF8B               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4556  001310  EF8E  F009         	goto	u5080
  4557  001314  EF8C  F009         	goto	u5081
  4558  001318                     u5081:
  4559  001318  EF96  F009         	goto	l4286
  4560  00131C                     u5080:
  4561  00131C                     
  4562                           ; BSR set to: 0
  4563                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  4564  00131C  0E00               	movlw	0
  4565  00131E  6F75               	movwf	(efgtoa@sign+1)& (0+255),b
  4566  001320  0E01               	movlw	1
  4567  001322  6F74               	movwf	efgtoa@sign& (0+255),b
  4568  001324                     
  4569                           ; BSR set to: 0
  4570                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  4571  001324  6D8A               	negf	efgtoa@e& (0+255),b
  4572  001326  1F8B               	comf	(efgtoa@e+1)& (0+255),f,b
  4573  001328  B0D8               	btfsc	status,0,c
  4574  00132A  2B8B               	incf	(efgtoa@e+1)& (0+255),f,b
  4575  00132C                     l4286:
  4576                           
  4577                           ; BSR set to: 0
  4578                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  4579  00132C  0E00               	movlw	0
  4580  00132E  6F77               	movwf	(efgtoa@p+1)& (0+255),b
  4581  001330  0E02               	movlw	2
  4582  001332  6F76               	movwf	efgtoa@p& (0+255),b
  4583                           
  4584                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  4585  001334  EFC7  F009         	goto	l4298
  4586  001338                     l4288:
  4587                           
  4588                           ; BSR set to: 0
  4589                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  4590  001338  0784               	decf	efgtoa@i& (0+255),f,b
  4591  00133A  A0D8               	btfss	status,0,c
  4592  00133C  0785               	decf	(efgtoa@i+1)& (0+255),f,b
  4593  00133E                     
  4594                           ; BSR set to: 0
  4595                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  4596  00133E  0E00               	movlw	low _dbuf
  4597  001340  2584               	addwf	efgtoa@i& (0+255),w,b
  4598  001342  6ED9               	movwf	fsr2l,c
  4599  001344  0E01               	movlw	high _dbuf
  4600  001346  2185               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4601  001348  6EDA               	movwf	fsr2h,c
  4602  00134A  C08A  F001         	movff	efgtoa@e,___awmod@dividend
  4603  00134E  C08B  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  4604  001352  0E00               	movlw	0
  4605  001354  6E04               	movwf	(___awmod@divisor+1)^0,c
  4606  001356  0E0A               	movlw	10
  4607  001358  6E03               	movwf	___awmod@divisor^0,c
  4608  00135A  ECBA  F01D         	call	___awmod	;wreg free
  4609  00135E  5001               	movf	?___awmod^0,w,c
  4610  001360  0F30               	addlw	48
  4611  001362  6EDF               	movwf	indf2,c
  4612  001364                     
  4613                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  4614  001364  C08A  F001         	movff	efgtoa@e,___awdiv@dividend
  4615  001368  C08B  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  4616  00136C  0E00               	movlw	0
  4617  00136E  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4618  001370  0E0A               	movlw	10
  4619  001372  6E03               	movwf	___awdiv@divisor^0,c
  4620  001374  EC58  F01D         	call	___awdiv	;wreg free
  4621  001378  C001  F08A         	movff	?___awdiv,efgtoa@e
  4622  00137C  C002  F08B         	movff	?___awdiv+1,efgtoa@e+1
  4623  001380                     
  4624                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  4625  001380  0100               	movlb	0	; () banked
  4626  001382  0776               	decf	efgtoa@p& (0+255),f,b
  4627  001384  A0D8               	btfss	status,0,c
  4628  001386  0777               	decf	(efgtoa@p+1)& (0+255),f,b
  4629  001388                     
  4630                           ; BSR set to: 0
  4631                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  4632  001388  0778               	decf	efgtoa@w& (0+255),f,b
  4633  00138A  A0D8               	btfss	status,0,c
  4634  00138C  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  4635  00138E                     l4298:
  4636                           
  4637                           ; BSR set to: 0
  4638                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  4639  00138E  518A               	movf	efgtoa@e& (0+255),w,b
  4640  001390  118B               	iorwf	(efgtoa@e+1)& (0+255),w,b
  4641  001392  A4D8               	btfss	status,2,c
  4642  001394  EFCE  F009         	goto	u5091
  4643  001398  EFD0  F009         	goto	u5090
  4644  00139C                     u5091:
  4645  00139C  EF9C  F009         	goto	l4288
  4646  0013A0                     u5090:
  4647  0013A0                     
  4648                           ; BSR set to: 0
  4649  0013A0  BF77               	btfsc	(efgtoa@p+1)& (0+255),7,b
  4650  0013A2  EFDD  F009         	goto	u5100
  4651  0013A6  5177               	movf	(efgtoa@p+1)& (0+255),w,b
  4652  0013A8  E106               	bnz	u5101
  4653  0013AA  0576               	decf	efgtoa@p& (0+255),w,b
  4654  0013AC  B0D8               	btfsc	status,0,c
  4655  0013AE  EFDB  F009         	goto	u5101
  4656  0013B2  EFDD  F009         	goto	u5100
  4657  0013B6                     u5101:
  4658  0013B6  EF9C  F009         	goto	l4288
  4659  0013BA                     u5100:
  4660  0013BA                     
  4661                           ; BSR set to: 0
  4662                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 514:         --i;
  4663  0013BA  0784               	decf	efgtoa@i& (0+255),f,b
  4664  0013BC  A0D8               	btfss	status,0,c
  4665  0013BE  0785               	decf	(efgtoa@i+1)& (0+255),f,b
  4666  0013C0                     
  4667                           ; BSR set to: 0
  4668                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  4669  0013C0  5174               	movf	efgtoa@sign& (0+255),w,b
  4670  0013C2  1175               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4671  0013C4  A4D8               	btfss	status,2,c
  4672  0013C6  EFE7  F009         	goto	u5111
  4673  0013CA  EFE9  F009         	goto	u5110
  4674  0013CE                     u5111:
  4675  0013CE  EFEF  F009         	goto	l4308
  4676  0013D2                     u5110:
  4677  0013D2                     
  4678                           ; BSR set to: 0
  4679  0013D2  0E00               	movlw	0
  4680  0013D4  6F63               	movwf	(_efgtoa$1150+1)& (0+255),b
  4681  0013D6  0E2B               	movlw	43
  4682  0013D8  6F62               	movwf	_efgtoa$1150& (0+255),b
  4683  0013DA  EFF3  F009         	goto	l4310
  4684  0013DE                     l4308:
  4685                           
  4686                           ; BSR set to: 0
  4687  0013DE  0E00               	movlw	0
  4688  0013E0  6F63               	movwf	(_efgtoa$1150+1)& (0+255),b
  4689  0013E2  0E2D               	movlw	45
  4690  0013E4  6F62               	movwf	_efgtoa$1150& (0+255),b
  4691  0013E6                     l4310:
  4692                           
  4693                           ; BSR set to: 0
  4694  0013E6  0E00               	movlw	low _dbuf
  4695  0013E8  2584               	addwf	efgtoa@i& (0+255),w,b
  4696  0013EA  6ED9               	movwf	fsr2l,c
  4697  0013EC  0E01               	movlw	high _dbuf
  4698  0013EE  2185               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4699  0013F0  6EDA               	movwf	fsr2h,c
  4700  0013F2  C062  FFDF         	movff	_efgtoa$1150,indf2
  4701  0013F6                     
  4702                           ; BSR set to: 0
  4703                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 516:         --w;
  4704  0013F6  0778               	decf	efgtoa@w& (0+255),f,b
  4705  0013F8  A0D8               	btfss	status,0,c
  4706  0013FA  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  4707  0013FC                     
  4708                           ; BSR set to: 0
  4709                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 517:         --i;
  4710  0013FC  0784               	decf	efgtoa@i& (0+255),f,b
  4711  0013FE  A0D8               	btfss	status,0,c
  4712  001400  0785               	decf	(efgtoa@i+1)& (0+255),f,b
  4713  001402                     
  4714                           ; BSR set to: 0
  4715  001402  0EBF               	movlw	191
  4716  001404  6E35               	movwf	??_efgtoa^0,c
  4717  001406  0EFF               	movlw	255
  4718  001408  6E36               	movwf	(??_efgtoa+1)^0,c
  4719  00140A  5034               	movf	efgtoa@c^0,w,c
  4720  00140C  6E37               	movwf	(??_efgtoa+2)^0,c
  4721  00140E  6A38               	clrf	(??_efgtoa+3)^0,c
  4722  001410  5035               	movf	??_efgtoa^0,w,c
  4723  001412  2637               	addwf	(??_efgtoa+2)^0,f,c
  4724  001414  5036               	movf	(??_efgtoa+1)^0,w,c
  4725  001416  2238               	addwfc	(??_efgtoa+3)^0,f,c
  4726  001418  5038               	movf	(??_efgtoa+3)^0,w,c
  4727  00141A  E109               	bnz	u5120
  4728  00141C  0E1A               	movlw	26
  4729  00141E  5C37               	subwf	(??_efgtoa+2)^0,w,c
  4730  001420  A0D8               	btfss	status,0,c
  4731  001422  EF15  F00A         	goto	u5121
  4732  001426  EF17  F00A         	goto	u5120
  4733  00142A                     u5121:
  4734  00142A  EF1D  F00A         	goto	l4322
  4735  00142E                     u5120:
  4736  00142E                     
  4737                           ; BSR set to: 0
  4738  00142E  0E00               	movlw	0
  4739  001430  6F65               	movwf	(_efgtoa$1151+1)& (0+255),b
  4740  001432  0E65               	movlw	101
  4741  001434  6F64               	movwf	_efgtoa$1151& (0+255),b
  4742  001436  EF21  F00A         	goto	l4324
  4743  00143A                     l4322:
  4744                           
  4745                           ; BSR set to: 0
  4746  00143A  0E00               	movlw	0
  4747  00143C  6F65               	movwf	(_efgtoa$1151+1)& (0+255),b
  4748  00143E  0E45               	movlw	69
  4749  001440  6F64               	movwf	_efgtoa$1151& (0+255),b
  4750  001442                     l4324:
  4751                           
  4752                           ; BSR set to: 0
  4753  001442  0E00               	movlw	low _dbuf
  4754  001444  2584               	addwf	efgtoa@i& (0+255),w,b
  4755  001446  6ED9               	movwf	fsr2l,c
  4756  001448  0E01               	movlw	high _dbuf
  4757  00144A  2185               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4758  00144C  6EDA               	movwf	fsr2h,c
  4759  00144E  C064  FFDF         	movff	_efgtoa$1151,indf2
  4760  001452                     
  4761                           ; BSR set to: 0
  4762                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 519:         --w;
  4763  001452  0778               	decf	efgtoa@w& (0+255),f,b
  4764  001454  A0D8               	btfss	status,0,c
  4765  001456  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  4766  001458                     
  4767                           ; BSR set to: 0
  4768                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  4769  001458  0E00               	movlw	low _dbuf
  4770  00145A  258C               	addwf	efgtoa@n& (0+255),w,b
  4771  00145C  6E01               	movwf	strcpy@dest^0,c
  4772  00145E  0E01               	movlw	high _dbuf
  4773  001460  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4774  001462  6E02               	movwf	(strcpy@dest+1)^0,c
  4775  001464  0E00               	movlw	low _dbuf
  4776  001466  2584               	addwf	efgtoa@i& (0+255),w,b
  4777  001468  6E03               	movwf	strcpy@src^0,c
  4778  00146A  0E01               	movlw	high _dbuf
  4779  00146C  2185               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4780  00146E  6E04               	movwf	(strcpy@src+1)^0,c
  4781  001470  EC98  F01F         	call	_strcpy	;wreg free
  4782  001474  EFDD  F004         	goto	l4072
  4783  001478                     l910:
  4784  001478  0012               	return		;funcret
  4785  00147A                     __end_of_efgtoa:
  4786                           	callstack 0
  4787                           
  4788 ;; *************** function _tolower *****************
  4789 ;; Defined at:
  4790 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\tolower.c"
  4791 ;; Parameters:    Size  Location     Type
  4792 ;;  c               2    6[COMRAM] int 
  4793 ;; Auto vars:     Size  Location     Type
  4794 ;;		None
  4795 ;; Return value:  Size  Location     Type
  4796 ;;                  2    6[COMRAM] int 
  4797 ;; Registers used:
  4798 ;;		wreg, status,2, status,0
  4799 ;; Tracked objects:
  4800 ;;		On entry : 0/0
  4801 ;;		On exit  : 0/0
  4802 ;;		Unchanged: 0/0
  4803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4804 ;;      Params:         2       0       0       0       0       0       0       0       0
  4805 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4806 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4807 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4808 ;;Total ram usage:        6 bytes
  4809 ;; Hardware stack levels used: 1
  4810 ;; Hardware stack levels required when called: 1
  4811 ;; This function calls:
  4812 ;;		_isupper
  4813 ;; This function is called by:
  4814 ;;		_efgtoa
  4815 ;;		_vfpfcnvrt
  4816 ;; This function uses a non-reentrant model
  4817 ;;
  4818                           
  4819                           	psect	text10
  4820  00408C                     __ptext10:
  4821                           	callstack 0
  4822  00408C                     _tolower:
  4823                           	callstack 25
  4824  00408C  0EBF               	movlw	191
  4825  00408E  6E09               	movwf	??_tolower^0,c
  4826  004090  0EFF               	movlw	255
  4827  004092  6E0A               	movwf	(??_tolower+1)^0,c
  4828  004094  C007  F00B         	movff	tolower@c,??_tolower+2
  4829  004098  C008  F00C         	movff	tolower@c+1,??_tolower+3
  4830  00409C  5009               	movf	??_tolower^0,w,c
  4831  00409E  260B               	addwf	(??_tolower+2)^0,f,c
  4832  0040A0  500A               	movf	(??_tolower+1)^0,w,c
  4833  0040A2  220C               	addwfc	(??_tolower+3)^0,f,c
  4834  0040A4  500C               	movf	(??_tolower+3)^0,w,c
  4835  0040A6  E107               	bnz	u4351
  4836  0040A8  0E1A               	movlw	26
  4837  0040AA  5C0B               	subwf	(??_tolower+2)^0,w,c
  4838  0040AC  B0D8               	btfsc	status,0,c
  4839  0040AE  EF5B  F020         	goto	u4351
  4840  0040B2  EF5D  F020         	goto	u4350
  4841  0040B6                     u4351:
  4842  0040B6  EF64  F020         	goto	l1172
  4843  0040BA                     u4350:
  4844  0040BA  0E20               	movlw	32
  4845  0040BC  1007               	iorwf	tolower@c^0,w,c
  4846  0040BE  6E07               	movwf	?_tolower^0,c
  4847  0040C0  5008               	movf	(tolower@c+1)^0,w,c
  4848  0040C2  6E08               	movwf	(?_tolower+1)^0,c
  4849  0040C4  EF68  F020         	goto	l1175
  4850  0040C8                     l1172:
  4851  0040C8  C007  F007         	movff	tolower@c,?_tolower
  4852  0040CC  C008  F008         	movff	tolower@c+1,?_tolower+1
  4853  0040D0                     l1175:
  4854  0040D0  0012               	return		;funcret
  4855  0040D2                     __end_of_tolower:
  4856                           	callstack 0
  4857                           
  4858 ;; *************** function _isupper *****************
  4859 ;; Defined at:
  4860 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isupper.c"
  4861 ;; Parameters:    Size  Location     Type
  4862 ;;  c               2    0[COMRAM] int 
  4863 ;; Auto vars:     Size  Location     Type
  4864 ;;		None
  4865 ;; Return value:  Size  Location     Type
  4866 ;;                  2    0[COMRAM] int 
  4867 ;; Registers used:
  4868 ;;		wreg, status,2, status,0
  4869 ;; Tracked objects:
  4870 ;;		On entry : 0/0
  4871 ;;		On exit  : 0/0
  4872 ;;		Unchanged: 0/0
  4873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4874 ;;      Params:         2       0       0       0       0       0       0       0       0
  4875 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4876 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4877 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4878 ;;Total ram usage:        6 bytes
  4879 ;; Hardware stack levels used: 1
  4880 ;; This function calls:
  4881 ;;		Nothing
  4882 ;; This function is called by:
  4883 ;;		_efgtoa
  4884 ;;		_vfpfcnvrt
  4885 ;;		_tolower
  4886 ;; This function uses a non-reentrant model
  4887 ;;
  4888                           
  4889                           	psect	text11
  4890  0041DE                     __ptext11:
  4891                           	callstack 0
  4892  0041DE                     _isupper:
  4893                           	callstack 25
  4894  0041DE  0EBF               	movlw	191
  4895  0041E0  6E03               	movwf	??_isupper^0,c
  4896  0041E2  0EFF               	movlw	255
  4897  0041E4  6E04               	movwf	(??_isupper+1)^0,c
  4898  0041E6  C001  F005         	movff	isupper@c,??_isupper+2
  4899  0041EA  C002  F006         	movff	isupper@c+1,??_isupper+3
  4900  0041EE  5003               	movf	??_isupper^0,w,c
  4901  0041F0  2605               	addwf	(??_isupper+2)^0,f,c
  4902  0041F2  5004               	movf	(??_isupper+1)^0,w,c
  4903  0041F4  2206               	addwfc	(??_isupper+3)^0,f,c
  4904  0041F6  5006               	movf	(??_isupper+3)^0,w,c
  4905  0041F8  E10A               	bnz	u3290
  4906  0041FA  0E1A               	movlw	26
  4907  0041FC  5C05               	subwf	(??_isupper+2)^0,w,c
  4908  0041FE  A0D8               	btfss	status,0,c
  4909  004200  EF04  F021         	goto	u3291
  4910  004204  EF07  F021         	goto	u3290
  4911  004208                     u3291:
  4912  004208  0E01               	movlw	1
  4913  00420A  EF08  F021         	goto	u3300
  4914  00420E                     u3290:
  4915  00420E  0E00               	movlw	0
  4916  004210                     u3300:
  4917  004210  6E01               	movwf	?_isupper^0,c
  4918  004212  6A02               	clrf	(?_isupper+1)^0,c
  4919  004214  0012               	return		;funcret
  4920  004216                     __end_of_isupper:
  4921                           	callstack 0
  4922                           
  4923 ;; *************** function _strcpy *****************
  4924 ;; Defined at:
  4925 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strcpy.c"
  4926 ;; Parameters:    Size  Location     Type
  4927 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4928 ;;		 -> dbuf(80), 
  4929 ;;  src             2    2[COMRAM] PTR const unsigned char 
  4930 ;;		 -> STR_17(4), STR_16(4), STR_13(4), STR_12(4), 
  4931 ;;		 -> dbuf(80), 
  4932 ;; Auto vars:     Size  Location     Type
  4933 ;;  d               2    8[COMRAM] PTR unsigned char 
  4934 ;;		 -> dbuf(80), 
  4935 ;;  s               2    6[COMRAM] PTR const unsigned char 
  4936 ;;		 -> STR_17(4), STR_16(4), STR_13(4), STR_12(4), 
  4937 ;;		 -> dbuf(80), 
  4938 ;; Return value:  Size  Location     Type
  4939 ;;                  2    0[COMRAM] PTR unsigned char 
  4940 ;; Registers used:
  4941 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4942 ;; Tracked objects:
  4943 ;;		On entry : 0/0
  4944 ;;		On exit  : 0/0
  4945 ;;		Unchanged: 0/0
  4946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4947 ;;      Params:         4       0       0       0       0       0       0       0       0
  4948 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4949 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4950 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4951 ;;Total ram usage:       10 bytes
  4952 ;; Hardware stack levels used: 1
  4953 ;; This function calls:
  4954 ;;		Nothing
  4955 ;; This function is called by:
  4956 ;;		_efgtoa
  4957 ;; This function uses a non-reentrant model
  4958 ;;
  4959                           
  4960                           	psect	text12
  4961  003F30                     __ptext12:
  4962                           	callstack 0
  4963  003F30                     _strcpy:
  4964                           	callstack 25
  4965  003F30  C003  F007         	movff	strcpy@src,strcpy@s
  4966  003F34  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  4967  003F38  C001  F009         	movff	strcpy@dest,strcpy@d
  4968  003F3C  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  4969  003F40                     l3910:
  4970  003F40  5007               	movf	strcpy@s^0,w,c
  4971  003F42  6E05               	movwf	??_strcpy^0,c
  4972  003F44  5008               	movf	(strcpy@s+1)^0,w,c
  4973  003F46  6E06               	movwf	(??_strcpy+1)^0,c
  4974  003F48  4A07               	infsnz	strcpy@s^0,f,c
  4975  003F4A  2A08               	incf	(strcpy@s+1)^0,f,c
  4976  003F4C  C005  FFF6         	movff	??_strcpy,tblptrl
  4977  003F50  C006  FFF7         	movff	??_strcpy+1,tblptrh
  4978  003F54  6AF8               	clrf	tblptru,c
  4979  003F56  C009  FFD9         	movff	strcpy@d,fsr2l
  4980  003F5A  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  4981  003F5E  4A09               	infsnz	strcpy@d^0,f,c
  4982  003F60  2A0A               	incf	(strcpy@d+1)^0,f,c
  4983  003F62  0E07               	movlw	(high __ramtop+-1)
  4984  003F64  64F7               	cpfsgt	tblptrh,c
  4985  003F66  D003               	bra	u4337
  4986  003F68  0008               	tblrd		*
  4987  003F6A  50F5               	movf	tablat,w,c
  4988  003F6C  D005               	bra	u4330
  4989  003F6E                     u4337:
  4990  003F6E  CFF6 FFE1          	movff	tblptrl,fsr1l
  4991  003F72  CFF7 FFE2          	movff	tblptrh,fsr1h
  4992  003F76  50E7               	movf	indf1,w,c
  4993  003F78                     u4330:
  4994  003F78  6EDF               	movwf	indf2,c
  4995  003F7A  50DF               	movf	indf2,w,c
  4996  003F7C  A4D8               	btfss	status,2,c
  4997  003F7E  EFC3  F01F         	goto	u4341
  4998  003F82  EFC5  F01F         	goto	u4340
  4999  003F86                     u4341:
  5000  003F86  EFA0  F01F         	goto	l3910
  5001  003F8A                     u4340:
  5002  003F8A  0012               	return		;funcret
  5003  003F8C                     __end_of_strcpy:
  5004                           	callstack 0
  5005                           
  5006 ;; *************** function _floorf *****************
  5007 ;; Defined at:
  5008 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\floorf.c"
  5009 ;; Parameters:    Size  Location     Type
  5010 ;;  x               4   25[COMRAM] float 
  5011 ;; Auto vars:     Size  Location     Type
  5012 ;;  u               4   41[COMRAM] struct .
  5013 ;;  m               4   35[COMRAM] unsigned long 
  5014 ;;  e               2   39[COMRAM] int 
  5015 ;; Return value:  Size  Location     Type
  5016 ;;                  4   25[COMRAM] float 
  5017 ;; Registers used:
  5018 ;;		wreg, status,2, status,0
  5019 ;; Tracked objects:
  5020 ;;		On entry : 0/0
  5021 ;;		On exit  : 0/0
  5022 ;;		Unchanged: 0/0
  5023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5024 ;;      Params:         4       0       0       0       0       0       0       0       0
  5025 ;;      Locals:        10       0       0       0       0       0       0       0       0
  5026 ;;      Temps:          6       0       0       0       0       0       0       0       0
  5027 ;;      Totals:        20       0       0       0       0       0       0       0       0
  5028 ;;Total ram usage:       20 bytes
  5029 ;; Hardware stack levels used: 1
  5030 ;; This function calls:
  5031 ;;		Nothing
  5032 ;; This function is called by:
  5033 ;;		_efgtoa
  5034 ;; This function uses a non-reentrant model
  5035 ;;
  5036                           
  5037                           	psect	text13
  5038  002B2A                     __ptext13:
  5039                           	callstack 0
  5040  002B2A                     _floorf:
  5041                           	callstack 25
  5042  002B2A  C0C7  F02A         	movff	floorf@F526,floorf@u
  5043  002B2E  C0C8  F02B         	movff	floorf@F526+1,floorf@u+1
  5044  002B32  C0C9  F02C         	movff	floorf@F526+2,floorf@u+2
  5045  002B36  C0CA  F02D         	movff	floorf@F526+3,floorf@u+3
  5046  002B3A  C01A  F02A         	movff	floorf@x,floorf@u
  5047  002B3E  C01B  F02B         	movff	floorf@x+1,floorf@u+1
  5048  002B42  C01C  F02C         	movff	floorf@x+2,floorf@u+2
  5049  002B46  C01D  F02D         	movff	floorf@x+3,floorf@u+3
  5050  002B4A  0E81               	movlw	129
  5051  002B4C  6E1E               	movwf	??_floorf^0,c
  5052  002B4E  0EFF               	movlw	255
  5053  002B50  6E1F               	movwf	(??_floorf+1)^0,c
  5054  002B52  C02A  F020         	movff	floorf@u,??_floorf+2
  5055  002B56  C02B  F021         	movff	floorf@u+1,??_floorf+3
  5056  002B5A  C02C  F022         	movff	floorf@u+2,??_floorf+4
  5057  002B5E  C02D  F023         	movff	floorf@u+3,??_floorf+5
  5058  002B62  0E18               	movlw	24
  5059  002B64  EFB9  F015         	goto	u4360
  5060  002B68                     u4365:
  5061  002B68  90D8               	bcf	status,0,c
  5062  002B6A  3223               	rrcf	(??_floorf+5)^0,f,c
  5063  002B6C  3222               	rrcf	(??_floorf+4)^0,f,c
  5064  002B6E  3221               	rrcf	(??_floorf+3)^0,f,c
  5065  002B70  3220               	rrcf	(??_floorf+2)^0,f,c
  5066  002B72                     u4360:
  5067  002B72  2EE8               	decfsz	wreg,f,c
  5068  002B74  EFB4  F015         	goto	u4365
  5069  002B78  5020               	movf	(??_floorf+2)^0,w,c
  5070  002B7A  241E               	addwf	??_floorf^0,w,c
  5071  002B7C  6E28               	movwf	floorf@e^0,c
  5072  002B7E  0E00               	movlw	0
  5073  002B80  201F               	addwfc	(??_floorf+1)^0,w,c
  5074  002B82  6E29               	movwf	(floorf@e+1)^0,c
  5075  002B84  BE29               	btfsc	(floorf@e+1)^0,7,c
  5076  002B86  EFCE  F015         	goto	u4371
  5077  002B8A  5029               	movf	(floorf@e+1)^0,w,c
  5078  002B8C  E109               	bnz	u4370
  5079  002B8E  0E17               	movlw	23
  5080  002B90  5C28               	subwf	floorf@e^0,w,c
  5081  002B92  A0D8               	btfss	status,0,c
  5082  002B94  EFCE  F015         	goto	u4371
  5083  002B98  EFD0  F015         	goto	u4370
  5084  002B9C                     u4371:
  5085  002B9C  EFDA  F015         	goto	l3928
  5086  002BA0                     u4370:
  5087  002BA0                     l3926:
  5088  002BA0  C01A  F01A         	movff	floorf@x,?_floorf
  5089  002BA4  C01B  F01B         	movff	floorf@x+1,?_floorf+1
  5090  002BA8  C01C  F01C         	movff	floorf@x+2,?_floorf+2
  5091  002BAC  C01D  F01D         	movff	floorf@x+3,?_floorf+3
  5092  002BB0  EF9D  F016         	goto	l1096
  5093  002BB4                     l3928:
  5094  002BB4  BE29               	btfsc	(floorf@e+1)^0,7,c
  5095  002BB6  EFDF  F015         	goto	u4381
  5096  002BBA  EFE1  F015         	goto	u4380
  5097  002BBE                     u4381:
  5098  002BBE  EF51  F016         	goto	l3938
  5099  002BC2                     u4380:
  5100  002BC2  C028  F01E         	movff	floorf@e,??_floorf
  5101  002BC6  0EFF               	movlw	255
  5102  002BC8  6E1F               	movwf	(??_floorf+1)^0,c
  5103  002BCA  0EFF               	movlw	255
  5104  002BCC  6E20               	movwf	(??_floorf+2)^0,c
  5105  002BCE  0E7F               	movlw	127
  5106  002BD0  6E21               	movwf	(??_floorf+3)^0,c
  5107  002BD2  0E00               	movlw	0
  5108  002BD4  6E22               	movwf	(??_floorf+4)^0,c
  5109  002BD6                     u4395:
  5110  002BD6  661E               	tstfsz	??_floorf^0,c
  5111  002BD8  EFF0  F015         	goto	u4396
  5112  002BDC  EFF8  F015         	goto	u4397
  5113  002BE0                     u4396:
  5114  002BE0  3422               	rlcf	(??_floorf+4)^0,w,c
  5115  002BE2  3222               	rrcf	(??_floorf+4)^0,f,c
  5116  002BE4  3221               	rrcf	(??_floorf+3)^0,f,c
  5117  002BE6  3220               	rrcf	(??_floorf+2)^0,f,c
  5118  002BE8  321F               	rrcf	(??_floorf+1)^0,f,c
  5119  002BEA  2E1E               	decfsz	??_floorf^0,f,c
  5120  002BEC  EFEB  F015         	goto	u4395
  5121  002BF0                     u4397:
  5122  002BF0  C01F  F024         	movff	??_floorf+1,floorf@m
  5123  002BF4  C020  F025         	movff	??_floorf+2,floorf@m+1
  5124  002BF8  C021  F026         	movff	??_floorf+3,floorf@m+2
  5125  002BFC  C022  F027         	movff	??_floorf+4,floorf@m+3
  5126  002C00  5024               	movf	floorf@m^0,w,c
  5127  002C02  142A               	andwf	floorf@u^0,w,c
  5128  002C04  6E1E               	movwf	??_floorf^0,c
  5129  002C06  5025               	movf	(floorf@m+1)^0,w,c
  5130  002C08  142B               	andwf	(floorf@u+1)^0,w,c
  5131  002C0A  6E1F               	movwf	(??_floorf+1)^0,c
  5132  002C0C  5026               	movf	(floorf@m+2)^0,w,c
  5133  002C0E  142C               	andwf	(floorf@u+2)^0,w,c
  5134  002C10  6E20               	movwf	(??_floorf+2)^0,c
  5135  002C12  5027               	movf	(floorf@m+3)^0,w,c
  5136  002C14  142D               	andwf	(floorf@u+3)^0,w,c
  5137  002C16  6E21               	movwf	(??_floorf+3)^0,c
  5138  002C18  501E               	movf	??_floorf^0,w,c
  5139  002C1A  101F               	iorwf	(??_floorf+1)^0,w,c
  5140  002C1C  1020               	iorwf	(??_floorf+2)^0,w,c
  5141  002C1E  1021               	iorwf	(??_floorf+3)^0,w,c
  5142  002C20  A4D8               	btfss	status,2,c
  5143  002C22  EF15  F016         	goto	u4401
  5144  002C26  EF17  F016         	goto	u4400
  5145  002C2A                     u4401:
  5146  002C2A  EF19  F016         	goto	l3934
  5147  002C2E                     u4400:
  5148  002C2E  EFD0  F015         	goto	l3926
  5149  002C32                     l3934:
  5150  002C32  C02A  F01E         	movff	floorf@u,??_floorf
  5151  002C36  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  5152  002C3A  C02C  F020         	movff	floorf@u+2,??_floorf+2
  5153  002C3E  C02D  F021         	movff	floorf@u+3,??_floorf+3
  5154  002C42  0E20               	movlw	32
  5155  002C44  EF29  F016         	goto	u4410
  5156  002C48                     u4415:
  5157  002C48  90D8               	bcf	status,0,c
  5158  002C4A  3221               	rrcf	(??_floorf+3)^0,f,c
  5159  002C4C  3220               	rrcf	(??_floorf+2)^0,f,c
  5160  002C4E  321F               	rrcf	(??_floorf+1)^0,f,c
  5161  002C50  321E               	rrcf	??_floorf^0,f,c
  5162  002C52                     u4410:
  5163  002C52  2EE8               	decfsz	wreg,f,c
  5164  002C54  EF24  F016         	goto	u4415
  5165  002C58  501E               	movf	??_floorf^0,w,c
  5166  002C5A  101F               	iorwf	(??_floorf+1)^0,w,c
  5167  002C5C  1020               	iorwf	(??_floorf+2)^0,w,c
  5168  002C5E  1021               	iorwf	(??_floorf+3)^0,w,c
  5169  002C60  B4D8               	btfsc	status,2,c
  5170  002C62  EF35  F016         	goto	u4421
  5171  002C66  EF37  F016         	goto	u4420
  5172  002C6A                     u4421:
  5173  002C6A  EF3F  F016         	goto	l1099
  5174  002C6E                     u4420:
  5175  002C6E  5024               	movf	floorf@m^0,w,c
  5176  002C70  262A               	addwf	floorf@u^0,f,c
  5177  002C72  5025               	movf	(floorf@m+1)^0,w,c
  5178  002C74  222B               	addwfc	(floorf@u+1)^0,f,c
  5179  002C76  5026               	movf	(floorf@m+2)^0,w,c
  5180  002C78  222C               	addwfc	(floorf@u+2)^0,f,c
  5181  002C7A  5027               	movf	(floorf@m+3)^0,w,c
  5182  002C7C  222D               	addwfc	(floorf@u+3)^0,f,c
  5183  002C7E                     l1099:
  5184  002C7E  1C24               	comf	floorf@m^0,w,c
  5185  002C80  6E1E               	movwf	??_floorf^0,c
  5186  002C82  1C25               	comf	(floorf@m+1)^0,w,c
  5187  002C84  6E1F               	movwf	(??_floorf+1)^0,c
  5188  002C86  1C26               	comf	(floorf@m+2)^0,w,c
  5189  002C88  6E20               	movwf	(??_floorf+2)^0,c
  5190  002C8A  1C27               	comf	(floorf@m+3)^0,w,c
  5191  002C8C  6E21               	movwf	(??_floorf+3)^0,c
  5192  002C8E  501E               	movf	??_floorf^0,w,c
  5193  002C90  162A               	andwf	floorf@u^0,f,c
  5194  002C92  501F               	movf	(??_floorf+1)^0,w,c
  5195  002C94  162B               	andwf	(floorf@u+1)^0,f,c
  5196  002C96  5020               	movf	(??_floorf+2)^0,w,c
  5197  002C98  162C               	andwf	(floorf@u+2)^0,f,c
  5198  002C9A  5021               	movf	(??_floorf+3)^0,w,c
  5199  002C9C  162D               	andwf	(floorf@u+3)^0,f,c
  5200  002C9E  EF95  F016         	goto	l3946
  5201  002CA2                     l3938:
  5202  002CA2  C02A  F01E         	movff	floorf@u,??_floorf
  5203  002CA6  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  5204  002CAA  C02C  F020         	movff	floorf@u+2,??_floorf+2
  5205  002CAE  C02D  F021         	movff	floorf@u+3,??_floorf+3
  5206  002CB2  0E20               	movlw	32
  5207  002CB4  EF61  F016         	goto	u4430
  5208  002CB8                     u4435:
  5209  002CB8  90D8               	bcf	status,0,c
  5210  002CBA  3221               	rrcf	(??_floorf+3)^0,f,c
  5211  002CBC  3220               	rrcf	(??_floorf+2)^0,f,c
  5212  002CBE  321F               	rrcf	(??_floorf+1)^0,f,c
  5213  002CC0  321E               	rrcf	??_floorf^0,f,c
  5214  002CC2                     u4430:
  5215  002CC2  2EE8               	decfsz	wreg,f,c
  5216  002CC4  EF5C  F016         	goto	u4435
  5217  002CC8  501E               	movf	??_floorf^0,w,c
  5218  002CCA  101F               	iorwf	(??_floorf+1)^0,w,c
  5219  002CCC  1020               	iorwf	(??_floorf+2)^0,w,c
  5220  002CCE  1021               	iorwf	(??_floorf+3)^0,w,c
  5221  002CD0  A4D8               	btfss	status,2,c
  5222  002CD2  EF6D  F016         	goto	u4441
  5223  002CD6  EF6F  F016         	goto	u4440
  5224  002CDA                     u4441:
  5225  002CDA  EF79  F016         	goto	l3942
  5226  002CDE                     u4440:
  5227  002CDE  0E00               	movlw	0
  5228  002CE0  6E2A               	movwf	floorf@u^0,c
  5229  002CE2  0E00               	movlw	0
  5230  002CE4  6E2B               	movwf	(floorf@u+1)^0,c
  5231  002CE6  0E00               	movlw	0
  5232  002CE8  6E2C               	movwf	(floorf@u+2)^0,c
  5233  002CEA  0E00               	movlw	0
  5234  002CEC  6E2D               	movwf	(floorf@u+3)^0,c
  5235  002CEE  EF95  F016         	goto	l3946
  5236  002CF2                     l3942:
  5237  002CF2  90D8               	bcf	status,0,c
  5238  002CF4  342A               	rlcf	floorf@u^0,w,c
  5239  002CF6  6E1E               	movwf	??_floorf^0,c
  5240  002CF8  342B               	rlcf	(floorf@u+1)^0,w,c
  5241  002CFA  6E1F               	movwf	(??_floorf+1)^0,c
  5242  002CFC  342C               	rlcf	(floorf@u+2)^0,w,c
  5243  002CFE  6E20               	movwf	(??_floorf+2)^0,c
  5244  002D00  342D               	rlcf	(floorf@u+3)^0,w,c
  5245  002D02  6E21               	movwf	(??_floorf+3)^0,c
  5246  002D04  501E               	movf	??_floorf^0,w,c
  5247  002D06  101F               	iorwf	(??_floorf+1)^0,w,c
  5248  002D08  1020               	iorwf	(??_floorf+2)^0,w,c
  5249  002D0A  1021               	iorwf	(??_floorf+3)^0,w,c
  5250  002D0C  B4D8               	btfsc	status,2,c
  5251  002D0E  EF8B  F016         	goto	u4451
  5252  002D12  EF8D  F016         	goto	u4450
  5253  002D16                     u4451:
  5254  002D16  EF95  F016         	goto	l3946
  5255  002D1A                     u4450:
  5256  002D1A  0E00               	movlw	0
  5257  002D1C  6E2A               	movwf	floorf@u^0,c
  5258  002D1E  0E00               	movlw	0
  5259  002D20  6E2B               	movwf	(floorf@u+1)^0,c
  5260  002D22  0E80               	movlw	128
  5261  002D24  6E2C               	movwf	(floorf@u+2)^0,c
  5262  002D26  0EBF               	movlw	191
  5263  002D28  6E2D               	movwf	(floorf@u+3)^0,c
  5264  002D2A                     l3946:
  5265  002D2A  C02A  F01A         	movff	floorf@u,?_floorf
  5266  002D2E  C02B  F01B         	movff	floorf@u+1,?_floorf+1
  5267  002D32  C02C  F01C         	movff	floorf@u+2,?_floorf+2
  5268  002D36  C02D  F01D         	movff	floorf@u+3,?_floorf+3
  5269  002D3A                     l1096:
  5270  002D3A  0012               	return		;funcret
  5271  002D3C                     __end_of_floorf:
  5272                           	callstack 0
  5273                           
  5274 ;; *************** function ___fpclassifyf *****************
  5275 ;; Defined at:
  5276 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__fpclassifyf.c"
  5277 ;; Parameters:    Size  Location     Type
  5278 ;;  x               4    0[COMRAM] float 
  5279 ;; Auto vars:     Size  Location     Type
  5280 ;;  u               4   10[COMRAM] struct .
  5281 ;;  e               2    8[COMRAM] int 
  5282 ;; Return value:  Size  Location     Type
  5283 ;;                  2    0[COMRAM] int 
  5284 ;; Registers used:
  5285 ;;		wreg, status,2, status,0
  5286 ;; Tracked objects:
  5287 ;;		On entry : 0/0
  5288 ;;		On exit  : 0/0
  5289 ;;		Unchanged: 0/0
  5290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5291 ;;      Params:         4       0       0       0       0       0       0       0       0
  5292 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5293 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5294 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5295 ;;Total ram usage:       14 bytes
  5296 ;; Hardware stack levels used: 1
  5297 ;; This function calls:
  5298 ;;		Nothing
  5299 ;; This function is called by:
  5300 ;;		_efgtoa
  5301 ;; This function uses a non-reentrant model
  5302 ;;
  5303                           
  5304                           	psect	text14
  5305  00358C                     __ptext14:
  5306                           	callstack 0
  5307  00358C                     ___fpclassifyf:
  5308                           	callstack 25
  5309  00358C  C0CB  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5310  003590  C0CC  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5311  003594  C0CD  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5312  003598  C0CE  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5313  00359C  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  5314  0035A0  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5315  0035A4  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5316  0035A8  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5317  0035AC  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5318  0035B0  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5319  0035B4  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5320  0035B8  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5321  0035BC  0E18               	movlw	24
  5322  0035BE  EFE6  F01A         	goto	u4260
  5323  0035C2                     u4265:
  5324  0035C2  90D8               	bcf	status,0,c
  5325  0035C4  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  5326  0035C6  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  5327  0035C8  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  5328  0035CA  3205               	rrcf	??___fpclassifyf^0,f,c
  5329  0035CC                     u4260:
  5330  0035CC  2EE8               	decfsz	wreg,f,c
  5331  0035CE  EFE1  F01A         	goto	u4265
  5332  0035D2  5005               	movf	??___fpclassifyf^0,w,c
  5333  0035D4  6E09               	movwf	___fpclassifyf@e^0,c
  5334  0035D6  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  5335  0035D8  5009               	movf	___fpclassifyf@e^0,w,c
  5336  0035DA  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5337  0035DC  A4D8               	btfss	status,2,c
  5338  0035DE  EFF3  F01A         	goto	u4271
  5339  0035E2  EFF5  F01A         	goto	u4270
  5340  0035E6                     u4271:
  5341  0035E6  EF15  F01B         	goto	l3898
  5342  0035EA                     u4270:
  5343  0035EA  90D8               	bcf	status,0,c
  5344  0035EC  340B               	rlcf	___fpclassifyf@u^0,w,c
  5345  0035EE  6E05               	movwf	??___fpclassifyf^0,c
  5346  0035F0  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5347  0035F2  6E06               	movwf	(??___fpclassifyf+1)^0,c
  5348  0035F4  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5349  0035F6  6E07               	movwf	(??___fpclassifyf+2)^0,c
  5350  0035F8  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5351  0035FA  6E08               	movwf	(??___fpclassifyf+3)^0,c
  5352  0035FC  5005               	movf	??___fpclassifyf^0,w,c
  5353  0035FE  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5354  003600  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5355  003602  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5356  003604  A4D8               	btfss	status,2,c
  5357  003606  EF07  F01B         	goto	u4281
  5358  00360A  EF09  F01B         	goto	u4280
  5359  00360E                     u4281:
  5360  00360E  EF0F  F01B         	goto	l3894
  5361  003612                     u4280:
  5362  003612  0E00               	movlw	0
  5363  003614  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5364  003616  0E02               	movlw	2
  5365  003618  6E01               	movwf	?___fpclassifyf^0,c
  5366  00361A  EF44  F01B         	goto	l1057
  5367  00361E                     l3894:
  5368  00361E  0E00               	movlw	0
  5369  003620  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5370  003622  0E03               	movlw	3
  5371  003624  6E01               	movwf	?___fpclassifyf^0,c
  5372  003626  EF44  F01B         	goto	l1057
  5373  00362A                     l3898:
  5374  00362A  2809               	incf	___fpclassifyf@e^0,w,c
  5375  00362C  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5376  00362E  A4D8               	btfss	status,2,c
  5377  003630  EF1C  F01B         	goto	u4291
  5378  003634  EF1E  F01B         	goto	u4290
  5379  003638                     u4291:
  5380  003638  EF40  F01B         	goto	l3904
  5381  00363C                     u4290:
  5382  00363C  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5383  003640  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5384  003644  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5385  003648  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5386  00364C  0E09               	movlw	9
  5387  00364E                     u4305:
  5388  00364E  90D8               	bcf	status,0,c
  5389  003650  3605               	rlcf	??___fpclassifyf^0,f,c
  5390  003652  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  5391  003654  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  5392  003656  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  5393  003658  2EE8               	decfsz	wreg,f,c
  5394  00365A  EF27  F01B         	goto	u4305
  5395  00365E  5005               	movf	??___fpclassifyf^0,w,c
  5396  003660  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5397  003662  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5398  003664  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5399  003666  B4D8               	btfsc	status,2,c
  5400  003668  EF38  F01B         	goto	u4311
  5401  00366C  EF3B  F01B         	goto	u4310
  5402  003670                     u4311:
  5403  003670  0E01               	movlw	1
  5404  003672  EF3C  F01B         	goto	u4320
  5405  003676                     u4310:
  5406  003676  0E00               	movlw	0
  5407  003678                     u4320:
  5408  003678  6E01               	movwf	?___fpclassifyf^0,c
  5409  00367A  6A02               	clrf	(?___fpclassifyf+1)^0,c
  5410  00367C  EF44  F01B         	goto	l1057
  5411  003680                     l3904:
  5412  003680  0E00               	movlw	0
  5413  003682  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5414  003684  0E04               	movlw	4
  5415  003686  6E01               	movwf	?___fpclassifyf^0,c
  5416  003688                     l1057:
  5417  003688  0012               	return		;funcret
  5418  00368A                     __end_of___fpclassifyf:
  5419                           	callstack 0
  5420                           
  5421 ;; *************** function ___fltol *****************
  5422 ;; Defined at:
  5423 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fltol.c"
  5424 ;; Parameters:    Size  Location     Type
  5425 ;;  f1              4    0[COMRAM] int 
  5426 ;; Auto vars:     Size  Location     Type
  5427 ;;  exp1            1    9[COMRAM] unsigned char 
  5428 ;;  sign1           1    8[COMRAM] unsigned char 
  5429 ;; Return value:  Size  Location     Type
  5430 ;;                  4    0[COMRAM] long 
  5431 ;; Registers used:
  5432 ;;		wreg, status,2, status,0
  5433 ;; Tracked objects:
  5434 ;;		On entry : 0/0
  5435 ;;		On exit  : 0/0
  5436 ;;		Unchanged: 0/0
  5437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5438 ;;      Params:         4       0       0       0       0       0       0       0       0
  5439 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5440 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5441 ;;      Totals:        10       0       0       0       0       0       0       0       0
  5442 ;;Total ram usage:       10 bytes
  5443 ;; Hardware stack levels used: 1
  5444 ;; This function calls:
  5445 ;;		Nothing
  5446 ;; This function is called by:
  5447 ;;		_efgtoa
  5448 ;; This function uses a non-reentrant model
  5449 ;;
  5450                           
  5451                           	psect	text15
  5452  003382                     __ptext15:
  5453                           	callstack 0
  5454  003382                     ___fltol:
  5455                           	callstack 25
  5456  003382  3403               	rlcf	(___fltol@f1+2)^0,w,c
  5457  003384  3404               	rlcf	(___fltol@f1+3)^0,w,c
  5458  003386  6E0A               	movwf	___fltol@exp1^0,c
  5459  003388  500A               	movf	___fltol@exp1^0,w,c
  5460  00338A  A4D8               	btfss	status,2,c
  5461  00338C  EFCA  F019         	goto	u4071
  5462  003390  EFCC  F019         	goto	u4070
  5463  003394                     u4071:
  5464  003394  EFD6  F019         	goto	l3784
  5465  003398                     u4070:
  5466  003398                     l3780:
  5467  003398  0E00               	movlw	0
  5468  00339A  6E01               	movwf	?___fltol^0,c
  5469  00339C  0E00               	movlw	0
  5470  00339E  6E02               	movwf	(?___fltol+1)^0,c
  5471  0033A0  0E00               	movlw	0
  5472  0033A2  6E03               	movwf	(?___fltol+2)^0,c
  5473  0033A4  0E00               	movlw	0
  5474  0033A6  6E04               	movwf	(?___fltol+3)^0,c
  5475  0033A8  EF43  F01A         	goto	l439
  5476  0033AC                     l3784:
  5477  0033AC  C001  F005         	movff	___fltol@f1,??___fltol
  5478  0033B0  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  5479  0033B4  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  5480  0033B8  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  5481  0033BC  0E20               	movlw	32
  5482  0033BE  EFE6  F019         	goto	u4080
  5483  0033C2                     u4085:
  5484  0033C2  90D8               	bcf	status,0,c
  5485  0033C4  3208               	rrcf	(??___fltol+3)^0,f,c
  5486  0033C6  3207               	rrcf	(??___fltol+2)^0,f,c
  5487  0033C8  3206               	rrcf	(??___fltol+1)^0,f,c
  5488  0033CA  3205               	rrcf	??___fltol^0,f,c
  5489  0033CC                     u4080:
  5490  0033CC  2EE8               	decfsz	wreg,f,c
  5491  0033CE  EFE1  F019         	goto	u4085
  5492  0033D2  5005               	movf	??___fltol^0,w,c
  5493  0033D4  6E09               	movwf	___fltol@sign1^0,c
  5494  0033D6  8E03               	bsf	(___fltol@f1+2)^0,7,c
  5495  0033D8  0EFF               	movlw	255
  5496  0033DA  1601               	andwf	___fltol@f1^0,f,c
  5497  0033DC  0EFF               	movlw	255
  5498  0033DE  1602               	andwf	(___fltol@f1+1)^0,f,c
  5499  0033E0  0EFF               	movlw	255
  5500  0033E2  1603               	andwf	(___fltol@f1+2)^0,f,c
  5501  0033E4  0E00               	movlw	0
  5502  0033E6  1604               	andwf	(___fltol@f1+3)^0,f,c
  5503  0033E8  0E96               	movlw	150
  5504  0033EA  5E0A               	subwf	___fltol@exp1^0,f,c
  5505  0033EC  BE0A               	btfsc	___fltol@exp1^0,7,c
  5506  0033EE  EFFD  F019         	goto	u4090
  5507  0033F2  EFFB  F019         	goto	u4091
  5508  0033F6                     u4091:
  5509  0033F6  EF13  F01A         	goto	l3804
  5510  0033FA                     u4090:
  5511  0033FA  500A               	movf	___fltol@exp1^0,w,c
  5512  0033FC  0A80               	xorlw	128
  5513  0033FE  0F97               	addlw	151
  5514  003400  B0D8               	btfsc	status,0,c
  5515  003402  EF05  F01A         	goto	u4101
  5516  003406  EF07  F01A         	goto	u4100
  5517  00340A                     u4101:
  5518  00340A  EF09  F01A         	goto	l3800
  5519  00340E                     u4100:
  5520  00340E  EFCC  F019         	goto	l3780
  5521  003412                     l3800:
  5522  003412  90D8               	bcf	status,0,c
  5523  003414  3204               	rrcf	(___fltol@f1+3)^0,f,c
  5524  003416  3203               	rrcf	(___fltol@f1+2)^0,f,c
  5525  003418  3202               	rrcf	(___fltol@f1+1)^0,f,c
  5526  00341A  3201               	rrcf	___fltol@f1^0,f,c
  5527  00341C  3E0A               	incfsz	___fltol@exp1^0,f,c
  5528  00341E  EF09  F01A         	goto	l3800
  5529  003422  EF2B  F01A         	goto	l3814
  5530  003426                     l3804:
  5531  003426  0E1F               	movlw	31
  5532  003428  640A               	cpfsgt	___fltol@exp1^0,c
  5533  00342A  EF19  F01A         	goto	u4111
  5534  00342E  EF1B  F01A         	goto	u4110
  5535  003432                     u4111:
  5536  003432  EF23  F01A         	goto	l3812
  5537  003436                     u4110:
  5538  003436  EFCC  F019         	goto	l3780
  5539  00343A                     l3810:
  5540  00343A  90D8               	bcf	status,0,c
  5541  00343C  3601               	rlcf	___fltol@f1^0,f,c
  5542  00343E  3602               	rlcf	(___fltol@f1+1)^0,f,c
  5543  003440  3603               	rlcf	(___fltol@f1+2)^0,f,c
  5544  003442  3604               	rlcf	(___fltol@f1+3)^0,f,c
  5545  003444  060A               	decf	___fltol@exp1^0,f,c
  5546  003446                     l3812:
  5547  003446  500A               	movf	___fltol@exp1^0,w,c
  5548  003448  A4D8               	btfss	status,2,c
  5549  00344A  EF29  F01A         	goto	u4121
  5550  00344E  EF2B  F01A         	goto	u4120
  5551  003452                     u4121:
  5552  003452  EF1D  F01A         	goto	l3810
  5553  003456                     u4120:
  5554  003456                     l3814:
  5555  003456  5009               	movf	___fltol@sign1^0,w,c
  5556  003458  B4D8               	btfsc	status,2,c
  5557  00345A  EF31  F01A         	goto	u4131
  5558  00345E  EF33  F01A         	goto	u4130
  5559  003462                     u4131:
  5560  003462  EF3B  F01A         	goto	l3818
  5561  003466                     u4130:
  5562  003466  1E04               	comf	(___fltol@f1+3)^0,f,c
  5563  003468  1E03               	comf	(___fltol@f1+2)^0,f,c
  5564  00346A  1E02               	comf	(___fltol@f1+1)^0,f,c
  5565  00346C  6C01               	negf	___fltol@f1^0,c
  5566  00346E  0E00               	movlw	0
  5567  003470  2202               	addwfc	(___fltol@f1+1)^0,f,c
  5568  003472  2203               	addwfc	(___fltol@f1+2)^0,f,c
  5569  003474  2204               	addwfc	(___fltol@f1+3)^0,f,c
  5570  003476                     l3818:
  5571  003476  C001  F001         	movff	___fltol@f1,?___fltol
  5572  00347A  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  5573  00347E  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  5574  003482  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  5575  003486                     l439:
  5576  003486  0012               	return		;funcret
  5577  003488                     __end_of___fltol:
  5578                           	callstack 0
  5579                           
  5580 ;; *************** function ___flsub *****************
  5581 ;; Defined at:
  5582 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  5583 ;; Parameters:    Size  Location     Type
  5584 ;;  b               4   25[COMRAM] long 
  5585 ;;  a               4   29[COMRAM] long 
  5586 ;; Auto vars:     Size  Location     Type
  5587 ;;		None
  5588 ;; Return value:  Size  Location     Type
  5589 ;;                  4   25[COMRAM] long 
  5590 ;; Registers used:
  5591 ;;		wreg, status,2, status,0, cstack
  5592 ;; Tracked objects:
  5593 ;;		On entry : 0/0
  5594 ;;		On exit  : 0/0
  5595 ;;		Unchanged: 0/0
  5596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5597 ;;      Params:         8       0       0       0       0       0       0       0       0
  5598 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5599 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5600 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5601 ;;Total ram usage:        8 bytes
  5602 ;; Hardware stack levels used: 1
  5603 ;; Hardware stack levels required when called: 1
  5604 ;; This function calls:
  5605 ;;		___fladd
  5606 ;; This function is called by:
  5607 ;;		_efgtoa
  5608 ;; This function uses a non-reentrant model
  5609 ;;
  5610                           
  5611                           	psect	text16
  5612  0040D2                     __ptext16:
  5613                           	callstack 0
  5614  0040D2                     ___flsub:
  5615                           	callstack 24
  5616  0040D2  0E00               	movlw	0
  5617  0040D4  1A1E               	xorwf	___flsub@a^0,f,c
  5618  0040D6  0E00               	movlw	0
  5619  0040D8  1A1F               	xorwf	(___flsub@a+1)^0,f,c
  5620  0040DA  0E00               	movlw	0
  5621  0040DC  1A20               	xorwf	(___flsub@a+2)^0,f,c
  5622  0040DE  0E80               	movlw	128
  5623  0040E0  1A21               	xorwf	(___flsub@a+3)^0,f,c
  5624  0040E2  C01A  F001         	movff	___flsub@b,___fladd@b
  5625  0040E6  C01B  F002         	movff	___flsub@b+1,___fladd@b+1
  5626  0040EA  C01C  F003         	movff	___flsub@b+2,___fladd@b+2
  5627  0040EE  C01D  F004         	movff	___flsub@b+3,___fladd@b+3
  5628  0040F2  C01E  F005         	movff	___flsub@a,___fladd@a
  5629  0040F6  C01F  F006         	movff	___flsub@a+1,___fladd@a+1
  5630  0040FA  C020  F007         	movff	___flsub@a+2,___fladd@a+2
  5631  0040FE  C021  F008         	movff	___flsub@a+3,___fladd@a+3
  5632  004102  ECE1  F00D         	call	___fladd	;wreg free
  5633  004106  C001  F01A         	movff	?___fladd,?___flsub
  5634  00410A  C002  F01B         	movff	?___fladd+1,?___flsub+1
  5635  00410E  C003  F01C         	movff	?___fladd+2,?___flsub+2
  5636  004112  C004  F01D         	movff	?___fladd+3,?___flsub+3
  5637  004116  0012               	return		;funcret
  5638  004118                     __end_of___flsub:
  5639                           	callstack 0
  5640                           
  5641 ;; *************** function ___fladd *****************
  5642 ;; Defined at:
  5643 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  5644 ;; Parameters:    Size  Location     Type
  5645 ;;  b               4    0[COMRAM] long 
  5646 ;;  a               4    4[COMRAM] long 
  5647 ;; Auto vars:     Size  Location     Type
  5648 ;;  grs             1   15[COMRAM] unsigned char 
  5649 ;;  bexp            1   14[COMRAM] unsigned char 
  5650 ;;  aexp            1   13[COMRAM] unsigned char 
  5651 ;;  signs           1   12[COMRAM] unsigned char 
  5652 ;; Return value:  Size  Location     Type
  5653 ;;                  4    0[COMRAM] unsigned char 
  5654 ;; Registers used:
  5655 ;;		wreg, status,2, status,0
  5656 ;; Tracked objects:
  5657 ;;		On entry : 0/0
  5658 ;;		On exit  : 0/0
  5659 ;;		Unchanged: 0/0
  5660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5661 ;;      Params:         8       0       0       0       0       0       0       0       0
  5662 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5663 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5664 ;;      Totals:        16       0       0       0       0       0       0       0       0
  5665 ;;Total ram usage:       16 bytes
  5666 ;; Hardware stack levels used: 1
  5667 ;; This function calls:
  5668 ;;		Nothing
  5669 ;; This function is called by:
  5670 ;;		___flsub
  5671 ;;		_efgtoa
  5672 ;; This function uses a non-reentrant model
  5673 ;;
  5674                           
  5675                           	psect	text17
  5676  001BC2                     __ptext17:
  5677                           	callstack 0
  5678  001BC2                     ___fladd:
  5679                           	callstack 24
  5680  001BC2  5004               	movf	(___fladd@b+3)^0,w,c
  5681  001BC4  0B80               	andlw	128
  5682  001BC6  6E0D               	movwf	___fladd@signs^0,c
  5683  001BC8  5004               	movf	(___fladd@b+3)^0,w,c
  5684  001BCA  2404               	addwf	(___fladd@b+3)^0,w,c
  5685  001BCC  6E0F               	movwf	___fladd@bexp^0,c
  5686  001BCE  AE03               	btfss	(___fladd@b+2)^0,7,c
  5687  001BD0  EFEC  F00D         	goto	u2881
  5688  001BD4  EFEE  F00D         	goto	u2880
  5689  001BD8                     u2881:
  5690  001BD8  EFEF  F00D         	goto	l3074
  5691  001BDC                     u2880:
  5692  001BDC  800F               	bsf	___fladd@bexp^0,0,c
  5693  001BDE                     l3074:
  5694  001BDE  500F               	movf	___fladd@bexp^0,w,c
  5695  001BE0  B4D8               	btfsc	status,2,c
  5696  001BE2  EFF5  F00D         	goto	u2891
  5697  001BE6  EFF7  F00D         	goto	u2890
  5698  001BEA                     u2891:
  5699  001BEA  EF0C  F00E         	goto	l3084
  5700  001BEE                     u2890:
  5701  001BEE  280F               	incf	___fladd@bexp^0,w,c
  5702  001BF0  A4D8               	btfss	status,2,c
  5703  001BF2  EFFD  F00D         	goto	u2901
  5704  001BF6  EFFF  F00D         	goto	u2900
  5705  001BFA                     u2901:
  5706  001BFA  EF07  F00E         	goto	l3080
  5707  001BFE                     u2900:
  5708  001BFE  0E00               	movlw	0
  5709  001C00  6E01               	movwf	___fladd@b^0,c
  5710  001C02  0E00               	movlw	0
  5711  001C04  6E02               	movwf	(___fladd@b+1)^0,c
  5712  001C06  0E00               	movlw	0
  5713  001C08  6E03               	movwf	(___fladd@b+2)^0,c
  5714  001C0A  0E00               	movlw	0
  5715  001C0C  6E04               	movwf	(___fladd@b+3)^0,c
  5716  001C0E                     l3080:
  5717  001C0E  8E03               	bsf	(___fladd@b+2)^0,7,c
  5718  001C10  0E00               	movlw	0
  5719  001C12  6E04               	movwf	(___fladd@b+3)^0,c
  5720  001C14  EF14  F00E         	goto	l3086
  5721  001C18                     l3084:
  5722  001C18  0E00               	movlw	0
  5723  001C1A  6E01               	movwf	___fladd@b^0,c
  5724  001C1C  0E00               	movlw	0
  5725  001C1E  6E02               	movwf	(___fladd@b+1)^0,c
  5726  001C20  0E00               	movlw	0
  5727  001C22  6E03               	movwf	(___fladd@b+2)^0,c
  5728  001C24  0E00               	movlw	0
  5729  001C26  6E04               	movwf	(___fladd@b+3)^0,c
  5730  001C28                     l3086:
  5731  001C28  5008               	movf	(___fladd@a+3)^0,w,c
  5732  001C2A  0B80               	andlw	128
  5733  001C2C  6E0E               	movwf	___fladd@aexp^0,c
  5734  001C2E  500D               	movf	___fladd@signs^0,w,c
  5735  001C30  180E               	xorwf	___fladd@aexp^0,w,c
  5736  001C32  B4D8               	btfsc	status,2,c
  5737  001C34  EF1E  F00E         	goto	u2911
  5738  001C38  EF20  F00E         	goto	u2910
  5739  001C3C                     u2911:
  5740  001C3C  EF21  F00E         	goto	l3092
  5741  001C40                     u2910:
  5742  001C40  8C0D               	bsf	___fladd@signs^0,6,c
  5743  001C42                     l3092:
  5744  001C42  5008               	movf	(___fladd@a+3)^0,w,c
  5745  001C44  2408               	addwf	(___fladd@a+3)^0,w,c
  5746  001C46  6E0E               	movwf	___fladd@aexp^0,c
  5747  001C48  AE07               	btfss	(___fladd@a+2)^0,7,c
  5748  001C4A  EF29  F00E         	goto	u2921
  5749  001C4E  EF2B  F00E         	goto	u2920
  5750  001C52                     u2921:
  5751  001C52  EF2C  F00E         	goto	l3098
  5752  001C56                     u2920:
  5753  001C56  800E               	bsf	___fladd@aexp^0,0,c
  5754  001C58                     l3098:
  5755  001C58  500E               	movf	___fladd@aexp^0,w,c
  5756  001C5A  B4D8               	btfsc	status,2,c
  5757  001C5C  EF32  F00E         	goto	u2931
  5758  001C60  EF34  F00E         	goto	u2930
  5759  001C64                     u2931:
  5760  001C64  EF49  F00E         	goto	l3108
  5761  001C68                     u2930:
  5762  001C68  280E               	incf	___fladd@aexp^0,w,c
  5763  001C6A  A4D8               	btfss	status,2,c
  5764  001C6C  EF3A  F00E         	goto	u2941
  5765  001C70  EF3C  F00E         	goto	u2940
  5766  001C74                     u2941:
  5767  001C74  EF44  F00E         	goto	l3104
  5768  001C78                     u2940:
  5769  001C78  0E00               	movlw	0
  5770  001C7A  6E05               	movwf	___fladd@a^0,c
  5771  001C7C  0E00               	movlw	0
  5772  001C7E  6E06               	movwf	(___fladd@a+1)^0,c
  5773  001C80  0E00               	movlw	0
  5774  001C82  6E07               	movwf	(___fladd@a+2)^0,c
  5775  001C84  0E00               	movlw	0
  5776  001C86  6E08               	movwf	(___fladd@a+3)^0,c
  5777  001C88                     l3104:
  5778  001C88  8E07               	bsf	(___fladd@a+2)^0,7,c
  5779  001C8A  0E00               	movlw	0
  5780  001C8C  6E08               	movwf	(___fladd@a+3)^0,c
  5781  001C8E  EF51  F00E         	goto	l3110
  5782  001C92                     l3108:
  5783  001C92  0E00               	movlw	0
  5784  001C94  6E05               	movwf	___fladd@a^0,c
  5785  001C96  0E00               	movlw	0
  5786  001C98  6E06               	movwf	(___fladd@a+1)^0,c
  5787  001C9A  0E00               	movlw	0
  5788  001C9C  6E07               	movwf	(___fladd@a+2)^0,c
  5789  001C9E  0E00               	movlw	0
  5790  001CA0  6E08               	movwf	(___fladd@a+3)^0,c
  5791  001CA2                     l3110:
  5792  001CA2  500F               	movf	___fladd@bexp^0,w,c
  5793  001CA4  5C0E               	subwf	___fladd@aexp^0,w,c
  5794  001CA6  B0D8               	btfsc	status,0,c
  5795  001CA8  EF58  F00E         	goto	u2951
  5796  001CAC  EF5A  F00E         	goto	u2950
  5797  001CB0                     u2951:
  5798  001CB0  EF81  F00E         	goto	l3146
  5799  001CB4                     u2950:
  5800  001CB4  AC0D               	btfss	___fladd@signs^0,6,c
  5801  001CB6  EF5F  F00E         	goto	u2961
  5802  001CBA  EF61  F00E         	goto	u2960
  5803  001CBE                     u2961:
  5804  001CBE  EF63  F00E         	goto	l3116
  5805  001CC2                     u2960:
  5806  001CC2  0E80               	movlw	128
  5807  001CC4  1A0D               	xorwf	___fladd@signs^0,f,c
  5808  001CC6                     l3116:
  5809  001CC6  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  5810  001CCA  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5811  001CCE  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  5812  001CD2  C001  F010         	movff	___fladd@b,___fladd@grs
  5813  001CD6  C005  F001         	movff	___fladd@a,___fladd@b
  5814  001CDA  C010  F005         	movff	___fladd@grs,___fladd@a
  5815  001CDE  C002  F010         	movff	___fladd@b+1,___fladd@grs
  5816  001CE2  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  5817  001CE6  C010  F006         	movff	___fladd@grs,___fladd@a+1
  5818  001CEA  C003  F010         	movff	___fladd@b+2,___fladd@grs
  5819  001CEE  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  5820  001CF2  C010  F007         	movff	___fladd@grs,___fladd@a+2
  5821  001CF6  C004  F010         	movff	___fladd@b+3,___fladd@grs
  5822  001CFA  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  5823  001CFE  C010  F008         	movff	___fladd@grs,___fladd@a+3
  5824  001D02                     l3146:
  5825  001D02  0E00               	movlw	0
  5826  001D04  6E10               	movwf	___fladd@grs^0,c
  5827  001D06  500F               	movf	___fladd@bexp^0,w,c
  5828  001D08  C00E  F009         	movff	___fladd@aexp,??___fladd
  5829  001D0C  6A0A               	clrf	(??___fladd+1)^0,c
  5830  001D0E  5E09               	subwf	??___fladd^0,f,c
  5831  001D10  0E00               	movlw	0
  5832  001D12  5A0A               	subwfb	(??___fladd+1)^0,f,c
  5833  001D14  BE0A               	btfsc	(??___fladd+1)^0,7,c
  5834  001D16  EF96  F00E         	goto	u2971
  5835  001D1A  500A               	movf	(??___fladd+1)^0,w,c
  5836  001D1C  E109               	bnz	u2970
  5837  001D1E  0E1A               	movlw	26
  5838  001D20  5C09               	subwf	??___fladd^0,w,c
  5839  001D22  A0D8               	btfss	status,0,c
  5840  001D24  EF96  F00E         	goto	u2971
  5841  001D28  EF98  F00E         	goto	u2970
  5842  001D2C                     u2971:
  5843  001D2C  EFCF  F00E         	goto	l671
  5844  001D30                     u2970:
  5845  001D30  5001               	movf	___fladd@b^0,w,c
  5846  001D32  1002               	iorwf	(___fladd@b+1)^0,w,c
  5847  001D34  1003               	iorwf	(___fladd@b+2)^0,w,c
  5848  001D36  1004               	iorwf	(___fladd@b+3)^0,w,c
  5849  001D38  A4D8               	btfss	status,2,c
  5850  001D3A  EFA1  F00E         	goto	u2981
  5851  001D3E  EFA4  F00E         	goto	u2980
  5852  001D42                     u2981:
  5853  001D42  0E01               	movlw	1
  5854  001D44  EFA5  F00E         	goto	u2990
  5855  001D48                     u2980:
  5856  001D48  0E00               	movlw	0
  5857  001D4A                     u2990:
  5858  001D4A  6E10               	movwf	___fladd@grs^0,c
  5859  001D4C  0E00               	movlw	0
  5860  001D4E  6E01               	movwf	___fladd@b^0,c
  5861  001D50  0E00               	movlw	0
  5862  001D52  6E02               	movwf	(___fladd@b+1)^0,c
  5863  001D54  0E00               	movlw	0
  5864  001D56  6E03               	movwf	(___fladd@b+2)^0,c
  5865  001D58  0E00               	movlw	0
  5866  001D5A  6E04               	movwf	(___fladd@b+3)^0,c
  5867  001D5C  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5868  001D60  EFD8  F00E         	goto	l670
  5869  001D64                     l672:
  5870  001D64  A010               	btfss	___fladd@grs^0,0,c
  5871  001D66  EFB7  F00E         	goto	u3001
  5872  001D6A  EFB9  F00E         	goto	u3000
  5873  001D6E                     u3001:
  5874  001D6E  EFBF  F00E         	goto	l3158
  5875  001D72                     u3000:
  5876  001D72  90D8               	bcf	status,0,c
  5877  001D74  3010               	rrcf	___fladd@grs^0,w,c
  5878  001D76  0901               	iorlw	1
  5879  001D78  6E10               	movwf	___fladd@grs^0,c
  5880  001D7A  EFC1  F00E         	goto	l3160
  5881  001D7E                     l3158:
  5882  001D7E  90D8               	bcf	status,0,c
  5883  001D80  3210               	rrcf	___fladd@grs^0,f,c
  5884  001D82                     l3160:
  5885  001D82  A001               	btfss	___fladd@b^0,0,c
  5886  001D84  EFC6  F00E         	goto	u3011
  5887  001D88  EFC8  F00E         	goto	u3010
  5888  001D8C                     u3011:
  5889  001D8C  EFC9  F00E         	goto	l3164
  5890  001D90                     u3010:
  5891  001D90  8E10               	bsf	___fladd@grs^0,7,c
  5892  001D92                     l3164:
  5893  001D92  3404               	rlcf	(___fladd@b+3)^0,w,c
  5894  001D94  3204               	rrcf	(___fladd@b+3)^0,f,c
  5895  001D96  3203               	rrcf	(___fladd@b+2)^0,f,c
  5896  001D98  3202               	rrcf	(___fladd@b+1)^0,f,c
  5897  001D9A  3201               	rrcf	___fladd@b^0,f,c
  5898  001D9C  2A0F               	incf	___fladd@bexp^0,f,c
  5899  001D9E                     l671:
  5900  001D9E  500E               	movf	___fladd@aexp^0,w,c
  5901  001DA0  5C0F               	subwf	___fladd@bexp^0,w,c
  5902  001DA2  A0D8               	btfss	status,0,c
  5903  001DA4  EFD6  F00E         	goto	u3021
  5904  001DA8  EFD8  F00E         	goto	u3020
  5905  001DAC                     u3021:
  5906  001DAC  EFB2  F00E         	goto	l672
  5907  001DB0                     u3020:
  5908  001DB0                     l670:
  5909  001DB0  BC0D               	btfsc	___fladd@signs^0,6,c
  5910  001DB2  EFDD  F00E         	goto	u3031
  5911  001DB6  EFDF  F00E         	goto	u3030
  5912  001DBA                     u3031:
  5913  001DBA  EF1F  F00F         	goto	l3192
  5914  001DBE                     u3030:
  5915  001DBE  500F               	movf	___fladd@bexp^0,w,c
  5916  001DC0  A4D8               	btfss	status,2,c
  5917  001DC2  EFE5  F00E         	goto	u3041
  5918  001DC6  EFE7  F00E         	goto	u3040
  5919  001DCA                     u3041:
  5920  001DCA  EFF1  F00E         	goto	l3174
  5921  001DCE                     u3040:
  5922  001DCE  0E00               	movlw	0
  5923  001DD0  6E01               	movwf	?___fladd^0,c
  5924  001DD2  0E00               	movlw	0
  5925  001DD4  6E02               	movwf	(?___fladd+1)^0,c
  5926  001DD6  0E00               	movlw	0
  5927  001DD8  6E03               	movwf	(?___fladd+2)^0,c
  5928  001DDA  0E00               	movlw	0
  5929  001DDC  6E04               	movwf	(?___fladd+3)^0,c
  5930  001DDE  EF40  F010         	goto	l679
  5931  001DE2                     l3174:
  5932  001DE2  5005               	movf	___fladd@a^0,w,c
  5933  001DE4  2601               	addwf	___fladd@b^0,f,c
  5934  001DE6  5006               	movf	(___fladd@a+1)^0,w,c
  5935  001DE8  2202               	addwfc	(___fladd@b+1)^0,f,c
  5936  001DEA  5007               	movf	(___fladd@a+2)^0,w,c
  5937  001DEC  2203               	addwfc	(___fladd@b+2)^0,f,c
  5938  001DEE  5008               	movf	(___fladd@a+3)^0,w,c
  5939  001DF0  2204               	addwfc	(___fladd@b+3)^0,f,c
  5940  001DF2  A004               	btfss	(___fladd@b+3)^0,0,c
  5941  001DF4  EFFE  F00E         	goto	u3051
  5942  001DF8  EF00  F00F         	goto	u3050
  5943  001DFC                     u3051:
  5944  001DFC  EFAC  F00F         	goto	l3228
  5945  001E00                     u3050:
  5946  001E00  A010               	btfss	___fladd@grs^0,0,c
  5947  001E02  EF05  F00F         	goto	u3061
  5948  001E06  EF07  F00F         	goto	u3060
  5949  001E0A                     u3061:
  5950  001E0A  EF0D  F00F         	goto	l3182
  5951  001E0E                     u3060:
  5952  001E0E  90D8               	bcf	status,0,c
  5953  001E10  3010               	rrcf	___fladd@grs^0,w,c
  5954  001E12  0901               	iorlw	1
  5955  001E14  6E10               	movwf	___fladd@grs^0,c
  5956  001E16  EF0F  F00F         	goto	l3184
  5957  001E1A                     l3182:
  5958  001E1A  90D8               	bcf	status,0,c
  5959  001E1C  3210               	rrcf	___fladd@grs^0,f,c
  5960  001E1E                     l3184:
  5961  001E1E  A001               	btfss	___fladd@b^0,0,c
  5962  001E20  EF14  F00F         	goto	u3071
  5963  001E24  EF16  F00F         	goto	u3070
  5964  001E28                     u3071:
  5965  001E28  EF17  F00F         	goto	l3188
  5966  001E2C                     u3070:
  5967  001E2C  8E10               	bsf	___fladd@grs^0,7,c
  5968  001E2E                     l3188:
  5969  001E2E  3404               	rlcf	(___fladd@b+3)^0,w,c
  5970  001E30  3204               	rrcf	(___fladd@b+3)^0,f,c
  5971  001E32  3203               	rrcf	(___fladd@b+2)^0,f,c
  5972  001E34  3202               	rrcf	(___fladd@b+1)^0,f,c
  5973  001E36  3201               	rrcf	___fladd@b^0,f,c
  5974  001E38  2A0F               	incf	___fladd@bexp^0,f,c
  5975  001E3A  EFAC  F00F         	goto	l3228
  5976  001E3E                     l3192:
  5977  001E3E  5005               	movf	___fladd@a^0,w,c
  5978  001E40  5C01               	subwf	___fladd@b^0,w,c
  5979  001E42  5006               	movf	(___fladd@a+1)^0,w,c
  5980  001E44  5802               	subwfb	(___fladd@b+1)^0,w,c
  5981  001E46  5007               	movf	(___fladd@a+2)^0,w,c
  5982  001E48  5803               	subwfb	(___fladd@b+2)^0,w,c
  5983  001E4A  5004               	movf	(___fladd@b+3)^0,w,c
  5984  001E4C  0A80               	xorlw	128
  5985  001E4E  6E09               	movwf	??___fladd^0,c
  5986  001E50  5008               	movf	(___fladd@a+3)^0,w,c
  5987  001E52  0A80               	xorlw	128
  5988  001E54  5809               	subwfb	??___fladd^0,w,c
  5989  001E56  B0D8               	btfsc	status,0,c
  5990  001E58  EF30  F00F         	goto	u3081
  5991  001E5C  EF32  F00F         	goto	u3080
  5992  001E60                     u3081:
  5993  001E60  EF5D  F00F         	goto	l3202
  5994  001E64                     u3080:
  5995  001E64  5001               	movf	___fladd@b^0,w,c
  5996  001E66  5C05               	subwf	___fladd@a^0,w,c
  5997  001E68  6E09               	movwf	??___fladd^0,c
  5998  001E6A  5002               	movf	(___fladd@b+1)^0,w,c
  5999  001E6C  5806               	subwfb	(___fladd@a+1)^0,w,c
  6000  001E6E  6E0A               	movwf	(??___fladd+1)^0,c
  6001  001E70  5003               	movf	(___fladd@b+2)^0,w,c
  6002  001E72  5807               	subwfb	(___fladd@a+2)^0,w,c
  6003  001E74  6E0B               	movwf	(??___fladd+2)^0,c
  6004  001E76  5004               	movf	(___fladd@b+3)^0,w,c
  6005  001E78  5808               	subwfb	(___fladd@a+3)^0,w,c
  6006  001E7A  6E0C               	movwf	(??___fladd+3)^0,c
  6007  001E7C  0EFF               	movlw	255
  6008  001E7E  2409               	addwf	??___fladd^0,w,c
  6009  001E80  6E01               	movwf	___fladd@b^0,c
  6010  001E82  0EFF               	movlw	255
  6011  001E84  200A               	addwfc	(??___fladd+1)^0,w,c
  6012  001E86  6E02               	movwf	(___fladd@b+1)^0,c
  6013  001E88  0EFF               	movlw	255
  6014  001E8A  200B               	addwfc	(??___fladd+2)^0,w,c
  6015  001E8C  6E03               	movwf	(___fladd@b+2)^0,c
  6016  001E8E  0EFF               	movlw	255
  6017  001E90  200C               	addwfc	(??___fladd+3)^0,w,c
  6018  001E92  6E04               	movwf	(___fladd@b+3)^0,c
  6019  001E94  0E80               	movlw	128
  6020  001E96  1A0D               	xorwf	___fladd@signs^0,f,c
  6021  001E98  6C10               	negf	___fladd@grs^0,c
  6022  001E9A  5010               	movf	___fladd@grs^0,w,c
  6023  001E9C  A4D8               	btfss	status,2,c
  6024  001E9E  EF53  F00F         	goto	u3091
  6025  001EA2  EF55  F00F         	goto	u3090
  6026  001EA6                     u3091:
  6027  001EA6  EF65  F00F         	goto	l687
  6028  001EAA                     u3090:
  6029  001EAA  0E01               	movlw	1
  6030  001EAC  2601               	addwf	___fladd@b^0,f,c
  6031  001EAE  0E00               	movlw	0
  6032  001EB0  2202               	addwfc	(___fladd@b+1)^0,f,c
  6033  001EB2  2203               	addwfc	(___fladd@b+2)^0,f,c
  6034  001EB4  2204               	addwfc	(___fladd@b+3)^0,f,c
  6035  001EB6  EF65  F00F         	goto	l687
  6036  001EBA                     l3202:
  6037  001EBA  5005               	movf	___fladd@a^0,w,c
  6038  001EBC  5E01               	subwf	___fladd@b^0,f,c
  6039  001EBE  5006               	movf	(___fladd@a+1)^0,w,c
  6040  001EC0  5A02               	subwfb	(___fladd@b+1)^0,f,c
  6041  001EC2  5007               	movf	(___fladd@a+2)^0,w,c
  6042  001EC4  5A03               	subwfb	(___fladd@b+2)^0,f,c
  6043  001EC6  5008               	movf	(___fladd@a+3)^0,w,c
  6044  001EC8  5A04               	subwfb	(___fladd@b+3)^0,f,c
  6045  001ECA                     l687:
  6046  001ECA  5001               	movf	___fladd@b^0,w,c
  6047  001ECC  1002               	iorwf	(___fladd@b+1)^0,w,c
  6048  001ECE  1003               	iorwf	(___fladd@b+2)^0,w,c
  6049  001ED0  1004               	iorwf	(___fladd@b+3)^0,w,c
  6050  001ED2  A4D8               	btfss	status,2,c
  6051  001ED4  EF6E  F00F         	goto	u3101
  6052  001ED8  EF70  F00F         	goto	u3100
  6053  001EDC                     u3101:
  6054  001EDC  EFA5  F00F         	goto	l3226
  6055  001EE0                     u3100:
  6056  001EE0  5010               	movf	___fladd@grs^0,w,c
  6057  001EE2  A4D8               	btfss	status,2,c
  6058  001EE4  EF76  F00F         	goto	u3111
  6059  001EE8  EF78  F00F         	goto	u3110
  6060  001EEC                     u3111:
  6061  001EEC  EFA5  F00F         	goto	l3226
  6062  001EF0                     u3110:
  6063  001EF0  0E00               	movlw	0
  6064  001EF2  6E01               	movwf	?___fladd^0,c
  6065  001EF4  0E00               	movlw	0
  6066  001EF6  6E02               	movwf	(?___fladd+1)^0,c
  6067  001EF8  0E00               	movlw	0
  6068  001EFA  6E03               	movwf	(?___fladd+2)^0,c
  6069  001EFC  0E00               	movlw	0
  6070  001EFE  6E04               	movwf	(?___fladd+3)^0,c
  6071  001F00  EF40  F010         	goto	l679
  6072  001F04                     l3210:
  6073  001F04  90D8               	bcf	status,0,c
  6074  001F06  3601               	rlcf	___fladd@b^0,f,c
  6075  001F08  3602               	rlcf	(___fladd@b+1)^0,f,c
  6076  001F0A  3603               	rlcf	(___fladd@b+2)^0,f,c
  6077  001F0C  3604               	rlcf	(___fladd@b+3)^0,f,c
  6078  001F0E  AE10               	btfss	___fladd@grs^0,7,c
  6079  001F10  EF8C  F00F         	goto	u3121
  6080  001F14  EF8E  F00F         	goto	u3120
  6081  001F18                     u3121:
  6082  001F18  EF8F  F00F         	goto	l3216
  6083  001F1C                     u3120:
  6084  001F1C  8001               	bsf	___fladd@b^0,0,c
  6085  001F1E                     l3216:
  6086  001F1E  A010               	btfss	___fladd@grs^0,0,c
  6087  001F20  EF94  F00F         	goto	u3131
  6088  001F24  EF96  F00F         	goto	u3130
  6089  001F28                     u3131:
  6090  001F28  EF9A  F00F         	goto	l3220
  6091  001F2C                     u3130:
  6092  001F2C  80D8               	bsf	status,0,c
  6093  001F2E  3610               	rlcf	___fladd@grs^0,f,c
  6094  001F30  EF9C  F00F         	goto	l3222
  6095  001F34                     l3220:
  6096  001F34  90D8               	bcf	status,0,c
  6097  001F36  3610               	rlcf	___fladd@grs^0,f,c
  6098  001F38                     l3222:
  6099  001F38  500F               	movf	___fladd@bexp^0,w,c
  6100  001F3A  B4D8               	btfsc	status,2,c
  6101  001F3C  EFA2  F00F         	goto	u3141
  6102  001F40  EFA4  F00F         	goto	u3140
  6103  001F44                     u3141:
  6104  001F44  EFA5  F00F         	goto	l3226
  6105  001F48                     u3140:
  6106  001F48  060F               	decf	___fladd@bexp^0,f,c
  6107  001F4A                     l3226:
  6108  001F4A  AE03               	btfss	(___fladd@b+2)^0,7,c
  6109  001F4C  EFAA  F00F         	goto	u3151
  6110  001F50  EFAC  F00F         	goto	u3150
  6111  001F54                     u3151:
  6112  001F54  EF82  F00F         	goto	l3210
  6113  001F58                     u3150:
  6114  001F58                     l3228:
  6115  001F58  0E00               	movlw	0
  6116  001F5A  6E0E               	movwf	___fladd@aexp^0,c
  6117  001F5C  AE10               	btfss	___fladd@grs^0,7,c
  6118  001F5E  EFB3  F00F         	goto	u3161
  6119  001F62  EFB5  F00F         	goto	u3160
  6120  001F66                     u3161:
  6121  001F66  EFCD  F00F         	goto	l696
  6122  001F6A                     u3160:
  6123  001F6A  C010  F009         	movff	___fladd@grs,??___fladd
  6124  001F6E  0E7F               	movlw	127
  6125  001F70  1609               	andwf	??___fladd^0,f,c
  6126  001F72  B4D8               	btfsc	status,2,c
  6127  001F74  EFBE  F00F         	goto	u3171
  6128  001F78  EFC0  F00F         	goto	u3170
  6129  001F7C                     u3171:
  6130  001F7C  EFC4  F00F         	goto	l697
  6131  001F80                     u3170:
  6132  001F80                     l3234:
  6133  001F80  0E01               	movlw	1
  6134  001F82  6E0E               	movwf	___fladd@aexp^0,c
  6135  001F84  EFCD  F00F         	goto	l696
  6136  001F88                     l697:
  6137  001F88  A001               	btfss	___fladd@b^0,0,c
  6138  001F8A  EFC9  F00F         	goto	u3181
  6139  001F8E  EFCB  F00F         	goto	u3180
  6140  001F92                     u3181:
  6141  001F92  EFCD  F00F         	goto	l696
  6142  001F96                     u3180:
  6143  001F96  EFC0  F00F         	goto	l3234
  6144  001F9A                     l696:
  6145  001F9A  500E               	movf	___fladd@aexp^0,w,c
  6146  001F9C  B4D8               	btfsc	status,2,c
  6147  001F9E  EFD3  F00F         	goto	u3191
  6148  001FA2  EFD5  F00F         	goto	u3190
  6149  001FA6                     u3191:
  6150  001FA6  EF00  F010         	goto	l3246
  6151  001FAA                     u3190:
  6152  001FAA  0E01               	movlw	1
  6153  001FAC  2601               	addwf	___fladd@b^0,f,c
  6154  001FAE  0E00               	movlw	0
  6155  001FB0  2202               	addwfc	(___fladd@b+1)^0,f,c
  6156  001FB2  2203               	addwfc	(___fladd@b+2)^0,f,c
  6157  001FB4  2204               	addwfc	(___fladd@b+3)^0,f,c
  6158  001FB6  A004               	btfss	(___fladd@b+3)^0,0,c
  6159  001FB8  EFE0  F00F         	goto	u3201
  6160  001FBC  EFE2  F00F         	goto	u3200
  6161  001FC0                     u3201:
  6162  001FC0  EF00  F010         	goto	l3246
  6163  001FC4                     u3200:
  6164  001FC4  C001  F009         	movff	___fladd@b,??___fladd
  6165  001FC8  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  6166  001FCC  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  6167  001FD0  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  6168  001FD4  340C               	rlcf	(??___fladd+3)^0,w,c
  6169  001FD6  320C               	rrcf	(??___fladd+3)^0,f,c
  6170  001FD8  320B               	rrcf	(??___fladd+2)^0,f,c
  6171  001FDA  320A               	rrcf	(??___fladd+1)^0,f,c
  6172  001FDC  3209               	rrcf	??___fladd^0,f,c
  6173  001FDE  C009  F001         	movff	??___fladd,___fladd@b
  6174  001FE2  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  6175  001FE6  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  6176  001FEA  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  6177  001FEE  280F               	incf	___fladd@bexp^0,w,c
  6178  001FF0  B4D8               	btfsc	status,2,c
  6179  001FF2  EFFD  F00F         	goto	u3211
  6180  001FF6  EFFF  F00F         	goto	u3210
  6181  001FFA                     u3211:
  6182  001FFA  EF00  F010         	goto	l3246
  6183  001FFE                     u3210:
  6184  001FFE  2A0F               	incf	___fladd@bexp^0,f,c
  6185  002000                     l3246:
  6186  002000  280F               	incf	___fladd@bexp^0,w,c
  6187  002002  B4D8               	btfsc	status,2,c
  6188  002004  EF06  F010         	goto	u3221
  6189  002008  EF08  F010         	goto	u3220
  6190  00200C                     u3221:
  6191  00200C  EF10  F010         	goto	l3250
  6192  002010                     u3220:
  6193  002010  500F               	movf	___fladd@bexp^0,w,c
  6194  002012  A4D8               	btfss	status,2,c
  6195  002014  EF0E  F010         	goto	u3231
  6196  002018  EF10  F010         	goto	u3230
  6197  00201C                     u3231:
  6198  00201C  EF22  F010         	goto	l3254
  6199  002020                     u3230:
  6200  002020                     l3250:
  6201  002020  0E00               	movlw	0
  6202  002022  6E01               	movwf	___fladd@b^0,c
  6203  002024  0E00               	movlw	0
  6204  002026  6E02               	movwf	(___fladd@b+1)^0,c
  6205  002028  0E00               	movlw	0
  6206  00202A  6E03               	movwf	(___fladd@b+2)^0,c
  6207  00202C  0E00               	movlw	0
  6208  00202E  6E04               	movwf	(___fladd@b+3)^0,c
  6209  002030  500F               	movf	___fladd@bexp^0,w,c
  6210  002032  A4D8               	btfss	status,2,c
  6211  002034  EF1E  F010         	goto	u3241
  6212  002038  EF20  F010         	goto	u3240
  6213  00203C                     u3241:
  6214  00203C  EF22  F010         	goto	l3254
  6215  002040                     u3240:
  6216  002040  0E00               	movlw	0
  6217  002042  6E0D               	movwf	___fladd@signs^0,c
  6218  002044                     l3254:
  6219  002044  A00F               	btfss	___fladd@bexp^0,0,c
  6220  002046  EF27  F010         	goto	u3251
  6221  00204A  EF29  F010         	goto	u3250
  6222  00204E                     u3251:
  6223  00204E  EF2C  F010         	goto	l3258
  6224  002052                     u3250:
  6225  002052  8E03               	bsf	(___fladd@b+2)^0,7,c
  6226  002054  EF2D  F010         	goto	l3260
  6227  002058                     l3258:
  6228  002058  9E03               	bcf	(___fladd@b+2)^0,7,c
  6229  00205A                     l3260:
  6230  00205A  90D8               	bcf	status,0,c
  6231  00205C  300F               	rrcf	___fladd@bexp^0,w,c
  6232  00205E  6E04               	movwf	(___fladd@b+3)^0,c
  6233  002060  AE0D               	btfss	___fladd@signs^0,7,c
  6234  002062  EF35  F010         	goto	u3261
  6235  002066  EF37  F010         	goto	u3260
  6236  00206A                     u3261:
  6237  00206A  EF38  F010         	goto	l3266
  6238  00206E                     u3260:
  6239  00206E  8E04               	bsf	(___fladd@b+3)^0,7,c
  6240  002070                     l3266:
  6241  002070  C001  F001         	movff	___fladd@b,?___fladd
  6242  002074  C002  F002         	movff	___fladd@b+1,?___fladd+1
  6243  002078  C003  F003         	movff	___fladd@b+2,?___fladd+2
  6244  00207C  C004  F004         	movff	___fladd@b+3,?___fladd+3
  6245  002080                     l679:
  6246  002080  0012               	return		;funcret
  6247  002082                     __end_of___fladd:
  6248                           	callstack 0
  6249                           
  6250 ;; *************** function ___flneg *****************
  6251 ;; Defined at:
  6252 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flneg.c"
  6253 ;; Parameters:    Size  Location     Type
  6254 ;;  f1              4    0[COMRAM] unsigned char 
  6255 ;; Auto vars:     Size  Location     Type
  6256 ;;		None
  6257 ;; Return value:  Size  Location     Type
  6258 ;;                  4    0[COMRAM] unsigned char 
  6259 ;; Registers used:
  6260 ;;		wreg, status,2, status,0
  6261 ;; Tracked objects:
  6262 ;;		On entry : 0/0
  6263 ;;		On exit  : 0/0
  6264 ;;		Unchanged: 0/0
  6265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6266 ;;      Params:         4       0       0       0       0       0       0       0       0
  6267 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6268 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6269 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6270 ;;Total ram usage:        4 bytes
  6271 ;; Hardware stack levels used: 1
  6272 ;; This function calls:
  6273 ;;		Nothing
  6274 ;; This function is called by:
  6275 ;;		_efgtoa
  6276 ;; This function uses a non-reentrant model
  6277 ;;
  6278                           
  6279                           	psect	text18
  6280  004216                     __ptext18:
  6281                           	callstack 0
  6282  004216                     ___flneg:
  6283                           	callstack 25
  6284  004216  5001               	movf	___flneg@f1^0,w,c
  6285  004218  1002               	iorwf	(___flneg@f1+1)^0,w,c
  6286  00421A  1003               	iorwf	(___flneg@f1+2)^0,w,c
  6287  00421C  1004               	iorwf	(___flneg@f1+3)^0,w,c
  6288  00421E  B4D8               	btfsc	status,2,c
  6289  004220  EF14  F021         	goto	u4061
  6290  004224  EF16  F021         	goto	u4060
  6291  004228                     u4061:
  6292  004228  EF1E  F021         	goto	l3774
  6293  00422C                     u4060:
  6294  00422C  0E00               	movlw	0
  6295  00422E  1A01               	xorwf	___flneg@f1^0,f,c
  6296  004230  0E00               	movlw	0
  6297  004232  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  6298  004234  0E00               	movlw	0
  6299  004236  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  6300  004238  0E80               	movlw	128
  6301  00423A  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  6302  00423C                     l3774:
  6303  00423C  C001  F001         	movff	___flneg@f1,?___flneg
  6304  004240  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  6305  004244  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  6306  004248  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  6307  00424C  0012               	return		;funcret
  6308  00424E                     __end_of___flneg:
  6309                           	callstack 0
  6310                           
  6311 ;; *************** function ___flmul *****************
  6312 ;; Defined at:
  6313 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcmul.c"
  6314 ;; Parameters:    Size  Location     Type
  6315 ;;  b               4    0[COMRAM] unsigned char 
  6316 ;;  a               4    4[COMRAM] unsigned char 
  6317 ;; Auto vars:     Size  Location     Type
  6318 ;;  prod            4   19[COMRAM] struct .
  6319 ;;  grs             4   13[COMRAM] unsigned long 
  6320 ;;  temp            2   23[COMRAM] struct .
  6321 ;;  bexp            1   18[COMRAM] unsigned char 
  6322 ;;  aexp            1   17[COMRAM] unsigned char 
  6323 ;;  sign            1   12[COMRAM] unsigned char 
  6324 ;; Return value:  Size  Location     Type
  6325 ;;                  4    0[COMRAM] unsigned char 
  6326 ;; Registers used:
  6327 ;;		wreg, status,2, status,0, prodl, prodh
  6328 ;; Tracked objects:
  6329 ;;		On entry : 0/0
  6330 ;;		On exit  : 0/0
  6331 ;;		Unchanged: 0/0
  6332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6333 ;;      Params:         8       0       0       0       0       0       0       0       0
  6334 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6335 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6336 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6337 ;;Total ram usage:       25 bytes
  6338 ;; Hardware stack levels used: 1
  6339 ;; This function calls:
  6340 ;;		Nothing
  6341 ;; This function is called by:
  6342 ;;		_efgtoa
  6343 ;; This function uses a non-reentrant model
  6344 ;;
  6345                           
  6346                           	psect	text19
  6347  002082                     __ptext19:
  6348                           	callstack 0
  6349  002082                     ___flmul:
  6350                           	callstack 25
  6351  002082  5004               	movf	(___flmul@b+3)^0,w,c
  6352  002084  0B80               	andlw	128
  6353  002086  6E0D               	movwf	___flmul@sign^0,c
  6354  002088  5004               	movf	(___flmul@b+3)^0,w,c
  6355  00208A  2404               	addwf	(___flmul@b+3)^0,w,c
  6356  00208C  6E13               	movwf	___flmul@bexp^0,c
  6357  00208E  AE03               	btfss	(___flmul@b+2)^0,7,c
  6358  002090  EF4C  F010         	goto	u3671
  6359  002094  EF4E  F010         	goto	u3670
  6360  002098                     u3671:
  6361  002098  EF4F  F010         	goto	l3522
  6362  00209C                     u3670:
  6363  00209C  8013               	bsf	___flmul@bexp^0,0,c
  6364  00209E                     l3522:
  6365  00209E  5013               	movf	___flmul@bexp^0,w,c
  6366  0020A0  B4D8               	btfsc	status,2,c
  6367  0020A2  EF55  F010         	goto	u3681
  6368  0020A6  EF57  F010         	goto	u3680
  6369  0020AA                     u3681:
  6370  0020AA  EF6A  F010         	goto	l3530
  6371  0020AE                     u3680:
  6372  0020AE  2813               	incf	___flmul@bexp^0,w,c
  6373  0020B0  A4D8               	btfss	status,2,c
  6374  0020B2  EF5D  F010         	goto	u3691
  6375  0020B6  EF5F  F010         	goto	u3690
  6376  0020BA                     u3691:
  6377  0020BA  EF67  F010         	goto	l3528
  6378  0020BE                     u3690:
  6379  0020BE  0E00               	movlw	0
  6380  0020C0  6E01               	movwf	___flmul@b^0,c
  6381  0020C2  0E00               	movlw	0
  6382  0020C4  6E02               	movwf	(___flmul@b+1)^0,c
  6383  0020C6  0E00               	movlw	0
  6384  0020C8  6E03               	movwf	(___flmul@b+2)^0,c
  6385  0020CA  0E00               	movlw	0
  6386  0020CC  6E04               	movwf	(___flmul@b+3)^0,c
  6387  0020CE                     l3528:
  6388  0020CE  8E03               	bsf	(___flmul@b+2)^0,7,c
  6389  0020D0  EF72  F010         	goto	l3532
  6390  0020D4                     l3530:
  6391  0020D4  0E00               	movlw	0
  6392  0020D6  6E01               	movwf	___flmul@b^0,c
  6393  0020D8  0E00               	movlw	0
  6394  0020DA  6E02               	movwf	(___flmul@b+1)^0,c
  6395  0020DC  0E00               	movlw	0
  6396  0020DE  6E03               	movwf	(___flmul@b+2)^0,c
  6397  0020E0  0E00               	movlw	0
  6398  0020E2  6E04               	movwf	(___flmul@b+3)^0,c
  6399  0020E4                     l3532:
  6400  0020E4  5008               	movf	(___flmul@a+3)^0,w,c
  6401  0020E6  0B80               	andlw	128
  6402  0020E8  1A0D               	xorwf	___flmul@sign^0,f,c
  6403  0020EA  5008               	movf	(___flmul@a+3)^0,w,c
  6404  0020EC  2408               	addwf	(___flmul@a+3)^0,w,c
  6405  0020EE  6E12               	movwf	___flmul@aexp^0,c
  6406  0020F0  AE07               	btfss	(___flmul@a+2)^0,7,c
  6407  0020F2  EF7D  F010         	goto	u3701
  6408  0020F6  EF7F  F010         	goto	u3700
  6409  0020FA                     u3701:
  6410  0020FA  EF80  F010         	goto	l3540
  6411  0020FE                     u3700:
  6412  0020FE  8012               	bsf	___flmul@aexp^0,0,c
  6413  002100                     l3540:
  6414  002100  5012               	movf	___flmul@aexp^0,w,c
  6415  002102  B4D8               	btfsc	status,2,c
  6416  002104  EF86  F010         	goto	u3711
  6417  002108  EF88  F010         	goto	u3710
  6418  00210C                     u3711:
  6419  00210C  EF9B  F010         	goto	l3548
  6420  002110                     u3710:
  6421  002110  2812               	incf	___flmul@aexp^0,w,c
  6422  002112  A4D8               	btfss	status,2,c
  6423  002114  EF8E  F010         	goto	u3721
  6424  002118  EF90  F010         	goto	u3720
  6425  00211C                     u3721:
  6426  00211C  EF98  F010         	goto	l3546
  6427  002120                     u3720:
  6428  002120  0E00               	movlw	0
  6429  002122  6E05               	movwf	___flmul@a^0,c
  6430  002124  0E00               	movlw	0
  6431  002126  6E06               	movwf	(___flmul@a+1)^0,c
  6432  002128  0E00               	movlw	0
  6433  00212A  6E07               	movwf	(___flmul@a+2)^0,c
  6434  00212C  0E00               	movlw	0
  6435  00212E  6E08               	movwf	(___flmul@a+3)^0,c
  6436  002130                     l3546:
  6437  002130  8E07               	bsf	(___flmul@a+2)^0,7,c
  6438  002132  EFA3  F010         	goto	l756
  6439  002136                     l3548:
  6440  002136  0E00               	movlw	0
  6441  002138  6E05               	movwf	___flmul@a^0,c
  6442  00213A  0E00               	movlw	0
  6443  00213C  6E06               	movwf	(___flmul@a+1)^0,c
  6444  00213E  0E00               	movlw	0
  6445  002140  6E07               	movwf	(___flmul@a+2)^0,c
  6446  002142  0E00               	movlw	0
  6447  002144  6E08               	movwf	(___flmul@a+3)^0,c
  6448  002146                     l756:
  6449  002146  5012               	movf	___flmul@aexp^0,w,c
  6450  002148  B4D8               	btfsc	status,2,c
  6451  00214A  EFA9  F010         	goto	u3731
  6452  00214E  EFAB  F010         	goto	u3730
  6453  002152                     u3731:
  6454  002152  EFB3  F010         	goto	l3552
  6455  002156                     u3730:
  6456  002156  5013               	movf	___flmul@bexp^0,w,c
  6457  002158  A4D8               	btfss	status,2,c
  6458  00215A  EFB1  F010         	goto	u3741
  6459  00215E  EFB3  F010         	goto	u3740
  6460  002162                     u3741:
  6461  002162  EFBD  F010         	goto	l3556
  6462  002166                     u3740:
  6463  002166                     l3552:
  6464  002166  0E00               	movlw	0
  6465  002168  6E01               	movwf	?___flmul^0,c
  6466  00216A  0E00               	movlw	0
  6467  00216C  6E02               	movwf	(?___flmul+1)^0,c
  6468  00216E  0E00               	movlw	0
  6469  002170  6E03               	movwf	(?___flmul+2)^0,c
  6470  002172  0E00               	movlw	0
  6471  002174  6E04               	movwf	(?___flmul+3)^0,c
  6472  002176  EF55  F012         	goto	l760
  6473  00217A                     l3556:
  6474  00217A  5007               	movf	(___flmul@a+2)^0,w,c
  6475  00217C  0201               	mulwf	___flmul@b^0,c
  6476  00217E  CFF3 F018          	movff	prodl,___flmul@temp
  6477  002182  CFF4 F019          	movff	prodh,___flmul@temp+1
  6478  002186  5018               	movf	___flmul@temp^0,w,c
  6479  002188  6E0E               	movwf	___flmul@grs^0,c
  6480  00218A  6A0F               	clrf	(___flmul@grs+1)^0,c
  6481  00218C  6A10               	clrf	(___flmul@grs+2)^0,c
  6482  00218E  6A11               	clrf	(___flmul@grs+3)^0,c
  6483  002190  5019               	movf	(___flmul@temp+1)^0,w,c
  6484  002192  6E14               	movwf	___flmul@prod^0,c
  6485  002194  6A15               	clrf	(___flmul@prod+1)^0,c
  6486  002196  6A16               	clrf	(___flmul@prod+2)^0,c
  6487  002198  6A17               	clrf	(___flmul@prod+3)^0,c
  6488  00219A  5006               	movf	(___flmul@a+1)^0,w,c
  6489  00219C  0202               	mulwf	(___flmul@b+1)^0,c
  6490  00219E  CFF3 F018          	movff	prodl,___flmul@temp
  6491  0021A2  CFF4 F019          	movff	prodh,___flmul@temp+1
  6492  0021A6  5018               	movf	___flmul@temp^0,w,c
  6493  0021A8  260E               	addwf	___flmul@grs^0,f,c
  6494  0021AA  0E00               	movlw	0
  6495  0021AC  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6496  0021AE  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6497  0021B0  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6498  0021B2  5019               	movf	(___flmul@temp+1)^0,w,c
  6499  0021B4  2614               	addwf	___flmul@prod^0,f,c
  6500  0021B6  0E00               	movlw	0
  6501  0021B8  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6502  0021BA  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6503  0021BC  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6504  0021BE  5005               	movf	___flmul@a^0,w,c
  6505  0021C0  0203               	mulwf	(___flmul@b+2)^0,c
  6506  0021C2  CFF3 F018          	movff	prodl,___flmul@temp
  6507  0021C6  CFF4 F019          	movff	prodh,___flmul@temp+1
  6508  0021CA  5018               	movf	___flmul@temp^0,w,c
  6509  0021CC  260E               	addwf	___flmul@grs^0,f,c
  6510  0021CE  0E00               	movlw	0
  6511  0021D0  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6512  0021D2  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6513  0021D4  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6514  0021D6  5019               	movf	(___flmul@temp+1)^0,w,c
  6515  0021D8  2614               	addwf	___flmul@prod^0,f,c
  6516  0021DA  0E00               	movlw	0
  6517  0021DC  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6518  0021DE  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6519  0021E0  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6520  0021E2  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  6521  0021E6  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  6522  0021EA  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  6523  0021EE  6A0E               	clrf	___flmul@grs^0,c
  6524  0021F0  5005               	movf	___flmul@a^0,w,c
  6525  0021F2  0202               	mulwf	(___flmul@b+1)^0,c
  6526  0021F4  CFF3 F018          	movff	prodl,___flmul@temp
  6527  0021F8  CFF4 F019          	movff	prodh,___flmul@temp+1
  6528  0021FC  5018               	movf	___flmul@temp^0,w,c
  6529  0021FE  260E               	addwf	___flmul@grs^0,f,c
  6530  002200  5019               	movf	(___flmul@temp+1)^0,w,c
  6531  002202  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6532  002204  0E00               	movlw	0
  6533  002206  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6534  002208  0E00               	movlw	0
  6535  00220A  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6536  00220C  5006               	movf	(___flmul@a+1)^0,w,c
  6537  00220E  0201               	mulwf	___flmul@b^0,c
  6538  002210  CFF3 F018          	movff	prodl,___flmul@temp
  6539  002214  CFF4 F019          	movff	prodh,___flmul@temp+1
  6540  002218  5018               	movf	___flmul@temp^0,w,c
  6541  00221A  260E               	addwf	___flmul@grs^0,f,c
  6542  00221C  5019               	movf	(___flmul@temp+1)^0,w,c
  6543  00221E  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6544  002220  0E00               	movlw	0
  6545  002222  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6546  002224  0E00               	movlw	0
  6547  002226  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6548  002228  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  6549  00222C  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  6550  002230  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  6551  002234  6A0E               	clrf	___flmul@grs^0,c
  6552  002236  5005               	movf	___flmul@a^0,w,c
  6553  002238  0201               	mulwf	___flmul@b^0,c
  6554  00223A  CFF3 F018          	movff	prodl,___flmul@temp
  6555  00223E  CFF4 F019          	movff	prodh,___flmul@temp+1
  6556  002242  5018               	movf	___flmul@temp^0,w,c
  6557  002244  260E               	addwf	___flmul@grs^0,f,c
  6558  002246  5019               	movf	(___flmul@temp+1)^0,w,c
  6559  002248  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6560  00224A  0E00               	movlw	0
  6561  00224C  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6562  00224E  0E00               	movlw	0
  6563  002250  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6564  002252  5007               	movf	(___flmul@a+2)^0,w,c
  6565  002254  0202               	mulwf	(___flmul@b+1)^0,c
  6566  002256  CFF3 F018          	movff	prodl,___flmul@temp
  6567  00225A  CFF4 F019          	movff	prodh,___flmul@temp+1
  6568  00225E  5018               	movf	___flmul@temp^0,w,c
  6569  002260  2614               	addwf	___flmul@prod^0,f,c
  6570  002262  5019               	movf	(___flmul@temp+1)^0,w,c
  6571  002264  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6572  002266  0E00               	movlw	0
  6573  002268  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6574  00226A  0E00               	movlw	0
  6575  00226C  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6576  00226E  5006               	movf	(___flmul@a+1)^0,w,c
  6577  002270  0203               	mulwf	(___flmul@b+2)^0,c
  6578  002272  CFF3 F018          	movff	prodl,___flmul@temp
  6579  002276  CFF4 F019          	movff	prodh,___flmul@temp+1
  6580  00227A  5018               	movf	___flmul@temp^0,w,c
  6581  00227C  2614               	addwf	___flmul@prod^0,f,c
  6582  00227E  5019               	movf	(___flmul@temp+1)^0,w,c
  6583  002280  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6584  002282  0E00               	movlw	0
  6585  002284  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6586  002286  0E00               	movlw	0
  6587  002288  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6588  00228A  5007               	movf	(___flmul@a+2)^0,w,c
  6589  00228C  0203               	mulwf	(___flmul@b+2)^0,c
  6590  00228E  CFF3 F018          	movff	prodl,___flmul@temp
  6591  002292  CFF4 F019          	movff	prodh,___flmul@temp+1
  6592  002296  5018               	movf	___flmul@temp^0,w,c
  6593  002298  6E09               	movwf	??___flmul^0,c
  6594  00229A  5019               	movf	(___flmul@temp+1)^0,w,c
  6595  00229C  6E0A               	movwf	(??___flmul+1)^0,c
  6596  00229E  6A0B               	clrf	(??___flmul+2)^0,c
  6597  0022A0  6A0C               	clrf	(??___flmul+3)^0,c
  6598  0022A2  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  6599  0022A6  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  6600  0022AA  C009  F00A         	movff	??___flmul,??___flmul+1
  6601  0022AE  6A09               	clrf	??___flmul^0,c
  6602  0022B0  5009               	movf	??___flmul^0,w,c
  6603  0022B2  2614               	addwf	___flmul@prod^0,f,c
  6604  0022B4  500A               	movf	(??___flmul+1)^0,w,c
  6605  0022B6  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6606  0022B8  500B               	movf	(??___flmul+2)^0,w,c
  6607  0022BA  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6608  0022BC  500C               	movf	(??___flmul+3)^0,w,c
  6609  0022BE  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6610  0022C0  C00E  F009         	movff	___flmul@grs,??___flmul
  6611  0022C4  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  6612  0022C8  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  6613  0022CC  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  6614  0022D0  0E19               	movlw	25
  6615  0022D2  EF70  F011         	goto	u3750
  6616  0022D6                     u3755:
  6617  0022D6  90D8               	bcf	status,0,c
  6618  0022D8  320C               	rrcf	(??___flmul+3)^0,f,c
  6619  0022DA  320B               	rrcf	(??___flmul+2)^0,f,c
  6620  0022DC  320A               	rrcf	(??___flmul+1)^0,f,c
  6621  0022DE  3209               	rrcf	??___flmul^0,f,c
  6622  0022E0                     u3750:
  6623  0022E0  2EE8               	decfsz	wreg,f,c
  6624  0022E2  EF6B  F011         	goto	u3755
  6625  0022E6  5009               	movf	??___flmul^0,w,c
  6626  0022E8  2614               	addwf	___flmul@prod^0,f,c
  6627  0022EA  500A               	movf	(??___flmul+1)^0,w,c
  6628  0022EC  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6629  0022EE  500B               	movf	(??___flmul+2)^0,w,c
  6630  0022F0  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6631  0022F2  500C               	movf	(??___flmul+3)^0,w,c
  6632  0022F4  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6633  0022F6  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  6634  0022FA  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  6635  0022FE  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  6636  002302  6A0E               	clrf	___flmul@grs^0,c
  6637  002304  5012               	movf	___flmul@aexp^0,w,c
  6638  002306  C013  F009         	movff	___flmul@bexp,??___flmul
  6639  00230A  6A0A               	clrf	(??___flmul+1)^0,c
  6640  00230C  2609               	addwf	??___flmul^0,f,c
  6641  00230E  0E00               	movlw	0
  6642  002310  220A               	addwfc	(??___flmul+1)^0,f,c
  6643  002312  0E82               	movlw	130
  6644  002314  2409               	addwf	??___flmul^0,w,c
  6645  002316  6E18               	movwf	___flmul@temp^0,c
  6646  002318  0EFF               	movlw	255
  6647  00231A  200A               	addwfc	(??___flmul+1)^0,w,c
  6648  00231C  6E19               	movwf	(___flmul@temp+1)^0,c
  6649  00231E  EFA6  F011         	goto	l3604
  6650  002322                     l3598:
  6651  002322  90D8               	bcf	status,0,c
  6652  002324  3614               	rlcf	___flmul@prod^0,f,c
  6653  002326  3615               	rlcf	(___flmul@prod+1)^0,f,c
  6654  002328  3616               	rlcf	(___flmul@prod+2)^0,f,c
  6655  00232A  3617               	rlcf	(___flmul@prod+3)^0,f,c
  6656  00232C  AE11               	btfss	(___flmul@grs+3)^0,7,c
  6657  00232E  EF9B  F011         	goto	u3761
  6658  002332  EF9D  F011         	goto	u3760
  6659  002336                     u3761:
  6660  002336  EF9E  F011         	goto	l763
  6661  00233A                     u3760:
  6662  00233A  8014               	bsf	___flmul@prod^0,0,c
  6663  00233C                     l763:
  6664  00233C  90D8               	bcf	status,0,c
  6665  00233E  360E               	rlcf	___flmul@grs^0,f,c
  6666  002340  360F               	rlcf	(___flmul@grs+1)^0,f,c
  6667  002342  3610               	rlcf	(___flmul@grs+2)^0,f,c
  6668  002344  3611               	rlcf	(___flmul@grs+3)^0,f,c
  6669  002346  0618               	decf	___flmul@temp^0,f,c
  6670  002348  A0D8               	btfss	status,0,c
  6671  00234A  0619               	decf	(___flmul@temp+1)^0,f,c
  6672  00234C                     l3604:
  6673  00234C  AE16               	btfss	(___flmul@prod+2)^0,7,c
  6674  00234E  EFAB  F011         	goto	u3771
  6675  002352  EFAD  F011         	goto	u3770
  6676  002356                     u3771:
  6677  002356  EF91  F011         	goto	l3598
  6678  00235A                     u3770:
  6679  00235A  0E00               	movlw	0
  6680  00235C  6E12               	movwf	___flmul@aexp^0,c
  6681  00235E  AE11               	btfss	(___flmul@grs+3)^0,7,c
  6682  002360  EFB4  F011         	goto	u3781
  6683  002364  EFB6  F011         	goto	u3780
  6684  002368                     u3781:
  6685  002368  EFDA  F011         	goto	l765
  6686  00236C                     u3780:
  6687  00236C  0EFF               	movlw	255
  6688  00236E  140E               	andwf	___flmul@grs^0,w,c
  6689  002370  6E09               	movwf	??___flmul^0,c
  6690  002372  0EFF               	movlw	255
  6691  002374  140F               	andwf	(___flmul@grs+1)^0,w,c
  6692  002376  6E0A               	movwf	(??___flmul+1)^0,c
  6693  002378  0EFF               	movlw	255
  6694  00237A  1410               	andwf	(___flmul@grs+2)^0,w,c
  6695  00237C  6E0B               	movwf	(??___flmul+2)^0,c
  6696  00237E  0E7F               	movlw	127
  6697  002380  1411               	andwf	(___flmul@grs+3)^0,w,c
  6698  002382  6E0C               	movwf	(??___flmul+3)^0,c
  6699  002384  5009               	movf	??___flmul^0,w,c
  6700  002386  100A               	iorwf	(??___flmul+1)^0,w,c
  6701  002388  100B               	iorwf	(??___flmul+2)^0,w,c
  6702  00238A  100C               	iorwf	(??___flmul+3)^0,w,c
  6703  00238C  B4D8               	btfsc	status,2,c
  6704  00238E  EFCB  F011         	goto	u3791
  6705  002392  EFCD  F011         	goto	u3790
  6706  002396                     u3791:
  6707  002396  EFD1  F011         	goto	l766
  6708  00239A                     u3790:
  6709  00239A                     l3612:
  6710  00239A  0E01               	movlw	1
  6711  00239C  6E12               	movwf	___flmul@aexp^0,c
  6712  00239E  EFDA  F011         	goto	l765
  6713  0023A2                     l766:
  6714  0023A2  A014               	btfss	___flmul@prod^0,0,c
  6715  0023A4  EFD6  F011         	goto	u3801
  6716  0023A8  EFD8  F011         	goto	u3800
  6717  0023AC                     u3801:
  6718  0023AC  EFDA  F011         	goto	l765
  6719  0023B0                     u3800:
  6720  0023B0  EFCD  F011         	goto	l3612
  6721  0023B4                     l765:
  6722  0023B4  5012               	movf	___flmul@aexp^0,w,c
  6723  0023B6  B4D8               	btfsc	status,2,c
  6724  0023B8  EFE0  F011         	goto	u3811
  6725  0023BC  EFE2  F011         	goto	u3810
  6726  0023C0                     u3811:
  6727  0023C0  EF06  F012         	goto	l3624
  6728  0023C4                     u3810:
  6729  0023C4  0E01               	movlw	1
  6730  0023C6  2614               	addwf	___flmul@prod^0,f,c
  6731  0023C8  0E00               	movlw	0
  6732  0023CA  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6733  0023CC  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6734  0023CE  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6735  0023D0  A017               	btfss	(___flmul@prod+3)^0,0,c
  6736  0023D2  EFED  F011         	goto	u3821
  6737  0023D6  EFEF  F011         	goto	u3820
  6738  0023DA                     u3821:
  6739  0023DA  EF06  F012         	goto	l3624
  6740  0023DE                     u3820:
  6741  0023DE  C014  F009         	movff	___flmul@prod,??___flmul
  6742  0023E2  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  6743  0023E6  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  6744  0023EA  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  6745  0023EE  340C               	rlcf	(??___flmul+3)^0,w,c
  6746  0023F0  320C               	rrcf	(??___flmul+3)^0,f,c
  6747  0023F2  320B               	rrcf	(??___flmul+2)^0,f,c
  6748  0023F4  320A               	rrcf	(??___flmul+1)^0,f,c
  6749  0023F6  3209               	rrcf	??___flmul^0,f,c
  6750  0023F8  C009  F014         	movff	??___flmul,___flmul@prod
  6751  0023FC  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  6752  002400  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  6753  002404  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  6754  002408  4A18               	infsnz	___flmul@temp^0,f,c
  6755  00240A  2A19               	incf	(___flmul@temp+1)^0,f,c
  6756  00240C                     l3624:
  6757  00240C  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  6758  00240E  EF11  F012         	goto	u3831
  6759  002412  5019               	movf	(___flmul@temp+1)^0,w,c
  6760  002414  E108               	bnz	u3830
  6761  002416  2818               	incf	___flmul@temp^0,w,c
  6762  002418  A0D8               	btfss	status,0,c
  6763  00241A  EF11  F012         	goto	u3831
  6764  00241E  EF13  F012         	goto	u3830
  6765  002422                     u3831:
  6766  002422  EF1D  F012         	goto	l3628
  6767  002426                     u3830:
  6768  002426  0E00               	movlw	0
  6769  002428  6E14               	movwf	___flmul@prod^0,c
  6770  00242A  0E00               	movlw	0
  6771  00242C  6E15               	movwf	(___flmul@prod+1)^0,c
  6772  00242E  0E80               	movlw	128
  6773  002430  6E16               	movwf	(___flmul@prod+2)^0,c
  6774  002432  0E7F               	movlw	127
  6775  002434  6E17               	movwf	(___flmul@prod+3)^0,c
  6776  002436  EF4B  F012         	goto	l3640
  6777  00243A                     l3628:
  6778  00243A  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  6779  00243C  EF2A  F012         	goto	u3840
  6780  002440  5019               	movf	(___flmul@temp+1)^0,w,c
  6781  002442  E106               	bnz	u3841
  6782  002444  0418               	decf	___flmul@temp^0,w,c
  6783  002446  B0D8               	btfsc	status,0,c
  6784  002448  EF28  F012         	goto	u3841
  6785  00244C  EF2A  F012         	goto	u3840
  6786  002450                     u3841:
  6787  002450  EF36  F012         	goto	l773
  6788  002454                     u3840:
  6789  002454  0E00               	movlw	0
  6790  002456  6E14               	movwf	___flmul@prod^0,c
  6791  002458  0E00               	movlw	0
  6792  00245A  6E15               	movwf	(___flmul@prod+1)^0,c
  6793  00245C  0E00               	movlw	0
  6794  00245E  6E16               	movwf	(___flmul@prod+2)^0,c
  6795  002460  0E00               	movlw	0
  6796  002462  6E17               	movwf	(___flmul@prod+3)^0,c
  6797  002464  0E00               	movlw	0
  6798  002466  6E0D               	movwf	___flmul@sign^0,c
  6799  002468  EF4B  F012         	goto	l3640
  6800  00246C                     l773:
  6801  00246C  C018  F013         	movff	___flmul@temp,___flmul@bexp
  6802  002470  0EFF               	movlw	255
  6803  002472  1614               	andwf	___flmul@prod^0,f,c
  6804  002474  0EFF               	movlw	255
  6805  002476  1615               	andwf	(___flmul@prod+1)^0,f,c
  6806  002478  0E7F               	movlw	127
  6807  00247A  1616               	andwf	(___flmul@prod+2)^0,f,c
  6808  00247C  0E00               	movlw	0
  6809  00247E  1617               	andwf	(___flmul@prod+3)^0,f,c
  6810  002480  A013               	btfss	___flmul@bexp^0,0,c
  6811  002482  EF45  F012         	goto	u3851
  6812  002486  EF47  F012         	goto	u3850
  6813  00248A                     u3851:
  6814  00248A  EF48  F012         	goto	l3638
  6815  00248E                     u3850:
  6816  00248E  8E16               	bsf	(___flmul@prod+2)^0,7,c
  6817  002490                     l3638:
  6818  002490  90D8               	bcf	status,0,c
  6819  002492  3013               	rrcf	___flmul@bexp^0,w,c
  6820  002494  6E17               	movwf	(___flmul@prod+3)^0,c
  6821  002496                     l3640:
  6822  002496  500D               	movf	___flmul@sign^0,w,c
  6823  002498  1217               	iorwf	(___flmul@prod+3)^0,f,c
  6824  00249A  C014  F001         	movff	___flmul@prod,?___flmul
  6825  00249E  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  6826  0024A2  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  6827  0024A6  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  6828  0024AA                     l760:
  6829  0024AA  0012               	return		;funcret
  6830  0024AC                     __end_of___flmul:
  6831                           	callstack 0
  6832                           
  6833 ;; *************** function ___flge *****************
  6834 ;; Defined at:
  6835 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flge.c"
  6836 ;; Parameters:    Size  Location     Type
  6837 ;;  ff1             4   25[COMRAM] unsigned char 
  6838 ;;  ff2             4   29[COMRAM] unsigned char 
  6839 ;; Auto vars:     Size  Location     Type
  6840 ;;		None
  6841 ;; Return value:  Size  Location     Type
  6842 ;;		None               void
  6843 ;; Registers used:
  6844 ;;		wreg, status,2, status,0
  6845 ;; Tracked objects:
  6846 ;;		On entry : 0/0
  6847 ;;		On exit  : 0/0
  6848 ;;		Unchanged: 0/0
  6849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6850 ;;      Params:         8       0       0       0       0       0       0       0       0
  6851 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6852 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6853 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6854 ;;Total ram usage:       12 bytes
  6855 ;; Hardware stack levels used: 1
  6856 ;; This function calls:
  6857 ;;		Nothing
  6858 ;; This function is called by:
  6859 ;;		_efgtoa
  6860 ;; This function uses a non-reentrant model
  6861 ;;
  6862                           
  6863                           	psect	text20
  6864  003488                     __ptext20:
  6865                           	callstack 0
  6866  003488                     ___flge:
  6867                           	callstack 25
  6868  003488  0E00               	movlw	0
  6869  00348A  141A               	andwf	___flge@ff1^0,w,c
  6870  00348C  6E22               	movwf	??___flge^0,c
  6871  00348E  0E00               	movlw	0
  6872  003490  141B               	andwf	(___flge@ff1+1)^0,w,c
  6873  003492  6E23               	movwf	(??___flge+1)^0,c
  6874  003494  0E80               	movlw	128
  6875  003496  141C               	andwf	(___flge@ff1+2)^0,w,c
  6876  003498  6E24               	movwf	(??___flge+2)^0,c
  6877  00349A  0E7F               	movlw	127
  6878  00349C  141D               	andwf	(___flge@ff1+3)^0,w,c
  6879  00349E  6E25               	movwf	(??___flge+3)^0,c
  6880  0034A0  5022               	movf	??___flge^0,w,c
  6881  0034A2  1023               	iorwf	(??___flge+1)^0,w,c
  6882  0034A4  1024               	iorwf	(??___flge+2)^0,w,c
  6883  0034A6  1025               	iorwf	(??___flge+3)^0,w,c
  6884  0034A8  A4D8               	btfss	status,2,c
  6885  0034AA  EF59  F01A         	goto	u4011
  6886  0034AE  EF5B  F01A         	goto	u4010
  6887  0034B2                     u4011:
  6888  0034B2  EF63  F01A         	goto	l3752
  6889  0034B6                     u4010:
  6890  0034B6  0E00               	movlw	0
  6891  0034B8  6E1A               	movwf	___flge@ff1^0,c
  6892  0034BA  0E00               	movlw	0
  6893  0034BC  6E1B               	movwf	(___flge@ff1+1)^0,c
  6894  0034BE  0E00               	movlw	0
  6895  0034C0  6E1C               	movwf	(___flge@ff1+2)^0,c
  6896  0034C2  0E00               	movlw	0
  6897  0034C4  6E1D               	movwf	(___flge@ff1+3)^0,c
  6898  0034C6                     l3752:
  6899  0034C6  0E00               	movlw	0
  6900  0034C8  141E               	andwf	___flge@ff2^0,w,c
  6901  0034CA  6E22               	movwf	??___flge^0,c
  6902  0034CC  0E00               	movlw	0
  6903  0034CE  141F               	andwf	(___flge@ff2+1)^0,w,c
  6904  0034D0  6E23               	movwf	(??___flge+1)^0,c
  6905  0034D2  0E80               	movlw	128
  6906  0034D4  1420               	andwf	(___flge@ff2+2)^0,w,c
  6907  0034D6  6E24               	movwf	(??___flge+2)^0,c
  6908  0034D8  0E7F               	movlw	127
  6909  0034DA  1421               	andwf	(___flge@ff2+3)^0,w,c
  6910  0034DC  6E25               	movwf	(??___flge+3)^0,c
  6911  0034DE  5022               	movf	??___flge^0,w,c
  6912  0034E0  1023               	iorwf	(??___flge+1)^0,w,c
  6913  0034E2  1024               	iorwf	(??___flge+2)^0,w,c
  6914  0034E4  1025               	iorwf	(??___flge+3)^0,w,c
  6915  0034E6  A4D8               	btfss	status,2,c
  6916  0034E8  EF78  F01A         	goto	u4021
  6917  0034EC  EF7A  F01A         	goto	u4020
  6918  0034F0                     u4021:
  6919  0034F0  EF82  F01A         	goto	l3756
  6920  0034F4                     u4020:
  6921  0034F4  0E00               	movlw	0
  6922  0034F6  6E1E               	movwf	___flge@ff2^0,c
  6923  0034F8  0E00               	movlw	0
  6924  0034FA  6E1F               	movwf	(___flge@ff2+1)^0,c
  6925  0034FC  0E00               	movlw	0
  6926  0034FE  6E20               	movwf	(___flge@ff2+2)^0,c
  6927  003500  0E00               	movlw	0
  6928  003502  6E21               	movwf	(___flge@ff2+3)^0,c
  6929  003504                     l3756:
  6930  003504  AE1D               	btfss	(___flge@ff1+3)^0,7,c
  6931  003506  EF87  F01A         	goto	u4031
  6932  00350A  EF89  F01A         	goto	u4030
  6933  00350E                     u4031:
  6934  00350E  EF92  F01A         	goto	l3760
  6935  003512                     u4030:
  6936  003512  6C1A               	negf	___flge@ff1^0,c
  6937  003514  1E1B               	comf	(___flge@ff1+1)^0,f,c
  6938  003516  B0D8               	btfsc	status,0,c
  6939  003518  2A1B               	incf	(___flge@ff1+1)^0,f,c
  6940  00351A  1E1C               	comf	(___flge@ff1+2)^0,f,c
  6941  00351C  B0D8               	btfsc	status,0,c
  6942  00351E  2A1C               	incf	(___flge@ff1+2)^0,f,c
  6943  003520  0E80               	movlw	128
  6944  003522  561D               	subfwb	(___flge@ff1+3)^0,f,c
  6945  003524                     l3760:
  6946  003524  AE21               	btfss	(___flge@ff2+3)^0,7,c
  6947  003526  EF97  F01A         	goto	u4041
  6948  00352A  EF99  F01A         	goto	u4040
  6949  00352E                     u4041:
  6950  00352E  EFA2  F01A         	goto	l407
  6951  003532                     u4040:
  6952  003532  6C1E               	negf	___flge@ff2^0,c
  6953  003534  1E1F               	comf	(___flge@ff2+1)^0,f,c
  6954  003536  B0D8               	btfsc	status,0,c
  6955  003538  2A1F               	incf	(___flge@ff2+1)^0,f,c
  6956  00353A  1E20               	comf	(___flge@ff2+2)^0,f,c
  6957  00353C  B0D8               	btfsc	status,0,c
  6958  00353E  2A20               	incf	(___flge@ff2+2)^0,f,c
  6959  003540  0E80               	movlw	128
  6960  003542  5621               	subfwb	(___flge@ff2+3)^0,f,c
  6961  003544                     l407:
  6962  003544  0E00               	movlw	0
  6963  003546  1A1A               	xorwf	___flge@ff1^0,f,c
  6964  003548  0E00               	movlw	0
  6965  00354A  1A1B               	xorwf	(___flge@ff1+1)^0,f,c
  6966  00354C  0E00               	movlw	0
  6967  00354E  1A1C               	xorwf	(___flge@ff1+2)^0,f,c
  6968  003550  0E80               	movlw	128
  6969  003552  1A1D               	xorwf	(___flge@ff1+3)^0,f,c
  6970  003554  0E00               	movlw	0
  6971  003556  1A1E               	xorwf	___flge@ff2^0,f,c
  6972  003558  0E00               	movlw	0
  6973  00355A  1A1F               	xorwf	(___flge@ff2+1)^0,f,c
  6974  00355C  0E00               	movlw	0
  6975  00355E  1A20               	xorwf	(___flge@ff2+2)^0,f,c
  6976  003560  0E80               	movlw	128
  6977  003562  1A21               	xorwf	(___flge@ff2+3)^0,f,c
  6978  003564  501E               	movf	___flge@ff2^0,w,c
  6979  003566  5C1A               	subwf	___flge@ff1^0,w,c
  6980  003568  501F               	movf	(___flge@ff2+1)^0,w,c
  6981  00356A  581B               	subwfb	(___flge@ff1+1)^0,w,c
  6982  00356C  5020               	movf	(___flge@ff2+2)^0,w,c
  6983  00356E  581C               	subwfb	(___flge@ff1+2)^0,w,c
  6984  003570  5021               	movf	(___flge@ff2+3)^0,w,c
  6985  003572  581D               	subwfb	(___flge@ff1+3)^0,w,c
  6986  003574  B0D8               	btfsc	status,0,c
  6987  003576  EFBF  F01A         	goto	u4051
  6988  00357A  EFC1  F01A         	goto	u4050
  6989  00357E                     u4051:
  6990  00357E  EFC4  F01A         	goto	l3766
  6991  003582                     u4050:
  6992  003582  90D8               	bcf	status,0,c
  6993  003584  EFC5  F01A         	goto	l412
  6994  003588                     l3766:
  6995  003588  80D8               	bsf	status,0,c
  6996  00358A                     l412:
  6997  00358A  0012               	return		;funcret
  6998  00358C                     __end_of___flge:
  6999                           	callstack 0
  7000                           
  7001 ;; *************** function ___fleq *****************
  7002 ;; Defined at:
  7003 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fleq.c"
  7004 ;; Parameters:    Size  Location     Type
  7005 ;;  ff1             4    0[COMRAM] unsigned char 
  7006 ;;  ff2             4    4[COMRAM] unsigned char 
  7007 ;; Auto vars:     Size  Location     Type
  7008 ;;		None
  7009 ;; Return value:  Size  Location     Type
  7010 ;;		None               void
  7011 ;; Registers used:
  7012 ;;		wreg, status,2, status,0
  7013 ;; Tracked objects:
  7014 ;;		On entry : 0/0
  7015 ;;		On exit  : 0/0
  7016 ;;		Unchanged: 0/0
  7017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7018 ;;      Params:         8       0       0       0       0       0       0       0       0
  7019 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7020 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7021 ;;      Totals:        12       0       0       0       0       0       0       0       0
  7022 ;;Total ram usage:       12 bytes
  7023 ;; Hardware stack levels used: 1
  7024 ;; This function calls:
  7025 ;;		Nothing
  7026 ;; This function is called by:
  7027 ;;		_efgtoa
  7028 ;; This function uses a non-reentrant model
  7029 ;;
  7030                           
  7031                           	psect	text21
  7032  003C24                     __ptext21:
  7033                           	callstack 0
  7034  003C24                     ___fleq:
  7035                           	callstack 25
  7036  003C24  0E00               	movlw	0
  7037  003C26  1401               	andwf	___fleq@ff1^0,w,c
  7038  003C28  6E09               	movwf	??___fleq^0,c
  7039  003C2A  0E00               	movlw	0
  7040  003C2C  1402               	andwf	(___fleq@ff1+1)^0,w,c
  7041  003C2E  6E0A               	movwf	(??___fleq+1)^0,c
  7042  003C30  0E80               	movlw	128
  7043  003C32  1403               	andwf	(___fleq@ff1+2)^0,w,c
  7044  003C34  6E0B               	movwf	(??___fleq+2)^0,c
  7045  003C36  0E7F               	movlw	127
  7046  003C38  1404               	andwf	(___fleq@ff1+3)^0,w,c
  7047  003C3A  6E0C               	movwf	(??___fleq+3)^0,c
  7048  003C3C  5009               	movf	??___fleq^0,w,c
  7049  003C3E  100A               	iorwf	(??___fleq+1)^0,w,c
  7050  003C40  100B               	iorwf	(??___fleq+2)^0,w,c
  7051  003C42  100C               	iorwf	(??___fleq+3)^0,w,c
  7052  003C44  A4D8               	btfss	status,2,c
  7053  003C46  EF27  F01E         	goto	u3981
  7054  003C4A  EF29  F01E         	goto	u3980
  7055  003C4E                     u3981:
  7056  003C4E  EF31  F01E         	goto	l3736
  7057  003C52                     u3980:
  7058  003C52  0E00               	movlw	0
  7059  003C54  6E01               	movwf	___fleq@ff1^0,c
  7060  003C56  0E00               	movlw	0
  7061  003C58  6E02               	movwf	(___fleq@ff1+1)^0,c
  7062  003C5A  0E00               	movlw	0
  7063  003C5C  6E03               	movwf	(___fleq@ff1+2)^0,c
  7064  003C5E  0E00               	movlw	0
  7065  003C60  6E04               	movwf	(___fleq@ff1+3)^0,c
  7066  003C62                     l3736:
  7067  003C62  0E00               	movlw	0
  7068  003C64  1405               	andwf	___fleq@ff2^0,w,c
  7069  003C66  6E09               	movwf	??___fleq^0,c
  7070  003C68  0E00               	movlw	0
  7071  003C6A  1406               	andwf	(___fleq@ff2+1)^0,w,c
  7072  003C6C  6E0A               	movwf	(??___fleq+1)^0,c
  7073  003C6E  0E80               	movlw	128
  7074  003C70  1407               	andwf	(___fleq@ff2+2)^0,w,c
  7075  003C72  6E0B               	movwf	(??___fleq+2)^0,c
  7076  003C74  0E7F               	movlw	127
  7077  003C76  1408               	andwf	(___fleq@ff2+3)^0,w,c
  7078  003C78  6E0C               	movwf	(??___fleq+3)^0,c
  7079  003C7A  5009               	movf	??___fleq^0,w,c
  7080  003C7C  100A               	iorwf	(??___fleq+1)^0,w,c
  7081  003C7E  100B               	iorwf	(??___fleq+2)^0,w,c
  7082  003C80  100C               	iorwf	(??___fleq+3)^0,w,c
  7083  003C82  A4D8               	btfss	status,2,c
  7084  003C84  EF46  F01E         	goto	u3991
  7085  003C88  EF48  F01E         	goto	u3990
  7086  003C8C                     u3991:
  7087  003C8C  EF50  F01E         	goto	l3740
  7088  003C90                     u3990:
  7089  003C90  0E00               	movlw	0
  7090  003C92  6E05               	movwf	___fleq@ff2^0,c
  7091  003C94  0E00               	movlw	0
  7092  003C96  6E06               	movwf	(___fleq@ff2+1)^0,c
  7093  003C98  0E00               	movlw	0
  7094  003C9A  6E07               	movwf	(___fleq@ff2+2)^0,c
  7095  003C9C  0E00               	movlw	0
  7096  003C9E  6E08               	movwf	(___fleq@ff2+3)^0,c
  7097  003CA0                     l3740:
  7098  003CA0  5005               	movf	___fleq@ff2^0,w,c
  7099  003CA2  1801               	xorwf	___fleq@ff1^0,w,c
  7100  003CA4  E10F               	bnz	u4000
  7101  003CA6  5006               	movf	(___fleq@ff2+1)^0,w,c
  7102  003CA8  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  7103  003CAA  E10C               	bnz	u4000
  7104  003CAC  5007               	movf	(___fleq@ff2+2)^0,w,c
  7105  003CAE  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  7106  003CB0  E109               	bnz	u4000
  7107  003CB2  5008               	movf	(___fleq@ff2+3)^0,w,c
  7108  003CB4  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  7109  003CB6  B4D8               	btfsc	status,2,c
  7110  003CB8  EF60  F01E         	goto	u4001
  7111  003CBC  EF62  F01E         	goto	u4000
  7112  003CC0                     u4001:
  7113  003CC0  EF65  F01E         	goto	l3744
  7114  003CC4                     u4000:
  7115  003CC4  90D8               	bcf	status,0,c
  7116  003CC6  EF66  F01E         	goto	l401
  7117  003CCA                     l3744:
  7118  003CCA  80D8               	bsf	status,0,c
  7119  003CCC                     l401:
  7120  003CCC  0012               	return		;funcret
  7121  003CCE                     __end_of___fleq:
  7122                           	callstack 0
  7123                           
  7124 ;; *************** function ___fldiv *****************
  7125 ;; Defined at:
  7126 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcdiv.c"
  7127 ;; Parameters:    Size  Location     Type
  7128 ;;  b               4    0[COMRAM] unsigned char 
  7129 ;;  a               4    4[COMRAM] unsigned char 
  7130 ;; Auto vars:     Size  Location     Type
  7131 ;;  grs             4   19[COMRAM] unsigned long 
  7132 ;;  rem             4   12[COMRAM] unsigned long 
  7133 ;;  new_exp         2   17[COMRAM] short 
  7134 ;;  aexp            1   24[COMRAM] unsigned char 
  7135 ;;  bexp            1   23[COMRAM] unsigned char 
  7136 ;;  sign            1   16[COMRAM] unsigned char 
  7137 ;; Return value:  Size  Location     Type
  7138 ;;                  4    0[COMRAM] unsigned char 
  7139 ;; Registers used:
  7140 ;;		wreg, status,2, status,0
  7141 ;; Tracked objects:
  7142 ;;		On entry : 0/0
  7143 ;;		On exit  : 0/0
  7144 ;;		Unchanged: 0/0
  7145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7146 ;;      Params:         8       0       0       0       0       0       0       0       0
  7147 ;;      Locals:        13       0       0       0       0       0       0       0       0
  7148 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7149 ;;      Totals:        25       0       0       0       0       0       0       0       0
  7150 ;;Total ram usage:       25 bytes
  7151 ;; Hardware stack levels used: 1
  7152 ;; This function calls:
  7153 ;;		Nothing
  7154 ;; This function is called by:
  7155 ;;		_efgtoa
  7156 ;; This function uses a non-reentrant model
  7157 ;;
  7158                           
  7159                           	psect	text22
  7160  0024AC                     __ptext22:
  7161                           	callstack 0
  7162  0024AC                     ___fldiv:
  7163                           	callstack 25
  7164  0024AC  5004               	movf	(___fldiv@b+3)^0,w,c
  7165  0024AE  0B80               	andlw	128
  7166  0024B0  6E11               	movwf	___fldiv@sign^0,c
  7167  0024B2  5004               	movf	(___fldiv@b+3)^0,w,c
  7168  0024B4  2404               	addwf	(___fldiv@b+3)^0,w,c
  7169  0024B6  6E18               	movwf	___fldiv@bexp^0,c
  7170  0024B8  AE03               	btfss	(___fldiv@b+2)^0,7,c
  7171  0024BA  EF61  F012         	goto	u3441
  7172  0024BE  EF63  F012         	goto	u3440
  7173  0024C2                     u3441:
  7174  0024C2  EF64  F012         	goto	l3384
  7175  0024C6                     u3440:
  7176  0024C6  8018               	bsf	___fldiv@bexp^0,0,c
  7177  0024C8                     l3384:
  7178  0024C8  5018               	movf	___fldiv@bexp^0,w,c
  7179  0024CA  B4D8               	btfsc	status,2,c
  7180  0024CC  EF6A  F012         	goto	u3451
  7181  0024D0  EF6C  F012         	goto	u3450
  7182  0024D4                     u3451:
  7183  0024D4  EF81  F012         	goto	l3394
  7184  0024D8                     u3450:
  7185  0024D8  2818               	incf	___fldiv@bexp^0,w,c
  7186  0024DA  A4D8               	btfss	status,2,c
  7187  0024DC  EF72  F012         	goto	u3461
  7188  0024E0  EF74  F012         	goto	u3460
  7189  0024E4                     u3461:
  7190  0024E4  EF7C  F012         	goto	l3390
  7191  0024E8                     u3460:
  7192  0024E8  0E00               	movlw	0
  7193  0024EA  6E01               	movwf	___fldiv@b^0,c
  7194  0024EC  0E00               	movlw	0
  7195  0024EE  6E02               	movwf	(___fldiv@b+1)^0,c
  7196  0024F0  0E00               	movlw	0
  7197  0024F2  6E03               	movwf	(___fldiv@b+2)^0,c
  7198  0024F4  0E00               	movlw	0
  7199  0024F6  6E04               	movwf	(___fldiv@b+3)^0,c
  7200  0024F8                     l3390:
  7201  0024F8  8E03               	bsf	(___fldiv@b+2)^0,7,c
  7202  0024FA  0E00               	movlw	0
  7203  0024FC  6E04               	movwf	(___fldiv@b+3)^0,c
  7204  0024FE  EF89  F012         	goto	l3396
  7205  002502                     l3394:
  7206  002502  0E00               	movlw	0
  7207  002504  6E01               	movwf	___fldiv@b^0,c
  7208  002506  0E00               	movlw	0
  7209  002508  6E02               	movwf	(___fldiv@b+1)^0,c
  7210  00250A  0E00               	movlw	0
  7211  00250C  6E03               	movwf	(___fldiv@b+2)^0,c
  7212  00250E  0E00               	movlw	0
  7213  002510  6E04               	movwf	(___fldiv@b+3)^0,c
  7214  002512                     l3396:
  7215  002512  5008               	movf	(___fldiv@a+3)^0,w,c
  7216  002514  0B80               	andlw	128
  7217  002516  1A11               	xorwf	___fldiv@sign^0,f,c
  7218  002518  5008               	movf	(___fldiv@a+3)^0,w,c
  7219  00251A  2408               	addwf	(___fldiv@a+3)^0,w,c
  7220  00251C  6E19               	movwf	___fldiv@aexp^0,c
  7221  00251E  AE07               	btfss	(___fldiv@a+2)^0,7,c
  7222  002520  EF94  F012         	goto	u3471
  7223  002524  EF96  F012         	goto	u3470
  7224  002528                     u3471:
  7225  002528  EF97  F012         	goto	l3404
  7226  00252C                     u3470:
  7227  00252C  8019               	bsf	___fldiv@aexp^0,0,c
  7228  00252E                     l3404:
  7229  00252E  5019               	movf	___fldiv@aexp^0,w,c
  7230  002530  B4D8               	btfsc	status,2,c
  7231  002532  EF9D  F012         	goto	u3481
  7232  002536  EF9F  F012         	goto	u3480
  7233  00253A                     u3481:
  7234  00253A  EFB4  F012         	goto	l3414
  7235  00253E                     u3480:
  7236  00253E  2819               	incf	___fldiv@aexp^0,w,c
  7237  002540  A4D8               	btfss	status,2,c
  7238  002542  EFA5  F012         	goto	u3491
  7239  002546  EFA7  F012         	goto	u3490
  7240  00254A                     u3491:
  7241  00254A  EFAF  F012         	goto	l3410
  7242  00254E                     u3490:
  7243  00254E  0E00               	movlw	0
  7244  002550  6E05               	movwf	___fldiv@a^0,c
  7245  002552  0E00               	movlw	0
  7246  002554  6E06               	movwf	(___fldiv@a+1)^0,c
  7247  002556  0E00               	movlw	0
  7248  002558  6E07               	movwf	(___fldiv@a+2)^0,c
  7249  00255A  0E00               	movlw	0
  7250  00255C  6E08               	movwf	(___fldiv@a+3)^0,c
  7251  00255E                     l3410:
  7252  00255E  8E07               	bsf	(___fldiv@a+2)^0,7,c
  7253  002560  0E00               	movlw	0
  7254  002562  6E08               	movwf	(___fldiv@a+3)^0,c
  7255  002564  EFBC  F012         	goto	l3416
  7256  002568                     l3414:
  7257  002568  0E00               	movlw	0
  7258  00256A  6E05               	movwf	___fldiv@a^0,c
  7259  00256C  0E00               	movlw	0
  7260  00256E  6E06               	movwf	(___fldiv@a+1)^0,c
  7261  002570  0E00               	movlw	0
  7262  002572  6E07               	movwf	(___fldiv@a+2)^0,c
  7263  002574  0E00               	movlw	0
  7264  002576  6E08               	movwf	(___fldiv@a+3)^0,c
  7265  002578                     l3416:
  7266  002578  5005               	movf	___fldiv@a^0,w,c
  7267  00257A  1006               	iorwf	(___fldiv@a+1)^0,w,c
  7268  00257C  1007               	iorwf	(___fldiv@a+2)^0,w,c
  7269  00257E  1008               	iorwf	(___fldiv@a+3)^0,w,c
  7270  002580  A4D8               	btfss	status,2,c
  7271  002582  EFC5  F012         	goto	u3501
  7272  002586  EFC7  F012         	goto	u3500
  7273  00258A                     u3501:
  7274  00258A  EFDF  F012         	goto	l3428
  7275  00258E                     u3500:
  7276  00258E  0E00               	movlw	0
  7277  002590  6E01               	movwf	___fldiv@b^0,c
  7278  002592  0E00               	movlw	0
  7279  002594  6E02               	movwf	(___fldiv@b+1)^0,c
  7280  002596  0E00               	movlw	0
  7281  002598  6E03               	movwf	(___fldiv@b+2)^0,c
  7282  00259A  0E00               	movlw	0
  7283  00259C  6E04               	movwf	(___fldiv@b+3)^0,c
  7284  00259E  0E80               	movlw	128
  7285  0025A0  1203               	iorwf	(___fldiv@b+2)^0,f,c
  7286  0025A2  0E7F               	movlw	127
  7287  0025A4  1204               	iorwf	(___fldiv@b+3)^0,f,c
  7288  0025A6                     l3422:
  7289  0025A6  5011               	movf	___fldiv@sign^0,w,c
  7290  0025A8  1204               	iorwf	(___fldiv@b+3)^0,f,c
  7291  0025AA  C001  F001         	movff	___fldiv@b,?___fldiv
  7292  0025AE  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  7293  0025B2  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  7294  0025B6  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  7295  0025BA  EF22  F014         	goto	l724
  7296  0025BE                     l3428:
  7297  0025BE  5018               	movf	___fldiv@bexp^0,w,c
  7298  0025C0  A4D8               	btfss	status,2,c
  7299  0025C2  EFE5  F012         	goto	u3511
  7300  0025C6  EFE7  F012         	goto	u3510
  7301  0025CA                     u3511:
  7302  0025CA  EFF1  F012         	goto	l3436
  7303  0025CE                     u3510:
  7304  0025CE  0E00               	movlw	0
  7305  0025D0  6E01               	movwf	?___fldiv^0,c
  7306  0025D2  0E00               	movlw	0
  7307  0025D4  6E02               	movwf	(?___fldiv+1)^0,c
  7308  0025D6  0E00               	movlw	0
  7309  0025D8  6E03               	movwf	(?___fldiv+2)^0,c
  7310  0025DA  0E00               	movlw	0
  7311  0025DC  6E04               	movwf	(?___fldiv+3)^0,c
  7312  0025DE  EF22  F014         	goto	l724
  7313  0025E2                     l3436:
  7314  0025E2  5019               	movf	___fldiv@aexp^0,w,c
  7315  0025E4  C018  F009         	movff	___fldiv@bexp,??___fldiv
  7316  0025E8  6A0A               	clrf	(??___fldiv+1)^0,c
  7317  0025EA  5E09               	subwf	??___fldiv^0,f,c
  7318  0025EC  0E00               	movlw	0
  7319  0025EE  5A0A               	subwfb	(??___fldiv+1)^0,f,c
  7320  0025F0  0E7F               	movlw	127
  7321  0025F2  2409               	addwf	??___fldiv^0,w,c
  7322  0025F4  6E12               	movwf	___fldiv@new_exp^0,c
  7323  0025F6  0E00               	movlw	0
  7324  0025F8  200A               	addwfc	(??___fldiv+1)^0,w,c
  7325  0025FA  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  7326  0025FC  C001  F00D         	movff	___fldiv@b,___fldiv@rem
  7327  002600  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
  7328  002604  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
  7329  002608  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
  7330  00260C  0E00               	movlw	0
  7331  00260E  6E01               	movwf	___fldiv@b^0,c
  7332  002610  0E00               	movlw	0
  7333  002612  6E02               	movwf	(___fldiv@b+1)^0,c
  7334  002614  0E00               	movlw	0
  7335  002616  6E03               	movwf	(___fldiv@b+2)^0,c
  7336  002618  0E00               	movlw	0
  7337  00261A  6E04               	movwf	(___fldiv@b+3)^0,c
  7338  00261C  0E00               	movlw	0
  7339  00261E  6E14               	movwf	___fldiv@grs^0,c
  7340  002620  0E00               	movlw	0
  7341  002622  6E15               	movwf	(___fldiv@grs+1)^0,c
  7342  002624  0E00               	movlw	0
  7343  002626  6E16               	movwf	(___fldiv@grs+2)^0,c
  7344  002628  0E00               	movlw	0
  7345  00262A  6E17               	movwf	(___fldiv@grs+3)^0,c
  7346  00262C  0E00               	movlw	0
  7347  00262E  6E19               	movwf	___fldiv@aexp^0,c
  7348  002630  EF52  F013         	goto	l726
  7349  002634                     l3446:
  7350  002634  5019               	movf	___fldiv@aexp^0,w,c
  7351  002636  B4D8               	btfsc	status,2,c
  7352  002638  EF20  F013         	goto	u3521
  7353  00263C  EF22  F013         	goto	u3520
  7354  002640                     u3521:
  7355  002640  EF39  F013         	goto	l3454
  7356  002644                     u3520:
  7357  002644  90D8               	bcf	status,0,c
  7358  002646  360D               	rlcf	___fldiv@rem^0,f,c
  7359  002648  360E               	rlcf	(___fldiv@rem+1)^0,f,c
  7360  00264A  360F               	rlcf	(___fldiv@rem+2)^0,f,c
  7361  00264C  3610               	rlcf	(___fldiv@rem+3)^0,f,c
  7362  00264E  90D8               	bcf	status,0,c
  7363  002650  3601               	rlcf	___fldiv@b^0,f,c
  7364  002652  3602               	rlcf	(___fldiv@b+1)^0,f,c
  7365  002654  3603               	rlcf	(___fldiv@b+2)^0,f,c
  7366  002656  3604               	rlcf	(___fldiv@b+3)^0,f,c
  7367  002658  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  7368  00265A  EF31  F013         	goto	u3531
  7369  00265E  EF33  F013         	goto	u3530
  7370  002662                     u3531:
  7371  002662  EF34  F013         	goto	l729
  7372  002666                     u3530:
  7373  002666  8001               	bsf	___fldiv@b^0,0,c
  7374  002668                     l729:
  7375  002668  90D8               	bcf	status,0,c
  7376  00266A  3614               	rlcf	___fldiv@grs^0,f,c
  7377  00266C  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  7378  00266E  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  7379  002670  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  7380  002672                     l3454:
  7381  002672  5005               	movf	___fldiv@a^0,w,c
  7382  002674  5C0D               	subwf	___fldiv@rem^0,w,c
  7383  002676  5006               	movf	(___fldiv@a+1)^0,w,c
  7384  002678  580E               	subwfb	(___fldiv@rem+1)^0,w,c
  7385  00267A  5007               	movf	(___fldiv@a+2)^0,w,c
  7386  00267C  580F               	subwfb	(___fldiv@rem+2)^0,w,c
  7387  00267E  5008               	movf	(___fldiv@a+3)^0,w,c
  7388  002680  5810               	subwfb	(___fldiv@rem+3)^0,w,c
  7389  002682  A0D8               	btfss	status,0,c
  7390  002684  EF46  F013         	goto	u3541
  7391  002688  EF48  F013         	goto	u3540
  7392  00268C                     u3541:
  7393  00268C  EF51  F013         	goto	l3460
  7394  002690                     u3540:
  7395  002690  8C17               	bsf	(___fldiv@grs+3)^0,6,c
  7396  002692  5005               	movf	___fldiv@a^0,w,c
  7397  002694  5E0D               	subwf	___fldiv@rem^0,f,c
  7398  002696  5006               	movf	(___fldiv@a+1)^0,w,c
  7399  002698  5A0E               	subwfb	(___fldiv@rem+1)^0,f,c
  7400  00269A  5007               	movf	(___fldiv@a+2)^0,w,c
  7401  00269C  5A0F               	subwfb	(___fldiv@rem+2)^0,f,c
  7402  00269E  5008               	movf	(___fldiv@a+3)^0,w,c
  7403  0026A0  5A10               	subwfb	(___fldiv@rem+3)^0,f,c
  7404  0026A2                     l3460:
  7405  0026A2  2A19               	incf	___fldiv@aexp^0,f,c
  7406  0026A4                     l726:
  7407  0026A4  0E19               	movlw	25
  7408  0026A6  6419               	cpfsgt	___fldiv@aexp^0,c
  7409  0026A8  EF58  F013         	goto	u3551
  7410  0026AC  EF5A  F013         	goto	u3550
  7411  0026B0                     u3551:
  7412  0026B0  EF1A  F013         	goto	l3446
  7413  0026B4                     u3550:
  7414  0026B4  500D               	movf	___fldiv@rem^0,w,c
  7415  0026B6  100E               	iorwf	(___fldiv@rem+1)^0,w,c
  7416  0026B8  100F               	iorwf	(___fldiv@rem+2)^0,w,c
  7417  0026BA  1010               	iorwf	(___fldiv@rem+3)^0,w,c
  7418  0026BC  B4D8               	btfsc	status,2,c
  7419  0026BE  EF63  F013         	goto	u3561
  7420  0026C2  EF65  F013         	goto	u3560
  7421  0026C6                     u3561:
  7422  0026C6  EF7D  F013         	goto	l3472
  7423  0026CA                     u3560:
  7424  0026CA  8014               	bsf	___fldiv@grs^0,0,c
  7425  0026CC  EF7D  F013         	goto	l3472
  7426  0026D0                     l3466:
  7427  0026D0  90D8               	bcf	status,0,c
  7428  0026D2  3601               	rlcf	___fldiv@b^0,f,c
  7429  0026D4  3602               	rlcf	(___fldiv@b+1)^0,f,c
  7430  0026D6  3603               	rlcf	(___fldiv@b+2)^0,f,c
  7431  0026D8  3604               	rlcf	(___fldiv@b+3)^0,f,c
  7432  0026DA  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  7433  0026DC  EF72  F013         	goto	u3571
  7434  0026E0  EF74  F013         	goto	u3570
  7435  0026E4                     u3571:
  7436  0026E4  EF75  F013         	goto	l735
  7437  0026E8                     u3570:
  7438  0026E8  8001               	bsf	___fldiv@b^0,0,c
  7439  0026EA                     l735:
  7440  0026EA  90D8               	bcf	status,0,c
  7441  0026EC  3614               	rlcf	___fldiv@grs^0,f,c
  7442  0026EE  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  7443  0026F0  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  7444  0026F2  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  7445  0026F4  0612               	decf	___fldiv@new_exp^0,f,c
  7446  0026F6  A0D8               	btfss	status,0,c
  7447  0026F8  0613               	decf	(___fldiv@new_exp+1)^0,f,c
  7448  0026FA                     l3472:
  7449  0026FA  AE03               	btfss	(___fldiv@b+2)^0,7,c
  7450  0026FC  EF82  F013         	goto	u3581
  7451  002700  EF84  F013         	goto	u3580
  7452  002704                     u3581:
  7453  002704  EF68  F013         	goto	l3466
  7454  002708                     u3580:
  7455  002708  0E00               	movlw	0
  7456  00270A  6E19               	movwf	___fldiv@aexp^0,c
  7457  00270C  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  7458  00270E  EF8B  F013         	goto	u3591
  7459  002712  EF8D  F013         	goto	u3590
  7460  002716                     u3591:
  7461  002716  EFB1  F013         	goto	l737
  7462  00271A                     u3590:
  7463  00271A  0EFF               	movlw	255
  7464  00271C  1414               	andwf	___fldiv@grs^0,w,c
  7465  00271E  6E09               	movwf	??___fldiv^0,c
  7466  002720  0EFF               	movlw	255
  7467  002722  1415               	andwf	(___fldiv@grs+1)^0,w,c
  7468  002724  6E0A               	movwf	(??___fldiv+1)^0,c
  7469  002726  0EFF               	movlw	255
  7470  002728  1416               	andwf	(___fldiv@grs+2)^0,w,c
  7471  00272A  6E0B               	movwf	(??___fldiv+2)^0,c
  7472  00272C  0E7F               	movlw	127
  7473  00272E  1417               	andwf	(___fldiv@grs+3)^0,w,c
  7474  002730  6E0C               	movwf	(??___fldiv+3)^0,c
  7475  002732  5009               	movf	??___fldiv^0,w,c
  7476  002734  100A               	iorwf	(??___fldiv+1)^0,w,c
  7477  002736  100B               	iorwf	(??___fldiv+2)^0,w,c
  7478  002738  100C               	iorwf	(??___fldiv+3)^0,w,c
  7479  00273A  B4D8               	btfsc	status,2,c
  7480  00273C  EFA2  F013         	goto	u3601
  7481  002740  EFA4  F013         	goto	u3600
  7482  002744                     u3601:
  7483  002744  EFA8  F013         	goto	l738
  7484  002748                     u3600:
  7485  002748                     l3480:
  7486  002748  0E01               	movlw	1
  7487  00274A  6E19               	movwf	___fldiv@aexp^0,c
  7488  00274C  EFB1  F013         	goto	l737
  7489  002750                     l738:
  7490  002750  A001               	btfss	___fldiv@b^0,0,c
  7491  002752  EFAD  F013         	goto	u3611
  7492  002756  EFAF  F013         	goto	u3610
  7493  00275A                     u3611:
  7494  00275A  EFB1  F013         	goto	l737
  7495  00275E                     u3610:
  7496  00275E  EFA4  F013         	goto	l3480
  7497  002762                     l737:
  7498  002762  5019               	movf	___fldiv@aexp^0,w,c
  7499  002764  B4D8               	btfsc	status,2,c
  7500  002766  EFB7  F013         	goto	u3621
  7501  00276A  EFB9  F013         	goto	u3620
  7502  00276E                     u3621:
  7503  00276E  EFDD  F013         	goto	l3492
  7504  002772                     u3620:
  7505  002772  0E01               	movlw	1
  7506  002774  2601               	addwf	___fldiv@b^0,f,c
  7507  002776  0E00               	movlw	0
  7508  002778  2202               	addwfc	(___fldiv@b+1)^0,f,c
  7509  00277A  2203               	addwfc	(___fldiv@b+2)^0,f,c
  7510  00277C  2204               	addwfc	(___fldiv@b+3)^0,f,c
  7511  00277E  A004               	btfss	(___fldiv@b+3)^0,0,c
  7512  002780  EFC4  F013         	goto	u3631
  7513  002784  EFC6  F013         	goto	u3630
  7514  002788                     u3631:
  7515  002788  EFDD  F013         	goto	l3492
  7516  00278C                     u3630:
  7517  00278C  C001  F009         	movff	___fldiv@b,??___fldiv
  7518  002790  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
  7519  002794  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
  7520  002798  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
  7521  00279C  340C               	rlcf	(??___fldiv+3)^0,w,c
  7522  00279E  320C               	rrcf	(??___fldiv+3)^0,f,c
  7523  0027A0  320B               	rrcf	(??___fldiv+2)^0,f,c
  7524  0027A2  320A               	rrcf	(??___fldiv+1)^0,f,c
  7525  0027A4  3209               	rrcf	??___fldiv^0,f,c
  7526  0027A6  C009  F001         	movff	??___fldiv,___fldiv@b
  7527  0027AA  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
  7528  0027AE  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
  7529  0027B2  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
  7530  0027B6  4A12               	infsnz	___fldiv@new_exp^0,f,c
  7531  0027B8  2A13               	incf	(___fldiv@new_exp+1)^0,f,c
  7532  0027BA                     l3492:
  7533  0027BA  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7534  0027BC  EFE8  F013         	goto	u3641
  7535  0027C0  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  7536  0027C2  E108               	bnz	u3640
  7537  0027C4  2812               	incf	___fldiv@new_exp^0,w,c
  7538  0027C6  A0D8               	btfss	status,0,c
  7539  0027C8  EFE8  F013         	goto	u3641
  7540  0027CC  EFEA  F013         	goto	u3640
  7541  0027D0                     u3641:
  7542  0027D0  EFF5  F013         	goto	l3496
  7543  0027D4                     u3640:
  7544  0027D4  0E00               	movlw	0
  7545  0027D6  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  7546  0027D8  6812               	setf	___fldiv@new_exp^0,c
  7547  0027DA  0E00               	movlw	0
  7548  0027DC  6E01               	movwf	___fldiv@b^0,c
  7549  0027DE  0E00               	movlw	0
  7550  0027E0  6E02               	movwf	(___fldiv@b+1)^0,c
  7551  0027E2  0E00               	movlw	0
  7552  0027E4  6E03               	movwf	(___fldiv@b+2)^0,c
  7553  0027E6  0E00               	movlw	0
  7554  0027E8  6E04               	movwf	(___fldiv@b+3)^0,c
  7555  0027EA                     l3496:
  7556  0027EA  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7557  0027EC  EF02  F014         	goto	u3650
  7558  0027F0  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  7559  0027F2  E106               	bnz	u3651
  7560  0027F4  0412               	decf	___fldiv@new_exp^0,w,c
  7561  0027F6  B0D8               	btfsc	status,0,c
  7562  0027F8  EF00  F014         	goto	u3651
  7563  0027FC  EF02  F014         	goto	u3650
  7564  002800                     u3651:
  7565  002800  EF10  F014         	goto	l3500
  7566  002804                     u3650:
  7567  002804  0E00               	movlw	0
  7568  002806  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  7569  002808  0E00               	movlw	0
  7570  00280A  6E12               	movwf	___fldiv@new_exp^0,c
  7571  00280C  0E00               	movlw	0
  7572  00280E  6E01               	movwf	___fldiv@b^0,c
  7573  002810  0E00               	movlw	0
  7574  002812  6E02               	movwf	(___fldiv@b+1)^0,c
  7575  002814  0E00               	movlw	0
  7576  002816  6E03               	movwf	(___fldiv@b+2)^0,c
  7577  002818  0E00               	movlw	0
  7578  00281A  6E04               	movwf	(___fldiv@b+3)^0,c
  7579  00281C  0E00               	movlw	0
  7580  00281E  6E11               	movwf	___fldiv@sign^0,c
  7581  002820                     l3500:
  7582  002820  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
  7583  002824  A018               	btfss	___fldiv@bexp^0,0,c
  7584  002826  EF17  F014         	goto	u3661
  7585  00282A  EF19  F014         	goto	u3660
  7586  00282E                     u3661:
  7587  00282E  EF1C  F014         	goto	l3506
  7588  002832                     u3660:
  7589  002832  8E03               	bsf	(___fldiv@b+2)^0,7,c
  7590  002834  EF1D  F014         	goto	l3508
  7591  002838                     l3506:
  7592  002838  9E03               	bcf	(___fldiv@b+2)^0,7,c
  7593  00283A                     l3508:
  7594  00283A  90D8               	bcf	status,0,c
  7595  00283C  3018               	rrcf	___fldiv@bexp^0,w,c
  7596  00283E  6E04               	movwf	(___fldiv@b+3)^0,c
  7597  002840  EFD3  F012         	goto	l3422
  7598  002844                     l724:
  7599  002844  0012               	return		;funcret
  7600  002846                     __end_of___fldiv:
  7601                           	callstack 0
  7602                           
  7603 ;; *************** function ___awmod *****************
  7604 ;; Defined at:
  7605 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awmod.c"
  7606 ;; Parameters:    Size  Location     Type
  7607 ;;  dividend        2    0[COMRAM] int 
  7608 ;;  divisor         2    2[COMRAM] int 
  7609 ;; Auto vars:     Size  Location     Type
  7610 ;;  sign            1    5[COMRAM] unsigned char 
  7611 ;;  counter         1    4[COMRAM] unsigned char 
  7612 ;; Return value:  Size  Location     Type
  7613 ;;                  2    0[COMRAM] int 
  7614 ;; Registers used:
  7615 ;;		wreg, status,2, status,0
  7616 ;; Tracked objects:
  7617 ;;		On entry : 0/0
  7618 ;;		On exit  : 0/0
  7619 ;;		Unchanged: 0/0
  7620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7621 ;;      Params:         4       0       0       0       0       0       0       0       0
  7622 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7623 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7624 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7625 ;;Total ram usage:        6 bytes
  7626 ;; Hardware stack levels used: 1
  7627 ;; This function calls:
  7628 ;;		Nothing
  7629 ;; This function is called by:
  7630 ;;		_efgtoa
  7631 ;; This function uses a non-reentrant model
  7632 ;;
  7633                           
  7634                           	psect	text23
  7635  003B74                     __ptext23:
  7636                           	callstack 0
  7637  003B74                     ___awmod:
  7638                           	callstack 25
  7639  003B74  0E00               	movlw	0
  7640  003B76  6E06               	movwf	___awmod@sign^0,c
  7641  003B78  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  7642  003B7A  EFC3  F01D         	goto	u3920
  7643  003B7E  EFC1  F01D         	goto	u3921
  7644  003B82                     u3921:
  7645  003B82  EFC9  F01D         	goto	l3704
  7646  003B86                     u3920:
  7647  003B86  6C01               	negf	___awmod@dividend^0,c
  7648  003B88  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7649  003B8A  B0D8               	btfsc	status,0,c
  7650  003B8C  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7651  003B8E  0E01               	movlw	1
  7652  003B90  6E06               	movwf	___awmod@sign^0,c
  7653  003B92                     l3704:
  7654  003B92  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  7655  003B94  EFD0  F01D         	goto	u3930
  7656  003B98  EFCE  F01D         	goto	u3931
  7657  003B9C                     u3931:
  7658  003B9C  EFD4  F01D         	goto	l3708
  7659  003BA0                     u3930:
  7660  003BA0  6C03               	negf	___awmod@divisor^0,c
  7661  003BA2  1E04               	comf	(___awmod@divisor+1)^0,f,c
  7662  003BA4  B0D8               	btfsc	status,0,c
  7663  003BA6  2A04               	incf	(___awmod@divisor+1)^0,f,c
  7664  003BA8                     l3708:
  7665  003BA8  5003               	movf	___awmod@divisor^0,w,c
  7666  003BAA  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  7667  003BAC  B4D8               	btfsc	status,2,c
  7668  003BAE  EFDB  F01D         	goto	u3941
  7669  003BB2  EFDD  F01D         	goto	u3940
  7670  003BB6                     u3941:
  7671  003BB6  EF01  F01E         	goto	l3724
  7672  003BBA                     u3940:
  7673  003BBA  0E01               	movlw	1
  7674  003BBC  6E05               	movwf	___awmod@counter^0,c
  7675  003BBE  EFE5  F01D         	goto	l3714
  7676  003BC2                     l3712:
  7677  003BC2  90D8               	bcf	status,0,c
  7678  003BC4  3603               	rlcf	___awmod@divisor^0,f,c
  7679  003BC6  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  7680  003BC8  2A05               	incf	___awmod@counter^0,f,c
  7681  003BCA                     l3714:
  7682  003BCA  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  7683  003BCC  EFEA  F01D         	goto	u3951
  7684  003BD0  EFEC  F01D         	goto	u3950
  7685  003BD4                     u3951:
  7686  003BD4  EFE1  F01D         	goto	l3712
  7687  003BD8                     u3950:
  7688  003BD8                     l3716:
  7689  003BD8  5003               	movf	___awmod@divisor^0,w,c
  7690  003BDA  5C01               	subwf	___awmod@dividend^0,w,c
  7691  003BDC  5004               	movf	(___awmod@divisor+1)^0,w,c
  7692  003BDE  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  7693  003BE0  A0D8               	btfss	status,0,c
  7694  003BE2  EFF5  F01D         	goto	u3961
  7695  003BE6  EFF7  F01D         	goto	u3960
  7696  003BEA                     u3961:
  7697  003BEA  EFFB  F01D         	goto	l3720
  7698  003BEE                     u3960:
  7699  003BEE  5003               	movf	___awmod@divisor^0,w,c
  7700  003BF0  5E01               	subwf	___awmod@dividend^0,f,c
  7701  003BF2  5004               	movf	(___awmod@divisor+1)^0,w,c
  7702  003BF4  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  7703  003BF6                     l3720:
  7704  003BF6  90D8               	bcf	status,0,c
  7705  003BF8  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  7706  003BFA  3203               	rrcf	___awmod@divisor^0,f,c
  7707  003BFC  2E05               	decfsz	___awmod@counter^0,f,c
  7708  003BFE  EFEC  F01D         	goto	l3716
  7709  003C02                     l3724:
  7710  003C02  5006               	movf	___awmod@sign^0,w,c
  7711  003C04  B4D8               	btfsc	status,2,c
  7712  003C06  EF07  F01E         	goto	u3971
  7713  003C0A  EF09  F01E         	goto	u3970
  7714  003C0E                     u3971:
  7715  003C0E  EF0D  F01E         	goto	l3728
  7716  003C12                     u3970:
  7717  003C12  6C01               	negf	___awmod@dividend^0,c
  7718  003C14  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7719  003C16  B0D8               	btfsc	status,0,c
  7720  003C18  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7721  003C1A                     l3728:
  7722  003C1A  C001  F001         	movff	___awmod@dividend,?___awmod
  7723  003C1E  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  7724  003C22  0012               	return		;funcret
  7725  003C24                     __end_of___awmod:
  7726                           	callstack 0
  7727                           
  7728 ;; *************** function ___awdiv *****************
  7729 ;; Defined at:
  7730 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
  7731 ;; Parameters:    Size  Location     Type
  7732 ;;  dividend        2    0[COMRAM] int 
  7733 ;;  divisor         2    2[COMRAM] int 
  7734 ;; Auto vars:     Size  Location     Type
  7735 ;;  quotient        2    6[COMRAM] int 
  7736 ;;  sign            1    5[COMRAM] unsigned char 
  7737 ;;  counter         1    4[COMRAM] unsigned char 
  7738 ;; Return value:  Size  Location     Type
  7739 ;;                  2    0[COMRAM] int 
  7740 ;; Registers used:
  7741 ;;		wreg, status,2, status,0
  7742 ;; Tracked objects:
  7743 ;;		On entry : 0/0
  7744 ;;		On exit  : 0/0
  7745 ;;		Unchanged: 0/0
  7746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7747 ;;      Params:         4       0       0       0       0       0       0       0       0
  7748 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7749 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7750 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7751 ;;Total ram usage:        8 bytes
  7752 ;; Hardware stack levels used: 1
  7753 ;; This function calls:
  7754 ;;		Nothing
  7755 ;; This function is called by:
  7756 ;;		_efgtoa
  7757 ;; This function uses a non-reentrant model
  7758 ;;
  7759                           
  7760                           	psect	text24
  7761  003AB0                     __ptext24:
  7762                           	callstack 0
  7763  003AB0                     ___awdiv:
  7764                           	callstack 25
  7765  003AB0  0E00               	movlw	0
  7766  003AB2  6E06               	movwf	___awdiv@sign^0,c
  7767  003AB4  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  7768  003AB6  EF61  F01D         	goto	u3860
  7769  003ABA  EF5F  F01D         	goto	u3861
  7770  003ABE                     u3861:
  7771  003ABE  EF67  F01D         	goto	l3660
  7772  003AC2                     u3860:
  7773  003AC2  6C03               	negf	___awdiv@divisor^0,c
  7774  003AC4  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  7775  003AC6  B0D8               	btfsc	status,0,c
  7776  003AC8  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  7777  003ACA  0E01               	movlw	1
  7778  003ACC  6E06               	movwf	___awdiv@sign^0,c
  7779  003ACE                     l3660:
  7780  003ACE  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  7781  003AD0  EF6E  F01D         	goto	u3870
  7782  003AD4  EF6C  F01D         	goto	u3871
  7783  003AD8                     u3871:
  7784  003AD8  EF74  F01D         	goto	l3666
  7785  003ADC                     u3870:
  7786  003ADC  6C01               	negf	___awdiv@dividend^0,c
  7787  003ADE  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  7788  003AE0  B0D8               	btfsc	status,0,c
  7789  003AE2  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  7790  003AE4  0E01               	movlw	1
  7791  003AE6  1A06               	xorwf	___awdiv@sign^0,f,c
  7792  003AE8                     l3666:
  7793  003AE8  0E00               	movlw	0
  7794  003AEA  6E08               	movwf	(___awdiv@quotient+1)^0,c
  7795  003AEC  0E00               	movlw	0
  7796  003AEE  6E07               	movwf	___awdiv@quotient^0,c
  7797  003AF0  5003               	movf	___awdiv@divisor^0,w,c
  7798  003AF2  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  7799  003AF4  B4D8               	btfsc	status,2,c
  7800  003AF6  EF7F  F01D         	goto	u3881
  7801  003AFA  EF81  F01D         	goto	u3880
  7802  003AFE                     u3881:
  7803  003AFE  EFA9  F01D         	goto	l3688
  7804  003B02                     u3880:
  7805  003B02  0E01               	movlw	1
  7806  003B04  6E05               	movwf	___awdiv@counter^0,c
  7807  003B06  EF89  F01D         	goto	l3674
  7808  003B0A                     l3672:
  7809  003B0A  90D8               	bcf	status,0,c
  7810  003B0C  3603               	rlcf	___awdiv@divisor^0,f,c
  7811  003B0E  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  7812  003B10  2A05               	incf	___awdiv@counter^0,f,c
  7813  003B12                     l3674:
  7814  003B12  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  7815  003B14  EF8E  F01D         	goto	u3891
  7816  003B18  EF90  F01D         	goto	u3890
  7817  003B1C                     u3891:
  7818  003B1C  EF85  F01D         	goto	l3672
  7819  003B20                     u3890:
  7820  003B20                     l3676:
  7821  003B20  90D8               	bcf	status,0,c
  7822  003B22  3607               	rlcf	___awdiv@quotient^0,f,c
  7823  003B24  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  7824  003B26  5003               	movf	___awdiv@divisor^0,w,c
  7825  003B28  5C01               	subwf	___awdiv@dividend^0,w,c
  7826  003B2A  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7827  003B2C  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  7828  003B2E  A0D8               	btfss	status,0,c
  7829  003B30  EF9C  F01D         	goto	u3901
  7830  003B34  EF9E  F01D         	goto	u3900
  7831  003B38                     u3901:
  7832  003B38  EFA3  F01D         	goto	l3684
  7833  003B3C                     u3900:
  7834  003B3C  5003               	movf	___awdiv@divisor^0,w,c
  7835  003B3E  5E01               	subwf	___awdiv@dividend^0,f,c
  7836  003B40  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7837  003B42  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  7838  003B44  8007               	bsf	___awdiv@quotient^0,0,c
  7839  003B46                     l3684:
  7840  003B46  90D8               	bcf	status,0,c
  7841  003B48  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  7842  003B4A  3203               	rrcf	___awdiv@divisor^0,f,c
  7843  003B4C  2E05               	decfsz	___awdiv@counter^0,f,c
  7844  003B4E  EF90  F01D         	goto	l3676
  7845  003B52                     l3688:
  7846  003B52  5006               	movf	___awdiv@sign^0,w,c
  7847  003B54  B4D8               	btfsc	status,2,c
  7848  003B56  EFAF  F01D         	goto	u3911
  7849  003B5A  EFB1  F01D         	goto	u3910
  7850  003B5E                     u3911:
  7851  003B5E  EFB5  F01D         	goto	l3692
  7852  003B62                     u3910:
  7853  003B62  6C07               	negf	___awdiv@quotient^0,c
  7854  003B64  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  7855  003B66  B0D8               	btfsc	status,0,c
  7856  003B68  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  7857  003B6A                     l3692:
  7858  003B6A  C007  F001         	movff	___awdiv@quotient,?___awdiv
  7859  003B6E  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  7860  003B72  0012               	return		;funcret
  7861  003B74                     __end_of___awdiv:
  7862                           	callstack 0
  7863                           
  7864 ;; *************** function _dtoa *****************
  7865 ;; Defined at:
  7866 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  7867 ;; Parameters:    Size  Location     Type
  7868 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  7869 ;;		 -> sprintf@f(11), 
  7870 ;;  d               8   29[COMRAM] long long 
  7871 ;; Auto vars:     Size  Location     Type
  7872 ;;  n               8   53[COMRAM] long long 
  7873 ;;  i               2   61[COMRAM] int 
  7874 ;;  s               2   51[COMRAM] int 
  7875 ;;  w               2   49[COMRAM] int 
  7876 ;;  p               2   47[COMRAM] int 
  7877 ;; Return value:  Size  Location     Type
  7878 ;;                  2   27[COMRAM] int 
  7879 ;; Registers used:
  7880 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7881 ;; Tracked objects:
  7882 ;;		On entry : 0/0
  7883 ;;		On exit  : 0/0
  7884 ;;		Unchanged: 0/0
  7885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7886 ;;      Params:        10       0       0       0       0       0       0       0       0
  7887 ;;      Locals:        18       0       0       0       0       0       0       0       0
  7888 ;;      Temps:          8       0       0       0       0       0       0       0       0
  7889 ;;      Totals:        36       0       0       0       0       0       0       0       0
  7890 ;;Total ram usage:       36 bytes
  7891 ;; Hardware stack levels used: 1
  7892 ;; Hardware stack levels required when called: 4
  7893 ;; This function calls:
  7894 ;;		___aodiv
  7895 ;;		___aomod
  7896 ;;		_abs
  7897 ;;		_pad
  7898 ;; This function is called by:
  7899 ;;		_vfpfcnvrt
  7900 ;; This function uses a non-reentrant model
  7901 ;;
  7902                           
  7903                           	psect	text25
  7904  002846                     __ptext25:
  7905                           	callstack 0
  7906  002846                     _dtoa:
  7907                           	callstack 22
  7908  002846                     
  7909                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  7910  002846  C01E  F036         	movff	dtoa@d,dtoa@n
  7911  00284A  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  7912  00284E  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  7913  002852  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  7914  002856  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  7915  00285A  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  7916  00285E  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  7917  002862  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  7918  002866                     
  7919                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  7920  002866  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  7921  002868  EF38  F014         	goto	u4501
  7922  00286C  EF3B  F014         	goto	u4500
  7923  002870                     u4501:
  7924  002870  0E01               	movlw	1
  7925  002872  EF3C  F014         	goto	u4510
  7926  002876                     u4500:
  7927  002876  0E00               	movlw	0
  7928  002878                     u4510:
  7929  002878  6E34               	movwf	dtoa@s^0,c
  7930  00287A  6A35               	clrf	(dtoa@s+1)^0,c
  7931                           
  7932                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  7933  00287C  5034               	movf	dtoa@s^0,w,c
  7934  00287E  1035               	iorwf	(dtoa@s+1)^0,w,c
  7935  002880  B4D8               	btfsc	status,2,c
  7936  002882  EF45  F014         	goto	u4521
  7937  002886  EF47  F014         	goto	u4520
  7938  00288A                     u4521:
  7939  00288A  EF57  F014         	goto	l3972
  7940  00288E                     u4520:
  7941  00288E                     
  7942                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  7943  00288E  1E3D               	comf	(dtoa@n+7)^0,f,c
  7944  002890  1E3C               	comf	(dtoa@n+6)^0,f,c
  7945  002892  1E3B               	comf	(dtoa@n+5)^0,f,c
  7946  002894  1E3A               	comf	(dtoa@n+4)^0,f,c
  7947  002896  1E39               	comf	(dtoa@n+3)^0,f,c
  7948  002898  1E38               	comf	(dtoa@n+2)^0,f,c
  7949  00289A  1E37               	comf	(dtoa@n+1)^0,f,c
  7950  00289C  6C36               	negf	dtoa@n^0,c
  7951  00289E  0E00               	movlw	0
  7952  0028A0  2237               	addwfc	(dtoa@n+1)^0,f,c
  7953  0028A2  2238               	addwfc	(dtoa@n+2)^0,f,c
  7954  0028A4  2239               	addwfc	(dtoa@n+3)^0,f,c
  7955  0028A6  223A               	addwfc	(dtoa@n+4)^0,f,c
  7956  0028A8  223B               	addwfc	(dtoa@n+5)^0,f,c
  7957  0028AA  223C               	addwfc	(dtoa@n+6)^0,f,c
  7958  0028AC  223D               	addwfc	(dtoa@n+7)^0,f,c
  7959  0028AE                     l3972:
  7960                           
  7961                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  7962  0028AE  0100               	movlb	0	; () banked
  7963  0028B0  BFD4               	btfsc	(_prec+1)& (0+255),7,b
  7964  0028B2  EF5D  F014         	goto	u4531
  7965  0028B6  EF5F  F014         	goto	u4530
  7966  0028BA                     u4531:
  7967  0028BA  EF60  F014         	goto	l3976
  7968  0028BE                     u4530:
  7969  0028BE                     
  7970                           ; BSR set to: 0
  7971                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  7972  0028BE  93D5               	bcf	_flags& (0+255),1,b
  7973  0028C0                     l3976:
  7974                           
  7975                           ; BSR set to: 0
  7976                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  7977  0028C0  BFD4               	btfsc	(_prec+1)& (0+255),7,b
  7978  0028C2  EF6D  F014         	goto	u4540
  7979  0028C6  51D4               	movf	(_prec+1)& (0+255),w,b
  7980  0028C8  E106               	bnz	u4541
  7981  0028CA  05D3               	decf	_prec& (0+255),w,b
  7982  0028CC  B0D8               	btfsc	status,0,c
  7983  0028CE  EF6B  F014         	goto	u4541
  7984  0028D2  EF6D  F014         	goto	u4540
  7985  0028D6                     u4541:
  7986  0028D6  EF73  F014         	goto	l874
  7987  0028DA                     u4540:
  7988  0028DA                     
  7989                           ; BSR set to: 0
  7990  0028DA  0E00               	movlw	0
  7991  0028DC  6E31               	movwf	(dtoa@p+1)^0,c
  7992  0028DE  0E01               	movlw	1
  7993  0028E0  6E30               	movwf	dtoa@p^0,c
  7994  0028E2  EF77  F014         	goto	l876
  7995  0028E6                     l874:
  7996                           
  7997                           ; BSR set to: 0
  7998  0028E6  C0D3  F030         	movff	_prec,dtoa@p
  7999  0028EA  C0D4  F031         	movff	_prec+1,dtoa@p+1
  8000  0028EE                     l876:
  8001                           
  8002                           ; BSR set to: 0
  8003                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  8004  0028EE  C0D1  F032         	movff	_width,dtoa@w
  8005  0028F2  C0D2  F033         	movff	_width+1,dtoa@w+1
  8006  0028F6                     
  8007                           ; BSR set to: 0
  8008                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  8009  0028F6  5034               	movf	dtoa@s^0,w,c
  8010  0028F8  1035               	iorwf	(dtoa@s+1)^0,w,c
  8011  0028FA  A4D8               	btfss	status,2,c
  8012  0028FC  EF82  F014         	goto	u4551
  8013  002900  EF84  F014         	goto	u4550
  8014  002904                     u4551:
  8015  002904  EF8B  F014         	goto	l3984
  8016  002908                     u4550:
  8017  002908                     
  8018                           ; BSR set to: 0
  8019  002908  A5D5               	btfss	_flags& (0+255),2,b
  8020  00290A  EF89  F014         	goto	u4561
  8021  00290E  EF8B  F014         	goto	u4560
  8022  002912                     u4561:
  8023  002912  EF8E  F014         	goto	l3986
  8024  002916                     u4560:
  8025  002916                     l3984:
  8026                           
  8027                           ; BSR set to: 0
  8028                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 306:         --w;
  8029  002916  0632               	decf	dtoa@w^0,f,c
  8030  002918  A0D8               	btfss	status,0,c
  8031  00291A  0633               	decf	(dtoa@w+1)^0,f,c
  8032  00291C                     l3986:
  8033                           
  8034                           ; BSR set to: 0
  8035                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  8036  00291C  0E00               	movlw	0
  8037  00291E  6E3F               	movwf	(dtoa@i+1)^0,c
  8038  002920  0E4F               	movlw	79
  8039  002922  6E3E               	movwf	dtoa@i^0,c
  8040  002924                     
  8041                           ; BSR set to: 0
  8042                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  8043  002924  0E00               	movlw	0
  8044  002926  0101               	movlb	1	; () banked
  8045  002928  6F4F               	movwf	(_dbuf+79)& (0+255),b
  8046                           
  8047                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8048  00292A  EF13  F015         	goto	l4000
  8049  00292E                     l3990:
  8050                           
  8051                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 313:         --i;
  8052  00292E  063E               	decf	dtoa@i^0,f,c
  8053  002930  A0D8               	btfss	status,0,c
  8054  002932  063F               	decf	(dtoa@i+1)^0,f,c
  8055  002934                     
  8056                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  8057  002934  0E00               	movlw	low _dbuf
  8058  002936  243E               	addwf	dtoa@i^0,w,c
  8059  002938  6ED9               	movwf	fsr2l,c
  8060  00293A  0E01               	movlw	high _dbuf
  8061  00293C  203F               	addwfc	(dtoa@i+1)^0,w,c
  8062  00293E  6EDA               	movwf	fsr2h,c
  8063  002940  C036  F001         	movff	dtoa@n,___aomod@dividend
  8064  002944  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  8065  002948  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  8066  00294C  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  8067  002950  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  8068  002954  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  8069  002958  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  8070  00295C  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  8071  002960  0E0A               	movlw	10
  8072  002962  6E09               	movwf	___aomod@divisor^0,c
  8073  002964  0E00               	movlw	0
  8074  002966  6E0A               	movwf	(___aomod@divisor+1)^0,c
  8075  002968  0E00               	movlw	0
  8076  00296A  6E0B               	movwf	(___aomod@divisor+2)^0,c
  8077  00296C  0E00               	movlw	0
  8078  00296E  6E0C               	movwf	(___aomod@divisor+3)^0,c
  8079  002970  0E00               	movlw	0
  8080  002972  6E0D               	movwf	(___aomod@divisor+4)^0,c
  8081  002974  0E00               	movlw	0
  8082  002976  6E0E               	movwf	(___aomod@divisor+5)^0,c
  8083  002978  0E00               	movlw	0
  8084  00297A  6E0F               	movwf	(___aomod@divisor+6)^0,c
  8085  00297C  0E00               	movlw	0
  8086  00297E  6E10               	movwf	(___aomod@divisor+7)^0,c
  8087  002980  EC64  F018         	call	___aomod	;wreg free
  8088  002984  C001  F026         	movff	?___aomod,??_dtoa
  8089  002988  C002  F027         	movff	?___aomod+1,??_dtoa+1
  8090  00298C  C003  F028         	movff	?___aomod+2,??_dtoa+2
  8091  002990  C004  F029         	movff	?___aomod+3,??_dtoa+3
  8092  002994  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  8093  002998  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  8094  00299C  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  8095  0029A0  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  8096  0029A4  C026  F013         	movff	??_dtoa,abs@a
  8097  0029A8  C028  F014         	movff	??_dtoa+2,abs@a+1
  8098  0029AC  ECCF  F020         	call	_abs	;wreg free
  8099  0029B0  5013               	movf	?_abs^0,w,c
  8100  0029B2  0F30               	addlw	48
  8101  0029B4  6EDF               	movwf	indf2,c
  8102  0029B6                     
  8103                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 315:         --p;
  8104  0029B6  0630               	decf	dtoa@p^0,f,c
  8105  0029B8  A0D8               	btfss	status,0,c
  8106  0029BA  0631               	decf	(dtoa@p+1)^0,f,c
  8107  0029BC                     
  8108                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 316:         --w;
  8109  0029BC  0632               	decf	dtoa@w^0,f,c
  8110  0029BE  A0D8               	btfss	status,0,c
  8111  0029C0  0633               	decf	(dtoa@w+1)^0,f,c
  8112  0029C2                     
  8113                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  8114  0029C2  C036  F001         	movff	dtoa@n,___aodiv@dividend
  8115  0029C6  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  8116  0029CA  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  8117  0029CE  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  8118  0029D2  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  8119  0029D6  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  8120  0029DA  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  8121  0029DE  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  8122  0029E2  0E0A               	movlw	10
  8123  0029E4  6E09               	movwf	___aodiv@divisor^0,c
  8124  0029E6  0E00               	movlw	0
  8125  0029E8  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  8126  0029EA  0E00               	movlw	0
  8127  0029EC  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  8128  0029EE  0E00               	movlw	0
  8129  0029F0  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  8130  0029F2  0E00               	movlw	0
  8131  0029F4  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  8132  0029F6  0E00               	movlw	0
  8133  0029F8  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  8134  0029FA  0E00               	movlw	0
  8135  0029FC  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  8136  0029FE  0E00               	movlw	0
  8137  002A00  6E10               	movwf	(___aodiv@divisor+7)^0,c
  8138  002A02  ECA0  F017         	call	___aodiv	;wreg free
  8139  002A06  C001  F036         	movff	?___aodiv,dtoa@n
  8140  002A0A  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  8141  002A0E  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  8142  002A12  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  8143  002A16  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  8144  002A1A  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  8145  002A1E  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  8146  002A22  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  8147  002A26                     l4000:
  8148                           
  8149                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8150  002A26  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  8151  002A28  EF1E  F015         	goto	u4571
  8152  002A2C  503F               	movf	(dtoa@i+1)^0,w,c
  8153  002A2E  E108               	bnz	u4570
  8154  002A30  043E               	decf	dtoa@i^0,w,c
  8155  002A32  A0D8               	btfss	status,0,c
  8156  002A34  EF1E  F015         	goto	u4571
  8157  002A38  EF20  F015         	goto	u4570
  8158  002A3C                     u4571:
  8159  002A3C  EF51  F015         	goto	l4010
  8160  002A40                     u4570:
  8161  002A40  5036               	movf	dtoa@n^0,w,c
  8162  002A42  1037               	iorwf	(dtoa@n+1)^0,w,c
  8163  002A44  1038               	iorwf	(dtoa@n+2)^0,w,c
  8164  002A46  1039               	iorwf	(dtoa@n+3)^0,w,c
  8165  002A48  103A               	iorwf	(dtoa@n+4)^0,w,c
  8166  002A4A  103B               	iorwf	(dtoa@n+5)^0,w,c
  8167  002A4C  103C               	iorwf	(dtoa@n+6)^0,w,c
  8168  002A4E  103D               	iorwf	(dtoa@n+7)^0,w,c
  8169  002A50  A4D8               	btfss	status,2,c
  8170  002A52  EF2D  F015         	goto	u4581
  8171  002A56  EF2F  F015         	goto	u4580
  8172  002A5A                     u4581:
  8173  002A5A  EF97  F014         	goto	l3990
  8174  002A5E                     u4580:
  8175  002A5E  BE31               	btfsc	(dtoa@p+1)^0,7,c
  8176  002A60  EF3C  F015         	goto	u4590
  8177  002A64  5031               	movf	(dtoa@p+1)^0,w,c
  8178  002A66  E106               	bnz	u4591
  8179  002A68  0430               	decf	dtoa@p^0,w,c
  8180  002A6A  B0D8               	btfsc	status,0,c
  8181  002A6C  EF3A  F015         	goto	u4591
  8182  002A70  EF3C  F015         	goto	u4590
  8183  002A74                     u4591:
  8184  002A74  EF97  F014         	goto	l3990
  8185  002A78                     u4590:
  8186  002A78  BE33               	btfsc	(dtoa@w+1)^0,7,c
  8187  002A7A  EF47  F015         	goto	u4601
  8188  002A7E  5033               	movf	(dtoa@w+1)^0,w,c
  8189  002A80  E108               	bnz	u4600
  8190  002A82  0432               	decf	dtoa@w^0,w,c
  8191  002A84  A0D8               	btfss	status,0,c
  8192  002A86  EF47  F015         	goto	u4601
  8193  002A8A  EF49  F015         	goto	u4600
  8194  002A8E                     u4601:
  8195  002A8E  EF51  F015         	goto	l4010
  8196  002A92                     u4600:
  8197  002A92  0100               	movlb	0	; () banked
  8198  002A94  B3D5               	btfsc	_flags& (0+255),1,b
  8199  002A96  EF4F  F015         	goto	u4611
  8200  002A9A  EF51  F015         	goto	u4610
  8201  002A9E                     u4611:
  8202  002A9E  EF97  F014         	goto	l3990
  8203  002AA2                     u4610:
  8204  002AA2                     l4010:
  8205                           
  8206                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  8207  002AA2  5034               	movf	dtoa@s^0,w,c
  8208  002AA4  1035               	iorwf	(dtoa@s+1)^0,w,c
  8209  002AA6  A4D8               	btfss	status,2,c
  8210  002AA8  EF58  F015         	goto	u4621
  8211  002AAC  EF5A  F015         	goto	u4620
  8212  002AB0                     u4621:
  8213  002AB0  EF62  F015         	goto	l4014
  8214  002AB4                     u4620:
  8215  002AB4  0100               	movlb	0	; () banked
  8216  002AB6  A5D5               	btfss	_flags& (0+255),2,b
  8217  002AB8  EF60  F015         	goto	u4631
  8218  002ABC  EF62  F015         	goto	u4630
  8219  002AC0                     u4631:
  8220  002AC0  EF80  F015         	goto	l4024
  8221  002AC4                     u4630:
  8222  002AC4                     l4014:
  8223                           
  8224                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 322:         --i;
  8225  002AC4  063E               	decf	dtoa@i^0,f,c
  8226  002AC6  A0D8               	btfss	status,0,c
  8227  002AC8  063F               	decf	(dtoa@i+1)^0,f,c
  8228  002ACA                     
  8229                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  8230  002ACA  5034               	movf	dtoa@s^0,w,c
  8231  002ACC  1035               	iorwf	(dtoa@s+1)^0,w,c
  8232  002ACE  A4D8               	btfss	status,2,c
  8233  002AD0  EF6C  F015         	goto	u4641
  8234  002AD4  EF6E  F015         	goto	u4640
  8235  002AD8                     u4641:
  8236  002AD8  EF74  F015         	goto	l4020
  8237  002ADC                     u4640:
  8238  002ADC  0E00               	movlw	0
  8239  002ADE  6E2F               	movwf	(_dtoa$1119+1)^0,c
  8240  002AE0  0E2B               	movlw	43
  8241  002AE2  6E2E               	movwf	_dtoa$1119^0,c
  8242  002AE4  EF78  F015         	goto	l4022
  8243  002AE8                     l4020:
  8244  002AE8  0E00               	movlw	0
  8245  002AEA  6E2F               	movwf	(_dtoa$1119+1)^0,c
  8246  002AEC  0E2D               	movlw	45
  8247  002AEE  6E2E               	movwf	_dtoa$1119^0,c
  8248  002AF0                     l4022:
  8249  002AF0  0E00               	movlw	low _dbuf
  8250  002AF2  243E               	addwf	dtoa@i^0,w,c
  8251  002AF4  6ED9               	movwf	fsr2l,c
  8252  002AF6  0E01               	movlw	high _dbuf
  8253  002AF8  203F               	addwfc	(dtoa@i+1)^0,w,c
  8254  002AFA  6EDA               	movwf	fsr2h,c
  8255  002AFC  C02E  FFDF         	movff	_dtoa$1119,indf2
  8256  002B00                     l4024:
  8257                           
  8258                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  8259  002B00  C01C  F011         	movff	dtoa@fp,pad@fp
  8260  002B04  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  8261  002B08  0E00               	movlw	low _dbuf
  8262  002B0A  243E               	addwf	dtoa@i^0,w,c
  8263  002B0C  6E13               	movwf	pad@buf^0,c
  8264  002B0E  0E01               	movlw	high _dbuf
  8265  002B10  203F               	addwfc	(dtoa@i+1)^0,w,c
  8266  002B12  6E14               	movwf	(pad@buf+1)^0,c
  8267  002B14  C032  F015         	movff	dtoa@w,pad@p
  8268  002B18  C033  F016         	movff	dtoa@w+1,pad@p+1
  8269  002B1C  ECF5  F01C         	call	_pad	;wreg free
  8270  002B20  C011  F01C         	movff	?_pad,?_dtoa
  8271  002B24  C012  F01D         	movff	?_pad+1,?_dtoa+1
  8272  002B28  0012               	return		;funcret
  8273  002B2A                     __end_of_dtoa:
  8274                           	callstack 0
  8275                           
  8276 ;; *************** function _pad *****************
  8277 ;; Defined at:
  8278 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  8279 ;; Parameters:    Size  Location     Type
  8280 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  8281 ;;		 -> sprintf@f(11), 
  8282 ;;  buf             2   18[COMRAM] PTR unsigned char 
  8283 ;;		 -> dbuf(80), 
  8284 ;;  p               2   20[COMRAM] int 
  8285 ;; Auto vars:     Size  Location     Type
  8286 ;;  w               2   25[COMRAM] int 
  8287 ;;  i               2   23[COMRAM] int 
  8288 ;; Return value:  Size  Location     Type
  8289 ;;                  2   16[COMRAM] int 
  8290 ;; Registers used:
  8291 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8292 ;; Tracked objects:
  8293 ;;		On entry : 0/0
  8294 ;;		On exit  : 0/0
  8295 ;;		Unchanged: 0/0
  8296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8297 ;;      Params:         6       0       0       0       0       0       0       0       0
  8298 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8299 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8300 ;;      Totals:        11       0       0       0       0       0       0       0       0
  8301 ;;Total ram usage:       11 bytes
  8302 ;; Hardware stack levels used: 1
  8303 ;; Hardware stack levels required when called: 3
  8304 ;; This function calls:
  8305 ;;		_fputc
  8306 ;;		_fputs
  8307 ;;		_strlen
  8308 ;; This function is called by:
  8309 ;;		_dtoa
  8310 ;;		_efgtoa
  8311 ;;		_utoa
  8312 ;; This function uses a non-reentrant model
  8313 ;;
  8314                           
  8315                           	psect	text26
  8316  0039EA                     __ptext26:
  8317                           	callstack 0
  8318  0039EA                     _pad:
  8319                           	callstack 22
  8320  0039EA                     
  8321                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  8322  0039EA  0100               	movlb	0	; () banked
  8323  0039EC  A1D5               	btfss	_flags& (0+255),0,b
  8324  0039EE  EFFB  F01C         	goto	u4211
  8325  0039F2  EFFD  F01C         	goto	u4210
  8326  0039F6                     u4211:
  8327  0039F6  EF07  F01D         	goto	l3864
  8328  0039FA                     u4210:
  8329  0039FA                     
  8330                           ; BSR set to: 0
  8331                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  8332  0039FA  C013  F00A         	movff	pad@buf,fputs@s
  8333  0039FE  C014  F00B         	movff	pad@buf+1,fputs@s+1
  8334  003A02  C011  F00C         	movff	pad@fp,fputs@fp
  8335  003A06  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  8336  003A0A  EC8C  F020         	call	_fputs	;wreg free
  8337  003A0E                     l3864:
  8338                           
  8339                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  8340  003A0E  BE16               	btfsc	(pad@p+1)^0,7,c
  8341  003A10  EF0C  F01D         	goto	u4221
  8342  003A14  EF0E  F01D         	goto	u4220
  8343  003A18                     u4221:
  8344  003A18  EF14  F01D         	goto	l3868
  8345  003A1C                     u4220:
  8346  003A1C  C015  F01A         	movff	pad@p,pad@w
  8347  003A20  C016  F01B         	movff	pad@p+1,pad@w+1
  8348  003A24  EF18  F01D         	goto	l863
  8349  003A28                     l3868:
  8350  003A28  0E00               	movlw	0
  8351  003A2A  6E1B               	movwf	(pad@w+1)^0,c
  8352  003A2C  0E00               	movlw	0
  8353  003A2E  6E1A               	movwf	pad@w^0,c
  8354  003A30                     l863:
  8355                           
  8356                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  8357  003A30  0E00               	movlw	0
  8358  003A32  6E19               	movwf	(pad@i+1)^0,c
  8359  003A34  0E00               	movlw	0
  8360  003A36  6E18               	movwf	pad@i^0,c
  8361                           
  8362                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  8363  003A38  EF2A  F01D         	goto	l3874
  8364  003A3C                     l3870:
  8365                           
  8366                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  8367  003A3C  0E00               	movlw	0
  8368  003A3E  6E02               	movwf	(fputc@c+1)^0,c
  8369  003A40  0E20               	movlw	32
  8370  003A42  6E01               	movwf	fputc@c^0,c
  8371  003A44  C011  F003         	movff	pad@fp,fputc@fp
  8372  003A48  C012  F004         	movff	pad@fp+1,fputc@fp+1
  8373  003A4C  EC90  F01C         	call	_fputc	;wreg free
  8374  003A50                     
  8375                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 86:         ++i;
  8376  003A50  4A18               	infsnz	pad@i^0,f,c
  8377  003A52  2A19               	incf	(pad@i+1)^0,f,c
  8378  003A54                     l3874:
  8379                           
  8380                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  8381  003A54  501A               	movf	pad@w^0,w,c
  8382  003A56  5C18               	subwf	pad@i^0,w,c
  8383  003A58  5019               	movf	(pad@i+1)^0,w,c
  8384  003A5A  0A80               	xorlw	128
  8385  003A5C  6E17               	movwf	??_pad^0,c
  8386  003A5E  501B               	movf	(pad@w+1)^0,w,c
  8387  003A60  0A80               	xorlw	128
  8388  003A62  5817               	subwfb	??_pad^0,w,c
  8389  003A64  A0D8               	btfss	status,0,c
  8390  003A66  EF37  F01D         	goto	u4231
  8391  003A6A  EF39  F01D         	goto	u4230
  8392  003A6E                     u4231:
  8393  003A6E  EF1E  F01D         	goto	l3870
  8394  003A72                     u4230:
  8395  003A72                     
  8396                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  8397  003A72  0100               	movlb	0	; () banked
  8398  003A74  B1D5               	btfsc	_flags& (0+255),0,b
  8399  003A76  EF3F  F01D         	goto	u4241
  8400  003A7A  EF41  F01D         	goto	u4240
  8401  003A7E                     u4241:
  8402  003A7E  EF4B  F01D         	goto	l3878
  8403  003A82                     u4240:
  8404  003A82                     
  8405                           ; BSR set to: 0
  8406                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  8407  003A82  C013  F00A         	movff	pad@buf,fputs@s
  8408  003A86  C014  F00B         	movff	pad@buf+1,fputs@s+1
  8409  003A8A  C011  F00C         	movff	pad@fp,fputs@fp
  8410  003A8E  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  8411  003A92  EC8C  F020         	call	_fputs	;wreg free
  8412  003A96                     l3878:
  8413                           
  8414                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  8415  003A96  C013  F001         	movff	pad@buf,strlen@s
  8416  003A9A  C014  F002         	movff	pad@buf+1,strlen@s+1
  8417  003A9E  EC5F  F021         	call	_strlen	;wreg free
  8418  003AA2  501A               	movf	pad@w^0,w,c
  8419  003AA4  2401               	addwf	?_strlen^0,w,c
  8420  003AA6  6E11               	movwf	?_pad^0,c
  8421  003AA8  501B               	movf	(pad@w+1)^0,w,c
  8422  003AAA  2002               	addwfc	(?_strlen+1)^0,w,c
  8423  003AAC  6E12               	movwf	(?_pad+1)^0,c
  8424  003AAE  0012               	return		;funcret
  8425  003AB0                     __end_of_pad:
  8426                           	callstack 0
  8427                           
  8428 ;; *************** function _strlen *****************
  8429 ;; Defined at:
  8430 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  8431 ;; Parameters:    Size  Location     Type
  8432 ;;  s               2    0[COMRAM] PTR const unsigned char 
  8433 ;;		 -> dbuf(80), 
  8434 ;; Auto vars:     Size  Location     Type
  8435 ;;  a               2    2[COMRAM] PTR const unsigned char 
  8436 ;;		 -> dbuf(80), 
  8437 ;; Return value:  Size  Location     Type
  8438 ;;                  2    0[COMRAM] unsigned int 
  8439 ;; Registers used:
  8440 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8441 ;; Tracked objects:
  8442 ;;		On entry : 0/0
  8443 ;;		On exit  : 0/0
  8444 ;;		Unchanged: 0/0
  8445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8446 ;;      Params:         2       0       0       0       0       0       0       0       0
  8447 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8448 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8449 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8450 ;;Total ram usage:        4 bytes
  8451 ;; Hardware stack levels used: 1
  8452 ;; This function calls:
  8453 ;;		Nothing
  8454 ;; This function is called by:
  8455 ;;		_pad
  8456 ;; This function uses a non-reentrant model
  8457 ;;
  8458                           
  8459                           	psect	text27
  8460  0042BE                     __ptext27:
  8461                           	callstack 0
  8462  0042BE                     _strlen:
  8463                           	callstack 24
  8464  0042BE  C001  F003         	movff	strlen@s,strlen@a
  8465  0042C2  C002  F004         	movff	strlen@s+1,strlen@a+1
  8466  0042C6  EF67  F021         	goto	l3282
  8467  0042CA                     l3280:
  8468  0042CA  4A01               	infsnz	strlen@s^0,f,c
  8469  0042CC  2A02               	incf	(strlen@s+1)^0,f,c
  8470  0042CE                     l3282:
  8471  0042CE  C001  FFD9         	movff	strlen@s,fsr2l
  8472  0042D2  C002  FFDA         	movff	strlen@s+1,fsr2h
  8473  0042D6  50DF               	movf	indf2,w,c
  8474  0042D8  A4D8               	btfss	status,2,c
  8475  0042DA  EF71  F021         	goto	u3281
  8476  0042DE  EF73  F021         	goto	u3280
  8477  0042E2                     u3281:
  8478  0042E2  EF65  F021         	goto	l3280
  8479  0042E6                     u3280:
  8480  0042E6  5003               	movf	strlen@a^0,w,c
  8481  0042E8  5C01               	subwf	strlen@s^0,w,c
  8482  0042EA  6E01               	movwf	?_strlen^0,c
  8483  0042EC  5004               	movf	(strlen@a+1)^0,w,c
  8484  0042EE  5802               	subwfb	(strlen@s+1)^0,w,c
  8485  0042F0  6E02               	movwf	(?_strlen+1)^0,c
  8486  0042F2  0012               	return		;funcret
  8487  0042F4                     __end_of_strlen:
  8488                           	callstack 0
  8489                           
  8490 ;; *************** function _fputs *****************
  8491 ;; Defined at:
  8492 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputs.c"
  8493 ;; Parameters:    Size  Location     Type
  8494 ;;  s               2    9[COMRAM] PTR const unsigned char 
  8495 ;;		 -> dbuf(80), 
  8496 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  8497 ;;		 -> sprintf@f(11), 
  8498 ;; Auto vars:     Size  Location     Type
  8499 ;;  i               2   14[COMRAM] int 
  8500 ;;  c               1   13[COMRAM] unsigned char 
  8501 ;; Return value:  Size  Location     Type
  8502 ;;                  2    9[COMRAM] int 
  8503 ;; Registers used:
  8504 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8505 ;; Tracked objects:
  8506 ;;		On entry : 0/0
  8507 ;;		On exit  : 0/0
  8508 ;;		Unchanged: 0/0
  8509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8510 ;;      Params:         4       0       0       0       0       0       0       0       0
  8511 ;;      Locals:         3       0       0       0       0       0       0       0       0
  8512 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8513 ;;      Totals:         7       0       0       0       0       0       0       0       0
  8514 ;;Total ram usage:        7 bytes
  8515 ;; Hardware stack levels used: 1
  8516 ;; Hardware stack levels required when called: 2
  8517 ;; This function calls:
  8518 ;;		_fputc
  8519 ;; This function is called by:
  8520 ;;		_pad
  8521 ;; This function uses a non-reentrant model
  8522 ;;
  8523                           
  8524                           	psect	text28
  8525  004118                     __ptext28:
  8526                           	callstack 0
  8527  004118                     _fputs:
  8528                           	callstack 22
  8529  004118  0E00               	movlw	0
  8530  00411A  6E10               	movwf	(fputs@i+1)^0,c
  8531  00411C  0E00               	movlw	0
  8532  00411E  6E0F               	movwf	fputs@i^0,c
  8533  004120  EF9D  F020         	goto	l3276
  8534  004124                     l3272:
  8535  004124  C00E  F001         	movff	fputs@c,fputc@c
  8536  004128  6A02               	clrf	(fputc@c+1)^0,c
  8537  00412A  C00C  F003         	movff	fputs@fp,fputc@fp
  8538  00412E  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  8539  004132  EC90  F01C         	call	_fputc	;wreg free
  8540  004136  4A0F               	infsnz	fputs@i^0,f,c
  8541  004138  2A10               	incf	(fputs@i+1)^0,f,c
  8542  00413A                     l3276:
  8543  00413A  500F               	movf	fputs@i^0,w,c
  8544  00413C  240A               	addwf	fputs@s^0,w,c
  8545  00413E  6ED9               	movwf	fsr2l,c
  8546  004140  5010               	movf	(fputs@i+1)^0,w,c
  8547  004142  200B               	addwfc	(fputs@s+1)^0,w,c
  8548  004144  6EDA               	movwf	fsr2h,c
  8549  004146  50DF               	movf	indf2,w,c
  8550  004148  6E0E               	movwf	fputs@c^0,c
  8551  00414A  500E               	movf	fputs@c^0,w,c
  8552  00414C  A4D8               	btfss	status,2,c
  8553  00414E  EFAB  F020         	goto	u3271
  8554  004152  EFAD  F020         	goto	u3270
  8555  004156                     u3271:
  8556  004156  EF92  F020         	goto	l3272
  8557  00415A                     u3270:
  8558  00415A  0012               	return		;funcret
  8559  00415C                     __end_of_fputs:
  8560                           	callstack 0
  8561                           
  8562 ;; *************** function _fputc *****************
  8563 ;; Defined at:
  8564 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputc.c"
  8565 ;; Parameters:    Size  Location     Type
  8566 ;;  c               2    0[COMRAM] int 
  8567 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  8568 ;;		 -> sprintf@f(11), 
  8569 ;; Auto vars:     Size  Location     Type
  8570 ;;		None
  8571 ;; Return value:  Size  Location     Type
  8572 ;;                  2    0[COMRAM] int 
  8573 ;; Registers used:
  8574 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8575 ;; Tracked objects:
  8576 ;;		On entry : 0/0
  8577 ;;		On exit  : 0/0
  8578 ;;		Unchanged: 0/0
  8579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8580 ;;      Params:         4       0       0       0       0       0       0       0       0
  8581 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8582 ;;      Temps:          5       0       0       0       0       0       0       0       0
  8583 ;;      Totals:         9       0       0       0       0       0       0       0       0
  8584 ;;Total ram usage:        9 bytes
  8585 ;; Hardware stack levels used: 1
  8586 ;; Hardware stack levels required when called: 1
  8587 ;; This function calls:
  8588 ;;		_putch
  8589 ;; This function is called by:
  8590 ;;		_pad
  8591 ;;		_vfpfcnvrt
  8592 ;;		_fputs
  8593 ;; This function uses a non-reentrant model
  8594 ;;
  8595                           
  8596                           	psect	text29
  8597  003920                     __ptext29:
  8598                           	callstack 0
  8599  003920                     _fputc:
  8600                           	callstack 22
  8601  003920  5003               	movf	fputc@fp^0,w,c
  8602  003922  1004               	iorwf	(fputc@fp+1)^0,w,c
  8603  003924  B4D8               	btfsc	status,2,c
  8604  003926  EF97  F01C         	goto	u2841
  8605  00392A  EF99  F01C         	goto	u2840
  8606  00392E                     u2841:
  8607  00392E  EFA2  F01C         	goto	l3058
  8608  003932                     u2840:
  8609  003932  5003               	movf	fputc@fp^0,w,c
  8610  003934  1004               	iorwf	(fputc@fp+1)^0,w,c
  8611  003936  A4D8               	btfss	status,2,c
  8612  003938  EFA0  F01C         	goto	u2851
  8613  00393C  EFA2  F01C         	goto	u2850
  8614  003940                     u2851:
  8615  003940  EFA7  F01C         	goto	l3060
  8616  003944                     u2850:
  8617  003944                     l3058:
  8618  003944  5001               	movf	fputc@c^0,w,c
  8619  003946  ECCC  F021         	call	_putch
  8620  00394A  EFF4  F01C         	goto	l1135
  8621  00394E                     l3060:
  8622  00394E  EE20 F009          	lfsr	2,9
  8623  003952  5003               	movf	fputc@fp^0,w,c
  8624  003954  26D9               	addwf	fsr2l,f,c
  8625  003956  5004               	movf	(fputc@fp+1)^0,w,c
  8626  003958  22DA               	addwfc	fsr2h,f,c
  8627  00395A  50DE               	movf	postinc2,w,c
  8628  00395C  10DE               	iorwf	postinc2,w,c
  8629  00395E  B4D8               	btfsc	status,2,c
  8630  003960  EFB4  F01C         	goto	u2861
  8631  003964  EFB6  F01C         	goto	u2860
  8632  003968                     u2861:
  8633  003968  EFD1  F01C         	goto	l3064
  8634  00396C                     u2860:
  8635  00396C  EE20 F009          	lfsr	2,9
  8636  003970  5003               	movf	fputc@fp^0,w,c
  8637  003972  26D9               	addwf	fsr2l,f,c
  8638  003974  5004               	movf	(fputc@fp+1)^0,w,c
  8639  003976  22DA               	addwfc	fsr2h,f,c
  8640  003978  EE10 F003          	lfsr	1,3
  8641  00397C  5003               	movf	fputc@fp^0,w,c
  8642  00397E  26E1               	addwf	fsr1l,f,c
  8643  003980  5004               	movf	(fputc@fp+1)^0,w,c
  8644  003982  22E2               	addwfc	fsr1h,f,c
  8645  003984  50DE               	movf	postinc2,w,c
  8646  003986  5CE6               	subwf	postinc1,w,c
  8647  003988  50E6               	movf	postinc1,w,c
  8648  00398A  0A80               	xorlw	128
  8649  00398C  6E09               	movwf	(??_fputc+4)^0,c
  8650  00398E  50DE               	movf	postinc2,w,c
  8651  003990  0A80               	xorlw	128
  8652  003992  5809               	subwfb	(??_fputc+4)^0,w,c
  8653  003994  B0D8               	btfsc	status,0,c
  8654  003996  EFCF  F01C         	goto	u2871
  8655  00399A  EFD1  F01C         	goto	u2870
  8656  00399E                     u2871:
  8657  00399E  EFF4  F01C         	goto	l1135
  8658  0039A2                     u2870:
  8659  0039A2                     l3064:
  8660  0039A2  EE20 F003          	lfsr	2,3
  8661  0039A6  5003               	movf	fputc@fp^0,w,c
  8662  0039A8  26D9               	addwf	fsr2l,f,c
  8663  0039AA  5004               	movf	(fputc@fp+1)^0,w,c
  8664  0039AC  22DA               	addwfc	fsr2h,f,c
  8665  0039AE  CFDE F005          	movff	postinc2,??_fputc
  8666  0039B2  CFDD F006          	movff	postdec2,??_fputc+1
  8667  0039B6  C003  FFD9         	movff	fputc@fp,fsr2l
  8668  0039BA  C004  FFDA         	movff	fputc@fp+1,fsr2h
  8669  0039BE  CFDE F007          	movff	postinc2,??_fputc+2
  8670  0039C2  CFDD F008          	movff	postdec2,??_fputc+3
  8671  0039C6  5005               	movf	??_fputc^0,w,c
  8672  0039C8  2407               	addwf	(??_fputc+2)^0,w,c
  8673  0039CA  6ED9               	movwf	fsr2l,c
  8674  0039CC  5006               	movf	(??_fputc+1)^0,w,c
  8675  0039CE  2008               	addwfc	(??_fputc+3)^0,w,c
  8676  0039D0  6EDA               	movwf	fsr2h,c
  8677  0039D2  C001  FFDF         	movff	fputc@c,indf2
  8678  0039D6  EE20 F003          	lfsr	2,3
  8679  0039DA  5003               	movf	fputc@fp^0,w,c
  8680  0039DC  26D9               	addwf	fsr2l,f,c
  8681  0039DE  5004               	movf	(fputc@fp+1)^0,w,c
  8682  0039E0  22DA               	addwfc	fsr2h,f,c
  8683  0039E2  2ADE               	incf	postinc2,f,c
  8684  0039E4  0E00               	movlw	0
  8685  0039E6  22DD               	addwfc	postdec2,f,c
  8686  0039E8                     l1135:
  8687  0039E8  0012               	return		;funcret
  8688  0039EA                     __end_of_fputc:
  8689                           	callstack 0
  8690                           
  8691 ;; *************** function _putch *****************
  8692 ;; Defined at:
  8693 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\putch.c"
  8694 ;; Parameters:    Size  Location     Type
  8695 ;;  c               1    wreg     unsigned char 
  8696 ;; Auto vars:     Size  Location     Type
  8697 ;;  c               1    0[COMRAM] unsigned char 
  8698 ;; Return value:  Size  Location     Type
  8699 ;;                  1    wreg      void 
  8700 ;; Registers used:
  8701 ;;		wreg
  8702 ;; Tracked objects:
  8703 ;;		On entry : 0/0
  8704 ;;		On exit  : 0/0
  8705 ;;		Unchanged: 0/0
  8706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8707 ;;      Params:         0       0       0       0       0       0       0       0       0
  8708 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8709 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8710 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8711 ;;Total ram usage:        0 bytes
  8712 ;; Hardware stack levels used: 1
  8713 ;; This function calls:
  8714 ;;		Nothing
  8715 ;; This function is called by:
  8716 ;;		_fputc
  8717 ;; This function uses a non-reentrant model
  8718 ;;
  8719                           
  8720                           	psect	text30
  8721  004398                     __ptext30:
  8722                           	callstack 0
  8723  004398                     _putch:
  8724                           	callstack 22
  8725  004398  0012               	return		;funcret
  8726  00439A                     __end_of_putch:
  8727                           	callstack 0
  8728                           
  8729 ;; *************** function _abs *****************
  8730 ;; Defined at:
  8731 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\abs.c"
  8732 ;; Parameters:    Size  Location     Type
  8733 ;;  a               2   18[COMRAM] int 
  8734 ;; Auto vars:     Size  Location     Type
  8735 ;;		None
  8736 ;; Return value:  Size  Location     Type
  8737 ;;                  2   18[COMRAM] int 
  8738 ;; Registers used:
  8739 ;;		wreg, status,2, status,0
  8740 ;; Tracked objects:
  8741 ;;		On entry : 0/0
  8742 ;;		On exit  : 0/0
  8743 ;;		Unchanged: 0/0
  8744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8745 ;;      Params:         2       0       0       0       0       0       0       0       0
  8746 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8747 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8748 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8749 ;;Total ram usage:        4 bytes
  8750 ;; Hardware stack levels used: 1
  8751 ;; This function calls:
  8752 ;;		Nothing
  8753 ;; This function is called by:
  8754 ;;		_dtoa
  8755 ;; This function uses a non-reentrant model
  8756 ;;
  8757                           
  8758                           	psect	text31
  8759  00419E                     __ptext31:
  8760                           	callstack 0
  8761  00419E                     _abs:
  8762                           	callstack 25
  8763  00419E  BE14               	btfsc	(abs@a+1)^0,7,c
  8764  0041A0  EFDC  F020         	goto	u4250
  8765  0041A4  5014               	movf	(abs@a+1)^0,w,c
  8766  0041A6  E106               	bnz	u4251
  8767  0041A8  0413               	decf	abs@a^0,w,c
  8768  0041AA  B0D8               	btfsc	status,0,c
  8769  0041AC  EFDA  F020         	goto	u4251
  8770  0041B0  EFDC  F020         	goto	u4250
  8771  0041B4                     u4251:
  8772  0041B4  EFEA  F020         	goto	l1062
  8773  0041B8                     u4250:
  8774  0041B8  C013  F015         	movff	abs@a,??_abs
  8775  0041BC  C014  F016         	movff	abs@a+1,??_abs+1
  8776  0041C0  1E15               	comf	??_abs^0,f,c
  8777  0041C2  1E16               	comf	(??_abs+1)^0,f,c
  8778  0041C4  4A15               	infsnz	??_abs^0,f,c
  8779  0041C6  2A16               	incf	(??_abs+1)^0,f,c
  8780  0041C8  C015  F013         	movff	??_abs,?_abs
  8781  0041CC  C016  F014         	movff	??_abs+1,?_abs+1
  8782  0041D0  EFEE  F020         	goto	l1065
  8783  0041D4                     l1062:
  8784  0041D4  C013  F013         	movff	abs@a,?_abs
  8785  0041D8  C014  F014         	movff	abs@a+1,?_abs+1
  8786  0041DC                     l1065:
  8787  0041DC  0012               	return		;funcret
  8788  0041DE                     __end_of_abs:
  8789                           	callstack 0
  8790                           
  8791 ;; *************** function ___aomod *****************
  8792 ;; Defined at:
  8793 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aomod.c"
  8794 ;; Parameters:    Size  Location     Type
  8795 ;;  dividend        8    0[COMRAM] long long 
  8796 ;;  divisor         8    8[COMRAM] long long 
  8797 ;; Auto vars:     Size  Location     Type
  8798 ;;  sign            1   17[COMRAM] unsigned char 
  8799 ;;  counter         1   16[COMRAM] unsigned char 
  8800 ;; Return value:  Size  Location     Type
  8801 ;;                  8    0[COMRAM] long long 
  8802 ;; Registers used:
  8803 ;;		wreg, status,2, status,0
  8804 ;; Tracked objects:
  8805 ;;		On entry : 0/0
  8806 ;;		On exit  : 0/0
  8807 ;;		Unchanged: 0/0
  8808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8809 ;;      Params:        16       0       0       0       0       0       0       0       0
  8810 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8811 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8812 ;;      Totals:        18       0       0       0       0       0       0       0       0
  8813 ;;Total ram usage:       18 bytes
  8814 ;; Hardware stack levels used: 1
  8815 ;; This function calls:
  8816 ;;		Nothing
  8817 ;; This function is called by:
  8818 ;;		_dtoa
  8819 ;; This function uses a non-reentrant model
  8820 ;;
  8821                           
  8822                           	psect	text32
  8823  0030C8                     __ptext32:
  8824                           	callstack 0
  8825  0030C8                     ___aomod:
  8826                           	callstack 25
  8827  0030C8  0E00               	movlw	0
  8828  0030CA  6E12               	movwf	___aomod@sign^0,c
  8829  0030CC  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  8830  0030CE  EF6D  F018         	goto	u3380
  8831  0030D2  EF6B  F018         	goto	u3381
  8832  0030D6                     u3381:
  8833  0030D6  EF7F  F018         	goto	l3350
  8834  0030DA                     u3380:
  8835  0030DA  1E08               	comf	(___aomod@dividend+7)^0,f,c
  8836  0030DC  1E07               	comf	(___aomod@dividend+6)^0,f,c
  8837  0030DE  1E06               	comf	(___aomod@dividend+5)^0,f,c
  8838  0030E0  1E05               	comf	(___aomod@dividend+4)^0,f,c
  8839  0030E2  1E04               	comf	(___aomod@dividend+3)^0,f,c
  8840  0030E4  1E03               	comf	(___aomod@dividend+2)^0,f,c
  8841  0030E6  1E02               	comf	(___aomod@dividend+1)^0,f,c
  8842  0030E8  6C01               	negf	___aomod@dividend^0,c
  8843  0030EA  0E00               	movlw	0
  8844  0030EC  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  8845  0030EE  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  8846  0030F0  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  8847  0030F2  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  8848  0030F4  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  8849  0030F6  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  8850  0030F8  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  8851  0030FA  0E01               	movlw	1
  8852  0030FC  6E12               	movwf	___aomod@sign^0,c
  8853  0030FE                     l3350:
  8854  0030FE  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  8855  003100  EF86  F018         	goto	u3390
  8856  003104  EF84  F018         	goto	u3391
  8857  003108                     u3391:
  8858  003108  EF96  F018         	goto	l3354
  8859  00310C                     u3390:
  8860  00310C  1E10               	comf	(___aomod@divisor+7)^0,f,c
  8861  00310E  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  8862  003110  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  8863  003112  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  8864  003114  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  8865  003116  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  8866  003118  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  8867  00311A  6C09               	negf	___aomod@divisor^0,c
  8868  00311C  0E00               	movlw	0
  8869  00311E  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  8870  003120  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  8871  003122  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  8872  003124  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  8873  003126  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  8874  003128  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  8875  00312A  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  8876  00312C                     l3354:
  8877  00312C  5009               	movf	___aomod@divisor^0,w,c
  8878  00312E  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  8879  003130  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  8880  003132  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  8881  003134  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  8882  003136  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  8883  003138  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  8884  00313A  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  8885  00313C  B4D8               	btfsc	status,2,c
  8886  00313E  EFA3  F018         	goto	u3401
  8887  003142  EFA5  F018         	goto	u3400
  8888  003146                     u3401:
  8889  003146  EFED  F018         	goto	l3370
  8890  00314A                     u3400:
  8891  00314A  0E01               	movlw	1
  8892  00314C  6E11               	movwf	___aomod@counter^0,c
  8893  00314E  EFB3  F018         	goto	l3360
  8894  003152                     l3358:
  8895  003152  90D8               	bcf	status,0,c
  8896  003154  3609               	rlcf	___aomod@divisor^0,f,c
  8897  003156  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  8898  003158  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  8899  00315A  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  8900  00315C  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  8901  00315E  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  8902  003160  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  8903  003162  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  8904  003164  2A11               	incf	___aomod@counter^0,f,c
  8905  003166                     l3360:
  8906  003166  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  8907  003168  EFB8  F018         	goto	u3411
  8908  00316C  EFBA  F018         	goto	u3410
  8909  003170                     u3411:
  8910  003170  EFA9  F018         	goto	l3358
  8911  003174                     u3410:
  8912  003174                     l3362:
  8913  003174  5009               	movf	___aomod@divisor^0,w,c
  8914  003176  5C01               	subwf	___aomod@dividend^0,w,c
  8915  003178  500A               	movf	(___aomod@divisor+1)^0,w,c
  8916  00317A  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  8917  00317C  500B               	movf	(___aomod@divisor+2)^0,w,c
  8918  00317E  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  8919  003180  500C               	movf	(___aomod@divisor+3)^0,w,c
  8920  003182  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  8921  003184  500D               	movf	(___aomod@divisor+4)^0,w,c
  8922  003186  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  8923  003188  500E               	movf	(___aomod@divisor+5)^0,w,c
  8924  00318A  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  8925  00318C  500F               	movf	(___aomod@divisor+6)^0,w,c
  8926  00318E  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  8927  003190  5010               	movf	(___aomod@divisor+7)^0,w,c
  8928  003192  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  8929  003194  A0D8               	btfss	status,0,c
  8930  003196  EFCF  F018         	goto	u3421
  8931  00319A  EFD1  F018         	goto	u3420
  8932  00319E                     u3421:
  8933  00319E  EFE1  F018         	goto	l3366
  8934  0031A2                     u3420:
  8935  0031A2  5009               	movf	___aomod@divisor^0,w,c
  8936  0031A4  5E01               	subwf	___aomod@dividend^0,f,c
  8937  0031A6  500A               	movf	(___aomod@divisor+1)^0,w,c
  8938  0031A8  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  8939  0031AA  500B               	movf	(___aomod@divisor+2)^0,w,c
  8940  0031AC  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  8941  0031AE  500C               	movf	(___aomod@divisor+3)^0,w,c
  8942  0031B0  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  8943  0031B2  500D               	movf	(___aomod@divisor+4)^0,w,c
  8944  0031B4  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  8945  0031B6  500E               	movf	(___aomod@divisor+5)^0,w,c
  8946  0031B8  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  8947  0031BA  500F               	movf	(___aomod@divisor+6)^0,w,c
  8948  0031BC  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  8949  0031BE  5010               	movf	(___aomod@divisor+7)^0,w,c
  8950  0031C0  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  8951  0031C2                     l3366:
  8952  0031C2  90D8               	bcf	status,0,c
  8953  0031C4  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  8954  0031C6  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  8955  0031C8  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  8956  0031CA  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  8957  0031CC  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  8958  0031CE  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  8959  0031D0  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  8960  0031D2  3209               	rrcf	___aomod@divisor^0,f,c
  8961  0031D4  2E11               	decfsz	___aomod@counter^0,f,c
  8962  0031D6  EFBA  F018         	goto	l3362
  8963  0031DA                     l3370:
  8964  0031DA  5012               	movf	___aomod@sign^0,w,c
  8965  0031DC  B4D8               	btfsc	status,2,c
  8966  0031DE  EFF3  F018         	goto	u3431
  8967  0031E2  EFF5  F018         	goto	u3430
  8968  0031E6                     u3431:
  8969  0031E6  EF05  F019         	goto	l3374
  8970  0031EA                     u3430:
  8971  0031EA  1E08               	comf	(___aomod@dividend+7)^0,f,c
  8972  0031EC  1E07               	comf	(___aomod@dividend+6)^0,f,c
  8973  0031EE  1E06               	comf	(___aomod@dividend+5)^0,f,c
  8974  0031F0  1E05               	comf	(___aomod@dividend+4)^0,f,c
  8975  0031F2  1E04               	comf	(___aomod@dividend+3)^0,f,c
  8976  0031F4  1E03               	comf	(___aomod@dividend+2)^0,f,c
  8977  0031F6  1E02               	comf	(___aomod@dividend+1)^0,f,c
  8978  0031F8  6C01               	negf	___aomod@dividend^0,c
  8979  0031FA  0E00               	movlw	0
  8980  0031FC  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  8981  0031FE  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  8982  003200  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  8983  003202  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  8984  003204  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  8985  003206  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  8986  003208  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  8987  00320A                     l3374:
  8988  00320A  C001  F001         	movff	___aomod@dividend,?___aomod
  8989  00320E  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  8990  003212  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  8991  003216  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  8992  00321A  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  8993  00321E  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  8994  003222  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  8995  003226  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  8996  00322A  0012               	return		;funcret
  8997  00322C                     __end_of___aomod:
  8998                           	callstack 0
  8999                           
  9000 ;; *************** function ___aodiv *****************
  9001 ;; Defined at:
  9002 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aodiv.c"
  9003 ;; Parameters:    Size  Location     Type
  9004 ;;  dividend        8    0[COMRAM] long long 
  9005 ;;  divisor         8    8[COMRAM] long long 
  9006 ;; Auto vars:     Size  Location     Type
  9007 ;;  quotient        8   18[COMRAM] long long 
  9008 ;;  sign            1   17[COMRAM] unsigned char 
  9009 ;;  counter         1   16[COMRAM] unsigned char 
  9010 ;; Return value:  Size  Location     Type
  9011 ;;                  8    0[COMRAM] long long 
  9012 ;; Registers used:
  9013 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9014 ;; Tracked objects:
  9015 ;;		On entry : 0/0
  9016 ;;		On exit  : 0/0
  9017 ;;		Unchanged: 0/0
  9018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9019 ;;      Params:        16       0       0       0       0       0       0       0       0
  9020 ;;      Locals:        10       0       0       0       0       0       0       0       0
  9021 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9022 ;;      Totals:        26       0       0       0       0       0       0       0       0
  9023 ;;Total ram usage:       26 bytes
  9024 ;; Hardware stack levels used: 1
  9025 ;; This function calls:
  9026 ;;		Nothing
  9027 ;; This function is called by:
  9028 ;;		_dtoa
  9029 ;; This function uses a non-reentrant model
  9030 ;;
  9031                           
  9032                           	psect	text33
  9033  002F40                     __ptext33:
  9034                           	callstack 0
  9035  002F40                     ___aodiv:
  9036                           	callstack 25
  9037  002F40  0E00               	movlw	0
  9038  002F42  6E12               	movwf	___aodiv@sign^0,c
  9039  002F44  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  9040  002F46  EFA9  F017         	goto	u3310
  9041  002F4A  EFA7  F017         	goto	u3311
  9042  002F4E                     u3311:
  9043  002F4E  EFBB  F017         	goto	l3306
  9044  002F52                     u3310:
  9045  002F52  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  9046  002F54  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  9047  002F56  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  9048  002F58  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  9049  002F5A  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  9050  002F5C  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  9051  002F5E  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  9052  002F60  6C09               	negf	___aodiv@divisor^0,c
  9053  002F62  0E00               	movlw	0
  9054  002F64  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  9055  002F66  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  9056  002F68  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  9057  002F6A  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  9058  002F6C  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  9059  002F6E  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  9060  002F70  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  9061  002F72  0E01               	movlw	1
  9062  002F74  6E12               	movwf	___aodiv@sign^0,c
  9063  002F76                     l3306:
  9064  002F76  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  9065  002F78  EFC2  F017         	goto	u3320
  9066  002F7C  EFC0  F017         	goto	u3321
  9067  002F80                     u3321:
  9068  002F80  EFD4  F017         	goto	l3312
  9069  002F84                     u3320:
  9070  002F84  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  9071  002F86  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  9072  002F88  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  9073  002F8A  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  9074  002F8C  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  9075  002F8E  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  9076  002F90  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  9077  002F92  6C01               	negf	___aodiv@dividend^0,c
  9078  002F94  0E00               	movlw	0
  9079  002F96  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  9080  002F98  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  9081  002F9A  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  9082  002F9C  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  9083  002F9E  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  9084  002FA0  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  9085  002FA2  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  9086  002FA4  0E01               	movlw	1
  9087  002FA6  1A12               	xorwf	___aodiv@sign^0,f,c
  9088  002FA8                     l3312:
  9089  002FA8  EE20  F013         	lfsr	2,___aodiv@quotient
  9090  002FAC  0E07               	movlw	7
  9091  002FAE                     u3331:
  9092  002FAE  6ADE               	clrf	postinc2,c
  9093  002FB0  06E8               	decf	wreg,f,c
  9094  002FB2  E2FD               	bc	u3331
  9095  002FB4  5009               	movf	___aodiv@divisor^0,w,c
  9096  002FB6  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  9097  002FB8  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  9098  002FBA  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  9099  002FBC  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  9100  002FBE  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  9101  002FC0  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  9102  002FC2  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  9103  002FC4  B4D8               	btfsc	status,2,c
  9104  002FC6  EFE7  F017         	goto	u3341
  9105  002FCA  EFE9  F017         	goto	u3340
  9106  002FCE                     u3341:
  9107  002FCE  EF3B  F018         	goto	l3334
  9108  002FD2                     u3340:
  9109  002FD2  0E01               	movlw	1
  9110  002FD4  6E11               	movwf	___aodiv@counter^0,c
  9111  002FD6  EFF7  F017         	goto	l3320
  9112  002FDA                     l3318:
  9113  002FDA  90D8               	bcf	status,0,c
  9114  002FDC  3609               	rlcf	___aodiv@divisor^0,f,c
  9115  002FDE  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  9116  002FE0  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  9117  002FE2  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  9118  002FE4  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  9119  002FE6  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  9120  002FE8  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  9121  002FEA  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  9122  002FEC  2A11               	incf	___aodiv@counter^0,f,c
  9123  002FEE                     l3320:
  9124  002FEE  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  9125  002FF0  EFFC  F017         	goto	u3351
  9126  002FF4  EFFE  F017         	goto	u3350
  9127  002FF8                     u3351:
  9128  002FF8  EFED  F017         	goto	l3318
  9129  002FFC                     u3350:
  9130  002FFC                     l3322:
  9131  002FFC  90D8               	bcf	status,0,c
  9132  002FFE  3613               	rlcf	___aodiv@quotient^0,f,c
  9133  003000  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  9134  003002  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  9135  003004  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  9136  003006  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  9137  003008  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  9138  00300A  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  9139  00300C  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  9140  00300E  5009               	movf	___aodiv@divisor^0,w,c
  9141  003010  5C01               	subwf	___aodiv@dividend^0,w,c
  9142  003012  500A               	movf	(___aodiv@divisor+1)^0,w,c
  9143  003014  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  9144  003016  500B               	movf	(___aodiv@divisor+2)^0,w,c
  9145  003018  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  9146  00301A  500C               	movf	(___aodiv@divisor+3)^0,w,c
  9147  00301C  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  9148  00301E  500D               	movf	(___aodiv@divisor+4)^0,w,c
  9149  003020  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  9150  003022  500E               	movf	(___aodiv@divisor+5)^0,w,c
  9151  003024  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  9152  003026  500F               	movf	(___aodiv@divisor+6)^0,w,c
  9153  003028  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  9154  00302A  5010               	movf	(___aodiv@divisor+7)^0,w,c
  9155  00302C  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  9156  00302E  A0D8               	btfss	status,0,c
  9157  003030  EF1C  F018         	goto	u3361
  9158  003034  EF1E  F018         	goto	u3360
  9159  003038                     u3361:
  9160  003038  EF2F  F018         	goto	l3330
  9161  00303C                     u3360:
  9162  00303C  5009               	movf	___aodiv@divisor^0,w,c
  9163  00303E  5E01               	subwf	___aodiv@dividend^0,f,c
  9164  003040  500A               	movf	(___aodiv@divisor+1)^0,w,c
  9165  003042  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  9166  003044  500B               	movf	(___aodiv@divisor+2)^0,w,c
  9167  003046  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  9168  003048  500C               	movf	(___aodiv@divisor+3)^0,w,c
  9169  00304A  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  9170  00304C  500D               	movf	(___aodiv@divisor+4)^0,w,c
  9171  00304E  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  9172  003050  500E               	movf	(___aodiv@divisor+5)^0,w,c
  9173  003052  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  9174  003054  500F               	movf	(___aodiv@divisor+6)^0,w,c
  9175  003056  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  9176  003058  5010               	movf	(___aodiv@divisor+7)^0,w,c
  9177  00305A  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  9178  00305C  8013               	bsf	___aodiv@quotient^0,0,c
  9179  00305E                     l3330:
  9180  00305E  90D8               	bcf	status,0,c
  9181  003060  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  9182  003062  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  9183  003064  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  9184  003066  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  9185  003068  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  9186  00306A  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  9187  00306C  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  9188  00306E  3209               	rrcf	___aodiv@divisor^0,f,c
  9189  003070  2E11               	decfsz	___aodiv@counter^0,f,c
  9190  003072  EFFE  F017         	goto	l3322
  9191  003076                     l3334:
  9192  003076  5012               	movf	___aodiv@sign^0,w,c
  9193  003078  B4D8               	btfsc	status,2,c
  9194  00307A  EF41  F018         	goto	u3371
  9195  00307E  EF43  F018         	goto	u3370
  9196  003082                     u3371:
  9197  003082  EF53  F018         	goto	l3338
  9198  003086                     u3370:
  9199  003086  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  9200  003088  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  9201  00308A  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  9202  00308C  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  9203  00308E  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  9204  003090  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  9205  003092  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  9206  003094  6C13               	negf	___aodiv@quotient^0,c
  9207  003096  0E00               	movlw	0
  9208  003098  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  9209  00309A  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  9210  00309C  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  9211  00309E  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  9212  0030A0  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  9213  0030A2  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  9214  0030A4  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  9215  0030A6                     l3338:
  9216  0030A6  C013  F001         	movff	___aodiv@quotient,?___aodiv
  9217  0030AA  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  9218  0030AE  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  9219  0030B2  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  9220  0030B6  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  9221  0030BA  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  9222  0030BE  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  9223  0030C2  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  9224  0030C6  0012               	return		;funcret
  9225  0030C8                     __end_of___aodiv:
  9226                           	callstack 0
  9227                           
  9228 ;; *************** function _atoi *****************
  9229 ;; Defined at:
  9230 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\atoi.c"
  9231 ;; Parameters:    Size  Location     Type
  9232 ;;  s               2    7[COMRAM] PTR const unsigned char 
  9233 ;;		 -> STR_11(10), STR_10(10), STR_9(15), STR_8(16), 
  9234 ;;		 -> STR_7(7), STR_6(8), STR_5(9), STR_4(5), 
  9235 ;;		 -> STR_3(7), 
  9236 ;; Auto vars:     Size  Location     Type
  9237 ;;  n               2   15[COMRAM] int 
  9238 ;;  neg             2   13[COMRAM] int 
  9239 ;; Return value:  Size  Location     Type
  9240 ;;                  2    7[COMRAM] int 
  9241 ;; Registers used:
  9242 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9243 ;; Tracked objects:
  9244 ;;		On entry : 0/0
  9245 ;;		On exit  : 0/0
  9246 ;;		Unchanged: 0/0
  9247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9248 ;;      Params:         2       0       0       0       0       0       0       0       0
  9249 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9250 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9251 ;;      Totals:        10       0       0       0       0       0       0       0       0
  9252 ;;Total ram usage:       10 bytes
  9253 ;; Hardware stack levels used: 1
  9254 ;; Hardware stack levels required when called: 1
  9255 ;; This function calls:
  9256 ;;		___wmul
  9257 ;;		_isdigit
  9258 ;;		_isspace
  9259 ;; This function is called by:
  9260 ;;		_vfpfcnvrt
  9261 ;; This function uses a non-reentrant model
  9262 ;;
  9263                           
  9264                           	psect	text34
  9265  00322C                     __ptext34:
  9266                           	callstack 0
  9267  00322C                     _atoi:
  9268                           	callstack 25
  9269  00322C  0E00               	movlw	0
  9270  00322E  6E11               	movwf	(atoi@n+1)^0,c
  9271  003230  0E00               	movlw	0
  9272  003232  6E10               	movwf	atoi@n^0,c
  9273  003234  0E00               	movlw	0
  9274  003236  6E0F               	movwf	(atoi@neg+1)^0,c
  9275  003238  0E00               	movlw	0
  9276  00323A  6E0E               	movwf	atoi@neg^0,c
  9277  00323C  EF22  F019         	goto	l4376
  9278  003240                     l4372:
  9279  003240  4A08               	infsnz	atoi@s^0,f,c
  9280  003242  2A09               	incf	(atoi@s+1)^0,f,c
  9281  003244                     l4376:
  9282  003244  C008  FFF6         	movff	atoi@s,tblptrl
  9283  003248  C009  FFF7         	movff	atoi@s+1,tblptrh
  9284  00324C                     	if	0	;tblptru may be non-zero
  9285  00324C                     	endif
  9286  00324C                     	if	0	;tblptru may be non-zero
  9287  00324C                     	endif
  9288  00324C  0008               	tblrd		*
  9289  00324E  50F5               	movf	tablat,w,c
  9290  003250  0A20               	xorlw	32
  9291  003252  B4D8               	btfsc	status,2,c
  9292  003254  EF2E  F019         	goto	u5201
  9293  003258  EF30  F019         	goto	u5200
  9294  00325C                     u5201:
  9295  00325C  EF20  F019         	goto	l4372
  9296  003260                     u5200:
  9297  003260  0EF7               	movlw	247
  9298  003262  6E0A               	movwf	??_atoi^0,c
  9299  003264  0EFF               	movlw	255
  9300  003266  6E0B               	movwf	(??_atoi+1)^0,c
  9301  003268  C008  FFF6         	movff	atoi@s,tblptrl
  9302  00326C  C009  FFF7         	movff	atoi@s+1,tblptrh
  9303  003270                     	if	0	;tblptru may be non-zero
  9304  003270                     	endif
  9305  003270                     	if	0	;tblptru may be non-zero
  9306  003270                     	endif
  9307  003270  0008               	tblrd		*
  9308  003272  50F5               	movf	tablat,w,c
  9309  003274  6E0C               	movwf	(??_atoi+2)^0,c
  9310  003276  6A0D               	clrf	(??_atoi+3)^0,c
  9311  003278  500A               	movf	??_atoi^0,w,c
  9312  00327A  260C               	addwf	(??_atoi+2)^0,f,c
  9313  00327C  500B               	movf	(??_atoi+1)^0,w,c
  9314  00327E  220D               	addwfc	(??_atoi+3)^0,f,c
  9315  003280  500D               	movf	(??_atoi+3)^0,w,c
  9316  003282  E109               	bnz	u5210
  9317  003284  0E05               	movlw	5
  9318  003286  5C0C               	subwf	(??_atoi+2)^0,w,c
  9319  003288  A0D8               	btfss	status,0,c
  9320  00328A  EF49  F019         	goto	u5211
  9321  00328E  EF4B  F019         	goto	u5210
  9322  003292                     u5211:
  9323  003292  EF20  F019         	goto	l4372
  9324  003296                     u5210:
  9325  003296  EF55  F019         	goto	l4384
  9326  00329A                     l4380:
  9327  00329A  0E00               	movlw	0
  9328  00329C  6E0F               	movwf	(atoi@neg+1)^0,c
  9329  00329E  0E01               	movlw	1
  9330  0032A0  6E0E               	movwf	atoi@neg^0,c
  9331  0032A2                     l4382:
  9332  0032A2  4A08               	infsnz	atoi@s^0,f,c
  9333  0032A4  2A09               	incf	(atoi@s+1)^0,f,c
  9334  0032A6  EF8A  F019         	goto	l4392
  9335  0032AA                     l4384:
  9336  0032AA  C008  FFF6         	movff	atoi@s,tblptrl
  9337  0032AE  C009  FFF7         	movff	atoi@s+1,tblptrh
  9338  0032B2                     	if	0	;tblptru may be non-zero
  9339  0032B2                     	endif
  9340  0032B2                     	if	0	;tblptru may be non-zero
  9341  0032B2                     	endif
  9342  0032B2  0008               	tblrd		*
  9343  0032B4  50F5               	movf	tablat,w,c
  9344  0032B6  6E0A               	movwf	??_atoi^0,c
  9345  0032B8  6A0B               	clrf	(??_atoi+1)^0,c
  9346                           
  9347                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9348                           ; Switch size 1, requested type "simple"
  9349                           ; Number of cases is 1, Range of values is 0 to 0
  9350                           ; switch strategies available:
  9351                           ; Name         Instructions Cycles
  9352                           ; simple_byte            4     3 (average)
  9353                           ;	Chosen strategy is simple_byte
  9354  0032BA  500B               	movf	(??_atoi+1)^0,w,c
  9355  0032BC  0A00               	xorlw	0	; case 0
  9356  0032BE  B4D8               	btfsc	status,2,c
  9357  0032C0  EF64  F019         	goto	l4890
  9358  0032C4  EF8A  F019         	goto	l4392
  9359  0032C8                     l4890:
  9360                           
  9361                           ; Switch size 1, requested type "simple"
  9362                           ; Number of cases is 2, Range of values is 43 to 45
  9363                           ; switch strategies available:
  9364                           ; Name         Instructions Cycles
  9365                           ; simple_byte            7     4 (average)
  9366                           ;	Chosen strategy is simple_byte
  9367  0032C8  500A               	movf	??_atoi^0,w,c
  9368  0032CA  0A2B               	xorlw	43	; case 43
  9369  0032CC  B4D8               	btfsc	status,2,c
  9370  0032CE  EF51  F019         	goto	l4382
  9371  0032D2  0A06               	xorlw	6	; case 45
  9372  0032D4  B4D8               	btfsc	status,2,c
  9373  0032D6  EF4D  F019         	goto	l4380
  9374  0032DA  EF8A  F019         	goto	l4392
  9375  0032DE                     l4386:
  9376  0032DE  C010  F001         	movff	atoi@n,___wmul@multiplier
  9377  0032E2  C011  F002         	movff	atoi@n+1,___wmul@multiplier+1
  9378  0032E6  0E00               	movlw	0
  9379  0032E8  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  9380  0032EA  0E0A               	movlw	10
  9381  0032EC  6E03               	movwf	___wmul@multiplicand^0,c
  9382  0032EE  EC7A  F021         	call	___wmul	;wreg free
  9383  0032F2  C008  FFF6         	movff	atoi@s,tblptrl
  9384  0032F6  C009  FFF7         	movff	atoi@s+1,tblptrh
  9385  0032FA                     	if	0	;tblptru may be non-zero
  9386  0032FA                     	endif
  9387  0032FA                     	if	0	;tblptru may be non-zero
  9388  0032FA                     	endif
  9389  0032FA  0008               	tblrd		*
  9390  0032FC  50F5               	movf	tablat,w,c
  9391  0032FE  5E01               	subwf	?___wmul^0,f,c
  9392  003300  0E00               	movlw	0
  9393  003302  5A02               	subwfb	(?___wmul+1)^0,f,c
  9394  003304  0E30               	movlw	48
  9395  003306  2401               	addwf	?___wmul^0,w,c
  9396  003308  6E10               	movwf	atoi@n^0,c
  9397  00330A  0E00               	movlw	0
  9398  00330C  2002               	addwfc	(?___wmul+1)^0,w,c
  9399  00330E  6E11               	movwf	(atoi@n+1)^0,c
  9400  003310  EF51  F019         	goto	l4382
  9401  003314                     l4392:
  9402  003314  0ED0               	movlw	208
  9403  003316  6E0A               	movwf	??_atoi^0,c
  9404  003318  0EFF               	movlw	255
  9405  00331A  6E0B               	movwf	(??_atoi+1)^0,c
  9406  00331C  C008  FFF6         	movff	atoi@s,tblptrl
  9407  003320  C009  FFF7         	movff	atoi@s+1,tblptrh
  9408  003324                     	if	0	;tblptru may be non-zero
  9409  003324                     	endif
  9410  003324                     	if	0	;tblptru may be non-zero
  9411  003324                     	endif
  9412  003324  0008               	tblrd		*
  9413  003326  50F5               	movf	tablat,w,c
  9414  003328  6E0C               	movwf	(??_atoi+2)^0,c
  9415  00332A  6A0D               	clrf	(??_atoi+3)^0,c
  9416  00332C  500A               	movf	??_atoi^0,w,c
  9417  00332E  260C               	addwf	(??_atoi+2)^0,f,c
  9418  003330  500B               	movf	(??_atoi+1)^0,w,c
  9419  003332  220D               	addwfc	(??_atoi+3)^0,f,c
  9420  003334  500D               	movf	(??_atoi+3)^0,w,c
  9421  003336  E109               	bnz	u5220
  9422  003338  0E0A               	movlw	10
  9423  00333A  5C0C               	subwf	(??_atoi+2)^0,w,c
  9424  00333C  A0D8               	btfss	status,0,c
  9425  00333E  EFA3  F019         	goto	u5221
  9426  003342  EFA5  F019         	goto	u5220
  9427  003346                     u5221:
  9428  003346  EF6F  F019         	goto	l4386
  9429  00334A                     u5220:
  9430  00334A  500E               	movf	atoi@neg^0,w,c
  9431  00334C  100F               	iorwf	(atoi@neg+1)^0,w,c
  9432  00334E  A4D8               	btfss	status,2,c
  9433  003350  EFAC  F019         	goto	u5231
  9434  003354  EFAE  F019         	goto	u5230
  9435  003358                     u5231:
  9436  003358  EFBC  F019         	goto	l1087
  9437  00335C                     u5230:
  9438  00335C  C010  F00A         	movff	atoi@n,??_atoi
  9439  003360  C011  F00B         	movff	atoi@n+1,??_atoi+1
  9440  003364  1E0A               	comf	??_atoi^0,f,c
  9441  003366  1E0B               	comf	(??_atoi+1)^0,f,c
  9442  003368  4A0A               	infsnz	??_atoi^0,f,c
  9443  00336A  2A0B               	incf	(??_atoi+1)^0,f,c
  9444  00336C  C00A  F008         	movff	??_atoi,?_atoi
  9445  003370  C00B  F009         	movff	??_atoi+1,?_atoi+1
  9446  003374  EFC0  F019         	goto	l1090
  9447  003378                     l1087:
  9448  003378  C010  F008         	movff	atoi@n,?_atoi
  9449  00337C  C011  F009         	movff	atoi@n+1,?_atoi+1
  9450  003380                     l1090:
  9451  003380  0012               	return		;funcret
  9452  003382                     __end_of_atoi:
  9453                           	callstack 0
  9454                           
  9455 ;; *************** function _isspace *****************
  9456 ;; Defined at:
  9457 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isspace.c"
  9458 ;; Parameters:    Size  Location     Type
  9459 ;;  c               2    0[COMRAM] int 
  9460 ;; Auto vars:     Size  Location     Type
  9461 ;;		None
  9462 ;; Return value:  Size  Location     Type
  9463 ;;                  2    0[COMRAM] int 
  9464 ;; Registers used:
  9465 ;;		wreg, status,2, status,0
  9466 ;; Tracked objects:
  9467 ;;		On entry : 0/0
  9468 ;;		On exit  : 0/0
  9469 ;;		Unchanged: 0/0
  9470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9471 ;;      Params:         2       0       0       0       0       0       0       0       0
  9472 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9473 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9474 ;;      Totals:         7       0       0       0       0       0       0       0       0
  9475 ;;Total ram usage:        7 bytes
  9476 ;; Hardware stack levels used: 1
  9477 ;; This function calls:
  9478 ;;		Nothing
  9479 ;; This function is called by:
  9480 ;;		_atoi
  9481 ;; This function uses a non-reentrant model
  9482 ;;
  9483                           
  9484                           	psect	text35
  9485  00403A                     __ptext35:
  9486                           	callstack 0
  9487  00403A                     _isspace:
  9488                           	callstack 25
  9489  00403A  0E01               	movlw	1
  9490  00403C  6E07               	movwf	_isspace$1240^0,c
  9491  00403E  0E20               	movlw	32
  9492  004040  1801               	xorwf	isspace@c^0,w,c
  9493  004042  1002               	iorwf	(isspace@c+1)^0,w,c
  9494  004044  B4D8               	btfsc	status,2,c
  9495  004046  EF27  F020         	goto	u4481
  9496  00404A  EF29  F020         	goto	u4480
  9497  00404E                     u4481:
  9498  00404E  EF42  F020         	goto	l3962
  9499  004052                     u4480:
  9500  004052  0EF7               	movlw	247
  9501  004054  6E03               	movwf	??_isspace^0,c
  9502  004056  0EFF               	movlw	255
  9503  004058  6E04               	movwf	(??_isspace+1)^0,c
  9504  00405A  C001  F005         	movff	isspace@c,??_isspace+2
  9505  00405E  C002  F006         	movff	isspace@c+1,??_isspace+3
  9506  004062  5003               	movf	??_isspace^0,w,c
  9507  004064  2605               	addwf	(??_isspace+2)^0,f,c
  9508  004066  5004               	movf	(??_isspace+1)^0,w,c
  9509  004068  2206               	addwfc	(??_isspace+3)^0,f,c
  9510  00406A  5006               	movf	(??_isspace+3)^0,w,c
  9511  00406C  E109               	bnz	u4490
  9512  00406E  0E05               	movlw	5
  9513  004070  5C05               	subwf	(??_isspace+2)^0,w,c
  9514  004072  A0D8               	btfss	status,0,c
  9515  004074  EF3E  F020         	goto	u4491
  9516  004078  EF40  F020         	goto	u4490
  9517  00407C                     u4491:
  9518  00407C  EF42  F020         	goto	l3962
  9519  004080                     u4490:
  9520  004080  0E00               	movlw	0
  9521  004082  6E07               	movwf	_isspace$1240^0,c
  9522  004084                     l3962:
  9523  004084  C007  F001         	movff	_isspace$1240,?_isspace
  9524  004088  6A02               	clrf	(?_isspace+1)^0,c
  9525  00408A  0012               	return		;funcret
  9526  00408C                     __end_of_isspace:
  9527                           	callstack 0
  9528                           
  9529 ;; *************** function _isdigit *****************
  9530 ;; Defined at:
  9531 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isdigit.c"
  9532 ;; Parameters:    Size  Location     Type
  9533 ;;  c               2    0[COMRAM] int 
  9534 ;; Auto vars:     Size  Location     Type
  9535 ;;		None
  9536 ;; Return value:  Size  Location     Type
  9537 ;;                  2    0[COMRAM] int 
  9538 ;; Registers used:
  9539 ;;		wreg, status,2, status,0
  9540 ;; Tracked objects:
  9541 ;;		On entry : 0/0
  9542 ;;		On exit  : 0/0
  9543 ;;		Unchanged: 0/0
  9544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9545 ;;      Params:         2       0       0       0       0       0       0       0       0
  9546 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9547 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9548 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9549 ;;Total ram usage:        6 bytes
  9550 ;; Hardware stack levels used: 1
  9551 ;; This function calls:
  9552 ;;		Nothing
  9553 ;; This function is called by:
  9554 ;;		_vfpfcnvrt
  9555 ;;		_atoi
  9556 ;; This function uses a non-reentrant model
  9557 ;;
  9558                           
  9559                           	psect	text36
  9560  00424E                     __ptext36:
  9561                           	callstack 0
  9562  00424E                     _isdigit:
  9563                           	callstack 26
  9564  00424E  0ED0               	movlw	208
  9565  004250  6E03               	movwf	??_isdigit^0,c
  9566  004252  0EFF               	movlw	255
  9567  004254  6E04               	movwf	(??_isdigit+1)^0,c
  9568  004256  C001  F005         	movff	isdigit@c,??_isdigit+2
  9569  00425A  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  9570  00425E  5003               	movf	??_isdigit^0,w,c
  9571  004260  2605               	addwf	(??_isdigit+2)^0,f,c
  9572  004262  5004               	movf	(??_isdigit+1)^0,w,c
  9573  004264  2206               	addwfc	(??_isdigit+3)^0,f,c
  9574  004266  5006               	movf	(??_isdigit+3)^0,w,c
  9575  004268  E10A               	bnz	u4460
  9576  00426A  0E0A               	movlw	10
  9577  00426C  5C05               	subwf	(??_isdigit+2)^0,w,c
  9578  00426E  A0D8               	btfss	status,0,c
  9579  004270  EF3C  F021         	goto	u4461
  9580  004274  EF3F  F021         	goto	u4460
  9581  004278                     u4461:
  9582  004278  0E01               	movlw	1
  9583  00427A  EF40  F021         	goto	u4470
  9584  00427E                     u4460:
  9585  00427E  0E00               	movlw	0
  9586  004280                     u4470:
  9587  004280  6E01               	movwf	?_isdigit^0,c
  9588  004282  6A02               	clrf	(?_isdigit+1)^0,c
  9589  004284  0012               	return		;funcret
  9590  004286                     __end_of_isdigit:
  9591                           	callstack 0
  9592                           
  9593 ;; *************** function ___wmul *****************
  9594 ;; Defined at:
  9595 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
  9596 ;; Parameters:    Size  Location     Type
  9597 ;;  multiplier      2    0[COMRAM] unsigned int 
  9598 ;;  multiplicand    2    2[COMRAM] unsigned int 
  9599 ;; Auto vars:     Size  Location     Type
  9600 ;;  product         2    4[COMRAM] unsigned int 
  9601 ;; Return value:  Size  Location     Type
  9602 ;;                  2    0[COMRAM] unsigned int 
  9603 ;; Registers used:
  9604 ;;		wreg, status,2, status,0, prodl, prodh
  9605 ;; Tracked objects:
  9606 ;;		On entry : 0/0
  9607 ;;		On exit  : 0/0
  9608 ;;		Unchanged: 0/0
  9609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9610 ;;      Params:         4       0       0       0       0       0       0       0       0
  9611 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9612 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9613 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9614 ;;Total ram usage:        6 bytes
  9615 ;; Hardware stack levels used: 1
  9616 ;; This function calls:
  9617 ;;		Nothing
  9618 ;; This function is called by:
  9619 ;;		_atoi
  9620 ;; This function uses a non-reentrant model
  9621 ;;
  9622                           
  9623                           	psect	text37
  9624  0042F4                     __ptext37:
  9625                           	callstack 0
  9626  0042F4                     ___wmul:
  9627                           	callstack 25
  9628  0042F4  5001               	movf	___wmul@multiplier^0,w,c
  9629  0042F6  0203               	mulwf	___wmul@multiplicand^0,c
  9630  0042F8  CFF3 F005          	movff	prodl,___wmul@product
  9631  0042FC  CFF4 F006          	movff	prodh,___wmul@product+1
  9632  004300  5001               	movf	___wmul@multiplier^0,w,c
  9633  004302  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  9634  004304  50F3               	movf	243,w,c
  9635  004306  2606               	addwf	(___wmul@product+1)^0,f,c
  9636  004308  5002               	movf	(___wmul@multiplier+1)^0,w,c
  9637  00430A  0203               	mulwf	___wmul@multiplicand^0,c
  9638  00430C  50F3               	movf	243,w,c
  9639  00430E  2606               	addwf	(___wmul@product+1)^0,f,c
  9640  004310  C005  F001         	movff	___wmul@product,?___wmul
  9641  004314  C006  F002         	movff	___wmul@product+1,?___wmul+1
  9642  004318  0012               	return		;funcret
  9643  00431A                     __end_of___wmul:
  9644                           	callstack 0
  9645                           
  9646 ;; *************** function _Lcd_Write_String *****************
  9647 ;; Defined at:
  9648 ;;		line 97 in file "lcd.c"
  9649 ;; Parameters:    Size  Location     Type
  9650 ;;  a               2    4[COMRAM] PTR unsigned char 
  9651 ;;		 -> ejemplo5@str_contador(17), ejemplo4@str_contador(10), ejemplo3@str_dato2(17), ejemplo3@str_dato(17), 
  9652 ;;		 -> ejemplo2@str_num_primo(2), ejemplo2@str_pi(7), ejemplo2@str_temp1(4), ejemplo2@str_numero(4), 
  9653 ;;		 -> STR_2(10), STR_1(10), 
  9654 ;; Auto vars:     Size  Location     Type
  9655 ;;  i               2    8[COMRAM] int 
  9656 ;; Return value:  Size  Location     Type
  9657 ;;                  1    wreg      void 
  9658 ;; Registers used:
  9659 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9660 ;; Tracked objects:
  9661 ;;		On entry : 0/0
  9662 ;;		On exit  : 0/0
  9663 ;;		Unchanged: 0/0
  9664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9665 ;;      Params:         2       0       0       0       0       0       0       0       0
  9666 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9667 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9668 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9669 ;;Total ram usage:        6 bytes
  9670 ;; Hardware stack levels used: 1
  9671 ;; Hardware stack levels required when called: 2
  9672 ;; This function calls:
  9673 ;;		_Lcd_Write_Char
  9674 ;; This function is called by:
  9675 ;;		_ejemplo5
  9676 ;;		_ejemplo1
  9677 ;;		_ejemplo2
  9678 ;;		_ejemplo3
  9679 ;;		_ejemplo4
  9680 ;; This function uses a non-reentrant model
  9681 ;;
  9682                           
  9683                           	psect	text38
  9684  003D76                     __ptext38:
  9685                           	callstack 0
  9686  003D76                     _Lcd_Write_String:
  9687                           	callstack 27
  9688  003D76                     
  9689                           ;lcd.c: 97: void Lcd_Write_String(unsigned char *a);lcd.c: 98: {;lcd.c: 99:  int i;;lcd.
      +                          c: 100:  for(i=0;a[i]!='\0';i++)
  9690  003D76  0E00               	movlw	0
  9691  003D78  6E0A               	movwf	(Lcd_Write_String@i+1)^0,c
  9692  003D7A  0E00               	movlw	0
  9693  003D7C  6E09               	movwf	Lcd_Write_String@i^0,c
  9694  003D7E  EFDB  F01E         	goto	l4658
  9695  003D82                     l4654:
  9696                           
  9697                           ;lcd.c: 101:     Lcd_Write_Char(a[i]);
  9698  003D82  5009               	movf	Lcd_Write_String@i^0,w,c
  9699  003D84  2405               	addwf	Lcd_Write_String@a^0,w,c
  9700  003D86  6E07               	movwf	??_Lcd_Write_String^0,c
  9701  003D88  500A               	movf	(Lcd_Write_String@i+1)^0,w,c
  9702  003D8A  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
  9703  003D8C  6E08               	movwf	(??_Lcd_Write_String+1)^0,c
  9704  003D8E  C007  FFF6         	movff	??_Lcd_Write_String,tblptrl
  9705  003D92  C008  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
  9706  003D96  6AF8               	clrf	tblptru,c
  9707  003D98  0E07               	movlw	(high __ramtop+-1)
  9708  003D9A  64F7               	cpfsgt	tblptrh,c
  9709  003D9C  D003               	bra	u5547
  9710  003D9E  0008               	tblrd		*
  9711  003DA0  50F5               	movf	tablat,w,c
  9712  003DA2  D005               	bra	u5540
  9713  003DA4                     u5547:
  9714  003DA4  CFF6 FFE1          	movff	tblptrl,fsr1l
  9715  003DA8  CFF7 FFE2          	movff	tblptrh,fsr1h
  9716  003DAC  50E7               	movf	indf1,w,c
  9717  003DAE                     u5540:
  9718  003DAE  EC43  F021         	call	_Lcd_Write_Char
  9719  003DB2  4A09               	infsnz	Lcd_Write_String@i^0,f,c
  9720  003DB4  2A0A               	incf	(Lcd_Write_String@i+1)^0,f,c
  9721  003DB6                     l4658:
  9722  003DB6  5009               	movf	Lcd_Write_String@i^0,w,c
  9723  003DB8  2405               	addwf	Lcd_Write_String@a^0,w,c
  9724  003DBA  6E07               	movwf	??_Lcd_Write_String^0,c
  9725  003DBC  500A               	movf	(Lcd_Write_String@i+1)^0,w,c
  9726  003DBE  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
  9727  003DC0  6E08               	movwf	(??_Lcd_Write_String+1)^0,c
  9728  003DC2  C007  FFF6         	movff	??_Lcd_Write_String,tblptrl
  9729  003DC6  C008  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
  9730  003DCA  6AF8               	clrf	tblptru,c
  9731  003DCC  0E07               	movlw	(high __ramtop+-1)
  9732  003DCE  64F7               	cpfsgt	tblptrh,c
  9733  003DD0  D003               	bra	u5557
  9734  003DD2  0008               	tblrd		*
  9735  003DD4  50F5               	movf	tablat,w,c
  9736  003DD6  D005               	bra	u5550
  9737  003DD8                     u5557:
  9738  003DD8  CFF6 FFE1          	movff	tblptrl,fsr1l
  9739  003DDC  CFF7 FFE2          	movff	tblptrh,fsr1h
  9740  003DE0  50E7               	movf	indf1,w,c
  9741  003DE2                     u5550:
  9742  003DE2  0900               	iorlw	0
  9743  003DE4  A4D8               	btfss	status,2,c
  9744  003DE6  EFF7  F01E         	goto	u5561
  9745  003DEA  EFF9  F01E         	goto	u5560
  9746  003DEE                     u5561:
  9747  003DEE  EFC1  F01E         	goto	l4654
  9748  003DF2                     u5560:
  9749  003DF2  0012               	return		;funcret
  9750  003DF4                     __end_of_Lcd_Write_String:
  9751                           	callstack 0
  9752                           
  9753 ;; *************** function _Lcd_Write_Char *****************
  9754 ;; Defined at:
  9755 ;;		line 81 in file "lcd.c"
  9756 ;; Parameters:    Size  Location     Type
  9757 ;;  a               1    wreg     unsigned char 
  9758 ;; Auto vars:     Size  Location     Type
  9759 ;;  a               1    3[COMRAM] unsigned char 
  9760 ;;  y               1    2[COMRAM] unsigned char 
  9761 ;;  temp            1    1[COMRAM] unsigned char 
  9762 ;; Return value:  Size  Location     Type
  9763 ;;                  1    wreg      void 
  9764 ;; Registers used:
  9765 ;;		wreg, status,2, status,0, cstack
  9766 ;; Tracked objects:
  9767 ;;		On entry : 0/0
  9768 ;;		On exit  : 0/0
  9769 ;;		Unchanged: 0/0
  9770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9771 ;;      Params:         0       0       0       0       0       0       0       0       0
  9772 ;;      Locals:         3       0       0       0       0       0       0       0       0
  9773 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9774 ;;      Totals:         3       0       0       0       0       0       0       0       0
  9775 ;;Total ram usage:        3 bytes
  9776 ;; Hardware stack levels used: 1
  9777 ;; Hardware stack levels required when called: 1
  9778 ;; This function calls:
  9779 ;;		_Lcd_Port
  9780 ;; This function is called by:
  9781 ;;		_Lcd_Write_String
  9782 ;; This function uses a non-reentrant model
  9783 ;;
  9784                           
  9785                           	psect	text39
  9786  004286                     __ptext39:
  9787                           	callstack 0
  9788  004286                     _Lcd_Write_Char:
  9789                           	callstack 27
  9790                           
  9791                           ;incstack = 0
  9792                           ;Lcd_Write_Char@a stored from wreg
  9793  004286  6E04               	movwf	Lcd_Write_Char@a^0,c
  9794  004288                     
  9795                           ;lcd.c: 81: void Lcd_Write_Char(unsigned char a);lcd.c: 82: {;lcd.c: 83:    char temp,y;
      +                          ;lcd.c: 84:    temp = a&0x0F;
  9796  004288  5004               	movf	Lcd_Write_Char@a^0,w,c
  9797  00428A  0B0F               	andlw	15
  9798  00428C  6E02               	movwf	Lcd_Write_Char@temp^0,c
  9799                           
  9800                           ;lcd.c: 85:    y = a&0xF0;
  9801  00428E  5004               	movf	Lcd_Write_Char@a^0,w,c
  9802  004290  0BF0               	andlw	240
  9803  004292  6E03               	movwf	Lcd_Write_Char@y^0,c
  9804  004294                     
  9805                           ;lcd.c: 86:    LATDbits.LATD2 = 1;
  9806  004294  848C               	bsf	140,2,c	;volatile
  9807  004296                     
  9808                           ;lcd.c: 87:    Lcd_Port(y>>4);
  9809  004296  3803               	swapf	Lcd_Write_Char@y^0,w,c
  9810  004298  0B0F               	andlw	15
  9811  00429A  ECC6  F01F         	call	_Lcd_Port
  9812  00429E                     
  9813                           ;lcd.c: 88:    LATDbits.LATD3 = 1;
  9814  00429E  868C               	bsf	140,3,c	;volatile
  9815  0042A0                     
  9816                           ;lcd.c: 89:    _delay((unsigned long)((40)*(16000000/4000000.0)));
  9817  0042A0  0E35               	movlw	53
  9818  0042A2                     u5677:
  9819  0042A2  2EE8               	decfsz	wreg,f,c
  9820  0042A4  D7FE               	bra	u5677
  9821  0042A6  F000               	nop	
  9822  0042A8                     
  9823                           ;lcd.c: 90:    LATDbits.LATD3 = 0;
  9824  0042A8  968C               	bcf	140,3,c	;volatile
  9825  0042AA                     
  9826                           ;lcd.c: 91:    Lcd_Port(temp);
  9827  0042AA  5002               	movf	Lcd_Write_Char@temp^0,w,c
  9828  0042AC  ECC6  F01F         	call	_Lcd_Port
  9829  0042B0                     
  9830                           ;lcd.c: 92:    LATDbits.LATD3 = 1;
  9831  0042B0  868C               	bsf	140,3,c	;volatile
  9832  0042B2                     
  9833                           ;lcd.c: 93:    _delay((unsigned long)((40)*(16000000/4000000.0)));
  9834  0042B2  0E35               	movlw	53
  9835  0042B4                     u5687:
  9836  0042B4  2EE8               	decfsz	wreg,f,c
  9837  0042B6  D7FE               	bra	u5687
  9838  0042B8  F000               	nop	
  9839  0042BA                     
  9840                           ;lcd.c: 94:    LATDbits.LATD3 = 0;
  9841  0042BA  968C               	bcf	140,3,c	;volatile
  9842  0042BC  0012               	return		;funcret
  9843  0042BE                     __end_of_Lcd_Write_Char:
  9844                           	callstack 0
  9845                           
  9846 ;; *************** function _Lcd_Set_Cursor *****************
  9847 ;; Defined at:
  9848 ;;		line 41 in file "lcd.c"
  9849 ;; Parameters:    Size  Location     Type
  9850 ;;  a               1    wreg     unsigned char 
  9851 ;;  b               1    3[COMRAM] unsigned char 
  9852 ;; Auto vars:     Size  Location     Type
  9853 ;;  a               1    4[COMRAM] unsigned char 
  9854 ;;  temp            1    7[COMRAM] unsigned char 
  9855 ;;  y               1    6[COMRAM] unsigned char 
  9856 ;;  z               1    5[COMRAM] unsigned char 
  9857 ;; Return value:  Size  Location     Type
  9858 ;;                  1    wreg      void 
  9859 ;; Registers used:
  9860 ;;		wreg, status,2, status,0, cstack
  9861 ;; Tracked objects:
  9862 ;;		On entry : 0/0
  9863 ;;		On exit  : 0/0
  9864 ;;		Unchanged: 0/0
  9865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9866 ;;      Params:         1       0       0       0       0       0       0       0       0
  9867 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9868 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9869 ;;      Totals:         5       0       0       0       0       0       0       0       0
  9870 ;;Total ram usage:        5 bytes
  9871 ;; Hardware stack levels used: 1
  9872 ;; Hardware stack levels required when called: 2
  9873 ;; This function calls:
  9874 ;;		_Lcd_Cmd
  9875 ;; This function is called by:
  9876 ;;		_ejemplo5
  9877 ;;		_ejemplo1
  9878 ;;		_ejemplo2
  9879 ;;		_ejemplo3
  9880 ;;		_ejemplo4
  9881 ;; This function uses a non-reentrant model
  9882 ;;
  9883                           
  9884                           	psect	text40
  9885  003E68                     __ptext40:
  9886                           	callstack 0
  9887  003E68                     _Lcd_Set_Cursor:
  9888                           	callstack 27
  9889                           
  9890                           ;incstack = 0
  9891                           ;Lcd_Set_Cursor@a stored from wreg
  9892  003E68  6E05               	movwf	Lcd_Set_Cursor@a^0,c
  9893  003E6A                     
  9894                           ;lcd.c: 41: void Lcd_Set_Cursor(unsigned char a, unsigned char b);lcd.c: 42: {;lcd.c: 43
      +                          :  char temp,z,y;;lcd.c: 44:  if(a == 1)
  9895  003E6A  0405               	decf	Lcd_Set_Cursor@a^0,w,c
  9896  003E6C  A4D8               	btfss	status,2,c
  9897  003E6E  EF3B  F01F         	goto	u5521
  9898  003E72  EF3D  F01F         	goto	u5520
  9899  003E76                     u5521:
  9900  003E76  EF4E  F01F         	goto	l4644
  9901  003E7A                     u5520:
  9902  003E7A                     
  9903                           ;lcd.c: 45:  {;lcd.c: 46:    temp = 0x80 + b - 1;
  9904  003E7A  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  9905  003E7C  0F7F               	addlw	127
  9906  003E7E  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  9907                           
  9908                           ;lcd.c: 47:   z = temp>>4;
  9909  003E80  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  9910  003E82  0B0F               	andlw	15
  9911  003E84  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  9912                           
  9913                           ;lcd.c: 48:   y = temp & 0x0F;
  9914  003E86  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  9915  003E88  0B0F               	andlw	15
  9916  003E8A  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  9917  003E8C                     
  9918                           ;lcd.c: 49:   Lcd_Cmd(z);
  9919  003E8C  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  9920  003E8E  EC8D  F021         	call	_Lcd_Cmd
  9921  003E92                     
  9922                           ;lcd.c: 50:   Lcd_Cmd(y);
  9923  003E92  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  9924  003E94  EC8D  F021         	call	_Lcd_Cmd
  9925                           
  9926                           ;lcd.c: 51:  }
  9927  003E98  EF66  F01F         	goto	l27
  9928  003E9C                     l4644:
  9929  003E9C  0E02               	movlw	2
  9930  003E9E  1805               	xorwf	Lcd_Set_Cursor@a^0,w,c
  9931  003EA0  A4D8               	btfss	status,2,c
  9932  003EA2  EF55  F01F         	goto	u5531
  9933  003EA6  EF57  F01F         	goto	u5530
  9934  003EAA                     u5531:
  9935  003EAA  EF66  F01F         	goto	l27
  9936  003EAE                     u5530:
  9937  003EAE                     
  9938                           ;lcd.c: 53:  {;lcd.c: 54:   temp = 0xC0 + b - 1;
  9939  003EAE  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  9940  003EB0  0FBF               	addlw	191
  9941  003EB2  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  9942                           
  9943                           ;lcd.c: 55:   z = temp>>4;
  9944  003EB4  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  9945  003EB6  0B0F               	andlw	15
  9946  003EB8  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  9947                           
  9948                           ;lcd.c: 56:   y = temp & 0x0F;
  9949  003EBA  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  9950  003EBC  0B0F               	andlw	15
  9951  003EBE  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  9952  003EC0                     
  9953                           ;lcd.c: 57:   Lcd_Cmd(z);
  9954  003EC0  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  9955  003EC2  EC8D  F021         	call	_Lcd_Cmd
  9956  003EC6                     
  9957                           ;lcd.c: 58:   Lcd_Cmd(y);
  9958  003EC6  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  9959  003EC8  EC8D  F021         	call	_Lcd_Cmd
  9960  003ECC                     l27:
  9961  003ECC  0012               	return		;funcret
  9962  003ECE                     __end_of_Lcd_Set_Cursor:
  9963                           	callstack 0
  9964                           
  9965 ;; *************** function _Lcd_Init *****************
  9966 ;; Defined at:
  9967 ;;		line 62 in file "lcd.c"
  9968 ;; Parameters:    Size  Location     Type
  9969 ;;		None
  9970 ;; Auto vars:     Size  Location     Type
  9971 ;;		None
  9972 ;; Return value:  Size  Location     Type
  9973 ;;                  1    wreg      void 
  9974 ;; Registers used:
  9975 ;;		wreg, status,2, cstack
  9976 ;; Tracked objects:
  9977 ;;		On entry : 0/0
  9978 ;;		On exit  : 0/0
  9979 ;;		Unchanged: 0/0
  9980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9981 ;;      Params:         0       0       0       0       0       0       0       0       0
  9982 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9983 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9984 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9985 ;;Total ram usage:        1 bytes
  9986 ;; Hardware stack levels used: 1
  9987 ;; Hardware stack levels required when called: 2
  9988 ;; This function calls:
  9989 ;;		_Lcd_Cmd
  9990 ;;		_Lcd_Port
  9991 ;; This function is called by:
  9992 ;;		_main
  9993 ;; This function uses a non-reentrant model
  9994 ;;
  9995                           
  9996                           	psect	text41
  9997  003DF4                     __ptext41:
  9998                           	callstack 0
  9999  003DF4                     _Lcd_Init:
 10000                           	callstack 28
 10001  003DF4                     
 10002                           ;lcd.c: 64:   Lcd_Port(0x00);
 10003  003DF4  0E00               	movlw	0
 10004  003DF6  ECC6  F01F         	call	_Lcd_Port
 10005  003DFA                     
 10006                           ;lcd.c: 65:    _delay((unsigned long)((20)*(16000000/4000.0)));
 10007  003DFA  0E68               	movlw	104
 10008  003DFC  6E04               	movwf	??_Lcd_Init^0,c
 10009  003DFE  0EE4               	movlw	228
 10010  003E00                     u5697:
 10011  003E00  2EE8               	decfsz	wreg,f,c
 10012  003E02  D7FE               	bra	u5697
 10013  003E04  2E04               	decfsz	??_Lcd_Init^0,f,c
 10014  003E06  D7FC               	bra	u5697
 10015  003E08  D000               	nop2	
 10016  003E0A                     
 10017                           ;lcd.c: 66:   Lcd_Cmd(0x03);
 10018  003E0A  0E03               	movlw	3
 10019  003E0C  EC8D  F021         	call	_Lcd_Cmd
 10020  003E10                     
 10021                           ;lcd.c: 67:  _delay((unsigned long)((5)*(16000000/4000.0)));
 10022  003E10  0E1A               	movlw	26
 10023  003E12  6E04               	movwf	??_Lcd_Init^0,c
 10024  003E14  0EF8               	movlw	248
 10025  003E16                     u5707:
 10026  003E16  2EE8               	decfsz	wreg,f,c
 10027  003E18  D7FE               	bra	u5707
 10028  003E1A  2E04               	decfsz	??_Lcd_Init^0,f,c
 10029  003E1C  D7FC               	bra	u5707
 10030  003E1E  D000               	nop2	
 10031  003E20                     
 10032                           ;lcd.c: 68:   Lcd_Cmd(0x03);
 10033  003E20  0E03               	movlw	3
 10034  003E22  EC8D  F021         	call	_Lcd_Cmd
 10035  003E26                     
 10036                           ;lcd.c: 69:  _delay((unsigned long)((11)*(16000000/4000.0)));
 10037  003E26  0E3A               	movlw	58
 10038  003E28  6E04               	movwf	??_Lcd_Init^0,c
 10039  003E2A  0E23               	movlw	35
 10040  003E2C                     u5717:
 10041  003E2C  2EE8               	decfsz	wreg,f,c
 10042  003E2E  D7FE               	bra	u5717
 10043  003E30  2E04               	decfsz	??_Lcd_Init^0,f,c
 10044  003E32  D7FC               	bra	u5717
 10045  003E34  F000               	nop	
 10046  003E36                     
 10047                           ;lcd.c: 70:   Lcd_Cmd(0x03);
 10048  003E36  0E03               	movlw	3
 10049  003E38  EC8D  F021         	call	_Lcd_Cmd
 10050  003E3C                     
 10051                           ;lcd.c: 72:   Lcd_Cmd(0x02);
 10052  003E3C  0E02               	movlw	2
 10053  003E3E  EC8D  F021         	call	_Lcd_Cmd
 10054  003E42                     
 10055                           ;lcd.c: 73:   Lcd_Cmd(0x02);
 10056  003E42  0E02               	movlw	2
 10057  003E44  EC8D  F021         	call	_Lcd_Cmd
 10058  003E48                     
 10059                           ;lcd.c: 74:   Lcd_Cmd(0x08);
 10060  003E48  0E08               	movlw	8
 10061  003E4A  EC8D  F021         	call	_Lcd_Cmd
 10062  003E4E                     
 10063                           ;lcd.c: 75:   Lcd_Cmd(0x00);
 10064  003E4E  0E00               	movlw	0
 10065  003E50  EC8D  F021         	call	_Lcd_Cmd
 10066  003E54                     
 10067                           ;lcd.c: 76:   Lcd_Cmd(0x0C);
 10068  003E54  0E0C               	movlw	12
 10069  003E56  EC8D  F021         	call	_Lcd_Cmd
 10070  003E5A                     
 10071                           ;lcd.c: 77:   Lcd_Cmd(0x00);
 10072  003E5A  0E00               	movlw	0
 10073  003E5C  EC8D  F021         	call	_Lcd_Cmd
 10074  003E60                     
 10075                           ;lcd.c: 78:   Lcd_Cmd(0x06);
 10076  003E60  0E06               	movlw	6
 10077  003E62  EC8D  F021         	call	_Lcd_Cmd
 10078  003E66  0012               	return		;funcret
 10079  003E68                     __end_of_Lcd_Init:
 10080                           	callstack 0
 10081                           
 10082 ;; *************** function _Lcd_Clear *****************
 10083 ;; Defined at:
 10084 ;;		line 35 in file "lcd.c"
 10085 ;; Parameters:    Size  Location     Type
 10086 ;;		None
 10087 ;; Auto vars:     Size  Location     Type
 10088 ;;		None
 10089 ;; Return value:  Size  Location     Type
 10090 ;;                  1    wreg      void 
 10091 ;; Registers used:
 10092 ;;		wreg, status,2, cstack
 10093 ;; Tracked objects:
 10094 ;;		On entry : 0/0
 10095 ;;		On exit  : 0/0
 10096 ;;		Unchanged: 0/0
 10097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10098 ;;      Params:         0       0       0       0       0       0       0       0       0
 10099 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10100 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10101 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10102 ;;Total ram usage:        0 bytes
 10103 ;; Hardware stack levels used: 1
 10104 ;; Hardware stack levels required when called: 2
 10105 ;; This function calls:
 10106 ;;		_Lcd_Cmd
 10107 ;; This function is called by:
 10108 ;;		_main
 10109 ;;		_ejemplo1
 10110 ;; This function uses a non-reentrant model
 10111 ;;
 10112                           
 10113                           	psect	text42
 10114  004376                     __ptext42:
 10115                           	callstack 0
 10116  004376                     _Lcd_Clear:
 10117                           	callstack 28
 10118  004376                     
 10119                           ;lcd.c: 37:  Lcd_Cmd(0);
 10120  004376  0E00               	movlw	0
 10121  004378  EC8D  F021         	call	_Lcd_Cmd
 10122                           
 10123                           ;lcd.c: 38:  Lcd_Cmd(1);
 10124  00437C  0E01               	movlw	1
 10125  00437E  EC8D  F021         	call	_Lcd_Cmd
 10126  004382  0012               	return		;funcret
 10127  004384                     __end_of_Lcd_Clear:
 10128                           	callstack 0
 10129                           
 10130 ;; *************** function _Lcd_Cmd *****************
 10131 ;; Defined at:
 10132 ;;		line 26 in file "lcd.c"
 10133 ;; Parameters:    Size  Location     Type
 10134 ;;  a               1    wreg     unsigned char 
 10135 ;; Auto vars:     Size  Location     Type
 10136 ;;  a               1    2[COMRAM] unsigned char 
 10137 ;; Return value:  Size  Location     Type
 10138 ;;                  1    wreg      void 
 10139 ;; Registers used:
 10140 ;;		wreg, status,2, cstack
 10141 ;; Tracked objects:
 10142 ;;		On entry : 0/0
 10143 ;;		On exit  : 0/0
 10144 ;;		Unchanged: 0/0
 10145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10146 ;;      Params:         0       0       0       0       0       0       0       0       0
 10147 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10148 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10149 ;;      Totals:         2       0       0       0       0       0       0       0       0
 10150 ;;Total ram usage:        2 bytes
 10151 ;; Hardware stack levels used: 1
 10152 ;; Hardware stack levels required when called: 1
 10153 ;; This function calls:
 10154 ;;		_Lcd_Port
 10155 ;; This function is called by:
 10156 ;;		_Lcd_Clear
 10157 ;;		_Lcd_Set_Cursor
 10158 ;;		_Lcd_Init
 10159 ;;		_Lcd_Shift_Right
 10160 ;;		_Lcd_Shift_Left
 10161 ;; This function uses a non-reentrant model
 10162 ;;
 10163                           
 10164                           	psect	text43
 10165  00431A                     __ptext43:
 10166                           	callstack 0
 10167  00431A                     _Lcd_Cmd:
 10168                           	callstack 27
 10169                           
 10170                           ;incstack = 0
 10171                           ;Lcd_Cmd@a stored from wreg
 10172  00431A  6E03               	movwf	Lcd_Cmd@a^0,c
 10173  00431C                     
 10174                           ;lcd.c: 26: void Lcd_Cmd(unsigned char a);lcd.c: 27: {;lcd.c: 28:  LATDbits.LATD2 = 0;
 10175  00431C  948C               	bcf	140,2,c	;volatile
 10176  00431E                     
 10177                           ;lcd.c: 29:  Lcd_Port(a);
 10178  00431E  5003               	movf	Lcd_Cmd@a^0,w,c
 10179  004320  ECC6  F01F         	call	_Lcd_Port
 10180  004324                     
 10181                           ;lcd.c: 30:  LATDbits.LATD3 = 1;
 10182  004324  868C               	bsf	140,3,c	;volatile
 10183  004326                     
 10184                           ;lcd.c: 31:         _delay((unsigned long)((4)*(16000000/4000.0)));
 10185  004326  0E15               	movlw	21
 10186  004328  6E02               	movwf	??_Lcd_Cmd^0,c
 10187  00432A  0EC6               	movlw	198
 10188  00432C                     u5727:
 10189  00432C  2EE8               	decfsz	wreg,f,c
 10190  00432E  D7FE               	bra	u5727
 10191  004330  2E02               	decfsz	??_Lcd_Cmd^0,f,c
 10192  004332  D7FC               	bra	u5727
 10193  004334  D000               	nop2	
 10194  004336                     
 10195                           ;lcd.c: 32:         LATDbits.LATD3 = 0;
 10196  004336  968C               	bcf	140,3,c	;volatile
 10197  004338  0012               	return		;funcret
 10198  00433A                     __end_of_Lcd_Cmd:
 10199                           	callstack 0
 10200                           
 10201 ;; *************** function _Lcd_Port *****************
 10202 ;; Defined at:
 10203 ;;		line 3 in file "lcd.c"
 10204 ;; Parameters:    Size  Location     Type
 10205 ;;  a               1    wreg     unsigned char 
 10206 ;; Auto vars:     Size  Location     Type
 10207 ;;  a               1    0[COMRAM] unsigned char 
 10208 ;; Return value:  Size  Location     Type
 10209 ;;                  1    wreg      void 
 10210 ;; Registers used:
 10211 ;;		wreg
 10212 ;; Tracked objects:
 10213 ;;		On entry : 0/0
 10214 ;;		On exit  : 0/0
 10215 ;;		Unchanged: 0/0
 10216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10217 ;;      Params:         0       0       0       0       0       0       0       0       0
 10218 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10219 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10220 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10221 ;;Total ram usage:        1 bytes
 10222 ;; Hardware stack levels used: 1
 10223 ;; This function calls:
 10224 ;;		Nothing
 10225 ;; This function is called by:
 10226 ;;		_Lcd_Cmd
 10227 ;;		_Lcd_Init
 10228 ;;		_Lcd_Write_Char
 10229 ;; This function uses a non-reentrant model
 10230 ;;
 10231                           
 10232                           	psect	text44
 10233  003F8C                     __ptext44:
 10234                           	callstack 0
 10235  003F8C                     _Lcd_Port:
 10236                           	callstack 27
 10237                           
 10238                           ;incstack = 0
 10239                           ;Lcd_Port@a stored from wreg
 10240  003F8C  6E01               	movwf	Lcd_Port@a^0,c
 10241  003F8E                     
 10242                           ;lcd.c: 3: void Lcd_Port(unsigned char a);lcd.c: 4: {;lcd.c: 5:  if(a & 1)
 10243  003F8E  A001               	btfss	Lcd_Port@a^0,0,c
 10244  003F90  EFCC  F01F         	goto	u5291
 10245  003F94  EFCE  F01F         	goto	u5290
 10246  003F98                     u5291:
 10247  003F98  EFD1  F01F         	goto	l7
 10248  003F9C                     u5290:
 10249  003F9C                     
 10250                           ;lcd.c: 6:   LATDbits.LATD4 = 1;
 10251  003F9C  888C               	bsf	140,4,c	;volatile
 10252  003F9E  EFD2  F01F         	goto	l4426
 10253  003FA2                     l7:
 10254                           
 10255                           ;lcd.c: 8:   LATDbits.LATD4 = 0;
 10256  003FA2  988C               	bcf	140,4,c	;volatile
 10257  003FA4                     l4426:
 10258                           
 10259                           ;lcd.c: 10:  if(a & 2)
 10260  003FA4  A201               	btfss	Lcd_Port@a^0,1,c
 10261  003FA6  EFD7  F01F         	goto	u5301
 10262  003FAA  EFD9  F01F         	goto	u5300
 10263  003FAE                     u5301:
 10264  003FAE  EFDC  F01F         	goto	l9
 10265  003FB2                     u5300:
 10266  003FB2                     
 10267                           ;lcd.c: 11:   LATDbits.LATD5 = 1;
 10268  003FB2  8A8C               	bsf	140,5,c	;volatile
 10269  003FB4  EFDD  F01F         	goto	l4430
 10270  003FB8                     l9:
 10271                           
 10272                           ;lcd.c: 13:   LATDbits.LATD5 = 0;
 10273  003FB8  9A8C               	bcf	140,5,c	;volatile
 10274  003FBA                     l4430:
 10275                           
 10276                           ;lcd.c: 15:  if(a & 4)
 10277  003FBA  A401               	btfss	Lcd_Port@a^0,2,c
 10278  003FBC  EFE2  F01F         	goto	u5311
 10279  003FC0  EFE4  F01F         	goto	u5310
 10280  003FC4                     u5311:
 10281  003FC4  EFE7  F01F         	goto	l11
 10282  003FC8                     u5310:
 10283  003FC8                     
 10284                           ;lcd.c: 16:   LATDbits.LATD6 = 1;
 10285  003FC8  8C8C               	bsf	140,6,c	;volatile
 10286  003FCA  EFE8  F01F         	goto	l4434
 10287  003FCE                     l11:
 10288                           
 10289                           ;lcd.c: 18:   LATDbits.LATD6 = 0;
 10290  003FCE  9C8C               	bcf	140,6,c	;volatile
 10291  003FD0                     l4434:
 10292                           
 10293                           ;lcd.c: 20:  if(a & 8)
 10294  003FD0  A601               	btfss	Lcd_Port@a^0,3,c
 10295  003FD2  EFED  F01F         	goto	u5321
 10296  003FD6  EFEF  F01F         	goto	u5320
 10297  003FDA                     u5321:
 10298  003FDA  EFF2  F01F         	goto	l13
 10299  003FDE                     u5320:
 10300  003FDE                     
 10301                           ;lcd.c: 21:   LATDbits.LATD7 = 1;
 10302  003FDE  8E8C               	bsf	140,7,c	;volatile
 10303  003FE0  EFF3  F01F         	goto	l15
 10304  003FE4                     l13:
 10305                           
 10306                           ;lcd.c: 23:   LATDbits.LATD7 = 0;
 10307  003FE4  9E8C               	bcf	140,7,c	;volatile
 10308  003FE6                     l15:
 10309  003FE6  0012               	return		;funcret
 10310  003FE8                     __end_of_Lcd_Port:
 10311                           	callstack 0
 10312                           
 10313 ;; *************** function _Config_Port *****************
 10314 ;; Defined at:
 10315 ;;		line 50 in file "main.c"
 10316 ;; Parameters:    Size  Location     Type
 10317 ;;		None
 10318 ;; Auto vars:     Size  Location     Type
 10319 ;;		None
 10320 ;; Return value:  Size  Location     Type
 10321 ;;                  1    wreg      void 
 10322 ;; Registers used:
 10323 ;;		wreg, status,2
 10324 ;; Tracked objects:
 10325 ;;		On entry : 0/0
 10326 ;;		On exit  : 0/0
 10327 ;;		Unchanged: 0/0
 10328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10329 ;;      Params:         0       0       0       0       0       0       0       0       0
 10330 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10331 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10332 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10333 ;;Total ram usage:        0 bytes
 10334 ;; Hardware stack levels used: 1
 10335 ;; This function calls:
 10336 ;;		Nothing
 10337 ;; This function is called by:
 10338 ;;		_main
 10339 ;; This function uses a non-reentrant model
 10340 ;;
 10341                           
 10342                           	psect	text45
 10343  00433A                     __ptext45:
 10344                           	callstack 0
 10345  00433A                     _Config_Port:
 10346                           	callstack 30
 10347  00433A                     
 10348                           ;main.c: 52:     LATD= 0b00000000;
 10349  00433A  0E00               	movlw	0
 10350  00433C  6E8C               	movwf	140,c	;volatile
 10351                           
 10352                           ;main.c: 55:     SLRCON=0b00000000;
 10353  00433E  0E00               	movlw	0
 10354  004340  6E7A               	movwf	122,c	;volatile
 10355                           
 10356                           ;main.c: 58:     ANSELD=0b00000000;
 10357  004342  0E00               	movlw	0
 10358  004344  010F               	movlb	15	; () banked
 10359  004346  6F5E               	movwf	94,b	;volatile
 10360  004348                     
 10361                           ; BSR set to: 15
 10362                           ;main.c: 59:     ANSELAbits.ANSA0=0;
 10363  004348  915B               	bcf	91,0,b	;volatile
 10364  00434A                     
 10365                           ; BSR set to: 15
 10366                           ;main.c: 60:     ANSELBbits.ANSB1=0;
 10367  00434A  935C               	bcf	92,1,b	;volatile
 10368                           
 10369                           ;main.c: 63:     TRISD=0b00000000;
 10370  00434C  0E00               	movlw	0
 10371  00434E  6E95               	movwf	149,c	;volatile
 10372  004350                     
 10373                           ; BSR set to: 15
 10374                           ;main.c: 65:     TRISAbits.TRISA0=1;
 10375  004350  8092               	bsf	146,0,c	;volatile
 10376  004352                     
 10377                           ; BSR set to: 15
 10378                           ;main.c: 66:     TRISBbits.TRISB1=1;
 10379  004352  8293               	bsf	147,1,c	;volatile
 10380  004354                     
 10381                           ; BSR set to: 15
 10382                           ;main.c: 69:     WPUBbits.WPUB1=1;
 10383  004354  8285               	bsf	133,1,c	;volatile
 10384  004356                     
 10385                           ; BSR set to: 15
 10386                           ;main.c: 70:     INTCON2bits.NOT_RBPU=0;
 10387  004356  9EF1               	bcf	241,7,c	;volatile
 10388  004358                     
 10389                           ; BSR set to: 15
 10390  004358  0012               	return		;funcret
 10391  00435A                     __end_of_Config_Port:
 10392                           	callstack 0
 10393                           
 10394 ;; *************** function _Config_Clock *****************
 10395 ;; Defined at:
 10396 ;;		line 45 in file "main.c"
 10397 ;; Parameters:    Size  Location     Type
 10398 ;;		None
 10399 ;; Auto vars:     Size  Location     Type
 10400 ;;		None
 10401 ;; Return value:  Size  Location     Type
 10402 ;;                  1    wreg      void 
 10403 ;; Registers used:
 10404 ;;		wreg, status,2
 10405 ;; Tracked objects:
 10406 ;;		On entry : 0/0
 10407 ;;		On exit  : 0/0
 10408 ;;		Unchanged: 0/0
 10409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10410 ;;      Params:         0       0       0       0       0       0       0       0       0
 10411 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10412 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10413 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10414 ;;Total ram usage:        0 bytes
 10415 ;; Hardware stack levels used: 1
 10416 ;; This function calls:
 10417 ;;		Nothing
 10418 ;; This function is called by:
 10419 ;;		_main
 10420 ;; This function uses a non-reentrant model
 10421 ;;
 10422                           
 10423                           	psect	text46
 10424  004384                     __ptext46:
 10425                           	callstack 0
 10426  004384                     _Config_Clock:
 10427                           	callstack 30
 10428  004384                     
 10429                           ;main.c: 46:     OSCCONbits.IRCF=0b111;
 10430  004384  0E70               	movlw	112
 10431  004386  12D3               	iorwf	211,f,c	;volatile
 10432                           
 10433                           ;main.c: 47:     OSCCONbits.SCS=0b10;
 10434  004388  50D3               	movf	211,w,c	;volatile
 10435  00438A  0BFC               	andlw	-4
 10436  00438C  0902               	iorlw	2
 10437  00438E  6ED3               	movwf	211,c	;volatile
 10438  004390  0012               	return		;funcret
 10439  004392                     __end_of_Config_Clock:
 10440                           	callstack 0
 10441                           
 10442                           	psect	rparam
 10443  0000                     
 10444                           	psect	idloc
 10445                           
 10446                           ;Config register IDLOC0 @ 0x200000
 10447                           ;	unspecified, using default values
 10448  200000                     	org	2097152
 10449  200000  FF                 	db	255
 10450                           
 10451                           ;Config register IDLOC1 @ 0x200001
 10452                           ;	unspecified, using default values
 10453  200001                     	org	2097153
 10454  200001  FF                 	db	255
 10455                           
 10456                           ;Config register IDLOC2 @ 0x200002
 10457                           ;	unspecified, using default values
 10458  200002                     	org	2097154
 10459  200002  FF                 	db	255
 10460                           
 10461                           ;Config register IDLOC3 @ 0x200003
 10462                           ;	unspecified, using default values
 10463  200003                     	org	2097155
 10464  200003  FF                 	db	255
 10465                           
 10466                           ;Config register IDLOC4 @ 0x200004
 10467                           ;	unspecified, using default values
 10468  200004                     	org	2097156
 10469  200004  FF                 	db	255
 10470                           
 10471                           ;Config register IDLOC5 @ 0x200005
 10472                           ;	unspecified, using default values
 10473  200005                     	org	2097157
 10474  200005  FF                 	db	255
 10475                           
 10476                           ;Config register IDLOC6 @ 0x200006
 10477                           ;	unspecified, using default values
 10478  200006                     	org	2097158
 10479  200006  FF                 	db	255
 10480                           
 10481                           ;Config register IDLOC7 @ 0x200007
 10482                           ;	unspecified, using default values
 10483  200007                     	org	2097159
 10484  200007  FF                 	db	255
 10485                           
 10486                           	psect	config
 10487                           
 10488                           ;Config register CONFIG1L @ 0x300000
 10489                           ;	PLL Selection
 10490                           ;	PLLSEL = PLL4X, 4x clock multiplier
 10491                           ;	PLL Enable Configuration bit
 10492                           ;	CFGPLLEN = OFF, PLL Disabled (firmware controlled)
 10493                           ;	CPU System Clock Postscaler
 10494                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
 10495                           ;	Low Speed USB mode with 48 MHz system clock
 10496                           ;	LS48MHZ = SYS24X4, System clock at 24 MHz, USB clock divider is set to 4
 10497  300000                     	org	3145728
 10498  300000  00                 	db	0
 10499                           
 10500                           ;Config register CONFIG1H @ 0x300001
 10501                           ;	Oscillator Selection
 10502                           ;	FOSC = INTOSCIO, Internal oscillator
 10503                           ;	Primary Oscillator Shutdown
 10504                           ;	PCLKEN = ON, Primary oscillator enabled
 10505                           ;	Fail-Safe Clock Monitor
 10506                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 10507                           ;	Internal/External Oscillator Switchover
 10508                           ;	IESO = OFF, Oscillator Switchover mode disabled
 10509  300001                     	org	3145729
 10510  300001  28                 	db	40
 10511                           
 10512                           ;Config register CONFIG2L @ 0x300002
 10513                           ;	Power-up Timer Enable
 10514                           ;	nPWRTEN = ON, Power up timer enabled
 10515                           ;	Brown-out Reset Enable
 10516                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
 10517                           ;	Brown-out Reset Voltage
 10518                           ;	BORV = 190, BOR set to 1.9V nominal
 10519                           ;	Low-Power Brown-out Reset
 10520                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
 10521  300002                     	org	3145730
 10522  300002  5E                 	db	94
 10523                           
 10524                           ;Config register CONFIG2H @ 0x300003
 10525                           ;	Watchdog Timer Enable bits
 10526                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
 10527                           ;	Watchdog Timer Postscaler
 10528                           ;	WDTPS = 32768, 1:32768
 10529  300003                     	org	3145731
 10530  300003  3C                 	db	60
 10531                           
 10532                           ; Padding undefined space
 10533  300004                     	org	3145732
 10534  300004  FF                 	db	255
 10535                           
 10536                           ;Config register CONFIG3H @ 0x300005
 10537                           ;	CCP2 MUX bit
 10538                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
 10539                           ;	PORTB A/D Enable bit
 10540                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
 10541                           ;	Timer3 Clock Input MUX bit
 10542                           ;	T3CMX = RC0, T3CKI function is on RC0
 10543                           ;	SDO Output MUX bit
 10544                           ;	SDOMX = RB3, SDO function is on RB3
 10545                           ;	Master Clear Reset Pin Enable
 10546                           ;	MCLRE = OFF, RE3 input pin enabled; external MCLR disabled
 10547  300005                     	org	3145733
 10548  300005  53                 	db	83
 10549                           
 10550                           ;Config register CONFIG4L @ 0x300006
 10551                           ;	Stack Full/Underflow Reset
 10552                           ;	STVREN = ON, Stack full/underflow will cause Reset
 10553                           ;	Single-Supply ICSP Enable bit
 10554                           ;	LVP = OFF, Single-Supply ICSP disabled
 10555                           ;	Dedicated In-Circuit Debug/Programming Port Enable
 10556                           ;	ICPRT = OFF, ICPORT disabled
 10557                           ;	Extended Instruction Set Enable bit
 10558                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
 10559                           ;	Background Debugger Enable bit
 10560                           ;	DEBUG = 0x1, unprogrammed default
 10561  300006                     	org	3145734
 10562  300006  81                 	db	129
 10563                           
 10564                           ; Padding undefined space
 10565  300007                     	org	3145735
 10566  300007  FF                 	db	255
 10567                           
 10568                           ;Config register CONFIG5L @ 0x300008
 10569                           ;	Block 0 Code Protect
 10570                           ;	CP0 = OFF, Block 0 is not code-protected
 10571                           ;	Block 1 Code Protect
 10572                           ;	CP1 = OFF, Block 1 is not code-protected
 10573                           ;	Block 2 Code Protect
 10574                           ;	CP2 = OFF, Block 2 is not code-protected
 10575                           ;	Block 3 Code Protect
 10576                           ;	CP3 = OFF, Block 3 is not code-protected
 10577  300008                     	org	3145736
 10578  300008  0F                 	db	15
 10579                           
 10580                           ;Config register CONFIG5H @ 0x300009
 10581                           ;	Boot Block Code Protect
 10582                           ;	CPB = OFF, Boot block is not code-protected
 10583                           ;	Data EEPROM Code Protect
 10584                           ;	CPD = OFF, Data EEPROM is not code-protected
 10585  300009                     	org	3145737
 10586  300009  C0                 	db	192
 10587                           
 10588                           ;Config register CONFIG6L @ 0x30000A
 10589                           ;	Block 0 Write Protect
 10590                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
 10591                           ;	Block 1 Write Protect
 10592                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
 10593                           ;	Block 2 Write Protect
 10594                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
 10595                           ;	Block 3 Write Protect
 10596                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
 10597  30000A                     	org	3145738
 10598  30000A  0F                 	db	15
 10599                           
 10600                           ;Config register CONFIG6H @ 0x30000B
 10601                           ;	Configuration Registers Write Protect
 10602                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
 10603                           ;	Boot Block Write Protect
 10604                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
 10605                           ;	Data EEPROM Write Protect
 10606                           ;	WRTD = OFF, Data EEPROM is not write-protected
 10607  30000B                     	org	3145739
 10608  30000B  E0                 	db	224
 10609                           
 10610                           ;Config register CONFIG7L @ 0x30000C
 10611                           ;	Block 0 Table Read Protect
 10612                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
 10613                           ;	Block 1 Table Read Protect
 10614                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
 10615                           ;	Block 2 Table Read Protect
 10616                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
 10617                           ;	Block 3 Table Read Protect
 10618                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
 10619  30000C                     	org	3145740
 10620  30000C  0F                 	db	15
 10621                           
 10622                           ;Config register CONFIG7H @ 0x30000D
 10623                           ;	Boot Block Table Read Protect
 10624                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
 10625  30000D                     	org	3145741
 10626  30000D  40                 	db	64
 10627                           tosu	equ	0xFFF
 10628                           tosh	equ	0xFFE
 10629                           tosl	equ	0xFFD
 10630                           stkptr	equ	0xFFC
 10631                           pclatu	equ	0xFFB
 10632                           pclath	equ	0xFFA
 10633                           pcl	equ	0xFF9
 10634                           tblptru	equ	0xFF8
 10635                           tblptrh	equ	0xFF7
 10636                           tblptrl	equ	0xFF6
 10637                           tablat	equ	0xFF5
 10638                           prodh	equ	0xFF4
 10639                           prodl	equ	0xFF3
 10640                           indf0	equ	0xFEF
 10641                           postinc0	equ	0xFEE
 10642                           postdec0	equ	0xFED
 10643                           preinc0	equ	0xFEC
 10644                           plusw0	equ	0xFEB
 10645                           fsr0h	equ	0xFEA
 10646                           fsr0l	equ	0xFE9
 10647                           wreg	equ	0xFE8
 10648                           indf1	equ	0xFE7
 10649                           postinc1	equ	0xFE6
 10650                           postdec1	equ	0xFE5
 10651                           preinc1	equ	0xFE4
 10652                           plusw1	equ	0xFE3
 10653                           fsr1h	equ	0xFE2
 10654                           fsr1l	equ	0xFE1
 10655                           bsr	equ	0xFE0
 10656                           indf2	equ	0xFDF
 10657                           postinc2	equ	0xFDE
 10658                           postdec2	equ	0xFDD
 10659                           preinc2	equ	0xFDC
 10660                           plusw2	equ	0xFDB
 10661                           fsr2h	equ	0xFDA
 10662                           fsr2l	equ	0xFD9
 10663                           status	equ	0xFD8

Data Sizes:
    Strings     106
    Constant    0
    Data        5
    BSS         96
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    103     124
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_22(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_22(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_17(CODE[4]), STR_16(CODE[4]), STR_13(CODE[4]), STR_12(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_17(CODE[4]), STR_16(CODE[4]), STR_13(CODE[4]), STR_12(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_11(CODE[10]), STR_10(CODE[10]), STR_9(CODE[15]), STR_8(CODE[16]), 
		 -> STR_7(CODE[7]), STR_6(CODE[8]), STR_5(CODE[9]), STR_4(CODE[5]), 
		 -> STR_3(CODE[7]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_11(CODE[10]), STR_10(CODE[10]), STR_9(CODE[15]), STR_8(CODE[16]), 
		 -> STR_7(CODE[7]), STR_6(CODE[8]), STR_5(CODE[9]), STR_4(CODE[5]), 
		 -> STR_3(CODE[7]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 16
		 -> STR_11(CODE[10]), STR_10(CODE[10]), STR_9(CODE[15]), STR_8(CODE[16]), 
		 -> STR_7(CODE[7]), STR_6(CODE[8]), STR_5(CODE[9]), STR_4(CODE[5]), 
		 -> STR_3(CODE[7]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_11(CODE[10]), STR_10(CODE[10]), STR_9(CODE[15]), STR_8(CODE[16]), 
		 -> STR_7(CODE[7]), STR_6(CODE[8]), STR_5(CODE[9]), STR_4(CODE[5]), 
		 -> STR_3(CODE[7]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 17
		 -> ejemplo5@str_contador(BANK0[17]), ejemplo4@str_contador(COMRAM[10]), ejemplo3@str_dato2(COMRAM[17]), ejemplo3@str_dato(COMRAM[17]), 
		 -> ejemplo2@str_num_primo(COMRAM[2]), ejemplo2@str_pi(COMRAM[7]), ejemplo2@str_temp1(COMRAM[4]), ejemplo2@str_numero(COMRAM[4]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S994$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S994$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 17
		 -> ejemplo5@str_contador(BANK0[17]), ejemplo4@str_contador(COMRAM[10]), ejemplo3@str_dato2(COMRAM[17]), ejemplo3@str_dato(COMRAM[17]), 
		 -> ejemplo2@str_num_primo(COMRAM[2]), ejemplo2@str_pi(COMRAM[7]), ejemplo2@str_temp1(COMRAM[4]), ejemplo2@str_numero(COMRAM[4]), 
		 -> STR_2(CODE[10]), STR_1(CODE[10]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _utoa->_pad
    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_ejemplo5
    _ejemplo5->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   43190
                       _Config_Clock
                        _Config_Port
                          _Lcd_Clear
                           _Lcd_Init
                           _ejemplo5
 ---------------------------------------------------------------------------------
 (1) _ejemplo5                                            18    18      0   42882
                                             85 BANK0     18    18      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             25    15     10   40441
                                             62 BANK0     23    13     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   38862
                                             93 COMRAM     2     2      0
                                             56 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           44    38      6   38464
                                             63 COMRAM    30    30      0
                                             50 BANK0      6     0      6
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    4671
                                             27 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              62    55      7   22448
                                             45 COMRAM    12     5      7
                                              0 BANK0     50    50      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              6     4      2     920
                                              6 COMRAM     6     4      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     490
                                             25 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    2889
                                             25 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    2656
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     790
                                             25 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2007
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    5270
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3621
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                10     8      2    1370
                                              7 COMRAM    10     8      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     449
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     6     4      2    1104
                                              4 COMRAM     6     4      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       3     3      0     178
                                              1 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       5     4      1    1216
                                              3 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     198
                                              3 COMRAM     1     1      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              2     2      0     110
                                              1 COMRAM     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Config_Port                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Config_Clock                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Config_Clock
   _Config_Port
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _ejemplo5
     _Lcd_Set_Cursor
       _Lcd_Cmd
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
             _strcpy
             _tolower
               _isupper
           _fputc
           _isdigit
           _isupper
           _strncmp
           _tolower
           _utoa
             ___lodiv
             ___lomod
             _pad

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      32        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     67      7C       5       77.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBIGSFRhlh        3D      0       0      22        0.0%
BITBIGSFRhhl        1D      0       0      21        0.0%
BITBIGSFRllh        1B      0       0      28        0.0%
BITBIGSFRhhh         E      0       0      20        0.0%
BITBIGSFRllll        8      0       0      30        0.0%
BITBIGSFRlhh         6      0       0      25        0.0%
BITBIGSFRlhll        5      0       0      27        0.0%
BITBIGSFRhlll        5      0       0      24        0.0%
BITBIGSFRlhlh        3      0       0      26        0.0%
BITBIGSFRhllh        1      0       0      23        0.0%
BITBIGSFRlllh        1      0       0      29        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     12B      31        0.0%
DATA                 0      0     12B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Mon Jun 27 15:25:59 2022

                       l7 3FA2                         l9 3FB8              ___fldiv@aexp 0019  
            ___fldiv@bexp 0018              ___fldiv@sign 0011                        l11 3FCE  
                      l13 3FE4                        l21 4382                        l30 3E66  
                      l15 3FE6                        l33 42BC                        l18 4338  
                      l27 3ECC                        l39 3DF2              ___awdiv@sign 0006  
     ___wmul@multiplicand 0003                       l100 4390                       l103 4358  
                     l133 3D18                       l142 4318                       l128 3CE2  
                     l401 3CCC                       l412 358A                       l407 3544  
                     l256 30C6                       l416 424C                       l269 322A  
                     l373 3B72                       l439 3486                       l712 4116  
                     l386 3C22                       l724 2844                       l580 3758  
                     l820 4038                       l726 26A4                       l670 1DB0  
                     l910 1478                       l590 38FE                       l735 26EA  
                     l671 1D9E                       l760 24AA                       l672 1D64  
                     l737 2762                       l729 2668                       l738 2750  
                     l763 233C                       l587 3778                       l756 2146  
                     l773 246C                       l765 23B4                       l597 391E  
                     l766 23A2                       l926 0C28                       l863 3A30  
                     l687 1ECA                       l679 2080                       l696 1F9A  
                     l697 1F88                       l866 3A72                       l874 28E6  
                     l954 1068                       l868 3AAE                       l876 28EE  
                     l894 2B28                       l986 2D74                       l996 2F3E  
                     l988 2D7C                       _abs 419E                       _pad 39EA  
            ___awmod@sign 0006                       wreg 000FE8              ___flmul@aexp 0012  
            ___flmul@bexp 0013              ___flmul@sign 000D              ___flmul@temp 0018  
            ___flmul@prod 0014              ___fltol@exp1 000A                      l1010 1576  
                    l1120 4214                      l1033 1BC0                      l1106 4284  
                    l1114 408A                      ?_abs 0013                      l1062 41D4  
                    l1046 3F26                      l1135 39E8                      l1143 415A  
                    l1039 1A60                      l1047 3F2E                      l1152 3F8A  
                    l1065 41DC                      l1057 3688                      l1090 3380  
                    l1146 4398                      l1162 384E                      l3100 1C68  
                    l1172 40C8                      l1158 42F2                      l3110 1CA2  
                    l3102 1C78                      l1087 3378                      l1175 40D0  
                    l4000 2A26                      l3200 1EAA                      l3120 1CCE  
                    l3112 1CB4                      l3104 1C88                      l1096 2D3A  
                    l4002 2A40                      l4010 2AA2                      l3210 1F04  
                    l3202 1EBA                      l3130 1CE2                      l3122 1CD2  
                    l3114 1CC2                      l3106 1C8A                      l1099 2C7E  
                    l3300 2F44                      l3060 394E                      l4020 2AE8  
                    l4012 2AB4                      l4004 2A5E                      l3220 1F34  
                    l3212 1F0E                      l3204 1EE0                      l3140 1CF6  
                    l3132 1CE6                      l3124 1CD6                      l3116 1CC6  
                    l3108 1C92                      l4100 0AC0                      l3310 2FA4  
                    l3302 2F52                      l3062 396C                      l3054 3920  
                    l4022 2AF0                      l4014 2AC4                      l4006 2A78  
                    l3230 1F5C                      l3222 1F38                      l3214 1F1C  
                    l3206 1EF0                      l3150 1D30                      l3142 1CFA  
                    l3134 1CEA                      l3126 1CDA                      l3118 1CCA  
                    l3070 1BCE                      l4110 0B90                      l4102 0AF4  
                    l4030 0876                      l3320 2FEE                      l3312 2FA8  
                    l3304 2F72                      l3064 39A2                      l3056 3932  
                    l4016 2ACA                      l4024 2B00                      l4008 2A92  
                    l3400 251E                      l3240 1FB6                      l3232 1F6A  
                    l3224 1F48                      l3216 1F1E                      l3160 1D82  
                    l3152 1D4C                      l3144 1CFE                      l3136 1CEE  
                    l3128 1CDE                      l3080 1C0E                      l3072 1BDC  
                    l4200 102C                      l4120 0BFA                      l4104 0AFA  
                    l4112 0BC2                      l4040 08CA                      l4032 0886  
                    l3330 305E                      l3322 2FFC                      l3314 2FB4  
                    l3306 2F76                      l3058 3944                      l4018 2ADC  
                    l3410 255E                      l3402 252C                      l3250 2020  
                    l3242 1FC4                      l3234 1F80                      l3218 1F2C  
                    l3226 1F4A                      l3170 1DCE                      l3162 1D90  
                    l3154 1D5C                      l3138 1CF2                      l3146 1D02  
                    l3090 1C40                      l3082 1C10                      l3074 1BDE  
                    l4210 1084                      l4202 1030                      l4122 0C02  
                    l4114 0BD2                      l4106 0B54                      l4050 0910  
                    l4042 08D2                      l4034 0894                      l3332 3070  
                    l3324 300E                      l3316 2FD2                      l3308 2F84  
                    l3500 2820                      l3420 259E                      l3412 2560  
                    l3404 252E                      l3260 205A                      l3252 2040  
                    l3244 1FFE                      l3180 1E0E                      l3228 1F58  
                    l3164 1D92                      l3156 1D72                      l3148 1D06  
                    l3092 1C42                      l3076 1BEE                      l3084 1C18  
                    l3068 1BC2                      l4300 13A0                      l4220 112A  
                    l4212 10E8                      l4204 1040                      l4140 0CB2  
                    l4132 0C46                      l4124 0C1C                      l4116 0BD6  
                    l4108 0B88                      l4052 0918                      l4044 08E4  
                    l4036 089C                      l4028 086C                      l3326 303C  
                    l3318 2FDA                      l3334 3076                      l3350 30FE  
                    l3342 30C8                      l3270 4118                      l3502 2824  
                    l3430 25CE                      l3422 25A6                      l3406 253E  
                    l3414 2568                      l3262 2060                      l3254 2044  
                    l3238 1FAA                      l3246 2000                      l3190 1E38  
                    l3182 1E1A                      l3174 1DE2                      l3166 1D9C  
                    l3158 1D7E                      l3094 1C48                      l3086 1C28  
                    l3078 1BFE                      l4310 13E6                      l4302 13BA  
                    l4230 1166                      l4214 10F8                      l4222 1132  
                    l4206 1054                      l4150 0CF0                      l4134 0C58  
                    l4142 0CB6                      l4118 0BE8                      l4126 0C34  
                    l4070 09B0                      l4054 091C                      l4046 08F2  
                    l4038 08C0                      l3336 3086                      l3328 305C  
                    l3360 3166                      l3352 310C                      l3344 30CC  
                    l3272 4124                      l3280 42CA                      l3504 2832  
                    l3440 260C                      l3432 25CE                      l3424 25AA  
                    l3416 2578                      l3408 254E                      l3600 232C  
                    l3520 209C                      l3264 206E                      l3256 2052  
                    l3248 2010                      l3184 1E1E                      l3176 1DF2  
                    l3168 1DBE                      l3192 1E3E                      l3096 1C56  
                    l3088 1C2E                      l4320 142E                      l4312 13F6  
                    l4304 13C0                      l4240 1192                      l4232 116C  
                    l4224 1144                      l4216 110A                      l4208 1060  
                    l4160 0D3E                      l4152 0CF4                      l4144 0CBE  
                    l4136 0C74                      l4072 09BA                      l4064 094C  
                    l4056 0920                      l4048 0904                      l3338 30A6  
                    l3362 3174                      l3370 31DA                      l3354 312C  
                    l3346 30DA                      l3274 4136                      l3282 42CE  
                    l3506 2838                      l3450 2658                      l3442 261C  
                    l3418 258E                      l3610 236C                      l3602 233A  
                    l3530 20D4                      l3522 209E                      l3266 2070  
                    l3258 2058                      l3194 1E64                      l3186 1E2C  
                    l3178 1E00                      l3098 1C58                      l4322 143A  
                    l4314 13FC                      l4306 13D2                      l4234 1178  
                    l4226 1152                      l4242 1198                      l4250 11C6  
                    l4218 111C                      l4170 0DD6                      l4154 0D06  
                    l4162 0D46                      l4146 0CD0                      l4138 0CAA  
                    l4082 0A08                      l4066 0978                      l4058 0926  
                    l4410 37BE                      l4402 377A                      l3292 42F4  
                    l3372 31EA                      l3364 31A2                      l3356 314A  
                    l3348 30FA                      l3276 413A                      l3284 42E6  
                    l3700 3B86                      l3508 283A                      l3460 26A2  
                    l3452 2666                      l3444 262C                      l3436 25E2  
                    l3428 25BE                      l3380 24B8                      l3620 23DE  
                    l3612 239A                      l3604 234C                      l3540 2100  
                    l3532 20E4                      l3524 20AE                      l3516 2082  
                    l3196 1E98                      l3188 1E2E                      l4324 1442  
                    l4308 13DE                      l4260 127C                      l4252 121E  
                    l4244 11AA                      l4236 1188                      l4228 1162  
                    l4180 0EBA                      l4172 0E2E                      l4164 0D4E  
                    l4156 0D14                      l4148 0CE2                      l4084 0A34  
                    l4068 0996                      l4076 09E2                      l4412 37D6  
                    l4404 37A4                      l4340 2D68                      l4500 16A6  
                    l4430 3FBA                      l4422 3F8E                      l3294 4310  
                    l3374 320A                      l3366 31C2                      l3358 3152  
                    l3278 42BE                      l3710 3BBA                      l3702 3B8E  
                    l3470 26E8                      l3462 26B4                      l3454 2672  
                    l3446 2634                      l3438 25FC                      l3390 24F8  
                    l3382 24C6                      l3630 2454                      l3622 2408  
                    l3606 235A                      l3550 2156                      l3542 2110  
                    l3534 20EA                      l3526 20BE                      l3518 208E  
                    l3198 1E9A                      l4326 1452                      l4318 1402  
                    l4270 12CC                      l4262 1298                      l4254 1252  
                    l4246 11BC                      l4238 118C                      l4190 0F54  
                    l4182 0EEC                      l4174 0E62                      l4166 0D5E  
                    l4158 0D2C                      l4086 0A52                      l4094 0A70  
                    l4414 37F2                      l4350 2E32                      l4342 2DA4  
                    l4334 2D3C                      l4510 1732                      l4502 16CA  
                    l2832 4384                      l2840 4350                      l4432 3FC8  
                    l4424 3F9C                      l4600 431E                      l3368 31D4  
                    l3720 3BF6                      l3712 3BC2                      l3704 3B92  
                    l3480 2748                      l3464 26CA                      l3472 26FA  
                    l3456 2690                      l3448 2644                      l3392 24FA  
                    l3384 24C8                      l3632 2470                      l3640 2496  
                    l3616 23C4                      l3624 240C                      l3608 235E  
                    l3560 2190                      l3552 2166                      l3544 2120  
                    l3536 20F0                      l3528 20CE                      l3800 3412  
                    l3288 41DE                      l4328 1458                      l4280 130E  
                    l4272 12DC                      l4264 12AA                      l4256 125A  
                    l4248 11C0                      l4192 0F88                      l4184 0F02  
                    l4168 0D72                      l4176 0E68                      l4096 0A8A  
                    l4416 3804                      l4408 37B0                      l4360 2ED2  
                    l4352 2E38                      l4344 2DAC                      l4336 2D4C  
                    l4520 17E0                      l4504 1704                      l4512 1770  
                    l4440 149E                      l2842 4352                      l2834 433A  
                    l4434 3FD0                      l4426 3FA4                      l4602 4324  
                    l4610 4294                      l4370 322C                      l3298 2F40  
                    l3722 3BFC                      l3714 3BCA                      l3706 3BA0  
                    l3490 27B6                      l3474 2708                      l3466 26D0  
                    l3458 2692                      l3386 24D8                      l3394 2502  
                    l3378 24AC                      l3642 249A                      l3634 2480  
                    l3626 2426                      l3618 23D0                      l3570 21E2  
                    l3562 21A6                      l3546 2130                      l3538 20FE  
                    l3810 343A                      l3802 341C                      l4290 133E  
                    l4282 131C                      l4274 12EE                      l4266 12B8  
                    l4258 125E                      l4194 0FDE                      l4186 0F34  
                    l4178 0E86                      l4418 382C                      l4362 2EEC  
                    l4354 2E3E                      l4346 2DB6                      l4338 2D4E  
                    l4522 1810                      l4514 1790                      l4506 1724  
                    l4450 14D2                      l4442 14AC                      l2844 4354  
                    l2836 4348                      l4436 3FDE                      l4428 3FB2  
                    l4604 4326                      l4700 3E60                      l4620 42AA  
                    l4612 4296                      l4380 329A                      l4372 3240  
                    l3660 3ACE                      l3652 3AB0                      l3716 3BD8  
                    l3724 3C02                      l3708 3BA8                      l3484 2772  
                    l3492 27BA                      l3476 270C                      l3468 26DA  
                    l3396 2512                      l3388 24E8                      l3740 3CA0  
                    l3732 3C24                      l3636 248E                      l3628 243A  
                    l3580 2228                      l3572 21F0                      l3564 21B2  
                    l3556 217A                      l3548 2136                      l3812 3446  
                    l3804 3426                      l3900 363C                      l4292 1364  
                    l4284 1324                      l4276 12F6                      l4268 12C8  
                    l4196 0FE4                      l4188 0F44                      l4364 2F06  
                    l4348 2DBC                      l4356 2EA2                      l4540 193E  
                    l4532 18D8                      l4524 1834                      l4516 17A0  
                    l4460 14F4                      l4452 14E4                      l4444 14BE  
                    l2846 4356                      l2838 434A                      l4606 4336  
                    l4622 42B0                      l4614 429E                      l4382 32A2  
                    l3670 3B02                      l3662 3ADC                      l3654 3AB4  
                    l3726 3C12                      l3718 3BEE                      l3494 27D4  
                    l3486 277E                      l3478 271A                      l3398 2518  
                    l3742 3CC4                      l3734 3C52                      l3750 34B6  
                    l3638 2490                      l3590 2296                      l3582 2242  
                    l3574 21FC                      l3566 21CA                      l3558 2186  
                    l3646 40D2                      l3814 3456                      l3910 3F40  
                    l4294 1380                      l4286 132C                      l4278 1306  
                    l4198 1018                      l3830 36D0                      l3822 368A  
                    l4358 2EB4                      l4366 2F16                      l4550 19BE  
                    l4534 18EA                      l4526 1858                      l4518 17D0  
                    l4446 14C2                      l4438 147A                      l4630 3ED6  
                    l4710 3CF4                      l4702 3CCE                      ?_pad 0011  
                    l4640 3E8C                      l4624 42B2                      l4616 42A0  
                    l4608 4288                      l4392 3314                      l4384 32AA  
                    l4376 3244                      l3680 3B3C                      l3672 3B0A  
                    l3664 3AE4                      l3656 3AC2                      l3728 3C1A  
                    l3496 27EA                      l3488 278C                      l3744 3CCA  
                    l3736 3C62                      l3760 3524                      l3752 34C6  
                    l3592 22C0                      l3584 2252                      l3576 220C  
                    l3568 21D6                      l3648 40E2                      l3816 3466  
                    l3904 3680                      l3912 408C                      l4296 1388  
                    l4288 1338                      l3840 3740                      l3832 36DE  
                    l3824 3696                      l4552 19FC                      l4560 1A74  
                    l4536 1900                      l4544 196A                      l4528 18A0  
                    l4480 15AC                      l4472 1510                      l4464 14FC  
                    l4456 14EC                      l4448 14CE                      l4632 3EE4  
                    l4720 3D2A                      l4712 3D06                      l4704 3CD4  
                    l4650 3EC6                      l4642 3E92                      l4626 42BA  
                    l4618 42A8                      l4394 334A                      l4386 32DE  
                    l4378 3260                      l3690 3B62                      l3682 3B44  
                    l3674 3B12                      l3666 3AE8                      l3658 3ACA  
                    l3498 2804                      l3738 3C90                      l3762 3532  
                    l3754 34F4                      l3594 22F6                      l3586 226E  
                    l3578 2218                      l3770 4216                      l3818 3476  
                    l3930 2BC2                      l3922 2B2A                      l4298 138E  
                    l3842 3752                      l3834 36F0                      l3826 36B4  
                    l3850 388A                      l4570 1B3E                      l4562 1A98  
                    l4554 1A30                      l4546 1998                      l4538 190E  
                    l4482 15E2                      l4474 1564                      l4634 3F0A  
                    l4722 3D3A                      l4714 3D0A                      l4644 3E9C  
                    l4636 3E6A                      l4652 3D76                      l4396 335C  
                    l3860 39EA                      l3692 3B6A                      l3684 3B46  
                    l3676 3B20                      l3668 3AF0                      l3764 3582  
                    l3756 3504                      l3748 3488                      l3596 2304  
                    l3588 227A                      l3772 422C                      l3780 3398  
                    l3940 2CDE                      l3924 2B4A                      l3908 3F30  
                    l3916 408C                      l3836 371E                      l3828 36BC  
                    l3852 3898                      l3844 3850                      l4580 1B7C  
                    l4572 1B4C                      l4564 1AE2                      l4492 162C  
                    l4484 15F0                      l4476 1586                      l4468 1504  
                    l4628 3ECE                      l4660 3FE8                      l4724 3D3E  
                    l4708 3CF0                      l4646 3EAE                      l4638 3E7A  
                    l4654 3D82                      l3950 424E                      l3870 3A3C  
                    l3862 39FA                      l3686 3B4C                      l3678 3B26  
                    l3766 3588                      l3758 3512                      l3598 2322  
                    l3774 423C                      l3790 33E8                      l3942 2CF2  
                    l3934 2C32                      l3926 2BA0                      l3918 40BA  
                    l3838 373E                      l3854 38C6                      l3846 386E  
                    l4574 1B60                      l4494 166A                      l4486 15FE  
                    l4478 1588                      l4662 3FFA                      l4726 3D5A  
                    l4718 3D26                      l4734 435A                      l4672 4376  
                    l4680 3E10                      l4648 3EC0                      l4656 3DB2  
                    l3960 4080                      l3872 3A50                      l3864 3A0E  
                    l3688 3B52                      l3696 3B74                      l3792 33EC  
                    l3784 33AC                      l3944 2D1A                      l3936 2C6E  
                    l3928 2BB4                      l3856 38E6                      l3848 3876  
                    l4568 1B1A                      l4496 168E                      l4488 161E  
                    l4584 1B8A                      l4664 4002                      l4728 3D64  
                    l4736 436A                      l4690 3E42                      l4682 3E20  
                    l4674 3DF4                      l4658 3DB6                      l3962 4084  
                    l3954 403A                      l3882 419E                      l3874 3A54  
                    l3866 3A1C                      l3970 288E                      l3698 3B78  
                    l3794 33FA                      l3786 33D6                      l3778 3382  
                    l3890 35EA                      l3946 2D2A                      l3938 2CA2  
                    l3858 38F8                      l4586 1BAE                      l4578 1B6E  
                    l4498 1698                      l4666 400A                      l4692 3E48  
                    l4684 3E26                      l4676 3DFA                      l3956 403E  
                    l3884 41B8                      l3876 3A82                      l3868 3A28  
                    l3980 28F6                      l3972 28AE                      l3788 33D8  
                    l3892 3612                      l4668 4026                      l4598 431C  
                    l4694 3E4E                      l4686 3E36                      l4678 3E0A  
                    l3958 4052                      l3878 3A96                      l3990 292E  
                    l3982 2908                      l3974 28BE                      l3966 2846  
                    l3894 361E                      l3886 358C                      l4696 3E54  
                    l4688 3E3C                      l3992 2934                      l3984 2916  
                    l3976 28C0                      l3968 2866                      l3888 35AC  
                    l4698 3E5A                      l4890 32C8                      l3994 29B6  
                    l3986 291C                      l3978 28DA                      l3898 362A  
                    l3996 29BC                      l3988 2924                      l3998 29C2  
                    l4888 1536                      STR_1 0820                      STR_3 084C  
                    STR_4 0853                      STR_5 0834                      STR_6 083D  
                    STR_7 0845                      STR_8 0801                      STR_9 0811  
                    u3000 1D72                      u3001 1D6E                      u3010 1D90  
                    u3011 1D8C                      u3100 1EE0                      u3020 1DB0  
                    u3101 1EDC                      u3021 1DAC                      u3110 1EF0  
                    u3030 1DBE                      u3111 1EEC                      u3031 1DBA  
                    u4000 3CC4                      u3200 1FC4                      u3120 1F1C  
                    u3040 1DCE                      _LATD 000F8C                      u4001 3CC0  
                    u3201 1FC0                      u3121 1F18                      u3041 1DCA  
                    u4010 34B6                      u3210 1FFE                      u3130 1F2C  
                    u3050 1E00                      u4011 34B2                      u3211 1FFA  
                    u3131 1F28                      u3051 1DFC                      u4020 34F4  
                    u3220 2010                      u3140 1F48                      u3060 1E0E  
                    u4100 340E                      u3300 4210                      u4021 34F0  
                    u3221 200C                      u3141 1F44                      u3061 1E0A  
                    u4101 340A                      u3310 2F52                      u4030 3512  
                    u3230 2020                      u3150 1F58                      u3070 1E2C  
                    u4110 3436                      u3311 2F4E                      u4031 350E  
                    u3231 201C                      u3151 1F54                      u3071 1E28  
                    u4111 3432                      u3320 2F84                      u3400 314A  
                    u4040 3532                      u3240 2040                      u3160 1F6A  
                    u3080 1E64                      u4120 3456                      u5000 1144  
                    u4200 38C6                      u3321 2F80                      u3401 3146  
                    u4041 352E                      u3241 203C                      u3161 1F66  
                    u3081 1E60                      u4121 3452                      u5001 1140  
                    u4201 38C2                      u3410 3174                      u4210 39FA  
                    u4050 3582                      u3250 2052                      u3170 1F80  
                    u3090 1EAA                      u4130 3466                      u5010 1152  
                    u3331 2FAE                      u3411 3170                      u4211 39F6  
                    u4051 357E                      u3251 204E                      u3171 1F7C  
                    u3091 1EA6                      u4131 3462                      u5011 114E  
                    u3340 2FD2                      u3420 31A2                      u4220 3A1C  
                    u3500 258E                      u4060 422C                      u3260 206E  
                    u3180 1F96                      u5100 13BA                      u5020 11AA  
                    u3341 2FCE                      u3421 319E                      u4221 3A18  
                    u3501 258A                      u4061 4228                      u3261 206A  
                    u3181 1F92                      u5101 13B6                      u5021 11A6  
                    u4141 3690                      u3350 2FFC                      u3430 31EA  
                    u3270 415A                      u4230 3A72                      u3510 25CE  
                    u3190 1FAA                      u4070 3398                      u4310 3676  
                    u5110 13D2                      u5030 127C                      u4150 36B4  
                    u3351 2FF8                      u3431 31E6                      u3271 4156  
                    u4231 3A6E                      u3511 25CA                      u3191 1FA6  
                    u4071 3394                      u4311 3670                      u5111 13CE  
                    u5031 1278                      u4151 36B0                      u5200 3260  
                    u3360 303C                      u3280 42E6                      u4240 3A82  
                    u3600 2748                      u3520 2644                      u3440 24C6  
                    u4080 33CC                      u4320 3678                      u4400 2C2E  
                    u5120 142E                      u5040 1298                      u4160 36DE  
                    u5201 325C                      u3361 3038                      u3281 42E2  
                    u4241 3A7E                      u3601 2744                      u3521 2640  
                    u3441 24C2                      u4305 364E                      u4401 2C2A  
                    u5121 142A                      u5041 1294                      u4161 36DA  
                    u5210 3296                      u3370 3086                      u4250 41B8  
                    u3610 275E                      u3530 2666                      u3450 24D8  
                    u4090 33FA                      u4410 2C52                      u4330 3F78  
                    u3290 420E                      u5050 12AA                      u4170 371E  
                    u5130 2D4C                      u5211 3292                      u3371 3082  
                    u4251 41B4                      u3611 275A                      u3531 2662  
                    u3451 24D4                      u4091 33F6                      u3291 4208  
                    u5051 12A6                      u4171 371A                      u5131 2D48  
                    u5300 3FB2                      u5220 334A                      u3380 30DA  
                    u4500 2876                      u3620 2772                      u3540 2690  
                    u3460 24E8                      u3700 20FE                      u2900 1BFE  
                    u4260 35CC                      u4420 2C6E                      u4340 3F8A  
                    u5060 12B8                      u4180 386E                      u5140 2D68  
                    u5301 3FAE                      u5221 3346                      u3381 30D6  
                    u4501 2870                      u3621 276E                      u3541 268C  
                    u3461 24E4                      u3701 20FA                      u2901 1BFA  
                    u4085 33C2                      u4421 2C6A                      u4341 3F86  
                    u5061 12B4                      u4181 386A                      u5141 2D64  
                    u5310 3FC8                      u5230 335C                      u3390 310C  
                    u4510 2878                      u3630 278C                      u3550 26B4  
                    u3470 252C                      u3710 2110                      u2910 1C40  
                    u4270 35EA                      u4430 2CC2                      u4350 40BA  
                    u5070 12EE                      u4190 3898                      u5150 2EB4  
                    u5311 3FC4                      u5231 3358                      u3391 3108  
                    u3631 2788                      u3551 26B0                      u3471 2528  
                    u3711 210C                      u2911 1C3C                      u4271 35E6  
                    u4415 2C48                      u4351 40B6                      u5071 12EA  
                    u4191 3894                      u5151 2EB0                      u5320 3FDE  
                    u2840 3932                      u4600 2A92                      u4520 288E  
                    u3640 27D4                      u3560 26CA                      u3480 253E  
                    u3800 23B0                      u3720 2120                      u2920 1C56  
                    u4280 3612                      u4440 2CDE                      u4360 2B72  
                    u5080 131C                      u5240 37A4                      u5160 2ED2  
                    u5400 16CA                      u5321 3FDA                      u2841 392E  
                    u4601 2A8E                      u4521 288A                      u3641 27D0  
                    u3561 26C6                      u3481 253A                      u3801 23AC  
                    u3721 211C                      u2921 1C52                      u4281 360E  
                    u4265 35C2                      u4441 2CDA                      u4337 3F6E  
                    u5081 1318                      u5241 37A0                      u5161 2ECE  
                    u5401 16C6                      u2850 3944                      u4610 2AA2  
                    u4530 28BE                      u3650 2804                      u3570 26E8  
                    u3490 254E                      u3810 23C4                      u3730 2156  
                    u2930 1C68                      u4290 363C                      u4450 2D1A  
                    u4370 2BA0                      u5090 13A0                      u5250 37D6  
                    u5170 2EEC                      u5410 1770                      u5330 149E  
                    u2851 3940                      u4611 2A9E                      u4531 28BA  
                    u3651 2800                      u3571 26E4                      u3491 254A  
                    u3811 23C0                      u3731 2152                      u2931 1C64  
                    u4291 3638                      u4451 2D16                      u4435 2CB8  
                    u4371 2B9C                      u5091 139C                      u5251 37D2  
                    u5171 2EE8                      u5411 176C                      u5331 149A  
                    u4460 427E                      u2860 396C                      u4620 2AB4  
                    u4540 28DA                      u3900 3B3C                      u3660 2832  
                    u3580 2708                      u3820 23DE                      u3740 2166  
                    u2940 1C78                      u4380 2BC2                      u4700 0978  
                    u5260 37F2                      u5180 2F06                      u5500 1B3E  
                    u5420 17A0                      u5340 1576                      u4461 4278  
                    u2861 3968                      u4621 2AB0                      u4541 28D6  
                    u3901 3B38                      u3661 282E                      u3581 2704  
                    u3821 23DA                      u3741 2162                      u2941 1C74  
                    u4381 2BBE                      u4365 2B68                      u4701 0974  
                    u5261 37EE                      u5181 2F02                      u5501 1B3A  
                    u5421 179C                      u5341 1572                      u4470 4280  
                    u2870 39A2                      u4630 2AC4                      u4550 2908  
                    u3910 3B62                      u3590 271A                      u3830 2426  
                    u3750 22E0                      u3670 209C                      u2950 1CB4  
                    u4710 0A08                      u5270 3804                      u5190 2F16  
                    u5430 17E0                      u5350 1586                      u5510 3F26  
                    u2871 399E                      u4631 2AC0                      u4551 2904  
                    u3911 3B5E                      u3591 2716                      u3831 2422  
                    u3671 2098                      u2951 1CB0                      u4711 0A04  
                    u5271 3800                      u5191 2F12                      u5431 17DC  
                    u5351 1582                      u5511 3F22                      u5520 3E7A  
                    u4480 4052                      u4640 2ADC                      u4560 2916  
                    u3920 3B86                      u3840 2454                      u3760 233A  
                    u3680 20AE                      u2960 1CC2                      u2880 1BDC  
                    u4800 0C58                      u4720 0A34                      u5280 382C  
                    u5440 1834                      u5360 15AC                      u5600 3D18  
                    u5521 3E76                      u4481 404E                      u4641 2AD8  
                    u4561 2912                      u3921 3B82                      u3841 2450  
                    u3761 2336                      u3681 20AA                      u2961 1CBE  
                    u2881 1BD8                      u4801 0C54                      u4721 0A30  
                    u5281 3828                      u5441 1830                      u5361 15A8  
                    u5601 3D14                      u5290 3F9C                      u5530 3EAE  
                    u4490 4080                      u4570 2A40                      u3930 3BA0  
                    u3850 248E                      u3770 235A                      u3690 20BE  
                    u2970 1D30                      u2890 1BEE                      u4810 0C74  
                    u4730 0ABC                      u4650 0894                      u5450 1858  
                    u5370 15F0                      u5610 3D26                      u5291 3F98  
                    u5531 3EAA                      u4491 407C                      u4571 2A3C  
                    u3931 3B9C                      u3851 248A                      u3771 2356  
                    u3755 22D6                      u3691 20BA                      u2971 1D2C  
                    u2891 1BEA                      u4395 2BD6                      u4811 0C70  
                    u4731 0AB8                      u4651 0890                      u5451 1854  
                    u5371 15EC                      u5611 3D22                      u5540 3DAE  
                    u4580 2A5E                      u3860 3AC2                      u3940 3BBA  
                    u3780 236C                      u2980 1D48                      u4396 2BE0  
                    u4900 0EEC                      u4820 0CAA                      u4740 0B50  
                    u4660 08E4                      u5460 18EA                      u5380 166A  
                    u5620 3D3A                      u4581 2A5A                      u3861 3ABE  
                    u3941 3BB6                      u3781 2368                      u2981 1D42  
                    u4397 2BF0                      u4901 0EE8                      u4821 0CA6  
                    u4741 0B4C                      u4661 08E0                      u5461 18E6  
                    u5381 1666                      u5621 3D36                      u5550 3DE2  
                    u4590 2A78                      u3870 3ADC                      u3950 3BD8  
                    u3790 239A                      u2990 1D4A                      u4910 0F34  
                    u4830 0CD0                      u4750 0BC2                      u4670 08F2  
                    u5470 1998                      u5390 168E                      u4591 2A74  
                    u3871 3AD8                      u3951 3BD4                      u3791 2396  
                    u4911 0F30                      u4831 0CCC                      u4751 0BBE  
                    u4671 08EE                      u5471 1994                      u5391 168A  
                    u5560 3DF2                      u3880 3B02                      u3960 3BEE  
                    u4920 0F44                      u4840 0CE2                      u4760 0BE8  
                    u4680 0904                      u5480 19FC                      u5561 3DEE  
                    u3881 3AFE                      u3961 3BEA                      u4921 0F40  
                    u4841 0CDE                      u4761 0BE4                      u4681 0900  
                    u5481 19F8                      u3890 3B20                      u3970 3C12  
                    u4930 0FDE                      u4850 0CF0                      u4770 0BFA  
                    u4690 094C                      u5490 1A98                      u5570 3CE2  
                    u5707 3E16                      u5547 3DA4                      u3891 3B1C  
                    u3971 3C0E                      u4931 0FDA                      u4851 0CEC  
                    u4771 0BF6                      u4691 0948                      u5491 1A94  
                    u5571 3CDE                      u3980 3C52                      u4940 102C  
                    u4860 0D06                      u4780 0C1C                      u5580 3CF0  
                    u5717 3E2C                      u5557 3DD8                      u3981 3C4E  
                    u4941 1028                      u4861 0D02                      u4781 0C18  
                    u5581 3CEC                      u3990 3C90                      u4950 1054  
                    u4870 0D14                      u4790 0C42                      u5590 3D06  
                    u5727 432C                      u3991 3C8C                      u4951 1050  
                    u4871 0D10                      u4791 0C3E                      u5591 3D02  
                    u4960 10F8                      u4880 0D3E                      u4961 10F4  
                    u4881 0D3A                      u4970 110A                      u4890 0E86  
                    u4971 1106                      u4891 0E82                      u4980 111C  
                    u5677 42A2                      u4981 1118                      u4990 112A  
                    u5687 42B4                      u4991 1126                      u5697 3E00  
                    abs@a 0013         ?_Lcd_Write_String 0005                      _dbuf 0100  
                    _atoi 322C                      _main 435A                      _dtoa 2846  
                    _prec 00D3                      _nout 00CF                      pad@i 0018  
                    pad@p 0015                      fsr1h 000FE2                      fsr2h 000FDA  
                    indf1 000FE7                      indf2 000FDF                      fsr1l 000FE1  
                    pad@w 001A                      fsr2l 000FD9                      _utoa 2D3C  
           ___fpclassifyf 358C                      prodh 000FF4                      prodl 000FF3  
                    start 0000        ??_Lcd_Write_String 0007           ___fldiv@new_exp 0012  
         __end_of_Lcd_Cmd 433A              ___param_bank 000000       __end_of_Config_Port 435A  
                   ??_abs 0015                     ??_pad 0017             ___fltol@sign1 0009  
         __end_of___aodiv 30C8                     ?_atoi 0008           __end_of___fladd 2082  
                   ?_main 0001                     ?_dtoa 001C           __end_of___aomod 322C  
         __end_of___fldiv 2846           __end_of___awdiv 3B74           __end_of___flneg 424E  
                   STR_10 082A                     STR_11 082A                     STR_20 0868  
                   STR_12 0858                     STR_13 0860                     STR_22 0868  
                   STR_16 085C                     STR_17 0864           __end_of___awmod 3C24  
         __end_of___flmul 24AC           __end_of___flsub 4118           __end_of___fltol 3488  
                   ?_utoa 001C           __end_of___lodiv 377A           ___awdiv@divisor 0003  
         __end_of___lomod 3920           ___awdiv@counter 0005              vfpfcnvrt@fmt 0094  
            vfpfcnvrt@llu 004C                     _TRISD 000F95                     _flags 00D5  
                   _fputc 3920                     _fputs 4118           __end_of_isdigit 4286  
                   atoi@n 0010                     pad@fp 0011                     atoi@s 0008  
                   _width 00D1                     _putch 4398                     dtoa@d 001E  
                   dtoa@i 003E                     dtoa@n 0036                     dtoa@p 0030  
                   dtoa@s 0034                     dtoa@w 0032           __end_of_isspace 408C  
         __end_of_isupper 4216                     tablat 000FF5                     utoa@d 001E  
                   utoa@i 003A                     utoa@n 0032                     utoa@p 002E  
                   utoa@w 0030                     status 000FD8           __end_of_sprintf 403A  
          ?___fpclassifyf 0001           __end_of_tolower 40D2           __end_of_strncmp 3850  
        ___lodiv@dividend 0001          __end_of_Lcd_Init 3E68          __end_of_Lcd_Port 3FE8  
         __initialization 415C      __end_of_Config_Clock 4392              __end_of_atoi 3382  
            __end_of_main 4376              __end_of_dtoa 2B2A              __end_of_utoa 2F40  
                  ??_atoi 000A                    ??_main 0060                    ??_dtoa 0026  
                  ??_utoa 0026             __activetblptr 000002          ___lodiv@quotient 0011  
                  ?_fputc 0001                    ?_fputs 000A          ___awdiv@dividend 0001  
                  ?_putch 0001                    _ANSELD 000F5E                 ??_Lcd_Cmd 0002  
           vfpfcnvrt@done 0054                    _SLRCON 000F7A               _Config_Port 433A  
        __end_of_ejemplo5 3D76              vfprintf@cfmt 005E                    ___flge 3488  
                  ___fleq 3C24                 ??___aodiv 0011                 ??___fladd 0009  
               ??___aomod 0011                    ___wmul 42F4                 ??___fldiv 0009  
               ??___awdiv 0005                 ??___flneg 0005                 ??___awmod 0005  
               ??___flmul 0009                 ??___flsub 0022                 ??___fltol 0005  
               ??___lodiv 0011                 ??___lomod 0011                    _efgtoa 086C  
                  _floorf 2B2A                    clear_0 4182                    clear_1 418E  
        ___awdiv@quotient 0007           ___awmod@divisor 0003                    isa$std 000001  
         ___awmod@counter 0005                    pad@buf 0013                    dtoa@fp 001C  
                  _strcpy 3F30                    _strlen 42BE                    fputc@c 0001  
                  fputs@c 000E                    fputs@i 000F                    fputs@s 000A  
               ??_isdigit 0003           ___fpclassifyf@e 0009           ___fpclassifyf@u 000B  
         ___fpclassifyf@x 0001              __mediumconst 0000                 ??_isspace 0003  
                  tblptrh 000FF7                 ??_isupper 0003                    tblptrl 000FF6  
                  tblptru 000FF8          ejemplo5@contador 00C6                    putch@c 0001  
        __end_of_vfprintf 3F30                    utoa@fp 001C                 ??_sprintf 0060  
               ??_tolower 0009                 ??_strncmp 0007           Lcd_Set_Cursor@a 0005  
         Lcd_Set_Cursor@b 0004           Lcd_Set_Cursor@y 0007           Lcd_Set_Cursor@z 0006  
              ___flge@ff1 001A                ___flge@ff2 001E           ??___fpclassifyf 0005  
              ___fleq@ff1 0001                ___fleq@ff2 0005                __accesstop 0060  
 __end_of__initialization 4194                ___flneg@f1 0001         __end_of_Lcd_Clear 4384  
           ___rparam_used 000001                ___fltol@f1 0001            __pcstackCOMRAM 0001  
            __pidataBANK0 4392             __end_of_fputc 39EA             __end_of_fputs 415C  
           __end_of_putch 439A            _Lcd_Set_Cursor 3E68                 ?_Lcd_Init 0001  
               ?_Lcd_Port 0001                   ??_fputc 0005                   ??_fputs 000E  
                 ??_putch 0001                __pbssBANK0 00C7                __pbssBANK1 0100  
                 ?___flge 001A                   ?___fleq 0001                   ?___wmul 0001  
                 ?_efgtoa 002E      ejemplo5@str_contador 00B5                   ?_floorf 001A  
  __end_of_Lcd_Set_Cursor 3ECE                   ?_strcpy 0001                   ?_strlen 0001  
              ??_Lcd_Init 0004              _Config_Clock 4384                ??_Lcd_Port 0001  
               ?_ejemplo5 0001          ___lomod@dividend 0001            _Lcd_Write_Char 4286  
                 _Lcd_Cmd 431A                   __Hparam 0000                   __Lparam 0000  
                 ___aodiv 2F40                   ___fladd 1BC2                   ___aomod 30C8  
                 ___fldiv 24AC                   ___awdiv 3AB0                   ___flneg 4216  
                 ___awmod 3B74                   ___flmul 2082                   ___flsub 40D2  
                 ___fltol 3382                   ___lodiv 368A                   ___lomod 3850  
               ?_vfprintf 0098              __psmallconst 0800                   __pcinit 415C  
                 __ramtop 0800           ?_Lcd_Set_Cursor 0004                   __ptext0 435A  
                 __ptext1 3CCE                   __ptext2 3FE8                   __ptext3 3ECE  
                 __ptext4 147A                   __ptext5 2D3C                   __ptext6 3850  
                 __ptext7 368A                   __ptext8 377A                   __ptext9 086C  
                 _isdigit 424E          ___awmod@dividend 0001                   _isspace 403A  
                 _isupper 41DE                   efgtoa@c 0034                   efgtoa@d 0072  
                 efgtoa@e 008A                   efgtoa@f 0030                   efgtoa@g 0086  
                 efgtoa@h 007C                   efgtoa@i 0084                   efgtoa@l 0080  
                 efgtoa@m 006C                   efgtoa@n 008C                   efgtoa@p 0076  
                 efgtoa@t 0066                   efgtoa@u 008E                   efgtoa@w 0078  
                 atoi@neg 000E                ??_ejemplo5 0060                   _sprintf 3FE8  
                 _tolower 408C    __end_of_Lcd_Write_Char 42BE                   _strncmp 377A  
    end_of_initialization 4194                   floorf@e 0028                   floorf@m 0024  
                 floorf@u 002A                   floorf@x 001A                   fputc@fp 0003  
           __Lmediumconst 0000              ?_Config_Port 0001                   fputs@fp 000C  
       __end_of_vfpfcnvrt 1BC2                efgtoa@mode 007B                efgtoa@sign 0074  
                 postdec1 000FE5                   postdec2 000FDD                   postinc0 000FEE  
                 postinc1 000FE6                   postinc2 000FDE                 Lcd_Port@a 0001  
              ??_vfprintf 005E                   strcpy@d 0009                   strlen@a 0003  
                 strcpy@s 0007                   strlen@s 0001                 _PORTAbits 000F80  
               _PORTBbits 000F81               ___fladd@grs 0010                 _TRISAbits 000F92  
               _TRISBbits 000F93               ___fldiv@grs 0014               ___fldiv@rem 000D  
         ?_Lcd_Write_Char 0001         Lcd_Write_String@a 0005         Lcd_Write_String@i 0009  
             ___flmul@grs 000E                 _Lcd_Clear 4376            __end_of___flge 358C  
          __end_of___fleq 3CCE               vfpfcnvrt@ap 0096               vfpfcnvrt@ct 005A  
             vfpfcnvrt@fp 0092               vfpfcnvrt@ll 0044            __end_of___wmul 431A  
        _Lcd_Write_String 3D76            __end_of_efgtoa 147A            __end_of_floorf 2D3C  
              floorf@F526 00C7            __end_of_strcpy 3F8C            __end_of_strlen 42F4  
     start_initialization 415C           ___lodiv@divisor 0009           ___lodiv@counter 0019  
             __end_of_abs 41DE               __end_of_pad 3AB0     __end_of___fpclassifyf 368A  
             vfprintf@fmt 009A                ?_Lcd_Clear 0001                  ??___flge 0022  
                ??___fleq 0009                  ??___wmul 0005                  ??_efgtoa 0035  
             __pdataBANK0 00D7                  ??_floorf 001E           Lcd_Write_Char@a 0004  
         Lcd_Write_Char@y 0003                  ??_strcpy 0005                  ??_strlen 0003  
               ___fladd@a 0005                 ___fladd@b 0001                 ___fldiv@a 0005  
               ___fldiv@b 0001                 ___flmul@a 0005                 ___flmul@b 0001  
               ___flsub@a 001E                 ___flsub@b 001A             __pcstackBANK0 0060  
        ___aodiv@dividend 0001                  ?_Lcd_Cmd 0001               _efgtoa$1150 0062  
             _efgtoa$1151 0064               _efgtoa$1143 0060                 _dtoa$1119 002E  
        ??_Lcd_Set_Cursor 0005                  ?___aodiv 0001                  ?___fladd 0001  
                ?___aomod 0001                  ?___fldiv 0001                  ?___awdiv 0001  
        ___aodiv@quotient 0013                  ?___flneg 0001                  ?___awmod 0001  
                ?___flmul 0001                  ?___flsub 001A                  ?___fltol 0001  
                ?___lodiv 0001                  ?___lomod 0001           ___lomod@divisor 0009  
             __smallconst 0800           ___lomod@counter 0011                  ?_isdigit 0001  
                ?_isspace 0001                  ?_isupper 0001                  ?_sprintf 009E  
                ?_tolower 0007                  ?_strncmp 0001            ___wmul@product 0005  
                _LATDbits 000F8C                  Lcd_Cmd@a 0003               ??_Lcd_Clear 0004  
               _vfpfcnvrt 147A         ___wmul@multiplier 0001                  _WPUBbits 000F85  
        ??_Lcd_Write_Char 0002              _isspace$1240 0007                  _Lcd_Init 3DF4  
                _Lcd_Port 3F8C                vfpfcnvrt@c 005D                vfpfcnvrt@f 0056  
             _INTCON2bits 000FF1                 copy_data0 4170  __end_of_Lcd_Write_String 3DF4  
                __Hrparam 0000                vfprintf@ap 009C                  __Lrparam 0000  
              vfprintf@fp 0098                ?_vfpfcnvrt 0092           ___aodiv@divisor 0009  
         ___aodiv@counter 0011                _ANSELAbits 000F5B                _ANSELBbits 000F5C  
      ___fpclassifyf@F465 00CB                sprintf@fmt 00A0                  __ptext10 408C  
                __ptext11 41DE                  __ptext20 3488                  __ptext12 3F30  
                __ptext21 3C24                  __ptext13 2B2A                  __ptext30 4398  
                __ptext22 24AC                  __ptext14 358C                  __ptext31 419E  
                __ptext23 3B74                  __ptext15 3382                  __ptext40 3E68  
                __ptext32 30C8                  __ptext24 3AB0                  __ptext16 40D2  
                __ptext41 3DF4                  __ptext33 2F40                  __ptext25 2846  
                __ptext17 1BC2                  __ptext42 4376                  __ptext34 322C  
                __ptext26 39EA                  __ptext18 4216                  __ptext43 431A  
                __ptext35 403A                  __ptext27 42BE                  __ptext19 2082  
                __ptext44 3F8C                  __ptext36 424E                  __ptext28 4118  
                __ptext45 433A                  __ptext37 42F4                  __ptext29 3920  
                __ptext46 4384                  __ptext38 3D76                  __ptext39 4286  
                _ejemplo5 3CCE                strcpy@dest 0001                  efgtoa@fp 002E  
                efgtoa@ne 006A                  efgtoa@pp 0068                  efgtoa@ou 006E  
                isa$xinst 000000                  _vfprintf 3ECE             ejemplo2@F5205 00D7  
        ___aomod@dividend 0001             ?_Config_Clock 0001                  isdigit@c 0001  
      Lcd_Write_Char@temp 0002                 sprintf@ap 00A8                  isspace@c 0001  
               strcpy@src 0003                  isupper@c 0001                 strncmp@_l 0001  
               strncmp@_r 0003                _OSCCONbits 000FD3               efgtoa@nmode 007A  
         ___aomod@divisor 0009               ??_vfpfcnvrt 0040           ___aomod@counter 0011  
      Lcd_Set_Cursor@temp 0008                  sprintf@f 00AA                  tolower@c 0007  
                sprintf@s 009E            ??_Config_Clock 0001                  strncmp@l 0008  
                strncmp@n 0005                  strncmp@r 000A             ___fladd@signs 000D  
            ___aodiv@sign 0012             ??_Config_Port 0001              ___fladd@aexp 000E  
            ___fladd@bexp 000F              ___aomod@sign 0012  
