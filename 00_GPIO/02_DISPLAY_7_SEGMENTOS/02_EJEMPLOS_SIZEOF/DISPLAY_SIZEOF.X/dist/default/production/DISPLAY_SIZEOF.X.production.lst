

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri Jun 17 19:09:40 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    17  0000                     
    18                           ; Version 2.35
    19                           ; Generated 05/05/2021 GMT
    20                           ; 
    21                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC18F45K50 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     
    54                           	psect	idataCOMRAM
    55  007F3E                     __pidataCOMRAM:
    56                           	callstack 0
    57                           
    58                           ;initializer for _display_catodo
    59  007F3E  3F                 	db	63
    60  007F3F  06                 	db	6
    61  007F40  5B                 	db	91
    62  007F41  4F                 	db	79
    63  007F42  66                 	db	102
    64  007F43  6D                 	db	109
    65  007F44  7D                 	db	125
    66  007F45  07                 	db	7
    67  007F46  7F                 	db	127
    68  007F47  67                 	db	103
    69                           
    70                           ;initializer for _display_anodo
    71  007F48  C0                 	db	192
    72  007F49  F9                 	db	249
    73  007F4A  A4                 	db	164
    74  007F4B  B0                 	db	176
    75  007F4C  99                 	db	153
    76  007F4D  92                 	db	146
    77  007F4E  82                 	db	130
    78  007F4F  F8                 	db	248
    79  007F50  80                 	db	128
    80  007F51  90                 	db	144
    81  0000                     _ANSELAbits	set	3931
    82  0000                     _ANSELB	set	3932
    83  0000                     _ANSELD	set	3934
    84  0000                     _SLRCON	set	3962
    85  0000                     _LATB	set	3978
    86  0000                     _LATD	set	3980
    87  0000                     _OSCCONbits	set	4051
    88  0000                     _TRISAbits	set	3986
    89  0000                     _TRISD	set	3989
    90                           
    91                           ; #config settings
    92                           
    93                           	psect	cinit
    94  007F96                     __pcinit:
    95                           	callstack 0
    96  007F96                     start_initialization:
    97                           	callstack 0
    98  007F96                     __initialization:
    99                           	callstack 0
   100                           
   101                           ; Initialize objects allocated to COMRAM (20 bytes)
   102                           ; load TBLPTR registers with __pidataCOMRAM
   103  007F96  0E3E               	movlw	low __pidataCOMRAM
   104  007F98  6EF6               	movwf	tblptrl,c
   105  007F9A  0E7F               	movlw	high __pidataCOMRAM
   106  007F9C  6EF7               	movwf	tblptrh,c
   107  007F9E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   108  007FA0  6EF8               	movwf	tblptru,c
   109  007FA2  EE00  F001         	lfsr	0,__pdataCOMRAM
   110  007FA6  EE10 F014          	lfsr	1,20
   111  007FAA                     copy_data0:
   112  007FAA  0009               	tblrd		*+
   113  007FAC  CFF5 FFEE          	movff	tablat,postinc0
   114  007FB0  50E5               	movf	postdec1,w,c
   115  007FB2  50E1               	movf	fsr1l,w,c
   116  007FB4  E1FA               	bnz	copy_data0
   117  007FB6                     end_of_initialization:
   118                           	callstack 0
   119  007FB6                     __end_of__initialization:
   120                           	callstack 0
   121  007FB6  0100               	movlb	0
   122  007FB8  EFA9  F03F         	goto	_main	;jump to C main() function
   123                           
   124                           	psect	dataCOMRAM
   125  000001                     __pdataCOMRAM:
   126                           	callstack 0
   127  000001                     _display_catodo:
   128                           	callstack 0
   129  000001                     	ds	10
   130  00000B                     _display_anodo:
   131                           	callstack 0
   132  00000B                     	ds	10
   133                           
   134                           	psect	cstackCOMRAM
   135  000015                     __pcstackCOMRAM:
   136                           	callstack 0
   137  000015                     Imprimir_display@array:
   138                           	callstack 0
   139                           
   140                           ; 2 bytes @ 0x0
   141  000015                     	ds	2
   142  000017                     Imprimir_display@array_size:
   143                           	callstack 0
   144                           
   145                           ; 1 bytes @ 0x2
   146  000017                     	ds	1
   147  000018                     ??_Imprimir_display:
   148                           
   149                           ; 1 bytes @ 0x3
   150  000018                     	ds	2
   151  00001A                     Imprimir_display@i:
   152                           	callstack 0
   153                           
   154                           ; 1 bytes @ 0x5
   155  00001A                     	ds	1
   156  00001B                     
   157                           ; 1 bytes @ 0x6
   158 ;;
   159 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   160 ;;
   161 ;; *************** function _main *****************
   162 ;; Defined at:
   163 ;;		line 36 in file "main.c"
   164 ;; Parameters:    Size  Location     Type
   165 ;;		None
   166 ;; Auto vars:     Size  Location     Type
   167 ;;		None
   168 ;; Return value:  Size  Location     Type
   169 ;;                  1    wreg      void 
   170 ;; Registers used:
   171 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   172 ;; Tracked objects:
   173 ;;		On entry : 0/0
   174 ;;		On exit  : 0/0
   175 ;;		Unchanged: 0/0
   176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   177 ;;      Params:         0       0       0       0       0       0       0       0       0
   178 ;;      Locals:         0       0       0       0       0       0       0       0       0
   179 ;;      Temps:          0       0       0       0       0       0       0       0       0
   180 ;;      Totals:         0       0       0       0       0       0       0       0       0
   181 ;;Total ram usage:        0 bytes
   182 ;; Hardware stack levels required when called: 1
   183 ;; This function calls:
   184 ;;		_Config_Clock
   185 ;;		_Config_Port
   186 ;;		_Imprimir_display
   187 ;; This function is called by:
   188 ;;		Startup code after reset
   189 ;; This function uses a non-reentrant model
   190 ;;
   191                           
   192                           	psect	text0
   193  007F52                     __ptext0:
   194                           	callstack 0
   195  007F52                     _main:
   196                           	callstack 30
   197  007F52                     
   198                           ;main.c: 37:     Config_Clock();
   199  007F52  EC98  F03F         	call	_Config_Clock	;wreg free
   200                           
   201                           ;main.c: 38:     Config_Port();
   202  007F56  ECB9  F03F         	call	_Config_Port	;wreg free
   203  007F5A                     l764:
   204                           
   205                           ;main.c: 40:         Imprimir_display(display_anodo,sizeof(display_anodo)/sizeof(display
      +                          _anodo[0]));
   206  007F5A  0E0B               	movlw	low _display_anodo
   207  007F5C  6E15               	movwf	Imprimir_display@array^0,c
   208  007F5E  0E00               	movlw	high _display_anodo
   209  007F60  6E16               	movwf	(Imprimir_display@array+1)^0,c
   210  007F62  0E0A               	movlw	10
   211  007F64  6E17               	movwf	Imprimir_display@array_size^0,c
   212  007F66  ECDE  F03F         	call	_Imprimir_display	;wreg free
   213  007F6A  EFAD  F03F         	goto	l764
   214  007F6E  EF00  F000         	goto	start
   215  007F72                     __end_of_main:
   216                           	callstack 0
   217                           
   218 ;; *************** function _Imprimir_display *****************
   219 ;; Defined at:
   220 ;;		line 74 in file "main.c"
   221 ;; Parameters:    Size  Location     Type
   222 ;;  array           2    0[COMRAM] PTR unsigned char 
   223 ;;		 -> display_anodo(10), 
   224 ;;  array_size      1    2[COMRAM] unsigned char 
   225 ;; Auto vars:     Size  Location     Type
   226 ;;  i               1    5[COMRAM] unsigned char 
   227 ;; Return value:  Size  Location     Type
   228 ;;                  1    wreg      void 
   229 ;; Registers used:
   230 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   231 ;; Tracked objects:
   232 ;;		On entry : 0/0
   233 ;;		On exit  : 0/0
   234 ;;		Unchanged: 0/0
   235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   236 ;;      Params:         3       0       0       0       0       0       0       0       0
   237 ;;      Locals:         1       0       0       0       0       0       0       0       0
   238 ;;      Temps:          2       0       0       0       0       0       0       0       0
   239 ;;      Totals:         6       0       0       0       0       0       0       0       0
   240 ;;Total ram usage:        6 bytes
   241 ;; Hardware stack levels used: 1
   242 ;; This function calls:
   243 ;;		Nothing
   244 ;; This function is called by:
   245 ;;		_main
   246 ;; This function uses a non-reentrant model
   247 ;;
   248                           
   249                           	psect	text1
   250  007FBC                     __ptext1:
   251                           	callstack 0
   252  007FBC                     _Imprimir_display:
   253                           	callstack 30
   254  007FBC                     
   255                           ;main.c: 74: void Imprimir_display(uint8_t array[], uint8_t array_size);main.c: 75: {;ma
      +                          in.c: 76:     for (uint8_t i=0;i<array_size;i++){
   256  007FBC  0E00               	movlw	0
   257  007FBE  6E1A               	movwf	Imprimir_display@i^0,c
   258  007FC0  EFF6  F03F         	goto	l760
   259  007FC4                     l754:
   260                           
   261                           ;main.c: 77:         LATD=array[i];
   262  007FC4  501A               	movf	Imprimir_display@i^0,w,c
   263  007FC6  2415               	addwf	Imprimir_display@array^0,w,c
   264  007FC8  6ED9               	movwf	fsr2l,c
   265  007FCA  0E00               	movlw	0
   266  007FCC  2016               	addwfc	(Imprimir_display@array+1)^0,w,c
   267  007FCE  6EDA               	movwf	fsr2h,c
   268  007FD0  50DF               	movf	indf2,w,c
   269  007FD2  6E8C               	movwf	140,c	;volatile
   270  007FD4                     
   271                           ;main.c: 78:         _delay((unsigned long)((500)*(16000000UL/4000.0)));
   272  007FD4  0E0B               	movlw	11
   273  007FD6  6E19               	movwf	(??_Imprimir_display+1)^0,c
   274  007FD8  0E26               	movlw	38
   275  007FDA  6E18               	movwf	??_Imprimir_display^0,c
   276  007FDC  0E5E               	movlw	94
   277  007FDE                     u37:
   278  007FDE  2EE8               	decfsz	wreg,f,c
   279  007FE0  D7FE               	bra	u37
   280  007FE2  2E18               	decfsz	??_Imprimir_display^0,f,c
   281  007FE4  D7FC               	bra	u37
   282  007FE6  2E19               	decfsz	(??_Imprimir_display+1)^0,f,c
   283  007FE8  D7FA               	bra	u37
   284  007FEA                     
   285                           ;main.c: 79:     }
   286  007FEA  2A1A               	incf	Imprimir_display@i^0,f,c
   287  007FEC                     l760:
   288  007FEC  5017               	movf	Imprimir_display@array_size^0,w,c
   289  007FEE  5C1A               	subwf	Imprimir_display@i^0,w,c
   290  007FF0  A0D8               	btfss	status,0,c
   291  007FF2  EFFD  F03F         	goto	u21
   292  007FF6  EFFF  F03F         	goto	u20
   293  007FFA                     u21:
   294  007FFA  EFE2  F03F         	goto	l754
   295  007FFE                     u20:
   296  007FFE  0012               	return		;funcret
   297  008000                     __end_of_Imprimir_display:
   298                           	callstack 0
   299                           
   300 ;; *************** function _Config_Port *****************
   301 ;; Defined at:
   302 ;;		line 50 in file "main.c"
   303 ;; Parameters:    Size  Location     Type
   304 ;;		None
   305 ;; Auto vars:     Size  Location     Type
   306 ;;		None
   307 ;; Return value:  Size  Location     Type
   308 ;;                  1    wreg      void 
   309 ;; Registers used:
   310 ;;		wreg, status,2
   311 ;; Tracked objects:
   312 ;;		On entry : 0/0
   313 ;;		On exit  : 0/0
   314 ;;		Unchanged: 0/0
   315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   316 ;;      Params:         0       0       0       0       0       0       0       0       0
   317 ;;      Locals:         0       0       0       0       0       0       0       0       0
   318 ;;      Temps:          0       0       0       0       0       0       0       0       0
   319 ;;      Totals:         0       0       0       0       0       0       0       0       0
   320 ;;Total ram usage:        0 bytes
   321 ;; Hardware stack levels used: 1
   322 ;; This function calls:
   323 ;;		Nothing
   324 ;; This function is called by:
   325 ;;		_main
   326 ;; This function uses a non-reentrant model
   327 ;;
   328                           
   329                           	psect	text2
   330  007F72                     __ptext2:
   331                           	callstack 0
   332  007F72                     _Config_Port:
   333                           	callstack 30
   334  007F72                     
   335                           ;main.c: 52:     LATD= 0b00000000;
   336  007F72  0E00               	movlw	0
   337  007F74  6E8C               	movwf	140,c	;volatile
   338                           
   339                           ;main.c: 53:     LATB= 0b00000000;
   340  007F76  0E00               	movlw	0
   341  007F78  6E8A               	movwf	138,c	;volatile
   342                           
   343                           ;main.c: 56:     SLRCON=0b00000000;
   344  007F7A  0E00               	movlw	0
   345  007F7C  6E7A               	movwf	122,c	;volatile
   346                           
   347                           ;main.c: 59:     ANSELD=0b00000000;
   348  007F7E  0E00               	movlw	0
   349  007F80  010F               	movlb	15	; () banked
   350  007F82  6F5E               	movwf	94,b	;volatile
   351                           
   352                           ;main.c: 60:     ANSELB=0b00000000;
   353  007F84  0E00               	movlw	0
   354  007F86  6F5C               	movwf	92,b	;volatile
   355  007F88                     
   356                           ; BSR set to: 15
   357                           ;main.c: 62:     ANSELAbits.ANSA0=0;
   358  007F88  915B               	bcf	91,0,b	;volatile
   359  007F8A                     
   360                           ; BSR set to: 15
   361                           ;main.c: 63:     ANSELAbits.ANSA1=0;
   362  007F8A  935B               	bcf	91,1,b	;volatile
   363                           
   364                           ;main.c: 66:     TRISD=0b00000000;
   365  007F8C  0E00               	movlw	0
   366  007F8E  6E95               	movwf	149,c	;volatile
   367  007F90                     
   368                           ; BSR set to: 15
   369                           ;main.c: 69:     TRISAbits.TRISA0=1;
   370  007F90  8092               	bsf	146,0,c	;volatile
   371  007F92                     
   372                           ; BSR set to: 15
   373                           ;main.c: 70:     TRISAbits.TRISA1=1;
   374  007F92  8292               	bsf	146,1,c	;volatile
   375  007F94                     
   376                           ; BSR set to: 15
   377  007F94  0012               	return		;funcret
   378  007F96                     __end_of_Config_Port:
   379                           	callstack 0
   380                           
   381 ;; *************** function _Config_Clock *****************
   382 ;; Defined at:
   383 ;;		line 45 in file "main.c"
   384 ;; Parameters:    Size  Location     Type
   385 ;;		None
   386 ;; Auto vars:     Size  Location     Type
   387 ;;		None
   388 ;; Return value:  Size  Location     Type
   389 ;;                  1    wreg      void 
   390 ;; Registers used:
   391 ;;		wreg, status,2
   392 ;; Tracked objects:
   393 ;;		On entry : 0/0
   394 ;;		On exit  : 0/0
   395 ;;		Unchanged: 0/0
   396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   397 ;;      Params:         0       0       0       0       0       0       0       0       0
   398 ;;      Locals:         0       0       0       0       0       0       0       0       0
   399 ;;      Temps:          0       0       0       0       0       0       0       0       0
   400 ;;      Totals:         0       0       0       0       0       0       0       0       0
   401 ;;Total ram usage:        0 bytes
   402 ;; Hardware stack levels used: 1
   403 ;; This function calls:
   404 ;;		Nothing
   405 ;; This function is called by:
   406 ;;		_main
   407 ;; This function uses a non-reentrant model
   408 ;;
   409                           
   410                           	psect	text3
   411  007F30                     __ptext3:
   412                           	callstack 0
   413  007F30                     _Config_Clock:
   414                           	callstack 30
   415  007F30                     
   416                           ;main.c: 46:     OSCCONbits.IRCF=0b111;
   417  007F30  0E70               	movlw	112
   418  007F32  12D3               	iorwf	211,f,c	;volatile
   419                           
   420                           ;main.c: 47:     OSCCONbits.SCS=0b10;
   421  007F34  50D3               	movf	211,w,c	;volatile
   422  007F36  0BFC               	andlw	-4
   423  007F38  0902               	iorlw	2
   424  007F3A  6ED3               	movwf	211,c	;volatile
   425  007F3C  0012               	return		;funcret
   426  007F3E                     __end_of_Config_Clock:
   427                           	callstack 0
   428  0000                     
   429                           	psect	rparam
   430  0000                     
   431                           	psect	idloc
   432                           
   433                           ;Config register IDLOC0 @ 0x200000
   434                           ;	unspecified, using default values
   435  200000                     	org	2097152
   436  200000  FF                 	db	255
   437                           
   438                           ;Config register IDLOC1 @ 0x200001
   439                           ;	unspecified, using default values
   440  200001                     	org	2097153
   441  200001  FF                 	db	255
   442                           
   443                           ;Config register IDLOC2 @ 0x200002
   444                           ;	unspecified, using default values
   445  200002                     	org	2097154
   446  200002  FF                 	db	255
   447                           
   448                           ;Config register IDLOC3 @ 0x200003
   449                           ;	unspecified, using default values
   450  200003                     	org	2097155
   451  200003  FF                 	db	255
   452                           
   453                           ;Config register IDLOC4 @ 0x200004
   454                           ;	unspecified, using default values
   455  200004                     	org	2097156
   456  200004  FF                 	db	255
   457                           
   458                           ;Config register IDLOC5 @ 0x200005
   459                           ;	unspecified, using default values
   460  200005                     	org	2097157
   461  200005  FF                 	db	255
   462                           
   463                           ;Config register IDLOC6 @ 0x200006
   464                           ;	unspecified, using default values
   465  200006                     	org	2097158
   466  200006  FF                 	db	255
   467                           
   468                           ;Config register IDLOC7 @ 0x200007
   469                           ;	unspecified, using default values
   470  200007                     	org	2097159
   471  200007  FF                 	db	255
   472                           
   473                           	psect	config
   474                           
   475                           ;Config register CONFIG1L @ 0x300000
   476                           ;	PLL Selection
   477                           ;	PLLSEL = PLL4X, 4x clock multiplier
   478                           ;	PLL Enable Configuration bit
   479                           ;	CFGPLLEN = OFF, PLL Disabled (firmware controlled)
   480                           ;	CPU System Clock Postscaler
   481                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
   482                           ;	Low Speed USB mode with 48 MHz system clock
   483                           ;	LS48MHZ = SYS24X4, System clock at 24 MHz, USB clock divider is set to 4
   484  300000                     	org	3145728
   485  300000  00                 	db	0
   486                           
   487                           ;Config register CONFIG1H @ 0x300001
   488                           ;	Oscillator Selection
   489                           ;	FOSC = INTOSCIO, Internal oscillator
   490                           ;	Primary Oscillator Shutdown
   491                           ;	PCLKEN = ON, Primary oscillator enabled
   492                           ;	Fail-Safe Clock Monitor
   493                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   494                           ;	Internal/External Oscillator Switchover
   495                           ;	IESO = OFF, Oscillator Switchover mode disabled
   496  300001                     	org	3145729
   497  300001  28                 	db	40
   498                           
   499                           ;Config register CONFIG2L @ 0x300002
   500                           ;	Power-up Timer Enable
   501                           ;	nPWRTEN = ON, Power up timer enabled
   502                           ;	Brown-out Reset Enable
   503                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
   504                           ;	Brown-out Reset Voltage
   505                           ;	BORV = 190, BOR set to 1.9V nominal
   506                           ;	Low-Power Brown-out Reset
   507                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
   508  300002                     	org	3145730
   509  300002  5E                 	db	94
   510                           
   511                           ;Config register CONFIG2H @ 0x300003
   512                           ;	Watchdog Timer Enable bits
   513                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
   514                           ;	Watchdog Timer Postscaler
   515                           ;	WDTPS = 32768, 1:32768
   516  300003                     	org	3145731
   517  300003  3C                 	db	60
   518                           
   519                           ; Padding undefined space
   520  300004                     	org	3145732
   521  300004  FF                 	db	255
   522                           
   523                           ;Config register CONFIG3H @ 0x300005
   524                           ;	CCP2 MUX bit
   525                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
   526                           ;	PORTB A/D Enable bit
   527                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
   528                           ;	Timer3 Clock Input MUX bit
   529                           ;	T3CMX = RC0, T3CKI function is on RC0
   530                           ;	SDO Output MUX bit
   531                           ;	SDOMX = RB3, SDO function is on RB3
   532                           ;	Master Clear Reset Pin Enable
   533                           ;	MCLRE = OFF, RE3 input pin enabled; external MCLR disabled
   534  300005                     	org	3145733
   535  300005  53                 	db	83
   536                           
   537                           ;Config register CONFIG4L @ 0x300006
   538                           ;	Stack Full/Underflow Reset
   539                           ;	STVREN = ON, Stack full/underflow will cause Reset
   540                           ;	Single-Supply ICSP Enable bit
   541                           ;	LVP = OFF, Single-Supply ICSP disabled
   542                           ;	Dedicated In-Circuit Debug/Programming Port Enable
   543                           ;	ICPRT = OFF, ICPORT disabled
   544                           ;	Extended Instruction Set Enable bit
   545                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
   546                           ;	Background Debugger Enable bit
   547                           ;	DEBUG = 0x1, unprogrammed default
   548  300006                     	org	3145734
   549  300006  81                 	db	129
   550                           
   551                           ; Padding undefined space
   552  300007                     	org	3145735
   553  300007  FF                 	db	255
   554                           
   555                           ;Config register CONFIG5L @ 0x300008
   556                           ;	Block 0 Code Protect
   557                           ;	CP0 = OFF, Block 0 is not code-protected
   558                           ;	Block 1 Code Protect
   559                           ;	CP1 = OFF, Block 1 is not code-protected
   560                           ;	Block 2 Code Protect
   561                           ;	CP2 = OFF, Block 2 is not code-protected
   562                           ;	Block 3 Code Protect
   563                           ;	CP3 = OFF, Block 3 is not code-protected
   564  300008                     	org	3145736
   565  300008  0F                 	db	15
   566                           
   567                           ;Config register CONFIG5H @ 0x300009
   568                           ;	Boot Block Code Protect
   569                           ;	CPB = OFF, Boot block is not code-protected
   570                           ;	Data EEPROM Code Protect
   571                           ;	CPD = OFF, Data EEPROM is not code-protected
   572  300009                     	org	3145737
   573  300009  C0                 	db	192
   574                           
   575                           ;Config register CONFIG6L @ 0x30000A
   576                           ;	Block 0 Write Protect
   577                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
   578                           ;	Block 1 Write Protect
   579                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
   580                           ;	Block 2 Write Protect
   581                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
   582                           ;	Block 3 Write Protect
   583                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
   584  30000A                     	org	3145738
   585  30000A  0F                 	db	15
   586                           
   587                           ;Config register CONFIG6H @ 0x30000B
   588                           ;	Configuration Registers Write Protect
   589                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   590                           ;	Boot Block Write Protect
   591                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
   592                           ;	Data EEPROM Write Protect
   593                           ;	WRTD = OFF, Data EEPROM is not write-protected
   594  30000B                     	org	3145739
   595  30000B  E0                 	db	224
   596                           
   597                           ;Config register CONFIG7L @ 0x30000C
   598                           ;	Block 0 Table Read Protect
   599                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
   600                           ;	Block 1 Table Read Protect
   601                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
   602                           ;	Block 2 Table Read Protect
   603                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
   604                           ;	Block 3 Table Read Protect
   605                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
   606  30000C                     	org	3145740
   607  30000C  0F                 	db	15
   608                           
   609                           ;Config register CONFIG7H @ 0x30000D
   610                           ;	Boot Block Table Read Protect
   611                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
   612  30000D                     	org	3145741
   613  30000D  40                 	db	64
   614                           tosu	equ	0xFFF
   615                           tosh	equ	0xFFE
   616                           tosl	equ	0xFFD
   617                           stkptr	equ	0xFFC
   618                           pclatu	equ	0xFFB
   619                           pclath	equ	0xFFA
   620                           pcl	equ	0xFF9
   621                           tblptru	equ	0xFF8
   622                           tblptrh	equ	0xFF7
   623                           tblptrl	equ	0xFF6
   624                           tablat	equ	0xFF5
   625                           prodh	equ	0xFF4
   626                           prodl	equ	0xFF3
   627                           indf0	equ	0xFEF
   628                           postinc0	equ	0xFEE
   629                           postdec0	equ	0xFED
   630                           preinc0	equ	0xFEC
   631                           plusw0	equ	0xFEB
   632                           fsr0h	equ	0xFEA
   633                           fsr0l	equ	0xFE9
   634                           wreg	equ	0xFE8
   635                           indf1	equ	0xFE7
   636                           postinc1	equ	0xFE6
   637                           postdec1	equ	0xFE5
   638                           preinc1	equ	0xFE4
   639                           plusw1	equ	0xFE3
   640                           fsr1h	equ	0xFE2
   641                           fsr1l	equ	0xFE1
   642                           bsr	equ	0xFE0
   643                           indf2	equ	0xFDF
   644                           postinc2	equ	0xFDE
   645                           postdec2	equ	0xFDD
   646                           preinc2	equ	0xFDC
   647                           plusw2	equ	0xFDB
   648                           fsr2h	equ	0xFDA
   649                           fsr2l	equ	0xFD9
   650                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      6      26
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    Imprimir_display@array	PTR unsigned char  size(2) Largest target is 10
		 -> display_anodo(COMRAM[10]), 


Critical Paths under _main in COMRAM

    _main->_Imprimir_display

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     242
                       _Config_Clock
                        _Config_Port
                   _Imprimir_display
 ---------------------------------------------------------------------------------
 (1) _Imprimir_display                                     6     3      3     242
                                              0 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (1) _Config_Port                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Config_Clock                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Config_Clock
   _Config_Port
   _Imprimir_display

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      30        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      6      1A       1       27.4%
BITBIGSFRlhh        3D      0       0      21        0.0%
BITBIGSFRh          2C      0       0      20        0.0%
BITBIGSFRllllh      1B      0       0      26        0.0%
BITBIGSFRlllh        F      0       0      25        0.0%
BITBIGSFRllllll      8      0       0      28        0.0%
BITBIGSFRlhll        5      0       0      23        0.0%
BITBIGSFRlhlh        2      0       0      22        0.0%
BITBIGSFRlllllh      1      0       0      27        0.0%
BITBIGSFRllh         1      0       0      24        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1A      29        0.0%
DATA                 0      0      1A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri Jun 17 19:09:40 2022

                        l41 7F3C                          l50 7FFE                          l44 7F94  
                        u20 7FFE                          u21 7FFA                          u37 7FDE  
                       l730 7F88                         l732 7F8A                         l726 7F30  
                       l734 7F90                         l736 7F92                         l728 7F72  
                       l760 7FEC                         l752 7FBC                         l754 7FC4  
                       l762 7F52                         l756 7FD4                         l764 7F5A  
                       l758 7FEA                         wreg 000FE8                        _LATB 000F8A  
                      _LATD 000F8C                        _main 7F52                        indf2 000FDF  
                      fsr1l 000FE1                        fsr2l 000FD9                        start 0000  
          _Imprimir_display 7FBC                ___param_bank 000000         __end_of_Config_Port 7F96  
                     ?_main 0015                       _TRISD 000F95                       tablat 000FF5  
                     status 000FD8             __initialization 7F96        __end_of_Config_Clock 7F3E  
              __end_of_main 7F72       Imprimir_display@array 0015                      ??_main 001B  
             __activetblptr 000000                      _ANSELB 000F5C                      _ANSELD 000F5E  
                    _SLRCON 000F7A                 _Config_Port 7F72                      isa$std 000001  
              __pdataCOMRAM 0001                      tblptrh 000FF7                      tblptrl 000FF6  
                    tblptru 000FF8                  __accesstop 0060     __end_of__initialization 7FB6  
             ___rparam_used 000001              __pcstackCOMRAM 0015    __end_of_Imprimir_display 8000  
              _Config_Clock 7F30                     __Hparam 0000                     __Lparam 0000  
                   __pcinit 7F96                     __ramtop 0800                     __ptext0 7F52  
                   __ptext1 7FBC                     __ptext2 7F72                     __ptext3 7F30  
      end_of_initialization 7FB6                ?_Config_Port 0015                     postdec1 000FE5  
                   postinc0 000FEE                   _TRISAbits 000F92               __pidataCOMRAM 7F3E  
       start_initialization 7F96           ?_Imprimir_display 0015           Imprimir_display@i 001A  
        ??_Imprimir_display 0018                   copy_data0 7FAA                    __Hrparam 0000  
                  __Lrparam 0000                  _ANSELAbits 000F5B                    isa$xinst 000000  
             ?_Config_Clock 0015                  _OSCCONbits 000FD3              _display_catodo 0001  
            ??_Config_Clock 0015  Imprimir_display@array_size 0017               _display_anodo 000B  
             ??_Config_Port 0015  
