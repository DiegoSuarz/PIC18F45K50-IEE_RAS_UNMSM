

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Jun 16 19:35:30 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    18  0000                     
    19                           ; Version 2.35
    20                           ; Generated 05/05/2021 GMT
    21                           ; 
    22                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F45K50 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     
    55                           	psect	idataCOMRAM
    56  007DBE                     __pidataCOMRAM:
    57                           	callstack 0
    58                           
    59                           ;initializer for _display_catodo
    60  007DBE  3F                 	db	63
    61  007DBF  06                 	db	6
    62  007DC0  5B                 	db	91
    63  007DC1  4F                 	db	79
    64  007DC2  66                 	db	102
    65  007DC3  6D                 	db	109
    66  007DC4  7D                 	db	125
    67  007DC5  07                 	db	7
    68  007DC6  7F                 	db	127
    69  007DC7  67                 	db	103
    70                           
    71                           ;initializer for _display_anodo
    72  007DC8  C0                 	db	192
    73  007DC9  F9                 	db	249
    74  007DCA  A4                 	db	164
    75  007DCB  B0                 	db	176
    76  007DCC  99                 	db	153
    77  007DCD  92                 	db	146
    78  007DCE  82                 	db	130
    79  007DCF  F8                 	db	248
    80  007DD0  80                 	db	128
    81  007DD1  90                 	db	144
    82  0000                     _PORTA	set	3968
    83  0000                     _ANSELAbits	set	3931
    84  0000                     _ANSELB	set	3932
    85  0000                     _ANSELD	set	3934
    86  0000                     _SLRCON	set	3962
    87  0000                     _LATB	set	3978
    88  0000                     _LATD	set	3980
    89  0000                     _OSCCONbits	set	4051
    90  0000                     _TRISAbits	set	3986
    91  0000                     _TRISB	set	3987
    92  0000                     _TRISD	set	3989
    93  0000                     _PORTAbits	set	3968
    94                           
    95                           ; #config settings
    96                           
    97                           	psect	cinit
    98  007DEA                     __pcinit:
    99                           	callstack 0
   100  007DEA                     start_initialization:
   101                           	callstack 0
   102  007DEA                     __initialization:
   103                           	callstack 0
   104                           
   105                           ; Initialize objects allocated to COMRAM (20 bytes)
   106                           ; load TBLPTR registers with __pidataCOMRAM
   107  007DEA  0EBE               	movlw	low __pidataCOMRAM
   108  007DEC  6EF6               	movwf	tblptrl,c
   109  007DEE  0E7D               	movlw	high __pidataCOMRAM
   110  007DF0  6EF7               	movwf	tblptrh,c
   111  007DF2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   112  007DF4  6EF8               	movwf	tblptru,c
   113  007DF6  EE00  F001         	lfsr	0,__pdataCOMRAM
   114  007DFA  EE10 F014          	lfsr	1,20
   115  007DFE                     copy_data0:
   116  007DFE  0009               	tblrd		*+
   117  007E00  CFF5 FFEE          	movff	tablat,postinc0
   118  007E04  50E5               	movf	postdec1,w,c
   119  007E06  50E1               	movf	fsr1l,w,c
   120  007E08  E1FA               	bnz	copy_data0
   121  007E0A                     end_of_initialization:
   122                           	callstack 0
   123  007E0A                     __end_of__initialization:
   124                           	callstack 0
   125  007E0A  0100               	movlb	0
   126  007E0C  EFE9  F03E         	goto	_main	;jump to C main() function
   127                           
   128                           	psect	dataCOMRAM
   129  000001                     __pdataCOMRAM:
   130                           	callstack 0
   131  000001                     _display_catodo:
   132                           	callstack 0
   133  000001                     	ds	10
   134  00000B                     _display_anodo:
   135                           	callstack 0
   136  00000B                     	ds	10
   137                           
   138                           	psect	cstackCOMRAM
   139  000015                     __pcstackCOMRAM:
   140                           	callstack 0
   141  000015                     Ejm5_pulsadores@decenas:
   142                           	callstack 0
   143  000015                     Ejm6_pulsadores_nivelBits@decenas:
   144                           	callstack 0
   145                           
   146                           ; 1 bytes @ 0x0
   147  000015                     	ds	1
   148  000016                     Ejm5_pulsadores@unidades:
   149                           	callstack 0
   150  000016                     Ejm6_pulsadores_nivelBits@unidades:
   151                           	callstack 0
   152                           
   153                           ; 1 bytes @ 0x1
   154  000016                     	ds	1
   155  000017                     
   156                           ; 1 bytes @ 0x2
   157 ;;
   158 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   159 ;;
   160 ;; *************** function _main *****************
   161 ;; Defined at:
   162 ;;		line 27 in file "main.c"
   163 ;; Parameters:    Size  Location     Type
   164 ;;		None
   165 ;; Auto vars:     Size  Location     Type
   166 ;;		None
   167 ;; Return value:  Size  Location     Type
   168 ;;                  1    wreg      void 
   169 ;; Registers used:
   170 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   171 ;; Tracked objects:
   172 ;;		On entry : 0/0
   173 ;;		On exit  : 0/0
   174 ;;		Unchanged: 0/0
   175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   176 ;;      Params:         0       0       0       0       0       0       0       0       0
   177 ;;      Locals:         0       0       0       0       0       0       0       0       0
   178 ;;      Temps:          0       0       0       0       0       0       0       0       0
   179 ;;      Totals:         0       0       0       0       0       0       0       0       0
   180 ;;Total ram usage:        0 bytes
   181 ;; Hardware stack levels required when called: 1
   182 ;; This function calls:
   183 ;;		_Config_Clock
   184 ;;		_Config_Port
   185 ;;		_Ejm5_pulsadores
   186 ;;		_Ejm6_pulsadores_nivelBits
   187 ;; This function is called by:
   188 ;;		Startup code after reset
   189 ;; This function uses a non-reentrant model
   190 ;;
   191                           
   192                           	psect	text0
   193  007DD2                     __ptext0:
   194                           	callstack 0
   195  007DD2                     _main:
   196                           	callstack 30
   197  007DD2                     
   198                           ;main.c: 29:     Config_Clock();
   199  007DD2  ECD8  F03E         	call	_Config_Clock	;wreg free
   200                           
   201                           ;main.c: 30:     Config_Port();
   202  007DD6  EC08  F03F         	call	_Config_Port	;wreg free
   203  007DDA                     l875:
   204                           
   205                           ;main.c: 37:         Ejm5_pulsadores();
   206  007DDA  EC8B  F03F         	call	_Ejm5_pulsadores	;wreg free
   207  007DDE                     
   208                           ;main.c: 38:         Ejm6_pulsadores_nivelBits();
   209  007DDE  EC1C  F03F         	call	_Ejm6_pulsadores_nivelBits	;wreg free
   210  007DE2  EFED  F03E         	goto	l875
   211  007DE6  EF00  F000         	goto	start
   212  007DEA                     __end_of_main:
   213                           	callstack 0
   214                           
   215 ;; *************** function _Ejm6_pulsadores_nivelBits *****************
   216 ;; Defined at:
   217 ;;		line 200 in file "main.c"
   218 ;; Parameters:    Size  Location     Type
   219 ;;		None
   220 ;; Auto vars:     Size  Location     Type
   221 ;;  unidades        1    1[COMRAM] unsigned char 
   222 ;;  decenas         1    0[COMRAM] unsigned char 
   223 ;; Return value:  Size  Location     Type
   224 ;;                  1    wreg      void 
   225 ;; Registers used:
   226 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   227 ;; Tracked objects:
   228 ;;		On entry : 0/0
   229 ;;		On exit  : 0/0
   230 ;;		Unchanged: 0/0
   231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   232 ;;      Params:         0       0       0       0       0       0       0       0       0
   233 ;;      Locals:         2       0       0       0       0       0       0       0       0
   234 ;;      Temps:          0       0       0       0       0       0       0       0       0
   235 ;;      Totals:         2       0       0       0       0       0       0       0       0
   236 ;;Total ram usage:        2 bytes
   237 ;; Hardware stack levels used: 1
   238 ;; This function calls:
   239 ;;		Nothing
   240 ;; This function is called by:
   241 ;;		_main
   242 ;; This function uses a non-reentrant model
   243 ;;
   244                           
   245                           	psect	text1
   246  007E38                     __ptext1:
   247                           	callstack 0
   248  007E38                     _Ejm6_pulsadores_nivelBits:
   249                           	callstack 30
   250  007E38                     
   251                           ;main.c: 203:     uint8_t unidades=0, decenas=0;
   252  007E38  0E00               	movlw	0
   253  007E3A  6E16               	movwf	Ejm6_pulsadores_nivelBits@unidades^0,c
   254  007E3C  0E00               	movlw	0
   255  007E3E  6E15               	movwf	Ejm6_pulsadores_nivelBits@decenas^0,c
   256  007E40                     
   257                           ;main.c: 205:     if(!(PORTA & (1<<0)))
   258  007E40  B080               	btfsc	128,0,c	;volatile
   259  007E42  EF25  F03F         	goto	u111
   260  007E46  EF27  F03F         	goto	u110
   261  007E4A                     u111:
   262  007E4A  EF46  F03F         	goto	l851
   263  007E4E                     u110:
   264  007E4E                     l90:
   265  007E4E  A080               	btfss	128,0,c	;volatile
   266  007E50  EF2C  F03F         	goto	u121
   267  007E54  EF2E  F03F         	goto	u120
   268  007E58                     u121:
   269  007E58  EF27  F03F         	goto	l90
   270  007E5C                     u120:
   271  007E5C                     
   272                           ;main.c: 208:         unidades++;
   273  007E5C  2A16               	incf	Ejm6_pulsadores_nivelBits@unidades^0,f,c
   274  007E5E                     
   275                           ;main.c: 209:         if(unidades==10)
   276  007E5E  0E0A               	movlw	10
   277  007E60  1816               	xorwf	Ejm6_pulsadores_nivelBits@unidades^0,w,c
   278  007E62  A4D8               	btfss	status,2,c
   279  007E64  EF36  F03F         	goto	u131
   280  007E68  EF38  F03F         	goto	u130
   281  007E6C                     u131:
   282  007E6C  EF46  F03F         	goto	l851
   283  007E70                     u130:
   284  007E70                     
   285                           ;main.c: 210:         {;main.c: 211:             unidades=0;
   286  007E70  0E00               	movlw	0
   287  007E72  6E16               	movwf	Ejm6_pulsadores_nivelBits@unidades^0,c
   288  007E74                     
   289                           ;main.c: 212:             decenas++;
   290  007E74  2A15               	incf	Ejm6_pulsadores_nivelBits@decenas^0,f,c
   291  007E76                     
   292                           ;main.c: 213:             if(decenas==10)decenas=0;
   293  007E76  0E0A               	movlw	10
   294  007E78  1815               	xorwf	Ejm6_pulsadores_nivelBits@decenas^0,w,c
   295  007E7A  A4D8               	btfss	status,2,c
   296  007E7C  EF42  F03F         	goto	u141
   297  007E80  EF44  F03F         	goto	u140
   298  007E84                     u141:
   299  007E84  EF46  F03F         	goto	l851
   300  007E88                     u140:
   301  007E88  0E00               	movlw	0
   302  007E8A  6E15               	movwf	Ejm6_pulsadores_nivelBits@decenas^0,c
   303  007E8C                     l851:
   304                           
   305                           ;main.c: 218:     if(PORTA & (1<<1))
   306  007E8C  A280               	btfss	128,1,c	;volatile
   307  007E8E  EF4B  F03F         	goto	u151
   308  007E92  EF4D  F03F         	goto	u150
   309  007E96                     u151:
   310  007E96  EF7A  F03F         	goto	l869
   311  007E9A                     u150:
   312  007E9A                     l96:
   313  007E9A  B280               	btfsc	128,1,c	;volatile
   314  007E9C  EF52  F03F         	goto	u161
   315  007EA0  EF54  F03F         	goto	u160
   316  007EA4                     u161:
   317  007EA4  EF4D  F03F         	goto	l96
   318  007EA8                     u160:
   319  007EA8                     
   320                           ;main.c: 221:         unidades--;
   321  007EA8  0616               	decf	Ejm6_pulsadores_nivelBits@unidades^0,f,c
   322  007EAA                     
   323                           ;main.c: 222:         if((decenas==0) && (unidades==255))
   324  007EAA  5015               	movf	Ejm6_pulsadores_nivelBits@decenas^0,w,c
   325  007EAC  A4D8               	btfss	status,2,c
   326  007EAE  EF5B  F03F         	goto	u171
   327  007EB2  EF5D  F03F         	goto	u170
   328  007EB6                     u171:
   329  007EB6  EF67  F03F         	goto	l99
   330  007EBA                     u170:
   331  007EBA  2816               	incf	Ejm6_pulsadores_nivelBits@unidades^0,w,c
   332  007EBC  A4D8               	btfss	status,2,c
   333  007EBE  EF63  F03F         	goto	u181
   334  007EC2  EF65  F03F         	goto	u180
   335  007EC6                     u181:
   336  007EC6  EF67  F03F         	goto	l99
   337  007ECA                     u180:
   338  007ECA                     
   339                           ;main.c: 223:         {;main.c: 224:             unidades=0;
   340  007ECA  0E00               	movlw	0
   341  007ECC  6E16               	movwf	Ejm6_pulsadores_nivelBits@unidades^0,c
   342  007ECE                     l99:
   343                           
   344                           ;main.c: 226:         if((decenas>0) && (unidades==255))
   345  007ECE  5015               	movf	Ejm6_pulsadores_nivelBits@decenas^0,w,c
   346  007ED0  B4D8               	btfsc	status,2,c
   347  007ED2  EF6D  F03F         	goto	u191
   348  007ED6  EF6F  F03F         	goto	u190
   349  007EDA                     u191:
   350  007EDA  EF7A  F03F         	goto	l869
   351  007EDE                     u190:
   352  007EDE  2816               	incf	Ejm6_pulsadores_nivelBits@unidades^0,w,c
   353  007EE0  A4D8               	btfss	status,2,c
   354  007EE2  EF75  F03F         	goto	u201
   355  007EE6  EF77  F03F         	goto	u200
   356  007EEA                     u201:
   357  007EEA  EF7A  F03F         	goto	l869
   358  007EEE                     u200:
   359  007EEE                     
   360                           ;main.c: 227:         {;main.c: 228:             unidades=9;
   361  007EEE  0E09               	movlw	9
   362  007EF0  6E16               	movwf	Ejm6_pulsadores_nivelBits@unidades^0,c
   363  007EF2                     
   364                           ;main.c: 229:             decenas--;
   365  007EF2  0615               	decf	Ejm6_pulsadores_nivelBits@decenas^0,f,c
   366  007EF4                     l869:
   367                           
   368                           ;main.c: 232:     LATB=display_catodo[unidades];
   369  007EF4  0E01               	movlw	low _display_catodo
   370  007EF6  2416               	addwf	Ejm6_pulsadores_nivelBits@unidades^0,w,c
   371  007EF8  6ED9               	movwf	fsr2l,c
   372  007EFA  6ADA               	clrf	fsr2h,c
   373  007EFC  0E00               	movlw	high _display_catodo
   374  007EFE  22DA               	addwfc	fsr2h,f,c
   375  007F00  50DF               	movf	indf2,w,c
   376  007F02  6E8A               	movwf	138,c	;volatile
   377  007F04                     
   378                           ;main.c: 233:     LATD=display_anodo[decenas];
   379  007F04  0E0B               	movlw	low _display_anodo
   380  007F06  2415               	addwf	Ejm6_pulsadores_nivelBits@decenas^0,w,c
   381  007F08  6ED9               	movwf	fsr2l,c
   382  007F0A  6ADA               	clrf	fsr2h,c
   383  007F0C  0E00               	movlw	high _display_anodo
   384  007F0E  22DA               	addwfc	fsr2h,f,c
   385  007F10  50DF               	movf	indf2,w,c
   386  007F12  6E8C               	movwf	140,c	;volatile
   387  007F14  0012               	return		;funcret
   388  007F16                     __end_of_Ejm6_pulsadores_nivelBits:
   389                           	callstack 0
   390                           
   391 ;; *************** function _Ejm5_pulsadores *****************
   392 ;; Defined at:
   393 ;;		line 159 in file "main.c"
   394 ;; Parameters:    Size  Location     Type
   395 ;;		None
   396 ;; Auto vars:     Size  Location     Type
   397 ;;  unidades        1    1[COMRAM] unsigned char 
   398 ;;  decenas         1    0[COMRAM] unsigned char 
   399 ;; Return value:  Size  Location     Type
   400 ;;                  1    wreg      void 
   401 ;; Registers used:
   402 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   403 ;; Tracked objects:
   404 ;;		On entry : 0/0
   405 ;;		On exit  : 0/0
   406 ;;		Unchanged: 0/0
   407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   408 ;;      Params:         0       0       0       0       0       0       0       0       0
   409 ;;      Locals:         2       0       0       0       0       0       0       0       0
   410 ;;      Temps:          0       0       0       0       0       0       0       0       0
   411 ;;      Totals:         2       0       0       0       0       0       0       0       0
   412 ;;Total ram usage:        2 bytes
   413 ;; Hardware stack levels used: 1
   414 ;; This function calls:
   415 ;;		Nothing
   416 ;; This function is called by:
   417 ;;		_main
   418 ;; This function uses a non-reentrant model
   419 ;;
   420                           
   421                           	psect	text2
   422  007F16                     __ptext2:
   423                           	callstack 0
   424  007F16                     _Ejm5_pulsadores:
   425                           	callstack 30
   426  007F16                     
   427                           ;main.c: 161:     uint8_t unidades=0, decenas=0;
   428  007F16  0E00               	movlw	0
   429  007F18  6E16               	movwf	Ejm5_pulsadores@unidades^0,c
   430  007F1A  0E00               	movlw	0
   431  007F1C  6E15               	movwf	Ejm5_pulsadores@decenas^0,c
   432  007F1E                     
   433                           ;main.c: 163:     LATB=display_catodo[0];
   434  007F1E  C001  FF8A         	movff	_display_catodo,3978	;volatile
   435  007F22                     
   436                           ;main.c: 164:     LATD=display_anodo[0];
   437  007F22  C00B  FF8C         	movff	_display_anodo,3980	;volatile
   438  007F26                     l795:
   439                           
   440                           ;main.c: 168:         if(PORTAbits.RA0==0)
   441  007F26  B080               	btfsc	128,0,c	;volatile
   442  007F28  EF98  F03F         	goto	u11
   443  007F2C  EF9A  F03F         	goto	u10
   444  007F30                     u11:
   445  007F30  EFB9  F03F         	goto	l811
   446  007F34                     u10:
   447  007F34                     l73:
   448  007F34  A080               	btfss	128,0,c	;volatile
   449  007F36  EF9F  F03F         	goto	u21
   450  007F3A  EFA1  F03F         	goto	u20
   451  007F3E                     u21:
   452  007F3E  EF9A  F03F         	goto	l73
   453  007F42                     u20:
   454  007F42                     
   455                           ;main.c: 171:             unidades++;
   456  007F42  2A16               	incf	Ejm5_pulsadores@unidades^0,f,c
   457  007F44                     
   458                           ;main.c: 172:             if(unidades==10)
   459  007F44  0E0A               	movlw	10
   460  007F46  1816               	xorwf	Ejm5_pulsadores@unidades^0,w,c
   461  007F48  A4D8               	btfss	status,2,c
   462  007F4A  EFA9  F03F         	goto	u31
   463  007F4E  EFAB  F03F         	goto	u30
   464  007F52                     u31:
   465  007F52  EFB9  F03F         	goto	l811
   466  007F56                     u30:
   467  007F56                     
   468                           ;main.c: 173:             {;main.c: 174:                 unidades=0;
   469  007F56  0E00               	movlw	0
   470  007F58  6E16               	movwf	Ejm5_pulsadores@unidades^0,c
   471  007F5A                     
   472                           ;main.c: 175:                 decenas++;
   473  007F5A  2A15               	incf	Ejm5_pulsadores@decenas^0,f,c
   474  007F5C                     
   475                           ;main.c: 176:                 if(decenas==10)decenas=0;
   476  007F5C  0E0A               	movlw	10
   477  007F5E  1815               	xorwf	Ejm5_pulsadores@decenas^0,w,c
   478  007F60  A4D8               	btfss	status,2,c
   479  007F62  EFB5  F03F         	goto	u41
   480  007F66  EFB7  F03F         	goto	u40
   481  007F6A                     u41:
   482  007F6A  EFB9  F03F         	goto	l811
   483  007F6E                     u40:
   484  007F6E  0E00               	movlw	0
   485  007F70  6E15               	movwf	Ejm5_pulsadores@decenas^0,c
   486  007F72                     l811:
   487                           
   488                           ;main.c: 181:         if(PORTAbits.RA1==1)
   489  007F72  A280               	btfss	128,1,c	;volatile
   490  007F74  EFBE  F03F         	goto	u51
   491  007F78  EFC0  F03F         	goto	u50
   492  007F7C                     u51:
   493  007F7C  EFED  F03F         	goto	l829
   494  007F80                     u50:
   495  007F80                     l79:
   496  007F80  B280               	btfsc	128,1,c	;volatile
   497  007F82  EFC5  F03F         	goto	u61
   498  007F86  EFC7  F03F         	goto	u60
   499  007F8A                     u61:
   500  007F8A  EFC0  F03F         	goto	l79
   501  007F8E                     u60:
   502  007F8E                     
   503                           ;main.c: 184:             unidades--;
   504  007F8E  0616               	decf	Ejm5_pulsadores@unidades^0,f,c
   505  007F90                     
   506                           ;main.c: 185:             if((decenas==0) && (unidades==255))
   507  007F90  5015               	movf	Ejm5_pulsadores@decenas^0,w,c
   508  007F92  A4D8               	btfss	status,2,c
   509  007F94  EFCE  F03F         	goto	u71
   510  007F98  EFD0  F03F         	goto	u70
   511  007F9C                     u71:
   512  007F9C  EFDA  F03F         	goto	l82
   513  007FA0                     u70:
   514  007FA0  2816               	incf	Ejm5_pulsadores@unidades^0,w,c
   515  007FA2  A4D8               	btfss	status,2,c
   516  007FA4  EFD6  F03F         	goto	u81
   517  007FA8  EFD8  F03F         	goto	u80
   518  007FAC                     u81:
   519  007FAC  EFDA  F03F         	goto	l82
   520  007FB0                     u80:
   521  007FB0                     
   522                           ;main.c: 186:             {;main.c: 187:                 unidades=0;
   523  007FB0  0E00               	movlw	0
   524  007FB2  6E16               	movwf	Ejm5_pulsadores@unidades^0,c
   525  007FB4                     l82:
   526                           
   527                           ;main.c: 189:             if((decenas>0) && (unidades==255))
   528  007FB4  5015               	movf	Ejm5_pulsadores@decenas^0,w,c
   529  007FB6  B4D8               	btfsc	status,2,c
   530  007FB8  EFE0  F03F         	goto	u91
   531  007FBC  EFE2  F03F         	goto	u90
   532  007FC0                     u91:
   533  007FC0  EFED  F03F         	goto	l829
   534  007FC4                     u90:
   535  007FC4  2816               	incf	Ejm5_pulsadores@unidades^0,w,c
   536  007FC6  A4D8               	btfss	status,2,c
   537  007FC8  EFE8  F03F         	goto	u101
   538  007FCC  EFEA  F03F         	goto	u100
   539  007FD0                     u101:
   540  007FD0  EFED  F03F         	goto	l829
   541  007FD4                     u100:
   542  007FD4                     
   543                           ;main.c: 190:             {;main.c: 191:                 unidades=9;
   544  007FD4  0E09               	movlw	9
   545  007FD6  6E16               	movwf	Ejm5_pulsadores@unidades^0,c
   546  007FD8                     
   547                           ;main.c: 192:                 decenas--;
   548  007FD8  0615               	decf	Ejm5_pulsadores@decenas^0,f,c
   549  007FDA                     l829:
   550                           
   551                           ;main.c: 195:         LATB=display_catodo[unidades];
   552  007FDA  0E01               	movlw	low _display_catodo
   553  007FDC  2416               	addwf	Ejm5_pulsadores@unidades^0,w,c
   554  007FDE  6ED9               	movwf	fsr2l,c
   555  007FE0  6ADA               	clrf	fsr2h,c
   556  007FE2  0E00               	movlw	high _display_catodo
   557  007FE4  22DA               	addwfc	fsr2h,f,c
   558  007FE6  50DF               	movf	indf2,w,c
   559  007FE8  6E8A               	movwf	138,c	;volatile
   560  007FEA                     
   561                           ;main.c: 196:         LATD=display_anodo[decenas];
   562  007FEA  0E0B               	movlw	low _display_anodo
   563  007FEC  2415               	addwf	Ejm5_pulsadores@decenas^0,w,c
   564  007FEE  6ED9               	movwf	fsr2l,c
   565  007FF0  6ADA               	clrf	fsr2h,c
   566  007FF2  0E00               	movlw	high _display_anodo
   567  007FF4  22DA               	addwfc	fsr2h,f,c
   568  007FF6  50DF               	movf	indf2,w,c
   569  007FF8  6E8C               	movwf	140,c	;volatile
   570  007FFA  EF93  F03F         	goto	l795
   571  007FFE  0012               	return		;funcret
   572  008000                     __end_of_Ejm5_pulsadores:
   573                           	callstack 0
   574                           
   575 ;; *************** function _Config_Port *****************
   576 ;; Defined at:
   577 ;;		line 48 in file "main.c"
   578 ;; Parameters:    Size  Location     Type
   579 ;;		None
   580 ;; Auto vars:     Size  Location     Type
   581 ;;		None
   582 ;; Return value:  Size  Location     Type
   583 ;;                  1    wreg      void 
   584 ;; Registers used:
   585 ;;		wreg, status,2
   586 ;; Tracked objects:
   587 ;;		On entry : 0/0
   588 ;;		On exit  : 0/0
   589 ;;		Unchanged: 0/0
   590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   591 ;;      Params:         0       0       0       0       0       0       0       0       0
   592 ;;      Locals:         0       0       0       0       0       0       0       0       0
   593 ;;      Temps:          0       0       0       0       0       0       0       0       0
   594 ;;      Totals:         0       0       0       0       0       0       0       0       0
   595 ;;Total ram usage:        0 bytes
   596 ;; Hardware stack levels used: 1
   597 ;; This function calls:
   598 ;;		Nothing
   599 ;; This function is called by:
   600 ;;		_main
   601 ;; This function uses a non-reentrant model
   602 ;;
   603                           
   604                           	psect	text3
   605  007E10                     __ptext3:
   606                           	callstack 0
   607  007E10                     _Config_Port:
   608                           	callstack 30
   609  007E10                     
   610                           ;main.c: 50:     LATD= 0b00000000;
   611  007E10  0E00               	movlw	0
   612  007E12  6E8C               	movwf	140,c	;volatile
   613                           
   614                           ;main.c: 51:     LATB= 0b00000000;
   615  007E14  0E00               	movlw	0
   616  007E16  6E8A               	movwf	138,c	;volatile
   617                           
   618                           ;main.c: 54:     SLRCON=0b00000000;
   619  007E18  0E00               	movlw	0
   620  007E1A  6E7A               	movwf	122,c	;volatile
   621                           
   622                           ;main.c: 57:     ANSELD=0b00000000;
   623  007E1C  0E00               	movlw	0
   624  007E1E  010F               	movlb	15	; () banked
   625  007E20  6F5E               	movwf	94,b	;volatile
   626                           
   627                           ;main.c: 58:     ANSELB=0b00000000;
   628  007E22  0E00               	movlw	0
   629  007E24  6F5C               	movwf	92,b	;volatile
   630  007E26                     
   631                           ; BSR set to: 15
   632                           ;main.c: 60:     ANSELAbits.ANSA0=0;
   633  007E26  915B               	bcf	91,0,b	;volatile
   634  007E28                     
   635                           ; BSR set to: 15
   636                           ;main.c: 61:     ANSELAbits.ANSA1=0;
   637  007E28  935B               	bcf	91,1,b	;volatile
   638                           
   639                           ;main.c: 64:     TRISD=0b00000000;
   640  007E2A  0E00               	movlw	0
   641  007E2C  6E95               	movwf	149,c	;volatile
   642                           
   643                           ;main.c: 65:     TRISB=0b00000000;
   644  007E2E  0E00               	movlw	0
   645  007E30  6E93               	movwf	147,c	;volatile
   646  007E32                     
   647                           ; BSR set to: 15
   648                           ;main.c: 67:     TRISAbits.TRISA0=1;
   649  007E32  8092               	bsf	146,0,c	;volatile
   650  007E34                     
   651                           ; BSR set to: 15
   652                           ;main.c: 68:     TRISAbits.TRISA1=1;
   653  007E34  8292               	bsf	146,1,c	;volatile
   654  007E36                     
   655                           ; BSR set to: 15
   656  007E36  0012               	return		;funcret
   657  007E38                     __end_of_Config_Port:
   658                           	callstack 0
   659                           
   660 ;; *************** function _Config_Clock *****************
   661 ;; Defined at:
   662 ;;		line 43 in file "main.c"
   663 ;; Parameters:    Size  Location     Type
   664 ;;		None
   665 ;; Auto vars:     Size  Location     Type
   666 ;;		None
   667 ;; Return value:  Size  Location     Type
   668 ;;                  1    wreg      void 
   669 ;; Registers used:
   670 ;;		wreg, status,2
   671 ;; Tracked objects:
   672 ;;		On entry : 0/0
   673 ;;		On exit  : 0/0
   674 ;;		Unchanged: 0/0
   675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   676 ;;      Params:         0       0       0       0       0       0       0       0       0
   677 ;;      Locals:         0       0       0       0       0       0       0       0       0
   678 ;;      Temps:          0       0       0       0       0       0       0       0       0
   679 ;;      Totals:         0       0       0       0       0       0       0       0       0
   680 ;;Total ram usage:        0 bytes
   681 ;; Hardware stack levels used: 1
   682 ;; This function calls:
   683 ;;		Nothing
   684 ;; This function is called by:
   685 ;;		_main
   686 ;; This function uses a non-reentrant model
   687 ;;
   688                           
   689                           	psect	text4
   690  007DB0                     __ptext4:
   691                           	callstack 0
   692  007DB0                     _Config_Clock:
   693                           	callstack 30
   694  007DB0                     
   695                           ;main.c: 44:     OSCCONbits.IRCF=0b111;
   696  007DB0  0E70               	movlw	112
   697  007DB2  12D3               	iorwf	211,f,c	;volatile
   698                           
   699                           ;main.c: 45:     OSCCONbits.SCS=0b10;
   700  007DB4  50D3               	movf	211,w,c	;volatile
   701  007DB6  0BFC               	andlw	-4
   702  007DB8  0902               	iorlw	2
   703  007DBA  6ED3               	movwf	211,c	;volatile
   704  007DBC  0012               	return		;funcret
   705  007DBE                     __end_of_Config_Clock:
   706                           	callstack 0
   707  0000                     
   708                           	psect	rparam
   709  0000                     
   710                           	psect	idloc
   711                           
   712                           ;Config register IDLOC0 @ 0x200000
   713                           ;	unspecified, using default values
   714  200000                     	org	2097152
   715  200000  FF                 	db	255
   716                           
   717                           ;Config register IDLOC1 @ 0x200001
   718                           ;	unspecified, using default values
   719  200001                     	org	2097153
   720  200001  FF                 	db	255
   721                           
   722                           ;Config register IDLOC2 @ 0x200002
   723                           ;	unspecified, using default values
   724  200002                     	org	2097154
   725  200002  FF                 	db	255
   726                           
   727                           ;Config register IDLOC3 @ 0x200003
   728                           ;	unspecified, using default values
   729  200003                     	org	2097155
   730  200003  FF                 	db	255
   731                           
   732                           ;Config register IDLOC4 @ 0x200004
   733                           ;	unspecified, using default values
   734  200004                     	org	2097156
   735  200004  FF                 	db	255
   736                           
   737                           ;Config register IDLOC5 @ 0x200005
   738                           ;	unspecified, using default values
   739  200005                     	org	2097157
   740  200005  FF                 	db	255
   741                           
   742                           ;Config register IDLOC6 @ 0x200006
   743                           ;	unspecified, using default values
   744  200006                     	org	2097158
   745  200006  FF                 	db	255
   746                           
   747                           ;Config register IDLOC7 @ 0x200007
   748                           ;	unspecified, using default values
   749  200007                     	org	2097159
   750  200007  FF                 	db	255
   751                           
   752                           	psect	config
   753                           
   754                           ;Config register CONFIG1L @ 0x300000
   755                           ;	PLL Selection
   756                           ;	PLLSEL = PLL4X, 4x clock multiplier
   757                           ;	PLL Enable Configuration bit
   758                           ;	CFGPLLEN = OFF, PLL Disabled (firmware controlled)
   759                           ;	CPU System Clock Postscaler
   760                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
   761                           ;	Low Speed USB mode with 48 MHz system clock
   762                           ;	LS48MHZ = SYS24X4, System clock at 24 MHz, USB clock divider is set to 4
   763  300000                     	org	3145728
   764  300000  00                 	db	0
   765                           
   766                           ;Config register CONFIG1H @ 0x300001
   767                           ;	Oscillator Selection
   768                           ;	FOSC = INTOSCIO, Internal oscillator
   769                           ;	Primary Oscillator Shutdown
   770                           ;	PCLKEN = ON, Primary oscillator enabled
   771                           ;	Fail-Safe Clock Monitor
   772                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   773                           ;	Internal/External Oscillator Switchover
   774                           ;	IESO = OFF, Oscillator Switchover mode disabled
   775  300001                     	org	3145729
   776  300001  28                 	db	40
   777                           
   778                           ;Config register CONFIG2L @ 0x300002
   779                           ;	Power-up Timer Enable
   780                           ;	nPWRTEN = ON, Power up timer enabled
   781                           ;	Brown-out Reset Enable
   782                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
   783                           ;	Brown-out Reset Voltage
   784                           ;	BORV = 190, BOR set to 1.9V nominal
   785                           ;	Low-Power Brown-out Reset
   786                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
   787  300002                     	org	3145730
   788  300002  5E                 	db	94
   789                           
   790                           ;Config register CONFIG2H @ 0x300003
   791                           ;	Watchdog Timer Enable bits
   792                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
   793                           ;	Watchdog Timer Postscaler
   794                           ;	WDTPS = 32768, 1:32768
   795  300003                     	org	3145731
   796  300003  3C                 	db	60
   797                           
   798                           ; Padding undefined space
   799  300004                     	org	3145732
   800  300004  FF                 	db	255
   801                           
   802                           ;Config register CONFIG3H @ 0x300005
   803                           ;	CCP2 MUX bit
   804                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
   805                           ;	PORTB A/D Enable bit
   806                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
   807                           ;	Timer3 Clock Input MUX bit
   808                           ;	T3CMX = RC0, T3CKI function is on RC0
   809                           ;	SDO Output MUX bit
   810                           ;	SDOMX = RB3, SDO function is on RB3
   811                           ;	Master Clear Reset Pin Enable
   812                           ;	MCLRE = OFF, RE3 input pin enabled; external MCLR disabled
   813  300005                     	org	3145733
   814  300005  53                 	db	83
   815                           
   816                           ;Config register CONFIG4L @ 0x300006
   817                           ;	Stack Full/Underflow Reset
   818                           ;	STVREN = ON, Stack full/underflow will cause Reset
   819                           ;	Single-Supply ICSP Enable bit
   820                           ;	LVP = OFF, Single-Supply ICSP disabled
   821                           ;	Dedicated In-Circuit Debug/Programming Port Enable
   822                           ;	ICPRT = OFF, ICPORT disabled
   823                           ;	Extended Instruction Set Enable bit
   824                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
   825                           ;	Background Debugger Enable bit
   826                           ;	DEBUG = 0x1, unprogrammed default
   827  300006                     	org	3145734
   828  300006  81                 	db	129
   829                           
   830                           ; Padding undefined space
   831  300007                     	org	3145735
   832  300007  FF                 	db	255
   833                           
   834                           ;Config register CONFIG5L @ 0x300008
   835                           ;	Block 0 Code Protect
   836                           ;	CP0 = OFF, Block 0 is not code-protected
   837                           ;	Block 1 Code Protect
   838                           ;	CP1 = OFF, Block 1 is not code-protected
   839                           ;	Block 2 Code Protect
   840                           ;	CP2 = OFF, Block 2 is not code-protected
   841                           ;	Block 3 Code Protect
   842                           ;	CP3 = OFF, Block 3 is not code-protected
   843  300008                     	org	3145736
   844  300008  0F                 	db	15
   845                           
   846                           ;Config register CONFIG5H @ 0x300009
   847                           ;	Boot Block Code Protect
   848                           ;	CPB = OFF, Boot block is not code-protected
   849                           ;	Data EEPROM Code Protect
   850                           ;	CPD = OFF, Data EEPROM is not code-protected
   851  300009                     	org	3145737
   852  300009  C0                 	db	192
   853                           
   854                           ;Config register CONFIG6L @ 0x30000A
   855                           ;	Block 0 Write Protect
   856                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
   857                           ;	Block 1 Write Protect
   858                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
   859                           ;	Block 2 Write Protect
   860                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
   861                           ;	Block 3 Write Protect
   862                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
   863  30000A                     	org	3145738
   864  30000A  0F                 	db	15
   865                           
   866                           ;Config register CONFIG6H @ 0x30000B
   867                           ;	Configuration Registers Write Protect
   868                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   869                           ;	Boot Block Write Protect
   870                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
   871                           ;	Data EEPROM Write Protect
   872                           ;	WRTD = OFF, Data EEPROM is not write-protected
   873  30000B                     	org	3145739
   874  30000B  E0                 	db	224
   875                           
   876                           ;Config register CONFIG7L @ 0x30000C
   877                           ;	Block 0 Table Read Protect
   878                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
   879                           ;	Block 1 Table Read Protect
   880                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
   881                           ;	Block 2 Table Read Protect
   882                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
   883                           ;	Block 3 Table Read Protect
   884                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
   885  30000C                     	org	3145740
   886  30000C  0F                 	db	15
   887                           
   888                           ;Config register CONFIG7H @ 0x30000D
   889                           ;	Boot Block Table Read Protect
   890                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
   891  30000D                     	org	3145741
   892  30000D  40                 	db	64
   893                           tosu	equ	0xFFF
   894                           tosh	equ	0xFFE
   895                           tosl	equ	0xFFD
   896                           stkptr	equ	0xFFC
   897                           pclatu	equ	0xFFB
   898                           pclath	equ	0xFFA
   899                           pcl	equ	0xFF9
   900                           tblptru	equ	0xFF8
   901                           tblptrh	equ	0xFF7
   902                           tblptrl	equ	0xFF6
   903                           tablat	equ	0xFF5
   904                           prodh	equ	0xFF4
   905                           prodl	equ	0xFF3
   906                           indf0	equ	0xFEF
   907                           postinc0	equ	0xFEE
   908                           postdec0	equ	0xFED
   909                           preinc0	equ	0xFEC
   910                           plusw0	equ	0xFEB
   911                           fsr0h	equ	0xFEA
   912                           fsr0l	equ	0xFE9
   913                           wreg	equ	0xFE8
   914                           indf1	equ	0xFE7
   915                           postinc1	equ	0xFE6
   916                           postdec1	equ	0xFE5
   917                           preinc1	equ	0xFE4
   918                           plusw1	equ	0xFE3
   919                           fsr1h	equ	0xFE2
   920                           fsr1l	equ	0xFE1
   921                           bsr	equ	0xFE0
   922                           indf2	equ	0xFDF
   923                           postinc2	equ	0xFDE
   924                           postdec2	equ	0xFDD
   925                           preinc2	equ	0xFDC
   926                           plusw2	equ	0xFDB
   927                           fsr2h	equ	0xFDA
   928                           fsr2l	equ	0xFD9
   929                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      2      22
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_Ejm5_pulsadores
    _main->_Ejm6_pulsadores_nivelBits

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     240
                       _Config_Clock
                        _Config_Port
                    _Ejm5_pulsadores
          _Ejm6_pulsadores_nivelBits
 ---------------------------------------------------------------------------------
 (1) _Ejm6_pulsadores_nivelBits                            2     2      0     120
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Ejm5_pulsadores                                      2     2      0     120
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Config_Port                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Config_Clock                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Config_Clock
   _Config_Port
   _Ejm5_pulsadores
   _Ejm6_pulsadores_nivelBits

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      31        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      2      16       1       23.2%
BITBIGSFRlhh        3D      0       0      21        0.0%
BITBIGSFRh          2C      0       0      20        0.0%
BITBIGSFRllllh      1B      0       0      27        0.0%
BITBIGSFRlllhh       9      0       0      25        0.0%
BITBIGSFRllllll      8      0       0      29        0.0%
BITBIGSFRlllhl       5      0       0      26        0.0%
BITBIGSFRlhll        5      0       0      23        0.0%
BITBIGSFRlhlh        1      0       0      22        0.0%
BITBIGSFRlllllh      1      0       0      28        0.0%
BITBIGSFRllh         1      0       0      24        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      16      30        0.0%
DATA                 0      0      16       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Jun 16 19:35:30 2022

                               l52 7E36                                 l49 7DBC  
                               l73 7F34                                 l82 7FB4  
                               l90 7E4E                                 l79 7F80  
                               l96 7E9A                                 l99 7ECE  
                               u10 7F34                                 u11 7F30  
                               u20 7F42                                 u21 7F3E  
                               u30 7F56                                 u31 7F52  
                               u40 7F6E                                 u41 7F6A  
                               u50 7F80                                 u51 7F7C  
                               u60 7F8E                                 u61 7F8A  
                               u70 7FA0                                 u71 7F9C  
                               u80 7FB0                                 u81 7FAC  
                               u90 7FC4                                 u91 7FC0  
                              l101 7F14                                l801 7F44  
                              l803 7F56                                l811 7F72  
                              l821 7FB0                                l805 7F5A  
                              l831 7FEA                                l823 7FC4  
                              l815 7F8E                                l807 7F5C  
                              l825 7FD4                                l817 7F90  
                              l809 7F6E                                l841 7E5E  
                              l833 7E38                                l827 7FD8  
                              l819 7FA0                                l843 7E70  
                              l851 7E8C                                l835 7E40  
                              l781 7E26                                l829 7FDA  
                              l861 7ECA                                l845 7E74  
                              l783 7E28                                l791 7F1E  
                              l871 7F04                                l863 7EDE  
                              l855 7EA8                                l847 7E76  
                              l839 7E5C                                l777 7DB0  
                              l785 7E32                                l793 7F22  
                              l865 7EEE                                l857 7EAA  
                              l849 7E88                                l873 7DD2  
                              l787 7E34                                l779 7E10  
                              l795 7F26                                l867 7EF2  
                              l859 7EBA                                l875 7DDA  
                              l789 7F16                                l869 7EF4  
                              l877 7DDE                                l799 7F42  
                              u100 7FD4                                u101 7FD0  
                              u110 7E4E                                u111 7E4A  
                              u200 7EEE                                u120 7E5C  
                              u201 7EEA                                u121 7E58  
                              u130 7E70                                u131 7E6C  
                              u140 7E88                                u141 7E84  
                              u150 7E9A                                u151 7E96  
                              u160 7EA8                                u161 7EA4  
                              u170 7EBA                                u171 7EB6  
                              u180 7ECA                                u181 7EC6  
                              u190 7EDE                                u191 7EDA  
                             _LATB 000F8A                               _LATD 000F8C  
                             _main 7DD2                               indf2 000FDF  
                             fsr1l 000FE1                               fsr2l 000FD9  
                             start 0000                       ___param_bank 000000  
              __end_of_Config_Port 7E38                              ?_main 0015  
                            _PORTA 000F80                              _TRISB 000F93  
                            _TRISD 000F95                              tablat 000FF5  
      ??_Ejm6_pulsadores_nivelBits 0015                              status 000FD8  
                  __initialization 7DEA               __end_of_Config_Clock 7DBE  
                     __end_of_main 7DEA                             ??_main 0017  
                    __activetblptr 000000                             _ANSELB 000F5C  
                           _ANSELD 000F5E                             _SLRCON 000F7A  
                  _Ejm5_pulsadores 7F16                        _Config_Port 7E10  
        _Ejm6_pulsadores_nivelBits 7E38                             isa$std 000001  
                     __pdataCOMRAM 0001                             tblptrh 000FF7  
                           tblptrl 000FF6                             tblptru 000FF8  
                       __accesstop 0060            __end_of__initialization 7E0A  
                    ___rparam_used 000001                     __pcstackCOMRAM 0015  
          __end_of_Ejm5_pulsadores 8000                       _Config_Clock 7DB0  
                          __Hparam 0000                            __Lparam 0000  
                          __pcinit 7DEA                            __ramtop 0800  
                          __ptext0 7DD2                            __ptext1 7E38  
                          __ptext2 7F16                            __ptext3 7E10  
                          __ptext4 7DB0            Ejm5_pulsadores@unidades 0016  
                 ?_Ejm5_pulsadores 0015               end_of_initialization 7E0A  
                     ?_Config_Port 0015                            postdec1 000FE5  
                          postinc0 000FEE                          _PORTAbits 000F80  
                        _TRISAbits 000F92                      __pidataCOMRAM 7DBE  
              start_initialization 7DEA  Ejm6_pulsadores_nivelBits@unidades 0016  
           Ejm5_pulsadores@decenas 0015                          copy_data0 7DFE  
                         __Hrparam 0000                           __Lrparam 0000  
                       _ANSELAbits 000F5B         ?_Ejm6_pulsadores_nivelBits 0015  
                         isa$xinst 000000                      ?_Config_Clock 0015  
__end_of_Ejm6_pulsadores_nivelBits 7F16                         _OSCCONbits 000FD3  
                ??_Ejm5_pulsadores 0015                     _display_catodo 0001  
 Ejm6_pulsadores_nivelBits@decenas 0015                     ??_Config_Clock 0015  
                    _display_anodo 000B                      ??_Config_Port 0015  
