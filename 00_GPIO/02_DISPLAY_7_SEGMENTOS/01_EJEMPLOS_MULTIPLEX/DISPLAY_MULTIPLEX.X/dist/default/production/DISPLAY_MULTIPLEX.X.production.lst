

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri Jun 17 20:56:07 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    20  0000                     
    21                           ; Version 2.35
    22                           ; Generated 05/05/2021 GMT
    23                           ; 
    24                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F45K50 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     
    57                           	psect	idataCOMRAM
    58  007D7A                     __pidataCOMRAM:
    59                           	callstack 0
    60                           
    61                           ;initializer for _display_catodo
    62  007D7A  3F                 	db	63
    63  007D7B  06                 	db	6
    64  007D7C  5B                 	db	91
    65  007D7D  4F                 	db	79
    66  007D7E  66                 	db	102
    67  007D7F  6D                 	db	109
    68  007D80  7D                 	db	125
    69  007D81  07                 	db	7
    70  007D82  7F                 	db	127
    71  007D83  67                 	db	103
    72                           
    73                           ;initializer for _display_anodo
    74  007D84  C0                 	db	192
    75  007D85  F9                 	db	249
    76  007D86  A4                 	db	164
    77  007D87  B0                 	db	176
    78  007D88  99                 	db	153
    79  007D89  92                 	db	146
    80  007D8A  82                 	db	130
    81  007D8B  F8                 	db	248
    82  007D8C  80                 	db	128
    83  007D8D  90                 	db	144
    84                           
    85                           	psect	nvCOMRAM
    86  00001F                     __pnvCOMRAM:
    87                           	callstack 0
    88  00001F                     _decenas:
    89                           	callstack 0
    90  00001F                     	ds	1
    91  000020                     _unidades:
    92                           	callstack 0
    93  000020                     	ds	1
    94  0000                     _ANSELAbits	set	3931
    95  0000                     _ANSELD	set	3934
    96  0000                     _SLRCON	set	3962
    97  0000                     _LATD	set	3980
    98  0000                     _TRISAbits	set	3986
    99  0000                     _TRISD	set	3989
   100  0000                     _OSCCONbits	set	4051
   101  0000                     _LATEbits	set	3981
   102  0000                     _ANSELEbits	set	3935
   103  0000                     _TRISEbits	set	3990
   104                           
   105                           ; #config settings
   106                           
   107                           	psect	cinit
   108  007DB2                     __pcinit:
   109                           	callstack 0
   110  007DB2                     start_initialization:
   111                           	callstack 0
   112  007DB2                     __initialization:
   113                           	callstack 0
   114                           
   115                           ; Initialize objects allocated to COMRAM (20 bytes)
   116                           ; load TBLPTR registers with __pidataCOMRAM
   117  007DB2  0E7A               	movlw	low __pidataCOMRAM
   118  007DB4  6EF6               	movwf	tblptrl,c
   119  007DB6  0E7D               	movlw	high __pidataCOMRAM
   120  007DB8  6EF7               	movwf	tblptrh,c
   121  007DBA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   122  007DBC  6EF8               	movwf	tblptru,c
   123  007DBE  EE00  F001         	lfsr	0,__pdataCOMRAM
   124  007DC2  EE10 F014          	lfsr	1,20
   125  007DC6                     copy_data0:
   126  007DC6  0009               	tblrd		*+
   127  007DC8  CFF5 FFEE          	movff	tablat,postinc0
   128  007DCC  50E5               	movf	postdec1,w,c
   129  007DCE  50E1               	movf	fsr1l,w,c
   130  007DD0  E1FA               	bnz	copy_data0
   131                           
   132                           ; Clear objects allocated to COMRAM (1 bytes)
   133  007DD2  6A21               	clrf	__pbssCOMRAM& (0+255),c
   134  007DD4                     end_of_initialization:
   135                           	callstack 0
   136  007DD4                     __end_of__initialization:
   137                           	callstack 0
   138  007DD4  0100               	movlb	0
   139  007DD6  EF45  F03F         	goto	_main	;jump to C main() function
   140                           
   141                           	psect	bssCOMRAM
   142  000021                     __pbssCOMRAM:
   143                           	callstack 0
   144  000021                     _cuenta:
   145                           	callstack 0
   146  000021                     	ds	1
   147                           
   148                           	psect	dataCOMRAM
   149  000001                     __pdataCOMRAM:
   150                           	callstack 0
   151  000001                     _display_catodo:
   152                           	callstack 0
   153  000001                     	ds	10
   154  00000B                     _display_anodo:
   155                           	callstack 0
   156  00000B                     	ds	10
   157                           
   158                           	psect	cstackCOMRAM
   159  000015                     __pcstackCOMRAM:
   160                           	callstack 0
   161  000015                     ?___awdiv:
   162                           	callstack 0
   163  000015                     ?___awmod:
   164                           	callstack 0
   165  000015                     ___awdiv@dividend:
   166                           	callstack 0
   167  000015                     ___awmod@dividend:
   168                           	callstack 0
   169                           
   170                           ; 2 bytes @ 0x0
   171  000015                     	ds	2
   172  000017                     ___awdiv@divisor:
   173                           	callstack 0
   174  000017                     ___awmod@divisor:
   175                           	callstack 0
   176                           
   177                           ; 2 bytes @ 0x2
   178  000017                     	ds	2
   179  000019                     ___awdiv@counter:
   180                           	callstack 0
   181  000019                     ___awmod@counter:
   182                           	callstack 0
   183                           
   184                           ; 1 bytes @ 0x4
   185  000019                     	ds	1
   186  00001A                     ___awdiv@sign:
   187                           	callstack 0
   188  00001A                     ___awmod@sign:
   189                           	callstack 0
   190                           
   191                           ; 1 bytes @ 0x5
   192  00001A                     	ds	1
   193  00001B                     ___awdiv@quotient:
   194                           	callstack 0
   195                           
   196                           ; 2 bytes @ 0x6
   197  00001B                     	ds	2
   198  00001D                     ??_main:
   199                           
   200                           ; 1 bytes @ 0x8
   201  00001D                     	ds	1
   202  00001E                     main@i:
   203                           	callstack 0
   204                           
   205                           ; 1 bytes @ 0x9
   206  00001E                     	ds	1
   207                           
   208 ;;
   209 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   210 ;;
   211 ;; *************** function _main *****************
   212 ;; Defined at:
   213 ;;		line 28 in file "main.c"
   214 ;; Parameters:    Size  Location     Type
   215 ;;		None
   216 ;; Auto vars:     Size  Location     Type
   217 ;;  i               1    9[COMRAM] unsigned char 
   218 ;; Return value:  Size  Location     Type
   219 ;;                  1    wreg      void 
   220 ;; Registers used:
   221 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   222 ;; Tracked objects:
   223 ;;		On entry : 0/0
   224 ;;		On exit  : 0/0
   225 ;;		Unchanged: 0/0
   226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   227 ;;      Params:         0       0       0       0       0       0       0       0       0
   228 ;;      Locals:         1       0       0       0       0       0       0       0       0
   229 ;;      Temps:          1       0       0       0       0       0       0       0       0
   230 ;;      Totals:         2       0       0       0       0       0       0       0       0
   231 ;;Total ram usage:        2 bytes
   232 ;; Hardware stack levels required when called: 1
   233 ;; This function calls:
   234 ;;		_Config_Clock
   235 ;;		_Config_Port
   236 ;;		___awdiv
   237 ;;		___awmod
   238 ;; This function is called by:
   239 ;;		Startup code after reset
   240 ;; This function uses a non-reentrant model
   241 ;;
   242                           
   243                           	psect	text0
   244  007E8A                     __ptext0:
   245                           	callstack 0
   246  007E8A                     _main:
   247                           	callstack 30
   248  007E8A                     
   249                           ;main.c: 29:     Config_Clock();
   250  007E8A  ECB6  F03E         	call	_Config_Clock	;wreg free
   251                           
   252                           ;main.c: 30:     Config_Port();
   253  007E8E  ECC7  F03E         	call	_Config_Port	;wreg free
   254  007E92                     l961:
   255                           
   256                           ;main.c: 32:         unidades=cuenta%10;
   257  007E92  C021  F015         	movff	_cuenta,___awmod@dividend
   258  007E96  6A16               	clrf	(___awmod@dividend+1)^0,c
   259  007E98  0E00               	movlw	0
   260  007E9A  6E18               	movwf	(___awmod@divisor+1)^0,c
   261  007E9C  0E0A               	movlw	10
   262  007E9E  6E17               	movwf	___awmod@divisor^0,c
   263  007EA0  ECED  F03E         	call	___awmod	;wreg free
   264  007EA4  5015               	movf	?___awmod^0,w,c
   265  007EA6  6E20               	movwf	_unidades^0,c
   266  007EA8                     
   267                           ;main.c: 33:         decenas=cuenta/10;
   268  007EA8  C021  F015         	movff	_cuenta,___awdiv@dividend
   269  007EAC  6A16               	clrf	(___awdiv@dividend+1)^0,c
   270  007EAE  0E00               	movlw	0
   271  007EB0  6E18               	movwf	(___awdiv@divisor+1)^0,c
   272  007EB2  0E0A               	movlw	10
   273  007EB4  6E17               	movwf	___awdiv@divisor^0,c
   274  007EB6  EC9E  F03F         	call	___awdiv	;wreg free
   275  007EBA  5015               	movf	?___awdiv^0,w,c
   276  007EBC  6E1F               	movwf	_decenas^0,c
   277  007EBE                     
   278                           ;main.c: 34:         for(uint8_t i=0;i<250;i++){
   279  007EBE  0E00               	movlw	0
   280  007EC0  6E1E               	movwf	main@i^0,c
   281  007EC2                     l971:
   282                           
   283                           ;main.c: 36:             LATD=display_anodo[unidades];
   284  007EC2  0E0B               	movlw	low _display_anodo
   285  007EC4  2420               	addwf	_unidades^0,w,c
   286  007EC6  6ED9               	movwf	fsr2l,c
   287  007EC8  6ADA               	clrf	fsr2h,c
   288  007ECA  0E00               	movlw	high _display_anodo
   289  007ECC  22DA               	addwfc	fsr2h,f,c
   290  007ECE  50DF               	movf	indf2,w,c
   291  007ED0  6E8C               	movwf	140,c	;volatile
   292  007ED2                     
   293                           ;main.c: 37:             LATEbits.LATE1=0;
   294  007ED2  928D               	bcf	141,1,c	;volatile
   295  007ED4                     
   296                           ;main.c: 38:             _delay((unsigned long)((2)*(16000000UL/4000.0)));
   297  007ED4  0E0B               	movlw	11
   298  007ED6  6E1D               	movwf	??_main^0,c
   299  007ED8  0E62               	movlw	98
   300  007EDA                     u307:
   301  007EDA  2EE8               	decfsz	wreg,f,c
   302  007EDC  D7FE               	bra	u307
   303  007EDE  2E1D               	decfsz	??_main^0,f,c
   304  007EE0  D7FC               	bra	u307
   305  007EE2  D000               	nop2	
   306  007EE4                     
   307                           ;main.c: 39:             LATEbits.LATE1=1;
   308  007EE4  828D               	bsf	141,1,c	;volatile
   309  007EE6                     
   310                           ;main.c: 42:             LATD=display_anodo[decenas];
   311  007EE6  0E0B               	movlw	low _display_anodo
   312  007EE8  241F               	addwf	_decenas^0,w,c
   313  007EEA  6ED9               	movwf	fsr2l,c
   314  007EEC  6ADA               	clrf	fsr2h,c
   315  007EEE  0E00               	movlw	high _display_anodo
   316  007EF0  22DA               	addwfc	fsr2h,f,c
   317  007EF2  50DF               	movf	indf2,w,c
   318  007EF4  6E8C               	movwf	140,c	;volatile
   319  007EF6                     
   320                           ;main.c: 43:             LATEbits.LATE0=0;
   321  007EF6  908D               	bcf	141,0,c	;volatile
   322                           
   323                           ;main.c: 44:             _delay((unsigned long)((2)*(16000000UL/4000.0)));
   324  007EF8  0E0B               	movlw	11
   325  007EFA  6E1D               	movwf	??_main^0,c
   326  007EFC  0E62               	movlw	98
   327  007EFE                     u317:
   328  007EFE  2EE8               	decfsz	wreg,f,c
   329  007F00  D7FE               	bra	u317
   330  007F02  2E1D               	decfsz	??_main^0,f,c
   331  007F04  D7FC               	bra	u317
   332  007F06  D000               	nop2	
   333  007F08                     
   334                           ;main.c: 45:             LATEbits.LATE0=1;
   335  007F08  808D               	bsf	141,0,c	;volatile
   336  007F0A                     
   337                           ;main.c: 46:         }
   338  007F0A  2A1E               	incf	main@i^0,f,c
   339  007F0C  0EF9               	movlw	249
   340  007F0E  641E               	cpfsgt	main@i^0,c
   341  007F10  EF8C  F03F         	goto	u281
   342  007F14  EF8E  F03F         	goto	u280
   343  007F18                     u281:
   344  007F18  EF61  F03F         	goto	l971
   345  007F1C                     u280:
   346  007F1C                     
   347                           ;main.c: 47:         cuenta++;
   348  007F1C  2A21               	incf	_cuenta^0,f,c
   349  007F1E                     
   350                           ;main.c: 48:         if(cuenta==100)cuenta=0;
   351  007F1E  0E64               	movlw	100
   352  007F20  1821               	xorwf	_cuenta^0,w,c
   353  007F22  A4D8               	btfss	status,2,c
   354  007F24  EF96  F03F         	goto	u291
   355  007F28  EF98  F03F         	goto	u290
   356  007F2C                     u291:
   357  007F2C  EF49  F03F         	goto	l961
   358  007F30                     u290:
   359  007F30  0E00               	movlw	0
   360  007F32  6E21               	movwf	_cuenta^0,c
   361  007F34  EF49  F03F         	goto	l961
   362  007F38  EF00  F000         	goto	start
   363  007F3C                     __end_of_main:
   364                           	callstack 0
   365                           
   366 ;; *************** function ___awmod *****************
   367 ;; Defined at:
   368 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awmod.c"
   369 ;; Parameters:    Size  Location     Type
   370 ;;  dividend        2    0[COMRAM] int 
   371 ;;  divisor         2    2[COMRAM] int 
   372 ;; Auto vars:     Size  Location     Type
   373 ;;  sign            1    5[COMRAM] unsigned char 
   374 ;;  counter         1    4[COMRAM] unsigned char 
   375 ;; Return value:  Size  Location     Type
   376 ;;                  2    0[COMRAM] int 
   377 ;; Registers used:
   378 ;;		wreg, status,2, status,0
   379 ;; Tracked objects:
   380 ;;		On entry : 0/0
   381 ;;		On exit  : 0/0
   382 ;;		Unchanged: 0/0
   383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   384 ;;      Params:         4       0       0       0       0       0       0       0       0
   385 ;;      Locals:         2       0       0       0       0       0       0       0       0
   386 ;;      Temps:          0       0       0       0       0       0       0       0       0
   387 ;;      Totals:         6       0       0       0       0       0       0       0       0
   388 ;;Total ram usage:        6 bytes
   389 ;; Hardware stack levels used: 1
   390 ;; This function calls:
   391 ;;		Nothing
   392 ;; This function is called by:
   393 ;;		_main
   394 ;; This function uses a non-reentrant model
   395 ;;
   396                           
   397                           	psect	text1
   398  007DDA                     __ptext1:
   399                           	callstack 0
   400  007DDA                     ___awmod:
   401                           	callstack 30
   402  007DDA  0E00               	movlw	0
   403  007DDC  6E1A               	movwf	___awmod@sign^0,c
   404  007DDE  BE16               	btfsc	(___awmod@dividend+1)^0,7,c
   405  007DE0  EFF6  F03E         	goto	u220
   406  007DE4  EFF4  F03E         	goto	u221
   407  007DE8                     u221:
   408  007DE8  EFFC  F03E         	goto	l931
   409  007DEC                     u220:
   410  007DEC  6C15               	negf	___awmod@dividend^0,c
   411  007DEE  1E16               	comf	(___awmod@dividend+1)^0,f,c
   412  007DF0  B0D8               	btfsc	status,0,c
   413  007DF2  2A16               	incf	(___awmod@dividend+1)^0,f,c
   414  007DF4  0E01               	movlw	1
   415  007DF6  6E1A               	movwf	___awmod@sign^0,c
   416  007DF8                     l931:
   417  007DF8  BE18               	btfsc	(___awmod@divisor+1)^0,7,c
   418  007DFA  EF03  F03F         	goto	u230
   419  007DFE  EF01  F03F         	goto	u231
   420  007E02                     u231:
   421  007E02  EF07  F03F         	goto	l935
   422  007E06                     u230:
   423  007E06  6C17               	negf	___awmod@divisor^0,c
   424  007E08  1E18               	comf	(___awmod@divisor+1)^0,f,c
   425  007E0A  B0D8               	btfsc	status,0,c
   426  007E0C  2A18               	incf	(___awmod@divisor+1)^0,f,c
   427  007E0E                     l935:
   428  007E0E  5017               	movf	___awmod@divisor^0,w,c
   429  007E10  1018               	iorwf	(___awmod@divisor+1)^0,w,c
   430  007E12  B4D8               	btfsc	status,2,c
   431  007E14  EF0E  F03F         	goto	u241
   432  007E18  EF10  F03F         	goto	u240
   433  007E1C                     u241:
   434  007E1C  EF34  F03F         	goto	l951
   435  007E20                     u240:
   436  007E20  0E01               	movlw	1
   437  007E22  6E19               	movwf	___awmod@counter^0,c
   438  007E24  EF18  F03F         	goto	l941
   439  007E28                     l939:
   440  007E28  90D8               	bcf	status,0,c
   441  007E2A  3617               	rlcf	___awmod@divisor^0,f,c
   442  007E2C  3618               	rlcf	(___awmod@divisor+1)^0,f,c
   443  007E2E  2A19               	incf	___awmod@counter^0,f,c
   444  007E30                     l941:
   445  007E30  AE18               	btfss	(___awmod@divisor+1)^0,7,c
   446  007E32  EF1D  F03F         	goto	u251
   447  007E36  EF1F  F03F         	goto	u250
   448  007E3A                     u251:
   449  007E3A  EF14  F03F         	goto	l939
   450  007E3E                     u250:
   451  007E3E                     l943:
   452  007E3E  5017               	movf	___awmod@divisor^0,w,c
   453  007E40  5C15               	subwf	___awmod@dividend^0,w,c
   454  007E42  5018               	movf	(___awmod@divisor+1)^0,w,c
   455  007E44  5816               	subwfb	(___awmod@dividend+1)^0,w,c
   456  007E46  A0D8               	btfss	status,0,c
   457  007E48  EF28  F03F         	goto	u261
   458  007E4C  EF2A  F03F         	goto	u260
   459  007E50                     u261:
   460  007E50  EF2E  F03F         	goto	l947
   461  007E54                     u260:
   462  007E54  5017               	movf	___awmod@divisor^0,w,c
   463  007E56  5E15               	subwf	___awmod@dividend^0,f,c
   464  007E58  5018               	movf	(___awmod@divisor+1)^0,w,c
   465  007E5A  5A16               	subwfb	(___awmod@dividend+1)^0,f,c
   466  007E5C                     l947:
   467  007E5C  90D8               	bcf	status,0,c
   468  007E5E  3218               	rrcf	(___awmod@divisor+1)^0,f,c
   469  007E60  3217               	rrcf	___awmod@divisor^0,f,c
   470  007E62  2E19               	decfsz	___awmod@counter^0,f,c
   471  007E64  EF1F  F03F         	goto	l943
   472  007E68                     l951:
   473  007E68  501A               	movf	___awmod@sign^0,w,c
   474  007E6A  B4D8               	btfsc	status,2,c
   475  007E6C  EF3A  F03F         	goto	u271
   476  007E70  EF3C  F03F         	goto	u270
   477  007E74                     u271:
   478  007E74  EF40  F03F         	goto	l955
   479  007E78                     u270:
   480  007E78  6C15               	negf	___awmod@dividend^0,c
   481  007E7A  1E16               	comf	(___awmod@dividend+1)^0,f,c
   482  007E7C  B0D8               	btfsc	status,0,c
   483  007E7E  2A16               	incf	(___awmod@dividend+1)^0,f,c
   484  007E80                     l955:
   485  007E80  C015  F015         	movff	___awmod@dividend,?___awmod
   486  007E84  C016  F016         	movff	___awmod@dividend+1,?___awmod+1
   487  007E88  0012               	return		;funcret
   488  007E8A                     __end_of___awmod:
   489                           	callstack 0
   490                           
   491 ;; *************** function ___awdiv *****************
   492 ;; Defined at:
   493 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
   494 ;; Parameters:    Size  Location     Type
   495 ;;  dividend        2    0[COMRAM] int 
   496 ;;  divisor         2    2[COMRAM] int 
   497 ;; Auto vars:     Size  Location     Type
   498 ;;  quotient        2    6[COMRAM] int 
   499 ;;  sign            1    5[COMRAM] unsigned char 
   500 ;;  counter         1    4[COMRAM] unsigned char 
   501 ;; Return value:  Size  Location     Type
   502 ;;                  2    0[COMRAM] int 
   503 ;; Registers used:
   504 ;;		wreg, status,2, status,0
   505 ;; Tracked objects:
   506 ;;		On entry : 0/0
   507 ;;		On exit  : 0/0
   508 ;;		Unchanged: 0/0
   509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   510 ;;      Params:         4       0       0       0       0       0       0       0       0
   511 ;;      Locals:         4       0       0       0       0       0       0       0       0
   512 ;;      Temps:          0       0       0       0       0       0       0       0       0
   513 ;;      Totals:         8       0       0       0       0       0       0       0       0
   514 ;;Total ram usage:        8 bytes
   515 ;; Hardware stack levels used: 1
   516 ;; This function calls:
   517 ;;		Nothing
   518 ;; This function is called by:
   519 ;;		_main
   520 ;; This function uses a non-reentrant model
   521 ;;
   522                           
   523                           	psect	text2
   524  007F3C                     __ptext2:
   525                           	callstack 0
   526  007F3C                     ___awdiv:
   527                           	callstack 30
   528  007F3C  0E00               	movlw	0
   529  007F3E  6E1A               	movwf	___awdiv@sign^0,c
   530  007F40  BE18               	btfsc	(___awdiv@divisor+1)^0,7,c
   531  007F42  EFA7  F03F         	goto	u160
   532  007F46  EFA5  F03F         	goto	u161
   533  007F4A                     u161:
   534  007F4A  EFAD  F03F         	goto	l887
   535  007F4E                     u160:
   536  007F4E  6C17               	negf	___awdiv@divisor^0,c
   537  007F50  1E18               	comf	(___awdiv@divisor+1)^0,f,c
   538  007F52  B0D8               	btfsc	status,0,c
   539  007F54  2A18               	incf	(___awdiv@divisor+1)^0,f,c
   540  007F56  0E01               	movlw	1
   541  007F58  6E1A               	movwf	___awdiv@sign^0,c
   542  007F5A                     l887:
   543  007F5A  BE16               	btfsc	(___awdiv@dividend+1)^0,7,c
   544  007F5C  EFB4  F03F         	goto	u170
   545  007F60  EFB2  F03F         	goto	u171
   546  007F64                     u171:
   547  007F64  EFBA  F03F         	goto	l893
   548  007F68                     u170:
   549  007F68  6C15               	negf	___awdiv@dividend^0,c
   550  007F6A  1E16               	comf	(___awdiv@dividend+1)^0,f,c
   551  007F6C  B0D8               	btfsc	status,0,c
   552  007F6E  2A16               	incf	(___awdiv@dividend+1)^0,f,c
   553  007F70  0E01               	movlw	1
   554  007F72  1A1A               	xorwf	___awdiv@sign^0,f,c
   555  007F74                     l893:
   556  007F74  0E00               	movlw	0
   557  007F76  6E1C               	movwf	(___awdiv@quotient+1)^0,c
   558  007F78  0E00               	movlw	0
   559  007F7A  6E1B               	movwf	___awdiv@quotient^0,c
   560  007F7C  5017               	movf	___awdiv@divisor^0,w,c
   561  007F7E  1018               	iorwf	(___awdiv@divisor+1)^0,w,c
   562  007F80  B4D8               	btfsc	status,2,c
   563  007F82  EFC5  F03F         	goto	u181
   564  007F86  EFC7  F03F         	goto	u180
   565  007F8A                     u181:
   566  007F8A  EFEF  F03F         	goto	l915
   567  007F8E                     u180:
   568  007F8E  0E01               	movlw	1
   569  007F90  6E19               	movwf	___awdiv@counter^0,c
   570  007F92  EFCF  F03F         	goto	l901
   571  007F96                     l899:
   572  007F96  90D8               	bcf	status,0,c
   573  007F98  3617               	rlcf	___awdiv@divisor^0,f,c
   574  007F9A  3618               	rlcf	(___awdiv@divisor+1)^0,f,c
   575  007F9C  2A19               	incf	___awdiv@counter^0,f,c
   576  007F9E                     l901:
   577  007F9E  AE18               	btfss	(___awdiv@divisor+1)^0,7,c
   578  007FA0  EFD4  F03F         	goto	u191
   579  007FA4  EFD6  F03F         	goto	u190
   580  007FA8                     u191:
   581  007FA8  EFCB  F03F         	goto	l899
   582  007FAC                     u190:
   583  007FAC                     l903:
   584  007FAC  90D8               	bcf	status,0,c
   585  007FAE  361B               	rlcf	___awdiv@quotient^0,f,c
   586  007FB0  361C               	rlcf	(___awdiv@quotient+1)^0,f,c
   587  007FB2  5017               	movf	___awdiv@divisor^0,w,c
   588  007FB4  5C15               	subwf	___awdiv@dividend^0,w,c
   589  007FB6  5018               	movf	(___awdiv@divisor+1)^0,w,c
   590  007FB8  5816               	subwfb	(___awdiv@dividend+1)^0,w,c
   591  007FBA  A0D8               	btfss	status,0,c
   592  007FBC  EFE2  F03F         	goto	u201
   593  007FC0  EFE4  F03F         	goto	u200
   594  007FC4                     u201:
   595  007FC4  EFE9  F03F         	goto	l911
   596  007FC8                     u200:
   597  007FC8  5017               	movf	___awdiv@divisor^0,w,c
   598  007FCA  5E15               	subwf	___awdiv@dividend^0,f,c
   599  007FCC  5018               	movf	(___awdiv@divisor+1)^0,w,c
   600  007FCE  5A16               	subwfb	(___awdiv@dividend+1)^0,f,c
   601  007FD0  801B               	bsf	___awdiv@quotient^0,0,c
   602  007FD2                     l911:
   603  007FD2  90D8               	bcf	status,0,c
   604  007FD4  3218               	rrcf	(___awdiv@divisor+1)^0,f,c
   605  007FD6  3217               	rrcf	___awdiv@divisor^0,f,c
   606  007FD8  2E19               	decfsz	___awdiv@counter^0,f,c
   607  007FDA  EFD6  F03F         	goto	l903
   608  007FDE                     l915:
   609  007FDE  501A               	movf	___awdiv@sign^0,w,c
   610  007FE0  B4D8               	btfsc	status,2,c
   611  007FE2  EFF5  F03F         	goto	u211
   612  007FE6  EFF7  F03F         	goto	u210
   613  007FEA                     u211:
   614  007FEA  EFFB  F03F         	goto	l919
   615  007FEE                     u210:
   616  007FEE  6C1B               	negf	___awdiv@quotient^0,c
   617  007FF0  1E1C               	comf	(___awdiv@quotient+1)^0,f,c
   618  007FF2  B0D8               	btfsc	status,0,c
   619  007FF4  2A1C               	incf	(___awdiv@quotient+1)^0,f,c
   620  007FF6                     l919:
   621  007FF6  C01B  F015         	movff	___awdiv@quotient,?___awdiv
   622  007FFA  C01C  F016         	movff	___awdiv@quotient+1,?___awdiv+1
   623  007FFE  0012               	return		;funcret
   624  008000                     __end_of___awdiv:
   625                           	callstack 0
   626                           
   627 ;; *************** function _Config_Port *****************
   628 ;; Defined at:
   629 ;;		line 58 in file "main.c"
   630 ;; Parameters:    Size  Location     Type
   631 ;;		None
   632 ;; Auto vars:     Size  Location     Type
   633 ;;		None
   634 ;; Return value:  Size  Location     Type
   635 ;;                  1    wreg      void 
   636 ;; Registers used:
   637 ;;		wreg, status,2
   638 ;; Tracked objects:
   639 ;;		On entry : 0/0
   640 ;;		On exit  : 0/0
   641 ;;		Unchanged: 0/0
   642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   643 ;;      Params:         0       0       0       0       0       0       0       0       0
   644 ;;      Locals:         0       0       0       0       0       0       0       0       0
   645 ;;      Temps:          0       0       0       0       0       0       0       0       0
   646 ;;      Totals:         0       0       0       0       0       0       0       0       0
   647 ;;Total ram usage:        0 bytes
   648 ;; Hardware stack levels used: 1
   649 ;; This function calls:
   650 ;;		Nothing
   651 ;; This function is called by:
   652 ;;		_main
   653 ;; This function uses a non-reentrant model
   654 ;;
   655                           
   656                           	psect	text3
   657  007D8E                     __ptext3:
   658                           	callstack 0
   659  007D8E                     _Config_Port:
   660                           	callstack 30
   661  007D8E                     
   662                           ;main.c: 60:     LATD= 0b00000000;
   663  007D8E  0E00               	movlw	0
   664  007D90  6E8C               	movwf	140,c	;volatile
   665                           
   666                           ;main.c: 63:     SLRCON=0b00000000;
   667  007D92  0E00               	movlw	0
   668  007D94  6E7A               	movwf	122,c	;volatile
   669                           
   670                           ;main.c: 66:     ANSELD=0b00000000;
   671  007D96  0E00               	movlw	0
   672  007D98  010F               	movlb	15	; () banked
   673  007D9A  6F5E               	movwf	94,b	;volatile
   674  007D9C                     
   675                           ; BSR set to: 15
   676                           ;main.c: 68:     ANSELAbits.ANSA0=0;
   677  007D9C  915B               	bcf	91,0,b	;volatile
   678  007D9E                     
   679                           ; BSR set to: 15
   680                           ;main.c: 69:     ANSELAbits.ANSA1=0;
   681  007D9E  935B               	bcf	91,1,b	;volatile
   682  007DA0                     
   683                           ; BSR set to: 15
   684                           ;main.c: 72:     ANSELEbits.ANSE0=0;
   685  007DA0  915F               	bcf	95,0,b	;volatile
   686  007DA2                     
   687                           ; BSR set to: 15
   688                           ;main.c: 73:     ANSELEbits.ANSE1=0;
   689  007DA2  935F               	bcf	95,1,b	;volatile
   690                           
   691                           ;main.c: 76:     TRISD=0b00000000;
   692  007DA4  0E00               	movlw	0
   693  007DA6  6E95               	movwf	149,c	;volatile
   694  007DA8                     
   695                           ; BSR set to: 15
   696                           ;main.c: 78:     TRISAbits.TRISA0=1;
   697  007DA8  8092               	bsf	146,0,c	;volatile
   698  007DAA                     
   699                           ; BSR set to: 15
   700                           ;main.c: 79:     TRISAbits.TRISA1=1;
   701  007DAA  8292               	bsf	146,1,c	;volatile
   702  007DAC                     
   703                           ; BSR set to: 15
   704                           ;main.c: 81:     TRISEbits.TRISE0=0;
   705  007DAC  9096               	bcf	150,0,c	;volatile
   706  007DAE                     
   707                           ; BSR set to: 15
   708                           ;main.c: 82:     TRISEbits.TRISE1=0;
   709  007DAE  9296               	bcf	150,1,c	;volatile
   710  007DB0                     
   711                           ; BSR set to: 15
   712  007DB0  0012               	return		;funcret
   713  007DB2                     __end_of_Config_Port:
   714                           	callstack 0
   715                           
   716 ;; *************** function _Config_Clock *****************
   717 ;; Defined at:
   718 ;;		line 53 in file "main.c"
   719 ;; Parameters:    Size  Location     Type
   720 ;;		None
   721 ;; Auto vars:     Size  Location     Type
   722 ;;		None
   723 ;; Return value:  Size  Location     Type
   724 ;;                  1    wreg      void 
   725 ;; Registers used:
   726 ;;		wreg, status,2
   727 ;; Tracked objects:
   728 ;;		On entry : 0/0
   729 ;;		On exit  : 0/0
   730 ;;		Unchanged: 0/0
   731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   732 ;;      Params:         0       0       0       0       0       0       0       0       0
   733 ;;      Locals:         0       0       0       0       0       0       0       0       0
   734 ;;      Temps:          0       0       0       0       0       0       0       0       0
   735 ;;      Totals:         0       0       0       0       0       0       0       0       0
   736 ;;Total ram usage:        0 bytes
   737 ;; Hardware stack levels used: 1
   738 ;; This function calls:
   739 ;;		Nothing
   740 ;; This function is called by:
   741 ;;		_main
   742 ;; This function uses a non-reentrant model
   743 ;;
   744                           
   745                           	psect	text4
   746  007D6C                     __ptext4:
   747                           	callstack 0
   748  007D6C                     _Config_Clock:
   749                           	callstack 30
   750  007D6C                     
   751                           ;main.c: 54:     OSCCONbits.IRCF=0b111;
   752  007D6C  0E70               	movlw	112
   753  007D6E  12D3               	iorwf	211,f,c	;volatile
   754                           
   755                           ;main.c: 55:     OSCCONbits.SCS=0b10;
   756  007D70  50D3               	movf	211,w,c	;volatile
   757  007D72  0BFC               	andlw	-4
   758  007D74  0902               	iorlw	2
   759  007D76  6ED3               	movwf	211,c	;volatile
   760  007D78  0012               	return		;funcret
   761  007D7A                     __end_of_Config_Clock:
   762                           	callstack 0
   763  0000                     
   764                           	psect	rparam
   765  0000                     
   766                           	psect	idloc
   767                           
   768                           ;Config register IDLOC0 @ 0x200000
   769                           ;	unspecified, using default values
   770  200000                     	org	2097152
   771  200000  FF                 	db	255
   772                           
   773                           ;Config register IDLOC1 @ 0x200001
   774                           ;	unspecified, using default values
   775  200001                     	org	2097153
   776  200001  FF                 	db	255
   777                           
   778                           ;Config register IDLOC2 @ 0x200002
   779                           ;	unspecified, using default values
   780  200002                     	org	2097154
   781  200002  FF                 	db	255
   782                           
   783                           ;Config register IDLOC3 @ 0x200003
   784                           ;	unspecified, using default values
   785  200003                     	org	2097155
   786  200003  FF                 	db	255
   787                           
   788                           ;Config register IDLOC4 @ 0x200004
   789                           ;	unspecified, using default values
   790  200004                     	org	2097156
   791  200004  FF                 	db	255
   792                           
   793                           ;Config register IDLOC5 @ 0x200005
   794                           ;	unspecified, using default values
   795  200005                     	org	2097157
   796  200005  FF                 	db	255
   797                           
   798                           ;Config register IDLOC6 @ 0x200006
   799                           ;	unspecified, using default values
   800  200006                     	org	2097158
   801  200006  FF                 	db	255
   802                           
   803                           ;Config register IDLOC7 @ 0x200007
   804                           ;	unspecified, using default values
   805  200007                     	org	2097159
   806  200007  FF                 	db	255
   807                           
   808                           	psect	config
   809                           
   810                           ;Config register CONFIG1L @ 0x300000
   811                           ;	PLL Selection
   812                           ;	PLLSEL = PLL4X, 4x clock multiplier
   813                           ;	PLL Enable Configuration bit
   814                           ;	CFGPLLEN = OFF, PLL Disabled (firmware controlled)
   815                           ;	CPU System Clock Postscaler
   816                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
   817                           ;	Low Speed USB mode with 48 MHz system clock
   818                           ;	LS48MHZ = SYS24X4, System clock at 24 MHz, USB clock divider is set to 4
   819  300000                     	org	3145728
   820  300000  00                 	db	0
   821                           
   822                           ;Config register CONFIG1H @ 0x300001
   823                           ;	Oscillator Selection
   824                           ;	FOSC = INTOSCIO, Internal oscillator
   825                           ;	Primary Oscillator Shutdown
   826                           ;	PCLKEN = ON, Primary oscillator enabled
   827                           ;	Fail-Safe Clock Monitor
   828                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   829                           ;	Internal/External Oscillator Switchover
   830                           ;	IESO = OFF, Oscillator Switchover mode disabled
   831  300001                     	org	3145729
   832  300001  28                 	db	40
   833                           
   834                           ;Config register CONFIG2L @ 0x300002
   835                           ;	Power-up Timer Enable
   836                           ;	nPWRTEN = ON, Power up timer enabled
   837                           ;	Brown-out Reset Enable
   838                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
   839                           ;	Brown-out Reset Voltage
   840                           ;	BORV = 190, BOR set to 1.9V nominal
   841                           ;	Low-Power Brown-out Reset
   842                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
   843  300002                     	org	3145730
   844  300002  5E                 	db	94
   845                           
   846                           ;Config register CONFIG2H @ 0x300003
   847                           ;	Watchdog Timer Enable bits
   848                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
   849                           ;	Watchdog Timer Postscaler
   850                           ;	WDTPS = 32768, 1:32768
   851  300003                     	org	3145731
   852  300003  3C                 	db	60
   853                           
   854                           ; Padding undefined space
   855  300004                     	org	3145732
   856  300004  FF                 	db	255
   857                           
   858                           ;Config register CONFIG3H @ 0x300005
   859                           ;	CCP2 MUX bit
   860                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
   861                           ;	PORTB A/D Enable bit
   862                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
   863                           ;	Timer3 Clock Input MUX bit
   864                           ;	T3CMX = RC0, T3CKI function is on RC0
   865                           ;	SDO Output MUX bit
   866                           ;	SDOMX = RB3, SDO function is on RB3
   867                           ;	Master Clear Reset Pin Enable
   868                           ;	MCLRE = OFF, RE3 input pin enabled; external MCLR disabled
   869  300005                     	org	3145733
   870  300005  53                 	db	83
   871                           
   872                           ;Config register CONFIG4L @ 0x300006
   873                           ;	Stack Full/Underflow Reset
   874                           ;	STVREN = ON, Stack full/underflow will cause Reset
   875                           ;	Single-Supply ICSP Enable bit
   876                           ;	LVP = OFF, Single-Supply ICSP disabled
   877                           ;	Dedicated In-Circuit Debug/Programming Port Enable
   878                           ;	ICPRT = OFF, ICPORT disabled
   879                           ;	Extended Instruction Set Enable bit
   880                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
   881                           ;	Background Debugger Enable bit
   882                           ;	DEBUG = 0x1, unprogrammed default
   883  300006                     	org	3145734
   884  300006  81                 	db	129
   885                           
   886                           ; Padding undefined space
   887  300007                     	org	3145735
   888  300007  FF                 	db	255
   889                           
   890                           ;Config register CONFIG5L @ 0x300008
   891                           ;	Block 0 Code Protect
   892                           ;	CP0 = OFF, Block 0 is not code-protected
   893                           ;	Block 1 Code Protect
   894                           ;	CP1 = OFF, Block 1 is not code-protected
   895                           ;	Block 2 Code Protect
   896                           ;	CP2 = OFF, Block 2 is not code-protected
   897                           ;	Block 3 Code Protect
   898                           ;	CP3 = OFF, Block 3 is not code-protected
   899  300008                     	org	3145736
   900  300008  0F                 	db	15
   901                           
   902                           ;Config register CONFIG5H @ 0x300009
   903                           ;	Boot Block Code Protect
   904                           ;	CPB = OFF, Boot block is not code-protected
   905                           ;	Data EEPROM Code Protect
   906                           ;	CPD = OFF, Data EEPROM is not code-protected
   907  300009                     	org	3145737
   908  300009  C0                 	db	192
   909                           
   910                           ;Config register CONFIG6L @ 0x30000A
   911                           ;	Block 0 Write Protect
   912                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
   913                           ;	Block 1 Write Protect
   914                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
   915                           ;	Block 2 Write Protect
   916                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
   917                           ;	Block 3 Write Protect
   918                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
   919  30000A                     	org	3145738
   920  30000A  0F                 	db	15
   921                           
   922                           ;Config register CONFIG6H @ 0x30000B
   923                           ;	Configuration Registers Write Protect
   924                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   925                           ;	Boot Block Write Protect
   926                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
   927                           ;	Data EEPROM Write Protect
   928                           ;	WRTD = OFF, Data EEPROM is not write-protected
   929  30000B                     	org	3145739
   930  30000B  E0                 	db	224
   931                           
   932                           ;Config register CONFIG7L @ 0x30000C
   933                           ;	Block 0 Table Read Protect
   934                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
   935                           ;	Block 1 Table Read Protect
   936                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
   937                           ;	Block 2 Table Read Protect
   938                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
   939                           ;	Block 3 Table Read Protect
   940                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
   941  30000C                     	org	3145740
   942  30000C  0F                 	db	15
   943                           
   944                           ;Config register CONFIG7H @ 0x30000D
   945                           ;	Boot Block Table Read Protect
   946                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
   947  30000D                     	org	3145741
   948  30000D  40                 	db	64
   949                           tosu	equ	0xFFF
   950                           tosh	equ	0xFFE
   951                           tosl	equ	0xFFD
   952                           stkptr	equ	0xFFC
   953                           pclatu	equ	0xFFB
   954                           pclath	equ	0xFFA
   955                           pcl	equ	0xFF9
   956                           tblptru	equ	0xFF8
   957                           tblptrh	equ	0xFF7
   958                           tblptrl	equ	0xFF6
   959                           tablat	equ	0xFF5
   960                           prodh	equ	0xFF4
   961                           prodl	equ	0xFF3
   962                           indf0	equ	0xFEF
   963                           postinc0	equ	0xFEE
   964                           postdec0	equ	0xFED
   965                           preinc0	equ	0xFEC
   966                           plusw0	equ	0xFEB
   967                           fsr0h	equ	0xFEA
   968                           fsr0l	equ	0xFE9
   969                           wreg	equ	0xFE8
   970                           indf1	equ	0xFE7
   971                           postinc1	equ	0xFE6
   972                           postdec1	equ	0xFE5
   973                           preinc1	equ	0xFE4
   974                           plusw1	equ	0xFE3
   975                           fsr1h	equ	0xFE2
   976                           fsr1l	equ	0xFE1
   977                           bsr	equ	0xFE0
   978                           indf2	equ	0xFDF
   979                           postinc2	equ	0xFDE
   980                           postdec2	equ	0xFDD
   981                           preinc2	equ	0xFDC
   982                           plusw2	equ	0xFDB
   983                           fsr2h	equ	0xFDA
   984                           fsr2l	equ	0xFD9
   985                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         1
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     10      33
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     946
                                              8 COMRAM     2     2      0
                       _Config_Clock
                        _Config_Port
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Config_Port                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Config_Clock                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Config_Clock
   _Config_Port
   ___awdiv
   ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      29        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      A      21       1       34.7%
BITBIGSFRhlh        3C      0       0      21        0.0%
BITBIGSFRhh         2C      0       0      20        0.0%
BITBIGSFRllh        1A      0       0      25        0.0%
BITBIGSFRlh         11      0       0      24        0.0%
BITBIGSFRllll        8      0       0      27        0.0%
BITBIGSFRhlll        4      0       0      23        0.0%
BITBIGSFRhllh        2      0       0      22        0.0%
BITBIGSFRlllh        2      0       0      26        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      21      28        0.0%
DATA                 0      0      21       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri Jun 17 20:56:07 2022

                     l50 7D78                       l53 7DB0             ___awdiv@sign 001A  
                    l306 7E88                      l293 7FFE                      l741 7D9E  
                    l901 7F9E                      l735 7D6C                      l751 7DAC  
                    l743 7DA0                      l911 7FD2                      l903 7FAC  
                    l753 7DAE                      l745 7DA2                      l737 7D8E  
                    l913 7FD8                      l905 7FB2                      l747 7DA8  
                    l739 7D9C                      l907 7FC8                      l915 7FDE  
                    l931 7DF8                      l923 7DDA                      l749 7DAA  
                    l917 7FEE                      l909 7FD0                      l941 7E30  
                    l933 7E06                      l925 7DDE                      l919 7FF6  
                    l943 7E3E                      l951 7E68                      l935 7E0E  
                    l927 7DEC                      l881 7F40                      l953 7E78  
                    l945 7E54                      l937 7E20                      l929 7DF4  
                    l961 7E92                      l891 7F70                      l883 7F4E  
                    l955 7E80                      l947 7E5C                      l939 7E28  
                    l971 7EC2                      l963 7EA8                      l893 7F74  
                    l885 7F56                      l949 7E62                      l981 7EF6  
                    l973 7ED2                      l965 7EBE                      l895 7F7C  
                    l887 7F5A                      l879 7F3C                      l991 7F30  
                    l983 7F08                      l975 7ED4                      l959 7E8A  
                    l897 7F8E                      l889 7F68                      l985 7F0A  
                    l977 7EE4                      l899 7F96                      l987 7F1C  
                    l979 7EE6                      l989 7F1E                      u200 7FC8  
                    u201 7FC4                      u210 7FEE                      u211 7FEA  
                    u220 7DEC                      u221 7DE8                      u230 7E06  
                    u231 7E02                      u160 7F4E                      u240 7E20  
                    u161 7F4A                      u241 7E1C                      u170 7F68  
                    u250 7E3E                      u171 7F64                      u251 7E3A  
                    u307 7EDA                      u180 7F8E                      u260 7E54  
                    u181 7F8A                      u261 7E50                      u317 7EFE  
                    u190 7FAC                      u270 7E78                      u191 7FA8  
                    u271 7E74                      u280 7F1C                      u281 7F18  
                    u290 7F30                      u291 7F2C             ___awmod@sign 001A  
                    wreg 000FE8                     _LATD 000F8C                     _main 7E8A  
                   indf2 000FDF                     fsr1l 000FE1                     fsr2l 000FD9  
                   start 0000             ___param_bank 000000      __end_of_Config_Port 7DB2  
                  ?_main 0015          __end_of___awdiv 8000          __end_of___awmod 7E8A  
        ___awdiv@divisor 0017          ___awdiv@counter 0019                    _TRISD 000F95  
                  main@i 001E                    tablat 000FF5                    status 000FD8  
        __initialization 7DB2     __end_of_Config_Clock 7D7A             __end_of_main 7F3C  
                 ??_main 001D            __activetblptr 000000         ___awdiv@dividend 0015  
                 _ANSELD 000F5E                   _SLRCON 000F7A              _Config_Port 7D8E  
              ??___awdiv 0019                ??___awmod 0019                   _cuenta 0021  
       ___awdiv@quotient 001B          ___awmod@divisor 0017                   isa$std 000001  
        ___awmod@counter 0019             __pdataCOMRAM 0001                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 7DD4            ___rparam_used 000001           __pcstackCOMRAM 0015  
             __pnvCOMRAM 001F             _Config_Clock 7D6C                  __Hparam 0000  
                __Lparam 0000                  ___awdiv 7F3C                  ___awmod 7DDA  
                _decenas 001F                  __pcinit 7DB2                  __ramtop 0800  
                __ptext0 7E8A                  __ptext1 7DDA                  __ptext2 7F3C  
                __ptext3 7D8E                  __ptext4 7D6C         ___awmod@dividend 0015  
   end_of_initialization 7DD4             ?_Config_Port 0015                  postdec1 000FE5  
                postinc0 000FEE                _TRISAbits 000F92                _TRISEbits 000F96  
          __pidataCOMRAM 7D7A      start_initialization 7DB2              __pbssCOMRAM 0021  
               ?___awdiv 0015                 ?___awmod 0015                 _LATEbits 000F8D  
              copy_data0 7DC6                 __Hrparam 0000                 __Lrparam 0000  
             _ANSELAbits 000F5B               _ANSELEbits 000F5F                 isa$xinst 000000  
               _unidades 0020            ?_Config_Clock 0015               _OSCCONbits 000FD3  
         _display_catodo 0001           ??_Config_Clock 0015            _display_anodo 000B  
          ??_Config_Port 0015  
