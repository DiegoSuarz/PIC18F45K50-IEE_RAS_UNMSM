

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Aug 13 21:53:29 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    63                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    68                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    69                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    70                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    71                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    72   000000                     
    73                           ; Version 2.35
    74                           ; Generated 05/05/2021 GMT
    75                           ; 
    76                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    77                           ; All rights reserved.
    78                           ; 
    79                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    80                           ; 
    81                           ; Redistribution and use in source and binary forms, with or without modification, are
    82                           ; permitted provided that the following conditions are met:
    83                           ; 
    84                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    85                           ;        conditions and the following disclaimer.
    86                           ; 
    87                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    88                           ;        of conditions and the following disclaimer in the documentation and/or other
    89                           ;        materials provided with the distribution. Publication is not required when
    90                           ;        this file is used in an embedded application.
    91                           ; 
    92                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    93                           ;        software without specific prior written permission.
    94                           ; 
    95                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    96                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    97                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    98                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    99                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   100                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   101                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   102                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   103                           ; 
   104                           ; 
   105                           ; Code-generator required, PIC18F45K50 Definitions
   106                           ; 
   107                           ; SFR Addresses
   108   000000                     _ADRESL	set	4035
   109   000000                     _ADRESH	set	4036
   110   000000                     _ADCON0bits	set	4034
   111   000000                     _RCREG	set	4014
   112   000000                     _TXREG	set	4013
   113   000000                     _SPBRG	set	4015
   114   000000                     _BAUDCON	set	4024
   115   000000                     _RCSTAbits	set	4011
   116   000000                     _TXSTAbits	set	4012
   117   000000                     _ANSELAbits	set	3931
   118   000000                     _ANSELCbits	set	3933
   119   000000                     _ANSELD	set	3934
   120   000000                     _LATCbits	set	3979
   121   000000                     _LATDbits	set	3980
   122   000000                     _TRISCbits	set	3988
   123   000000                     _TRISD	set	3989
   124   000000                     _PIE1bits	set	3997
   125   000000                     _PIR1bits	set	3998
   126   000000                     _RCSTA	set	4011
   127   000000                     _TXSTA	set	4012
   128   000000                     _ADCON2bits	set	4032
   129   000000                     _ADCON1bits	set	4033
   130   000000                     _SPBRGH	set	4016
   131   000000                     _IPR1bits	set	3999
   132   000000                     _TRISAbits	set	3986
   133   000000                     _RCONbits	set	4048
   134   000000                     _TMR0L	set	4054
   135   000000                     _TMR0H	set	4055
   136   000000                     _INTCONbits	set	4082
   137   000000                     _INTCON2bits	set	4081
   138   000000                     _OSCCONbits	set	4051
   139   000000                     _T0CONbits	set	4053
   140                           
   141                           	psect	smallconst
   142   000800                     __psmallconst:
   143                           	callstack 0
   144   000800  00                 	db	0
   145   000801                     STR_19:
   146   000801  0D                 	db	13
   147   000802  0D                 	db	13
   148   000803  0D                 	db	13
   149   000804  53                 	db	83	;'S'
   150   000805  69                 	db	105	;'i'
   151   000806  73                 	db	115	;'s'
   152   000807  74                 	db	116	;'t'
   153   000808  65                 	db	101	;'e'
   154   000809  6D                 	db	109	;'m'
   155   00080A  61                 	db	97	;'a'
   156   00080B  20                 	db	32
   157   00080C  64                 	db	100	;'d'
   158   00080D  65                 	db	101	;'e'
   159   00080E  20                 	db	32
   160   00080F  61                 	db	97	;'a'
   161   000810  64                 	db	100	;'d'
   162   000811  71                 	db	113	;'q'
   163   000812  75                 	db	117	;'u'
   164   000813  69                 	db	105	;'i'
   165   000814  73                 	db	115	;'s'
   166   000815  69                 	db	105	;'i'
   167   000816  63                 	db	99	;'c'
   168   000817  69                 	db	105	;'i'
   169   000818  F3                 	db	-13
   170   000819  6E                 	db	110	;'n'
   171   00081A  20                 	db	32
   172   00081B  64                 	db	100	;'d'
   173   00081C  65                 	db	101	;'e'
   174   00081D  20                 	db	32
   175   00081E  64                 	db	100	;'d'
   176   00081F  61                 	db	97	;'a'
   177   000820  74                 	db	116	;'t'
   178   000821  6F                 	db	111	;'o'
   179   000822  73                 	db	115	;'s'
   180   000823  3A                 	db	58	;':'
   181   000824  20                 	db	32
   182   000825  00                 	db	0
   183   000826                     STR_20:
   184   000826  0D                 	db	13
   185   000827  54                 	db	84	;'T'
   186   000828  65                 	db	101	;'e'
   187   000829  6D                 	db	109	;'m'
   188   00082A  70                 	db	112	;'p'
   189   00082B  20                 	db	32
   190   00082C  4C                 	db	76	;'L'
   191   00082D  4D                 	db	77	;'M'
   192   00082E  33                 	db	51	;'3'
   193   00082F  35                 	db	53	;'5'
   194   000830  3A                 	db	58	;':'
   195   000831  20                 	db	32
   196   000832  00                 	db	0
   197   000833                     STR_21:
   198   000833  0D                 	db	13
   199   000834  54                 	db	84	;'T'
   200   000835  65                 	db	101	;'e'
   201   000836  6D                 	db	109	;'m'
   202   000837  70                 	db	112	;'p'
   203   000838  20                 	db	32
   204   000839  4D                 	db	77	;'M'
   205   00083A  43                 	db	67	;'C'
   206   00083B  50                 	db	80	;'P'
   207   00083C  3A                 	db	58	;':'
   208   00083D  20                 	db	32
   209   00083E  00                 	db	0
   210   00083F                     STR_22:
   211   00083F  0D                 	db	13
   212   000840  56                 	db	86	;'V'
   213   000841  6F                 	db	111	;'o'
   214   000842  6C                 	db	108	;'l'
   215   000843  74                 	db	116	;'t'
   216   000844  61                 	db	97	;'a'
   217   000845  6A                 	db	106	;'j'
   218   000846  65                 	db	101	;'e'
   219   000847  3A                 	db	58	;':'
   220   000848  20                 	db	32
   221   000849  00                 	db	0
   222   00084A                     STR_4:
   223   00084A  4C                 	db	76	;'L'
   224   00084B  31                 	db	49	;'1'
   225   00084C  3A                 	db	58	;':'
   226   00084D  4F                 	db	79	;'O'
   227   00084E  4E                 	db	78	;'N'
   228   00084F  20                 	db	32
   229   000850  00                 	db	0
   230   000851                     STR_5:
   231   000851  4C                 	db	76	;'L'
   232   000852  32                 	db	50	;'2'
   233   000853  3A                 	db	58	;':'
   234   000854  4F                 	db	79	;'O'
   235   000855  4E                 	db	78	;'N'
   236   000856  20                 	db	32
   237   000857  00                 	db	0
   238   000858                     STR_6:
   239   000858  4C                 	db	76	;'L'
   240   000859  33                 	db	51	;'3'
   241   00085A  3A                 	db	58	;':'
   242   00085B  4F                 	db	79	;'O'
   243   00085C  4E                 	db	78	;'N'
   244   00085D  20                 	db	32
   245   00085E  00                 	db	0
   246   00085F                     STR_7:
   247   00085F  4C                 	db	76	;'L'
   248   000860  31                 	db	49	;'1'
   249   000861  3A                 	db	58	;':'
   250   000862  4F                 	db	79	;'O'
   251   000863  46                 	db	70	;'F'
   252   000864  46                 	db	70	;'F'
   253   000865  00                 	db	0
   254   000866                     STR_8:
   255   000866  4C                 	db	76	;'L'
   256   000867  32                 	db	50	;'2'
   257   000868  3A                 	db	58	;':'
   258   000869  4F                 	db	79	;'O'
   259   00086A  46                 	db	70	;'F'
   260   00086B  46                 	db	70	;'F'
   261   00086C  00                 	db	0
   262   00086D                     STR_9:
   263   00086D  4C                 	db	76	;'L'
   264   00086E  33                 	db	51	;'3'
   265   00086F  3A                 	db	58	;':'
   266   000870  4F                 	db	79	;'O'
   267   000871  46                 	db	70	;'F'
   268   000872  46                 	db	70	;'F'
   269   000873  00                 	db	0
   270   000874                     STR_1:
   271   000874  25                 	db	37
   272   000875  2E                 	db	46
   273   000876  32                 	db	50	;'2'
   274   000877  66                 	db	102	;'f'
   275   000878  00                 	db	0
   276   000879                     STR_23:
   277   000879  69                 	db	105	;'i'
   278   00087A  6E                 	db	110	;'n'
   279   00087B  66                 	db	102	;'f'
   280   00087C  00                 	db	0
   281   00087D                     STR_26:
   282   00087D  6E                 	db	110	;'n'
   283   00087E  61                 	db	97	;'a'
   284   00087F  6E                 	db	110	;'n'
   285   000880  00                 	db	0
   286   000881  00                 	db	0	; dummy byte at the end
   287   000000                     
   288                           ; #config settings
   289                           
   290                           	psect	cinit
   291   0036A4                     __pcinit:
   292                           	callstack 0
   293   0036A4                     start_initialization:
   294                           	callstack 0
   295   0036A4                     __initialization:
   296                           	callstack 0
   297                           
   298                           ; Clear objects allocated to BANK1 (100 bytes)
   299   0036A4  EE01  F000         	lfsr	0,__pbssBANK1
   300   0036A8  0E64               	movlw	100
   301   0036AA                     clear_0:
   302   0036AA  6AEE               	clrf	postinc0,c
   303   0036AC  06E8               	decf	wreg,f,c
   304   0036AE  E1FD               	bnz	clear_0
   305                           
   306                           ; Clear objects allocated to BANK0 (25 bytes)
   307   0036B0  EE00  F0E4         	lfsr	0,__pbssBANK0
   308   0036B4  0E19               	movlw	25
   309   0036B6                     clear_1:
   310   0036B6  6AEE               	clrf	postinc0,c
   311   0036B8  06E8               	decf	wreg,f,c
   312   0036BA  E1FD               	bnz	clear_1
   313                           
   314                           ; Clear objects allocated to COMRAM (25 bytes)
   315   0036BC  EE00  F02C         	lfsr	0,__pbssCOMRAM
   316   0036C0  0E19               	movlw	25
   317   0036C2                     clear_2:
   318   0036C2  6AEE               	clrf	postinc0,c
   319   0036C4  06E8               	decf	wreg,f,c
   320   0036C6  E1FD               	bnz	clear_2
   321   0036C8                     end_of_initialization:
   322                           	callstack 0
   323   0036C8                     __end_of__initialization:
   324                           	callstack 0
   325   0036C8  9045               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   326   0036CA  9245               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   327   0036CC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   328   0036CE  6EF8               	movwf	tblptru,c
   329   0036D0  0100               	movlb	0
   330   0036D2  EF11  F011         	goto	_main	;jump to C main() function
   331                           
   332                           	psect	bssCOMRAM
   333   00002C                     __pbssCOMRAM:
   334                           	callstack 0
   335   00002C                     floorf@F526:
   336                           	callstack 0
   337   00002C                     	ds	4
   338   000030                     ___fpclassifyf@F465:
   339                           	callstack 0
   340   000030                     	ds	4
   341   000034                     _dato_Rx:
   342                           	callstack 0
   343   000034                     	ds	1
   344   000035                     _Str_v1:
   345                           	callstack 0
   346   000035                     	ds	8
   347   00003D                     _Str_mcp:
   348                           	callstack 0
   349   00003D                     	ds	8
   350                           
   351                           	psect	bssBANK0
   352   0000E4                     __pbssBANK0:
   353                           	callstack 0
   354   0000E4                     _v1:
   355                           	callstack 0
   356   0000E4                     	ds	4
   357   0000E8                     _temp_mcp:
   358                           	callstack 0
   359   0000E8                     	ds	4
   360   0000EC                     _temp_lm35:
   361                           	callstack 0
   362   0000EC                     	ds	4
   363   0000F0                     _width:
   364                           	callstack 0
   365   0000F0                     	ds	2
   366   0000F2                     _prec:
   367                           	callstack 0
   368   0000F2                     	ds	2
   369   0000F4                     _flags:
   370                           	callstack 0
   371   0000F4                     	ds	1
   372   0000F5                     _Str_lm35:
   373                           	callstack 0
   374   0000F5                     	ds	8
   375                           
   376                           	psect	bssBANK1
   377   000100                     __pbssBANK1:
   378                           	callstack 0
   379   000100                     _lcd_Buffer:
   380                           	callstack 0
   381   000100                     	ds	20
   382   000114                     _dbuf:
   383                           	callstack 0
   384   000114                     	ds	80
   385                           
   386                           	psect	cstackBANK1
   387   000164                     __pcstackBANK1:
   388                           	callstack 0
   389   000164                     ?_sprintf:
   390                           	callstack 0
   391   000164                     sprintf@s:
   392                           	callstack 0
   393                           
   394                           ; 2 bytes @ 0x0
   395   000164                     	ds	2
   396   000166                     sprintf@fmt:
   397                           	callstack 0
   398                           
   399                           ; 2 bytes @ 0x2
   400   000166                     	ds	6
   401   00016C                     sprintf@ap:
   402                           	callstack 0
   403                           
   404                           ; 2 bytes @ 0x8
   405   00016C                     	ds	2
   406   00016E                     sprintf@f:
   407                           	callstack 0
   408                           
   409                           ; 11 bytes @ 0xA
   410   00016E                     	ds	11
   411   000179                     _main$2134:
   412                           	callstack 0
   413                           
   414                           ; 4 bytes @ 0x15
   415   000179                     	ds	4
   416                           
   417                           	psect	cstackBANK0
   418   000060                     __pcstackBANK0:
   419                           	callstack 0
   420   000060                     ___xxtofl@sign:
   421                           	callstack 0
   422   000060                     USART_init@n:
   423                           	callstack 0
   424   000060                     pad@fp:
   425                           	callstack 0
   426   000060                     ___fldiv@rem:
   427                           	callstack 0
   428                           
   429                           ; 4 bytes @ 0x0
   430   000060                     	ds	1
   431   000061                     ___xxtofl@exp:
   432                           	callstack 0
   433                           
   434                           ; 1 bytes @ 0x1
   435   000061                     	ds	1
   436   000062                     pad@buf:
   437                           	callstack 0
   438   000062                     ___xxtofl@arg:
   439                           	callstack 0
   440                           
   441                           ; 4 bytes @ 0x2
   442   000062                     	ds	2
   443   000064                     ___fldiv@sign:
   444                           	callstack 0
   445   000064                     pad@p:
   446                           	callstack 0
   447                           
   448                           ; 2 bytes @ 0x4
   449   000064                     	ds	1
   450   000065                     ___fldiv@new_exp:
   451                           	callstack 0
   452                           
   453                           ; 2 bytes @ 0x5
   454   000065                     	ds	1
   455   000066                     ??_pad:
   456   000066                     ?___flmul:
   457                           	callstack 0
   458   000066                     ___flmul@b:
   459                           	callstack 0
   460                           
   461                           ; 4 bytes @ 0x6
   462   000066                     	ds	1
   463   000067                     pad@i:
   464                           	callstack 0
   465   000067                     ___fldiv@grs:
   466                           	callstack 0
   467                           
   468                           ; 4 bytes @ 0x7
   469   000067                     	ds	2
   470   000069                     pad@w:
   471                           	callstack 0
   472                           
   473                           ; 2 bytes @ 0x9
   474   000069                     	ds	1
   475   00006A                     ___flmul@a:
   476                           	callstack 0
   477                           
   478                           ; 4 bytes @ 0xA
   479   00006A                     	ds	1
   480   00006B                     ___fldiv@bexp:
   481                           	callstack 0
   482                           
   483                           ; 1 bytes @ 0xB
   484   00006B                     	ds	1
   485   00006C                     ___fldiv@aexp:
   486                           	callstack 0
   487                           
   488                           ; 1 bytes @ 0xC
   489   00006C                     	ds	1
   490   00006D                     ??_floorf:
   491                           
   492                           ; 1 bytes @ 0xD
   493   00006D                     	ds	1
   494   00006E                     ___flmul@sign:
   495                           	callstack 0
   496                           
   497                           ; 1 bytes @ 0xE
   498   00006E                     	ds	1
   499   00006F                     ___flmul@aexp:
   500                           	callstack 0
   501                           
   502                           ; 1 bytes @ 0xF
   503   00006F                     	ds	1
   504   000070                     ___flmul@grs:
   505                           	callstack 0
   506                           
   507                           ; 4 bytes @ 0x10
   508   000070                     	ds	3
   509   000073                     floorf@m:
   510                           	callstack 0
   511                           
   512                           ; 4 bytes @ 0x13
   513   000073                     	ds	1
   514   000074                     ___flmul@bexp:
   515                           	callstack 0
   516                           
   517                           ; 1 bytes @ 0x14
   518   000074                     	ds	1
   519   000075                     ___flmul@prod:
   520                           	callstack 0
   521                           
   522                           ; 4 bytes @ 0x15
   523   000075                     	ds	2
   524   000077                     floorf@e:
   525                           	callstack 0
   526                           
   527                           ; 2 bytes @ 0x17
   528   000077                     	ds	2
   529   000079                     ___flmul@temp:
   530                           	callstack 0
   531   000079                     floorf@u:
   532                           	callstack 0
   533                           
   534                           ; 4 bytes @ 0x19
   535   000079                     	ds	2
   536   00007B                     ?___fladd:
   537                           	callstack 0
   538   00007B                     ___flge@ff1:
   539                           	callstack 0
   540   00007B                     ___fladd@b:
   541                           	callstack 0
   542                           
   543                           ; 4 bytes @ 0x1B
   544   00007B                     	ds	4
   545   00007F                     ___flge@ff2:
   546                           	callstack 0
   547   00007F                     ___fladd@a:
   548                           	callstack 0
   549                           
   550                           ; 4 bytes @ 0x1F
   551   00007F                     	ds	4
   552   000083                     ??___fladd:
   553   000083                     ??___flge:
   554                           
   555                           ; 1 bytes @ 0x23
   556   000083                     	ds	4
   557   000087                     ___fladd@signs:
   558                           	callstack 0
   559                           
   560                           ; 1 bytes @ 0x27
   561   000087                     	ds	1
   562   000088                     ___fladd@aexp:
   563                           	callstack 0
   564                           
   565                           ; 1 bytes @ 0x28
   566   000088                     	ds	1
   567   000089                     ___fladd@bexp:
   568                           	callstack 0
   569                           
   570                           ; 1 bytes @ 0x29
   571   000089                     	ds	1
   572   00008A                     ___fladd@grs:
   573                           	callstack 0
   574                           
   575                           ; 1 bytes @ 0x2A
   576   00008A                     	ds	1
   577   00008B                     ?___flsub:
   578                           	callstack 0
   579   00008B                     ___flsub@b:
   580                           	callstack 0
   581                           
   582                           ; 4 bytes @ 0x2B
   583   00008B                     	ds	4
   584   00008F                     ___flsub@a:
   585                           	callstack 0
   586                           
   587                           ; 4 bytes @ 0x2F
   588   00008F                     	ds	4
   589   000093                     efgtoa@fp:
   590                           	callstack 0
   591                           
   592                           ; 2 bytes @ 0x33
   593   000093                     	ds	2
   594   000095                     efgtoa@f:
   595                           	callstack 0
   596                           
   597                           ; 4 bytes @ 0x35
   598   000095                     	ds	4
   599   000099                     efgtoa@c:
   600                           	callstack 0
   601                           
   602                           ; 1 bytes @ 0x39
   603   000099                     	ds	1
   604   00009A                     ??_efgtoa:
   605                           
   606                           ; 1 bytes @ 0x3A
   607   00009A                     	ds	2
   608   00009C                     efgtoa@ne:
   609                           	callstack 0
   610                           
   611                           ; 2 bytes @ 0x3C
   612   00009C                     	ds	2
   613   00009E                     efgtoa@p:
   614                           	callstack 0
   615                           
   616                           ; 2 bytes @ 0x3E
   617   00009E                     	ds	2
   618   0000A0                     efgtoa@t:
   619                           	callstack 0
   620                           
   621                           ; 2 bytes @ 0x40
   622   0000A0                     	ds	2
   623   0000A2                     _efgtoa$1777:
   624                           	callstack 0
   625                           
   626                           ; 2 bytes @ 0x42
   627   0000A2                     	ds	2
   628   0000A4                     efgtoa@pp:
   629                           	callstack 0
   630                           
   631                           ; 1 bytes @ 0x44
   632   0000A4                     	ds	1
   633   0000A5                     efgtoa@mode:
   634                           	callstack 0
   635                           
   636                           ; 1 bytes @ 0x45
   637   0000A5                     	ds	1
   638   0000A6                     efgtoa@nmode:
   639                           	callstack 0
   640                           
   641                           ; 1 bytes @ 0x46
   642   0000A6                     	ds	1
   643   0000A7                     efgtoa@d:
   644                           	callstack 0
   645                           
   646                           ; 2 bytes @ 0x47
   647   0000A7                     	ds	2
   648   0000A9                     efgtoa@m:
   649                           	callstack 0
   650                           
   651                           ; 2 bytes @ 0x49
   652   0000A9                     	ds	2
   653   0000AB                     efgtoa@e:
   654                           	callstack 0
   655                           
   656                           ; 2 bytes @ 0x4B
   657   0000AB                     	ds	2
   658   0000AD                     efgtoa@w:
   659                           	callstack 0
   660                           
   661                           ; 2 bytes @ 0x4D
   662   0000AD                     	ds	2
   663   0000AF                     efgtoa@ou:
   664                           	callstack 0
   665                           
   666                           ; 4 bytes @ 0x4F
   667   0000AF                     	ds	4
   668   0000B3                     efgtoa@i:
   669                           	callstack 0
   670                           
   671                           ; 2 bytes @ 0x53
   672   0000B3                     	ds	2
   673   0000B5                     efgtoa@h:
   674                           	callstack 0
   675                           
   676                           ; 4 bytes @ 0x55
   677   0000B5                     	ds	4
   678   0000B9                     efgtoa@l:
   679                           	callstack 0
   680                           
   681                           ; 4 bytes @ 0x59
   682   0000B9                     	ds	4
   683   0000BD                     efgtoa@sign:
   684                           	callstack 0
   685                           
   686                           ; 1 bytes @ 0x5D
   687   0000BD                     	ds	1
   688   0000BE                     efgtoa@g:
   689                           	callstack 0
   690                           
   691                           ; 4 bytes @ 0x5E
   692   0000BE                     	ds	4
   693   0000C2                     efgtoa@n:
   694                           	callstack 0
   695                           
   696                           ; 2 bytes @ 0x62
   697   0000C2                     	ds	2
   698   0000C4                     efgtoa@u:
   699                           	callstack 0
   700                           
   701                           ; 4 bytes @ 0x64
   702   0000C4                     	ds	4
   703   0000C8                     vfpfcnvrt@fp:
   704                           	callstack 0
   705                           
   706                           ; 2 bytes @ 0x68
   707   0000C8                     	ds	2
   708   0000CA                     vfpfcnvrt@fmt:
   709                           	callstack 0
   710                           
   711                           ; 2 bytes @ 0x6A
   712   0000CA                     	ds	2
   713   0000CC                     vfpfcnvrt@ap:
   714                           	callstack 0
   715                           
   716                           ; 2 bytes @ 0x6C
   717   0000CC                     	ds	2
   718   0000CE                     ??_vfpfcnvrt:
   719                           
   720                           ; 1 bytes @ 0x6E
   721   0000CE                     	ds	3
   722   0000D1                     vfpfcnvrt@convarg:
   723                           	callstack 0
   724                           
   725                           ; 8 bytes @ 0x71
   726   0000D1                     	ds	8
   727   0000D9                     vfpfcnvrt@c:
   728                           	callstack 0
   729                           
   730                           ; 1 bytes @ 0x79
   731   0000D9                     	ds	1
   732   0000DA                     vfpfcnvrt@cp:
   733                           	callstack 0
   734                           
   735                           ; 2 bytes @ 0x7A
   736   0000DA                     	ds	2
   737   0000DC                     ?_vfprintf:
   738                           	callstack 0
   739   0000DC                     vfprintf@fp:
   740                           	callstack 0
   741                           
   742                           ; 2 bytes @ 0x7C
   743   0000DC                     	ds	2
   744   0000DE                     vfprintf@fmt:
   745                           	callstack 0
   746                           
   747                           ; 2 bytes @ 0x7E
   748   0000DE                     	ds	2
   749   0000E0                     vfprintf@ap:
   750                           	callstack 0
   751                           
   752                           ; 2 bytes @ 0x80
   753   0000E0                     	ds	2
   754   0000E2                     vfprintf@cfmt:
   755                           	callstack 0
   756                           
   757                           ; 2 bytes @ 0x82
   758   0000E2                     	ds	2
   759                           
   760                           	psect	cstackCOMRAM
   761   000001                     __pcstackCOMRAM:
   762                           	callstack 0
   763   000001                     USART_printChar@caracter:
   764                           	callstack 0
   765                           
   766                           ; 1 bytes @ 0x0
   767   000001                     	ds	1
   768   000002                     USART_printString@Ptr_string:
   769                           	callstack 0
   770                           
   771                           ; 2 bytes @ 0x1
   772   000002                     	ds	2
   773   000004                     ??_ISR_H:
   774                           
   775                           ; 1 bytes @ 0x3
   776   000004                     	ds	6
   777   00000A                     i1Lcd_Port@a:
   778                           	callstack 0
   779                           
   780                           ; 1 bytes @ 0x9
   781   00000A                     	ds	1
   782   00000B                     ??i1_Lcd_Cmd:
   783   00000B                     i1Lcd_Write_Char@temp:
   784                           	callstack 0
   785                           
   786                           ; 1 bytes @ 0xA
   787   00000B                     	ds	1
   788   00000C                     i1Lcd_Cmd@a:
   789                           	callstack 0
   790   00000C                     i1Lcd_Write_Char@y:
   791                           	callstack 0
   792                           
   793                           ; 1 bytes @ 0xB
   794   00000C                     	ds	1
   795   00000D                     i1Lcd_Set_Cursor@b:
   796                           	callstack 0
   797   00000D                     i1Lcd_Write_Char@a:
   798                           	callstack 0
   799                           
   800                           ; 1 bytes @ 0xC
   801   00000D                     	ds	1
   802   00000E                     i1Lcd_Set_Cursor@a:
   803                           	callstack 0
   804   00000E                     i1Lcd_Write_String@a:
   805                           	callstack 0
   806                           
   807                           ; 2 bytes @ 0xD
   808   00000E                     	ds	1
   809   00000F                     i1Lcd_Set_Cursor@z:
   810                           	callstack 0
   811                           
   812                           ; 1 bytes @ 0xE
   813   00000F                     	ds	1
   814   000010                     ??i1_Lcd_Write_String:
   815   000010                     i1Lcd_Set_Cursor@y:
   816                           	callstack 0
   817                           
   818                           ; 1 bytes @ 0xF
   819   000010                     	ds	1
   820   000011                     i1Lcd_Set_Cursor@temp:
   821                           	callstack 0
   822                           
   823                           ; 1 bytes @ 0x10
   824   000011                     	ds	1
   825   000012                     i1Lcd_Write_String@i:
   826                           	callstack 0
   827                           
   828                           ; 2 bytes @ 0x11
   829   000012                     	ds	2
   830   000014                     ??_ISR_L:
   831                           
   832                           ; 1 bytes @ 0x13
   833   000014                     	ds	7
   834   00001B                     ?___fpclassifyf:
   835                           	callstack 0
   836   00001B                     ?_isdigit:
   837                           	callstack 0
   838   00001B                     ?_isspace:
   839                           	callstack 0
   840   00001B                     ?_ADC_Read:
   841                           	callstack 0
   842   00001B                     ?___wmul:
   843                           	callstack 0
   844   00001B                     ?___fldiv:
   845                           	callstack 0
   846   00001B                     ?_labs:
   847                           	callstack 0
   848   00001B                     ?___lldiv:
   849                           	callstack 0
   850   00001B                     ?___flneg:
   851                           	callstack 0
   852   00001B                     ?___fltol:
   853                           	callstack 0
   854   00001B                     putch@c:
   855                           	callstack 0
   856   00001B                     Lcd_Port@a:
   857                           	callstack 0
   858   00001B                     ___wmul@multiplier:
   859                           	callstack 0
   860   00001B                     isdigit@c:
   861                           	callstack 0
   862   00001B                     isspace@c:
   863                           	callstack 0
   864   00001B                     memcpy@d1:
   865                           	callstack 0
   866   00001B                     strcpy@dest:
   867                           	callstack 0
   868   00001B                     ___lldiv@dividend:
   869                           	callstack 0
   870   00001B                     ___fleq@ff1:
   871                           	callstack 0
   872   00001B                     ___flneg@f1:
   873                           	callstack 0
   874   00001B                     ___fltol@f1:
   875                           	callstack 0
   876   00001B                     ___fldiv@b:
   877                           	callstack 0
   878   00001B                     ___fpclassifyf@x:
   879                           	callstack 0
   880   00001B                     labs@a:
   881                           	callstack 0
   882                           
   883                           ; 4 bytes @ 0x1A
   884   00001B                     	ds	1
   885   00001C                     ??_Lcd_Cmd:
   886   00001C                     Lcd_Write_Char@temp:
   887                           	callstack 0
   888   00001C                     fputc@c:
   889                           	callstack 0
   890                           
   891                           ; 2 bytes @ 0x1B
   892   00001C                     	ds	1
   893   00001D                     ??_isdigit:
   894   00001D                     ??_isspace:
   895   00001D                     ??_ADC_Read:
   896   00001D                     Lcd_Cmd@a:
   897                           	callstack 0
   898   00001D                     Lcd_Write_Char@y:
   899                           	callstack 0
   900   00001D                     ___wmul@multiplicand:
   901                           	callstack 0
   902   00001D                     memcpy@s1:
   903                           	callstack 0
   904   00001D                     strcpy@src:
   905                           	callstack 0
   906                           
   907                           ; 2 bytes @ 0x1C
   908   00001D                     	ds	1
   909   00001E                     ??_Lcd_Init:
   910   00001E                     Lcd_Set_Cursor@b:
   911                           	callstack 0
   912   00001E                     Lcd_Write_Char@a:
   913                           	callstack 0
   914   00001E                     fputc@fp:
   915                           	callstack 0
   916                           
   917                           ; 2 bytes @ 0x1D
   918   00001E                     	ds	1
   919   00001F                     ??___fpclassifyf:
   920   00001F                     ??_labs:
   921   00001F                     ??___fltol:
   922   00001F                     Lcd_Set_Cursor@a:
   923                           	callstack 0
   924   00001F                     ADC_Read@channel:
   925                           	callstack 0
   926   00001F                     _isspace$1855:
   927                           	callstack 0
   928   00001F                     Lcd_Write_String@a:
   929                           	callstack 0
   930   00001F                     ___wmul@product:
   931                           	callstack 0
   932   00001F                     memcpy@n:
   933                           	callstack 0
   934   00001F                     strcpy@s:
   935                           	callstack 0
   936   00001F                     ___lldiv@divisor:
   937                           	callstack 0
   938   00001F                     ___fleq@ff2:
   939                           	callstack 0
   940   00001F                     ___fldiv@a:
   941                           	callstack 0
   942                           
   943                           ; 4 bytes @ 0x1E
   944   00001F                     	ds	1
   945   000020                     ??_fputc:
   946   000020                     ?___xxtofl:
   947                           	callstack 0
   948   000020                     Lcd_Set_Cursor@z:
   949                           	callstack 0
   950   000020                     ___xxtofl@val:
   951                           	callstack 0
   952                           
   953                           ; 4 bytes @ 0x1F
   954   000020                     	ds	1
   955   000021                     ??_Lcd_Write_String:
   956   000021                     ?_atoi:
   957                           	callstack 0
   958   000021                     Lcd_Set_Cursor@y:
   959                           	callstack 0
   960   000021                     memcpy@tmp:
   961                           	callstack 0
   962   000021                     atoi@s:
   963                           	callstack 0
   964   000021                     strcpy@d:
   965                           	callstack 0
   966                           
   967                           ; 2 bytes @ 0x20
   968   000021                     	ds	1
   969   000022                     Lcd_Set_Cursor@temp:
   970                           	callstack 0
   971   000022                     memcpy@d:
   972                           	callstack 0
   973                           
   974                           ; 2 bytes @ 0x21
   975   000022                     	ds	1
   976   000023                     ??___fldiv:
   977   000023                     ??_atoi:
   978   000023                     ??___fleq:
   979   000023                     ___fltol@sign1:
   980                           	callstack 0
   981   000023                     Lcd_Write_String@i:
   982                           	callstack 0
   983   000023                     ___fpclassifyf@e:
   984                           	callstack 0
   985   000023                     ___lldiv@quotient:
   986                           	callstack 0
   987                           
   988                           ; 4 bytes @ 0x22
   989   000023                     	ds	1
   990   000024                     ??___xxtofl:
   991   000024                     ___fltol@exp1:
   992                           	callstack 0
   993   000024                     memcpy@s:
   994                           	callstack 0
   995                           
   996                           ; 2 bytes @ 0x23
   997   000024                     	ds	1
   998   000025                     fputs@s:
   999                           	callstack 0
  1000   000025                     ___fpclassifyf@u:
  1001                           	callstack 0
  1002                           
  1003                           ; 4 bytes @ 0x24
  1004   000025                     	ds	1
  1005   000026                     atoi@neg:
  1006                           	callstack 0
  1007                           
  1008                           ; 2 bytes @ 0x25
  1009   000026                     	ds	1
  1010   000027                     ?_floorf:
  1011                           	callstack 0
  1012   000027                     ___lldiv@counter:
  1013                           	callstack 0
  1014   000027                     fputs@fp:
  1015                           	callstack 0
  1016   000027                     floorf@x:
  1017                           	callstack 0
  1018                           
  1019                           ; 4 bytes @ 0x26
  1020   000027                     	ds	1
  1021   000028                     ??___flmul:
  1022   000028                     atoi@n:
  1023                           	callstack 0
  1024   000028                     USART_init@baudios:
  1025                           	callstack 0
  1026                           
  1027                           ; 4 bytes @ 0x27
  1028   000028                     	ds	1
  1029   000029                     fputs@c:
  1030                           	callstack 0
  1031                           
  1032                           ; 1 bytes @ 0x28
  1033   000029                     	ds	1
  1034   00002A                     fputs@i:
  1035                           	callstack 0
  1036                           
  1037                           ; 2 bytes @ 0x29
  1038   00002A                     	ds	2
  1039   00002C                     
  1040                           ; 1 bytes @ 0x2B
  1041 ;;
  1042 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1043 ;;
  1044 ;; *************** function _main *****************
  1045 ;; Defined at:
  1046 ;;		line 35 in file "main.c"
  1047 ;; Parameters:    Size  Location     Type
  1048 ;;		None
  1049 ;; Auto vars:     Size  Location     Type
  1050 ;;		None
  1051 ;; Return value:  Size  Location     Type
  1052 ;;                  2  204[None  ] int 
  1053 ;; Registers used:
  1054 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1055 ;; Tracked objects:
  1056 ;;		On entry : 0/0
  1057 ;;		On exit  : 0/0
  1058 ;;		Unchanged: 0/0
  1059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1060 ;;      Params:         0       0       0       0       0       0       0       0       0
  1061 ;;      Locals:         0       0       4       0       0       0       0       0       0
  1062 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1063 ;;      Totals:         0       0       4       0       0       0       0       0       0
  1064 ;;Total ram usage:        4 bytes
  1065 ;; Hardware stack levels required when called: 16
  1066 ;; This function calls:
  1067 ;;		_ADC_Init
  1068 ;;		_ADC_Read
  1069 ;;		_Init_Cargas
  1070 ;;		_Lcd_Clear
  1071 ;;		_Lcd_Init
  1072 ;;		_USART_init
  1073 ;;		___fladd
  1074 ;;		___flmul
  1075 ;;		___xxtofl
  1076 ;;		_config_TMR0_16bits_Temporizador
  1077 ;;		_config_clock
  1078 ;;		_config_interrup_usart_timer0
  1079 ;;		_config_port
  1080 ;;		_sprintf
  1081 ;; This function is called by:
  1082 ;;		Startup code after reset
  1083 ;; This function uses a non-reentrant model
  1084 ;;
  1085                           
  1086                           	psect	text0
  1087   002222                     __ptext0:
  1088                           	callstack 0
  1089   002222                     _main:
  1090                           	callstack 15
  1091   002222                     
  1092                           ;main.c: 36:     config_clock();
  1093   002222  EC04  F01C         	call	_config_clock	;wreg free
  1094                           
  1095                           ;main.c: 37:     config_port();
  1096   002226  EC94  F01B         	call	_config_port	;wreg free
  1097   00222A                     
  1098                           ;main.c: 38:     USART_init(9600);
  1099   00222A  0E80               	movlw	128
  1100   00222C  6E28               	movwf	USART_init@baudios^0,c
  1101   00222E  0E25               	movlw	37
  1102   002230  6E29               	movwf	(USART_init@baudios+1)^0,c
  1103   002232  0E00               	movlw	0
  1104   002234  6E2A               	movwf	(USART_init@baudios+2)^0,c
  1105   002236  0E00               	movlw	0
  1106   002238  6E2B               	movwf	(USART_init@baudios+3)^0,c
  1107   00223A  ECBB  F017         	call	_USART_init	;wreg free
  1108   00223E                     
  1109                           ;main.c: 39:     ADC_Init();
  1110   00223E  ECC7  F01B         	call	_ADC_Init	;wreg free
  1111   002242                     
  1112                           ;main.c: 40:     Lcd_Init();
  1113   002242  EC81  F017         	call	_Lcd_Init	;wreg free
  1114   002246                     
  1115                           ;main.c: 41:     Lcd_Clear();
  1116   002246  EC0B  F01C         	call	_Lcd_Clear	;wreg free
  1117   00224A                     
  1118                           ;main.c: 42:     Init_Cargas();
  1119   00224A  ECA0  F01A         	call	_Init_Cargas	;wreg free
  1120   00224E                     
  1121                           ;main.c: 43:     config_interrup_usart_timer0();
  1122   00224E  ECFA  F01B         	call	_config_interrup_usart_timer0	;wreg free
  1123   002252                     
  1124                           ;main.c: 44:     config_TMR0_16bits_Temporizador();
  1125   002252  ECD6  F01B         	call	_config_TMR0_16bits_Temporizador	;wreg free
  1126   002256                     l5720:
  1127                           
  1128                           ;main.c: 46:         temp_lm35=((ADC_Read(_ADC_0)*(5.0/1024))*100);
  1129   002256  0E00               	movlw	0
  1130   002258  0100               	movlb	0	; () banked
  1131   00225A  6F6A               	movwf	___flmul@a& (0+255),b
  1132   00225C  0E00               	movlw	0
  1133   00225E  6F6B               	movwf	(___flmul@a+1)& (0+255),b
  1134   002260  0EA0               	movlw	160
  1135   002262  6F6C               	movwf	(___flmul@a+2)& (0+255),b
  1136   002264  0E3B               	movlw	59
  1137   002266  6F6D               	movwf	(___flmul@a+3)& (0+255),b
  1138   002268  0E00               	movlw	0
  1139   00226A  EC1A  F01B         	call	_ADC_Read
  1140   00226E  C01B  F020         	movff	?_ADC_Read,___xxtofl@val
  1141   002272  C01C  F021         	movff	?_ADC_Read+1,___xxtofl@val+1
  1142   002276  6A22               	clrf	(___xxtofl@val+2)^0,c
  1143   002278  6A23               	clrf	(___xxtofl@val+3)^0,c
  1144   00227A  0E00               	movlw	0
  1145   00227C  EC30  F013         	call	___xxtofl
  1146   002280  C020  F066         	movff	?___xxtofl,___flmul@b
  1147   002284  C021  F067         	movff	?___xxtofl+1,___flmul@b+1
  1148   002288  C022  F068         	movff	?___xxtofl+2,___flmul@b+2
  1149   00228C  C023  F069         	movff	?___xxtofl+3,___flmul@b+3
  1150   002290  ECA1  F00B         	call	___flmul	;wreg free
  1151   002294  C066  F179         	movff	?___flmul,_main$2134
  1152   002298  C067  F17A         	movff	?___flmul+1,_main$2134+1
  1153   00229C  C068  F17B         	movff	?___flmul+2,_main$2134+2
  1154   0022A0  C069  F17C         	movff	?___flmul+3,_main$2134+3
  1155   0022A4                     
  1156                           ;main.c: 46:         temp_lm35=((ADC_Read(_ADC_0)*(5.0/1024))*100);
  1157   0022A4  C179  F066         	movff	_main$2134,___flmul@b
  1158   0022A8  C17A  F067         	movff	_main$2134+1,___flmul@b+1
  1159   0022AC  C17B  F068         	movff	_main$2134+2,___flmul@b+2
  1160   0022B0  C17C  F069         	movff	_main$2134+3,___flmul@b+3
  1161   0022B4  0E00               	movlw	0
  1162   0022B6  0100               	movlb	0	; () banked
  1163   0022B8  6F6A               	movwf	___flmul@a& (0+255),b
  1164   0022BA  0E00               	movlw	0
  1165   0022BC  6F6B               	movwf	(___flmul@a+1)& (0+255),b
  1166   0022BE  0EC8               	movlw	200
  1167   0022C0  6F6C               	movwf	(___flmul@a+2)& (0+255),b
  1168   0022C2  0E42               	movlw	66
  1169   0022C4  6F6D               	movwf	(___flmul@a+3)& (0+255),b
  1170   0022C6  ECA1  F00B         	call	___flmul	;wreg free
  1171   0022CA  C066  F0EC         	movff	?___flmul,_temp_lm35
  1172   0022CE  C067  F0ED         	movff	?___flmul+1,_temp_lm35+1
  1173   0022D2  C068  F0EE         	movff	?___flmul+2,_temp_lm35+2
  1174   0022D6  C069  F0EF         	movff	?___flmul+3,_temp_lm35+3
  1175   0022DA                     
  1176                           ;main.c: 47:         temp_mcp=(((ADC_Read(_ADC_1)*(5.0/1024))-0.5)*100);
  1177   0022DA  0E00               	movlw	0
  1178   0022DC  0100               	movlb	0	; () banked
  1179   0022DE  6F7F               	movwf	___fladd@a& (0+255),b
  1180   0022E0  0E00               	movlw	0
  1181   0022E2  6F80               	movwf	(___fladd@a+1)& (0+255),b
  1182   0022E4  0E00               	movlw	0
  1183   0022E6  6F81               	movwf	(___fladd@a+2)& (0+255),b
  1184   0022E8  0EBF               	movlw	191
  1185   0022EA  6F82               	movwf	(___fladd@a+3)& (0+255),b
  1186   0022EC  0E00               	movlw	0
  1187   0022EE  6F6A               	movwf	___flmul@a& (0+255),b
  1188   0022F0  0E00               	movlw	0
  1189   0022F2  6F6B               	movwf	(___flmul@a+1)& (0+255),b
  1190   0022F4  0EA0               	movlw	160
  1191   0022F6  6F6C               	movwf	(___flmul@a+2)& (0+255),b
  1192   0022F8  0E3B               	movlw	59
  1193   0022FA  6F6D               	movwf	(___flmul@a+3)& (0+255),b
  1194   0022FC  0E01               	movlw	1
  1195   0022FE  EC1A  F01B         	call	_ADC_Read
  1196   002302  C01B  F020         	movff	?_ADC_Read,___xxtofl@val
  1197   002306  C01C  F021         	movff	?_ADC_Read+1,___xxtofl@val+1
  1198   00230A  6A22               	clrf	(___xxtofl@val+2)^0,c
  1199   00230C  6A23               	clrf	(___xxtofl@val+3)^0,c
  1200   00230E  0E00               	movlw	0
  1201   002310  EC30  F013         	call	___xxtofl
  1202   002314  C020  F066         	movff	?___xxtofl,___flmul@b
  1203   002318  C021  F067         	movff	?___xxtofl+1,___flmul@b+1
  1204   00231C  C022  F068         	movff	?___xxtofl+2,___flmul@b+2
  1205   002320  C023  F069         	movff	?___xxtofl+3,___flmul@b+3
  1206   002324  ECA1  F00B         	call	___flmul	;wreg free
  1207   002328  C066  F07B         	movff	?___flmul,___fladd@b
  1208   00232C  C067  F07C         	movff	?___flmul+1,___fladd@b+1
  1209   002330  C068  F07D         	movff	?___flmul+2,___fladd@b+2
  1210   002334  C069  F07E         	movff	?___flmul+3,___fladd@b+3
  1211   002338  EC40  F009         	call	___fladd	;wreg free
  1212   00233C  C07B  F179         	movff	?___fladd,_main$2134
  1213   002340  C07C  F17A         	movff	?___fladd+1,_main$2134+1
  1214   002344  C07D  F17B         	movff	?___fladd+2,_main$2134+2
  1215   002348  C07E  F17C         	movff	?___fladd+3,_main$2134+3
  1216   00234C                     
  1217                           ;main.c: 47:         temp_mcp=(((ADC_Read(_ADC_1)*(5.0/1024))-0.5)*100);
  1218   00234C  C179  F066         	movff	_main$2134,___flmul@b
  1219   002350  C17A  F067         	movff	_main$2134+1,___flmul@b+1
  1220   002354  C17B  F068         	movff	_main$2134+2,___flmul@b+2
  1221   002358  C17C  F069         	movff	_main$2134+3,___flmul@b+3
  1222   00235C  0E00               	movlw	0
  1223   00235E  0100               	movlb	0	; () banked
  1224   002360  6F6A               	movwf	___flmul@a& (0+255),b
  1225   002362  0E00               	movlw	0
  1226   002364  6F6B               	movwf	(___flmul@a+1)& (0+255),b
  1227   002366  0EC8               	movlw	200
  1228   002368  6F6C               	movwf	(___flmul@a+2)& (0+255),b
  1229   00236A  0E42               	movlw	66
  1230   00236C  6F6D               	movwf	(___flmul@a+3)& (0+255),b
  1231   00236E  ECA1  F00B         	call	___flmul	;wreg free
  1232   002372  C066  F0E8         	movff	?___flmul,_temp_mcp
  1233   002376  C067  F0E9         	movff	?___flmul+1,_temp_mcp+1
  1234   00237A  C068  F0EA         	movff	?___flmul+2,_temp_mcp+2
  1235   00237E  C069  F0EB         	movff	?___flmul+3,_temp_mcp+3
  1236   002382                     
  1237                           ;main.c: 48:         v1=(ADC_Read(_ADC_2)*(5.0/1024));
  1238   002382  0E02               	movlw	2
  1239   002384  EC1A  F01B         	call	_ADC_Read
  1240   002388  C01B  F020         	movff	?_ADC_Read,___xxtofl@val
  1241   00238C  C01C  F021         	movff	?_ADC_Read+1,___xxtofl@val+1
  1242   002390  6A22               	clrf	(___xxtofl@val+2)^0,c
  1243   002392  6A23               	clrf	(___xxtofl@val+3)^0,c
  1244   002394  0E00               	movlw	0
  1245   002396  EC30  F013         	call	___xxtofl
  1246   00239A  C020  F066         	movff	?___xxtofl,___flmul@b
  1247   00239E  C021  F067         	movff	?___xxtofl+1,___flmul@b+1
  1248   0023A2  C022  F068         	movff	?___xxtofl+2,___flmul@b+2
  1249   0023A6  C023  F069         	movff	?___xxtofl+3,___flmul@b+3
  1250   0023AA  0E00               	movlw	0
  1251   0023AC  0100               	movlb	0	; () banked
  1252   0023AE  6F6A               	movwf	___flmul@a& (0+255),b
  1253   0023B0  0E00               	movlw	0
  1254   0023B2  6F6B               	movwf	(___flmul@a+1)& (0+255),b
  1255   0023B4  0EA0               	movlw	160
  1256   0023B6  6F6C               	movwf	(___flmul@a+2)& (0+255),b
  1257   0023B8  0E3B               	movlw	59
  1258   0023BA  6F6D               	movwf	(___flmul@a+3)& (0+255),b
  1259   0023BC  ECA1  F00B         	call	___flmul	;wreg free
  1260   0023C0  C066  F0E4         	movff	?___flmul,_v1
  1261   0023C4  C067  F0E5         	movff	?___flmul+1,_v1+1
  1262   0023C8  C068  F0E6         	movff	?___flmul+2,_v1+2
  1263   0023CC  C069  F0E7         	movff	?___flmul+3,_v1+3
  1264   0023D0                     
  1265                           ;main.c: 50:         sprintf(Str_lm35,"%.2f",temp_lm35);
  1266   0023D0  0EF5               	movlw	low _Str_lm35
  1267   0023D2  0101               	movlb	1	; () banked
  1268   0023D4  6F64               	movwf	sprintf@s& (0+255),b
  1269   0023D6  0E00               	movlw	high _Str_lm35
  1270   0023D8  6F65               	movwf	(sprintf@s+1)& (0+255),b
  1271   0023DA  0E74               	movlw	low STR_1
  1272   0023DC  6F66               	movwf	sprintf@fmt& (0+255),b
  1273   0023DE  0E08               	movlw	high STR_1
  1274   0023E0  6F67               	movwf	(sprintf@fmt+1)& (0+255),b
  1275   0023E2  C0EC  F168         	movff	_temp_lm35,?_sprintf+4
  1276   0023E6  C0ED  F169         	movff	_temp_lm35+1,?_sprintf+5
  1277   0023EA  C0EE  F16A         	movff	_temp_lm35+2,?_sprintf+6
  1278   0023EE  C0EF  F16B         	movff	_temp_lm35+3,?_sprintf+7
  1279   0023F2  EC94  F019         	call	_sprintf	;wreg free
  1280   0023F6                     
  1281                           ;main.c: 51:         sprintf(Str_mcp,"%.2f",temp_mcp);
  1282   0023F6  0E3D               	movlw	low _Str_mcp
  1283   0023F8  0101               	movlb	1	; () banked
  1284   0023FA  6F64               	movwf	sprintf@s& (0+255),b
  1285   0023FC  0E00               	movlw	high _Str_mcp
  1286   0023FE  6F65               	movwf	(sprintf@s+1)& (0+255),b
  1287   002400  0E74               	movlw	low STR_1
  1288   002402  6F66               	movwf	sprintf@fmt& (0+255),b
  1289   002404  0E08               	movlw	high STR_1
  1290   002406  6F67               	movwf	(sprintf@fmt+1)& (0+255),b
  1291   002408  C0E8  F168         	movff	_temp_mcp,?_sprintf+4
  1292   00240C  C0E9  F169         	movff	_temp_mcp+1,?_sprintf+5
  1293   002410  C0EA  F16A         	movff	_temp_mcp+2,?_sprintf+6
  1294   002414  C0EB  F16B         	movff	_temp_mcp+3,?_sprintf+7
  1295   002418  EC94  F019         	call	_sprintf	;wreg free
  1296   00241C                     
  1297                           ;main.c: 52:         sprintf(Str_v1,"%.2f",v1);
  1298   00241C  0E35               	movlw	low _Str_v1
  1299   00241E  0101               	movlb	1	; () banked
  1300   002420  6F64               	movwf	sprintf@s& (0+255),b
  1301   002422  0E00               	movlw	high _Str_v1
  1302   002424  6F65               	movwf	(sprintf@s+1)& (0+255),b
  1303   002426  0E74               	movlw	low STR_1
  1304   002428  6F66               	movwf	sprintf@fmt& (0+255),b
  1305   00242A  0E08               	movlw	high STR_1
  1306   00242C  6F67               	movwf	(sprintf@fmt+1)& (0+255),b
  1307   00242E  C0E4  F168         	movff	_v1,?_sprintf+4
  1308   002432  C0E5  F169         	movff	_v1+1,?_sprintf+5
  1309   002436  C0E6  F16A         	movff	_v1+2,?_sprintf+6
  1310   00243A  C0E7  F16B         	movff	_v1+3,?_sprintf+7
  1311   00243E  EC94  F019         	call	_sprintf	;wreg free
  1312   002442  EF2B  F011         	goto	l5720
  1313   002446  EF1D  F001         	goto	start
  1314   00244A                     __end_of_main:
  1315                           	callstack 0
  1316                           
  1317 ;; *************** function _sprintf *****************
  1318 ;; Defined at:
  1319 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  1320 ;; Parameters:    Size  Location     Type
  1321 ;;  s               2    0[BANK1 ] PTR unsigned char 
  1322 ;;		 -> Str_v1(8), Str_mcp(8), Str_lm35(8), 
  1323 ;;  fmt             2    2[BANK1 ] PTR const unsigned char 
  1324 ;;		 -> STR_3(5), STR_2(5), STR_1(5), 
  1325 ;; Auto vars:     Size  Location     Type
  1326 ;;  f              11   10[BANK1 ] struct _IO_FILE
  1327 ;;  ap              2    8[BANK1 ] PTR void [1]
  1328 ;;		 -> ?_sprintf(2), 
  1329 ;;  ret             2    0        int 
  1330 ;; Return value:  Size  Location     Type
  1331 ;;                  2    0[BANK1 ] int 
  1332 ;; Registers used:
  1333 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1334 ;; Tracked objects:
  1335 ;;		On entry : 0/0
  1336 ;;		On exit  : 0/0
  1337 ;;		Unchanged: 0/0
  1338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1339 ;;      Params:         0       0       8       0       0       0       0       0       0
  1340 ;;      Locals:         0       0      13       0       0       0       0       0       0
  1341 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1342 ;;      Totals:         0       0      21       0       0       0       0       0       0
  1343 ;;Total ram usage:       21 bytes
  1344 ;; Hardware stack levels used: 1
  1345 ;; Hardware stack levels required when called: 15
  1346 ;; This function calls:
  1347 ;;		_vfprintf
  1348 ;; This function is called by:
  1349 ;;		_main
  1350 ;; This function uses a non-reentrant model
  1351 ;;
  1352                           
  1353                           	psect	text1
  1354   003328                     __ptext1:
  1355                           	callstack 0
  1356   003328                     _sprintf:
  1357                           	callstack 15
  1358   003328  0E68               	movlw	low (?_sprintf+4)
  1359   00332A  0101               	movlb	1	; () banked
  1360   00332C  6F6C               	movwf	sprintf@ap& (0+255),b
  1361   00332E  0E01               	movlw	high (?_sprintf+4)
  1362   003330  6F6D               	movwf	(sprintf@ap+1)& (0+255),b
  1363   003332  C164  F16E         	movff	sprintf@s,sprintf@f
  1364   003336  C165  F16F         	movff	sprintf@s+1,sprintf@f+1
  1365   00333A                     
  1366                           ; BSR set to: 1
  1367   00333A  0E00               	movlw	0
  1368   00333C  6F72               	movwf	(sprintf@f+4)& (0+255),b
  1369   00333E  0E00               	movlw	0
  1370   003340  6F71               	movwf	(sprintf@f+3)& (0+255),b
  1371   003342                     
  1372                           ; BSR set to: 1
  1373   003342  0E00               	movlw	0
  1374   003344  6F78               	movwf	(sprintf@f+10)& (0+255),b
  1375   003346  0E00               	movlw	0
  1376   003348  6F77               	movwf	(sprintf@f+9)& (0+255),b
  1377   00334A                     
  1378                           ; BSR set to: 1
  1379   00334A  0E6E               	movlw	low sprintf@f
  1380   00334C  0100               	movlb	0	; () banked
  1381   00334E  6FDC               	movwf	vfprintf@fp& (0+255),b
  1382   003350  0E01               	movlw	high sprintf@f
  1383   003352  6FDD               	movwf	(vfprintf@fp+1)& (0+255),b
  1384   003354  C166  F0DE         	movff	sprintf@fmt,vfprintf@fmt
  1385   003358  C167  F0DF         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1386   00335C  0E6C               	movlw	low sprintf@ap
  1387   00335E  6FE0               	movwf	vfprintf@ap& (0+255),b
  1388   003360  0E01               	movlw	high sprintf@ap
  1389   003362  6FE1               	movwf	(vfprintf@ap+1)& (0+255),b
  1390   003364  ECBE  F019         	call	_vfprintf	;wreg free
  1391   003368  0101               	movlb	1	; () banked
  1392   00336A  5171               	movf	(sprintf@f+3)& (0+255),w,b
  1393   00336C  2564               	addwf	sprintf@s& (0+255),w,b
  1394   00336E  6ED9               	movwf	fsr2l,c
  1395   003370  5172               	movf	(sprintf@f+4)& (0+255),w,b
  1396   003372  2165               	addwfc	(sprintf@s+1)& (0+255),w,b
  1397   003374  6EDA               	movwf	fsr2h,c
  1398   003376  0E00               	movlw	0
  1399   003378  6EDF               	movwf	indf2,c
  1400   00337A                     
  1401                           ; BSR set to: 1
  1402   00337A  0012               	return		;funcret
  1403   00337C                     __end_of_sprintf:
  1404                           	callstack 0
  1405                           
  1406 ;; *************** function _vfprintf *****************
  1407 ;; Defined at:
  1408 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1409 ;; Parameters:    Size  Location     Type
  1410 ;;  fp              2  124[BANK0 ] PTR struct _IO_FILE
  1411 ;;		 -> sprintf@f(11), 
  1412 ;;  fmt             2  126[BANK0 ] PTR const unsigned char 
  1413 ;;		 -> STR_3(5), STR_2(5), STR_1(5), 
  1414 ;;  ap              2  128[BANK0 ] PTR PTR void 
  1415 ;;		 -> sprintf@ap(2), 
  1416 ;; Auto vars:     Size  Location     Type
  1417 ;;  cfmt            2  130[BANK0 ] PTR unsigned char 
  1418 ;;		 -> STR_3(5), STR_2(5), STR_1(5), 
  1419 ;; Return value:  Size  Location     Type
  1420 ;;                  2  124[BANK0 ] int 
  1421 ;; Registers used:
  1422 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1423 ;; Tracked objects:
  1424 ;;		On entry : 0/0
  1425 ;;		On exit  : 0/0
  1426 ;;		Unchanged: 0/0
  1427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1428 ;;      Params:         0       6       0       0       0       0       0       0       0
  1429 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1430 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1431 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1432 ;;Total ram usage:        8 bytes
  1433 ;; Hardware stack levels used: 1
  1434 ;; Hardware stack levels required when called: 14
  1435 ;; This function calls:
  1436 ;;		_vfpfcnvrt
  1437 ;; This function is called by:
  1438 ;;		_sprintf
  1439 ;; This function uses a non-reentrant model
  1440 ;;
  1441                           
  1442                           	psect	text2
  1443   00337C                     __ptext2:
  1444                           	callstack 0
  1445   00337C                     _vfprintf:
  1446                           	callstack 15
  1447   00337C                     
  1448                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1449   00337C  C0DE  F0E2         	movff	vfprintf@fmt,vfprintf@cfmt
  1450   003380  C0DF  F0E3         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1451                           
  1452                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1453   003384  EFD3  F019         	goto	l5540
  1454   003388                     l5538:
  1455                           
  1456                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1457   003388  C0DC  F0C8         	movff	vfprintf@fp,vfpfcnvrt@fp
  1458   00338C  C0DD  F0C9         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1459   003390  0EE2               	movlw	low vfprintf@cfmt
  1460   003392  0100               	movlb	0	; () banked
  1461   003394  6FCA               	movwf	vfpfcnvrt@fmt& (0+255),b
  1462   003396  0E00               	movlw	high vfprintf@cfmt
  1463   003398  6FCB               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1464   00339A  C0E0  F0CC         	movff	vfprintf@ap,vfpfcnvrt@ap
  1465   00339E  C0E1  F0CD         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1466   0033A2  EC85  F00F         	call	_vfpfcnvrt	;wreg free
  1467   0033A6                     l5540:
  1468                           
  1469                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1470   0033A6  C0E2  FFF6         	movff	vfprintf@cfmt,tblptrl
  1471   0033AA  C0E3  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1472   0033AE                     	if	0	;tblptru may be non-zero
  1473   0033AE                     	endif
  1474   0033AE                     	if	0	;tblptru may be non-zero
  1475   0033AE                     	endif
  1476   0033AE  0008               	tblrd		*
  1477   0033B0  50F5               	movf	tablat,w,c
  1478   0033B2  0900               	iorlw	0
  1479   0033B4  A4D8               	btfss	status,2,c
  1480   0033B6  EFDF  F019         	goto	u6111
  1481   0033BA  EFE1  F019         	goto	u6110
  1482   0033BE                     u6111:
  1483   0033BE  EFC4  F019         	goto	l5538
  1484   0033C2                     u6110:
  1485   0033C2                     
  1486                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1487   0033C2  0E00               	movlw	0
  1488   0033C4  0100               	movlb	0	; () banked
  1489   0033C6  6FDD               	movwf	(?_vfprintf+1)& (0+255),b
  1490   0033C8  0E00               	movlw	0
  1491   0033CA  6FDC               	movwf	?_vfprintf& (0+255),b
  1492   0033CC                     
  1493                           ; BSR set to: 0
  1494   0033CC  0012               	return		;funcret
  1495   0033CE                     __end_of_vfprintf:
  1496                           	callstack 0
  1497                           
  1498 ;; *************** function _vfpfcnvrt *****************
  1499 ;; Defined at:
  1500 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1501 ;; Parameters:    Size  Location     Type
  1502 ;;  fp              2  104[BANK0 ] PTR struct _IO_FILE
  1503 ;;		 -> sprintf@f(11), 
  1504 ;;  fmt             2  106[BANK0 ] PTR PTR unsigned char 
  1505 ;;		 -> vfprintf@cfmt(2), 
  1506 ;;  ap              2  108[BANK0 ] PTR PTR void 
  1507 ;;		 -> sprintf@ap(2), 
  1508 ;; Auto vars:     Size  Location     Type
  1509 ;;  convarg         8  113[BANK0 ] struct .
  1510 ;;  cp              2  122[BANK0 ] PTR unsigned char 
  1511 ;;		 -> STR_3(5), STR_2(5), STR_1(5), 
  1512 ;;  i               2    0        int 
  1513 ;;  done            2    0        int 
  1514 ;;  c               1  121[BANK0 ] unsigned char 
  1515 ;; Return value:  Size  Location     Type
  1516 ;;                  1    wreg      void 
  1517 ;; Registers used:
  1518 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1519 ;; Tracked objects:
  1520 ;;		On entry : 0/0
  1521 ;;		On exit  : 0/0
  1522 ;;		Unchanged: 0/0
  1523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1524 ;;      Params:         0       6       0       0       0       0       0       0       0
  1525 ;;      Locals:         0      11       0       0       0       0       0       0       0
  1526 ;;      Temps:          0       3       0       0       0       0       0       0       0
  1527 ;;      Totals:         0      20       0       0       0       0       0       0       0
  1528 ;;Total ram usage:       20 bytes
  1529 ;; Hardware stack levels used: 1
  1530 ;; Hardware stack levels required when called: 13
  1531 ;; This function calls:
  1532 ;;		_atoi
  1533 ;;		_efgtoa
  1534 ;;		_fputc
  1535 ;;		_isdigit
  1536 ;; This function is called by:
  1537 ;;		_vfprintf
  1538 ;; This function uses a non-reentrant model
  1539 ;;
  1540                           
  1541                           	psect	text3
  1542   001F0A                     __ptext3:
  1543                           	callstack 0
  1544   001F0A                     _vfpfcnvrt:
  1545                           	callstack 15
  1546   001F0A                     
  1547                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1548   001F0A  C0CA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1549   001F0E  C0CB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1550   001F12  CFDE FFF6          	movff	postinc2,tblptrl
  1551   001F16  CFDD FFF7          	movff	postdec2,tblptrh
  1552   001F1A                     	if	0	;tblptru may be non-zero
  1553   001F1A                     	endif
  1554   001F1A                     	if	0	;tblptru may be non-zero
  1555   001F1A                     	endif
  1556   001F1A  0008               	tblrd		*
  1557   001F1C  50F5               	movf	tablat,w,c
  1558   001F1E  0A25               	xorlw	37
  1559   001F20  A4D8               	btfss	status,2,c
  1560   001F22  EF95  F00F         	goto	u6001
  1561   001F26  EF97  F00F         	goto	u6000
  1562   001F2A                     u6001:
  1563   001F2A  EFFC  F010         	goto	l5466
  1564   001F2E                     u6000:
  1565   001F2E                     
  1566                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1567   001F2E  C0CA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1568   001F32  C0CB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1569   001F36  2ADE               	incf	postinc2,f,c
  1570   001F38  0E00               	movlw	0
  1571   001F3A  22DD               	addwfc	postdec2,f,c
  1572   001F3C                     
  1573                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1574   001F3C  0E00               	movlw	0
  1575   001F3E  0100               	movlb	0	; () banked
  1576   001F40  6FF1               	movwf	(_width+1)& (0+255),b
  1577   001F42  0E00               	movlw	0
  1578   001F44  6FF0               	movwf	_width& (0+255),b
  1579   001F46  C0F0  F0F4         	movff	_width,_flags
  1580   001F4A                     
  1581                           ; BSR set to: 0
  1582                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1583   001F4A  69F2               	setf	_prec& (0+255),b
  1584   001F4C  69F3               	setf	(_prec+1)& (0+255),b
  1585   001F4E                     
  1586                           ; BSR set to: 0
  1587                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1091:         if 
      +                          ((*fmt)[0] == '.') {
  1588   001F4E  C0CA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1589   001F52  C0CB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1590   001F56  CFDE FFF6          	movff	postinc2,tblptrl
  1591   001F5A  CFDD FFF7          	movff	postdec2,tblptrh
  1592   001F5E                     	if	0	;tblptru may be non-zero
  1593   001F5E                     	endif
  1594   001F5E                     	if	0	;tblptru may be non-zero
  1595   001F5E                     	endif
  1596   001F5E  0008               	tblrd		*
  1597   001F60  50F5               	movf	tablat,w,c
  1598   001F62  0A2E               	xorlw	46
  1599   001F64  A4D8               	btfss	status,2,c
  1600   001F66  EFB7  F00F         	goto	u6011
  1601   001F6A  EFB9  F00F         	goto	u6010
  1602   001F6E                     u6011:
  1603   001F6E  EF27  F010         	goto	l5428
  1604   001F72                     u6010:
  1605   001F72                     
  1606                           ; BSR set to: 0
  1607                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1092:            
      +                           prec = 0;
  1608   001F72  0E00               	movlw	0
  1609   001F74  6FF3               	movwf	(_prec+1)& (0+255),b
  1610   001F76  0E00               	movlw	0
  1611   001F78  6FF2               	movwf	_prec& (0+255),b
  1612   001F7A                     
  1613                           ; BSR set to: 0
  1614                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1093:            
      +                           ++*fmt;
  1615   001F7A  C0CA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1616   001F7E  C0CB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1617   001F82  2ADE               	incf	postinc2,f,c
  1618   001F84  0E00               	movlw	0
  1619   001F86  22DD               	addwfc	postdec2,f,c
  1620   001F88                     
  1621                           ; BSR set to: 0
  1622                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1094:            
      +                           if ((*fmt)[0] == '*') {
  1623   001F88  C0CA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1624   001F8C  C0CB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1625   001F90  CFDE FFF6          	movff	postinc2,tblptrl
  1626   001F94  CFDD FFF7          	movff	postdec2,tblptrh
  1627   001F98                     	if	0	;tblptru may be non-zero
  1628   001F98                     	endif
  1629   001F98                     	if	0	;tblptru may be non-zero
  1630   001F98                     	endif
  1631   001F98  0008               	tblrd		*
  1632   001F9A  50F5               	movf	tablat,w,c
  1633   001F9C  0A2A               	xorlw	42
  1634   001F9E  A4D8               	btfss	status,2,c
  1635   001FA0  EFD4  F00F         	goto	u6021
  1636   001FA4  EFD6  F00F         	goto	u6020
  1637   001FA8                     u6021:
  1638   001FA8  EFF3  F00F         	goto	l5420
  1639   001FAC                     u6020:
  1640   001FAC                     
  1641                           ; BSR set to: 0
  1642                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1095:            
      +                               ++*fmt;
  1643   001FAC  C0CA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1644   001FB0  C0CB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1645   001FB4  2ADE               	incf	postinc2,f,c
  1646   001FB6  0E00               	movlw	0
  1647   001FB8  22DD               	addwfc	postdec2,f,c
  1648                           
  1649                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1096:            
      +                               prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1650   001FBA  C0CC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1651   001FBE  C0CD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1652   001FC2  CFDF F0CE          	movff	indf2,??_vfpfcnvrt
  1653   001FC6  0E02               	movlw	2
  1654   001FC8  26DE               	addwf	postinc2,f,c
  1655   001FCA  CFDF F0CF          	movff	indf2,??_vfpfcnvrt+1
  1656   001FCE  0E00               	movlw	0
  1657   001FD0  22DD               	addwfc	postdec2,f,c
  1658   001FD2  C0CE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1659   001FD6  C0CF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1660   001FDA  CFDE F0F2          	movff	postinc2,_prec
  1661   001FDE  CFDD F0F3          	movff	postdec2,_prec+1
  1662                           
  1663                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1097:            
      +                           } else {
  1664   001FE2  EF27  F010         	goto	l5428
  1665   001FE6                     l5420:
  1666                           
  1667                           ; BSR set to: 0
  1668                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1098:            
      +                               prec = atoi(*fmt);
  1669   001FE6  C0CA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1670   001FEA  C0CB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1671   001FEE  CFDE F021          	movff	postinc2,atoi@s
  1672   001FF2  CFDD F022          	movff	postdec2,atoi@s+1
  1673   001FF6  EC0C  F014         	call	_atoi	;wreg free
  1674   001FFA  C021  F0F2         	movff	?_atoi,_prec
  1675   001FFE  C022  F0F3         	movff	?_atoi+1,_prec+1
  1676                           
  1677                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1099:            
      +                               while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  1678   002002  EF0A  F010         	goto	l5426
  1679   002006                     l5422:
  1680                           
  1681                           ; BSR set to: 0
  1682                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1100:            
      +                                   ++*fmt;
  1683   002006  C0CA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1684   00200A  C0CB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1685   00200E  2ADE               	incf	postinc2,f,c
  1686   002010  0E00               	movlw	0
  1687   002012  22DD               	addwfc	postdec2,f,c
  1688   002014                     l5426:
  1689   002014  C0CA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1690   002018  C0CB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1691   00201C  CFDE FFF6          	movff	postinc2,tblptrl
  1692   002020  CFDD FFF7          	movff	postdec2,tblptrh
  1693   002024                     	if	0	;tblptru may be non-zero
  1694   002024                     	endif
  1695   002024                     	if	0	;tblptru may be non-zero
  1696   002024                     	endif
  1697   002024  0008               	tblrd		*
  1698   002026  CFF5 F0CE          	movff	tablat,??_vfpfcnvrt
  1699   00202A  0ED0               	movlw	208
  1700   00202C  0100               	movlb	0	; () banked
  1701   00202E  25CE               	addwf	??_vfpfcnvrt& (0+255),w,b
  1702   002030  6FCF               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  1703   002032  6BD0               	clrf	(??_vfpfcnvrt+2)& (0+255),b
  1704   002034  0EFF               	movlw	255
  1705   002036  23D0               	addwfc	(??_vfpfcnvrt+2)& (0+255),f,b
  1706   002038  51D0               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
  1707   00203A  E109               	bnz	u6030
  1708   00203C  0E0A               	movlw	10
  1709   00203E  5DCF               	subwf	(??_vfpfcnvrt+1)& (0+255),w,b
  1710   002040  A0D8               	btfss	status,0,c
  1711   002042  EF25  F010         	goto	u6031
  1712   002046  EF27  F010         	goto	u6030
  1713   00204A                     u6031:
  1714   00204A  EF03  F010         	goto	l5422
  1715   00204E                     u6030:
  1716   00204E                     l5428:
  1717                           
  1718                           ; BSR set to: 0
  1719                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1392:   cp = *fmt
      +                          ;
  1720   00204E  C0CA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1721   002052  C0CB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1722   002056  CFDE F0DA          	movff	postinc2,vfpfcnvrt@cp
  1723   00205A  CFDD F0DB          	movff	postdec2,vfpfcnvrt@cp+1
  1724   00205E                     
  1725                           ; BSR set to: 0
  1726                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1393:   c = *cp;
  1727   00205E  C0DA  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1728   002062  C0DB  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1729   002066                     	if	0	;tblptru may be non-zero
  1730   002066                     	endif
  1731   002066                     	if	0	;tblptru may be non-zero
  1732   002066                     	endif
  1733   002066  0008               	tblrd		*
  1734   002068  CFF5 F0D9          	movff	tablat,vfpfcnvrt@c
  1735                           
  1736                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1394:   switch(c)
      +                           {
  1737   00206C  EF44  F010         	goto	l5440
  1738   002070                     l5432:
  1739                           
  1740                           ; BSR set to: 0
  1741                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1398:     cp++;
  1742   002070  4BDA               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  1743   002072  2BDB               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  1744                           
  1745                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1399:     break;
  1746   002074  EF5D  F010         	goto	l5442
  1747   002078                     l5434:
  1748                           
  1749                           ; BSR set to: 0
  1750                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1424:     c = 'l'
      +                          ;
  1751   002078  0E6C               	movlw	108
  1752   00207A  6FD9               	movwf	vfpfcnvrt@c& (0+255),b
  1753                           
  1754                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1425:     break;
  1755   00207C  EF5D  F010         	goto	l5442
  1756   002080                     l5436:
  1757                           
  1758                           ; BSR set to: 0
  1759                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1427:     c = 0;
  1760   002080  0E00               	movlw	0
  1761   002082  6FD9               	movwf	vfpfcnvrt@c& (0+255),b
  1762                           
  1763                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1428:     break;
  1764   002084  EF5D  F010         	goto	l5442
  1765   002088                     l5440:
  1766                           
  1767                           ; BSR set to: 0
  1768   002088  51D9               	movf	vfpfcnvrt@c& (0+255),w,b
  1769   00208A  6FCE               	movwf	??_vfpfcnvrt& (0+255),b
  1770   00208C  6BCF               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  1771                           
  1772                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1773                           ; Switch size 1, requested type "simple"
  1774                           ; Number of cases is 1, Range of values is 0 to 0
  1775                           ; switch strategies available:
  1776                           ; Name         Instructions Cycles
  1777                           ; simple_byte            4     3 (average)
  1778                           ;	Chosen strategy is simple_byte
  1779   00208E  51CF               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1780   002090  0A00               	xorlw	0	; case 0
  1781   002092  B4D8               	btfsc	status,2,c
  1782   002094  EF4E  F010         	goto	l5846
  1783   002098  EF40  F010         	goto	l5436
  1784   00209C                     l5846:
  1785                           
  1786                           ; BSR set to: 0
  1787                           ; Switch size 1, requested type "simple"
  1788                           ; Number of cases is 3, Range of values is 76 to 108
  1789                           ; switch strategies available:
  1790                           ; Name         Instructions Cycles
  1791                           ; simple_byte           10     6 (average)
  1792                           ;	Chosen strategy is simple_byte
  1793   00209C  51CE               	movf	??_vfpfcnvrt& (0+255),w,b
  1794   00209E  0A4C               	xorlw	76	; case 76
  1795   0020A0  B4D8               	btfsc	status,2,c
  1796   0020A2  EF38  F010         	goto	l5432
  1797   0020A6  0A2A               	xorlw	42	; case 102
  1798   0020A8  B4D8               	btfsc	status,2,c
  1799   0020AA  EF3C  F010         	goto	l5434
  1800   0020AE  0A0A               	xorlw	10	; case 108
  1801   0020B0  B4D8               	btfsc	status,2,c
  1802   0020B2  EF38  F010         	goto	l5432
  1803   0020B6  EF40  F010         	goto	l5436
  1804   0020BA                     l5442:
  1805                           
  1806                           ; BSR set to: 0
  1807   0020BA  C0DA  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1808   0020BE  C0DB  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1809   0020C2                     	if	0	;tblptru may be non-zero
  1810   0020C2                     	endif
  1811   0020C2                     	if	0	;tblptru may be non-zero
  1812   0020C2                     	endif
  1813   0020C2  0008               	tblrd		*
  1814   0020C4  50F5               	movf	tablat,w,c
  1815   0020C6  0A66               	xorlw	102
  1816   0020C8  A4D8               	btfss	status,2,c
  1817   0020CA  EF69  F010         	goto	u6041
  1818   0020CE  EF6B  F010         	goto	u6040
  1819   0020D2                     u6041:
  1820   0020D2  EFF3  F010         	goto	l5462
  1821   0020D6                     u6040:
  1822   0020D6  EFA1  F010         	goto	l5450
  1823   0020DA                     l5444:
  1824                           
  1825                           ; BSR set to: 0
  1826                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1459:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1827   0020DA  C0CC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1828   0020DE  C0CD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1829   0020E2  CFDF F0CE          	movff	indf2,??_vfpfcnvrt
  1830   0020E6  0E04               	movlw	4
  1831   0020E8  26DE               	addwf	postinc2,f,c
  1832   0020EA  CFDF F0CF          	movff	indf2,??_vfpfcnvrt+1
  1833   0020EE  0E00               	movlw	0
  1834   0020F0  22DD               	addwfc	postdec2,f,c
  1835   0020F2  C0CE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1836   0020F6  C0CF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1837   0020FA  CFDE F0D1          	movff	postinc2,vfpfcnvrt@convarg
  1838   0020FE  CFDE F0D2          	movff	postinc2,vfpfcnvrt@convarg+1
  1839   002102  CFDE F0D3          	movff	postinc2,vfpfcnvrt@convarg+2
  1840   002106  CFDE F0D4          	movff	postinc2,vfpfcnvrt@convarg+3
  1841                           
  1842                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1460:      break;
  1843   00210A  EFB6  F010         	goto	l5452
  1844   00210E                     l5446:
  1845                           
  1846                           ; BSR set to: 0
  1847                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1462:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  1848   00210E  C0CC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1849   002112  C0CD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1850   002116  CFDF F0CE          	movff	indf2,??_vfpfcnvrt
  1851   00211A  0E04               	movlw	4
  1852   00211C  26DE               	addwf	postinc2,f,c
  1853   00211E  CFDF F0CF          	movff	indf2,??_vfpfcnvrt+1
  1854   002122  0E00               	movlw	0
  1855   002124  22DD               	addwfc	postdec2,f,c
  1856   002126  C0CE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1857   00212A  C0CF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1858   00212E  CFDE F0D1          	movff	postinc2,vfpfcnvrt@convarg
  1859   002132  CFDE F0D2          	movff	postinc2,vfpfcnvrt@convarg+1
  1860   002136  CFDE F0D3          	movff	postinc2,vfpfcnvrt@convarg+2
  1861   00213A  CFDE F0D4          	movff	postinc2,vfpfcnvrt@convarg+3
  1862                           
  1863                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1463:      break;
  1864   00213E  EFB6  F010         	goto	l5452
  1865   002142                     l5450:
  1866                           
  1867                           ; BSR set to: 0
  1868   002142  51D9               	movf	vfpfcnvrt@c& (0+255),w,b
  1869   002144  6FCE               	movwf	??_vfpfcnvrt& (0+255),b
  1870   002146  6BCF               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  1871                           
  1872                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1873                           ; Switch size 1, requested type "simple"
  1874                           ; Number of cases is 1, Range of values is 0 to 0
  1875                           ; switch strategies available:
  1876                           ; Name         Instructions Cycles
  1877                           ; simple_byte            4     3 (average)
  1878                           ;	Chosen strategy is simple_byte
  1879   002148  51CF               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1880   00214A  0A00               	xorlw	0	; case 0
  1881   00214C  B4D8               	btfsc	status,2,c
  1882   00214E  EFAB  F010         	goto	l5848
  1883   002152  EFB6  F010         	goto	l5452
  1884   002156                     l5848:
  1885                           
  1886                           ; BSR set to: 0
  1887                           ; Switch size 1, requested type "simple"
  1888                           ; Number of cases is 2, Range of values is 76 to 108
  1889                           ; switch strategies available:
  1890                           ; Name         Instructions Cycles
  1891                           ; simple_byte            7     4 (average)
  1892                           ;	Chosen strategy is simple_byte
  1893   002156  51CE               	movf	??_vfpfcnvrt& (0+255),w,b
  1894   002158  0A4C               	xorlw	76	; case 76
  1895   00215A  B4D8               	btfsc	status,2,c
  1896   00215C  EF87  F010         	goto	l5446
  1897   002160  0A20               	xorlw	32	; case 108
  1898   002162  B4D8               	btfsc	status,2,c
  1899   002164  EF6D  F010         	goto	l5444
  1900   002168  EFB6  F010         	goto	l5452
  1901   00216C                     l5452:
  1902                           
  1903                           ; BSR set to: 0
  1904                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1465:    *fmt = c
      +                          p+1;
  1905   00216C  0E01               	movlw	1
  1906   00216E  25DA               	addwf	vfpfcnvrt@cp& (0+255),w,b
  1907   002170  6FCE               	movwf	??_vfpfcnvrt& (0+255),b
  1908   002172  0E00               	movlw	0
  1909   002174  21DB               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  1910   002176  6FCF               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  1911   002178  C0CA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1912   00217C  C0CB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1913   002180  C0CE  FFDE         	movff	??_vfpfcnvrt,postinc2
  1914   002184  C0CF  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1915                           
  1916                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1466:    switch (
      +                          *cp) {
  1917   002188  EFDD  F010         	goto	l5460
  1918   00218C                     l5454:
  1919                           
  1920                           ; BSR set to: 0
  1921                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1493:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  1922   00218C  C0C8  F093         	movff	vfpfcnvrt@fp,efgtoa@fp
  1923   002190  C0C9  F094         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  1924   002194  C0D1  F095         	movff	vfpfcnvrt@convarg,efgtoa@f
  1925   002198  C0D2  F096         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  1926   00219C  C0D3  F097         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  1927   0021A0  C0D4  F098         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  1928   0021A4  C0DA  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1929   0021A8  C0DB  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1930   0021AC                     	if	0	;tblptru may be non-zero
  1931   0021AC                     	endif
  1932   0021AC                     	if	0	;tblptru may be non-zero
  1933   0021AC                     	endif
  1934   0021AC  0008               	tblrd		*
  1935   0021AE  CFF5 F099          	movff	tablat,efgtoa@c
  1936   0021B2  EC41  F004         	call	_efgtoa	;wreg free
  1937   0021B6  EF10  F011         	goto	l1051
  1938   0021BA                     l5460:
  1939                           
  1940                           ; BSR set to: 0
  1941   0021BA  C0DA  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1942   0021BE  C0DB  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1943   0021C2                     	if	0	;tblptru may be non-zero
  1944   0021C2                     	endif
  1945   0021C2                     	if	0	;tblptru may be non-zero
  1946   0021C2                     	endif
  1947   0021C2  0008               	tblrd		*
  1948   0021C4  50F5               	movf	tablat,w,c
  1949   0021C6  6FCE               	movwf	??_vfpfcnvrt& (0+255),b
  1950   0021C8  6BCF               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  1951                           
  1952                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1953                           ; Switch size 1, requested type "simple"
  1954                           ; Number of cases is 1, Range of values is 0 to 0
  1955                           ; switch strategies available:
  1956                           ; Name         Instructions Cycles
  1957                           ; simple_byte            4     3 (average)
  1958                           ;	Chosen strategy is simple_byte
  1959   0021CA  51CF               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1960   0021CC  0A00               	xorlw	0	; case 0
  1961   0021CE  B4D8               	btfsc	status,2,c
  1962   0021D0  EFEC  F010         	goto	l5850
  1963   0021D4  EFF3  F010         	goto	l5462
  1964   0021D8                     l5850:
  1965                           
  1966                           ; BSR set to: 0
  1967                           ; Switch size 1, requested type "simple"
  1968                           ; Number of cases is 1, Range of values is 102 to 102
  1969                           ; switch strategies available:
  1970                           ; Name         Instructions Cycles
  1971                           ; simple_byte            4     3 (average)
  1972                           ;	Chosen strategy is simple_byte
  1973   0021D8  51CE               	movf	??_vfpfcnvrt& (0+255),w,b
  1974   0021DA  0A66               	xorlw	102	; case 102
  1975   0021DC  B4D8               	btfsc	status,2,c
  1976   0021DE  EFC6  F010         	goto	l5454
  1977   0021E2  EFF3  F010         	goto	l5462
  1978   0021E6                     l5462:
  1979                           
  1980                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1981   0021E6  C0CA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1982   0021EA  C0CB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1983   0021EE  2ADE               	incf	postinc2,f,c
  1984   0021F0  0E00               	movlw	0
  1985   0021F2  22DD               	addwfc	postdec2,f,c
  1986   0021F4  EF10  F011         	goto	l1051
  1987   0021F8                     l5466:
  1988                           
  1989                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1990   0021F8  C0CA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1991   0021FC  C0CB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1992   002200  CFDE FFF6          	movff	postinc2,tblptrl
  1993   002204  CFDD FFF7          	movff	postdec2,tblptrh
  1994   002208                     	if	0	;tblptru may be non-zero
  1995   002208                     	endif
  1996   002208                     	if	0	;tblptru may be non-zero
  1997   002208                     	endif
  1998   002208  0008               	tblrd		*
  1999   00220A  50F5               	movf	tablat,w,c
  2000   00220C  6E1C               	movwf	fputc@c^0,c
  2001   00220E  6A1D               	clrf	(fputc@c+1)^0,c
  2002   002210  C0C8  F01E         	movff	vfpfcnvrt@fp,fputc@fp
  2003   002214  C0C9  F01F         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2004   002218  EC36  F016         	call	_fputc	;wreg free
  2005   00221C  EFF3  F010         	goto	l5462
  2006   002220                     l1051:
  2007   002220  0012               	return		;funcret
  2008   002222                     __end_of_vfpfcnvrt:
  2009                           	callstack 0
  2010                           
  2011 ;; *************** function _efgtoa *****************
  2012 ;; Defined at:
  2013 ;;		line 506 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2014 ;; Parameters:    Size  Location     Type
  2015 ;;  fp              2   51[BANK0 ] PTR struct _IO_FILE
  2016 ;;		 -> sprintf@f(11), 
  2017 ;;  f               4   53[BANK0 ] PTR struct _IO_FILE
  2018 ;;  c               1   57[BANK0 ] unsigned char 
  2019 ;; Auto vars:     Size  Location     Type
  2020 ;;  u               4  100[BANK0 ] struct flui
  2021 ;;  g               4   94[BANK0 ] struct flui
  2022 ;;  l               4   89[BANK0 ] struct flui
  2023 ;;  h               4   85[BANK0 ] struct flui
  2024 ;;  ou              4   79[BANK0 ] struct flui
  2025 ;;  n               2   98[BANK0 ] int 
  2026 ;;  i               2   83[BANK0 ] int 
  2027 ;;  w               2   77[BANK0 ] int 
  2028 ;;  e               2   75[BANK0 ] int 
  2029 ;;  m               2   73[BANK0 ] int 
  2030 ;;  d               2   71[BANK0 ] int 
  2031 ;;  t               2   64[BANK0 ] int 
  2032 ;;  p               2   62[BANK0 ] int 
  2033 ;;  ne              2   60[BANK0 ] int 
  2034 ;;  sign            1   93[BANK0 ] unsigned char 
  2035 ;;  nmode           1   70[BANK0 ] unsigned char 
  2036 ;;  mode            1   69[BANK0 ] unsigned char 
  2037 ;;  pp              1   68[BANK0 ] unsigned char 
  2038 ;;  esign           1    0        unsigned char 
  2039 ;; Return value:  Size  Location     Type
  2040 ;;                  1    wreg      void 
  2041 ;; Registers used:
  2042 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2043 ;; Tracked objects:
  2044 ;;		On entry : 0/0
  2045 ;;		On exit  : 0/0
  2046 ;;		Unchanged: 0/0
  2047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2048 ;;      Params:         0       7       0       0       0       0       0       0       0
  2049 ;;      Locals:         0      44       0       0       0       0       0       0       0
  2050 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2051 ;;      Totals:         0      53       0       0       0       0       0       0       0
  2052 ;;Total ram usage:       53 bytes
  2053 ;; Hardware stack levels used: 1
  2054 ;; Hardware stack levels required when called: 12
  2055 ;; This function calls:
  2056 ;;		___fladd
  2057 ;;		___fldiv
  2058 ;;		___fleq
  2059 ;;		___flge
  2060 ;;		___flmul
  2061 ;;		___flneg
  2062 ;;		___flsub
  2063 ;;		___fltol
  2064 ;;		___fpclassifyf
  2065 ;;		_floorf
  2066 ;;		_labs
  2067 ;;		_memcpy
  2068 ;;		_pad
  2069 ;;		_strcpy
  2070 ;; This function is called by:
  2071 ;;		_vfpfcnvrt
  2072 ;; This function uses a non-reentrant model
  2073 ;;
  2074                           
  2075                           	psect	text4
  2076   000882                     __ptext4:
  2077                           	callstack 0
  2078   000882                     _efgtoa:
  2079                           	callstack 15
  2080   000882                     
  2081                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 506: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources
      +                          \c99\common\doprnt.c: 507: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 508:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .40\pic\sources\c99\common\doprnt.c: 509:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 510:     long double h, l;
  2082   000882  0E00               	movlw	0
  2083   000884  0100               	movlb	0	; () banked
  2084   000886  6FBD               	movwf	efgtoa@sign& (0+255),b
  2085   000888                     
  2086                           ; BSR set to: 0
  2087                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 515:     g.f = f;
  2088   000888  C095  F0BE         	movff	efgtoa@f,efgtoa@g
  2089   00088C  C096  F0BF         	movff	efgtoa@f+1,efgtoa@g+1
  2090   000890  C097  F0C0         	movff	efgtoa@f+2,efgtoa@g+2
  2091   000894  C098  F0C1         	movff	efgtoa@f+3,efgtoa@g+3
  2092   000898                     
  2093                           ; BSR set to: 0
  2094                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 516:     if (g.f 
      +                          < 0.0) {
  2095   000898  BFC1               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2096   00089A  EF53  F004         	goto	u5640
  2097   00089E  EF51  F004         	goto	u5641
  2098   0008A2                     u5641:
  2099   0008A2  EF67  F004         	goto	l5128
  2100   0008A6                     u5640:
  2101   0008A6                     
  2102                           ; BSR set to: 0
  2103                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 517:         sign
      +                           = 1;
  2104   0008A6  0E01               	movlw	1
  2105   0008A8  6FBD               	movwf	efgtoa@sign& (0+255),b
  2106   0008AA                     
  2107                           ; BSR set to: 0
  2108                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 518:         g.f 
      +                          = -g.f;
  2109   0008AA  C0BE  F01B         	movff	efgtoa@g,___flneg@f1
  2110   0008AE  C0BF  F01C         	movff	efgtoa@g+1,___flneg@f1+1
  2111   0008B2  C0C0  F01D         	movff	efgtoa@g+2,___flneg@f1+2
  2112   0008B6  C0C1  F01E         	movff	efgtoa@g+3,___flneg@f1+3
  2113   0008BA  ECE2  F01A         	call	___flneg	;wreg free
  2114   0008BE  C01B  F0BE         	movff	?___flneg,efgtoa@g
  2115   0008C2  C01C  F0BF         	movff	?___flneg+1,efgtoa@g+1
  2116   0008C6  C01D  F0C0         	movff	?___flneg+2,efgtoa@g+2
  2117   0008CA  C01E  F0C1         	movff	?___flneg+3,efgtoa@g+3
  2118   0008CE                     l5128:
  2119                           
  2120                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 522:     n = 0;
  2121   0008CE  0E00               	movlw	0
  2122   0008D0  0100               	movlb	0	; () banked
  2123   0008D2  6FC3               	movwf	(efgtoa@n+1)& (0+255),b
  2124   0008D4  0E00               	movlw	0
  2125   0008D6  6FC2               	movwf	efgtoa@n& (0+255),b
  2126   0008D8                     
  2127                           ; BSR set to: 0
  2128                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 523:     w = widt
      +                          h;
  2129   0008D8  C0F0  F0AD         	movff	_width,efgtoa@w
  2130   0008DC  C0F1  F0AE         	movff	_width+1,efgtoa@w+1
  2131   0008E0                     
  2132                           ; BSR set to: 0
  2133                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 524:     if (sign
  2134   0008E0  51BD               	movf	efgtoa@sign& (0+255),w,b
  2135   0008E2  B4D8               	btfsc	status,2,c
  2136   0008E4  EF76  F004         	goto	u5651
  2137   0008E8  EF78  F004         	goto	u5650
  2138   0008EC                     u5651:
  2139   0008EC  EF8C  F004         	goto	l5142
  2140   0008F0                     u5650:
  2141   0008F0                     
  2142                           ; BSR set to: 0
  2143                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 528:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 529:   sign = sign ? '-
      +                          ' : '+';
  2144   0008F0  51BD               	movf	efgtoa@sign& (0+255),w,b
  2145   0008F2  A4D8               	btfss	status,2,c
  2146   0008F4  EF7E  F004         	goto	u5661
  2147   0008F8  EF80  F004         	goto	u5660
  2148   0008FC                     u5661:
  2149   0008FC  EF86  F004         	goto	l5138
  2150   000900                     u5660:
  2151   000900                     
  2152                           ; BSR set to: 0
  2153   000900  0E00               	movlw	0
  2154   000902  6FA3               	movwf	(_efgtoa$1777+1)& (0+255),b
  2155   000904  0E2B               	movlw	43
  2156   000906  6FA2               	movwf	_efgtoa$1777& (0+255),b
  2157   000908  EF8A  F004         	goto	l5140
  2158   00090C                     l5138:
  2159                           
  2160                           ; BSR set to: 0
  2161   00090C  0E00               	movlw	0
  2162   00090E  6FA3               	movwf	(_efgtoa$1777+1)& (0+255),b
  2163   000910  0E2D               	movlw	45
  2164   000912  6FA2               	movwf	_efgtoa$1777& (0+255),b
  2165   000914                     l5140:
  2166                           
  2167                           ; BSR set to: 0
  2168   000914  C0A2  F0BD         	movff	_efgtoa$1777,efgtoa@sign
  2169   000918                     l5142:
  2170                           
  2171                           ; BSR set to: 0
  2172                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 538:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  2173   000918  C0BE  F01B         	movff	efgtoa@g,___fpclassifyf@x
  2174   00091C  C0BF  F01C         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2175   000920  C0C0  F01D         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2176   000924  C0C1  F01E         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2177   000928  ECB7  F015         	call	___fpclassifyf	;wreg free
  2178   00092C  041B               	decf	?___fpclassifyf^0,w,c
  2179   00092E  101C               	iorwf	(?___fpclassifyf+1)^0,w,c
  2180   000930  A4D8               	btfss	status,2,c
  2181   000932  EF9D  F004         	goto	u5671
  2182   000936  EF9F  F004         	goto	u5670
  2183   00093A                     u5671:
  2184   00093A  EFD2  F004         	goto	l5160
  2185   00093E                     u5670:
  2186   00093E                     
  2187                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 539:   if (sign) 
      +                          {
  2188   00093E  0100               	movlb	0	; () banked
  2189   000940  51BD               	movf	efgtoa@sign& (0+255),w,b
  2190   000942  B4D8               	btfsc	status,2,c
  2191   000944  EFA6  F004         	goto	u5681
  2192   000948  EFA8  F004         	goto	u5680
  2193   00094C                     u5681:
  2194   00094C  EFB1  F004         	goto	l5152
  2195   000950                     u5680:
  2196   000950                     
  2197                           ; BSR set to: 0
  2198                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 540:    dbuf[0] =
      +                           sign;
  2199   000950  C0BD  F114         	movff	efgtoa@sign,_dbuf
  2200   000954                     
  2201                           ; BSR set to: 0
  2202                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 541:    w--;
  2203   000954  07AD               	decf	efgtoa@w& (0+255),f,b
  2204   000956  A0D8               	btfss	status,0,c
  2205   000958  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  2206   00095A                     
  2207                           ; BSR set to: 0
  2208                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 542:    n = 1;
  2209   00095A  0E00               	movlw	0
  2210   00095C  6FC3               	movwf	(efgtoa@n+1)& (0+255),b
  2211   00095E  0E01               	movlw	1
  2212   000960  6FC2               	movwf	efgtoa@n& (0+255),b
  2213   000962                     l5152:
  2214                           
  2215                           ; BSR set to: 0
  2216                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 550:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 551:             strcpy(&d
      +                          buf[n], "inf");
  2217   000962  0E14               	movlw	low _dbuf
  2218   000964  25C2               	addwf	efgtoa@n& (0+255),w,b
  2219   000966  6E1B               	movwf	strcpy@dest^0,c
  2220   000968  0E01               	movlw	high _dbuf
  2221   00096A  21C3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2222   00096C  6E1C               	movwf	(strcpy@dest+1)^0,c
  2223   00096E  0E79               	movlw	low STR_23
  2224   000970  6E1D               	movwf	strcpy@src^0,c
  2225   000972  0E08               	movlw	high STR_23
  2226   000974  6E1E               	movwf	(strcpy@src+1)^0,c
  2227   000976  ECC2  F01A         	call	_strcpy	;wreg free
  2228   00097A                     l5154:
  2229                           
  2230                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 552:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 553:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  2231   00097A  0100               	movlb	0	; () banked
  2232   00097C  0EFD               	movlw	253
  2233   00097E  27AD               	addwf	efgtoa@w& (0+255),f,b
  2234   000980  0EFF               	movlw	255
  2235   000982  23AE               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2236   000984                     
  2237                           ; BSR set to: 0
  2238                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 554:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  2239   000984  C093  F060         	movff	efgtoa@fp,pad@fp
  2240   000988  C094  F061         	movff	efgtoa@fp+1,pad@fp+1
  2241   00098C  0E14               	movlw	low _dbuf
  2242   00098E  6F62               	movwf	pad@buf& (0+255),b
  2243   000990  0E01               	movlw	high _dbuf
  2244   000992  6F63               	movwf	(pad@buf+1)& (0+255),b
  2245   000994  C0AD  F064         	movff	efgtoa@w,pad@p
  2246   000998  C0AE  F065         	movff	efgtoa@w+1,pad@p+1
  2247   00099C  EC42  F017         	call	_pad	;wreg free
  2248   0009A0  EF3F  F009         	goto	l983
  2249   0009A4                     l5160:
  2250                           
  2251                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 556:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  2252   0009A4  C0BE  F01B         	movff	efgtoa@g,___fpclassifyf@x
  2253   0009A8  C0BF  F01C         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2254   0009AC  C0C0  F01D         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2255   0009B0  C0C1  F01E         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2256   0009B4  ECB7  F015         	call	___fpclassifyf	;wreg free
  2257   0009B8  501B               	movf	?___fpclassifyf^0,w,c
  2258   0009BA  101C               	iorwf	(?___fpclassifyf+1)^0,w,c
  2259   0009BC  A4D8               	btfss	status,2,c
  2260   0009BE  EFE3  F004         	goto	u5691
  2261   0009C2  EFE5  F004         	goto	u5690
  2262   0009C6                     u5691:
  2263   0009C6  EF05  F005         	goto	l5178
  2264   0009CA                     u5690:
  2265   0009CA                     
  2266                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 557:   if (sign) 
      +                          {
  2267   0009CA  0100               	movlb	0	; () banked
  2268   0009CC  51BD               	movf	efgtoa@sign& (0+255),w,b
  2269   0009CE  B4D8               	btfsc	status,2,c
  2270   0009D0  EFEC  F004         	goto	u5701
  2271   0009D4  EFEE  F004         	goto	u5700
  2272   0009D8                     u5701:
  2273   0009D8  EFF7  F004         	goto	l5170
  2274   0009DC                     u5700:
  2275   0009DC                     
  2276                           ; BSR set to: 0
  2277                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 558:    dbuf[0] =
      +                           sign;
  2278   0009DC  C0BD  F114         	movff	efgtoa@sign,_dbuf
  2279   0009E0                     
  2280                           ; BSR set to: 0
  2281                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 559:    w--;
  2282   0009E0  07AD               	decf	efgtoa@w& (0+255),f,b
  2283   0009E2  A0D8               	btfss	status,0,c
  2284   0009E4  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  2285   0009E6                     
  2286                           ; BSR set to: 0
  2287                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 560:    n = 1;
  2288   0009E6  0E00               	movlw	0
  2289   0009E8  6FC3               	movwf	(efgtoa@n+1)& (0+255),b
  2290   0009EA  0E01               	movlw	1
  2291   0009EC  6FC2               	movwf	efgtoa@n& (0+255),b
  2292   0009EE                     l5170:
  2293                           
  2294                           ; BSR set to: 0
  2295                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 568:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 569:             strcpy(&d
      +                          buf[n], "nan");
  2296   0009EE  0E14               	movlw	low _dbuf
  2297   0009F0  25C2               	addwf	efgtoa@n& (0+255),w,b
  2298   0009F2  6E1B               	movwf	strcpy@dest^0,c
  2299   0009F4  0E01               	movlw	high _dbuf
  2300   0009F6  21C3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2301   0009F8  6E1C               	movwf	(strcpy@dest+1)^0,c
  2302   0009FA  0E7D               	movlw	low STR_26
  2303   0009FC  6E1D               	movwf	strcpy@src^0,c
  2304   0009FE  0E08               	movlw	high STR_26
  2305   000A00  6E1E               	movwf	(strcpy@src+1)^0,c
  2306   000A02  ECC2  F01A         	call	_strcpy	;wreg free
  2307   000A06  EFBD  F004         	goto	l5154
  2308   000A0A                     l5178:
  2309                           
  2310                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 576:     u.f = 1.
      +                          0;
  2311   000A0A  0E00               	movlw	0
  2312   000A0C  0100               	movlb	0	; () banked
  2313   000A0E  6FC4               	movwf	efgtoa@u& (0+255),b
  2314   000A10  0E00               	movlw	0
  2315   000A12  6FC5               	movwf	(efgtoa@u+1)& (0+255),b
  2316   000A14  0E80               	movlw	128
  2317   000A16  6FC6               	movwf	(efgtoa@u+2)& (0+255),b
  2318   000A18  0E3F               	movlw	63
  2319   000A1A  6FC7               	movwf	(efgtoa@u+3)& (0+255),b
  2320                           
  2321                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 577:     e = 0;
  2322   000A1C  0E00               	movlw	0
  2323   000A1E  6FAC               	movwf	(efgtoa@e+1)& (0+255),b
  2324   000A20  0E00               	movlw	0
  2325   000A22  6FAB               	movwf	efgtoa@e& (0+255),b
  2326   000A24                     
  2327                           ; BSR set to: 0
  2328                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 578:  if (!(g.f =
      +                          = 0.0)) {
  2329   000A24  C0BE  F01B         	movff	efgtoa@g,___fleq@ff1
  2330   000A28  C0BF  F01C         	movff	efgtoa@g+1,___fleq@ff1+1
  2331   000A2C  C0C0  F01D         	movff	efgtoa@g+2,___fleq@ff1+2
  2332   000A30  C0C1  F01E         	movff	efgtoa@g+3,___fleq@ff1+3
  2333   000A34  0E00               	movlw	0
  2334   000A36  6E1F               	movwf	___fleq@ff2^0,c
  2335   000A38  0E00               	movlw	0
  2336   000A3A  6E20               	movwf	(___fleq@ff2+1)^0,c
  2337   000A3C  0E00               	movlw	0
  2338   000A3E  6E21               	movwf	(___fleq@ff2+2)^0,c
  2339   000A40  0E00               	movlw	0
  2340   000A42  6E22               	movwf	(___fleq@ff2+3)^0,c
  2341   000A44  EC9B  F016         	call	___fleq	;wreg free
  2342   000A48  B0D8               	btfsc	status,0,c
  2343   000A4A  EF29  F005         	goto	u5711
  2344   000A4E  EF2B  F005         	goto	u5710
  2345   000A52                     u5711:
  2346   000A52  EF0C  F006         	goto	l986
  2347   000A56                     u5710:
  2348   000A56  EF38  F005         	goto	l5186
  2349   000A5A                     l988:
  2350                           
  2351                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 580:    u = ou;
  2352   000A5A  C0AF  F0C4         	movff	efgtoa@ou,efgtoa@u
  2353   000A5E  C0B0  F0C5         	movff	efgtoa@ou+1,efgtoa@u+1
  2354   000A62  C0B1  F0C6         	movff	efgtoa@ou+2,efgtoa@u+2
  2355   000A66  C0B2  F0C7         	movff	efgtoa@ou+3,efgtoa@u+3
  2356   000A6A                     
  2357                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 581:    ++e;
  2358   000A6A  0100               	movlb	0	; () banked
  2359   000A6C  4BAB               	infsnz	efgtoa@e& (0+255),f,b
  2360   000A6E  2BAC               	incf	(efgtoa@e+1)& (0+255),f,b
  2361   000A70                     l5186:
  2362                           
  2363                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 579:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  2364   000A70  C0C4  F066         	movff	efgtoa@u,___flmul@b
  2365   000A74  C0C5  F067         	movff	efgtoa@u+1,___flmul@b+1
  2366   000A78  C0C6  F068         	movff	efgtoa@u+2,___flmul@b+2
  2367   000A7C  C0C7  F069         	movff	efgtoa@u+3,___flmul@b+3
  2368   000A80  0E00               	movlw	0
  2369   000A82  0100               	movlb	0	; () banked
  2370   000A84  6F6A               	movwf	___flmul@a& (0+255),b
  2371   000A86  0E00               	movlw	0
  2372   000A88  6F6B               	movwf	(___flmul@a+1)& (0+255),b
  2373   000A8A  0E20               	movlw	32
  2374   000A8C  6F6C               	movwf	(___flmul@a+2)& (0+255),b
  2375   000A8E  0E41               	movlw	65
  2376   000A90  6F6D               	movwf	(___flmul@a+3)& (0+255),b
  2377   000A92  ECA1  F00B         	call	___flmul	;wreg free
  2378   000A96  C066  F0AF         	movff	?___flmul,efgtoa@ou
  2379   000A9A  C067  F0B0         	movff	?___flmul+1,efgtoa@ou+1
  2380   000A9E  C068  F0B1         	movff	?___flmul+2,efgtoa@ou+2
  2381   000AA2  C069  F0B2         	movff	?___flmul+3,efgtoa@ou+3
  2382   000AA6  0100               	movlb	0	; () banked
  2383   000AA8  51AF               	movf	efgtoa@ou& (0+255),w,b
  2384   000AAA  5DBE               	subwf	efgtoa@g& (0+255),w,b
  2385   000AAC  6E1B               	movwf	labs@a^0,c
  2386   000AAE  51B0               	movf	(efgtoa@ou+1)& (0+255),w,b
  2387   000AB0  59BF               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2388   000AB2  6E1C               	movwf	(labs@a+1)^0,c
  2389   000AB4  51B1               	movf	(efgtoa@ou+2)& (0+255),w,b
  2390   000AB6  59C0               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2391   000AB8  6E1D               	movwf	(labs@a+2)^0,c
  2392   000ABA  51B2               	movf	(efgtoa@ou+3)& (0+255),w,b
  2393   000ABC  59C1               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2394   000ABE  6E1E               	movwf	(labs@a+3)^0,c
  2395   000AC0  ECEF  F017         	call	_labs	;wreg free
  2396   000AC4  BE1E               	btfsc	(?_labs+3)^0,7,c
  2397   000AC6  EF70  F005         	goto	u5721
  2398   000ACA  501E               	movf	(?_labs+3)^0,w,c
  2399   000ACC  101D               	iorwf	(?_labs+2)^0,w,c
  2400   000ACE  101C               	iorwf	(?_labs+1)^0,w,c
  2401   000AD0  E109               	bnz	u5720
  2402   000AD2  0E02               	movlw	2
  2403   000AD4  5C1B               	subwf	?_labs^0,w,c
  2404   000AD6  A0D8               	btfss	status,0,c
  2405   000AD8  EF70  F005         	goto	u5721
  2406   000ADC  EF72  F005         	goto	u5720
  2407   000AE0                     u5721:
  2408   000AE0  EF2D  F005         	goto	l988
  2409   000AE4                     u5720:
  2410   000AE4  C0AF  F07B         	movff	efgtoa@ou,___flge@ff1
  2411   000AE8  C0B0  F07C         	movff	efgtoa@ou+1,___flge@ff1+1
  2412   000AEC  C0B1  F07D         	movff	efgtoa@ou+2,___flge@ff1+2
  2413   000AF0  C0B2  F07E         	movff	efgtoa@ou+3,___flge@ff1+3
  2414   000AF4  C0BE  F07F         	movff	efgtoa@g,___flge@ff2
  2415   000AF8  C0BF  F080         	movff	efgtoa@g+1,___flge@ff2+1
  2416   000AFC  C0C0  F081         	movff	efgtoa@g+2,___flge@ff2+2
  2417   000B00  C0C1  F082         	movff	efgtoa@g+3,___flge@ff2+3
  2418   000B04  EC34  F015         	call	___flge	;wreg free
  2419   000B08  0100               	movlb	0	; () banked
  2420   000B0A  A0D8               	btfss	status,0,c
  2421   000B0C  EF8A  F005         	goto	u5731
  2422   000B10  EF8C  F005         	goto	u5730
  2423   000B14                     u5731:
  2424   000B14  EF2D  F005         	goto	l988
  2425   000B18                     u5730:
  2426   000B18                     
  2427                           ; BSR set to: 0
  2428                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 583:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  2429   000B18  51C4               	movf	efgtoa@u& (0+255),w,b
  2430   000B1A  5DBE               	subwf	efgtoa@g& (0+255),w,b
  2431   000B1C  6E1B               	movwf	labs@a^0,c
  2432   000B1E  51C5               	movf	(efgtoa@u+1)& (0+255),w,b
  2433   000B20  59BF               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2434   000B22  6E1C               	movwf	(labs@a+1)^0,c
  2435   000B24  51C6               	movf	(efgtoa@u+2)& (0+255),w,b
  2436   000B26  59C0               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2437   000B28  6E1D               	movwf	(labs@a+2)^0,c
  2438   000B2A  51C7               	movf	(efgtoa@u+3)& (0+255),w,b
  2439   000B2C  59C1               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2440   000B2E  6E1E               	movwf	(labs@a+3)^0,c
  2441   000B30  ECEF  F017         	call	_labs	;wreg free
  2442   000B34  BE1E               	btfsc	(?_labs+3)^0,7,c
  2443   000B36  EFAA  F005         	goto	u5740
  2444   000B3A  501E               	movf	(?_labs+3)^0,w,c
  2445   000B3C  101D               	iorwf	(?_labs+2)^0,w,c
  2446   000B3E  101C               	iorwf	(?_labs+1)^0,w,c
  2447   000B40  E107               	bnz	u5741
  2448   000B42  0E02               	movlw	2
  2449   000B44  5C1B               	subwf	?_labs^0,w,c
  2450   000B46  B0D8               	btfsc	status,0,c
  2451   000B48  EFA8  F005         	goto	u5741
  2452   000B4C  EFAA  F005         	goto	u5740
  2453   000B50                     u5741:
  2454   000B50  EFF2  F005         	goto	l5204
  2455   000B54                     u5740:
  2456   000B54                     l5194:
  2457                           
  2458                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 584:    g = u;
  2459   000B54  C0C4  F0BE         	movff	efgtoa@u,efgtoa@g
  2460   000B58  C0C5  F0BF         	movff	efgtoa@u+1,efgtoa@g+1
  2461   000B5C  C0C6  F0C0         	movff	efgtoa@u+2,efgtoa@g+2
  2462   000B60  C0C7  F0C1         	movff	efgtoa@u+3,efgtoa@g+3
  2463                           
  2464                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 585:   }
  2465   000B64  EF0C  F006         	goto	l986
  2466   000B68                     l5196:
  2467                           
  2468                           ; BSR set to: 0
  2469                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 588:     u.f = u.
      +                          f/10.0;
  2470   000B68  C0C4  F01B         	movff	efgtoa@u,___fldiv@b
  2471   000B6C  C0C5  F01C         	movff	efgtoa@u+1,___fldiv@b+1
  2472   000B70  C0C6  F01D         	movff	efgtoa@u+2,___fldiv@b+2
  2473   000B74  C0C7  F01E         	movff	efgtoa@u+3,___fldiv@b+3
  2474   000B78  0E00               	movlw	0
  2475   000B7A  6E1F               	movwf	___fldiv@a^0,c
  2476   000B7C  0E00               	movlw	0
  2477   000B7E  6E20               	movwf	(___fldiv@a+1)^0,c
  2478   000B80  0E20               	movlw	32
  2479   000B82  6E21               	movwf	(___fldiv@a+2)^0,c
  2480   000B84  0E41               	movlw	65
  2481   000B86  6E22               	movwf	(___fldiv@a+3)^0,c
  2482   000B88  ECB7  F00D         	call	___fldiv	;wreg free
  2483   000B8C  C01B  F0C4         	movff	?___fldiv,efgtoa@u
  2484   000B90  C01C  F0C5         	movff	?___fldiv+1,efgtoa@u+1
  2485   000B94  C01D  F0C6         	movff	?___fldiv+2,efgtoa@u+2
  2486   000B98  C01E  F0C7         	movff	?___fldiv+3,efgtoa@u+3
  2487   000B9C                     
  2488                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 589:     --e;
  2489   000B9C  0100               	movlb	0	; () banked
  2490   000B9E  07AB               	decf	efgtoa@e& (0+255),f,b
  2491   000BA0  A0D8               	btfss	status,0,c
  2492   000BA2  07AC               	decf	(efgtoa@e+1)& (0+255),f,b
  2493   000BA4                     
  2494                           ; BSR set to: 0
  2495                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 590:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  2496   000BA4  51C4               	movf	efgtoa@u& (0+255),w,b
  2497   000BA6  5DBE               	subwf	efgtoa@g& (0+255),w,b
  2498   000BA8  6E1B               	movwf	labs@a^0,c
  2499   000BAA  51C5               	movf	(efgtoa@u+1)& (0+255),w,b
  2500   000BAC  59BF               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2501   000BAE  6E1C               	movwf	(labs@a+1)^0,c
  2502   000BB0  51C6               	movf	(efgtoa@u+2)& (0+255),w,b
  2503   000BB2  59C0               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2504   000BB4  6E1D               	movwf	(labs@a+2)^0,c
  2505   000BB6  51C7               	movf	(efgtoa@u+3)& (0+255),w,b
  2506   000BB8  59C1               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2507   000BBA  6E1E               	movwf	(labs@a+3)^0,c
  2508   000BBC  ECEF  F017         	call	_labs	;wreg free
  2509   000BC0  BE1E               	btfsc	(?_labs+3)^0,7,c
  2510   000BC2  EFF0  F005         	goto	u5750
  2511   000BC6  501E               	movf	(?_labs+3)^0,w,c
  2512   000BC8  101D               	iorwf	(?_labs+2)^0,w,c
  2513   000BCA  101C               	iorwf	(?_labs+1)^0,w,c
  2514   000BCC  E107               	bnz	u5751
  2515   000BCE  0E02               	movlw	2
  2516   000BD0  5C1B               	subwf	?_labs^0,w,c
  2517   000BD2  B0D8               	btfsc	status,0,c
  2518   000BD4  EFEE  F005         	goto	u5751
  2519   000BD8  EFF0  F005         	goto	u5750
  2520   000BDC                     u5751:
  2521   000BDC  EFF2  F005         	goto	l5204
  2522   000BE0                     u5750:
  2523   000BE0  EFAA  F005         	goto	l5194
  2524   000BE4                     l5204:
  2525                           
  2526                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 587:    while (g.
      +                          f < u.f) {
  2527   000BE4  C0BE  F07B         	movff	efgtoa@g,___flge@ff1
  2528   000BE8  C0BF  F07C         	movff	efgtoa@g+1,___flge@ff1+1
  2529   000BEC  C0C0  F07D         	movff	efgtoa@g+2,___flge@ff1+2
  2530   000BF0  C0C1  F07E         	movff	efgtoa@g+3,___flge@ff1+3
  2531   000BF4  C0C4  F07F         	movff	efgtoa@u,___flge@ff2
  2532   000BF8  C0C5  F080         	movff	efgtoa@u+1,___flge@ff2+1
  2533   000BFC  C0C6  F081         	movff	efgtoa@u+2,___flge@ff2+2
  2534   000C00  C0C7  F082         	movff	efgtoa@u+3,___flge@ff2+3
  2535   000C04  EC34  F015         	call	___flge	;wreg free
  2536   000C08  0100               	movlb	0	; () banked
  2537   000C0A  A0D8               	btfss	status,0,c
  2538   000C0C  EF0A  F006         	goto	u5761
  2539   000C10  EF0C  F006         	goto	u5760
  2540   000C14                     u5761:
  2541   000C14  EFB4  F005         	goto	l5196
  2542   000C18                     u5760:
  2543   000C18                     l986:
  2544                           
  2545                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 602:  mode = c;
  2546   000C18  C099  F0A5         	movff	efgtoa@c,efgtoa@mode
  2547                           
  2548                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 604:     nmode = 
      +                          mode;
  2549   000C1C  C0A5  F0A6         	movff	efgtoa@mode,efgtoa@nmode
  2550   000C20                     
  2551                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 614:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 615:         p = (prec < 0)
      +                           ? 6 : prec;
  2552   000C20  0100               	movlb	0	; () banked
  2553   000C22  BFF3               	btfsc	(_prec+1)& (0+255),7,b
  2554   000C24  EF16  F006         	goto	u5771
  2555   000C28  EF18  F006         	goto	u5770
  2556   000C2C                     u5771:
  2557   000C2C  EF1E  F006         	goto	l5210
  2558   000C30                     u5770:
  2559   000C30                     
  2560                           ; BSR set to: 0
  2561   000C30  C0F2  F09E         	movff	_prec,efgtoa@p
  2562   000C34  C0F3  F09F         	movff	_prec+1,efgtoa@p+1
  2563   000C38  EF22  F006         	goto	l5212
  2564   000C3C                     l5210:
  2565                           
  2566                           ; BSR set to: 0
  2567   000C3C  0E00               	movlw	0
  2568   000C3E  6F9F               	movwf	(efgtoa@p+1)& (0+255),b
  2569   000C40  0E06               	movlw	6
  2570   000C42  6F9E               	movwf	efgtoa@p& (0+255),b
  2571   000C44                     l5212:
  2572                           
  2573                           ; BSR set to: 0
  2574                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 616:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 630:     m = p;
  2575   000C44  C09E  F0A9         	movff	efgtoa@p,efgtoa@m
  2576   000C48  C09F  F0AA         	movff	efgtoa@p+1,efgtoa@m+1
  2577   000C4C                     
  2578                           ; BSR set to: 0
  2579                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 634:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 635:         ++m;
  2580   000C4C  4BA9               	infsnz	efgtoa@m& (0+255),f,b
  2581   000C4E  2BAA               	incf	(efgtoa@m+1)& (0+255),f,b
  2582   000C50                     
  2583                           ; BSR set to: 0
  2584                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 636:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 640:     if (nmode == 'f
      +                          ') {
  2585   000C50  0E66               	movlw	102
  2586   000C52  19A6               	xorwf	efgtoa@nmode& (0+255),w,b
  2587   000C54  A4D8               	btfss	status,2,c
  2588   000C56  EF2F  F006         	goto	u5781
  2589   000C5A  EF31  F006         	goto	u5780
  2590   000C5E                     u5781:
  2591   000C5E  EF51  F006         	goto	l5226
  2592   000C62                     u5780:
  2593   000C62                     
  2594                           ; BSR set to: 0
  2595                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 641:         if (
      +                          e < 0) {
  2596   000C62  BFAC               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2597   000C64  EF38  F006         	goto	u5790
  2598   000C68  EF36  F006         	goto	u5791
  2599   000C6C                     u5791:
  2600   000C6C  EF44  F006         	goto	l5222
  2601   000C70                     u5790:
  2602   000C70                     
  2603                           ; BSR set to: 0
  2604                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 642:             
      +                          u.f = 1.0;
  2605   000C70  0E00               	movlw	0
  2606   000C72  6FC4               	movwf	efgtoa@u& (0+255),b
  2607   000C74  0E00               	movlw	0
  2608   000C76  6FC5               	movwf	(efgtoa@u+1)& (0+255),b
  2609   000C78  0E80               	movlw	128
  2610   000C7A  6FC6               	movwf	(efgtoa@u+2)& (0+255),b
  2611   000C7C  0E3F               	movlw	63
  2612   000C7E  6FC7               	movwf	(efgtoa@u+3)& (0+255),b
  2613                           
  2614                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 643:             
      +                          e = 0;
  2615   000C80  0E00               	movlw	0
  2616   000C82  6FAC               	movwf	(efgtoa@e+1)& (0+255),b
  2617   000C84  0E00               	movlw	0
  2618   000C86  6FAB               	movwf	efgtoa@e& (0+255),b
  2619   000C88                     l5222:
  2620                           
  2621                           ; BSR set to: 0
  2622                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 645:         if (
      +                          !(mode == 'g')) {
  2623   000C88  0E67               	movlw	103
  2624   000C8A  19A5               	xorwf	efgtoa@mode& (0+255),w,b
  2625   000C8C  B4D8               	btfsc	status,2,c
  2626   000C8E  EF4B  F006         	goto	u5801
  2627   000C92  EF4D  F006         	goto	u5800
  2628   000C96                     u5801:
  2629   000C96  EF51  F006         	goto	l5226
  2630   000C9A                     u5800:
  2631   000C9A                     
  2632                           ; BSR set to: 0
  2633                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 646:             
      +                          m += e;
  2634   000C9A  51AB               	movf	efgtoa@e& (0+255),w,b
  2635   000C9C  27A9               	addwf	efgtoa@m& (0+255),f,b
  2636   000C9E  51AC               	movf	(efgtoa@e+1)& (0+255),w,b
  2637   000CA0  23AA               	addwfc	(efgtoa@m+1)& (0+255),f,b
  2638   000CA2                     l5226:
  2639                           
  2640                           ; BSR set to: 0
  2641                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 652:     i = 0;
  2642   000CA2  0E00               	movlw	0
  2643   000CA4  6FB4               	movwf	(efgtoa@i+1)& (0+255),b
  2644   000CA6  0E00               	movlw	0
  2645   000CA8  6FB3               	movwf	efgtoa@i& (0+255),b
  2646   000CAA                     
  2647                           ; BSR set to: 0
  2648                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 653:     h = g.f;
  2649   000CAA  C0BE  F0B5         	movff	efgtoa@g,efgtoa@h
  2650   000CAE  C0BF  F0B6         	movff	efgtoa@g+1,efgtoa@h+1
  2651   000CB2  C0C0  F0B7         	movff	efgtoa@g+2,efgtoa@h+2
  2652   000CB6  C0C1  F0B8         	movff	efgtoa@g+3,efgtoa@h+3
  2653   000CBA                     
  2654                           ; BSR set to: 0
  2655                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 654:     ou = u;
  2656   000CBA  C0C4  F0AF         	movff	efgtoa@u,efgtoa@ou
  2657   000CBE  C0C5  F0B0         	movff	efgtoa@u+1,efgtoa@ou+1
  2658   000CC2  C0C6  F0B1         	movff	efgtoa@u+2,efgtoa@ou+2
  2659   000CC6  C0C7  F0B2         	movff	efgtoa@u+3,efgtoa@ou+3
  2660                           
  2661                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  2662   000CCA  EFE2  F006         	goto	l5240
  2663   000CCE                     l5232:
  2664                           
  2665                           ; BSR set to: 0
  2666                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 656:         l = 
      +                          floorf(h/u.f);
  2667   000CCE  C0B5  F01B         	movff	efgtoa@h,___fldiv@b
  2668   000CD2  C0B6  F01C         	movff	efgtoa@h+1,___fldiv@b+1
  2669   000CD6  C0B7  F01D         	movff	efgtoa@h+2,___fldiv@b+2
  2670   000CDA  C0B8  F01E         	movff	efgtoa@h+3,___fldiv@b+3
  2671   000CDE  C0C4  F01F         	movff	efgtoa@u,___fldiv@a
  2672   000CE2  C0C5  F020         	movff	efgtoa@u+1,___fldiv@a+1
  2673   000CE6  C0C6  F021         	movff	efgtoa@u+2,___fldiv@a+2
  2674   000CEA  C0C7  F022         	movff	efgtoa@u+3,___fldiv@a+3
  2675   000CEE  ECB7  F00D         	call	___fldiv	;wreg free
  2676   000CF2  C01B  F027         	movff	?___fldiv,floorf@x
  2677   000CF6  C01C  F028         	movff	?___fldiv+1,floorf@x+1
  2678   000CFA  C01D  F029         	movff	?___fldiv+2,floorf@x+2
  2679   000CFE  C01E  F02A         	movff	?___fldiv+3,floorf@x+3
  2680   000D02  EC25  F012         	call	_floorf	;wreg free
  2681   000D06  C027  F0B9         	movff	?_floorf,efgtoa@l
  2682   000D0A  C028  F0BA         	movff	?_floorf+1,efgtoa@l+1
  2683   000D0E  C029  F0BB         	movff	?_floorf+2,efgtoa@l+2
  2684   000D12  C02A  F0BC         	movff	?_floorf+3,efgtoa@l+3
  2685                           
  2686                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 657:         d = 
      +                          (int)l;
  2687   000D16  C0B9  F01B         	movff	efgtoa@l,___fltol@f1
  2688   000D1A  C0BA  F01C         	movff	efgtoa@l+1,___fltol@f1+1
  2689   000D1E  C0BB  F01D         	movff	efgtoa@l+2,___fltol@f1+2
  2690   000D22  C0BC  F01E         	movff	efgtoa@l+3,___fltol@f1+3
  2691   000D26  ECB1  F014         	call	___fltol	;wreg free
  2692   000D2A  C01B  F0A7         	movff	?___fltol,efgtoa@d
  2693   000D2E  C01C  F0A8         	movff	?___fltol+1,efgtoa@d+1
  2694   000D32                     
  2695                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 658:         h -=
      +                           l*u.f;
  2696   000D32  C0B5  F08B         	movff	efgtoa@h,___flsub@b
  2697   000D36  C0B6  F08C         	movff	efgtoa@h+1,___flsub@b+1
  2698   000D3A  C0B7  F08D         	movff	efgtoa@h+2,___flsub@b+2
  2699   000D3E  C0B8  F08E         	movff	efgtoa@h+3,___flsub@b+3
  2700   000D42  C0B9  F06A         	movff	efgtoa@l,___flmul@a
  2701   000D46  C0BA  F06B         	movff	efgtoa@l+1,___flmul@a+1
  2702   000D4A  C0BB  F06C         	movff	efgtoa@l+2,___flmul@a+2
  2703   000D4E  C0BC  F06D         	movff	efgtoa@l+3,___flmul@a+3
  2704   000D52  C0C4  F066         	movff	efgtoa@u,___flmul@b
  2705   000D56  C0C5  F067         	movff	efgtoa@u+1,___flmul@b+1
  2706   000D5A  C0C6  F068         	movff	efgtoa@u+2,___flmul@b+2
  2707   000D5E  C0C7  F069         	movff	efgtoa@u+3,___flmul@b+3
  2708   000D62  ECA1  F00B         	call	___flmul	;wreg free
  2709   000D66  C066  F08F         	movff	?___flmul,___flsub@a
  2710   000D6A  C067  F090         	movff	?___flmul+1,___flsub@a+1
  2711   000D6E  C068  F091         	movff	?___flmul+2,___flsub@a+2
  2712   000D72  C069  F092         	movff	?___flmul+3,___flsub@a+3
  2713   000D76  EC37  F01A         	call	___flsub	;wreg free
  2714   000D7A  C08B  F0B5         	movff	?___flsub,efgtoa@h
  2715   000D7E  C08C  F0B6         	movff	?___flsub+1,efgtoa@h+1
  2716   000D82  C08D  F0B7         	movff	?___flsub+2,efgtoa@h+2
  2717   000D86  C08E  F0B8         	movff	?___flsub+3,efgtoa@h+3
  2718   000D8A                     
  2719                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 659:         u.f 
      +                          = u.f/10.0;
  2720   000D8A  C0C4  F01B         	movff	efgtoa@u,___fldiv@b
  2721   000D8E  C0C5  F01C         	movff	efgtoa@u+1,___fldiv@b+1
  2722   000D92  C0C6  F01D         	movff	efgtoa@u+2,___fldiv@b+2
  2723   000D96  C0C7  F01E         	movff	efgtoa@u+3,___fldiv@b+3
  2724   000D9A  0E00               	movlw	0
  2725   000D9C  6E1F               	movwf	___fldiv@a^0,c
  2726   000D9E  0E00               	movlw	0
  2727   000DA0  6E20               	movwf	(___fldiv@a+1)^0,c
  2728   000DA2  0E20               	movlw	32
  2729   000DA4  6E21               	movwf	(___fldiv@a+2)^0,c
  2730   000DA6  0E41               	movlw	65
  2731   000DA8  6E22               	movwf	(___fldiv@a+3)^0,c
  2732   000DAA  ECB7  F00D         	call	___fldiv	;wreg free
  2733   000DAE  C01B  F0C4         	movff	?___fldiv,efgtoa@u
  2734   000DB2  C01C  F0C5         	movff	?___fldiv+1,efgtoa@u+1
  2735   000DB6  C01D  F0C6         	movff	?___fldiv+2,efgtoa@u+2
  2736   000DBA  C01E  F0C7         	movff	?___fldiv+3,efgtoa@u+3
  2737   000DBE                     
  2738                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 660:         ++i;
  2739   000DBE  0100               	movlb	0	; () banked
  2740   000DC0  4BB3               	infsnz	efgtoa@i& (0+255),f,b
  2741   000DC2  2BB4               	incf	(efgtoa@i+1)& (0+255),f,b
  2742   000DC4                     l5240:
  2743                           
  2744                           ; BSR set to: 0
  2745                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  2746   000DC4  51A9               	movf	efgtoa@m& (0+255),w,b
  2747   000DC6  5DB3               	subwf	efgtoa@i& (0+255),w,b
  2748   000DC8  51B4               	movf	(efgtoa@i+1)& (0+255),w,b
  2749   000DCA  0A80               	xorlw	128
  2750   000DCC  6F9A               	movwf	??_efgtoa& (0+255),b
  2751   000DCE  51AA               	movf	(efgtoa@m+1)& (0+255),w,b
  2752   000DD0  0A80               	xorlw	128
  2753   000DD2  599A               	subwfb	??_efgtoa& (0+255),w,b
  2754   000DD4  A0D8               	btfss	status,0,c
  2755   000DD6  EFEF  F006         	goto	u5811
  2756   000DDA  EFF1  F006         	goto	u5810
  2757   000DDE                     u5811:
  2758   000DDE  EF67  F006         	goto	l5232
  2759   000DE2                     u5810:
  2760   000DE2                     
  2761                           ; BSR set to: 0
  2762                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 664:     l = u.f*
      +                          5.0;
  2763   000DE2  C0C4  F066         	movff	efgtoa@u,___flmul@b
  2764   000DE6  C0C5  F067         	movff	efgtoa@u+1,___flmul@b+1
  2765   000DEA  C0C6  F068         	movff	efgtoa@u+2,___flmul@b+2
  2766   000DEE  C0C7  F069         	movff	efgtoa@u+3,___flmul@b+3
  2767   000DF2  0E00               	movlw	0
  2768   000DF4  6F6A               	movwf	___flmul@a& (0+255),b
  2769   000DF6  0E00               	movlw	0
  2770   000DF8  6F6B               	movwf	(___flmul@a+1)& (0+255),b
  2771   000DFA  0EA0               	movlw	160
  2772   000DFC  6F6C               	movwf	(___flmul@a+2)& (0+255),b
  2773   000DFE  0E40               	movlw	64
  2774   000E00  6F6D               	movwf	(___flmul@a+3)& (0+255),b
  2775   000E02  ECA1  F00B         	call	___flmul	;wreg free
  2776   000E06  C066  F0B9         	movff	?___flmul,efgtoa@l
  2777   000E0A  C067  F0BA         	movff	?___flmul+1,efgtoa@l+1
  2778   000E0E  C068  F0BB         	movff	?___flmul+2,efgtoa@l+2
  2779   000E12  C069  F0BC         	movff	?___flmul+3,efgtoa@l+3
  2780   000E16                     
  2781                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 665:     if (h < 
      +                          l) {
  2782   000E16  C0B5  F07B         	movff	efgtoa@h,___flge@ff1
  2783   000E1A  C0B6  F07C         	movff	efgtoa@h+1,___flge@ff1+1
  2784   000E1E  C0B7  F07D         	movff	efgtoa@h+2,___flge@ff1+2
  2785   000E22  C0B8  F07E         	movff	efgtoa@h+3,___flge@ff1+3
  2786   000E26  C0B9  F07F         	movff	efgtoa@l,___flge@ff2
  2787   000E2A  C0BA  F080         	movff	efgtoa@l+1,___flge@ff2+1
  2788   000E2E  C0BB  F081         	movff	efgtoa@l+2,___flge@ff2+2
  2789   000E32  C0BC  F082         	movff	efgtoa@l+3,___flge@ff2+3
  2790   000E36  EC34  F015         	call	___flge	;wreg free
  2791   000E3A  0100               	movlb	0	; () banked
  2792   000E3C  B0D8               	btfsc	status,0,c
  2793   000E3E  EF23  F007         	goto	u5821
  2794   000E42  EF25  F007         	goto	u5820
  2795   000E46                     u5821:
  2796   000E46  EF2F  F007         	goto	l5248
  2797   000E4A                     u5820:
  2798   000E4A                     
  2799                           ; BSR set to: 0
  2800                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 666:         l = 
      +                          0.0;
  2801   000E4A  0E00               	movlw	0
  2802   000E4C  6FB9               	movwf	efgtoa@l& (0+255),b
  2803   000E4E  0E00               	movlw	0
  2804   000E50  6FBA               	movwf	(efgtoa@l+1)& (0+255),b
  2805   000E52  0E00               	movlw	0
  2806   000E54  6FBB               	movwf	(efgtoa@l+2)& (0+255),b
  2807   000E56  0E00               	movlw	0
  2808   000E58  6FBC               	movwf	(efgtoa@l+3)& (0+255),b
  2809                           
  2810                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 667:     } else {
  2811   000E5A  EF58  F007         	goto	l5254
  2812   000E5E                     l5248:
  2813                           
  2814                           ; BSR set to: 0
  2815                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 669:         if (
      +                          (h == l) && !(d % 2)) {
  2816   000E5E  C0B5  F01B         	movff	efgtoa@h,___fleq@ff1
  2817   000E62  C0B6  F01C         	movff	efgtoa@h+1,___fleq@ff1+1
  2818   000E66  C0B7  F01D         	movff	efgtoa@h+2,___fleq@ff1+2
  2819   000E6A  C0B8  F01E         	movff	efgtoa@h+3,___fleq@ff1+3
  2820   000E6E  C0B9  F01F         	movff	efgtoa@l,___fleq@ff2
  2821   000E72  C0BA  F020         	movff	efgtoa@l+1,___fleq@ff2+1
  2822   000E76  C0BB  F021         	movff	efgtoa@l+2,___fleq@ff2+2
  2823   000E7A  C0BC  F022         	movff	efgtoa@l+3,___fleq@ff2+3
  2824   000E7E  EC9B  F016         	call	___fleq	;wreg free
  2825   000E82  A0D8               	btfss	status,0,c
  2826   000E84  EF46  F007         	goto	u5831
  2827   000E88  EF48  F007         	goto	u5830
  2828   000E8C                     u5831:
  2829   000E8C  EF58  F007         	goto	l5254
  2830   000E90                     u5830:
  2831   000E90  0100               	movlb	0	; () banked
  2832   000E92  B1A7               	btfsc	efgtoa@d& (0+255),0,b
  2833   000E94  EF4E  F007         	goto	u5841
  2834   000E98  EF50  F007         	goto	u5840
  2835   000E9C                     u5841:
  2836   000E9C  EF58  F007         	goto	l5254
  2837   000EA0                     u5840:
  2838   000EA0                     
  2839                           ; BSR set to: 0
  2840                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 670:             
      +                          l = 0.0;
  2841   000EA0  0E00               	movlw	0
  2842   000EA2  6FB9               	movwf	efgtoa@l& (0+255),b
  2843   000EA4  0E00               	movlw	0
  2844   000EA6  6FBA               	movwf	(efgtoa@l+1)& (0+255),b
  2845   000EA8  0E00               	movlw	0
  2846   000EAA  6FBB               	movwf	(efgtoa@l+2)& (0+255),b
  2847   000EAC  0E00               	movlw	0
  2848   000EAE  6FBC               	movwf	(efgtoa@l+3)& (0+255),b
  2849   000EB0                     l5254:
  2850                           
  2851                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 675:     h = g.f 
      +                          + l;
  2852   000EB0  C0BE  F07B         	movff	efgtoa@g,___fladd@b
  2853   000EB4  C0BF  F07C         	movff	efgtoa@g+1,___fladd@b+1
  2854   000EB8  C0C0  F07D         	movff	efgtoa@g+2,___fladd@b+2
  2855   000EBC  C0C1  F07E         	movff	efgtoa@g+3,___fladd@b+3
  2856   000EC0  C0B9  F07F         	movff	efgtoa@l,___fladd@a
  2857   000EC4  C0BA  F080         	movff	efgtoa@l+1,___fladd@a+1
  2858   000EC8  C0BB  F081         	movff	efgtoa@l+2,___fladd@a+2
  2859   000ECC  C0BC  F082         	movff	efgtoa@l+3,___fladd@a+3
  2860   000ED0  EC40  F009         	call	___fladd	;wreg free
  2861   000ED4  C07B  F0B5         	movff	?___fladd,efgtoa@h
  2862   000ED8  C07C  F0B6         	movff	?___fladd+1,efgtoa@h+1
  2863   000EDC  C07D  F0B7         	movff	?___fladd+2,efgtoa@h+2
  2864   000EE0  C07E  F0B8         	movff	?___fladd+3,efgtoa@h+3
  2865   000EE4                     
  2866                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 677:  if (h >= (o
      +                          u.f*10.0)) {
  2867   000EE4  C0B5  F07B         	movff	efgtoa@h,___flge@ff1
  2868   000EE8  C0B6  F07C         	movff	efgtoa@h+1,___flge@ff1+1
  2869   000EEC  C0B7  F07D         	movff	efgtoa@h+2,___flge@ff1+2
  2870   000EF0  C0B8  F07E         	movff	efgtoa@h+3,___flge@ff1+3
  2871   000EF4  0E00               	movlw	0
  2872   000EF6  0100               	movlb	0	; () banked
  2873   000EF8  6F6A               	movwf	___flmul@a& (0+255),b
  2874   000EFA  0E00               	movlw	0
  2875   000EFC  6F6B               	movwf	(___flmul@a+1)& (0+255),b
  2876   000EFE  0E20               	movlw	32
  2877   000F00  6F6C               	movwf	(___flmul@a+2)& (0+255),b
  2878   000F02  0E41               	movlw	65
  2879   000F04  6F6D               	movwf	(___flmul@a+3)& (0+255),b
  2880   000F06  C0AF  F066         	movff	efgtoa@ou,___flmul@b
  2881   000F0A  C0B0  F067         	movff	efgtoa@ou+1,___flmul@b+1
  2882   000F0E  C0B1  F068         	movff	efgtoa@ou+2,___flmul@b+2
  2883   000F12  C0B2  F069         	movff	efgtoa@ou+3,___flmul@b+3
  2884   000F16  ECA1  F00B         	call	___flmul	;wreg free
  2885   000F1A  C066  F07F         	movff	?___flmul,___flge@ff2
  2886   000F1E  C067  F080         	movff	?___flmul+1,___flge@ff2+1
  2887   000F22  C068  F081         	movff	?___flmul+2,___flge@ff2+2
  2888   000F26  C069  F082         	movff	?___flmul+3,___flge@ff2+3
  2889   000F2A  EC34  F015         	call	___flge	;wreg free
  2890   000F2E  0100               	movlb	0	; () banked
  2891   000F30  A0D8               	btfss	status,0,c
  2892   000F32  EF9D  F007         	goto	u5851
  2893   000F36  EF9F  F007         	goto	u5850
  2894   000F3A                     u5851:
  2895   000F3A  EFC7  F007         	goto	l5266
  2896   000F3E                     u5850:
  2897   000F3E                     
  2898                           ; BSR set to: 0
  2899                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 678:   e++;
  2900   000F3E  4BAB               	infsnz	efgtoa@e& (0+255),f,b
  2901   000F40  2BAC               	incf	(efgtoa@e+1)& (0+255),f,b
  2902   000F42                     
  2903                           ; BSR set to: 0
  2904                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 679:   ou.f *= 10
      +                          .0;
  2905   000F42  C0AF  F066         	movff	efgtoa@ou,___flmul@b
  2906   000F46  C0B0  F067         	movff	efgtoa@ou+1,___flmul@b+1
  2907   000F4A  C0B1  F068         	movff	efgtoa@ou+2,___flmul@b+2
  2908   000F4E  C0B2  F069         	movff	efgtoa@ou+3,___flmul@b+3
  2909   000F52  0E00               	movlw	0
  2910   000F54  6F6A               	movwf	___flmul@a& (0+255),b
  2911   000F56  0E00               	movlw	0
  2912   000F58  6F6B               	movwf	(___flmul@a+1)& (0+255),b
  2913   000F5A  0E20               	movlw	32
  2914   000F5C  6F6C               	movwf	(___flmul@a+2)& (0+255),b
  2915   000F5E  0E41               	movlw	65
  2916   000F60  6F6D               	movwf	(___flmul@a+3)& (0+255),b
  2917   000F62  ECA1  F00B         	call	___flmul	;wreg free
  2918   000F66  C066  F0AF         	movff	?___flmul,efgtoa@ou
  2919   000F6A  C067  F0B0         	movff	?___flmul+1,efgtoa@ou+1
  2920   000F6E  C068  F0B1         	movff	?___flmul+2,efgtoa@ou+2
  2921   000F72  C069  F0B2         	movff	?___flmul+3,efgtoa@ou+3
  2922   000F76                     
  2923                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 681:   if (nmode 
      +                          == 'f') {
  2924   000F76  0E66               	movlw	102
  2925   000F78  0100               	movlb	0	; () banked
  2926   000F7A  19A6               	xorwf	efgtoa@nmode& (0+255),w,b
  2927   000F7C  A4D8               	btfss	status,2,c
  2928   000F7E  EFC3  F007         	goto	u5861
  2929   000F82  EFC5  F007         	goto	u5860
  2930   000F86                     u5861:
  2931   000F86  EFC7  F007         	goto	l5266
  2932   000F8A                     u5860:
  2933   000F8A                     
  2934                           ; BSR set to: 0
  2935                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 683:    m++;
  2936   000F8A  4BA9               	infsnz	efgtoa@m& (0+255),f,b
  2937   000F8C  2BAA               	incf	(efgtoa@m+1)& (0+255),f,b
  2938   000F8E                     l5266:
  2939                           
  2940                           ; BSR set to: 0
  2941                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 689:     u = ou;
  2942   000F8E  C0AF  F0C4         	movff	efgtoa@ou,efgtoa@u
  2943   000F92  C0B0  F0C5         	movff	efgtoa@ou+1,efgtoa@u+1
  2944   000F96  C0B1  F0C6         	movff	efgtoa@ou+2,efgtoa@u+2
  2945   000F9A  C0B2  F0C7         	movff	efgtoa@ou+3,efgtoa@u+3
  2946   000F9E                     
  2947                           ; BSR set to: 0
  2948                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 693:  ne = e;
  2949   000F9E  C0AB  F09C         	movff	efgtoa@e,efgtoa@ne
  2950   000FA2  C0AC  F09D         	movff	efgtoa@e+1,efgtoa@ne+1
  2951   000FA6                     
  2952                           ; BSR set to: 0
  2953                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 695:     pp = 0;
  2954   000FA6  0E00               	movlw	0
  2955   000FA8  6FA4               	movwf	efgtoa@pp& (0+255),b
  2956   000FAA                     
  2957                           ; BSR set to: 0
  2958                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 696:     t = 0;
  2959   000FAA  0E00               	movlw	0
  2960   000FAC  6FA1               	movwf	(efgtoa@t+1)& (0+255),b
  2961   000FAE  0E00               	movlw	0
  2962   000FB0  6FA0               	movwf	efgtoa@t& (0+255),b
  2963   000FB2                     
  2964                           ; BSR set to: 0
  2965                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 697:     i = 0;
  2966   000FB2  0E00               	movlw	0
  2967   000FB4  6FB4               	movwf	(efgtoa@i+1)& (0+255),b
  2968   000FB6  0E00               	movlw	0
  2969   000FB8  6FB3               	movwf	efgtoa@i& (0+255),b
  2970                           
  2971                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  2972   000FBA  EFC4  F008         	goto	l5316
  2973   000FBE                     l5276:
  2974                           
  2975                           ; BSR set to: 0
  2976                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 699:         l = 
      +                          floorf(h/u.f);
  2977   000FBE  C0B5  F01B         	movff	efgtoa@h,___fldiv@b
  2978   000FC2  C0B6  F01C         	movff	efgtoa@h+1,___fldiv@b+1
  2979   000FC6  C0B7  F01D         	movff	efgtoa@h+2,___fldiv@b+2
  2980   000FCA  C0B8  F01E         	movff	efgtoa@h+3,___fldiv@b+3
  2981   000FCE  C0C4  F01F         	movff	efgtoa@u,___fldiv@a
  2982   000FD2  C0C5  F020         	movff	efgtoa@u+1,___fldiv@a+1
  2983   000FD6  C0C6  F021         	movff	efgtoa@u+2,___fldiv@a+2
  2984   000FDA  C0C7  F022         	movff	efgtoa@u+3,___fldiv@a+3
  2985   000FDE  ECB7  F00D         	call	___fldiv	;wreg free
  2986   000FE2  C01B  F027         	movff	?___fldiv,floorf@x
  2987   000FE6  C01C  F028         	movff	?___fldiv+1,floorf@x+1
  2988   000FEA  C01D  F029         	movff	?___fldiv+2,floorf@x+2
  2989   000FEE  C01E  F02A         	movff	?___fldiv+3,floorf@x+3
  2990   000FF2  EC25  F012         	call	_floorf	;wreg free
  2991   000FF6  C027  F0B9         	movff	?_floorf,efgtoa@l
  2992   000FFA  C028  F0BA         	movff	?_floorf+1,efgtoa@l+1
  2993   000FFE  C029  F0BB         	movff	?_floorf+2,efgtoa@l+2
  2994   001002  C02A  F0BC         	movff	?_floorf+3,efgtoa@l+3
  2995                           
  2996                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 700:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  2997   001006  C0B9  F01B         	movff	efgtoa@l,___fltol@f1
  2998   00100A  C0BA  F01C         	movff	efgtoa@l+1,___fltol@f1+1
  2999   00100E  C0BB  F01D         	movff	efgtoa@l+2,___fltol@f1+2
  3000   001012  C0BC  F01E         	movff	efgtoa@l+3,___fltol@f1+3
  3001   001016  ECB1  F014         	call	___fltol	;wreg free
  3002   00101A  BE1C               	btfsc	(?___fltol+1)^0,7,c
  3003   00101C  EF1B  F008         	goto	u5870
  3004   001020  501C               	movf	(?___fltol+1)^0,w,c
  3005   001022  E107               	bnz	u5871
  3006   001024  0E0A               	movlw	10
  3007   001026  5C1B               	subwf	?___fltol^0,w,c
  3008   001028  B0D8               	btfsc	status,0,c
  3009   00102A  EF19  F008         	goto	u5871
  3010   00102E  EF1B  F008         	goto	u5870
  3011   001032                     u5871:
  3012   001032  EF2B  F008         	goto	l5280
  3013   001036                     u5870:
  3014   001036  C0B9  F01B         	movff	efgtoa@l,___fltol@f1
  3015   00103A  C0BA  F01C         	movff	efgtoa@l+1,___fltol@f1+1
  3016   00103E  C0BB  F01D         	movff	efgtoa@l+2,___fltol@f1+2
  3017   001042  C0BC  F01E         	movff	efgtoa@l+3,___fltol@f1+3
  3018   001046  ECB1  F014         	call	___fltol	;wreg free
  3019   00104A  C01B  F0A7         	movff	?___fltol,efgtoa@d
  3020   00104E  C01C  F0A8         	movff	?___fltol+1,efgtoa@d+1
  3021   001052  EF30  F008         	goto	l1016
  3022   001056                     l5280:
  3023   001056  0E00               	movlw	0
  3024   001058  0100               	movlb	0	; () banked
  3025   00105A  6FA8               	movwf	(efgtoa@d+1)& (0+255),b
  3026   00105C  0E09               	movlw	9
  3027   00105E  6FA7               	movwf	efgtoa@d& (0+255),b
  3028   001060                     l1016:
  3029                           
  3030                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 711:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 712:             if (!pp &
      +                          & (ne < 0)) {
  3031   001060  0100               	movlb	0	; () banked
  3032   001062  51A4               	movf	efgtoa@pp& (0+255),w,b
  3033   001064  A4D8               	btfss	status,2,c
  3034   001066  EF37  F008         	goto	u5881
  3035   00106A  EF39  F008         	goto	u5880
  3036   00106E                     u5881:
  3037   00106E  EF61  F008         	goto	l5300
  3038   001072                     u5880:
  3039   001072                     
  3040                           ; BSR set to: 0
  3041   001072  BF9D               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3042   001074  EF40  F008         	goto	u5890
  3043   001078  EF3E  F008         	goto	u5891
  3044   00107C                     u5891:
  3045   00107C  EF61  F008         	goto	l5300
  3046   001080                     u5890:
  3047   001080                     
  3048                           ; BSR set to: 0
  3049                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 713:             
      +                              dbuf[n++] = '.';
  3050   001080  0E14               	movlw	low _dbuf
  3051   001082  25C2               	addwf	efgtoa@n& (0+255),w,b
  3052   001084  6ED9               	movwf	fsr2l,c
  3053   001086  0E01               	movlw	high _dbuf
  3054   001088  21C3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3055   00108A  6EDA               	movwf	fsr2h,c
  3056   00108C  0E2E               	movlw	46
  3057   00108E  6EDF               	movwf	indf2,c
  3058   001090                     
  3059                           ; BSR set to: 0
  3060   001090  4BC2               	infsnz	efgtoa@n& (0+255),f,b
  3061   001092  2BC3               	incf	(efgtoa@n+1)& (0+255),f,b
  3062   001094                     
  3063                           ; BSR set to: 0
  3064                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 714:             
      +                              --w;
  3065   001094  07AD               	decf	efgtoa@w& (0+255),f,b
  3066   001096  A0D8               	btfss	status,0,c
  3067   001098  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  3068   00109A                     
  3069                           ; BSR set to: 0
  3070                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 715:             
      +                              pp = 1;
  3071   00109A  0E01               	movlw	1
  3072   00109C  6FA4               	movwf	efgtoa@pp& (0+255),b
  3073   00109E  EF61  F008         	goto	l5300
  3074   0010A2                     l5292:
  3075                           
  3076                           ; BSR set to: 0
  3077                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 718:             
      +                              dbuf[n++] = '0';
  3078   0010A2  0E14               	movlw	low _dbuf
  3079   0010A4  25C2               	addwf	efgtoa@n& (0+255),w,b
  3080   0010A6  6ED9               	movwf	fsr2l,c
  3081   0010A8  0E01               	movlw	high _dbuf
  3082   0010AA  21C3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3083   0010AC  6EDA               	movwf	fsr2h,c
  3084   0010AE  0E30               	movlw	48
  3085   0010B0  6EDF               	movwf	indf2,c
  3086   0010B2                     
  3087                           ; BSR set to: 0
  3088   0010B2  4BC2               	infsnz	efgtoa@n& (0+255),f,b
  3089   0010B4  2BC3               	incf	(efgtoa@n+1)& (0+255),f,b
  3090   0010B6                     
  3091                           ; BSR set to: 0
  3092                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 719:             
      +                              --w;
  3093   0010B6  07AD               	decf	efgtoa@w& (0+255),f,b
  3094   0010B8  A0D8               	btfss	status,0,c
  3095   0010BA  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  3096   0010BC                     
  3097                           ; BSR set to: 0
  3098                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 720:             
      +                              --t;
  3099   0010BC  07A0               	decf	efgtoa@t& (0+255),f,b
  3100   0010BE  A0D8               	btfss	status,0,c
  3101   0010C0  07A1               	decf	(efgtoa@t+1)& (0+255),f,b
  3102   0010C2                     l5300:
  3103                           
  3104                           ; BSR set to: 0
  3105                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 717:             
      +                          while (t) {
  3106   0010C2  51A0               	movf	efgtoa@t& (0+255),w,b
  3107   0010C4  11A1               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3108   0010C6  A4D8               	btfss	status,2,c
  3109   0010C8  EF68  F008         	goto	u5901
  3110   0010CC  EF6A  F008         	goto	u5900
  3111   0010D0                     u5901:
  3112   0010D0  EF51  F008         	goto	l5292
  3113   0010D4                     u5900:
  3114   0010D4                     
  3115                           ; BSR set to: 0
  3116                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 722:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3117   0010D4  0E14               	movlw	low _dbuf
  3118   0010D6  25C2               	addwf	efgtoa@n& (0+255),w,b
  3119   0010D8  6ED9               	movwf	fsr2l,c
  3120   0010DA  0E01               	movlw	high _dbuf
  3121   0010DC  21C3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3122   0010DE  6EDA               	movwf	fsr2h,c
  3123   0010E0  51A7               	movf	efgtoa@d& (0+255),w,b
  3124   0010E2  0F30               	addlw	48
  3125   0010E4  6EDF               	movwf	indf2,c
  3126   0010E6                     
  3127                           ; BSR set to: 0
  3128   0010E6  4BC2               	infsnz	efgtoa@n& (0+255),f,b
  3129   0010E8  2BC3               	incf	(efgtoa@n+1)& (0+255),f,b
  3130   0010EA                     
  3131                           ; BSR set to: 0
  3132                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 723:             
      +                          --w;
  3133   0010EA  07AD               	decf	efgtoa@w& (0+255),f,b
  3134   0010EC  A0D8               	btfss	status,0,c
  3135   0010EE  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  3136   0010F0                     
  3137                           ; BSR set to: 0
  3138                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 724:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 725:         h -= l*
      +                          u.f;
  3139   0010F0  C0B5  F08B         	movff	efgtoa@h,___flsub@b
  3140   0010F4  C0B6  F08C         	movff	efgtoa@h+1,___flsub@b+1
  3141   0010F8  C0B7  F08D         	movff	efgtoa@h+2,___flsub@b+2
  3142   0010FC  C0B8  F08E         	movff	efgtoa@h+3,___flsub@b+3
  3143   001100  C0B9  F06A         	movff	efgtoa@l,___flmul@a
  3144   001104  C0BA  F06B         	movff	efgtoa@l+1,___flmul@a+1
  3145   001108  C0BB  F06C         	movff	efgtoa@l+2,___flmul@a+2
  3146   00110C  C0BC  F06D         	movff	efgtoa@l+3,___flmul@a+3
  3147   001110  C0C4  F066         	movff	efgtoa@u,___flmul@b
  3148   001114  C0C5  F067         	movff	efgtoa@u+1,___flmul@b+1
  3149   001118  C0C6  F068         	movff	efgtoa@u+2,___flmul@b+2
  3150   00111C  C0C7  F069         	movff	efgtoa@u+3,___flmul@b+3
  3151   001120  ECA1  F00B         	call	___flmul	;wreg free
  3152   001124  C066  F08F         	movff	?___flmul,___flsub@a
  3153   001128  C067  F090         	movff	?___flmul+1,___flsub@a+1
  3154   00112C  C068  F091         	movff	?___flmul+2,___flsub@a+2
  3155   001130  C069  F092         	movff	?___flmul+3,___flsub@a+3
  3156   001134  EC37  F01A         	call	___flsub	;wreg free
  3157   001138  C08B  F0B5         	movff	?___flsub,efgtoa@h
  3158   00113C  C08C  F0B6         	movff	?___flsub+1,efgtoa@h+1
  3159   001140  C08D  F0B7         	movff	?___flsub+2,efgtoa@h+2
  3160   001144  C08E  F0B8         	movff	?___flsub+3,efgtoa@h+3
  3161   001148                     
  3162                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 726:         u.f 
      +                          = u.f/10.0;
  3163   001148  C0C4  F01B         	movff	efgtoa@u,___fldiv@b
  3164   00114C  C0C5  F01C         	movff	efgtoa@u+1,___fldiv@b+1
  3165   001150  C0C6  F01D         	movff	efgtoa@u+2,___fldiv@b+2
  3166   001154  C0C7  F01E         	movff	efgtoa@u+3,___fldiv@b+3
  3167   001158  0E00               	movlw	0
  3168   00115A  6E1F               	movwf	___fldiv@a^0,c
  3169   00115C  0E00               	movlw	0
  3170   00115E  6E20               	movwf	(___fldiv@a+1)^0,c
  3171   001160  0E20               	movlw	32
  3172   001162  6E21               	movwf	(___fldiv@a+2)^0,c
  3173   001164  0E41               	movlw	65
  3174   001166  6E22               	movwf	(___fldiv@a+3)^0,c
  3175   001168  ECB7  F00D         	call	___fldiv	;wreg free
  3176   00116C  C01B  F0C4         	movff	?___fldiv,efgtoa@u
  3177   001170  C01C  F0C5         	movff	?___fldiv+1,efgtoa@u+1
  3178   001174  C01D  F0C6         	movff	?___fldiv+2,efgtoa@u+2
  3179   001178  C01E  F0C7         	movff	?___fldiv+3,efgtoa@u+3
  3180   00117C                     
  3181                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 727:         --ne
      +                          ;
  3182   00117C  0100               	movlb	0	; () banked
  3183   00117E  079C               	decf	efgtoa@ne& (0+255),f,b
  3184   001180  A0D8               	btfss	status,0,c
  3185   001182  079D               	decf	(efgtoa@ne+1)& (0+255),f,b
  3186   001184                     
  3187                           ; BSR set to: 0
  3188                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 728:         ++i;
  3189   001184  4BB3               	infsnz	efgtoa@i& (0+255),f,b
  3190   001186  2BB4               	incf	(efgtoa@i+1)& (0+255),f,b
  3191   001188                     l5316:
  3192                           
  3193                           ; BSR set to: 0
  3194                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3195   001188  51A9               	movf	efgtoa@m& (0+255),w,b
  3196   00118A  5DB3               	subwf	efgtoa@i& (0+255),w,b
  3197   00118C  51B4               	movf	(efgtoa@i+1)& (0+255),w,b
  3198   00118E  0A80               	xorlw	128
  3199   001190  6F9A               	movwf	??_efgtoa& (0+255),b
  3200   001192  51AA               	movf	(efgtoa@m+1)& (0+255),w,b
  3201   001194  0A80               	xorlw	128
  3202   001196  599A               	subwfb	??_efgtoa& (0+255),w,b
  3203   001198  B0D8               	btfsc	status,0,c
  3204   00119A  EFD1  F008         	goto	u5911
  3205   00119E  EFD3  F008         	goto	u5910
  3206   0011A2                     u5911:
  3207   0011A2  EFE1  F008         	goto	l5320
  3208   0011A6                     u5910:
  3209   0011A6                     
  3210                           ; BSR set to: 0
  3211   0011A6  BFC3               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3212   0011A8  EFDF  F008         	goto	u5921
  3213   0011AC  51C3               	movf	(efgtoa@n+1)& (0+255),w,b
  3214   0011AE  E109               	bnz	u5920
  3215   0011B0  0E4B               	movlw	75
  3216   0011B2  5DC2               	subwf	efgtoa@n& (0+255),w,b
  3217   0011B4  A0D8               	btfss	status,0,c
  3218   0011B6  EFDF  F008         	goto	u5921
  3219   0011BA  EFE1  F008         	goto	u5920
  3220   0011BE                     u5921:
  3221   0011BE  EFDF  F007         	goto	l5276
  3222   0011C2                     u5920:
  3223   0011C2                     l5320:
  3224                           
  3225                           ; BSR set to: 0
  3226                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 735:  i = sizeof(
      +                          dbuf) - 1;
  3227   0011C2  0E00               	movlw	0
  3228   0011C4  6FB4               	movwf	(efgtoa@i+1)& (0+255),b
  3229   0011C6  0E4F               	movlw	79
  3230   0011C8  6FB3               	movwf	efgtoa@i& (0+255),b
  3231   0011CA                     
  3232                           ; BSR set to: 0
  3233                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 736:     dbuf[i] 
      +                          = '\0';
  3234   0011CA  0E14               	movlw	low _dbuf
  3235   0011CC  25B3               	addwf	efgtoa@i& (0+255),w,b
  3236   0011CE  6ED9               	movwf	fsr2l,c
  3237   0011D0  0E01               	movlw	high _dbuf
  3238   0011D2  21B4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3239   0011D4  6EDA               	movwf	fsr2h,c
  3240   0011D6  0E00               	movlw	0
  3241   0011D8  6EDF               	movwf	indf2,c
  3242   0011DA                     
  3243                           ; BSR set to: 0
  3244                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 767:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  3245   0011DA  0E14               	movlw	low _dbuf
  3246   0011DC  6F9A               	movwf	??_efgtoa& (0+255),b
  3247   0011DE  0E01               	movlw	high _dbuf
  3248   0011E0  6F9B               	movwf	(??_efgtoa+1)& (0+255),b
  3249   0011E2  51C2               	movf	efgtoa@n& (0+255),w,b
  3250   0011E4  5F9A               	subwf	??_efgtoa& (0+255),f,b
  3251   0011E6  51C3               	movf	(efgtoa@n+1)& (0+255),w,b
  3252   0011E8  5B9B               	subwfb	(??_efgtoa+1)& (0+255),f,b
  3253   0011EA  51B3               	movf	efgtoa@i& (0+255),w,b
  3254   0011EC  259A               	addwf	??_efgtoa& (0+255),w,b
  3255   0011EE  6E1B               	movwf	memcpy@d1^0,c
  3256   0011F0  51B4               	movf	(efgtoa@i+1)& (0+255),w,b
  3257   0011F2  219B               	addwfc	(??_efgtoa+1)& (0+255),w,b
  3258   0011F4  6E1C               	movwf	(memcpy@d1+1)^0,c
  3259   0011F6  0E14               	movlw	low _dbuf
  3260   0011F8  6E1D               	movwf	memcpy@s1^0,c
  3261   0011FA  0E01               	movlw	high _dbuf
  3262   0011FC  6E1E               	movwf	(memcpy@s1+1)^0,c
  3263   0011FE  C0C2  F01F         	movff	efgtoa@n,memcpy@n
  3264   001202  C0C3  F020         	movff	efgtoa@n+1,memcpy@n+1
  3265   001206  ECE7  F019         	call	_memcpy	;wreg free
  3266   00120A                     
  3267                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 768:  n = i-n;
  3268   00120A  0100               	movlb	0	; () banked
  3269   00120C  51C2               	movf	efgtoa@n& (0+255),w,b
  3270   00120E  5DB3               	subwf	efgtoa@i& (0+255),w,b
  3271   001210  6FC2               	movwf	efgtoa@n& (0+255),b
  3272   001212  51C3               	movf	(efgtoa@n+1)& (0+255),w,b
  3273   001214  59B4               	subwfb	(efgtoa@i+1)& (0+255),w,b
  3274   001216  6FC3               	movwf	(efgtoa@n+1)& (0+255),b
  3275   001218                     
  3276                           ; BSR set to: 0
  3277                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 769:  i = sign ==
      +                           0 ? 0 : 1;
  3278   001218  51BD               	movf	efgtoa@sign& (0+255),w,b
  3279   00121A  A4D8               	btfss	status,2,c
  3280   00121C  EF12  F009         	goto	u5931
  3281   001220  EF15  F009         	goto	u5930
  3282   001224                     u5931:
  3283   001224  0E01               	movlw	1
  3284   001226  EF16  F009         	goto	u5940
  3285   00122A                     u5930:
  3286   00122A  0E00               	movlw	0
  3287   00122C                     u5940:
  3288   00122C  6FB3               	movwf	efgtoa@i& (0+255),b
  3289   00122E  6BB4               	clrf	(efgtoa@i+1)& (0+255),b
  3290   001230                     
  3291                           ; BSR set to: 0
  3292                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 780:  if (sign) {
  3293   001230  51BD               	movf	efgtoa@sign& (0+255),w,b
  3294   001232  B4D8               	btfsc	status,2,c
  3295   001234  EF1E  F009         	goto	u5951
  3296   001238  EF20  F009         	goto	u5950
  3297   00123C                     u5951:
  3298   00123C  EF2B  F009         	goto	l5334
  3299   001240                     u5950:
  3300   001240                     
  3301                           ; BSR set to: 0
  3302                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 781:   dbuf[--n] 
      +                          = sign;
  3303   001240  07C2               	decf	efgtoa@n& (0+255),f,b
  3304   001242  A0D8               	btfss	status,0,c
  3305   001244  07C3               	decf	(efgtoa@n+1)& (0+255),f,b
  3306   001246  0E14               	movlw	low _dbuf
  3307   001248  25C2               	addwf	efgtoa@n& (0+255),w,b
  3308   00124A  6ED9               	movwf	fsr2l,c
  3309   00124C  0E01               	movlw	high _dbuf
  3310   00124E  21C3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3311   001250  6EDA               	movwf	fsr2h,c
  3312   001252  C0BD  FFDF         	movff	efgtoa@sign,indf2
  3313   001256                     l5334:
  3314                           
  3315                           ; BSR set to: 0
  3316                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 783:  w -= i;
  3317   001256  51B3               	movf	efgtoa@i& (0+255),w,b
  3318   001258  5FAD               	subwf	efgtoa@w& (0+255),f,b
  3319   00125A  51B4               	movf	(efgtoa@i+1)& (0+255),w,b
  3320   00125C  5BAE               	subwfb	(efgtoa@w+1)& (0+255),f,b
  3321   00125E                     
  3322                           ; BSR set to: 0
  3323                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 786:     return (
      +                          void) pad(fp, &dbuf[n], w);
  3324   00125E  C093  F060         	movff	efgtoa@fp,pad@fp
  3325   001262  C094  F061         	movff	efgtoa@fp+1,pad@fp+1
  3326   001266  0E14               	movlw	low _dbuf
  3327   001268  25C2               	addwf	efgtoa@n& (0+255),w,b
  3328   00126A  6F62               	movwf	pad@buf& (0+255),b
  3329   00126C  0E01               	movlw	high _dbuf
  3330   00126E  21C3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3331   001270  6F63               	movwf	(pad@buf+1)& (0+255),b
  3332   001272  C0AD  F064         	movff	efgtoa@w,pad@p
  3333   001276  C0AE  F065         	movff	efgtoa@w+1,pad@p+1
  3334   00127A  EC42  F017         	call	_pad	;wreg free
  3335   00127E                     l983:
  3336   00127E  0012               	return		;funcret
  3337   001280                     __end_of_efgtoa:
  3338                           	callstack 0
  3339                           
  3340 ;; *************** function _strcpy *****************
  3341 ;; Defined at:
  3342 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  3343 ;; Parameters:    Size  Location     Type
  3344 ;;  dest            2   26[COMRAM] PTR unsigned char 
  3345 ;;		 -> dbuf(80), 
  3346 ;;  src             2   28[COMRAM] PTR const unsigned char 
  3347 ;;		 -> STR_26(4), STR_23(4), 
  3348 ;; Auto vars:     Size  Location     Type
  3349 ;;  d               2   32[COMRAM] PTR unsigned char 
  3350 ;;		 -> dbuf(80), 
  3351 ;;  s               2   30[COMRAM] PTR const unsigned char 
  3352 ;;		 -> STR_26(4), STR_23(4), 
  3353 ;; Return value:  Size  Location     Type
  3354 ;;                  2   26[COMRAM] PTR unsigned char 
  3355 ;; Registers used:
  3356 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3357 ;; Tracked objects:
  3358 ;;		On entry : 0/0
  3359 ;;		On exit  : 0/0
  3360 ;;		Unchanged: 0/0
  3361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3362 ;;      Params:         4       0       0       0       0       0       0       0       0
  3363 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3364 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3365 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3366 ;;Total ram usage:        8 bytes
  3367 ;; Hardware stack levels used: 1
  3368 ;; Hardware stack levels required when called: 8
  3369 ;; This function calls:
  3370 ;;		Nothing
  3371 ;; This function is called by:
  3372 ;;		_efgtoa
  3373 ;; This function uses a non-reentrant model
  3374 ;;
  3375                           
  3376                           	psect	text5
  3377   003584                     __ptext5:
  3378                           	callstack 0
  3379   003584                     _strcpy:
  3380                           	callstack 18
  3381   003584  C01D  F01F         	movff	strcpy@src,strcpy@s
  3382   003588  C01E  F020         	movff	strcpy@src+1,strcpy@s+1
  3383   00358C  C01B  F021         	movff	strcpy@dest,strcpy@d
  3384   003590  C01C  F022         	movff	strcpy@dest+1,strcpy@d+1
  3385   003594                     l5040:
  3386   003594  C01F  FFF6         	movff	strcpy@s,tblptrl
  3387   003598  C020  FFF7         	movff	strcpy@s+1,tblptrh
  3388   00359C  4A1F               	infsnz	strcpy@s^0,f,c
  3389   00359E  2A20               	incf	(strcpy@s+1)^0,f,c
  3390   0035A0                     	if	0	;tblptru may be non-zero
  3391   0035A0                     	endif
  3392   0035A0                     	if	0	;tblptru may be non-zero
  3393   0035A0                     	endif
  3394   0035A0  C021  FFD9         	movff	strcpy@d,fsr2l
  3395   0035A4  C022  FFDA         	movff	strcpy@d+1,fsr2h
  3396   0035A8  4A21               	infsnz	strcpy@d^0,f,c
  3397   0035AA  2A22               	incf	(strcpy@d+1)^0,f,c
  3398   0035AC  0008               	tblrd		*
  3399   0035AE  CFF5 FFDF          	movff	tablat,indf2
  3400   0035B2  50DF               	movf	indf2,w,c
  3401   0035B4  A4D8               	btfss	status,2,c
  3402   0035B6  EFDF  F01A         	goto	u5431
  3403   0035BA  EFE1  F01A         	goto	u5430
  3404   0035BE                     u5431:
  3405   0035BE  EFCA  F01A         	goto	l5040
  3406   0035C2                     u5430:
  3407   0035C2  0012               	return		;funcret
  3408   0035C4                     __end_of_strcpy:
  3409                           	callstack 0
  3410                           
  3411 ;; *************** function _pad *****************
  3412 ;; Defined at:
  3413 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3414 ;; Parameters:    Size  Location     Type
  3415 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  3416 ;;		 -> sprintf@f(11), 
  3417 ;;  buf             2    2[BANK0 ] PTR unsigned char 
  3418 ;;		 -> dbuf(80), 
  3419 ;;  p               2    4[BANK0 ] int 
  3420 ;; Auto vars:     Size  Location     Type
  3421 ;;  w               2    9[BANK0 ] int 
  3422 ;;  i               2    7[BANK0 ] int 
  3423 ;; Return value:  Size  Location     Type
  3424 ;;                  1    wreg      void 
  3425 ;; Registers used:
  3426 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3427 ;; Tracked objects:
  3428 ;;		On entry : 0/0
  3429 ;;		On exit  : 0/0
  3430 ;;		Unchanged: 0/0
  3431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3432 ;;      Params:         0       6       0       0       0       0       0       0       0
  3433 ;;      Locals:         0       4       0       0       0       0       0       0       0
  3434 ;;      Temps:          0       1       0       0       0       0       0       0       0
  3435 ;;      Totals:         0      11       0       0       0       0       0       0       0
  3436 ;;Total ram usage:       11 bytes
  3437 ;; Hardware stack levels used: 1
  3438 ;; Hardware stack levels required when called: 11
  3439 ;; This function calls:
  3440 ;;		_fputc
  3441 ;;		_fputs
  3442 ;; This function is called by:
  3443 ;;		_efgtoa
  3444 ;; This function uses a non-reentrant model
  3445 ;;
  3446                           
  3447                           	psect	text6
  3448   002E84                     __ptext6:
  3449                           	callstack 0
  3450   002E84                     _pad:
  3451                           	callstack 15
  3452   002E84                     
  3453                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  3454   002E84  0100               	movlb	0	; () banked
  3455   002E86  BF65               	btfsc	(pad@p+1)& (0+255),7,b
  3456   002E88  EF48  F017         	goto	u5341
  3457   002E8C  EF4A  F017         	goto	u5340
  3458   002E90                     u5341:
  3459   002E90  EF50  F017         	goto	l5006
  3460   002E94                     u5340:
  3461   002E94                     
  3462                           ; BSR set to: 0
  3463   002E94  C064  F069         	movff	pad@p,pad@w
  3464   002E98  C065  F06A         	movff	pad@p+1,pad@w+1
  3465   002E9C  EF54  F017         	goto	l968
  3466   002EA0                     l5006:
  3467                           
  3468                           ; BSR set to: 0
  3469   002EA0  0E00               	movlw	0
  3470   002EA2  6F6A               	movwf	(pad@w+1)& (0+255),b
  3471   002EA4  0E00               	movlw	0
  3472   002EA6  6F69               	movwf	pad@w& (0+255),b
  3473   002EA8                     l968:
  3474                           
  3475                           ; BSR set to: 0
  3476                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  3477   002EA8  0E00               	movlw	0
  3478   002EAA  6F68               	movwf	(pad@i+1)& (0+255),b
  3479   002EAC  0E00               	movlw	0
  3480   002EAE  6F67               	movwf	pad@i& (0+255),b
  3481                           
  3482                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  3483   002EB0  EF67  F017         	goto	l5012
  3484   002EB4                     l5008:
  3485                           
  3486                           ; BSR set to: 0
  3487                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  3488   002EB4  0E00               	movlw	0
  3489   002EB6  6E1D               	movwf	(fputc@c+1)^0,c
  3490   002EB8  0E20               	movlw	32
  3491   002EBA  6E1C               	movwf	fputc@c^0,c
  3492   002EBC  C060  F01E         	movff	pad@fp,fputc@fp
  3493   002EC0  C061  F01F         	movff	pad@fp+1,fputc@fp+1
  3494   002EC4  EC36  F016         	call	_fputc	;wreg free
  3495   002EC8                     
  3496                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  3497   002EC8  0100               	movlb	0	; () banked
  3498   002ECA  4B67               	infsnz	pad@i& (0+255),f,b
  3499   002ECC  2B68               	incf	(pad@i+1)& (0+255),f,b
  3500   002ECE                     l5012:
  3501                           
  3502                           ; BSR set to: 0
  3503                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  3504   002ECE  5169               	movf	pad@w& (0+255),w,b
  3505   002ED0  5D67               	subwf	pad@i& (0+255),w,b
  3506   002ED2  5168               	movf	(pad@i+1)& (0+255),w,b
  3507   002ED4  0A80               	xorlw	128
  3508   002ED6  6F66               	movwf	??_pad& (0+255),b
  3509   002ED8  516A               	movf	(pad@w+1)& (0+255),w,b
  3510   002EDA  0A80               	xorlw	128
  3511   002EDC  5966               	subwfb	??_pad& (0+255),w,b
  3512   002EDE  A0D8               	btfss	status,0,c
  3513   002EE0  EF74  F017         	goto	u5351
  3514   002EE4  EF76  F017         	goto	u5350
  3515   002EE8                     u5351:
  3516   002EE8  EF5A  F017         	goto	l5008
  3517   002EEC                     u5350:
  3518   002EEC                     
  3519                           ; BSR set to: 0
  3520                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  3521   002EEC  C062  F025         	movff	pad@buf,fputs@s
  3522   002EF0  C063  F026         	movff	pad@buf+1,fputs@s+1
  3523   002EF4  C060  F027         	movff	pad@fp,fputs@fp
  3524   002EF8  C061  F028         	movff	pad@fp+1,fputs@fp+1
  3525   002EFC  EC7E  F01A         	call	_fputs	;wreg free
  3526   002F00  0012               	return		;funcret
  3527   002F02                     __end_of_pad:
  3528                           	callstack 0
  3529                           
  3530 ;; *************** function _fputs *****************
  3531 ;; Defined at:
  3532 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  3533 ;; Parameters:    Size  Location     Type
  3534 ;;  s               2   36[COMRAM] PTR const unsigned char 
  3535 ;;		 -> dbuf(80), 
  3536 ;;  fp              2   38[COMRAM] PTR struct _IO_FILE
  3537 ;;		 -> sprintf@f(11), 
  3538 ;; Auto vars:     Size  Location     Type
  3539 ;;  i               2   41[COMRAM] int 
  3540 ;;  c               1   40[COMRAM] unsigned char 
  3541 ;; Return value:  Size  Location     Type
  3542 ;;                  2   36[COMRAM] int 
  3543 ;; Registers used:
  3544 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3545 ;; Tracked objects:
  3546 ;;		On entry : 0/0
  3547 ;;		On exit  : 0/0
  3548 ;;		Unchanged: 0/0
  3549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3550 ;;      Params:         4       0       0       0       0       0       0       0       0
  3551 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3552 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3553 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3554 ;;Total ram usage:        7 bytes
  3555 ;; Hardware stack levels used: 1
  3556 ;; Hardware stack levels required when called: 10
  3557 ;; This function calls:
  3558 ;;		_fputc
  3559 ;; This function is called by:
  3560 ;;		_pad
  3561 ;; This function uses a non-reentrant model
  3562 ;;
  3563                           
  3564                           	psect	text7
  3565   0034FC                     __ptext7:
  3566                           	callstack 0
  3567   0034FC                     _fputs:
  3568                           	callstack 15
  3569   0034FC  0E00               	movlw	0
  3570   0034FE  6E2B               	movwf	(fputs@i+1)^0,c
  3571   003500  0E00               	movlw	0
  3572   003502  6E2A               	movwf	fputs@i^0,c
  3573   003504  EF8F  F01A         	goto	l4630
  3574   003508                     l4626:
  3575   003508  C029  F01C         	movff	fputs@c,fputc@c
  3576   00350C  6A1D               	clrf	(fputc@c+1)^0,c
  3577   00350E  C027  F01E         	movff	fputs@fp,fputc@fp
  3578   003512  C028  F01F         	movff	fputs@fp+1,fputc@fp+1
  3579   003516  EC36  F016         	call	_fputc	;wreg free
  3580   00351A  4A2A               	infsnz	fputs@i^0,f,c
  3581   00351C  2A2B               	incf	(fputs@i+1)^0,f,c
  3582   00351E                     l4630:
  3583   00351E  502A               	movf	fputs@i^0,w,c
  3584   003520  2425               	addwf	fputs@s^0,w,c
  3585   003522  6ED9               	movwf	fsr2l,c
  3586   003524  502B               	movf	(fputs@i+1)^0,w,c
  3587   003526  2026               	addwfc	(fputs@s+1)^0,w,c
  3588   003528  6EDA               	movwf	fsr2h,c
  3589   00352A  50DF               	movf	indf2,w,c
  3590   00352C  6E29               	movwf	fputs@c^0,c
  3591   00352E  5029               	movf	fputs@c^0,w,c
  3592   003530  A4D8               	btfss	status,2,c
  3593   003532  EF9D  F01A         	goto	u4751
  3594   003536  EF9F  F01A         	goto	u4750
  3595   00353A                     u4751:
  3596   00353A  EF84  F01A         	goto	l4626
  3597   00353E                     u4750:
  3598   00353E  0012               	return		;funcret
  3599   003540                     __end_of_fputs:
  3600                           	callstack 0
  3601                           
  3602 ;; *************** function _fputc *****************
  3603 ;; Defined at:
  3604 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  3605 ;; Parameters:    Size  Location     Type
  3606 ;;  c               2   27[COMRAM] int 
  3607 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  3608 ;;		 -> sprintf@f(11), 
  3609 ;; Auto vars:     Size  Location     Type
  3610 ;;		None
  3611 ;; Return value:  Size  Location     Type
  3612 ;;                  2   27[COMRAM] int 
  3613 ;; Registers used:
  3614 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3615 ;; Tracked objects:
  3616 ;;		On entry : 0/0
  3617 ;;		On exit  : 0/0
  3618 ;;		Unchanged: 0/0
  3619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3620 ;;      Params:         4       0       0       0       0       0       0       0       0
  3621 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3622 ;;      Temps:          5       0       0       0       0       0       0       0       0
  3623 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3624 ;;Total ram usage:        9 bytes
  3625 ;; Hardware stack levels used: 1
  3626 ;; Hardware stack levels required when called: 9
  3627 ;; This function calls:
  3628 ;;		_putch
  3629 ;; This function is called by:
  3630 ;;		_pad
  3631 ;;		_vfpfcnvrt
  3632 ;;		_fputs
  3633 ;; This function uses a non-reentrant model
  3634 ;;
  3635                           
  3636                           	psect	text8
  3637   002C6C                     __ptext8:
  3638                           	callstack 0
  3639   002C6C                     _fputc:
  3640                           	callstack 18
  3641   002C6C  501E               	movf	fputc@fp^0,w,c
  3642   002C6E  101F               	iorwf	(fputc@fp+1)^0,w,c
  3643   002C70  B4D8               	btfsc	status,2,c
  3644   002C72  EF3D  F016         	goto	u4321
  3645   002C76  EF3F  F016         	goto	u4320
  3646   002C7A                     u4321:
  3647   002C7A  EF48  F016         	goto	l4412
  3648   002C7E                     u4320:
  3649   002C7E  501E               	movf	fputc@fp^0,w,c
  3650   002C80  101F               	iorwf	(fputc@fp+1)^0,w,c
  3651   002C82  A4D8               	btfss	status,2,c
  3652   002C84  EF46  F016         	goto	u4331
  3653   002C88  EF48  F016         	goto	u4330
  3654   002C8C                     u4331:
  3655   002C8C  EF4D  F016         	goto	l4414
  3656   002C90                     u4330:
  3657   002C90                     l4412:
  3658   002C90  501C               	movf	fputc@c^0,w,c
  3659   002C92  ECE4  F01B         	call	_putch
  3660   002C96  EF9A  F016         	goto	l1146
  3661   002C9A                     l4414:
  3662   002C9A  EE20 F009          	lfsr	2,9
  3663   002C9E  501E               	movf	fputc@fp^0,w,c
  3664   002CA0  26D9               	addwf	fsr2l,f,c
  3665   002CA2  501F               	movf	(fputc@fp+1)^0,w,c
  3666   002CA4  22DA               	addwfc	fsr2h,f,c
  3667   002CA6  50DE               	movf	postinc2,w,c
  3668   002CA8  10DE               	iorwf	postinc2,w,c
  3669   002CAA  B4D8               	btfsc	status,2,c
  3670   002CAC  EF5A  F016         	goto	u4341
  3671   002CB0  EF5C  F016         	goto	u4340
  3672   002CB4                     u4341:
  3673   002CB4  EF77  F016         	goto	l4418
  3674   002CB8                     u4340:
  3675   002CB8  EE20 F009          	lfsr	2,9
  3676   002CBC  501E               	movf	fputc@fp^0,w,c
  3677   002CBE  26D9               	addwf	fsr2l,f,c
  3678   002CC0  501F               	movf	(fputc@fp+1)^0,w,c
  3679   002CC2  22DA               	addwfc	fsr2h,f,c
  3680   002CC4  EE10 F003          	lfsr	1,3
  3681   002CC8  501E               	movf	fputc@fp^0,w,c
  3682   002CCA  26E1               	addwf	fsr1l,f,c
  3683   002CCC  501F               	movf	(fputc@fp+1)^0,w,c
  3684   002CCE  22E2               	addwfc	fsr1h,f,c
  3685   002CD0  50DE               	movf	postinc2,w,c
  3686   002CD2  5CE6               	subwf	postinc1,w,c
  3687   002CD4  50E6               	movf	postinc1,w,c
  3688   002CD6  0A80               	xorlw	128
  3689   002CD8  6E24               	movwf	(??_fputc+4)^0,c
  3690   002CDA  50DE               	movf	postinc2,w,c
  3691   002CDC  0A80               	xorlw	128
  3692   002CDE  5824               	subwfb	(??_fputc+4)^0,w,c
  3693   002CE0  B0D8               	btfsc	status,0,c
  3694   002CE2  EF75  F016         	goto	u4351
  3695   002CE6  EF77  F016         	goto	u4350
  3696   002CEA                     u4351:
  3697   002CEA  EF9A  F016         	goto	l1146
  3698   002CEE                     u4350:
  3699   002CEE                     l4418:
  3700   002CEE  EE20 F003          	lfsr	2,3
  3701   002CF2  501E               	movf	fputc@fp^0,w,c
  3702   002CF4  26D9               	addwf	fsr2l,f,c
  3703   002CF6  501F               	movf	(fputc@fp+1)^0,w,c
  3704   002CF8  22DA               	addwfc	fsr2h,f,c
  3705   002CFA  CFDE F020          	movff	postinc2,??_fputc
  3706   002CFE  CFDD F021          	movff	postdec2,??_fputc+1
  3707   002D02  C01E  FFD9         	movff	fputc@fp,fsr2l
  3708   002D06  C01F  FFDA         	movff	fputc@fp+1,fsr2h
  3709   002D0A  CFDE F022          	movff	postinc2,??_fputc+2
  3710   002D0E  CFDD F023          	movff	postdec2,??_fputc+3
  3711   002D12  5020               	movf	??_fputc^0,w,c
  3712   002D14  2422               	addwf	(??_fputc+2)^0,w,c
  3713   002D16  6ED9               	movwf	fsr2l,c
  3714   002D18  5021               	movf	(??_fputc+1)^0,w,c
  3715   002D1A  2023               	addwfc	(??_fputc+3)^0,w,c
  3716   002D1C  6EDA               	movwf	fsr2h,c
  3717   002D1E  C01C  FFDF         	movff	fputc@c,indf2
  3718   002D22  EE20 F003          	lfsr	2,3
  3719   002D26  501E               	movf	fputc@fp^0,w,c
  3720   002D28  26D9               	addwf	fsr2l,f,c
  3721   002D2A  501F               	movf	(fputc@fp+1)^0,w,c
  3722   002D2C  22DA               	addwfc	fsr2h,f,c
  3723   002D2E  2ADE               	incf	postinc2,f,c
  3724   002D30  0E00               	movlw	0
  3725   002D32  22DD               	addwfc	postdec2,f,c
  3726   002D34                     l1146:
  3727   002D34  0012               	return		;funcret
  3728   002D36                     __end_of_fputc:
  3729                           	callstack 0
  3730                           
  3731 ;; *************** function _putch *****************
  3732 ;; Defined at:
  3733 ;;		line 32 in file "../../00_USART_Ejm1/UART.X/USART.c"
  3734 ;; Parameters:    Size  Location     Type
  3735 ;;  c               1    wreg     unsigned char 
  3736 ;; Auto vars:     Size  Location     Type
  3737 ;;  c               1   26[COMRAM] unsigned char 
  3738 ;; Return value:  Size  Location     Type
  3739 ;;                  1    wreg      void 
  3740 ;; Registers used:
  3741 ;;		wreg
  3742 ;; Tracked objects:
  3743 ;;		On entry : 0/0
  3744 ;;		On exit  : 0/0
  3745 ;;		Unchanged: 0/0
  3746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3747 ;;      Params:         0       0       0       0       0       0       0       0       0
  3748 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3749 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3750 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3751 ;;Total ram usage:        1 bytes
  3752 ;; Hardware stack levels used: 1
  3753 ;; Hardware stack levels required when called: 8
  3754 ;; This function calls:
  3755 ;;		Nothing
  3756 ;; This function is called by:
  3757 ;;		_fputc
  3758 ;; This function uses a non-reentrant model
  3759 ;;
  3760                           
  3761                           	psect	text9
  3762   0037C8                     __ptext9:
  3763                           	callstack 0
  3764   0037C8                     _putch:
  3765                           	callstack 18
  3766                           
  3767                           ;incstack = 0
  3768                           ;putch@c stored from wreg
  3769   0037C8  6E1B               	movwf	putch@c^0,c
  3770   0037CA                     
  3771                           ;../../00_USART_Ejm1/UART.X/USART.c: 33:     TXREG = c;
  3772   0037CA  C01B  FFAD         	movff	putch@c,4013	;volatile
  3773   0037CE                     l44:
  3774   0037CE  A2AC               	btfss	172,1,c	;volatile
  3775   0037D0  EFEC  F01B         	goto	u4311
  3776   0037D4  EFEE  F01B         	goto	u4310
  3777   0037D8                     u4311:
  3778   0037D8  EFE7  F01B         	goto	l44
  3779   0037DC                     u4310:
  3780   0037DC  0012               	return		;funcret
  3781   0037DE                     __end_of_putch:
  3782                           	callstack 0
  3783                           
  3784 ;; *************** function _memcpy *****************
  3785 ;; Defined at:
  3786 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
  3787 ;; Parameters:    Size  Location     Type
  3788 ;;  d1              2   26[COMRAM] PTR void 
  3789 ;;		 -> dbuf(80), 
  3790 ;;  s1              2   28[COMRAM] PTR const void 
  3791 ;;		 -> dbuf(80), 
  3792 ;;  n               2   30[COMRAM] unsigned int 
  3793 ;; Auto vars:     Size  Location     Type
  3794 ;;  s               2   35[COMRAM] PTR const unsigned char 
  3795 ;;		 -> dbuf(80), 
  3796 ;;  d               2   33[COMRAM] PTR unsigned char 
  3797 ;;		 -> dbuf(80), 
  3798 ;;  tmp             1   32[COMRAM] unsigned char 
  3799 ;; Return value:  Size  Location     Type
  3800 ;;                  2   26[COMRAM] PTR void 
  3801 ;; Registers used:
  3802 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3803 ;; Tracked objects:
  3804 ;;		On entry : 0/0
  3805 ;;		On exit  : 0/0
  3806 ;;		Unchanged: 0/0
  3807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3808 ;;      Params:         6       0       0       0       0       0       0       0       0
  3809 ;;      Locals:         5       0       0       0       0       0       0       0       0
  3810 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3811 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3812 ;;Total ram usage:       11 bytes
  3813 ;; Hardware stack levels used: 1
  3814 ;; Hardware stack levels required when called: 8
  3815 ;; This function calls:
  3816 ;;		Nothing
  3817 ;; This function is called by:
  3818 ;;		_efgtoa
  3819 ;; This function uses a non-reentrant model
  3820 ;;
  3821                           
  3822                           	psect	text10
  3823   0033CE                     __ptext10:
  3824                           	callstack 0
  3825   0033CE                     _memcpy:
  3826                           	callstack 18
  3827   0033CE  C01D  F024         	movff	memcpy@s1,memcpy@s
  3828   0033D2  C01E  F025         	movff	memcpy@s1+1,memcpy@s+1
  3829   0033D6  C01B  F022         	movff	memcpy@d1,memcpy@d
  3830   0033DA  C01C  F023         	movff	memcpy@d1+1,memcpy@d+1
  3831   0033DE  EF01  F01A         	goto	l5084
  3832   0033E2                     l5076:
  3833   0033E2  C024  FFD9         	movff	memcpy@s,fsr2l
  3834   0033E6  C025  FFDA         	movff	memcpy@s+1,fsr2h
  3835   0033EA  50DF               	movf	indf2,w,c
  3836   0033EC  6E21               	movwf	memcpy@tmp^0,c
  3837   0033EE  4A24               	infsnz	memcpy@s^0,f,c
  3838   0033F0  2A25               	incf	(memcpy@s+1)^0,f,c
  3839   0033F2  C022  FFD9         	movff	memcpy@d,fsr2l
  3840   0033F6  C023  FFDA         	movff	memcpy@d+1,fsr2h
  3841   0033FA  C021  FFDF         	movff	memcpy@tmp,indf2
  3842   0033FE  4A22               	infsnz	memcpy@d^0,f,c
  3843   003400  2A23               	incf	(memcpy@d+1)^0,f,c
  3844   003402                     l5084:
  3845   003402  061F               	decf	memcpy@n^0,f,c
  3846   003404  A0D8               	btfss	status,0,c
  3847   003406  0620               	decf	(memcpy@n+1)^0,f,c
  3848   003408  281F               	incf	memcpy@n^0,w,c
  3849   00340A  E106               	bnz	u5551
  3850   00340C  2820               	incf	(memcpy@n+1)^0,w,c
  3851   00340E  A4D8               	btfss	status,2,c
  3852   003410  EF0C  F01A         	goto	u5551
  3853   003414  EF0E  F01A         	goto	u5550
  3854   003418                     u5551:
  3855   003418  EFF1  F019         	goto	l5076
  3856   00341C                     u5550:
  3857   00341C  0012               	return		;funcret
  3858   00341E                     __end_of_memcpy:
  3859                           	callstack 0
  3860                           
  3861 ;; *************** function _labs *****************
  3862 ;; Defined at:
  3863 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\labs.c"
  3864 ;; Parameters:    Size  Location     Type
  3865 ;;  a               4   26[COMRAM] long 
  3866 ;; Auto vars:     Size  Location     Type
  3867 ;;		None
  3868 ;; Return value:  Size  Location     Type
  3869 ;;                  4   26[COMRAM] long 
  3870 ;; Registers used:
  3871 ;;		wreg, status,2, status,0
  3872 ;; Tracked objects:
  3873 ;;		On entry : 0/0
  3874 ;;		On exit  : 0/0
  3875 ;;		Unchanged: 0/0
  3876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3877 ;;      Params:         4       0       0       0       0       0       0       0       0
  3878 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3879 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3880 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3881 ;;Total ram usage:        8 bytes
  3882 ;; Hardware stack levels used: 1
  3883 ;; Hardware stack levels required when called: 8
  3884 ;; This function calls:
  3885 ;;		Nothing
  3886 ;; This function is called by:
  3887 ;;		_efgtoa
  3888 ;; This function uses a non-reentrant model
  3889 ;;
  3890                           
  3891                           	psect	text11
  3892   002FDE                     __ptext11:
  3893                           	callstack 0
  3894   002FDE                     _labs:
  3895                           	callstack 18
  3896   002FDE  BE1E               	btfsc	(labs@a+3)^0,7,c
  3897   002FE0  EFFE  F017         	goto	u5440
  3898   002FE4  501E               	movf	(labs@a+3)^0,w,c
  3899   002FE6  101D               	iorwf	(labs@a+2)^0,w,c
  3900   002FE8  101C               	iorwf	(labs@a+1)^0,w,c
  3901   002FEA  E106               	bnz	u5441
  3902   002FEC  041B               	decf	labs@a^0,w,c
  3903   002FEE  B0D8               	btfsc	status,0,c
  3904   002FF0  EFFC  F017         	goto	u5441
  3905   002FF4  EFFE  F017         	goto	u5440
  3906   002FF8                     u5441:
  3907   002FF8  EF19  F018         	goto	l1125
  3908   002FFC                     u5440:
  3909   002FFC  C01B  F01F         	movff	labs@a,??_labs
  3910   003000  C01C  F020         	movff	labs@a+1,??_labs+1
  3911   003004  C01D  F021         	movff	labs@a+2,??_labs+2
  3912   003008  C01E  F022         	movff	labs@a+3,??_labs+3
  3913   00300C  1E1F               	comf	??_labs^0,f,c
  3914   00300E  1E20               	comf	(??_labs+1)^0,f,c
  3915   003010  1E21               	comf	(??_labs+2)^0,f,c
  3916   003012  1E22               	comf	(??_labs+3)^0,f,c
  3917   003014  2A1F               	incf	??_labs^0,f,c
  3918   003016  0E00               	movlw	0
  3919   003018  2220               	addwfc	(??_labs+1)^0,f,c
  3920   00301A  2221               	addwfc	(??_labs+2)^0,f,c
  3921   00301C  2222               	addwfc	(??_labs+3)^0,f,c
  3922   00301E  C01F  F01B         	movff	??_labs,?_labs
  3923   003022  C020  F01C         	movff	??_labs+1,?_labs+1
  3924   003026  C021  F01D         	movff	??_labs+2,?_labs+2
  3925   00302A  C022  F01E         	movff	??_labs+3,?_labs+3
  3926   00302E  EF21  F018         	goto	l1128
  3927   003032                     l1125:
  3928   003032  C01B  F01B         	movff	labs@a,?_labs
  3929   003036  C01C  F01C         	movff	labs@a+1,?_labs+1
  3930   00303A  C01D  F01D         	movff	labs@a+2,?_labs+2
  3931   00303E  C01E  F01E         	movff	labs@a+3,?_labs+3
  3932   003042                     l1128:
  3933   003042  0012               	return		;funcret
  3934   003044                     __end_of_labs:
  3935                           	callstack 0
  3936                           
  3937 ;; *************** function _floorf *****************
  3938 ;; Defined at:
  3939 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\floorf.c"
  3940 ;; Parameters:    Size  Location     Type
  3941 ;;  x               4   38[COMRAM] float 
  3942 ;; Auto vars:     Size  Location     Type
  3943 ;;  u               4   25[BANK0 ] struct .
  3944 ;;  m               4   19[BANK0 ] unsigned long 
  3945 ;;  e               2   23[BANK0 ] int 
  3946 ;; Return value:  Size  Location     Type
  3947 ;;                  4   38[COMRAM] float 
  3948 ;; Registers used:
  3949 ;;		wreg, status,2, status,0
  3950 ;; Tracked objects:
  3951 ;;		On entry : 0/0
  3952 ;;		On exit  : 0/0
  3953 ;;		Unchanged: 0/0
  3954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3955 ;;      Params:         4       0       0       0       0       0       0       0       0
  3956 ;;      Locals:         0      10       0       0       0       0       0       0       0
  3957 ;;      Temps:          0       6       0       0       0       0       0       0       0
  3958 ;;      Totals:         4      16       0       0       0       0       0       0       0
  3959 ;;Total ram usage:       20 bytes
  3960 ;; Hardware stack levels used: 1
  3961 ;; Hardware stack levels required when called: 8
  3962 ;; This function calls:
  3963 ;;		Nothing
  3964 ;; This function is called by:
  3965 ;;		_efgtoa
  3966 ;; This function uses a non-reentrant model
  3967 ;;
  3968                           
  3969                           	psect	text12
  3970   00244A                     __ptext12:
  3971                           	callstack 0
  3972   00244A                     _floorf:
  3973                           	callstack 18
  3974   00244A  C02C  F079         	movff	floorf@F526,floorf@u
  3975   00244E  C02D  F07A         	movff	floorf@F526+1,floorf@u+1
  3976   002452  C02E  F07B         	movff	floorf@F526+2,floorf@u+2
  3977   002456  C02F  F07C         	movff	floorf@F526+3,floorf@u+3
  3978   00245A  C027  F079         	movff	floorf@x,floorf@u
  3979   00245E  C028  F07A         	movff	floorf@x+1,floorf@u+1
  3980   002462  C029  F07B         	movff	floorf@x+2,floorf@u+2
  3981   002466  C02A  F07C         	movff	floorf@x+3,floorf@u+3
  3982   00246A  0E81               	movlw	129
  3983   00246C  0100               	movlb	0	; () banked
  3984   00246E  6F6D               	movwf	??_floorf& (0+255),b
  3985   002470  0EFF               	movlw	255
  3986   002472  6F6E               	movwf	(??_floorf+1)& (0+255),b
  3987   002474  C079  F06F         	movff	floorf@u,??_floorf+2
  3988   002478  C07A  F070         	movff	floorf@u+1,??_floorf+3
  3989   00247C  C07B  F071         	movff	floorf@u+2,??_floorf+4
  3990   002480  C07C  F072         	movff	floorf@u+3,??_floorf+5
  3991   002484  0E18               	movlw	24
  3992   002486  EF4A  F012         	goto	u5450
  3993   00248A                     u5455:
  3994   00248A  90D8               	bcf	status,0,c
  3995   00248C  3372               	rrcf	(??_floorf+5)& (0+255),f,b
  3996   00248E  3371               	rrcf	(??_floorf+4)& (0+255),f,b
  3997   002490  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  3998   002492  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  3999   002494                     u5450:
  4000   002494  2EE8               	decfsz	wreg,f,c
  4001   002496  EF45  F012         	goto	u5455
  4002   00249A  516F               	movf	(??_floorf+2)& (0+255),w,b
  4003   00249C  256D               	addwf	??_floorf& (0+255),w,b
  4004   00249E  6F77               	movwf	floorf@e& (0+255),b
  4005   0024A0  0E00               	movlw	0
  4006   0024A2  216E               	addwfc	(??_floorf+1)& (0+255),w,b
  4007   0024A4  6F78               	movwf	(floorf@e+1)& (0+255),b
  4008   0024A6  BF78               	btfsc	(floorf@e+1)& (0+255),7,b
  4009   0024A8  EF5F  F012         	goto	u5461
  4010   0024AC  5178               	movf	(floorf@e+1)& (0+255),w,b
  4011   0024AE  E109               	bnz	u5460
  4012   0024B0  0E17               	movlw	23
  4013   0024B2  5D77               	subwf	floorf@e& (0+255),w,b
  4014   0024B4  A0D8               	btfss	status,0,c
  4015   0024B6  EF5F  F012         	goto	u5461
  4016   0024BA  EF61  F012         	goto	u5460
  4017   0024BE                     u5461:
  4018   0024BE  EF6B  F012         	goto	l5052
  4019   0024C2                     u5460:
  4020   0024C2                     l5050:
  4021                           
  4022                           ; BSR set to: 0
  4023   0024C2  C027  F027         	movff	floorf@x,?_floorf
  4024   0024C6  C028  F028         	movff	floorf@x+1,?_floorf+1
  4025   0024CA  C029  F029         	movff	floorf@x+2,?_floorf+2
  4026   0024CE  C02A  F02A         	movff	floorf@x+3,?_floorf+3
  4027   0024D2  EF2F  F013         	goto	l1100
  4028   0024D6                     l5052:
  4029                           
  4030                           ; BSR set to: 0
  4031   0024D6  BF78               	btfsc	(floorf@e+1)& (0+255),7,b
  4032   0024D8  EF70  F012         	goto	u5471
  4033   0024DC  EF72  F012         	goto	u5470
  4034   0024E0                     u5471:
  4035   0024E0  EFE3  F012         	goto	l5062
  4036   0024E4                     u5470:
  4037   0024E4                     
  4038                           ; BSR set to: 0
  4039   0024E4  C077  F06D         	movff	floorf@e,??_floorf
  4040   0024E8  0EFF               	movlw	255
  4041   0024EA  6F6E               	movwf	(??_floorf+1)& (0+255),b
  4042   0024EC  0EFF               	movlw	255
  4043   0024EE  6F6F               	movwf	(??_floorf+2)& (0+255),b
  4044   0024F0  0E7F               	movlw	127
  4045   0024F2  6F70               	movwf	(??_floorf+3)& (0+255),b
  4046   0024F4  0E00               	movlw	0
  4047   0024F6  6F71               	movwf	(??_floorf+4)& (0+255),b
  4048   0024F8                     u5485:
  4049   0024F8  676D               	tstfsz	??_floorf& (0+255),b
  4050   0024FA  EF81  F012         	goto	u5486
  4051   0024FE  EF89  F012         	goto	u5487
  4052   002502                     u5486:
  4053   002502  3571               	rlcf	(??_floorf+4)& (0+255),w,b
  4054   002504  3371               	rrcf	(??_floorf+4)& (0+255),f,b
  4055   002506  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  4056   002508  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  4057   00250A  336E               	rrcf	(??_floorf+1)& (0+255),f,b
  4058   00250C  2F6D               	decfsz	??_floorf& (0+255),f,b
  4059   00250E  EF7C  F012         	goto	u5485
  4060   002512                     u5487:
  4061   002512  C06E  F073         	movff	??_floorf+1,floorf@m
  4062   002516  C06F  F074         	movff	??_floorf+2,floorf@m+1
  4063   00251A  C070  F075         	movff	??_floorf+3,floorf@m+2
  4064   00251E  C071  F076         	movff	??_floorf+4,floorf@m+3
  4065   002522  0100               	movlb	0	; () banked
  4066   002524  5173               	movf	floorf@m& (0+255),w,b
  4067   002526  1579               	andwf	floorf@u& (0+255),w,b
  4068   002528  6F6D               	movwf	??_floorf& (0+255),b
  4069   00252A  5174               	movf	(floorf@m+1)& (0+255),w,b
  4070   00252C  157A               	andwf	(floorf@u+1)& (0+255),w,b
  4071   00252E  6F6E               	movwf	(??_floorf+1)& (0+255),b
  4072   002530  5175               	movf	(floorf@m+2)& (0+255),w,b
  4073   002532  157B               	andwf	(floorf@u+2)& (0+255),w,b
  4074   002534  6F6F               	movwf	(??_floorf+2)& (0+255),b
  4075   002536  5176               	movf	(floorf@m+3)& (0+255),w,b
  4076   002538  157C               	andwf	(floorf@u+3)& (0+255),w,b
  4077   00253A  6F70               	movwf	(??_floorf+3)& (0+255),b
  4078   00253C  516D               	movf	??_floorf& (0+255),w,b
  4079   00253E  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  4080   002540  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  4081   002542  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  4082   002544  A4D8               	btfss	status,2,c
  4083   002546  EFA7  F012         	goto	u5491
  4084   00254A  EFA9  F012         	goto	u5490
  4085   00254E                     u5491:
  4086   00254E  EFAB  F012         	goto	l5058
  4087   002552                     u5490:
  4088   002552  EF61  F012         	goto	l5050
  4089   002556                     l5058:
  4090                           
  4091                           ; BSR set to: 0
  4092   002556  C079  F06D         	movff	floorf@u,??_floorf
  4093   00255A  C07A  F06E         	movff	floorf@u+1,??_floorf+1
  4094   00255E  C07B  F06F         	movff	floorf@u+2,??_floorf+2
  4095   002562  C07C  F070         	movff	floorf@u+3,??_floorf+3
  4096   002566  0E20               	movlw	32
  4097   002568  EFBB  F012         	goto	u5500
  4098   00256C                     u5505:
  4099   00256C  90D8               	bcf	status,0,c
  4100   00256E  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  4101   002570  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  4102   002572  336E               	rrcf	(??_floorf+1)& (0+255),f,b
  4103   002574  336D               	rrcf	??_floorf& (0+255),f,b
  4104   002576                     u5500:
  4105   002576  2EE8               	decfsz	wreg,f,c
  4106   002578  EFB6  F012         	goto	u5505
  4107   00257C  516D               	movf	??_floorf& (0+255),w,b
  4108   00257E  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  4109   002580  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  4110   002582  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  4111   002584  B4D8               	btfsc	status,2,c
  4112   002586  EFC7  F012         	goto	u5511
  4113   00258A  EFC9  F012         	goto	u5510
  4114   00258E                     u5511:
  4115   00258E  EFD1  F012         	goto	l1103
  4116   002592                     u5510:
  4117   002592                     
  4118                           ; BSR set to: 0
  4119   002592  5173               	movf	floorf@m& (0+255),w,b
  4120   002594  2779               	addwf	floorf@u& (0+255),f,b
  4121   002596  5174               	movf	(floorf@m+1)& (0+255),w,b
  4122   002598  237A               	addwfc	(floorf@u+1)& (0+255),f,b
  4123   00259A  5175               	movf	(floorf@m+2)& (0+255),w,b
  4124   00259C  237B               	addwfc	(floorf@u+2)& (0+255),f,b
  4125   00259E  5176               	movf	(floorf@m+3)& (0+255),w,b
  4126   0025A0  237C               	addwfc	(floorf@u+3)& (0+255),f,b
  4127   0025A2                     l1103:
  4128                           
  4129                           ; BSR set to: 0
  4130   0025A2  1D73               	comf	floorf@m& (0+255),w,b
  4131   0025A4  6F6D               	movwf	??_floorf& (0+255),b
  4132   0025A6  1D74               	comf	(floorf@m+1)& (0+255),w,b
  4133   0025A8  6F6E               	movwf	(??_floorf+1)& (0+255),b
  4134   0025AA  1D75               	comf	(floorf@m+2)& (0+255),w,b
  4135   0025AC  6F6F               	movwf	(??_floorf+2)& (0+255),b
  4136   0025AE  1D76               	comf	(floorf@m+3)& (0+255),w,b
  4137   0025B0  6F70               	movwf	(??_floorf+3)& (0+255),b
  4138   0025B2  516D               	movf	??_floorf& (0+255),w,b
  4139   0025B4  1779               	andwf	floorf@u& (0+255),f,b
  4140   0025B6  516E               	movf	(??_floorf+1)& (0+255),w,b
  4141   0025B8  177A               	andwf	(floorf@u+1)& (0+255),f,b
  4142   0025BA  516F               	movf	(??_floorf+2)& (0+255),w,b
  4143   0025BC  177B               	andwf	(floorf@u+2)& (0+255),f,b
  4144   0025BE  5170               	movf	(??_floorf+3)& (0+255),w,b
  4145   0025C0  177C               	andwf	(floorf@u+3)& (0+255),f,b
  4146   0025C2  EF27  F013         	goto	l5070
  4147   0025C6                     l5062:
  4148                           
  4149                           ; BSR set to: 0
  4150   0025C6  C079  F06D         	movff	floorf@u,??_floorf
  4151   0025CA  C07A  F06E         	movff	floorf@u+1,??_floorf+1
  4152   0025CE  C07B  F06F         	movff	floorf@u+2,??_floorf+2
  4153   0025D2  C07C  F070         	movff	floorf@u+3,??_floorf+3
  4154   0025D6  0E20               	movlw	32
  4155   0025D8  EFF3  F012         	goto	u5520
  4156   0025DC                     u5525:
  4157   0025DC  90D8               	bcf	status,0,c
  4158   0025DE  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  4159   0025E0  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  4160   0025E2  336E               	rrcf	(??_floorf+1)& (0+255),f,b
  4161   0025E4  336D               	rrcf	??_floorf& (0+255),f,b
  4162   0025E6                     u5520:
  4163   0025E6  2EE8               	decfsz	wreg,f,c
  4164   0025E8  EFEE  F012         	goto	u5525
  4165   0025EC  516D               	movf	??_floorf& (0+255),w,b
  4166   0025EE  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  4167   0025F0  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  4168   0025F2  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  4169   0025F4  A4D8               	btfss	status,2,c
  4170   0025F6  EFFF  F012         	goto	u5531
  4171   0025FA  EF01  F013         	goto	u5530
  4172   0025FE                     u5531:
  4173   0025FE  EF0B  F013         	goto	l5066
  4174   002602                     u5530:
  4175   002602                     
  4176                           ; BSR set to: 0
  4177   002602  0E00               	movlw	0
  4178   002604  6F79               	movwf	floorf@u& (0+255),b
  4179   002606  0E00               	movlw	0
  4180   002608  6F7A               	movwf	(floorf@u+1)& (0+255),b
  4181   00260A  0E00               	movlw	0
  4182   00260C  6F7B               	movwf	(floorf@u+2)& (0+255),b
  4183   00260E  0E00               	movlw	0
  4184   002610  6F7C               	movwf	(floorf@u+3)& (0+255),b
  4185   002612  EF27  F013         	goto	l5070
  4186   002616                     l5066:
  4187                           
  4188                           ; BSR set to: 0
  4189   002616  90D8               	bcf	status,0,c
  4190   002618  3579               	rlcf	floorf@u& (0+255),w,b
  4191   00261A  6F6D               	movwf	??_floorf& (0+255),b
  4192   00261C  357A               	rlcf	(floorf@u+1)& (0+255),w,b
  4193   00261E  6F6E               	movwf	(??_floorf+1)& (0+255),b
  4194   002620  357B               	rlcf	(floorf@u+2)& (0+255),w,b
  4195   002622  6F6F               	movwf	(??_floorf+2)& (0+255),b
  4196   002624  357C               	rlcf	(floorf@u+3)& (0+255),w,b
  4197   002626  6F70               	movwf	(??_floorf+3)& (0+255),b
  4198   002628  516D               	movf	??_floorf& (0+255),w,b
  4199   00262A  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  4200   00262C  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  4201   00262E  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  4202   002630  B4D8               	btfsc	status,2,c
  4203   002632  EF1D  F013         	goto	u5541
  4204   002636  EF1F  F013         	goto	u5540
  4205   00263A                     u5541:
  4206   00263A  EF27  F013         	goto	l5070
  4207   00263E                     u5540:
  4208   00263E                     
  4209                           ; BSR set to: 0
  4210   00263E  0E00               	movlw	0
  4211   002640  6F79               	movwf	floorf@u& (0+255),b
  4212   002642  0E00               	movlw	0
  4213   002644  6F7A               	movwf	(floorf@u+1)& (0+255),b
  4214   002646  0E80               	movlw	128
  4215   002648  6F7B               	movwf	(floorf@u+2)& (0+255),b
  4216   00264A  0EBF               	movlw	191
  4217   00264C  6F7C               	movwf	(floorf@u+3)& (0+255),b
  4218   00264E                     l5070:
  4219                           
  4220                           ; BSR set to: 0
  4221   00264E  C079  F027         	movff	floorf@u,?_floorf
  4222   002652  C07A  F028         	movff	floorf@u+1,?_floorf+1
  4223   002656  C07B  F029         	movff	floorf@u+2,?_floorf+2
  4224   00265A  C07C  F02A         	movff	floorf@u+3,?_floorf+3
  4225   00265E                     l1100:
  4226                           
  4227                           ; BSR set to: 0
  4228   00265E  0012               	return		;funcret
  4229   002660                     __end_of_floorf:
  4230                           	callstack 0
  4231                           
  4232 ;; *************** function ___fpclassifyf *****************
  4233 ;; Defined at:
  4234 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__fpclassifyf.c"
  4235 ;; Parameters:    Size  Location     Type
  4236 ;;  x               4   26[COMRAM] float 
  4237 ;; Auto vars:     Size  Location     Type
  4238 ;;  u               4   36[COMRAM] struct .
  4239 ;;  e               2   34[COMRAM] int 
  4240 ;; Return value:  Size  Location     Type
  4241 ;;                  2   26[COMRAM] int 
  4242 ;; Registers used:
  4243 ;;		wreg, status,2, status,0
  4244 ;; Tracked objects:
  4245 ;;		On entry : 0/0
  4246 ;;		On exit  : 0/0
  4247 ;;		Unchanged: 0/0
  4248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4249 ;;      Params:         4       0       0       0       0       0       0       0       0
  4250 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4251 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4252 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4253 ;;Total ram usage:       14 bytes
  4254 ;; Hardware stack levels used: 1
  4255 ;; Hardware stack levels required when called: 8
  4256 ;; This function calls:
  4257 ;;		Nothing
  4258 ;; This function is called by:
  4259 ;;		_efgtoa
  4260 ;; This function uses a non-reentrant model
  4261 ;;
  4262                           
  4263                           	psect	text13
  4264   002B6E                     __ptext13:
  4265                           	callstack 0
  4266   002B6E                     ___fpclassifyf:
  4267                           	callstack 18
  4268   002B6E  C030  F025         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4269   002B72  C031  F026         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4270   002B76  C032  F027         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4271   002B7A  C033  F028         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4272   002B7E  C01B  F025         	movff	___fpclassifyf@x,___fpclassifyf@u
  4273   002B82  C01C  F026         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4274   002B86  C01D  F027         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4275   002B8A  C01E  F028         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4276   002B8E  C025  F01F         	movff	___fpclassifyf@u,??___fpclassifyf
  4277   002B92  C026  F020         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4278   002B96  C027  F021         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4279   002B9A  C028  F022         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4280   002B9E  0E18               	movlw	24
  4281   002BA0  EFD7  F015         	goto	u5360
  4282   002BA4                     u5365:
  4283   002BA4  90D8               	bcf	status,0,c
  4284   002BA6  3222               	rrcf	(??___fpclassifyf+3)^0,f,c
  4285   002BA8  3221               	rrcf	(??___fpclassifyf+2)^0,f,c
  4286   002BAA  3220               	rrcf	(??___fpclassifyf+1)^0,f,c
  4287   002BAC  321F               	rrcf	??___fpclassifyf^0,f,c
  4288   002BAE                     u5360:
  4289   002BAE  2EE8               	decfsz	wreg,f,c
  4290   002BB0  EFD2  F015         	goto	u5365
  4291   002BB4  501F               	movf	??___fpclassifyf^0,w,c
  4292   002BB6  6E23               	movwf	___fpclassifyf@e^0,c
  4293   002BB8  6A24               	clrf	(___fpclassifyf@e+1)^0,c
  4294   002BBA  5023               	movf	___fpclassifyf@e^0,w,c
  4295   002BBC  1024               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4296   002BBE  A4D8               	btfss	status,2,c
  4297   002BC0  EFE4  F015         	goto	u5371
  4298   002BC4  EFE6  F015         	goto	u5370
  4299   002BC8                     u5371:
  4300   002BC8  EF06  F016         	goto	l5028
  4301   002BCC                     u5370:
  4302   002BCC  90D8               	bcf	status,0,c
  4303   002BCE  3425               	rlcf	___fpclassifyf@u^0,w,c
  4304   002BD0  6E1F               	movwf	??___fpclassifyf^0,c
  4305   002BD2  3426               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4306   002BD4  6E20               	movwf	(??___fpclassifyf+1)^0,c
  4307   002BD6  3427               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4308   002BD8  6E21               	movwf	(??___fpclassifyf+2)^0,c
  4309   002BDA  3428               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4310   002BDC  6E22               	movwf	(??___fpclassifyf+3)^0,c
  4311   002BDE  501F               	movf	??___fpclassifyf^0,w,c
  4312   002BE0  1020               	iorwf	(??___fpclassifyf+1)^0,w,c
  4313   002BE2  1021               	iorwf	(??___fpclassifyf+2)^0,w,c
  4314   002BE4  1022               	iorwf	(??___fpclassifyf+3)^0,w,c
  4315   002BE6  A4D8               	btfss	status,2,c
  4316   002BE8  EFF8  F015         	goto	u5381
  4317   002BEC  EFFA  F015         	goto	u5380
  4318   002BF0                     u5381:
  4319   002BF0  EF00  F016         	goto	l5024
  4320   002BF4                     u5380:
  4321   002BF4  0E00               	movlw	0
  4322   002BF6  6E1C               	movwf	(?___fpclassifyf+1)^0,c
  4323   002BF8  0E02               	movlw	2
  4324   002BFA  6E1B               	movwf	?___fpclassifyf^0,c
  4325   002BFC  EF35  F016         	goto	l1068
  4326   002C00                     l5024:
  4327   002C00  0E00               	movlw	0
  4328   002C02  6E1C               	movwf	(?___fpclassifyf+1)^0,c
  4329   002C04  0E03               	movlw	3
  4330   002C06  6E1B               	movwf	?___fpclassifyf^0,c
  4331   002C08  EF35  F016         	goto	l1068
  4332   002C0C                     l5028:
  4333   002C0C  2823               	incf	___fpclassifyf@e^0,w,c
  4334   002C0E  1024               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4335   002C10  A4D8               	btfss	status,2,c
  4336   002C12  EF0D  F016         	goto	u5391
  4337   002C16  EF0F  F016         	goto	u5390
  4338   002C1A                     u5391:
  4339   002C1A  EF31  F016         	goto	l5034
  4340   002C1E                     u5390:
  4341   002C1E  C025  F01F         	movff	___fpclassifyf@u,??___fpclassifyf
  4342   002C22  C026  F020         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4343   002C26  C027  F021         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4344   002C2A  C028  F022         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4345   002C2E  0E09               	movlw	9
  4346   002C30                     u5405:
  4347   002C30  90D8               	bcf	status,0,c
  4348   002C32  361F               	rlcf	??___fpclassifyf^0,f,c
  4349   002C34  3620               	rlcf	(??___fpclassifyf+1)^0,f,c
  4350   002C36  3621               	rlcf	(??___fpclassifyf+2)^0,f,c
  4351   002C38  3622               	rlcf	(??___fpclassifyf+3)^0,f,c
  4352   002C3A  2EE8               	decfsz	wreg,f,c
  4353   002C3C  EF18  F016         	goto	u5405
  4354   002C40  501F               	movf	??___fpclassifyf^0,w,c
  4355   002C42  1020               	iorwf	(??___fpclassifyf+1)^0,w,c
  4356   002C44  1021               	iorwf	(??___fpclassifyf+2)^0,w,c
  4357   002C46  1022               	iorwf	(??___fpclassifyf+3)^0,w,c
  4358   002C48  B4D8               	btfsc	status,2,c
  4359   002C4A  EF29  F016         	goto	u5411
  4360   002C4E  EF2C  F016         	goto	u5410
  4361   002C52                     u5411:
  4362   002C52  0E01               	movlw	1
  4363   002C54  EF2D  F016         	goto	u5420
  4364   002C58                     u5410:
  4365   002C58  0E00               	movlw	0
  4366   002C5A                     u5420:
  4367   002C5A  6E1B               	movwf	?___fpclassifyf^0,c
  4368   002C5C  6A1C               	clrf	(?___fpclassifyf+1)^0,c
  4369   002C5E  EF35  F016         	goto	l1068
  4370   002C62                     l5034:
  4371   002C62  0E00               	movlw	0
  4372   002C64  6E1C               	movwf	(?___fpclassifyf+1)^0,c
  4373   002C66  0E04               	movlw	4
  4374   002C68  6E1B               	movwf	?___fpclassifyf^0,c
  4375   002C6A                     l1068:
  4376   002C6A  0012               	return		;funcret
  4377   002C6C                     __end_of___fpclassifyf:
  4378                           	callstack 0
  4379                           
  4380 ;; *************** function ___fltol *****************
  4381 ;; Defined at:
  4382 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  4383 ;; Parameters:    Size  Location     Type
  4384 ;;  f1              4   26[COMRAM] int 
  4385 ;; Auto vars:     Size  Location     Type
  4386 ;;  exp1            1   35[COMRAM] unsigned char 
  4387 ;;  sign1           1   34[COMRAM] unsigned char 
  4388 ;; Return value:  Size  Location     Type
  4389 ;;                  4   26[COMRAM] long 
  4390 ;; Registers used:
  4391 ;;		wreg, status,2, status,0
  4392 ;; Tracked objects:
  4393 ;;		On entry : 0/0
  4394 ;;		On exit  : 0/0
  4395 ;;		Unchanged: 0/0
  4396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4397 ;;      Params:         4       0       0       0       0       0       0       0       0
  4398 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4399 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4400 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4401 ;;Total ram usage:       10 bytes
  4402 ;; Hardware stack levels used: 1
  4403 ;; Hardware stack levels required when called: 8
  4404 ;; This function calls:
  4405 ;;		Nothing
  4406 ;; This function is called by:
  4407 ;;		_efgtoa
  4408 ;; This function uses a non-reentrant model
  4409 ;;
  4410                           
  4411                           	psect	text14
  4412   002962                     __ptext14:
  4413                           	callstack 0
  4414   002962                     ___fltol:
  4415                           	callstack 18
  4416   002962  341D               	rlcf	(___fltol@f1+2)^0,w,c
  4417   002964  341E               	rlcf	(___fltol@f1+3)^0,w,c
  4418   002966  6E24               	movwf	___fltol@exp1^0,c
  4419   002968  5024               	movf	___fltol@exp1^0,w,c
  4420   00296A  A4D8               	btfss	status,2,c
  4421   00296C  EFBA  F014         	goto	u5271
  4422   002970  EFBC  F014         	goto	u5270
  4423   002974                     u5271:
  4424   002974  EFC6  F014         	goto	l4964
  4425   002978                     u5270:
  4426   002978                     l4960:
  4427   002978  0E00               	movlw	0
  4428   00297A  6E1B               	movwf	?___fltol^0,c
  4429   00297C  0E00               	movlw	0
  4430   00297E  6E1C               	movwf	(?___fltol+1)^0,c
  4431   002980  0E00               	movlw	0
  4432   002982  6E1D               	movwf	(?___fltol+2)^0,c
  4433   002984  0E00               	movlw	0
  4434   002986  6E1E               	movwf	(?___fltol+3)^0,c
  4435   002988  EF33  F015         	goto	l553
  4436   00298C                     l4964:
  4437   00298C  C01B  F01F         	movff	___fltol@f1,??___fltol
  4438   002990  C01C  F020         	movff	___fltol@f1+1,??___fltol+1
  4439   002994  C01D  F021         	movff	___fltol@f1+2,??___fltol+2
  4440   002998  C01E  F022         	movff	___fltol@f1+3,??___fltol+3
  4441   00299C  0E20               	movlw	32
  4442   00299E  EFD6  F014         	goto	u5280
  4443   0029A2                     u5285:
  4444   0029A2  90D8               	bcf	status,0,c
  4445   0029A4  3222               	rrcf	(??___fltol+3)^0,f,c
  4446   0029A6  3221               	rrcf	(??___fltol+2)^0,f,c
  4447   0029A8  3220               	rrcf	(??___fltol+1)^0,f,c
  4448   0029AA  321F               	rrcf	??___fltol^0,f,c
  4449   0029AC                     u5280:
  4450   0029AC  2EE8               	decfsz	wreg,f,c
  4451   0029AE  EFD1  F014         	goto	u5285
  4452   0029B2  501F               	movf	??___fltol^0,w,c
  4453   0029B4  6E23               	movwf	___fltol@sign1^0,c
  4454   0029B6  8E1D               	bsf	(___fltol@f1+2)^0,7,c
  4455   0029B8  0EFF               	movlw	255
  4456   0029BA  161B               	andwf	___fltol@f1^0,f,c
  4457   0029BC  0EFF               	movlw	255
  4458   0029BE  161C               	andwf	(___fltol@f1+1)^0,f,c
  4459   0029C0  0EFF               	movlw	255
  4460   0029C2  161D               	andwf	(___fltol@f1+2)^0,f,c
  4461   0029C4  0E00               	movlw	0
  4462   0029C6  161E               	andwf	(___fltol@f1+3)^0,f,c
  4463   0029C8  0E96               	movlw	150
  4464   0029CA  5E24               	subwf	___fltol@exp1^0,f,c
  4465   0029CC  BE24               	btfsc	___fltol@exp1^0,7,c
  4466   0029CE  EFED  F014         	goto	u5290
  4467   0029D2  EFEB  F014         	goto	u5291
  4468   0029D6                     u5291:
  4469   0029D6  EF03  F015         	goto	l4984
  4470   0029DA                     u5290:
  4471   0029DA  5024               	movf	___fltol@exp1^0,w,c
  4472   0029DC  0A80               	xorlw	128
  4473   0029DE  0F97               	addlw	151
  4474   0029E0  B0D8               	btfsc	status,0,c
  4475   0029E2  EFF5  F014         	goto	u5301
  4476   0029E6  EFF7  F014         	goto	u5300
  4477   0029EA                     u5301:
  4478   0029EA  EFF9  F014         	goto	l4980
  4479   0029EE                     u5300:
  4480   0029EE  EFBC  F014         	goto	l4960
  4481   0029F2                     l4980:
  4482   0029F2  90D8               	bcf	status,0,c
  4483   0029F4  321E               	rrcf	(___fltol@f1+3)^0,f,c
  4484   0029F6  321D               	rrcf	(___fltol@f1+2)^0,f,c
  4485   0029F8  321C               	rrcf	(___fltol@f1+1)^0,f,c
  4486   0029FA  321B               	rrcf	___fltol@f1^0,f,c
  4487   0029FC  3E24               	incfsz	___fltol@exp1^0,f,c
  4488   0029FE  EFF9  F014         	goto	l4980
  4489   002A02  EF1B  F015         	goto	l4994
  4490   002A06                     l4984:
  4491   002A06  0E1F               	movlw	31
  4492   002A08  6424               	cpfsgt	___fltol@exp1^0,c
  4493   002A0A  EF09  F015         	goto	u5311
  4494   002A0E  EF0B  F015         	goto	u5310
  4495   002A12                     u5311:
  4496   002A12  EF13  F015         	goto	l4992
  4497   002A16                     u5310:
  4498   002A16  EFBC  F014         	goto	l4960
  4499   002A1A                     l4990:
  4500   002A1A  90D8               	bcf	status,0,c
  4501   002A1C  361B               	rlcf	___fltol@f1^0,f,c
  4502   002A1E  361C               	rlcf	(___fltol@f1+1)^0,f,c
  4503   002A20  361D               	rlcf	(___fltol@f1+2)^0,f,c
  4504   002A22  361E               	rlcf	(___fltol@f1+3)^0,f,c
  4505   002A24  0624               	decf	___fltol@exp1^0,f,c
  4506   002A26                     l4992:
  4507   002A26  5024               	movf	___fltol@exp1^0,w,c
  4508   002A28  A4D8               	btfss	status,2,c
  4509   002A2A  EF19  F015         	goto	u5321
  4510   002A2E  EF1B  F015         	goto	u5320
  4511   002A32                     u5321:
  4512   002A32  EF0D  F015         	goto	l4990
  4513   002A36                     u5320:
  4514   002A36                     l4994:
  4515   002A36  5023               	movf	___fltol@sign1^0,w,c
  4516   002A38  B4D8               	btfsc	status,2,c
  4517   002A3A  EF21  F015         	goto	u5331
  4518   002A3E  EF23  F015         	goto	u5330
  4519   002A42                     u5331:
  4520   002A42  EF2B  F015         	goto	l4998
  4521   002A46                     u5330:
  4522   002A46  1E1E               	comf	(___fltol@f1+3)^0,f,c
  4523   002A48  1E1D               	comf	(___fltol@f1+2)^0,f,c
  4524   002A4A  1E1C               	comf	(___fltol@f1+1)^0,f,c
  4525   002A4C  6C1B               	negf	___fltol@f1^0,c
  4526   002A4E  0E00               	movlw	0
  4527   002A50  221C               	addwfc	(___fltol@f1+1)^0,f,c
  4528   002A52  221D               	addwfc	(___fltol@f1+2)^0,f,c
  4529   002A54  221E               	addwfc	(___fltol@f1+3)^0,f,c
  4530   002A56                     l4998:
  4531   002A56  C01B  F01B         	movff	___fltol@f1,?___fltol
  4532   002A5A  C01C  F01C         	movff	___fltol@f1+1,?___fltol+1
  4533   002A5E  C01D  F01D         	movff	___fltol@f1+2,?___fltol+2
  4534   002A62  C01E  F01E         	movff	___fltol@f1+3,?___fltol+3
  4535   002A66                     l553:
  4536   002A66  0012               	return		;funcret
  4537   002A68                     __end_of___fltol:
  4538                           	callstack 0
  4539                           
  4540 ;; *************** function ___flsub *****************
  4541 ;; Defined at:
  4542 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  4543 ;; Parameters:    Size  Location     Type
  4544 ;;  b               4   43[BANK0 ] long 
  4545 ;;  a               4   47[BANK0 ] long 
  4546 ;; Auto vars:     Size  Location     Type
  4547 ;;		None
  4548 ;; Return value:  Size  Location     Type
  4549 ;;                  4   43[BANK0 ] long 
  4550 ;; Registers used:
  4551 ;;		wreg, status,2, status,0, cstack
  4552 ;; Tracked objects:
  4553 ;;		On entry : 0/0
  4554 ;;		On exit  : 0/0
  4555 ;;		Unchanged: 0/0
  4556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4557 ;;      Params:         0       8       0       0       0       0       0       0       0
  4558 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4559 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4560 ;;      Totals:         0       8       0       0       0       0       0       0       0
  4561 ;;Total ram usage:        8 bytes
  4562 ;; Hardware stack levels used: 1
  4563 ;; Hardware stack levels required when called: 9
  4564 ;; This function calls:
  4565 ;;		___fladd
  4566 ;; This function is called by:
  4567 ;;		_efgtoa
  4568 ;; This function uses a non-reentrant model
  4569 ;;
  4570                           
  4571                           	psect	text15
  4572   00346E                     __ptext15:
  4573                           	callstack 0
  4574   00346E                     ___flsub:
  4575                           	callstack 17
  4576   00346E  0E00               	movlw	0
  4577   003470  0100               	movlb	0	; () banked
  4578   003472  1B8F               	xorwf	___flsub@a& (0+255),f,b
  4579   003474  0E00               	movlw	0
  4580   003476  1B90               	xorwf	(___flsub@a+1)& (0+255),f,b
  4581   003478  0E00               	movlw	0
  4582   00347A  1B91               	xorwf	(___flsub@a+2)& (0+255),f,b
  4583   00347C  0E80               	movlw	128
  4584   00347E  1B92               	xorwf	(___flsub@a+3)& (0+255),f,b
  4585   003480                     
  4586                           ; BSR set to: 0
  4587   003480  C08B  F07B         	movff	___flsub@b,___fladd@b
  4588   003484  C08C  F07C         	movff	___flsub@b+1,___fladd@b+1
  4589   003488  C08D  F07D         	movff	___flsub@b+2,___fladd@b+2
  4590   00348C  C08E  F07E         	movff	___flsub@b+3,___fladd@b+3
  4591   003490  C08F  F07F         	movff	___flsub@a,___fladd@a
  4592   003494  C090  F080         	movff	___flsub@a+1,___fladd@a+1
  4593   003498  C091  F081         	movff	___flsub@a+2,___fladd@a+2
  4594   00349C  C092  F082         	movff	___flsub@a+3,___fladd@a+3
  4595   0034A0  EC40  F009         	call	___fladd	;wreg free
  4596   0034A4  C07B  F08B         	movff	?___fladd,?___flsub
  4597   0034A8  C07C  F08C         	movff	?___fladd+1,?___flsub+1
  4598   0034AC  C07D  F08D         	movff	?___fladd+2,?___flsub+2
  4599   0034B0  C07E  F08E         	movff	?___fladd+3,?___flsub+3
  4600   0034B4  0012               	return		;funcret
  4601   0034B6                     __end_of___flsub:
  4602                           	callstack 0
  4603                           
  4604 ;; *************** function ___fladd *****************
  4605 ;; Defined at:
  4606 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  4607 ;; Parameters:    Size  Location     Type
  4608 ;;  b               4   27[BANK0 ] long 
  4609 ;;  a               4   31[BANK0 ] long 
  4610 ;; Auto vars:     Size  Location     Type
  4611 ;;  grs             1   42[BANK0 ] unsigned char 
  4612 ;;  bexp            1   41[BANK0 ] unsigned char 
  4613 ;;  aexp            1   40[BANK0 ] unsigned char 
  4614 ;;  signs           1   39[BANK0 ] unsigned char 
  4615 ;; Return value:  Size  Location     Type
  4616 ;;                  4   27[BANK0 ] unsigned char 
  4617 ;; Registers used:
  4618 ;;		wreg, status,2, status,0
  4619 ;; Tracked objects:
  4620 ;;		On entry : 0/0
  4621 ;;		On exit  : 0/0
  4622 ;;		Unchanged: 0/0
  4623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4624 ;;      Params:         0       8       0       0       0       0       0       0       0
  4625 ;;      Locals:         0       4       0       0       0       0       0       0       0
  4626 ;;      Temps:          0       4       0       0       0       0       0       0       0
  4627 ;;      Totals:         0      16       0       0       0       0       0       0       0
  4628 ;;Total ram usage:       16 bytes
  4629 ;; Hardware stack levels used: 1
  4630 ;; Hardware stack levels required when called: 8
  4631 ;; This function calls:
  4632 ;;		Nothing
  4633 ;; This function is called by:
  4634 ;;		_main
  4635 ;;		___flsub
  4636 ;;		_efgtoa
  4637 ;; This function uses a non-reentrant model
  4638 ;;
  4639                           
  4640                           	psect	text16
  4641   001280                     __ptext16:
  4642                           	callstack 0
  4643   001280                     ___fladd:
  4644                           	callstack 17
  4645   001280  0100               	movlb	0	; () banked
  4646   001282  517E               	movf	(___fladd@b+3)& (0+255),w,b
  4647   001284  0B80               	andlw	128
  4648   001286  6F87               	movwf	___fladd@signs& (0+255),b
  4649   001288  517E               	movf	(___fladd@b+3)& (0+255),w,b
  4650   00128A  257E               	addwf	(___fladd@b+3)& (0+255),w,b
  4651   00128C  6F89               	movwf	___fladd@bexp& (0+255),b
  4652   00128E                     
  4653                           ; BSR set to: 0
  4654   00128E  AF7D               	btfss	(___fladd@b+2)& (0+255),7,b
  4655   001290  EF4C  F009         	goto	u4361
  4656   001294  EF4E  F009         	goto	u4360
  4657   001298                     u4361:
  4658   001298  EF4F  F009         	goto	l4428
  4659   00129C                     u4360:
  4660   00129C                     
  4661                           ; BSR set to: 0
  4662   00129C  8189               	bsf	___fladd@bexp& (0+255),0,b
  4663   00129E                     l4428:
  4664                           
  4665                           ; BSR set to: 0
  4666   00129E  5189               	movf	___fladd@bexp& (0+255),w,b
  4667   0012A0  B4D8               	btfsc	status,2,c
  4668   0012A2  EF55  F009         	goto	u4371
  4669   0012A6  EF57  F009         	goto	u4370
  4670   0012AA                     u4371:
  4671   0012AA  EF6C  F009         	goto	l4438
  4672   0012AE                     u4370:
  4673   0012AE                     
  4674                           ; BSR set to: 0
  4675   0012AE  2989               	incf	___fladd@bexp& (0+255),w,b
  4676   0012B0  A4D8               	btfss	status,2,c
  4677   0012B2  EF5D  F009         	goto	u4381
  4678   0012B6  EF5F  F009         	goto	u4380
  4679   0012BA                     u4381:
  4680   0012BA  EF67  F009         	goto	l4434
  4681   0012BE                     u4380:
  4682   0012BE                     
  4683                           ; BSR set to: 0
  4684   0012BE  0E00               	movlw	0
  4685   0012C0  6F7B               	movwf	___fladd@b& (0+255),b
  4686   0012C2  0E00               	movlw	0
  4687   0012C4  6F7C               	movwf	(___fladd@b+1)& (0+255),b
  4688   0012C6  0E00               	movlw	0
  4689   0012C8  6F7D               	movwf	(___fladd@b+2)& (0+255),b
  4690   0012CA  0E00               	movlw	0
  4691   0012CC  6F7E               	movwf	(___fladd@b+3)& (0+255),b
  4692   0012CE                     l4434:
  4693                           
  4694                           ; BSR set to: 0
  4695   0012CE  8F7D               	bsf	(___fladd@b+2)& (0+255),7,b
  4696   0012D0                     
  4697                           ; BSR set to: 0
  4698   0012D0  0E00               	movlw	0
  4699   0012D2  6F7E               	movwf	(___fladd@b+3)& (0+255),b
  4700   0012D4  EF74  F009         	goto	l4440
  4701   0012D8                     l4438:
  4702                           
  4703                           ; BSR set to: 0
  4704   0012D8  0E00               	movlw	0
  4705   0012DA  6F7B               	movwf	___fladd@b& (0+255),b
  4706   0012DC  0E00               	movlw	0
  4707   0012DE  6F7C               	movwf	(___fladd@b+1)& (0+255),b
  4708   0012E0  0E00               	movlw	0
  4709   0012E2  6F7D               	movwf	(___fladd@b+2)& (0+255),b
  4710   0012E4  0E00               	movlw	0
  4711   0012E6  6F7E               	movwf	(___fladd@b+3)& (0+255),b
  4712   0012E8                     l4440:
  4713                           
  4714                           ; BSR set to: 0
  4715   0012E8  5182               	movf	(___fladd@a+3)& (0+255),w,b
  4716   0012EA  0B80               	andlw	128
  4717   0012EC  6F88               	movwf	___fladd@aexp& (0+255),b
  4718   0012EE                     
  4719                           ; BSR set to: 0
  4720   0012EE  5187               	movf	___fladd@signs& (0+255),w,b
  4721   0012F0  1988               	xorwf	___fladd@aexp& (0+255),w,b
  4722   0012F2  B4D8               	btfsc	status,2,c
  4723   0012F4  EF7E  F009         	goto	u4391
  4724   0012F8  EF80  F009         	goto	u4390
  4725   0012FC                     u4391:
  4726   0012FC  EF81  F009         	goto	l4446
  4727   001300                     u4390:
  4728   001300                     
  4729                           ; BSR set to: 0
  4730   001300  8D87               	bsf	___fladd@signs& (0+255),6,b
  4731   001302                     l4446:
  4732                           
  4733                           ; BSR set to: 0
  4734   001302  5182               	movf	(___fladd@a+3)& (0+255),w,b
  4735   001304  2582               	addwf	(___fladd@a+3)& (0+255),w,b
  4736   001306  6F88               	movwf	___fladd@aexp& (0+255),b
  4737   001308                     
  4738                           ; BSR set to: 0
  4739   001308  AF81               	btfss	(___fladd@a+2)& (0+255),7,b
  4740   00130A  EF89  F009         	goto	u4401
  4741   00130E  EF8B  F009         	goto	u4400
  4742   001312                     u4401:
  4743   001312  EF8C  F009         	goto	l4452
  4744   001316                     u4400:
  4745   001316                     
  4746                           ; BSR set to: 0
  4747   001316  8188               	bsf	___fladd@aexp& (0+255),0,b
  4748   001318                     l4452:
  4749                           
  4750                           ; BSR set to: 0
  4751   001318  5188               	movf	___fladd@aexp& (0+255),w,b
  4752   00131A  B4D8               	btfsc	status,2,c
  4753   00131C  EF92  F009         	goto	u4411
  4754   001320  EF94  F009         	goto	u4410
  4755   001324                     u4411:
  4756   001324  EFA9  F009         	goto	l4462
  4757   001328                     u4410:
  4758   001328                     
  4759                           ; BSR set to: 0
  4760   001328  2988               	incf	___fladd@aexp& (0+255),w,b
  4761   00132A  A4D8               	btfss	status,2,c
  4762   00132C  EF9A  F009         	goto	u4421
  4763   001330  EF9C  F009         	goto	u4420
  4764   001334                     u4421:
  4765   001334  EFA4  F009         	goto	l4458
  4766   001338                     u4420:
  4767   001338                     
  4768                           ; BSR set to: 0
  4769   001338  0E00               	movlw	0
  4770   00133A  6F7F               	movwf	___fladd@a& (0+255),b
  4771   00133C  0E00               	movlw	0
  4772   00133E  6F80               	movwf	(___fladd@a+1)& (0+255),b
  4773   001340  0E00               	movlw	0
  4774   001342  6F81               	movwf	(___fladd@a+2)& (0+255),b
  4775   001344  0E00               	movlw	0
  4776   001346  6F82               	movwf	(___fladd@a+3)& (0+255),b
  4777   001348                     l4458:
  4778                           
  4779                           ; BSR set to: 0
  4780   001348  8F81               	bsf	(___fladd@a+2)& (0+255),7,b
  4781   00134A                     
  4782                           ; BSR set to: 0
  4783   00134A  0E00               	movlw	0
  4784   00134C  6F82               	movwf	(___fladd@a+3)& (0+255),b
  4785   00134E  EFB1  F009         	goto	l4464
  4786   001352                     l4462:
  4787                           
  4788                           ; BSR set to: 0
  4789   001352  0E00               	movlw	0
  4790   001354  6F7F               	movwf	___fladd@a& (0+255),b
  4791   001356  0E00               	movlw	0
  4792   001358  6F80               	movwf	(___fladd@a+1)& (0+255),b
  4793   00135A  0E00               	movlw	0
  4794   00135C  6F81               	movwf	(___fladd@a+2)& (0+255),b
  4795   00135E  0E00               	movlw	0
  4796   001360  6F82               	movwf	(___fladd@a+3)& (0+255),b
  4797   001362                     l4464:
  4798                           
  4799                           ; BSR set to: 0
  4800   001362  5189               	movf	___fladd@bexp& (0+255),w,b
  4801   001364  5D88               	subwf	___fladd@aexp& (0+255),w,b
  4802   001366  B0D8               	btfsc	status,0,c
  4803   001368  EFB8  F009         	goto	u4431
  4804   00136C  EFBA  F009         	goto	u4430
  4805   001370                     u4431:
  4806   001370  EFE1  F009         	goto	l4500
  4807   001374                     u4430:
  4808   001374                     
  4809                           ; BSR set to: 0
  4810   001374  AD87               	btfss	___fladd@signs& (0+255),6,b
  4811   001376  EFBF  F009         	goto	u4441
  4812   00137A  EFC1  F009         	goto	u4440
  4813   00137E                     u4441:
  4814   00137E  EFC3  F009         	goto	l4470
  4815   001382                     u4440:
  4816   001382                     
  4817                           ; BSR set to: 0
  4818   001382  0E80               	movlw	128
  4819   001384  1B87               	xorwf	___fladd@signs& (0+255),f,b
  4820   001386                     l4470:
  4821                           
  4822                           ; BSR set to: 0
  4823   001386  C089  F08A         	movff	___fladd@bexp,___fladd@grs
  4824   00138A                     
  4825                           ; BSR set to: 0
  4826   00138A  C088  F089         	movff	___fladd@aexp,___fladd@bexp
  4827   00138E                     
  4828                           ; BSR set to: 0
  4829   00138E  C08A  F088         	movff	___fladd@grs,___fladd@aexp
  4830   001392                     
  4831                           ; BSR set to: 0
  4832   001392  C07B  F08A         	movff	___fladd@b,___fladd@grs
  4833   001396                     
  4834                           ; BSR set to: 0
  4835   001396  C07F  F07B         	movff	___fladd@a,___fladd@b
  4836   00139A                     
  4837                           ; BSR set to: 0
  4838   00139A  C08A  F07F         	movff	___fladd@grs,___fladd@a
  4839   00139E                     
  4840                           ; BSR set to: 0
  4841   00139E  C07C  F08A         	movff	___fladd@b+1,___fladd@grs
  4842   0013A2                     
  4843                           ; BSR set to: 0
  4844   0013A2  C080  F07C         	movff	___fladd@a+1,___fladd@b+1
  4845   0013A6                     
  4846                           ; BSR set to: 0
  4847   0013A6  C08A  F080         	movff	___fladd@grs,___fladd@a+1
  4848   0013AA                     
  4849                           ; BSR set to: 0
  4850   0013AA  C07D  F08A         	movff	___fladd@b+2,___fladd@grs
  4851   0013AE                     
  4852                           ; BSR set to: 0
  4853   0013AE  C081  F07D         	movff	___fladd@a+2,___fladd@b+2
  4854   0013B2                     
  4855                           ; BSR set to: 0
  4856   0013B2  C08A  F081         	movff	___fladd@grs,___fladd@a+2
  4857   0013B6                     
  4858                           ; BSR set to: 0
  4859   0013B6  C07E  F08A         	movff	___fladd@b+3,___fladd@grs
  4860   0013BA                     
  4861                           ; BSR set to: 0
  4862   0013BA  C082  F07E         	movff	___fladd@a+3,___fladd@b+3
  4863   0013BE                     
  4864                           ; BSR set to: 0
  4865   0013BE  C08A  F082         	movff	___fladd@grs,___fladd@a+3
  4866   0013C2                     l4500:
  4867                           
  4868                           ; BSR set to: 0
  4869   0013C2  0E00               	movlw	0
  4870   0013C4  6F8A               	movwf	___fladd@grs& (0+255),b
  4871   0013C6                     
  4872                           ; BSR set to: 0
  4873   0013C6  5189               	movf	___fladd@bexp& (0+255),w,b
  4874   0013C8  C088  F083         	movff	___fladd@aexp,??___fladd
  4875   0013CC  6B84               	clrf	(??___fladd+1)& (0+255),b
  4876   0013CE  5F83               	subwf	??___fladd& (0+255),f,b
  4877   0013D0  0E00               	movlw	0
  4878   0013D2  5B84               	subwfb	(??___fladd+1)& (0+255),f,b
  4879   0013D4  BF84               	btfsc	(??___fladd+1)& (0+255),7,b
  4880   0013D6  EFF6  F009         	goto	u4451
  4881   0013DA  5184               	movf	(??___fladd+1)& (0+255),w,b
  4882   0013DC  E109               	bnz	u4450
  4883   0013DE  0E1A               	movlw	26
  4884   0013E0  5D83               	subwf	??___fladd& (0+255),w,b
  4885   0013E2  A0D8               	btfss	status,0,c
  4886   0013E4  EFF6  F009         	goto	u4451
  4887   0013E8  EFF8  F009         	goto	u4450
  4888   0013EC                     u4451:
  4889   0013EC  EF2F  F00A         	goto	l785
  4890   0013F0                     u4450:
  4891   0013F0                     
  4892                           ; BSR set to: 0
  4893   0013F0  517B               	movf	___fladd@b& (0+255),w,b
  4894   0013F2  117C               	iorwf	(___fladd@b+1)& (0+255),w,b
  4895   0013F4  117D               	iorwf	(___fladd@b+2)& (0+255),w,b
  4896   0013F6  117E               	iorwf	(___fladd@b+3)& (0+255),w,b
  4897   0013F8  A4D8               	btfss	status,2,c
  4898   0013FA  EF01  F00A         	goto	u4461
  4899   0013FE  EF04  F00A         	goto	u4460
  4900   001402                     u4461:
  4901   001402  0E01               	movlw	1
  4902   001404  EF05  F00A         	goto	u4470
  4903   001408                     u4460:
  4904   001408  0E00               	movlw	0
  4905   00140A                     u4470:
  4906   00140A  6F8A               	movwf	___fladd@grs& (0+255),b
  4907   00140C                     
  4908                           ; BSR set to: 0
  4909   00140C  0E00               	movlw	0
  4910   00140E  6F7B               	movwf	___fladd@b& (0+255),b
  4911   001410  0E00               	movlw	0
  4912   001412  6F7C               	movwf	(___fladd@b+1)& (0+255),b
  4913   001414  0E00               	movlw	0
  4914   001416  6F7D               	movwf	(___fladd@b+2)& (0+255),b
  4915   001418  0E00               	movlw	0
  4916   00141A  6F7E               	movwf	(___fladd@b+3)& (0+255),b
  4917   00141C                     
  4918                           ; BSR set to: 0
  4919   00141C  C088  F089         	movff	___fladd@aexp,___fladd@bexp
  4920   001420  EF38  F00A         	goto	l784
  4921   001424                     l786:
  4922                           
  4923                           ; BSR set to: 0
  4924   001424  A18A               	btfss	___fladd@grs& (0+255),0,b
  4925   001426  EF17  F00A         	goto	u4481
  4926   00142A  EF19  F00A         	goto	u4480
  4927   00142E                     u4481:
  4928   00142E  EF1F  F00A         	goto	l4512
  4929   001432                     u4480:
  4930   001432                     
  4931                           ; BSR set to: 0
  4932   001432  90D8               	bcf	status,0,c
  4933   001434  318A               	rrcf	___fladd@grs& (0+255),w,b
  4934   001436  0901               	iorlw	1
  4935   001438  6F8A               	movwf	___fladd@grs& (0+255),b
  4936   00143A  EF21  F00A         	goto	l4514
  4937   00143E                     l4512:
  4938                           
  4939                           ; BSR set to: 0
  4940   00143E  90D8               	bcf	status,0,c
  4941   001440  338A               	rrcf	___fladd@grs& (0+255),f,b
  4942   001442                     l4514:
  4943                           
  4944                           ; BSR set to: 0
  4945   001442  A17B               	btfss	___fladd@b& (0+255),0,b
  4946   001444  EF26  F00A         	goto	u4491
  4947   001448  EF28  F00A         	goto	u4490
  4948   00144C                     u4491:
  4949   00144C  EF29  F00A         	goto	l4518
  4950   001450                     u4490:
  4951   001450                     
  4952                           ; BSR set to: 0
  4953   001450  8F8A               	bsf	___fladd@grs& (0+255),7,b
  4954   001452                     l4518:
  4955                           
  4956                           ; BSR set to: 0
  4957   001452  357E               	rlcf	(___fladd@b+3)& (0+255),w,b
  4958   001454  337E               	rrcf	(___fladd@b+3)& (0+255),f,b
  4959   001456  337D               	rrcf	(___fladd@b+2)& (0+255),f,b
  4960   001458  337C               	rrcf	(___fladd@b+1)& (0+255),f,b
  4961   00145A  337B               	rrcf	___fladd@b& (0+255),f,b
  4962   00145C                     
  4963                           ; BSR set to: 0
  4964   00145C  2B89               	incf	___fladd@bexp& (0+255),f,b
  4965   00145E                     l785:
  4966                           
  4967                           ; BSR set to: 0
  4968   00145E  5188               	movf	___fladd@aexp& (0+255),w,b
  4969   001460  5D89               	subwf	___fladd@bexp& (0+255),w,b
  4970   001462  A0D8               	btfss	status,0,c
  4971   001464  EF36  F00A         	goto	u4501
  4972   001468  EF38  F00A         	goto	u4500
  4973   00146C                     u4501:
  4974   00146C  EF12  F00A         	goto	l786
  4975   001470                     u4500:
  4976   001470                     l784:
  4977                           
  4978                           ; BSR set to: 0
  4979   001470  BD87               	btfsc	___fladd@signs& (0+255),6,b
  4980   001472  EF3D  F00A         	goto	u4511
  4981   001476  EF3F  F00A         	goto	u4510
  4982   00147A                     u4511:
  4983   00147A  EF7F  F00A         	goto	l4546
  4984   00147E                     u4510:
  4985   00147E                     
  4986                           ; BSR set to: 0
  4987   00147E  5189               	movf	___fladd@bexp& (0+255),w,b
  4988   001480  A4D8               	btfss	status,2,c
  4989   001482  EF45  F00A         	goto	u4521
  4990   001486  EF47  F00A         	goto	u4520
  4991   00148A                     u4521:
  4992   00148A  EF51  F00A         	goto	l4528
  4993   00148E                     u4520:
  4994   00148E                     
  4995                           ; BSR set to: 0
  4996   00148E  0E00               	movlw	0
  4997   001490  6F7B               	movwf	?___fladd& (0+255),b
  4998   001492  0E00               	movlw	0
  4999   001494  6F7C               	movwf	(?___fladd+1)& (0+255),b
  5000   001496  0E00               	movlw	0
  5001   001498  6F7D               	movwf	(?___fladd+2)& (0+255),b
  5002   00149A  0E00               	movlw	0
  5003   00149C  6F7E               	movwf	(?___fladd+3)& (0+255),b
  5004   00149E  EFA0  F00B         	goto	l793
  5005   0014A2                     l4528:
  5006                           
  5007                           ; BSR set to: 0
  5008   0014A2  517F               	movf	___fladd@a& (0+255),w,b
  5009   0014A4  277B               	addwf	___fladd@b& (0+255),f,b
  5010   0014A6  5180               	movf	(___fladd@a+1)& (0+255),w,b
  5011   0014A8  237C               	addwfc	(___fladd@b+1)& (0+255),f,b
  5012   0014AA  5181               	movf	(___fladd@a+2)& (0+255),w,b
  5013   0014AC  237D               	addwfc	(___fladd@b+2)& (0+255),f,b
  5014   0014AE  5182               	movf	(___fladd@a+3)& (0+255),w,b
  5015   0014B0  237E               	addwfc	(___fladd@b+3)& (0+255),f,b
  5016   0014B2                     
  5017                           ; BSR set to: 0
  5018   0014B2  A17E               	btfss	(___fladd@b+3)& (0+255),0,b
  5019   0014B4  EF5E  F00A         	goto	u4531
  5020   0014B8  EF60  F00A         	goto	u4530
  5021   0014BC                     u4531:
  5022   0014BC  EF0C  F00B         	goto	l4582
  5023   0014C0                     u4530:
  5024   0014C0                     
  5025                           ; BSR set to: 0
  5026   0014C0  A18A               	btfss	___fladd@grs& (0+255),0,b
  5027   0014C2  EF65  F00A         	goto	u4541
  5028   0014C6  EF67  F00A         	goto	u4540
  5029   0014CA                     u4541:
  5030   0014CA  EF6D  F00A         	goto	l4536
  5031   0014CE                     u4540:
  5032   0014CE                     
  5033                           ; BSR set to: 0
  5034   0014CE  90D8               	bcf	status,0,c
  5035   0014D0  318A               	rrcf	___fladd@grs& (0+255),w,b
  5036   0014D2  0901               	iorlw	1
  5037   0014D4  6F8A               	movwf	___fladd@grs& (0+255),b
  5038   0014D6  EF6F  F00A         	goto	l4538
  5039   0014DA                     l4536:
  5040                           
  5041                           ; BSR set to: 0
  5042   0014DA  90D8               	bcf	status,0,c
  5043   0014DC  338A               	rrcf	___fladd@grs& (0+255),f,b
  5044   0014DE                     l4538:
  5045                           
  5046                           ; BSR set to: 0
  5047   0014DE  A17B               	btfss	___fladd@b& (0+255),0,b
  5048   0014E0  EF74  F00A         	goto	u4551
  5049   0014E4  EF76  F00A         	goto	u4550
  5050   0014E8                     u4551:
  5051   0014E8  EF77  F00A         	goto	l4542
  5052   0014EC                     u4550:
  5053   0014EC                     
  5054                           ; BSR set to: 0
  5055   0014EC  8F8A               	bsf	___fladd@grs& (0+255),7,b
  5056   0014EE                     l4542:
  5057                           
  5058                           ; BSR set to: 0
  5059   0014EE  357E               	rlcf	(___fladd@b+3)& (0+255),w,b
  5060   0014F0  337E               	rrcf	(___fladd@b+3)& (0+255),f,b
  5061   0014F2  337D               	rrcf	(___fladd@b+2)& (0+255),f,b
  5062   0014F4  337C               	rrcf	(___fladd@b+1)& (0+255),f,b
  5063   0014F6  337B               	rrcf	___fladd@b& (0+255),f,b
  5064   0014F8                     
  5065                           ; BSR set to: 0
  5066   0014F8  2B89               	incf	___fladd@bexp& (0+255),f,b
  5067   0014FA  EF0C  F00B         	goto	l4582
  5068   0014FE                     l4546:
  5069                           
  5070                           ; BSR set to: 0
  5071   0014FE  517F               	movf	___fladd@a& (0+255),w,b
  5072   001500  5D7B               	subwf	___fladd@b& (0+255),w,b
  5073   001502  5180               	movf	(___fladd@a+1)& (0+255),w,b
  5074   001504  597C               	subwfb	(___fladd@b+1)& (0+255),w,b
  5075   001506  5181               	movf	(___fladd@a+2)& (0+255),w,b
  5076   001508  597D               	subwfb	(___fladd@b+2)& (0+255),w,b
  5077   00150A  517E               	movf	(___fladd@b+3)& (0+255),w,b
  5078   00150C  0A80               	xorlw	128
  5079   00150E  6F83               	movwf	??___fladd& (0+255),b
  5080   001510  5182               	movf	(___fladd@a+3)& (0+255),w,b
  5081   001512  0A80               	xorlw	128
  5082   001514  5983               	subwfb	??___fladd& (0+255),w,b
  5083   001516  B0D8               	btfsc	status,0,c
  5084   001518  EF90  F00A         	goto	u4561
  5085   00151C  EF92  F00A         	goto	u4560
  5086   001520                     u4561:
  5087   001520  EFBD  F00A         	goto	l4556
  5088   001524                     u4560:
  5089   001524                     
  5090                           ; BSR set to: 0
  5091   001524  517B               	movf	___fladd@b& (0+255),w,b
  5092   001526  5D7F               	subwf	___fladd@a& (0+255),w,b
  5093   001528  6F83               	movwf	??___fladd& (0+255),b
  5094   00152A  517C               	movf	(___fladd@b+1)& (0+255),w,b
  5095   00152C  5980               	subwfb	(___fladd@a+1)& (0+255),w,b
  5096   00152E  6F84               	movwf	(??___fladd+1)& (0+255),b
  5097   001530  517D               	movf	(___fladd@b+2)& (0+255),w,b
  5098   001532  5981               	subwfb	(___fladd@a+2)& (0+255),w,b
  5099   001534  6F85               	movwf	(??___fladd+2)& (0+255),b
  5100   001536  517E               	movf	(___fladd@b+3)& (0+255),w,b
  5101   001538  5982               	subwfb	(___fladd@a+3)& (0+255),w,b
  5102   00153A  6F86               	movwf	(??___fladd+3)& (0+255),b
  5103   00153C  0EFF               	movlw	255
  5104   00153E  2583               	addwf	??___fladd& (0+255),w,b
  5105   001540  6F7B               	movwf	___fladd@b& (0+255),b
  5106   001542  0EFF               	movlw	255
  5107   001544  2184               	addwfc	(??___fladd+1)& (0+255),w,b
  5108   001546  6F7C               	movwf	(___fladd@b+1)& (0+255),b
  5109   001548  0EFF               	movlw	255
  5110   00154A  2185               	addwfc	(??___fladd+2)& (0+255),w,b
  5111   00154C  6F7D               	movwf	(___fladd@b+2)& (0+255),b
  5112   00154E  0EFF               	movlw	255
  5113   001550  2186               	addwfc	(??___fladd+3)& (0+255),w,b
  5114   001552  6F7E               	movwf	(___fladd@b+3)& (0+255),b
  5115   001554  0E80               	movlw	128
  5116   001556  1B87               	xorwf	___fladd@signs& (0+255),f,b
  5117   001558                     
  5118                           ; BSR set to: 0
  5119   001558  6D8A               	negf	___fladd@grs& (0+255),b
  5120   00155A                     
  5121                           ; BSR set to: 0
  5122   00155A  518A               	movf	___fladd@grs& (0+255),w,b
  5123   00155C  A4D8               	btfss	status,2,c
  5124   00155E  EFB3  F00A         	goto	u4571
  5125   001562  EFB5  F00A         	goto	u4570
  5126   001566                     u4571:
  5127   001566  EFC5  F00A         	goto	l801
  5128   00156A                     u4570:
  5129   00156A                     
  5130                           ; BSR set to: 0
  5131   00156A  0E01               	movlw	1
  5132   00156C  277B               	addwf	___fladd@b& (0+255),f,b
  5133   00156E  0E00               	movlw	0
  5134   001570  237C               	addwfc	(___fladd@b+1)& (0+255),f,b
  5135   001572  237D               	addwfc	(___fladd@b+2)& (0+255),f,b
  5136   001574  237E               	addwfc	(___fladd@b+3)& (0+255),f,b
  5137   001576  EFC5  F00A         	goto	l801
  5138   00157A                     l4556:
  5139                           
  5140                           ; BSR set to: 0
  5141   00157A  517F               	movf	___fladd@a& (0+255),w,b
  5142   00157C  5F7B               	subwf	___fladd@b& (0+255),f,b
  5143   00157E  5180               	movf	(___fladd@a+1)& (0+255),w,b
  5144   001580  5B7C               	subwfb	(___fladd@b+1)& (0+255),f,b
  5145   001582  5181               	movf	(___fladd@a+2)& (0+255),w,b
  5146   001584  5B7D               	subwfb	(___fladd@b+2)& (0+255),f,b
  5147   001586  5182               	movf	(___fladd@a+3)& (0+255),w,b
  5148   001588  5B7E               	subwfb	(___fladd@b+3)& (0+255),f,b
  5149   00158A                     l801:
  5150                           
  5151                           ; BSR set to: 0
  5152   00158A  517B               	movf	___fladd@b& (0+255),w,b
  5153   00158C  117C               	iorwf	(___fladd@b+1)& (0+255),w,b
  5154   00158E  117D               	iorwf	(___fladd@b+2)& (0+255),w,b
  5155   001590  117E               	iorwf	(___fladd@b+3)& (0+255),w,b
  5156   001592  A4D8               	btfss	status,2,c
  5157   001594  EFCE  F00A         	goto	u4581
  5158   001598  EFD0  F00A         	goto	u4580
  5159   00159C                     u4581:
  5160   00159C  EF05  F00B         	goto	l4580
  5161   0015A0                     u4580:
  5162   0015A0                     
  5163                           ; BSR set to: 0
  5164   0015A0  518A               	movf	___fladd@grs& (0+255),w,b
  5165   0015A2  A4D8               	btfss	status,2,c
  5166   0015A4  EFD6  F00A         	goto	u4591
  5167   0015A8  EFD8  F00A         	goto	u4590
  5168   0015AC                     u4591:
  5169   0015AC  EF05  F00B         	goto	l4580
  5170   0015B0                     u4590:
  5171   0015B0                     
  5172                           ; BSR set to: 0
  5173   0015B0  0E00               	movlw	0
  5174   0015B2  6F7B               	movwf	?___fladd& (0+255),b
  5175   0015B4  0E00               	movlw	0
  5176   0015B6  6F7C               	movwf	(?___fladd+1)& (0+255),b
  5177   0015B8  0E00               	movlw	0
  5178   0015BA  6F7D               	movwf	(?___fladd+2)& (0+255),b
  5179   0015BC  0E00               	movlw	0
  5180   0015BE  6F7E               	movwf	(?___fladd+3)& (0+255),b
  5181   0015C0  EFA0  F00B         	goto	l793
  5182   0015C4                     l4564:
  5183                           
  5184                           ; BSR set to: 0
  5185   0015C4  90D8               	bcf	status,0,c
  5186   0015C6  377B               	rlcf	___fladd@b& (0+255),f,b
  5187   0015C8  377C               	rlcf	(___fladd@b+1)& (0+255),f,b
  5188   0015CA  377D               	rlcf	(___fladd@b+2)& (0+255),f,b
  5189   0015CC  377E               	rlcf	(___fladd@b+3)& (0+255),f,b
  5190   0015CE                     
  5191                           ; BSR set to: 0
  5192   0015CE  AF8A               	btfss	___fladd@grs& (0+255),7,b
  5193   0015D0  EFEC  F00A         	goto	u4601
  5194   0015D4  EFEE  F00A         	goto	u4600
  5195   0015D8                     u4601:
  5196   0015D8  EFEF  F00A         	goto	l4570
  5197   0015DC                     u4600:
  5198   0015DC                     
  5199                           ; BSR set to: 0
  5200   0015DC  817B               	bsf	___fladd@b& (0+255),0,b
  5201   0015DE                     l4570:
  5202                           
  5203                           ; BSR set to: 0
  5204   0015DE  A18A               	btfss	___fladd@grs& (0+255),0,b
  5205   0015E0  EFF4  F00A         	goto	u4611
  5206   0015E4  EFF6  F00A         	goto	u4610
  5207   0015E8                     u4611:
  5208   0015E8  EFFA  F00A         	goto	l4574
  5209   0015EC                     u4610:
  5210   0015EC                     
  5211                           ; BSR set to: 0
  5212   0015EC  80D8               	bsf	status,0,c
  5213   0015EE  378A               	rlcf	___fladd@grs& (0+255),f,b
  5214   0015F0  EFFC  F00A         	goto	l4576
  5215   0015F4                     l4574:
  5216                           
  5217                           ; BSR set to: 0
  5218   0015F4  90D8               	bcf	status,0,c
  5219   0015F6  378A               	rlcf	___fladd@grs& (0+255),f,b
  5220   0015F8                     l4576:
  5221                           
  5222                           ; BSR set to: 0
  5223   0015F8  5189               	movf	___fladd@bexp& (0+255),w,b
  5224   0015FA  B4D8               	btfsc	status,2,c
  5225   0015FC  EF02  F00B         	goto	u4621
  5226   001600  EF04  F00B         	goto	u4620
  5227   001604                     u4621:
  5228   001604  EF05  F00B         	goto	l4580
  5229   001608                     u4620:
  5230   001608                     
  5231                           ; BSR set to: 0
  5232   001608  0789               	decf	___fladd@bexp& (0+255),f,b
  5233   00160A                     l4580:
  5234                           
  5235                           ; BSR set to: 0
  5236   00160A  AF7D               	btfss	(___fladd@b+2)& (0+255),7,b
  5237   00160C  EF0A  F00B         	goto	u4631
  5238   001610  EF0C  F00B         	goto	u4630
  5239   001614                     u4631:
  5240   001614  EFE2  F00A         	goto	l4564
  5241   001618                     u4630:
  5242   001618                     l4582:
  5243                           
  5244                           ; BSR set to: 0
  5245   001618  0E00               	movlw	0
  5246   00161A  6F88               	movwf	___fladd@aexp& (0+255),b
  5247   00161C                     
  5248                           ; BSR set to: 0
  5249   00161C  AF8A               	btfss	___fladd@grs& (0+255),7,b
  5250   00161E  EF13  F00B         	goto	u4641
  5251   001622  EF15  F00B         	goto	u4640
  5252   001626                     u4641:
  5253   001626  EF2D  F00B         	goto	l810
  5254   00162A                     u4640:
  5255   00162A                     
  5256                           ; BSR set to: 0
  5257   00162A  C08A  F083         	movff	___fladd@grs,??___fladd
  5258   00162E  0E7F               	movlw	127
  5259   001630  1783               	andwf	??___fladd& (0+255),f,b
  5260   001632  B4D8               	btfsc	status,2,c
  5261   001634  EF1E  F00B         	goto	u4651
  5262   001638  EF20  F00B         	goto	u4650
  5263   00163C                     u4651:
  5264   00163C  EF24  F00B         	goto	l811
  5265   001640                     u4650:
  5266   001640                     l4588:
  5267                           
  5268                           ; BSR set to: 0
  5269   001640  0E01               	movlw	1
  5270   001642  6F88               	movwf	___fladd@aexp& (0+255),b
  5271   001644  EF2D  F00B         	goto	l810
  5272   001648                     l811:
  5273                           
  5274                           ; BSR set to: 0
  5275   001648  A17B               	btfss	___fladd@b& (0+255),0,b
  5276   00164A  EF29  F00B         	goto	u4661
  5277   00164E  EF2B  F00B         	goto	u4660
  5278   001652                     u4661:
  5279   001652  EF2D  F00B         	goto	l810
  5280   001656                     u4660:
  5281   001656  EF20  F00B         	goto	l4588
  5282   00165A                     l810:
  5283                           
  5284                           ; BSR set to: 0
  5285   00165A  5188               	movf	___fladd@aexp& (0+255),w,b
  5286   00165C  B4D8               	btfsc	status,2,c
  5287   00165E  EF33  F00B         	goto	u4671
  5288   001662  EF35  F00B         	goto	u4670
  5289   001666                     u4671:
  5290   001666  EF60  F00B         	goto	l4600
  5291   00166A                     u4670:
  5292   00166A                     
  5293                           ; BSR set to: 0
  5294   00166A  0E01               	movlw	1
  5295   00166C  277B               	addwf	___fladd@b& (0+255),f,b
  5296   00166E  0E00               	movlw	0
  5297   001670  237C               	addwfc	(___fladd@b+1)& (0+255),f,b
  5298   001672  237D               	addwfc	(___fladd@b+2)& (0+255),f,b
  5299   001674  237E               	addwfc	(___fladd@b+3)& (0+255),f,b
  5300   001676                     
  5301                           ; BSR set to: 0
  5302   001676  A17E               	btfss	(___fladd@b+3)& (0+255),0,b
  5303   001678  EF40  F00B         	goto	u4681
  5304   00167C  EF42  F00B         	goto	u4680
  5305   001680                     u4681:
  5306   001680  EF60  F00B         	goto	l4600
  5307   001684                     u4680:
  5308   001684                     
  5309                           ; BSR set to: 0
  5310   001684  C07B  F083         	movff	___fladd@b,??___fladd
  5311   001688  C07C  F084         	movff	___fladd@b+1,??___fladd+1
  5312   00168C  C07D  F085         	movff	___fladd@b+2,??___fladd+2
  5313   001690  C07E  F086         	movff	___fladd@b+3,??___fladd+3
  5314   001694  3586               	rlcf	(??___fladd+3)& (0+255),w,b
  5315   001696  3386               	rrcf	(??___fladd+3)& (0+255),f,b
  5316   001698  3385               	rrcf	(??___fladd+2)& (0+255),f,b
  5317   00169A  3384               	rrcf	(??___fladd+1)& (0+255),f,b
  5318   00169C  3383               	rrcf	??___fladd& (0+255),f,b
  5319   00169E  C083  F07B         	movff	??___fladd,___fladd@b
  5320   0016A2  C084  F07C         	movff	??___fladd+1,___fladd@b+1
  5321   0016A6  C085  F07D         	movff	??___fladd+2,___fladd@b+2
  5322   0016AA  C086  F07E         	movff	??___fladd+3,___fladd@b+3
  5323   0016AE  2989               	incf	___fladd@bexp& (0+255),w,b
  5324   0016B0  B4D8               	btfsc	status,2,c
  5325   0016B2  EF5D  F00B         	goto	u4691
  5326   0016B6  EF5F  F00B         	goto	u4690
  5327   0016BA                     u4691:
  5328   0016BA  EF60  F00B         	goto	l4600
  5329   0016BE                     u4690:
  5330   0016BE                     
  5331                           ; BSR set to: 0
  5332   0016BE  2B89               	incf	___fladd@bexp& (0+255),f,b
  5333   0016C0                     l4600:
  5334                           
  5335                           ; BSR set to: 0
  5336   0016C0  2989               	incf	___fladd@bexp& (0+255),w,b
  5337   0016C2  B4D8               	btfsc	status,2,c
  5338   0016C4  EF66  F00B         	goto	u4701
  5339   0016C8  EF68  F00B         	goto	u4700
  5340   0016CC                     u4701:
  5341   0016CC  EF70  F00B         	goto	l4604
  5342   0016D0                     u4700:
  5343   0016D0                     
  5344                           ; BSR set to: 0
  5345   0016D0  5189               	movf	___fladd@bexp& (0+255),w,b
  5346   0016D2  A4D8               	btfss	status,2,c
  5347   0016D4  EF6E  F00B         	goto	u4711
  5348   0016D8  EF70  F00B         	goto	u4710
  5349   0016DC                     u4711:
  5350   0016DC  EF82  F00B         	goto	l4608
  5351   0016E0                     u4710:
  5352   0016E0                     l4604:
  5353                           
  5354                           ; BSR set to: 0
  5355   0016E0  0E00               	movlw	0
  5356   0016E2  6F7B               	movwf	___fladd@b& (0+255),b
  5357   0016E4  0E00               	movlw	0
  5358   0016E6  6F7C               	movwf	(___fladd@b+1)& (0+255),b
  5359   0016E8  0E00               	movlw	0
  5360   0016EA  6F7D               	movwf	(___fladd@b+2)& (0+255),b
  5361   0016EC  0E00               	movlw	0
  5362   0016EE  6F7E               	movwf	(___fladd@b+3)& (0+255),b
  5363   0016F0  5189               	movf	___fladd@bexp& (0+255),w,b
  5364   0016F2  A4D8               	btfss	status,2,c
  5365   0016F4  EF7E  F00B         	goto	u4721
  5366   0016F8  EF80  F00B         	goto	u4720
  5367   0016FC                     u4721:
  5368   0016FC  EF82  F00B         	goto	l4608
  5369   001700                     u4720:
  5370   001700                     
  5371                           ; BSR set to: 0
  5372   001700  0E00               	movlw	0
  5373   001702  6F87               	movwf	___fladd@signs& (0+255),b
  5374   001704                     l4608:
  5375                           
  5376                           ; BSR set to: 0
  5377   001704  A189               	btfss	___fladd@bexp& (0+255),0,b
  5378   001706  EF87  F00B         	goto	u4731
  5379   00170A  EF89  F00B         	goto	u4730
  5380   00170E                     u4731:
  5381   00170E  EF8C  F00B         	goto	l4612
  5382   001712                     u4730:
  5383   001712                     
  5384                           ; BSR set to: 0
  5385   001712  8F7D               	bsf	(___fladd@b+2)& (0+255),7,b
  5386   001714  EF8D  F00B         	goto	l4614
  5387   001718                     l4612:
  5388                           
  5389                           ; BSR set to: 0
  5390   001718  9F7D               	bcf	(___fladd@b+2)& (0+255),7,b
  5391   00171A                     l4614:
  5392                           
  5393                           ; BSR set to: 0
  5394   00171A  90D8               	bcf	status,0,c
  5395   00171C  3189               	rrcf	___fladd@bexp& (0+255),w,b
  5396   00171E  6F7E               	movwf	(___fladd@b+3)& (0+255),b
  5397   001720                     
  5398                           ; BSR set to: 0
  5399   001720  AF87               	btfss	___fladd@signs& (0+255),7,b
  5400   001722  EF95  F00B         	goto	u4741
  5401   001726  EF97  F00B         	goto	u4740
  5402   00172A                     u4741:
  5403   00172A  EF98  F00B         	goto	l4620
  5404   00172E                     u4740:
  5405   00172E                     
  5406                           ; BSR set to: 0
  5407   00172E  8F7E               	bsf	(___fladd@b+3)& (0+255),7,b
  5408   001730                     l4620:
  5409                           
  5410                           ; BSR set to: 0
  5411   001730  C07B  F07B         	movff	___fladd@b,?___fladd
  5412   001734  C07C  F07C         	movff	___fladd@b+1,?___fladd+1
  5413   001738  C07D  F07D         	movff	___fladd@b+2,?___fladd+2
  5414   00173C  C07E  F07E         	movff	___fladd@b+3,?___fladd+3
  5415   001740                     l793:
  5416                           
  5417                           ; BSR set to: 0
  5418   001740  0012               	return		;funcret
  5419   001742                     __end_of___fladd:
  5420                           	callstack 0
  5421                           
  5422 ;; *************** function ___flneg *****************
  5423 ;; Defined at:
  5424 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flneg.c"
  5425 ;; Parameters:    Size  Location     Type
  5426 ;;  f1              4   26[COMRAM] unsigned char 
  5427 ;; Auto vars:     Size  Location     Type
  5428 ;;		None
  5429 ;; Return value:  Size  Location     Type
  5430 ;;                  4   26[COMRAM] unsigned char 
  5431 ;; Registers used:
  5432 ;;		wreg, status,2, status,0
  5433 ;; Tracked objects:
  5434 ;;		On entry : 0/0
  5435 ;;		On exit  : 0/0
  5436 ;;		Unchanged: 0/0
  5437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5438 ;;      Params:         4       0       0       0       0       0       0       0       0
  5439 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5440 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5441 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5442 ;;Total ram usage:        4 bytes
  5443 ;; Hardware stack levels used: 1
  5444 ;; Hardware stack levels required when called: 8
  5445 ;; This function calls:
  5446 ;;		Nothing
  5447 ;; This function is called by:
  5448 ;;		_efgtoa
  5449 ;; This function uses a non-reentrant model
  5450 ;;
  5451                           
  5452                           	psect	text17
  5453   0035C4                     __ptext17:
  5454                           	callstack 0
  5455   0035C4                     ___flneg:
  5456                           	callstack 18
  5457   0035C4  501B               	movf	___flneg@f1^0,w,c
  5458   0035C6  101C               	iorwf	(___flneg@f1+1)^0,w,c
  5459   0035C8  101D               	iorwf	(___flneg@f1+2)^0,w,c
  5460   0035CA  101E               	iorwf	(___flneg@f1+3)^0,w,c
  5461   0035CC  B4D8               	btfsc	status,2,c
  5462   0035CE  EFEB  F01A         	goto	u5261
  5463   0035D2  EFED  F01A         	goto	u5260
  5464   0035D6                     u5261:
  5465   0035D6  EFF5  F01A         	goto	l4954
  5466   0035DA                     u5260:
  5467   0035DA  0E00               	movlw	0
  5468   0035DC  1A1B               	xorwf	___flneg@f1^0,f,c
  5469   0035DE  0E00               	movlw	0
  5470   0035E0  1A1C               	xorwf	(___flneg@f1+1)^0,f,c
  5471   0035E2  0E00               	movlw	0
  5472   0035E4  1A1D               	xorwf	(___flneg@f1+2)^0,f,c
  5473   0035E6  0E80               	movlw	128
  5474   0035E8  1A1E               	xorwf	(___flneg@f1+3)^0,f,c
  5475   0035EA                     l4954:
  5476   0035EA  C01B  F01B         	movff	___flneg@f1,?___flneg
  5477   0035EE  C01C  F01C         	movff	___flneg@f1+1,?___flneg+1
  5478   0035F2  C01D  F01D         	movff	___flneg@f1+2,?___flneg+2
  5479   0035F6  C01E  F01E         	movff	___flneg@f1+3,?___flneg+3
  5480   0035FA  0012               	return		;funcret
  5481   0035FC                     __end_of___flneg:
  5482                           	callstack 0
  5483                           
  5484 ;; *************** function ___flmul *****************
  5485 ;; Defined at:
  5486 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  5487 ;; Parameters:    Size  Location     Type
  5488 ;;  b               4    6[BANK0 ] unsigned char 
  5489 ;;  a               4   10[BANK0 ] unsigned char 
  5490 ;; Auto vars:     Size  Location     Type
  5491 ;;  prod            4   21[BANK0 ] struct .
  5492 ;;  grs             4   16[BANK0 ] unsigned long 
  5493 ;;  temp            2   25[BANK0 ] struct .
  5494 ;;  bexp            1   20[BANK0 ] unsigned char 
  5495 ;;  aexp            1   15[BANK0 ] unsigned char 
  5496 ;;  sign            1   14[BANK0 ] unsigned char 
  5497 ;; Return value:  Size  Location     Type
  5498 ;;                  4    6[BANK0 ] unsigned char 
  5499 ;; Registers used:
  5500 ;;		wreg, status,2, status,0, prodl, prodh
  5501 ;; Tracked objects:
  5502 ;;		On entry : 0/0
  5503 ;;		On exit  : 0/0
  5504 ;;		Unchanged: 0/0
  5505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5506 ;;      Params:         0       8       0       0       0       0       0       0       0
  5507 ;;      Locals:         0      13       0       0       0       0       0       0       0
  5508 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5509 ;;      Totals:         4      21       0       0       0       0       0       0       0
  5510 ;;Total ram usage:       25 bytes
  5511 ;; Hardware stack levels used: 1
  5512 ;; Hardware stack levels required when called: 8
  5513 ;; This function calls:
  5514 ;;		Nothing
  5515 ;; This function is called by:
  5516 ;;		_main
  5517 ;;		_efgtoa
  5518 ;; This function uses a non-reentrant model
  5519 ;;
  5520                           
  5521                           	psect	text18
  5522   001742                     __ptext18:
  5523                           	callstack 0
  5524   001742                     ___flmul:
  5525                           	callstack 18
  5526   001742  0100               	movlb	0	; () banked
  5527   001744  5169               	movf	(___flmul@b+3)& (0+255),w,b
  5528   001746  0B80               	andlw	128
  5529   001748  6F6E               	movwf	___flmul@sign& (0+255),b
  5530   00174A  5169               	movf	(___flmul@b+3)& (0+255),w,b
  5531   00174C  2569               	addwf	(___flmul@b+3)& (0+255),w,b
  5532   00174E  6F74               	movwf	___flmul@bexp& (0+255),b
  5533   001750                     
  5534                           ; BSR set to: 0
  5535   001750  AF68               	btfss	(___flmul@b+2)& (0+255),7,b
  5536   001752  EFAD  F00B         	goto	u4991
  5537   001756  EFAF  F00B         	goto	u4990
  5538   00175A                     u4991:
  5539   00175A  EFB0  F00B         	goto	l4782
  5540   00175E                     u4990:
  5541   00175E                     
  5542                           ; BSR set to: 0
  5543   00175E  8174               	bsf	___flmul@bexp& (0+255),0,b
  5544   001760                     l4782:
  5545                           
  5546                           ; BSR set to: 0
  5547   001760  5174               	movf	___flmul@bexp& (0+255),w,b
  5548   001762  B4D8               	btfsc	status,2,c
  5549   001764  EFB6  F00B         	goto	u5001
  5550   001768  EFB8  F00B         	goto	u5000
  5551   00176C                     u5001:
  5552   00176C  EFCB  F00B         	goto	l4790
  5553   001770                     u5000:
  5554   001770                     
  5555                           ; BSR set to: 0
  5556   001770  2974               	incf	___flmul@bexp& (0+255),w,b
  5557   001772  A4D8               	btfss	status,2,c
  5558   001774  EFBE  F00B         	goto	u5011
  5559   001778  EFC0  F00B         	goto	u5010
  5560   00177C                     u5011:
  5561   00177C  EFC8  F00B         	goto	l4788
  5562   001780                     u5010:
  5563   001780                     
  5564                           ; BSR set to: 0
  5565   001780  0E00               	movlw	0
  5566   001782  6F66               	movwf	___flmul@b& (0+255),b
  5567   001784  0E00               	movlw	0
  5568   001786  6F67               	movwf	(___flmul@b+1)& (0+255),b
  5569   001788  0E00               	movlw	0
  5570   00178A  6F68               	movwf	(___flmul@b+2)& (0+255),b
  5571   00178C  0E00               	movlw	0
  5572   00178E  6F69               	movwf	(___flmul@b+3)& (0+255),b
  5573   001790                     l4788:
  5574                           
  5575                           ; BSR set to: 0
  5576   001790  8F68               	bsf	(___flmul@b+2)& (0+255),7,b
  5577   001792  EFD3  F00B         	goto	l4792
  5578   001796                     l4790:
  5579                           
  5580                           ; BSR set to: 0
  5581   001796  0E00               	movlw	0
  5582   001798  6F66               	movwf	___flmul@b& (0+255),b
  5583   00179A  0E00               	movlw	0
  5584   00179C  6F67               	movwf	(___flmul@b+1)& (0+255),b
  5585   00179E  0E00               	movlw	0
  5586   0017A0  6F68               	movwf	(___flmul@b+2)& (0+255),b
  5587   0017A2  0E00               	movlw	0
  5588   0017A4  6F69               	movwf	(___flmul@b+3)& (0+255),b
  5589   0017A6                     l4792:
  5590                           
  5591                           ; BSR set to: 0
  5592   0017A6  516D               	movf	(___flmul@a+3)& (0+255),w,b
  5593   0017A8  0B80               	andlw	128
  5594   0017AA  1B6E               	xorwf	___flmul@sign& (0+255),f,b
  5595   0017AC                     
  5596                           ; BSR set to: 0
  5597   0017AC  516D               	movf	(___flmul@a+3)& (0+255),w,b
  5598   0017AE  256D               	addwf	(___flmul@a+3)& (0+255),w,b
  5599   0017B0  6F6F               	movwf	___flmul@aexp& (0+255),b
  5600   0017B2                     
  5601                           ; BSR set to: 0
  5602   0017B2  AF6C               	btfss	(___flmul@a+2)& (0+255),7,b
  5603   0017B4  EFDE  F00B         	goto	u5021
  5604   0017B8  EFE0  F00B         	goto	u5020
  5605   0017BC                     u5021:
  5606   0017BC  EFE1  F00B         	goto	l4800
  5607   0017C0                     u5020:
  5608   0017C0                     
  5609                           ; BSR set to: 0
  5610   0017C0  816F               	bsf	___flmul@aexp& (0+255),0,b
  5611   0017C2                     l4800:
  5612                           
  5613                           ; BSR set to: 0
  5614   0017C2  516F               	movf	___flmul@aexp& (0+255),w,b
  5615   0017C4  B4D8               	btfsc	status,2,c
  5616   0017C6  EFE7  F00B         	goto	u5031
  5617   0017CA  EFE9  F00B         	goto	u5030
  5618   0017CE                     u5031:
  5619   0017CE  EFFC  F00B         	goto	l4808
  5620   0017D2                     u5030:
  5621   0017D2                     
  5622                           ; BSR set to: 0
  5623   0017D2  296F               	incf	___flmul@aexp& (0+255),w,b
  5624   0017D4  A4D8               	btfss	status,2,c
  5625   0017D6  EFEF  F00B         	goto	u5041
  5626   0017DA  EFF1  F00B         	goto	u5040
  5627   0017DE                     u5041:
  5628   0017DE  EFF9  F00B         	goto	l4806
  5629   0017E2                     u5040:
  5630   0017E2                     
  5631                           ; BSR set to: 0
  5632   0017E2  0E00               	movlw	0
  5633   0017E4  6F6A               	movwf	___flmul@a& (0+255),b
  5634   0017E6  0E00               	movlw	0
  5635   0017E8  6F6B               	movwf	(___flmul@a+1)& (0+255),b
  5636   0017EA  0E00               	movlw	0
  5637   0017EC  6F6C               	movwf	(___flmul@a+2)& (0+255),b
  5638   0017EE  0E00               	movlw	0
  5639   0017F0  6F6D               	movwf	(___flmul@a+3)& (0+255),b
  5640   0017F2                     l4806:
  5641                           
  5642                           ; BSR set to: 0
  5643   0017F2  8F6C               	bsf	(___flmul@a+2)& (0+255),7,b
  5644   0017F4  EF04  F00C         	goto	l870
  5645   0017F8                     l4808:
  5646                           
  5647                           ; BSR set to: 0
  5648   0017F8  0E00               	movlw	0
  5649   0017FA  6F6A               	movwf	___flmul@a& (0+255),b
  5650   0017FC  0E00               	movlw	0
  5651   0017FE  6F6B               	movwf	(___flmul@a+1)& (0+255),b
  5652   001800  0E00               	movlw	0
  5653   001802  6F6C               	movwf	(___flmul@a+2)& (0+255),b
  5654   001804  0E00               	movlw	0
  5655   001806  6F6D               	movwf	(___flmul@a+3)& (0+255),b
  5656   001808                     l870:
  5657                           
  5658                           ; BSR set to: 0
  5659   001808  516F               	movf	___flmul@aexp& (0+255),w,b
  5660   00180A  B4D8               	btfsc	status,2,c
  5661   00180C  EF0A  F00C         	goto	u5051
  5662   001810  EF0C  F00C         	goto	u5050
  5663   001814                     u5051:
  5664   001814  EF14  F00C         	goto	l4812
  5665   001818                     u5050:
  5666   001818                     
  5667                           ; BSR set to: 0
  5668   001818  5174               	movf	___flmul@bexp& (0+255),w,b
  5669   00181A  A4D8               	btfss	status,2,c
  5670   00181C  EF12  F00C         	goto	u5061
  5671   001820  EF14  F00C         	goto	u5060
  5672   001824                     u5061:
  5673   001824  EF1E  F00C         	goto	l4816
  5674   001828                     u5060:
  5675   001828                     l4812:
  5676                           
  5677                           ; BSR set to: 0
  5678   001828  0E00               	movlw	0
  5679   00182A  6F66               	movwf	?___flmul& (0+255),b
  5680   00182C  0E00               	movlw	0
  5681   00182E  6F67               	movwf	(?___flmul+1)& (0+255),b
  5682   001830  0E00               	movlw	0
  5683   001832  6F68               	movwf	(?___flmul+2)& (0+255),b
  5684   001834  0E00               	movlw	0
  5685   001836  6F69               	movwf	(?___flmul+3)& (0+255),b
  5686   001838  EFB6  F00D         	goto	l874
  5687   00183C                     l4816:
  5688                           
  5689                           ; BSR set to: 0
  5690   00183C  516C               	movf	(___flmul@a+2)& (0+255),w,b
  5691   00183E  0366               	mulwf	___flmul@b& (0+255),b
  5692   001840  CFF3 F079          	movff	prodl,___flmul@temp
  5693   001844  CFF4 F07A          	movff	prodh,___flmul@temp+1
  5694   001848                     
  5695                           ; BSR set to: 0
  5696   001848  5179               	movf	___flmul@temp& (0+255),w,b
  5697   00184A  6F70               	movwf	___flmul@grs& (0+255),b
  5698   00184C  6B71               	clrf	(___flmul@grs+1)& (0+255),b
  5699   00184E  6B72               	clrf	(___flmul@grs+2)& (0+255),b
  5700   001850  6B73               	clrf	(___flmul@grs+3)& (0+255),b
  5701   001852                     
  5702                           ; BSR set to: 0
  5703   001852  517A               	movf	(___flmul@temp+1)& (0+255),w,b
  5704   001854  6F75               	movwf	___flmul@prod& (0+255),b
  5705   001856  6B76               	clrf	(___flmul@prod+1)& (0+255),b
  5706   001858  6B77               	clrf	(___flmul@prod+2)& (0+255),b
  5707   00185A  6B78               	clrf	(___flmul@prod+3)& (0+255),b
  5708   00185C  516B               	movf	(___flmul@a+1)& (0+255),w,b
  5709   00185E  0367               	mulwf	(___flmul@b+1)& (0+255),b
  5710   001860  CFF3 F079          	movff	prodl,___flmul@temp
  5711   001864  CFF4 F07A          	movff	prodh,___flmul@temp+1
  5712   001868                     
  5713                           ; BSR set to: 0
  5714   001868  5179               	movf	___flmul@temp& (0+255),w,b
  5715   00186A  2770               	addwf	___flmul@grs& (0+255),f,b
  5716   00186C  0E00               	movlw	0
  5717   00186E  2371               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5718   001870  2372               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5719   001872  2373               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5720   001874                     
  5721                           ; BSR set to: 0
  5722   001874  517A               	movf	(___flmul@temp+1)& (0+255),w,b
  5723   001876  2775               	addwf	___flmul@prod& (0+255),f,b
  5724   001878  0E00               	movlw	0
  5725   00187A  2376               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5726   00187C  2377               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5727   00187E  2378               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5728   001880  516A               	movf	___flmul@a& (0+255),w,b
  5729   001882  0368               	mulwf	(___flmul@b+2)& (0+255),b
  5730   001884  CFF3 F079          	movff	prodl,___flmul@temp
  5731   001888  CFF4 F07A          	movff	prodh,___flmul@temp+1
  5732   00188C                     
  5733                           ; BSR set to: 0
  5734   00188C  5179               	movf	___flmul@temp& (0+255),w,b
  5735   00188E  2770               	addwf	___flmul@grs& (0+255),f,b
  5736   001890  0E00               	movlw	0
  5737   001892  2371               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5738   001894  2372               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5739   001896  2373               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5740   001898                     
  5741                           ; BSR set to: 0
  5742   001898  517A               	movf	(___flmul@temp+1)& (0+255),w,b
  5743   00189A  2775               	addwf	___flmul@prod& (0+255),f,b
  5744   00189C  0E00               	movlw	0
  5745   00189E  2376               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5746   0018A0  2377               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5747   0018A2  2378               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5748   0018A4                     
  5749                           ; BSR set to: 0
  5750   0018A4  C072  F073         	movff	___flmul@grs+2,___flmul@grs+3
  5751   0018A8  C071  F072         	movff	___flmul@grs+1,___flmul@grs+2
  5752   0018AC  C070  F071         	movff	___flmul@grs,___flmul@grs+1
  5753   0018B0  6B70               	clrf	___flmul@grs& (0+255),b
  5754   0018B2                     
  5755                           ; BSR set to: 0
  5756   0018B2  516A               	movf	___flmul@a& (0+255),w,b
  5757   0018B4  0367               	mulwf	(___flmul@b+1)& (0+255),b
  5758   0018B6  CFF3 F079          	movff	prodl,___flmul@temp
  5759   0018BA  CFF4 F07A          	movff	prodh,___flmul@temp+1
  5760   0018BE                     
  5761                           ; BSR set to: 0
  5762   0018BE  5179               	movf	___flmul@temp& (0+255),w,b
  5763   0018C0  2770               	addwf	___flmul@grs& (0+255),f,b
  5764   0018C2  517A               	movf	(___flmul@temp+1)& (0+255),w,b
  5765   0018C4  2371               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5766   0018C6  0E00               	movlw	0
  5767   0018C8  2372               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5768   0018CA  0E00               	movlw	0
  5769   0018CC  2373               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5770   0018CE                     
  5771                           ; BSR set to: 0
  5772   0018CE  516B               	movf	(___flmul@a+1)& (0+255),w,b
  5773   0018D0  0366               	mulwf	___flmul@b& (0+255),b
  5774   0018D2  CFF3 F079          	movff	prodl,___flmul@temp
  5775   0018D6  CFF4 F07A          	movff	prodh,___flmul@temp+1
  5776   0018DA                     
  5777                           ; BSR set to: 0
  5778   0018DA  5179               	movf	___flmul@temp& (0+255),w,b
  5779   0018DC  2770               	addwf	___flmul@grs& (0+255),f,b
  5780   0018DE  517A               	movf	(___flmul@temp+1)& (0+255),w,b
  5781   0018E0  2371               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5782   0018E2  0E00               	movlw	0
  5783   0018E4  2372               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5784   0018E6  0E00               	movlw	0
  5785   0018E8  2373               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5786   0018EA                     
  5787                           ; BSR set to: 0
  5788   0018EA  C072  F073         	movff	___flmul@grs+2,___flmul@grs+3
  5789   0018EE  C071  F072         	movff	___flmul@grs+1,___flmul@grs+2
  5790   0018F2  C070  F071         	movff	___flmul@grs,___flmul@grs+1
  5791   0018F6  6B70               	clrf	___flmul@grs& (0+255),b
  5792   0018F8  516A               	movf	___flmul@a& (0+255),w,b
  5793   0018FA  0366               	mulwf	___flmul@b& (0+255),b
  5794   0018FC  CFF3 F079          	movff	prodl,___flmul@temp
  5795   001900  CFF4 F07A          	movff	prodh,___flmul@temp+1
  5796   001904                     
  5797                           ; BSR set to: 0
  5798   001904  5179               	movf	___flmul@temp& (0+255),w,b
  5799   001906  2770               	addwf	___flmul@grs& (0+255),f,b
  5800   001908  517A               	movf	(___flmul@temp+1)& (0+255),w,b
  5801   00190A  2371               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5802   00190C  0E00               	movlw	0
  5803   00190E  2372               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5804   001910  0E00               	movlw	0
  5805   001912  2373               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5806   001914                     
  5807                           ; BSR set to: 0
  5808   001914  516C               	movf	(___flmul@a+2)& (0+255),w,b
  5809   001916  0367               	mulwf	(___flmul@b+1)& (0+255),b
  5810   001918  CFF3 F079          	movff	prodl,___flmul@temp
  5811   00191C  CFF4 F07A          	movff	prodh,___flmul@temp+1
  5812   001920  5179               	movf	___flmul@temp& (0+255),w,b
  5813   001922  2775               	addwf	___flmul@prod& (0+255),f,b
  5814   001924  517A               	movf	(___flmul@temp+1)& (0+255),w,b
  5815   001926  2376               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5816   001928  0E00               	movlw	0
  5817   00192A  2377               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5818   00192C  0E00               	movlw	0
  5819   00192E  2378               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5820   001930                     
  5821                           ; BSR set to: 0
  5822   001930  516B               	movf	(___flmul@a+1)& (0+255),w,b
  5823   001932  0368               	mulwf	(___flmul@b+2)& (0+255),b
  5824   001934  CFF3 F079          	movff	prodl,___flmul@temp
  5825   001938  CFF4 F07A          	movff	prodh,___flmul@temp+1
  5826   00193C                     
  5827                           ; BSR set to: 0
  5828   00193C  5179               	movf	___flmul@temp& (0+255),w,b
  5829   00193E  2775               	addwf	___flmul@prod& (0+255),f,b
  5830   001940  517A               	movf	(___flmul@temp+1)& (0+255),w,b
  5831   001942  2376               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5832   001944  0E00               	movlw	0
  5833   001946  2377               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5834   001948  0E00               	movlw	0
  5835   00194A  2378               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5836   00194C  516C               	movf	(___flmul@a+2)& (0+255),w,b
  5837   00194E  0368               	mulwf	(___flmul@b+2)& (0+255),b
  5838   001950  CFF3 F079          	movff	prodl,___flmul@temp
  5839   001954  CFF4 F07A          	movff	prodh,___flmul@temp+1
  5840   001958                     
  5841                           ; BSR set to: 0
  5842   001958  5179               	movf	___flmul@temp& (0+255),w,b
  5843   00195A  6E28               	movwf	??___flmul^0,c
  5844   00195C  517A               	movf	(___flmul@temp+1)& (0+255),w,b
  5845   00195E  6E29               	movwf	(??___flmul+1)^0,c
  5846   001960  6A2A               	clrf	(??___flmul+2)^0,c
  5847   001962  6A2B               	clrf	(??___flmul+3)^0,c
  5848   001964  C02A  F02B         	movff	??___flmul+2,??___flmul+3
  5849   001968  C029  F02A         	movff	??___flmul+1,??___flmul+2
  5850   00196C  C028  F029         	movff	??___flmul,??___flmul+1
  5851   001970  6A28               	clrf	??___flmul^0,c
  5852   001972  5028               	movf	??___flmul^0,w,c
  5853   001974  2775               	addwf	___flmul@prod& (0+255),f,b
  5854   001976  5029               	movf	(??___flmul+1)^0,w,c
  5855   001978  2376               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5856   00197A  502A               	movf	(??___flmul+2)^0,w,c
  5857   00197C  2377               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5858   00197E  502B               	movf	(??___flmul+3)^0,w,c
  5859   001980  2378               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5860   001982                     
  5861                           ; BSR set to: 0
  5862   001982  C070  F028         	movff	___flmul@grs,??___flmul
  5863   001986  C071  F029         	movff	___flmul@grs+1,??___flmul+1
  5864   00198A  C072  F02A         	movff	___flmul@grs+2,??___flmul+2
  5865   00198E  C073  F02B         	movff	___flmul@grs+3,??___flmul+3
  5866   001992  0E19               	movlw	25
  5867   001994  EFD1  F00C         	goto	u5070
  5868   001998                     u5075:
  5869   001998  90D8               	bcf	status,0,c
  5870   00199A  322B               	rrcf	(??___flmul+3)^0,f,c
  5871   00199C  322A               	rrcf	(??___flmul+2)^0,f,c
  5872   00199E  3229               	rrcf	(??___flmul+1)^0,f,c
  5873   0019A0  3228               	rrcf	??___flmul^0,f,c
  5874   0019A2                     u5070:
  5875   0019A2  2EE8               	decfsz	wreg,f,c
  5876   0019A4  EFCC  F00C         	goto	u5075
  5877   0019A8  5028               	movf	??___flmul^0,w,c
  5878   0019AA  2775               	addwf	___flmul@prod& (0+255),f,b
  5879   0019AC  5029               	movf	(??___flmul+1)^0,w,c
  5880   0019AE  2376               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5881   0019B0  502A               	movf	(??___flmul+2)^0,w,c
  5882   0019B2  2377               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5883   0019B4  502B               	movf	(??___flmul+3)^0,w,c
  5884   0019B6  2378               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5885   0019B8                     
  5886                           ; BSR set to: 0
  5887   0019B8  C072  F073         	movff	___flmul@grs+2,___flmul@grs+3
  5888   0019BC  C071  F072         	movff	___flmul@grs+1,___flmul@grs+2
  5889   0019C0  C070  F071         	movff	___flmul@grs,___flmul@grs+1
  5890   0019C4  6B70               	clrf	___flmul@grs& (0+255),b
  5891   0019C6                     
  5892                           ; BSR set to: 0
  5893   0019C6  516F               	movf	___flmul@aexp& (0+255),w,b
  5894   0019C8  C074  F028         	movff	___flmul@bexp,??___flmul
  5895   0019CC  6A29               	clrf	(??___flmul+1)^0,c
  5896   0019CE  2628               	addwf	??___flmul^0,f,c
  5897   0019D0  0E00               	movlw	0
  5898   0019D2  2229               	addwfc	(??___flmul+1)^0,f,c
  5899   0019D4  0E82               	movlw	130
  5900   0019D6  2428               	addwf	??___flmul^0,w,c
  5901   0019D8  6F79               	movwf	___flmul@temp& (0+255),b
  5902   0019DA  0EFF               	movlw	255
  5903   0019DC  2029               	addwfc	(??___flmul+1)^0,w,c
  5904   0019DE  6F7A               	movwf	(___flmul@temp+1)& (0+255),b
  5905   0019E0  EF07  F00D         	goto	l4864
  5906   0019E4                     l4858:
  5907                           
  5908                           ; BSR set to: 0
  5909   0019E4  90D8               	bcf	status,0,c
  5910   0019E6  3775               	rlcf	___flmul@prod& (0+255),f,b
  5911   0019E8  3776               	rlcf	(___flmul@prod+1)& (0+255),f,b
  5912   0019EA  3777               	rlcf	(___flmul@prod+2)& (0+255),f,b
  5913   0019EC  3778               	rlcf	(___flmul@prod+3)& (0+255),f,b
  5914   0019EE                     
  5915                           ; BSR set to: 0
  5916   0019EE  AF73               	btfss	(___flmul@grs+3)& (0+255),7,b
  5917   0019F0  EFFC  F00C         	goto	u5081
  5918   0019F4  EFFE  F00C         	goto	u5080
  5919   0019F8                     u5081:
  5920   0019F8  EFFF  F00C         	goto	l877
  5921   0019FC                     u5080:
  5922   0019FC                     
  5923                           ; BSR set to: 0
  5924   0019FC  8175               	bsf	___flmul@prod& (0+255),0,b
  5925   0019FE                     l877:
  5926                           
  5927                           ; BSR set to: 0
  5928   0019FE  90D8               	bcf	status,0,c
  5929   001A00  3770               	rlcf	___flmul@grs& (0+255),f,b
  5930   001A02  3771               	rlcf	(___flmul@grs+1)& (0+255),f,b
  5931   001A04  3772               	rlcf	(___flmul@grs+2)& (0+255),f,b
  5932   001A06  3773               	rlcf	(___flmul@grs+3)& (0+255),f,b
  5933   001A08  0779               	decf	___flmul@temp& (0+255),f,b
  5934   001A0A  A0D8               	btfss	status,0,c
  5935   001A0C  077A               	decf	(___flmul@temp+1)& (0+255),f,b
  5936   001A0E                     l4864:
  5937                           
  5938                           ; BSR set to: 0
  5939   001A0E  AF77               	btfss	(___flmul@prod+2)& (0+255),7,b
  5940   001A10  EF0C  F00D         	goto	u5091
  5941   001A14  EF0E  F00D         	goto	u5090
  5942   001A18                     u5091:
  5943   001A18  EFF2  F00C         	goto	l4858
  5944   001A1C                     u5090:
  5945   001A1C                     
  5946                           ; BSR set to: 0
  5947   001A1C  0E00               	movlw	0
  5948   001A1E  6F6F               	movwf	___flmul@aexp& (0+255),b
  5949   001A20                     
  5950                           ; BSR set to: 0
  5951   001A20  AF73               	btfss	(___flmul@grs+3)& (0+255),7,b
  5952   001A22  EF15  F00D         	goto	u5101
  5953   001A26  EF17  F00D         	goto	u5100
  5954   001A2A                     u5101:
  5955   001A2A  EF3B  F00D         	goto	l879
  5956   001A2E                     u5100:
  5957   001A2E                     
  5958                           ; BSR set to: 0
  5959   001A2E  0EFF               	movlw	255
  5960   001A30  1570               	andwf	___flmul@grs& (0+255),w,b
  5961   001A32  6E28               	movwf	??___flmul^0,c
  5962   001A34  0EFF               	movlw	255
  5963   001A36  1571               	andwf	(___flmul@grs+1)& (0+255),w,b
  5964   001A38  6E29               	movwf	(??___flmul+1)^0,c
  5965   001A3A  0EFF               	movlw	255
  5966   001A3C  1572               	andwf	(___flmul@grs+2)& (0+255),w,b
  5967   001A3E  6E2A               	movwf	(??___flmul+2)^0,c
  5968   001A40  0E7F               	movlw	127
  5969   001A42  1573               	andwf	(___flmul@grs+3)& (0+255),w,b
  5970   001A44  6E2B               	movwf	(??___flmul+3)^0,c
  5971   001A46  5028               	movf	??___flmul^0,w,c
  5972   001A48  1029               	iorwf	(??___flmul+1)^0,w,c
  5973   001A4A  102A               	iorwf	(??___flmul+2)^0,w,c
  5974   001A4C  102B               	iorwf	(??___flmul+3)^0,w,c
  5975   001A4E  B4D8               	btfsc	status,2,c
  5976   001A50  EF2C  F00D         	goto	u5111
  5977   001A54  EF2E  F00D         	goto	u5110
  5978   001A58                     u5111:
  5979   001A58  EF32  F00D         	goto	l880
  5980   001A5C                     u5110:
  5981   001A5C                     l4872:
  5982                           
  5983                           ; BSR set to: 0
  5984   001A5C  0E01               	movlw	1
  5985   001A5E  6F6F               	movwf	___flmul@aexp& (0+255),b
  5986   001A60  EF3B  F00D         	goto	l879
  5987   001A64                     l880:
  5988                           
  5989                           ; BSR set to: 0
  5990   001A64  A175               	btfss	___flmul@prod& (0+255),0,b
  5991   001A66  EF37  F00D         	goto	u5121
  5992   001A6A  EF39  F00D         	goto	u5120
  5993   001A6E                     u5121:
  5994   001A6E  EF3B  F00D         	goto	l879
  5995   001A72                     u5120:
  5996   001A72  EF2E  F00D         	goto	l4872
  5997   001A76                     l879:
  5998                           
  5999                           ; BSR set to: 0
  6000   001A76  516F               	movf	___flmul@aexp& (0+255),w,b
  6001   001A78  B4D8               	btfsc	status,2,c
  6002   001A7A  EF41  F00D         	goto	u5131
  6003   001A7E  EF43  F00D         	goto	u5130
  6004   001A82                     u5131:
  6005   001A82  EF67  F00D         	goto	l4884
  6006   001A86                     u5130:
  6007   001A86                     
  6008                           ; BSR set to: 0
  6009   001A86  0E01               	movlw	1
  6010   001A88  2775               	addwf	___flmul@prod& (0+255),f,b
  6011   001A8A  0E00               	movlw	0
  6012   001A8C  2376               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6013   001A8E  2377               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6014   001A90  2378               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6015   001A92                     
  6016                           ; BSR set to: 0
  6017   001A92  A178               	btfss	(___flmul@prod+3)& (0+255),0,b
  6018   001A94  EF4E  F00D         	goto	u5141
  6019   001A98  EF50  F00D         	goto	u5140
  6020   001A9C                     u5141:
  6021   001A9C  EF67  F00D         	goto	l4884
  6022   001AA0                     u5140:
  6023   001AA0                     
  6024                           ; BSR set to: 0
  6025   001AA0  C075  F028         	movff	___flmul@prod,??___flmul
  6026   001AA4  C076  F029         	movff	___flmul@prod+1,??___flmul+1
  6027   001AA8  C077  F02A         	movff	___flmul@prod+2,??___flmul+2
  6028   001AAC  C078  F02B         	movff	___flmul@prod+3,??___flmul+3
  6029   001AB0  342B               	rlcf	(??___flmul+3)^0,w,c
  6030   001AB2  322B               	rrcf	(??___flmul+3)^0,f,c
  6031   001AB4  322A               	rrcf	(??___flmul+2)^0,f,c
  6032   001AB6  3229               	rrcf	(??___flmul+1)^0,f,c
  6033   001AB8  3228               	rrcf	??___flmul^0,f,c
  6034   001ABA  C028  F075         	movff	??___flmul,___flmul@prod
  6035   001ABE  C029  F076         	movff	??___flmul+1,___flmul@prod+1
  6036   001AC2  C02A  F077         	movff	??___flmul+2,___flmul@prod+2
  6037   001AC6  C02B  F078         	movff	??___flmul+3,___flmul@prod+3
  6038   001ACA                     
  6039                           ; BSR set to: 0
  6040   001ACA  4B79               	infsnz	___flmul@temp& (0+255),f,b
  6041   001ACC  2B7A               	incf	(___flmul@temp+1)& (0+255),f,b
  6042   001ACE                     l4884:
  6043                           
  6044                           ; BSR set to: 0
  6045   001ACE  BF7A               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6046   001AD0  EF72  F00D         	goto	u5151
  6047   001AD4  517A               	movf	(___flmul@temp+1)& (0+255),w,b
  6048   001AD6  E108               	bnz	u5150
  6049   001AD8  2979               	incf	___flmul@temp& (0+255),w,b
  6050   001ADA  A0D8               	btfss	status,0,c
  6051   001ADC  EF72  F00D         	goto	u5151
  6052   001AE0  EF74  F00D         	goto	u5150
  6053   001AE4                     u5151:
  6054   001AE4  EF7E  F00D         	goto	l4888
  6055   001AE8                     u5150:
  6056   001AE8                     
  6057                           ; BSR set to: 0
  6058   001AE8  0E00               	movlw	0
  6059   001AEA  6F75               	movwf	___flmul@prod& (0+255),b
  6060   001AEC  0E00               	movlw	0
  6061   001AEE  6F76               	movwf	(___flmul@prod+1)& (0+255),b
  6062   001AF0  0E80               	movlw	128
  6063   001AF2  6F77               	movwf	(___flmul@prod+2)& (0+255),b
  6064   001AF4  0E7F               	movlw	127
  6065   001AF6  6F78               	movwf	(___flmul@prod+3)& (0+255),b
  6066   001AF8  EFAC  F00D         	goto	l4900
  6067   001AFC                     l4888:
  6068                           
  6069                           ; BSR set to: 0
  6070   001AFC  BF7A               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6071   001AFE  EF8B  F00D         	goto	u5160
  6072   001B02  517A               	movf	(___flmul@temp+1)& (0+255),w,b
  6073   001B04  E106               	bnz	u5161
  6074   001B06  0579               	decf	___flmul@temp& (0+255),w,b
  6075   001B08  B0D8               	btfsc	status,0,c
  6076   001B0A  EF89  F00D         	goto	u5161
  6077   001B0E  EF8B  F00D         	goto	u5160
  6078   001B12                     u5161:
  6079   001B12  EF97  F00D         	goto	l887
  6080   001B16                     u5160:
  6081   001B16                     
  6082                           ; BSR set to: 0
  6083   001B16  0E00               	movlw	0
  6084   001B18  6F75               	movwf	___flmul@prod& (0+255),b
  6085   001B1A  0E00               	movlw	0
  6086   001B1C  6F76               	movwf	(___flmul@prod+1)& (0+255),b
  6087   001B1E  0E00               	movlw	0
  6088   001B20  6F77               	movwf	(___flmul@prod+2)& (0+255),b
  6089   001B22  0E00               	movlw	0
  6090   001B24  6F78               	movwf	(___flmul@prod+3)& (0+255),b
  6091   001B26  0E00               	movlw	0
  6092   001B28  6F6E               	movwf	___flmul@sign& (0+255),b
  6093   001B2A  EFAC  F00D         	goto	l4900
  6094   001B2E                     l887:
  6095                           
  6096                           ; BSR set to: 0
  6097   001B2E  C079  F074         	movff	___flmul@temp,___flmul@bexp
  6098   001B32                     
  6099                           ; BSR set to: 0
  6100   001B32  0EFF               	movlw	255
  6101   001B34  1775               	andwf	___flmul@prod& (0+255),f,b
  6102   001B36  0EFF               	movlw	255
  6103   001B38  1776               	andwf	(___flmul@prod+1)& (0+255),f,b
  6104   001B3A  0E7F               	movlw	127
  6105   001B3C  1777               	andwf	(___flmul@prod+2)& (0+255),f,b
  6106   001B3E  0E00               	movlw	0
  6107   001B40  1778               	andwf	(___flmul@prod+3)& (0+255),f,b
  6108   001B42                     
  6109                           ; BSR set to: 0
  6110   001B42  A174               	btfss	___flmul@bexp& (0+255),0,b
  6111   001B44  EFA6  F00D         	goto	u5171
  6112   001B48  EFA8  F00D         	goto	u5170
  6113   001B4C                     u5171:
  6114   001B4C  EFA9  F00D         	goto	l4898
  6115   001B50                     u5170:
  6116   001B50                     
  6117                           ; BSR set to: 0
  6118   001B50  8F77               	bsf	(___flmul@prod+2)& (0+255),7,b
  6119   001B52                     l4898:
  6120                           
  6121                           ; BSR set to: 0
  6122   001B52  90D8               	bcf	status,0,c
  6123   001B54  3174               	rrcf	___flmul@bexp& (0+255),w,b
  6124   001B56  6F78               	movwf	(___flmul@prod+3)& (0+255),b
  6125   001B58                     l4900:
  6126                           
  6127                           ; BSR set to: 0
  6128   001B58  516E               	movf	___flmul@sign& (0+255),w,b
  6129   001B5A  1378               	iorwf	(___flmul@prod+3)& (0+255),f,b
  6130   001B5C                     
  6131                           ; BSR set to: 0
  6132   001B5C  C075  F066         	movff	___flmul@prod,?___flmul
  6133   001B60  C076  F067         	movff	___flmul@prod+1,?___flmul+1
  6134   001B64  C077  F068         	movff	___flmul@prod+2,?___flmul+2
  6135   001B68  C078  F069         	movff	___flmul@prod+3,?___flmul+3
  6136   001B6C                     l874:
  6137                           
  6138                           ; BSR set to: 0
  6139   001B6C  0012               	return		;funcret
  6140   001B6E                     __end_of___flmul:
  6141                           	callstack 0
  6142                           
  6143 ;; *************** function ___flge *****************
  6144 ;; Defined at:
  6145 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  6146 ;; Parameters:    Size  Location     Type
  6147 ;;  ff1             4   27[BANK0 ] unsigned char 
  6148 ;;  ff2             4   31[BANK0 ] unsigned char 
  6149 ;; Auto vars:     Size  Location     Type
  6150 ;;		None
  6151 ;; Return value:  Size  Location     Type
  6152 ;;		None               void
  6153 ;; Registers used:
  6154 ;;		wreg, status,2, status,0
  6155 ;; Tracked objects:
  6156 ;;		On entry : 0/0
  6157 ;;		On exit  : 0/0
  6158 ;;		Unchanged: 0/0
  6159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6160 ;;      Params:         0       8       0       0       0       0       0       0       0
  6161 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6162 ;;      Temps:          0       4       0       0       0       0       0       0       0
  6163 ;;      Totals:         0      12       0       0       0       0       0       0       0
  6164 ;;Total ram usage:       12 bytes
  6165 ;; Hardware stack levels used: 1
  6166 ;; Hardware stack levels required when called: 8
  6167 ;; This function calls:
  6168 ;;		Nothing
  6169 ;; This function is called by:
  6170 ;;		_efgtoa
  6171 ;; This function uses a non-reentrant model
  6172 ;;
  6173                           
  6174                           	psect	text19
  6175   002A68                     __ptext19:
  6176                           	callstack 0
  6177   002A68                     ___flge:
  6178                           	callstack 18
  6179   002A68  0E00               	movlw	0
  6180   002A6A  0100               	movlb	0	; () banked
  6181   002A6C  157B               	andwf	___flge@ff1& (0+255),w,b
  6182   002A6E  6F83               	movwf	??___flge& (0+255),b
  6183   002A70  0E00               	movlw	0
  6184   002A72  157C               	andwf	(___flge@ff1+1)& (0+255),w,b
  6185   002A74  6F84               	movwf	(??___flge+1)& (0+255),b
  6186   002A76  0E80               	movlw	128
  6187   002A78  157D               	andwf	(___flge@ff1+2)& (0+255),w,b
  6188   002A7A  6F85               	movwf	(??___flge+2)& (0+255),b
  6189   002A7C  0E7F               	movlw	127
  6190   002A7E  157E               	andwf	(___flge@ff1+3)& (0+255),w,b
  6191   002A80  6F86               	movwf	(??___flge+3)& (0+255),b
  6192   002A82  5183               	movf	??___flge& (0+255),w,b
  6193   002A84  1184               	iorwf	(??___flge+1)& (0+255),w,b
  6194   002A86  1185               	iorwf	(??___flge+2)& (0+255),w,b
  6195   002A88  1186               	iorwf	(??___flge+3)& (0+255),w,b
  6196   002A8A  A4D8               	btfss	status,2,c
  6197   002A8C  EF4A  F015         	goto	u5211
  6198   002A90  EF4C  F015         	goto	u5210
  6199   002A94                     u5211:
  6200   002A94  EF54  F015         	goto	l4932
  6201   002A98                     u5210:
  6202   002A98                     
  6203                           ; BSR set to: 0
  6204   002A98  0E00               	movlw	0
  6205   002A9A  6F7B               	movwf	___flge@ff1& (0+255),b
  6206   002A9C  0E00               	movlw	0
  6207   002A9E  6F7C               	movwf	(___flge@ff1+1)& (0+255),b
  6208   002AA0  0E00               	movlw	0
  6209   002AA2  6F7D               	movwf	(___flge@ff1+2)& (0+255),b
  6210   002AA4  0E00               	movlw	0
  6211   002AA6  6F7E               	movwf	(___flge@ff1+3)& (0+255),b
  6212   002AA8                     l4932:
  6213                           
  6214                           ; BSR set to: 0
  6215   002AA8  0E00               	movlw	0
  6216   002AAA  157F               	andwf	___flge@ff2& (0+255),w,b
  6217   002AAC  6F83               	movwf	??___flge& (0+255),b
  6218   002AAE  0E00               	movlw	0
  6219   002AB0  1580               	andwf	(___flge@ff2+1)& (0+255),w,b
  6220   002AB2  6F84               	movwf	(??___flge+1)& (0+255),b
  6221   002AB4  0E80               	movlw	128
  6222   002AB6  1581               	andwf	(___flge@ff2+2)& (0+255),w,b
  6223   002AB8  6F85               	movwf	(??___flge+2)& (0+255),b
  6224   002ABA  0E7F               	movlw	127
  6225   002ABC  1582               	andwf	(___flge@ff2+3)& (0+255),w,b
  6226   002ABE  6F86               	movwf	(??___flge+3)& (0+255),b
  6227   002AC0  5183               	movf	??___flge& (0+255),w,b
  6228   002AC2  1184               	iorwf	(??___flge+1)& (0+255),w,b
  6229   002AC4  1185               	iorwf	(??___flge+2)& (0+255),w,b
  6230   002AC6  1186               	iorwf	(??___flge+3)& (0+255),w,b
  6231   002AC8  A4D8               	btfss	status,2,c
  6232   002ACA  EF69  F015         	goto	u5221
  6233   002ACE  EF6B  F015         	goto	u5220
  6234   002AD2                     u5221:
  6235   002AD2  EF73  F015         	goto	l4936
  6236   002AD6                     u5220:
  6237   002AD6                     
  6238                           ; BSR set to: 0
  6239   002AD6  0E00               	movlw	0
  6240   002AD8  6F7F               	movwf	___flge@ff2& (0+255),b
  6241   002ADA  0E00               	movlw	0
  6242   002ADC  6F80               	movwf	(___flge@ff2+1)& (0+255),b
  6243   002ADE  0E00               	movlw	0
  6244   002AE0  6F81               	movwf	(___flge@ff2+2)& (0+255),b
  6245   002AE2  0E00               	movlw	0
  6246   002AE4  6F82               	movwf	(___flge@ff2+3)& (0+255),b
  6247   002AE6                     l4936:
  6248                           
  6249                           ; BSR set to: 0
  6250   002AE6  AF7E               	btfss	(___flge@ff1+3)& (0+255),7,b
  6251   002AE8  EF78  F015         	goto	u5231
  6252   002AEC  EF7A  F015         	goto	u5230
  6253   002AF0                     u5231:
  6254   002AF0  EF83  F015         	goto	l4940
  6255   002AF4                     u5230:
  6256   002AF4                     
  6257                           ; BSR set to: 0
  6258   002AF4  6D7B               	negf	___flge@ff1& (0+255),b
  6259   002AF6  1F7C               	comf	(___flge@ff1+1)& (0+255),f,b
  6260   002AF8  B0D8               	btfsc	status,0,c
  6261   002AFA  2B7C               	incf	(___flge@ff1+1)& (0+255),f,b
  6262   002AFC  1F7D               	comf	(___flge@ff1+2)& (0+255),f,b
  6263   002AFE  B0D8               	btfsc	status,0,c
  6264   002B00  2B7D               	incf	(___flge@ff1+2)& (0+255),f,b
  6265   002B02  0E80               	movlw	128
  6266   002B04  577E               	subfwb	(___flge@ff1+3)& (0+255),f,b
  6267   002B06                     l4940:
  6268                           
  6269                           ; BSR set to: 0
  6270   002B06  AF82               	btfss	(___flge@ff2+3)& (0+255),7,b
  6271   002B08  EF88  F015         	goto	u5241
  6272   002B0C  EF8A  F015         	goto	u5240
  6273   002B10                     u5241:
  6274   002B10  EF93  F015         	goto	l521
  6275   002B14                     u5240:
  6276   002B14                     
  6277                           ; BSR set to: 0
  6278   002B14  6D7F               	negf	___flge@ff2& (0+255),b
  6279   002B16  1F80               	comf	(___flge@ff2+1)& (0+255),f,b
  6280   002B18  B0D8               	btfsc	status,0,c
  6281   002B1A  2B80               	incf	(___flge@ff2+1)& (0+255),f,b
  6282   002B1C  1F81               	comf	(___flge@ff2+2)& (0+255),f,b
  6283   002B1E  B0D8               	btfsc	status,0,c
  6284   002B20  2B81               	incf	(___flge@ff2+2)& (0+255),f,b
  6285   002B22  0E80               	movlw	128
  6286   002B24  5782               	subfwb	(___flge@ff2+3)& (0+255),f,b
  6287   002B26                     l521:
  6288                           
  6289                           ; BSR set to: 0
  6290   002B26  0E00               	movlw	0
  6291   002B28  1B7B               	xorwf	___flge@ff1& (0+255),f,b
  6292   002B2A  0E00               	movlw	0
  6293   002B2C  1B7C               	xorwf	(___flge@ff1+1)& (0+255),f,b
  6294   002B2E  0E00               	movlw	0
  6295   002B30  1B7D               	xorwf	(___flge@ff1+2)& (0+255),f,b
  6296   002B32  0E80               	movlw	128
  6297   002B34  1B7E               	xorwf	(___flge@ff1+3)& (0+255),f,b
  6298   002B36  0E00               	movlw	0
  6299   002B38  1B7F               	xorwf	___flge@ff2& (0+255),f,b
  6300   002B3A  0E00               	movlw	0
  6301   002B3C  1B80               	xorwf	(___flge@ff2+1)& (0+255),f,b
  6302   002B3E  0E00               	movlw	0
  6303   002B40  1B81               	xorwf	(___flge@ff2+2)& (0+255),f,b
  6304   002B42  0E80               	movlw	128
  6305   002B44  1B82               	xorwf	(___flge@ff2+3)& (0+255),f,b
  6306   002B46  517F               	movf	___flge@ff2& (0+255),w,b
  6307   002B48  5D7B               	subwf	___flge@ff1& (0+255),w,b
  6308   002B4A  5180               	movf	(___flge@ff2+1)& (0+255),w,b
  6309   002B4C  597C               	subwfb	(___flge@ff1+1)& (0+255),w,b
  6310   002B4E  5181               	movf	(___flge@ff2+2)& (0+255),w,b
  6311   002B50  597D               	subwfb	(___flge@ff1+2)& (0+255),w,b
  6312   002B52  5182               	movf	(___flge@ff2+3)& (0+255),w,b
  6313   002B54  597E               	subwfb	(___flge@ff1+3)& (0+255),w,b
  6314   002B56  B0D8               	btfsc	status,0,c
  6315   002B58  EFB0  F015         	goto	u5251
  6316   002B5C  EFB2  F015         	goto	u5250
  6317   002B60                     u5251:
  6318   002B60  EFB5  F015         	goto	l4946
  6319   002B64                     u5250:
  6320   002B64                     
  6321                           ; BSR set to: 0
  6322   002B64  90D8               	bcf	status,0,c
  6323   002B66  EFB6  F015         	goto	l526
  6324   002B6A                     l4946:
  6325                           
  6326                           ; BSR set to: 0
  6327   002B6A  80D8               	bsf	status,0,c
  6328   002B6C                     l526:
  6329                           
  6330                           ; BSR set to: 0
  6331   002B6C  0012               	return		;funcret
  6332   002B6E                     __end_of___flge:
  6333                           	callstack 0
  6334                           
  6335 ;; *************** function ___fleq *****************
  6336 ;; Defined at:
  6337 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
  6338 ;; Parameters:    Size  Location     Type
  6339 ;;  ff1             4   26[COMRAM] unsigned char 
  6340 ;;  ff2             4   30[COMRAM] unsigned char 
  6341 ;; Auto vars:     Size  Location     Type
  6342 ;;		None
  6343 ;; Return value:  Size  Location     Type
  6344 ;;		None               void
  6345 ;; Registers used:
  6346 ;;		wreg, status,2, status,0
  6347 ;; Tracked objects:
  6348 ;;		On entry : 0/0
  6349 ;;		On exit  : 0/0
  6350 ;;		Unchanged: 0/0
  6351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6352 ;;      Params:         8       0       0       0       0       0       0       0       0
  6353 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6354 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6355 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6356 ;;Total ram usage:       12 bytes
  6357 ;; Hardware stack levels used: 1
  6358 ;; Hardware stack levels required when called: 8
  6359 ;; This function calls:
  6360 ;;		Nothing
  6361 ;; This function is called by:
  6362 ;;		_efgtoa
  6363 ;; This function uses a non-reentrant model
  6364 ;;
  6365                           
  6366                           	psect	text20
  6367   002D36                     __ptext20:
  6368                           	callstack 0
  6369   002D36                     ___fleq:
  6370                           	callstack 18
  6371   002D36  0E00               	movlw	0
  6372   002D38  141B               	andwf	___fleq@ff1^0,w,c
  6373   002D3A  6E23               	movwf	??___fleq^0,c
  6374   002D3C  0E00               	movlw	0
  6375   002D3E  141C               	andwf	(___fleq@ff1+1)^0,w,c
  6376   002D40  6E24               	movwf	(??___fleq+1)^0,c
  6377   002D42  0E80               	movlw	128
  6378   002D44  141D               	andwf	(___fleq@ff1+2)^0,w,c
  6379   002D46  6E25               	movwf	(??___fleq+2)^0,c
  6380   002D48  0E7F               	movlw	127
  6381   002D4A  141E               	andwf	(___fleq@ff1+3)^0,w,c
  6382   002D4C  6E26               	movwf	(??___fleq+3)^0,c
  6383   002D4E  5023               	movf	??___fleq^0,w,c
  6384   002D50  1024               	iorwf	(??___fleq+1)^0,w,c
  6385   002D52  1025               	iorwf	(??___fleq+2)^0,w,c
  6386   002D54  1026               	iorwf	(??___fleq+3)^0,w,c
  6387   002D56  A4D8               	btfss	status,2,c
  6388   002D58  EFB0  F016         	goto	u5181
  6389   002D5C  EFB2  F016         	goto	u5180
  6390   002D60                     u5181:
  6391   002D60  EFBA  F016         	goto	l4916
  6392   002D64                     u5180:
  6393   002D64  0E00               	movlw	0
  6394   002D66  6E1B               	movwf	___fleq@ff1^0,c
  6395   002D68  0E00               	movlw	0
  6396   002D6A  6E1C               	movwf	(___fleq@ff1+1)^0,c
  6397   002D6C  0E00               	movlw	0
  6398   002D6E  6E1D               	movwf	(___fleq@ff1+2)^0,c
  6399   002D70  0E00               	movlw	0
  6400   002D72  6E1E               	movwf	(___fleq@ff1+3)^0,c
  6401   002D74                     l4916:
  6402   002D74  0E00               	movlw	0
  6403   002D76  141F               	andwf	___fleq@ff2^0,w,c
  6404   002D78  6E23               	movwf	??___fleq^0,c
  6405   002D7A  0E00               	movlw	0
  6406   002D7C  1420               	andwf	(___fleq@ff2+1)^0,w,c
  6407   002D7E  6E24               	movwf	(??___fleq+1)^0,c
  6408   002D80  0E80               	movlw	128
  6409   002D82  1421               	andwf	(___fleq@ff2+2)^0,w,c
  6410   002D84  6E25               	movwf	(??___fleq+2)^0,c
  6411   002D86  0E7F               	movlw	127
  6412   002D88  1422               	andwf	(___fleq@ff2+3)^0,w,c
  6413   002D8A  6E26               	movwf	(??___fleq+3)^0,c
  6414   002D8C  5023               	movf	??___fleq^0,w,c
  6415   002D8E  1024               	iorwf	(??___fleq+1)^0,w,c
  6416   002D90  1025               	iorwf	(??___fleq+2)^0,w,c
  6417   002D92  1026               	iorwf	(??___fleq+3)^0,w,c
  6418   002D94  A4D8               	btfss	status,2,c
  6419   002D96  EFCF  F016         	goto	u5191
  6420   002D9A  EFD1  F016         	goto	u5190
  6421   002D9E                     u5191:
  6422   002D9E  EFD9  F016         	goto	l4920
  6423   002DA2                     u5190:
  6424   002DA2  0E00               	movlw	0
  6425   002DA4  6E1F               	movwf	___fleq@ff2^0,c
  6426   002DA6  0E00               	movlw	0
  6427   002DA8  6E20               	movwf	(___fleq@ff2+1)^0,c
  6428   002DAA  0E00               	movlw	0
  6429   002DAC  6E21               	movwf	(___fleq@ff2+2)^0,c
  6430   002DAE  0E00               	movlw	0
  6431   002DB0  6E22               	movwf	(___fleq@ff2+3)^0,c
  6432   002DB2                     l4920:
  6433   002DB2  501F               	movf	___fleq@ff2^0,w,c
  6434   002DB4  181B               	xorwf	___fleq@ff1^0,w,c
  6435   002DB6  E10F               	bnz	u5200
  6436   002DB8  5020               	movf	(___fleq@ff2+1)^0,w,c
  6437   002DBA  181C               	xorwf	(___fleq@ff1+1)^0,w,c
  6438   002DBC  E10C               	bnz	u5200
  6439   002DBE  5021               	movf	(___fleq@ff2+2)^0,w,c
  6440   002DC0  181D               	xorwf	(___fleq@ff1+2)^0,w,c
  6441   002DC2  E109               	bnz	u5200
  6442   002DC4  5022               	movf	(___fleq@ff2+3)^0,w,c
  6443   002DC6  181E               	xorwf	(___fleq@ff1+3)^0,w,c
  6444   002DC8  B4D8               	btfsc	status,2,c
  6445   002DCA  EFE9  F016         	goto	u5201
  6446   002DCE  EFEB  F016         	goto	u5200
  6447   002DD2                     u5201:
  6448   002DD2  EFEE  F016         	goto	l4924
  6449   002DD6                     u5200:
  6450   002DD6  90D8               	bcf	status,0,c
  6451   002DD8  EFEF  F016         	goto	l515
  6452   002DDC                     l4924:
  6453   002DDC  80D8               	bsf	status,0,c
  6454   002DDE                     l515:
  6455   002DDE  0012               	return		;funcret
  6456   002DE0                     __end_of___fleq:
  6457                           	callstack 0
  6458                           
  6459 ;; *************** function ___fldiv *****************
  6460 ;; Defined at:
  6461 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  6462 ;; Parameters:    Size  Location     Type
  6463 ;;  b               4   26[COMRAM] unsigned char 
  6464 ;;  a               4   30[COMRAM] unsigned char 
  6465 ;; Auto vars:     Size  Location     Type
  6466 ;;  grs             4    7[BANK0 ] unsigned long 
  6467 ;;  rem             4    0[BANK0 ] unsigned long 
  6468 ;;  new_exp         2    5[BANK0 ] short 
  6469 ;;  aexp            1   12[BANK0 ] unsigned char 
  6470 ;;  bexp            1   11[BANK0 ] unsigned char 
  6471 ;;  sign            1    4[BANK0 ] unsigned char 
  6472 ;; Return value:  Size  Location     Type
  6473 ;;                  4   26[COMRAM] unsigned char 
  6474 ;; Registers used:
  6475 ;;		wreg, status,2, status,0
  6476 ;; Tracked objects:
  6477 ;;		On entry : 0/0
  6478 ;;		On exit  : 0/0
  6479 ;;		Unchanged: 0/0
  6480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6481 ;;      Params:         8       0       0       0       0       0       0       0       0
  6482 ;;      Locals:         0      13       0       0       0       0       0       0       0
  6483 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6484 ;;      Totals:        12      13       0       0       0       0       0       0       0
  6485 ;;Total ram usage:       25 bytes
  6486 ;; Hardware stack levels used: 1
  6487 ;; Hardware stack levels required when called: 8
  6488 ;; This function calls:
  6489 ;;		Nothing
  6490 ;; This function is called by:
  6491 ;;		_efgtoa
  6492 ;; This function uses a non-reentrant model
  6493 ;;
  6494                           
  6495                           	psect	text21
  6496   001B6E                     __ptext21:
  6497                           	callstack 0
  6498   001B6E                     ___fldiv:
  6499                           	callstack 18
  6500   001B6E  501E               	movf	(___fldiv@b+3)^0,w,c
  6501   001B70  0B80               	andlw	128
  6502   001B72  0100               	movlb	0	; () banked
  6503   001B74  6F64               	movwf	___fldiv@sign& (0+255),b
  6504   001B76  501E               	movf	(___fldiv@b+3)^0,w,c
  6505   001B78  241E               	addwf	(___fldiv@b+3)^0,w,c
  6506   001B7A  6F6B               	movwf	___fldiv@bexp& (0+255),b
  6507   001B7C                     
  6508                           ; BSR set to: 0
  6509   001B7C  AE1D               	btfss	(___fldiv@b+2)^0,7,c
  6510   001B7E  EFC3  F00D         	goto	u4761
  6511   001B82  EFC5  F00D         	goto	u4760
  6512   001B86                     u4761:
  6513   001B86  EFC6  F00D         	goto	l4644
  6514   001B8A                     u4760:
  6515   001B8A                     
  6516                           ; BSR set to: 0
  6517   001B8A  816B               	bsf	___fldiv@bexp& (0+255),0,b
  6518   001B8C                     l4644:
  6519                           
  6520                           ; BSR set to: 0
  6521   001B8C  516B               	movf	___fldiv@bexp& (0+255),w,b
  6522   001B8E  B4D8               	btfsc	status,2,c
  6523   001B90  EFCC  F00D         	goto	u4771
  6524   001B94  EFCE  F00D         	goto	u4770
  6525   001B98                     u4771:
  6526   001B98  EFE3  F00D         	goto	l4654
  6527   001B9C                     u4770:
  6528   001B9C                     
  6529                           ; BSR set to: 0
  6530   001B9C  296B               	incf	___fldiv@bexp& (0+255),w,b
  6531   001B9E  A4D8               	btfss	status,2,c
  6532   001BA0  EFD4  F00D         	goto	u4781
  6533   001BA4  EFD6  F00D         	goto	u4780
  6534   001BA8                     u4781:
  6535   001BA8  EFDE  F00D         	goto	l4650
  6536   001BAC                     u4780:
  6537   001BAC                     
  6538                           ; BSR set to: 0
  6539   001BAC  0E00               	movlw	0
  6540   001BAE  6E1B               	movwf	___fldiv@b^0,c
  6541   001BB0  0E00               	movlw	0
  6542   001BB2  6E1C               	movwf	(___fldiv@b+1)^0,c
  6543   001BB4  0E00               	movlw	0
  6544   001BB6  6E1D               	movwf	(___fldiv@b+2)^0,c
  6545   001BB8  0E00               	movlw	0
  6546   001BBA  6E1E               	movwf	(___fldiv@b+3)^0,c
  6547   001BBC                     l4650:
  6548                           
  6549                           ; BSR set to: 0
  6550   001BBC  8E1D               	bsf	(___fldiv@b+2)^0,7,c
  6551   001BBE                     
  6552                           ; BSR set to: 0
  6553   001BBE  0E00               	movlw	0
  6554   001BC0  6E1E               	movwf	(___fldiv@b+3)^0,c
  6555   001BC2  EFEB  F00D         	goto	l4656
  6556   001BC6                     l4654:
  6557                           
  6558                           ; BSR set to: 0
  6559   001BC6  0E00               	movlw	0
  6560   001BC8  6E1B               	movwf	___fldiv@b^0,c
  6561   001BCA  0E00               	movlw	0
  6562   001BCC  6E1C               	movwf	(___fldiv@b+1)^0,c
  6563   001BCE  0E00               	movlw	0
  6564   001BD0  6E1D               	movwf	(___fldiv@b+2)^0,c
  6565   001BD2  0E00               	movlw	0
  6566   001BD4  6E1E               	movwf	(___fldiv@b+3)^0,c
  6567   001BD6                     l4656:
  6568                           
  6569                           ; BSR set to: 0
  6570   001BD6  5022               	movf	(___fldiv@a+3)^0,w,c
  6571   001BD8  0B80               	andlw	128
  6572   001BDA  1B64               	xorwf	___fldiv@sign& (0+255),f,b
  6573   001BDC                     
  6574                           ; BSR set to: 0
  6575   001BDC  5022               	movf	(___fldiv@a+3)^0,w,c
  6576   001BDE  2422               	addwf	(___fldiv@a+3)^0,w,c
  6577   001BE0  6F6C               	movwf	___fldiv@aexp& (0+255),b
  6578   001BE2                     
  6579                           ; BSR set to: 0
  6580   001BE2  AE21               	btfss	(___fldiv@a+2)^0,7,c
  6581   001BE4  EFF6  F00D         	goto	u4791
  6582   001BE8  EFF8  F00D         	goto	u4790
  6583   001BEC                     u4791:
  6584   001BEC  EFF9  F00D         	goto	l4664
  6585   001BF0                     u4790:
  6586   001BF0                     
  6587                           ; BSR set to: 0
  6588   001BF0  816C               	bsf	___fldiv@aexp& (0+255),0,b
  6589   001BF2                     l4664:
  6590                           
  6591                           ; BSR set to: 0
  6592   001BF2  516C               	movf	___fldiv@aexp& (0+255),w,b
  6593   001BF4  B4D8               	btfsc	status,2,c
  6594   001BF6  EFFF  F00D         	goto	u4801
  6595   001BFA  EF01  F00E         	goto	u4800
  6596   001BFE                     u4801:
  6597   001BFE  EF16  F00E         	goto	l4674
  6598   001C02                     u4800:
  6599   001C02                     
  6600                           ; BSR set to: 0
  6601   001C02  296C               	incf	___fldiv@aexp& (0+255),w,b
  6602   001C04  A4D8               	btfss	status,2,c
  6603   001C06  EF07  F00E         	goto	u4811
  6604   001C0A  EF09  F00E         	goto	u4810
  6605   001C0E                     u4811:
  6606   001C0E  EF11  F00E         	goto	l4670
  6607   001C12                     u4810:
  6608   001C12                     
  6609                           ; BSR set to: 0
  6610   001C12  0E00               	movlw	0
  6611   001C14  6E1F               	movwf	___fldiv@a^0,c
  6612   001C16  0E00               	movlw	0
  6613   001C18  6E20               	movwf	(___fldiv@a+1)^0,c
  6614   001C1A  0E00               	movlw	0
  6615   001C1C  6E21               	movwf	(___fldiv@a+2)^0,c
  6616   001C1E  0E00               	movlw	0
  6617   001C20  6E22               	movwf	(___fldiv@a+3)^0,c
  6618   001C22                     l4670:
  6619                           
  6620                           ; BSR set to: 0
  6621   001C22  8E21               	bsf	(___fldiv@a+2)^0,7,c
  6622   001C24                     
  6623                           ; BSR set to: 0
  6624   001C24  0E00               	movlw	0
  6625   001C26  6E22               	movwf	(___fldiv@a+3)^0,c
  6626   001C28  EF1E  F00E         	goto	l4676
  6627   001C2C                     l4674:
  6628                           
  6629                           ; BSR set to: 0
  6630   001C2C  0E00               	movlw	0
  6631   001C2E  6E1F               	movwf	___fldiv@a^0,c
  6632   001C30  0E00               	movlw	0
  6633   001C32  6E20               	movwf	(___fldiv@a+1)^0,c
  6634   001C34  0E00               	movlw	0
  6635   001C36  6E21               	movwf	(___fldiv@a+2)^0,c
  6636   001C38  0E00               	movlw	0
  6637   001C3A  6E22               	movwf	(___fldiv@a+3)^0,c
  6638   001C3C                     l4676:
  6639                           
  6640                           ; BSR set to: 0
  6641   001C3C  501F               	movf	___fldiv@a^0,w,c
  6642   001C3E  1020               	iorwf	(___fldiv@a+1)^0,w,c
  6643   001C40  1021               	iorwf	(___fldiv@a+2)^0,w,c
  6644   001C42  1022               	iorwf	(___fldiv@a+3)^0,w,c
  6645   001C44  A4D8               	btfss	status,2,c
  6646   001C46  EF27  F00E         	goto	u4821
  6647   001C4A  EF29  F00E         	goto	u4820
  6648   001C4E                     u4821:
  6649   001C4E  EF41  F00E         	goto	l4688
  6650   001C52                     u4820:
  6651   001C52                     
  6652                           ; BSR set to: 0
  6653   001C52  0E00               	movlw	0
  6654   001C54  6E1B               	movwf	___fldiv@b^0,c
  6655   001C56  0E00               	movlw	0
  6656   001C58  6E1C               	movwf	(___fldiv@b+1)^0,c
  6657   001C5A  0E00               	movlw	0
  6658   001C5C  6E1D               	movwf	(___fldiv@b+2)^0,c
  6659   001C5E  0E00               	movlw	0
  6660   001C60  6E1E               	movwf	(___fldiv@b+3)^0,c
  6661   001C62                     
  6662                           ; BSR set to: 0
  6663   001C62  0E80               	movlw	128
  6664   001C64  121D               	iorwf	(___fldiv@b+2)^0,f,c
  6665   001C66  0E7F               	movlw	127
  6666   001C68  121E               	iorwf	(___fldiv@b+3)^0,f,c
  6667   001C6A                     l4682:
  6668                           
  6669                           ; BSR set to: 0
  6670   001C6A  5164               	movf	___fldiv@sign& (0+255),w,b
  6671   001C6C  121E               	iorwf	(___fldiv@b+3)^0,f,c
  6672   001C6E                     
  6673                           ; BSR set to: 0
  6674   001C6E  C01B  F01B         	movff	___fldiv@b,?___fldiv
  6675   001C72  C01C  F01C         	movff	___fldiv@b+1,?___fldiv+1
  6676   001C76  C01D  F01D         	movff	___fldiv@b+2,?___fldiv+2
  6677   001C7A  C01E  F01E         	movff	___fldiv@b+3,?___fldiv+3
  6678   001C7E  EF84  F00F         	goto	l838
  6679   001C82                     l4688:
  6680                           
  6681                           ; BSR set to: 0
  6682   001C82  516B               	movf	___fldiv@bexp& (0+255),w,b
  6683   001C84  A4D8               	btfss	status,2,c
  6684   001C86  EF47  F00E         	goto	u4831
  6685   001C8A  EF49  F00E         	goto	u4830
  6686   001C8E                     u4831:
  6687   001C8E  EF53  F00E         	goto	l4696
  6688   001C92                     u4830:
  6689   001C92                     
  6690                           ; BSR set to: 0
  6691   001C92  0E00               	movlw	0
  6692   001C94  6E1B               	movwf	?___fldiv^0,c
  6693   001C96  0E00               	movlw	0
  6694   001C98  6E1C               	movwf	(?___fldiv+1)^0,c
  6695   001C9A  0E00               	movlw	0
  6696   001C9C  6E1D               	movwf	(?___fldiv+2)^0,c
  6697   001C9E  0E00               	movlw	0
  6698   001CA0  6E1E               	movwf	(?___fldiv+3)^0,c
  6699   001CA2  EF84  F00F         	goto	l838
  6700   001CA6                     l4696:
  6701                           
  6702                           ; BSR set to: 0
  6703   001CA6  516C               	movf	___fldiv@aexp& (0+255),w,b
  6704   001CA8  C06B  F023         	movff	___fldiv@bexp,??___fldiv
  6705   001CAC  6A24               	clrf	(??___fldiv+1)^0,c
  6706   001CAE  5E23               	subwf	??___fldiv^0,f,c
  6707   001CB0  0E00               	movlw	0
  6708   001CB2  5A24               	subwfb	(??___fldiv+1)^0,f,c
  6709   001CB4  0E7F               	movlw	127
  6710   001CB6  2423               	addwf	??___fldiv^0,w,c
  6711   001CB8  6F65               	movwf	___fldiv@new_exp& (0+255),b
  6712   001CBA  0E00               	movlw	0
  6713   001CBC  2024               	addwfc	(??___fldiv+1)^0,w,c
  6714   001CBE  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  6715   001CC0                     
  6716                           ; BSR set to: 0
  6717   001CC0  C01B  F060         	movff	___fldiv@b,___fldiv@rem
  6718   001CC4  C01C  F061         	movff	___fldiv@b+1,___fldiv@rem+1
  6719   001CC8  C01D  F062         	movff	___fldiv@b+2,___fldiv@rem+2
  6720   001CCC  C01E  F063         	movff	___fldiv@b+3,___fldiv@rem+3
  6721   001CD0                     
  6722                           ; BSR set to: 0
  6723   001CD0  0E00               	movlw	0
  6724   001CD2  6E1B               	movwf	___fldiv@b^0,c
  6725   001CD4  0E00               	movlw	0
  6726   001CD6  6E1C               	movwf	(___fldiv@b+1)^0,c
  6727   001CD8  0E00               	movlw	0
  6728   001CDA  6E1D               	movwf	(___fldiv@b+2)^0,c
  6729   001CDC  0E00               	movlw	0
  6730   001CDE  6E1E               	movwf	(___fldiv@b+3)^0,c
  6731   001CE0                     
  6732                           ; BSR set to: 0
  6733   001CE0  0E00               	movlw	0
  6734   001CE2  6F67               	movwf	___fldiv@grs& (0+255),b
  6735   001CE4  0E00               	movlw	0
  6736   001CE6  6F68               	movwf	(___fldiv@grs+1)& (0+255),b
  6737   001CE8  0E00               	movlw	0
  6738   001CEA  6F69               	movwf	(___fldiv@grs+2)& (0+255),b
  6739   001CEC  0E00               	movlw	0
  6740   001CEE  6F6A               	movwf	(___fldiv@grs+3)& (0+255),b
  6741   001CF0                     
  6742                           ; BSR set to: 0
  6743   001CF0  0E00               	movlw	0
  6744   001CF2  6F6C               	movwf	___fldiv@aexp& (0+255),b
  6745   001CF4  EFB4  F00E         	goto	l840
  6746   001CF8                     l4706:
  6747                           
  6748                           ; BSR set to: 0
  6749   001CF8  516C               	movf	___fldiv@aexp& (0+255),w,b
  6750   001CFA  B4D8               	btfsc	status,2,c
  6751   001CFC  EF82  F00E         	goto	u4841
  6752   001D00  EF84  F00E         	goto	u4840
  6753   001D04                     u4841:
  6754   001D04  EF9B  F00E         	goto	l4714
  6755   001D08                     u4840:
  6756   001D08                     
  6757                           ; BSR set to: 0
  6758   001D08  90D8               	bcf	status,0,c
  6759   001D0A  3760               	rlcf	___fldiv@rem& (0+255),f,b
  6760   001D0C  3761               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  6761   001D0E  3762               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  6762   001D10  3763               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  6763   001D12  90D8               	bcf	status,0,c
  6764   001D14  361B               	rlcf	___fldiv@b^0,f,c
  6765   001D16  361C               	rlcf	(___fldiv@b+1)^0,f,c
  6766   001D18  361D               	rlcf	(___fldiv@b+2)^0,f,c
  6767   001D1A  361E               	rlcf	(___fldiv@b+3)^0,f,c
  6768   001D1C                     
  6769                           ; BSR set to: 0
  6770   001D1C  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  6771   001D1E  EF93  F00E         	goto	u4851
  6772   001D22  EF95  F00E         	goto	u4850
  6773   001D26                     u4851:
  6774   001D26  EF96  F00E         	goto	l843
  6775   001D2A                     u4850:
  6776   001D2A                     
  6777                           ; BSR set to: 0
  6778   001D2A  801B               	bsf	___fldiv@b^0,0,c
  6779   001D2C                     l843:
  6780                           
  6781                           ; BSR set to: 0
  6782   001D2C  90D8               	bcf	status,0,c
  6783   001D2E  3767               	rlcf	___fldiv@grs& (0+255),f,b
  6784   001D30  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  6785   001D32  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  6786   001D34  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  6787   001D36                     l4714:
  6788                           
  6789                           ; BSR set to: 0
  6790   001D36  501F               	movf	___fldiv@a^0,w,c
  6791   001D38  5D60               	subwf	___fldiv@rem& (0+255),w,b
  6792   001D3A  5020               	movf	(___fldiv@a+1)^0,w,c
  6793   001D3C  5961               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  6794   001D3E  5021               	movf	(___fldiv@a+2)^0,w,c
  6795   001D40  5962               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  6796   001D42  5022               	movf	(___fldiv@a+3)^0,w,c
  6797   001D44  5963               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  6798   001D46  A0D8               	btfss	status,0,c
  6799   001D48  EFA8  F00E         	goto	u4861
  6800   001D4C  EFAA  F00E         	goto	u4860
  6801   001D50                     u4861:
  6802   001D50  EFB3  F00E         	goto	l4720
  6803   001D54                     u4860:
  6804   001D54                     
  6805                           ; BSR set to: 0
  6806   001D54  8D6A               	bsf	(___fldiv@grs+3)& (0+255),6,b
  6807   001D56                     
  6808                           ; BSR set to: 0
  6809   001D56  501F               	movf	___fldiv@a^0,w,c
  6810   001D58  5F60               	subwf	___fldiv@rem& (0+255),f,b
  6811   001D5A  5020               	movf	(___fldiv@a+1)^0,w,c
  6812   001D5C  5B61               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  6813   001D5E  5021               	movf	(___fldiv@a+2)^0,w,c
  6814   001D60  5B62               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  6815   001D62  5022               	movf	(___fldiv@a+3)^0,w,c
  6816   001D64  5B63               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  6817   001D66                     l4720:
  6818                           
  6819                           ; BSR set to: 0
  6820   001D66  2B6C               	incf	___fldiv@aexp& (0+255),f,b
  6821   001D68                     l840:
  6822                           
  6823                           ; BSR set to: 0
  6824   001D68  0E19               	movlw	25
  6825   001D6A  656C               	cpfsgt	___fldiv@aexp& (0+255),b
  6826   001D6C  EFBA  F00E         	goto	u4871
  6827   001D70  EFBC  F00E         	goto	u4870
  6828   001D74                     u4871:
  6829   001D74  EF7C  F00E         	goto	l4706
  6830   001D78                     u4870:
  6831   001D78                     
  6832                           ; BSR set to: 0
  6833   001D78  5160               	movf	___fldiv@rem& (0+255),w,b
  6834   001D7A  1161               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  6835   001D7C  1162               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  6836   001D7E  1163               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  6837   001D80  B4D8               	btfsc	status,2,c
  6838   001D82  EFC5  F00E         	goto	u4881
  6839   001D86  EFC7  F00E         	goto	u4880
  6840   001D8A                     u4881:
  6841   001D8A  EFDF  F00E         	goto	l4732
  6842   001D8E                     u4880:
  6843   001D8E                     
  6844                           ; BSR set to: 0
  6845   001D8E  8167               	bsf	___fldiv@grs& (0+255),0,b
  6846   001D90  EFDF  F00E         	goto	l4732
  6847   001D94                     l4726:
  6848                           
  6849                           ; BSR set to: 0
  6850   001D94  90D8               	bcf	status,0,c
  6851   001D96  361B               	rlcf	___fldiv@b^0,f,c
  6852   001D98  361C               	rlcf	(___fldiv@b+1)^0,f,c
  6853   001D9A  361D               	rlcf	(___fldiv@b+2)^0,f,c
  6854   001D9C  361E               	rlcf	(___fldiv@b+3)^0,f,c
  6855   001D9E                     
  6856                           ; BSR set to: 0
  6857   001D9E  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  6858   001DA0  EFD4  F00E         	goto	u4891
  6859   001DA4  EFD6  F00E         	goto	u4890
  6860   001DA8                     u4891:
  6861   001DA8  EFD7  F00E         	goto	l849
  6862   001DAC                     u4890:
  6863   001DAC                     
  6864                           ; BSR set to: 0
  6865   001DAC  801B               	bsf	___fldiv@b^0,0,c
  6866   001DAE                     l849:
  6867                           
  6868                           ; BSR set to: 0
  6869   001DAE  90D8               	bcf	status,0,c
  6870   001DB0  3767               	rlcf	___fldiv@grs& (0+255),f,b
  6871   001DB2  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  6872   001DB4  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  6873   001DB6  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  6874   001DB8  0765               	decf	___fldiv@new_exp& (0+255),f,b
  6875   001DBA  A0D8               	btfss	status,0,c
  6876   001DBC  0766               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  6877   001DBE                     l4732:
  6878                           
  6879                           ; BSR set to: 0
  6880   001DBE  AE1D               	btfss	(___fldiv@b+2)^0,7,c
  6881   001DC0  EFE4  F00E         	goto	u4901
  6882   001DC4  EFE6  F00E         	goto	u4900
  6883   001DC8                     u4901:
  6884   001DC8  EFCA  F00E         	goto	l4726
  6885   001DCC                     u4900:
  6886   001DCC                     
  6887                           ; BSR set to: 0
  6888   001DCC  0E00               	movlw	0
  6889   001DCE  6F6C               	movwf	___fldiv@aexp& (0+255),b
  6890   001DD0                     
  6891                           ; BSR set to: 0
  6892   001DD0  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  6893   001DD2  EFED  F00E         	goto	u4911
  6894   001DD6  EFEF  F00E         	goto	u4910
  6895   001DDA                     u4911:
  6896   001DDA  EF13  F00F         	goto	l851
  6897   001DDE                     u4910:
  6898   001DDE                     
  6899                           ; BSR set to: 0
  6900   001DDE  0EFF               	movlw	255
  6901   001DE0  1567               	andwf	___fldiv@grs& (0+255),w,b
  6902   001DE2  6E23               	movwf	??___fldiv^0,c
  6903   001DE4  0EFF               	movlw	255
  6904   001DE6  1568               	andwf	(___fldiv@grs+1)& (0+255),w,b
  6905   001DE8  6E24               	movwf	(??___fldiv+1)^0,c
  6906   001DEA  0EFF               	movlw	255
  6907   001DEC  1569               	andwf	(___fldiv@grs+2)& (0+255),w,b
  6908   001DEE  6E25               	movwf	(??___fldiv+2)^0,c
  6909   001DF0  0E7F               	movlw	127
  6910   001DF2  156A               	andwf	(___fldiv@grs+3)& (0+255),w,b
  6911   001DF4  6E26               	movwf	(??___fldiv+3)^0,c
  6912   001DF6  5023               	movf	??___fldiv^0,w,c
  6913   001DF8  1024               	iorwf	(??___fldiv+1)^0,w,c
  6914   001DFA  1025               	iorwf	(??___fldiv+2)^0,w,c
  6915   001DFC  1026               	iorwf	(??___fldiv+3)^0,w,c
  6916   001DFE  B4D8               	btfsc	status,2,c
  6917   001E00  EF04  F00F         	goto	u4921
  6918   001E04  EF06  F00F         	goto	u4920
  6919   001E08                     u4921:
  6920   001E08  EF0A  F00F         	goto	l852
  6921   001E0C                     u4920:
  6922   001E0C                     l4740:
  6923                           
  6924                           ; BSR set to: 0
  6925   001E0C  0E01               	movlw	1
  6926   001E0E  6F6C               	movwf	___fldiv@aexp& (0+255),b
  6927   001E10  EF13  F00F         	goto	l851
  6928   001E14                     l852:
  6929                           
  6930                           ; BSR set to: 0
  6931   001E14  A01B               	btfss	___fldiv@b^0,0,c
  6932   001E16  EF0F  F00F         	goto	u4931
  6933   001E1A  EF11  F00F         	goto	u4930
  6934   001E1E                     u4931:
  6935   001E1E  EF13  F00F         	goto	l851
  6936   001E22                     u4930:
  6937   001E22  EF06  F00F         	goto	l4740
  6938   001E26                     l851:
  6939                           
  6940                           ; BSR set to: 0
  6941   001E26  516C               	movf	___fldiv@aexp& (0+255),w,b
  6942   001E28  B4D8               	btfsc	status,2,c
  6943   001E2A  EF19  F00F         	goto	u4941
  6944   001E2E  EF1B  F00F         	goto	u4940
  6945   001E32                     u4941:
  6946   001E32  EF3F  F00F         	goto	l4752
  6947   001E36                     u4940:
  6948   001E36                     
  6949                           ; BSR set to: 0
  6950   001E36  0E01               	movlw	1
  6951   001E38  261B               	addwf	___fldiv@b^0,f,c
  6952   001E3A  0E00               	movlw	0
  6953   001E3C  221C               	addwfc	(___fldiv@b+1)^0,f,c
  6954   001E3E  221D               	addwfc	(___fldiv@b+2)^0,f,c
  6955   001E40  221E               	addwfc	(___fldiv@b+3)^0,f,c
  6956   001E42                     
  6957                           ; BSR set to: 0
  6958   001E42  A01E               	btfss	(___fldiv@b+3)^0,0,c
  6959   001E44  EF26  F00F         	goto	u4951
  6960   001E48  EF28  F00F         	goto	u4950
  6961   001E4C                     u4951:
  6962   001E4C  EF3F  F00F         	goto	l4752
  6963   001E50                     u4950:
  6964   001E50                     
  6965                           ; BSR set to: 0
  6966   001E50  C01B  F023         	movff	___fldiv@b,??___fldiv
  6967   001E54  C01C  F024         	movff	___fldiv@b+1,??___fldiv+1
  6968   001E58  C01D  F025         	movff	___fldiv@b+2,??___fldiv+2
  6969   001E5C  C01E  F026         	movff	___fldiv@b+3,??___fldiv+3
  6970   001E60  3426               	rlcf	(??___fldiv+3)^0,w,c
  6971   001E62  3226               	rrcf	(??___fldiv+3)^0,f,c
  6972   001E64  3225               	rrcf	(??___fldiv+2)^0,f,c
  6973   001E66  3224               	rrcf	(??___fldiv+1)^0,f,c
  6974   001E68  3223               	rrcf	??___fldiv^0,f,c
  6975   001E6A  C023  F01B         	movff	??___fldiv,___fldiv@b
  6976   001E6E  C024  F01C         	movff	??___fldiv+1,___fldiv@b+1
  6977   001E72  C025  F01D         	movff	??___fldiv+2,___fldiv@b+2
  6978   001E76  C026  F01E         	movff	??___fldiv+3,___fldiv@b+3
  6979   001E7A                     
  6980                           ; BSR set to: 0
  6981   001E7A  4B65               	infsnz	___fldiv@new_exp& (0+255),f,b
  6982   001E7C  2B66               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  6983   001E7E                     l4752:
  6984                           
  6985                           ; BSR set to: 0
  6986   001E7E  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  6987   001E80  EF4A  F00F         	goto	u4961
  6988   001E84  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  6989   001E86  E108               	bnz	u4960
  6990   001E88  2965               	incf	___fldiv@new_exp& (0+255),w,b
  6991   001E8A  A0D8               	btfss	status,0,c
  6992   001E8C  EF4A  F00F         	goto	u4961
  6993   001E90  EF4C  F00F         	goto	u4960
  6994   001E94                     u4961:
  6995   001E94  EF57  F00F         	goto	l4756
  6996   001E98                     u4960:
  6997   001E98                     
  6998                           ; BSR set to: 0
  6999   001E98  0E00               	movlw	0
  7000   001E9A  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  7001   001E9C  6965               	setf	___fldiv@new_exp& (0+255),b
  7002   001E9E  0E00               	movlw	0
  7003   001EA0  6E1B               	movwf	___fldiv@b^0,c
  7004   001EA2  0E00               	movlw	0
  7005   001EA4  6E1C               	movwf	(___fldiv@b+1)^0,c
  7006   001EA6  0E00               	movlw	0
  7007   001EA8  6E1D               	movwf	(___fldiv@b+2)^0,c
  7008   001EAA  0E00               	movlw	0
  7009   001EAC  6E1E               	movwf	(___fldiv@b+3)^0,c
  7010   001EAE                     l4756:
  7011                           
  7012                           ; BSR set to: 0
  7013   001EAE  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  7014   001EB0  EF64  F00F         	goto	u4970
  7015   001EB4  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  7016   001EB6  E106               	bnz	u4971
  7017   001EB8  0565               	decf	___fldiv@new_exp& (0+255),w,b
  7018   001EBA  B0D8               	btfsc	status,0,c
  7019   001EBC  EF62  F00F         	goto	u4971
  7020   001EC0  EF64  F00F         	goto	u4970
  7021   001EC4                     u4971:
  7022   001EC4  EF72  F00F         	goto	l4760
  7023   001EC8                     u4970:
  7024   001EC8                     
  7025                           ; BSR set to: 0
  7026   001EC8  0E00               	movlw	0
  7027   001ECA  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  7028   001ECC  0E00               	movlw	0
  7029   001ECE  6F65               	movwf	___fldiv@new_exp& (0+255),b
  7030   001ED0  0E00               	movlw	0
  7031   001ED2  6E1B               	movwf	___fldiv@b^0,c
  7032   001ED4  0E00               	movlw	0
  7033   001ED6  6E1C               	movwf	(___fldiv@b+1)^0,c
  7034   001ED8  0E00               	movlw	0
  7035   001EDA  6E1D               	movwf	(___fldiv@b+2)^0,c
  7036   001EDC  0E00               	movlw	0
  7037   001EDE  6E1E               	movwf	(___fldiv@b+3)^0,c
  7038   001EE0  0E00               	movlw	0
  7039   001EE2  6F64               	movwf	___fldiv@sign& (0+255),b
  7040   001EE4                     l4760:
  7041                           
  7042                           ; BSR set to: 0
  7043   001EE4  C065  F06B         	movff	___fldiv@new_exp,___fldiv@bexp
  7044   001EE8                     
  7045                           ; BSR set to: 0
  7046   001EE8  A16B               	btfss	___fldiv@bexp& (0+255),0,b
  7047   001EEA  EF79  F00F         	goto	u4981
  7048   001EEE  EF7B  F00F         	goto	u4980
  7049   001EF2                     u4981:
  7050   001EF2  EF7E  F00F         	goto	l4766
  7051   001EF6                     u4980:
  7052   001EF6                     
  7053                           ; BSR set to: 0
  7054   001EF6  8E1D               	bsf	(___fldiv@b+2)^0,7,c
  7055   001EF8  EF7F  F00F         	goto	l4768
  7056   001EFC                     l4766:
  7057                           
  7058                           ; BSR set to: 0
  7059   001EFC  9E1D               	bcf	(___fldiv@b+2)^0,7,c
  7060   001EFE                     l4768:
  7061                           
  7062                           ; BSR set to: 0
  7063   001EFE  90D8               	bcf	status,0,c
  7064   001F00  316B               	rrcf	___fldiv@bexp& (0+255),w,b
  7065   001F02  6E1E               	movwf	(___fldiv@b+3)^0,c
  7066   001F04  EF35  F00E         	goto	l4682
  7067   001F08                     l838:
  7068                           
  7069                           ; BSR set to: 0
  7070   001F08  0012               	return		;funcret
  7071   001F0A                     __end_of___fldiv:
  7072                           	callstack 0
  7073                           
  7074 ;; *************** function _atoi *****************
  7075 ;; Defined at:
  7076 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\atoi.c"
  7077 ;; Parameters:    Size  Location     Type
  7078 ;;  s               2   32[COMRAM] PTR const unsigned char 
  7079 ;;		 -> STR_3(5), STR_2(5), STR_1(5), 
  7080 ;; Auto vars:     Size  Location     Type
  7081 ;;  n               2   39[COMRAM] int 
  7082 ;;  neg             2   37[COMRAM] int 
  7083 ;; Return value:  Size  Location     Type
  7084 ;;                  2   32[COMRAM] int 
  7085 ;; Registers used:
  7086 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7087 ;; Tracked objects:
  7088 ;;		On entry : 0/0
  7089 ;;		On exit  : 0/0
  7090 ;;		Unchanged: 0/0
  7091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7092 ;;      Params:         2       0       0       0       0       0       0       0       0
  7093 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7094 ;;      Temps:          3       0       0       0       0       0       0       0       0
  7095 ;;      Totals:         9       0       0       0       0       0       0       0       0
  7096 ;;Total ram usage:        9 bytes
  7097 ;; Hardware stack levels used: 1
  7098 ;; Hardware stack levels required when called: 9
  7099 ;; This function calls:
  7100 ;;		___wmul
  7101 ;;		_isdigit
  7102 ;;		_isspace
  7103 ;; This function is called by:
  7104 ;;		_vfpfcnvrt
  7105 ;; This function uses a non-reentrant model
  7106 ;;
  7107                           
  7108                           	psect	text22
  7109   002818                     __ptext22:
  7110                           	callstack 0
  7111   002818                     _atoi:
  7112                           	callstack 18
  7113   002818  0E00               	movlw	0
  7114   00281A  6E29               	movwf	(atoi@n+1)^0,c
  7115   00281C  0E00               	movlw	0
  7116   00281E  6E28               	movwf	atoi@n^0,c
  7117   002820  0E00               	movlw	0
  7118   002822  6E27               	movwf	(atoi@neg+1)^0,c
  7119   002824  0E00               	movlw	0
  7120   002826  6E26               	movwf	atoi@neg^0,c
  7121   002828  EF18  F014         	goto	l5346
  7122   00282C                     l5342:
  7123   00282C  4A21               	infsnz	atoi@s^0,f,c
  7124   00282E  2A22               	incf	(atoi@s+1)^0,f,c
  7125   002830                     l5346:
  7126   002830  C021  FFF6         	movff	atoi@s,tblptrl
  7127   002834  C022  FFF7         	movff	atoi@s+1,tblptrh
  7128   002838                     	if	0	;tblptru may be non-zero
  7129   002838                     	endif
  7130   002838                     	if	0	;tblptru may be non-zero
  7131   002838                     	endif
  7132   002838  0008               	tblrd		*
  7133   00283A  50F5               	movf	tablat,w,c
  7134   00283C  0A20               	xorlw	32
  7135   00283E  B4D8               	btfsc	status,2,c
  7136   002840  EF24  F014         	goto	u5961
  7137   002844  EF26  F014         	goto	u5960
  7138   002848                     u5961:
  7139   002848  EF16  F014         	goto	l5342
  7140   00284C                     u5960:
  7141   00284C  C021  FFF6         	movff	atoi@s,tblptrl
  7142   002850  C022  FFF7         	movff	atoi@s+1,tblptrh
  7143   002854                     	if	0	;tblptru may be non-zero
  7144   002854                     	endif
  7145   002854                     	if	0	;tblptru may be non-zero
  7146   002854                     	endif
  7147   002854  0008               	tblrd		*
  7148   002856  CFF5 F023          	movff	tablat,??_atoi
  7149   00285A  0EF7               	movlw	247
  7150   00285C  2423               	addwf	??_atoi^0,w,c
  7151   00285E  6E24               	movwf	(??_atoi+1)^0,c
  7152   002860  6A25               	clrf	(??_atoi+2)^0,c
  7153   002862  0EFF               	movlw	255
  7154   002864  2225               	addwfc	(??_atoi+2)^0,f,c
  7155   002866  5025               	movf	(??_atoi+2)^0,w,c
  7156   002868  E109               	bnz	u5970
  7157   00286A  0E05               	movlw	5
  7158   00286C  5C24               	subwf	(??_atoi+1)^0,w,c
  7159   00286E  A0D8               	btfss	status,0,c
  7160   002870  EF3C  F014         	goto	u5971
  7161   002874  EF3E  F014         	goto	u5970
  7162   002878                     u5971:
  7163   002878  EF16  F014         	goto	l5342
  7164   00287C                     u5970:
  7165   00287C  EF48  F014         	goto	l5354
  7166   002880                     l5350:
  7167   002880  0E00               	movlw	0
  7168   002882  6E27               	movwf	(atoi@neg+1)^0,c
  7169   002884  0E01               	movlw	1
  7170   002886  6E26               	movwf	atoi@neg^0,c
  7171   002888                     l5352:
  7172   002888  4A21               	infsnz	atoi@s^0,f,c
  7173   00288A  2A22               	incf	(atoi@s+1)^0,f,c
  7174   00288C  EF7D  F014         	goto	l5362
  7175   002890                     l5354:
  7176   002890  C021  FFF6         	movff	atoi@s,tblptrl
  7177   002894  C022  FFF7         	movff	atoi@s+1,tblptrh
  7178   002898                     	if	0	;tblptru may be non-zero
  7179   002898                     	endif
  7180   002898                     	if	0	;tblptru may be non-zero
  7181   002898                     	endif
  7182   002898  0008               	tblrd		*
  7183   00289A  50F5               	movf	tablat,w,c
  7184   00289C  6E23               	movwf	??_atoi^0,c
  7185   00289E  6A24               	clrf	(??_atoi+1)^0,c
  7186                           
  7187                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7188                           ; Switch size 1, requested type "simple"
  7189                           ; Number of cases is 1, Range of values is 0 to 0
  7190                           ; switch strategies available:
  7191                           ; Name         Instructions Cycles
  7192                           ; simple_byte            4     3 (average)
  7193                           ;	Chosen strategy is simple_byte
  7194   0028A0  5024               	movf	(??_atoi+1)^0,w,c
  7195   0028A2  0A00               	xorlw	0	; case 0
  7196   0028A4  B4D8               	btfsc	status,2,c
  7197   0028A6  EF57  F014         	goto	l5852
  7198   0028AA  EF7D  F014         	goto	l5362
  7199   0028AE                     l5852:
  7200                           
  7201                           ; Switch size 1, requested type "simple"
  7202                           ; Number of cases is 2, Range of values is 43 to 45
  7203                           ; switch strategies available:
  7204                           ; Name         Instructions Cycles
  7205                           ; simple_byte            7     4 (average)
  7206                           ;	Chosen strategy is simple_byte
  7207   0028AE  5023               	movf	??_atoi^0,w,c
  7208   0028B0  0A2B               	xorlw	43	; case 43
  7209   0028B2  B4D8               	btfsc	status,2,c
  7210   0028B4  EF44  F014         	goto	l5352
  7211   0028B8  0A06               	xorlw	6	; case 45
  7212   0028BA  B4D8               	btfsc	status,2,c
  7213   0028BC  EF40  F014         	goto	l5350
  7214   0028C0  EF7D  F014         	goto	l5362
  7215   0028C4                     l5356:
  7216   0028C4  C028  F01B         	movff	atoi@n,___wmul@multiplier
  7217   0028C8  C029  F01C         	movff	atoi@n+1,___wmul@multiplier+1
  7218   0028CC  0E00               	movlw	0
  7219   0028CE  6E1E               	movwf	(___wmul@multiplicand+1)^0,c
  7220   0028D0  0E0A               	movlw	10
  7221   0028D2  6E1D               	movwf	___wmul@multiplicand^0,c
  7222   0028D4  EC81  F01B         	call	___wmul	;wreg free
  7223   0028D8  C021  FFF6         	movff	atoi@s,tblptrl
  7224   0028DC  C022  FFF7         	movff	atoi@s+1,tblptrh
  7225   0028E0                     	if	0	;tblptru may be non-zero
  7226   0028E0                     	endif
  7227   0028E0                     	if	0	;tblptru may be non-zero
  7228   0028E0                     	endif
  7229   0028E0  0008               	tblrd		*
  7230   0028E2  50F5               	movf	tablat,w,c
  7231   0028E4  5E1B               	subwf	?___wmul^0,f,c
  7232   0028E6  0E00               	movlw	0
  7233   0028E8  5A1C               	subwfb	(?___wmul+1)^0,f,c
  7234   0028EA  0E30               	movlw	48
  7235   0028EC  241B               	addwf	?___wmul^0,w,c
  7236   0028EE  6E28               	movwf	atoi@n^0,c
  7237   0028F0  0E00               	movlw	0
  7238   0028F2  201C               	addwfc	(?___wmul+1)^0,w,c
  7239   0028F4  6E29               	movwf	(atoi@n+1)^0,c
  7240   0028F6  EF44  F014         	goto	l5352
  7241   0028FA                     l5362:
  7242   0028FA  C021  FFF6         	movff	atoi@s,tblptrl
  7243   0028FE  C022  FFF7         	movff	atoi@s+1,tblptrh
  7244   002902                     	if	0	;tblptru may be non-zero
  7245   002902                     	endif
  7246   002902                     	if	0	;tblptru may be non-zero
  7247   002902                     	endif
  7248   002902  0008               	tblrd		*
  7249   002904  CFF5 F023          	movff	tablat,??_atoi
  7250   002908  0ED0               	movlw	208
  7251   00290A  2423               	addwf	??_atoi^0,w,c
  7252   00290C  6E24               	movwf	(??_atoi+1)^0,c
  7253   00290E  6A25               	clrf	(??_atoi+2)^0,c
  7254   002910  0EFF               	movlw	255
  7255   002912  2225               	addwfc	(??_atoi+2)^0,f,c
  7256   002914  5025               	movf	(??_atoi+2)^0,w,c
  7257   002916  E109               	bnz	u5980
  7258   002918  0E0A               	movlw	10
  7259   00291A  5C24               	subwf	(??_atoi+1)^0,w,c
  7260   00291C  A0D8               	btfss	status,0,c
  7261   00291E  EF93  F014         	goto	u5981
  7262   002922  EF95  F014         	goto	u5980
  7263   002926                     u5981:
  7264   002926  EF62  F014         	goto	l5356
  7265   00292A                     u5980:
  7266   00292A  5026               	movf	atoi@neg^0,w,c
  7267   00292C  1027               	iorwf	(atoi@neg+1)^0,w,c
  7268   00292E  A4D8               	btfss	status,2,c
  7269   002930  EF9C  F014         	goto	u5991
  7270   002934  EF9E  F014         	goto	u5990
  7271   002938                     u5991:
  7272   002938  EFAC  F014         	goto	l1091
  7273   00293C                     u5990:
  7274   00293C  C028  F023         	movff	atoi@n,??_atoi
  7275   002940  C029  F024         	movff	atoi@n+1,??_atoi+1
  7276   002944  1E23               	comf	??_atoi^0,f,c
  7277   002946  1E24               	comf	(??_atoi+1)^0,f,c
  7278   002948  4A23               	infsnz	??_atoi^0,f,c
  7279   00294A  2A24               	incf	(??_atoi+1)^0,f,c
  7280   00294C  C023  F021         	movff	??_atoi,?_atoi
  7281   002950  C024  F022         	movff	??_atoi+1,?_atoi+1
  7282   002954  EFB0  F014         	goto	l1094
  7283   002958                     l1091:
  7284   002958  C028  F021         	movff	atoi@n,?_atoi
  7285   00295C  C029  F022         	movff	atoi@n+1,?_atoi+1
  7286   002960                     l1094:
  7287   002960  0012               	return		;funcret
  7288   002962                     __end_of_atoi:
  7289                           	callstack 0
  7290                           
  7291 ;; *************** function _isspace *****************
  7292 ;; Defined at:
  7293 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isspace.c"
  7294 ;; Parameters:    Size  Location     Type
  7295 ;;  c               2   26[COMRAM] int 
  7296 ;; Auto vars:     Size  Location     Type
  7297 ;;		None
  7298 ;; Return value:  Size  Location     Type
  7299 ;;                  2   26[COMRAM] int 
  7300 ;; Registers used:
  7301 ;;		wreg, status,2, status,0
  7302 ;; Tracked objects:
  7303 ;;		On entry : 0/0
  7304 ;;		On exit  : 0/0
  7305 ;;		Unchanged: 0/0
  7306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7307 ;;      Params:         2       0       0       0       0       0       0       0       0
  7308 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7309 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7310 ;;      Totals:         5       0       0       0       0       0       0       0       0
  7311 ;;Total ram usage:        5 bytes
  7312 ;; Hardware stack levels used: 1
  7313 ;; Hardware stack levels required when called: 8
  7314 ;; This function calls:
  7315 ;;		Nothing
  7316 ;; This function is called by:
  7317 ;;		_atoi
  7318 ;; This function uses a non-reentrant model
  7319 ;;
  7320                           
  7321                           	psect	text23
  7322   0034B6                     __ptext23:
  7323                           	callstack 0
  7324   0034B6                     _isspace:
  7325                           	callstack 18
  7326   0034B6  0E01               	movlw	1
  7327   0034B8  6E1F               	movwf	_isspace$1855^0,c
  7328   0034BA  0E20               	movlw	32
  7329   0034BC  181B               	xorwf	isspace@c^0,w,c
  7330   0034BE  101C               	iorwf	(isspace@c+1)^0,w,c
  7331   0034C0  B4D8               	btfsc	status,2,c
  7332   0034C2  EF65  F01A         	goto	u5581
  7333   0034C6  EF67  F01A         	goto	u5580
  7334   0034CA                     u5581:
  7335   0034CA  EF7A  F01A         	goto	l5098
  7336   0034CE                     u5580:
  7337   0034CE  0EF7               	movlw	247
  7338   0034D0  241B               	addwf	isspace@c^0,w,c
  7339   0034D2  6E1D               	movwf	??_isspace^0,c
  7340   0034D4  0EFF               	movlw	255
  7341   0034D6  201C               	addwfc	(isspace@c+1)^0,w,c
  7342   0034D8  6E1E               	movwf	(??_isspace+1)^0,c
  7343   0034DA  501E               	movf	(??_isspace+1)^0,w,c
  7344   0034DC  E109               	bnz	u5590
  7345   0034DE  0E05               	movlw	5
  7346   0034E0  5C1D               	subwf	??_isspace^0,w,c
  7347   0034E2  A0D8               	btfss	status,0,c
  7348   0034E4  EF76  F01A         	goto	u5591
  7349   0034E8  EF78  F01A         	goto	u5590
  7350   0034EC                     u5591:
  7351   0034EC  EF7A  F01A         	goto	l5098
  7352   0034F0                     u5590:
  7353   0034F0  0E00               	movlw	0
  7354   0034F2  6E1F               	movwf	_isspace$1855^0,c
  7355   0034F4                     l5098:
  7356   0034F4  C01F  F01B         	movff	_isspace$1855,?_isspace
  7357   0034F8  6A1C               	clrf	(?_isspace+1)^0,c
  7358   0034FA  0012               	return		;funcret
  7359   0034FC                     __end_of_isspace:
  7360                           	callstack 0
  7361                           
  7362 ;; *************** function _isdigit *****************
  7363 ;; Defined at:
  7364 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isdigit.c"
  7365 ;; Parameters:    Size  Location     Type
  7366 ;;  c               2   26[COMRAM] int 
  7367 ;; Auto vars:     Size  Location     Type
  7368 ;;		None
  7369 ;; Return value:  Size  Location     Type
  7370 ;;                  2   26[COMRAM] int 
  7371 ;; Registers used:
  7372 ;;		wreg, status,2, status,0
  7373 ;; Tracked objects:
  7374 ;;		On entry : 0/0
  7375 ;;		On exit  : 0/0
  7376 ;;		Unchanged: 0/0
  7377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7378 ;;      Params:         2       0       0       0       0       0       0       0       0
  7379 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7380 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7381 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7382 ;;Total ram usage:        4 bytes
  7383 ;; Hardware stack levels used: 1
  7384 ;; Hardware stack levels required when called: 8
  7385 ;; This function calls:
  7386 ;;		Nothing
  7387 ;; This function is called by:
  7388 ;;		_vfpfcnvrt
  7389 ;;		_atoi
  7390 ;; This function uses a non-reentrant model
  7391 ;;
  7392                           
  7393                           	psect	text24
  7394   0036D6                     __ptext24:
  7395                           	callstack 0
  7396   0036D6                     _isdigit:
  7397                           	callstack 19
  7398   0036D6  0ED0               	movlw	208
  7399   0036D8  241B               	addwf	isdigit@c^0,w,c
  7400   0036DA  6E1D               	movwf	??_isdigit^0,c
  7401   0036DC  0EFF               	movlw	255
  7402   0036DE  201C               	addwfc	(isdigit@c+1)^0,w,c
  7403   0036E0  6E1E               	movwf	(??_isdigit+1)^0,c
  7404   0036E2  501E               	movf	(??_isdigit+1)^0,w,c
  7405   0036E4  E10A               	bnz	u5560
  7406   0036E6  0E0A               	movlw	10
  7407   0036E8  5C1D               	subwf	??_isdigit^0,w,c
  7408   0036EA  A0D8               	btfss	status,0,c
  7409   0036EC  EF7A  F01B         	goto	u5561
  7410   0036F0  EF7D  F01B         	goto	u5560
  7411   0036F4                     u5561:
  7412   0036F4  0E01               	movlw	1
  7413   0036F6  EF7E  F01B         	goto	u5570
  7414   0036FA                     u5560:
  7415   0036FA  0E00               	movlw	0
  7416   0036FC                     u5570:
  7417   0036FC  6E1B               	movwf	?_isdigit^0,c
  7418   0036FE  6A1C               	clrf	(?_isdigit+1)^0,c
  7419   003700  0012               	return		;funcret
  7420   003702                     __end_of_isdigit:
  7421                           	callstack 0
  7422                           
  7423 ;; *************** function ___wmul *****************
  7424 ;; Defined at:
  7425 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  7426 ;; Parameters:    Size  Location     Type
  7427 ;;  multiplier      2   26[COMRAM] unsigned int 
  7428 ;;  multiplicand    2   28[COMRAM] unsigned int 
  7429 ;; Auto vars:     Size  Location     Type
  7430 ;;  product         2   30[COMRAM] unsigned int 
  7431 ;; Return value:  Size  Location     Type
  7432 ;;                  2   26[COMRAM] unsigned int 
  7433 ;; Registers used:
  7434 ;;		wreg, status,2, status,0, prodl, prodh
  7435 ;; Tracked objects:
  7436 ;;		On entry : 0/0
  7437 ;;		On exit  : 0/0
  7438 ;;		Unchanged: 0/0
  7439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7440 ;;      Params:         4       0       0       0       0       0       0       0       0
  7441 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7442 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7443 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7444 ;;Total ram usage:        6 bytes
  7445 ;; Hardware stack levels used: 1
  7446 ;; Hardware stack levels required when called: 8
  7447 ;; This function calls:
  7448 ;;		Nothing
  7449 ;; This function is called by:
  7450 ;;		_atoi
  7451 ;; This function uses a non-reentrant model
  7452 ;;
  7453                           
  7454                           	psect	text25
  7455   003702                     __ptext25:
  7456                           	callstack 0
  7457   003702                     ___wmul:
  7458                           	callstack 18
  7459   003702  501B               	movf	___wmul@multiplier^0,w,c
  7460   003704  021D               	mulwf	___wmul@multiplicand^0,c
  7461   003706  CFF3 F01F          	movff	prodl,___wmul@product
  7462   00370A  CFF4 F020          	movff	prodh,___wmul@product+1
  7463   00370E  501B               	movf	___wmul@multiplier^0,w,c
  7464   003710  021E               	mulwf	(___wmul@multiplicand+1)^0,c
  7465   003712  50F3               	movf	243,w,c
  7466   003714  2620               	addwf	(___wmul@product+1)^0,f,c
  7467   003716  501C               	movf	(___wmul@multiplier+1)^0,w,c
  7468   003718  021D               	mulwf	___wmul@multiplicand^0,c
  7469   00371A  50F3               	movf	243,w,c
  7470   00371C  2620               	addwf	(___wmul@product+1)^0,f,c
  7471   00371E  C01F  F01B         	movff	___wmul@product,?___wmul
  7472   003722  C020  F01C         	movff	___wmul@product+1,?___wmul+1
  7473   003726  0012               	return		;funcret
  7474   003728                     __end_of___wmul:
  7475                           	callstack 0
  7476                           
  7477 ;; *************** function _config_port *****************
  7478 ;; Defined at:
  7479 ;;		line 171 in file "main.c"
  7480 ;; Parameters:    Size  Location     Type
  7481 ;;		None
  7482 ;; Auto vars:     Size  Location     Type
  7483 ;;		None
  7484 ;; Return value:  Size  Location     Type
  7485 ;;                  1    wreg      void 
  7486 ;; Registers used:
  7487 ;;		wreg, status,2
  7488 ;; Tracked objects:
  7489 ;;		On entry : 0/0
  7490 ;;		On exit  : 0/0
  7491 ;;		Unchanged: 0/0
  7492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7493 ;;      Params:         0       0       0       0       0       0       0       0       0
  7494 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7495 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7496 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7497 ;;Total ram usage:        0 bytes
  7498 ;; Hardware stack levels used: 1
  7499 ;; Hardware stack levels required when called: 8
  7500 ;; This function calls:
  7501 ;;		Nothing
  7502 ;; This function is called by:
  7503 ;;		_main
  7504 ;; This function uses a non-reentrant model
  7505 ;;
  7506                           
  7507                           	psect	text26
  7508   003728                     __ptext26:
  7509                           	callstack 0
  7510   003728                     _config_port:
  7511                           	callstack 22
  7512   003728                     
  7513                           ;main.c: 173:     LATCbits.LATC0=0;
  7514   003728  908B               	bcf	139,0,c	;volatile
  7515                           
  7516                           ;main.c: 174:     LATCbits.LATC1=0;
  7517   00372A  928B               	bcf	139,1,c	;volatile
  7518                           
  7519                           ;main.c: 175:     LATCbits.LATC2=0;
  7520   00372C  948B               	bcf	139,2,c	;volatile
  7521                           
  7522                           ;main.c: 177:     ANSELCbits.ANSC2=0;
  7523   00372E  010F               	movlb	15	; () banked
  7524   003730  955D               	bcf	93,2,b	;volatile
  7525                           
  7526                           ;main.c: 178:     ANSELAbits.ANSA0=1;
  7527   003732  815B               	bsf	91,0,b	;volatile
  7528                           
  7529                           ;main.c: 179:     ANSELAbits.ANSA1=1;
  7530   003734  835B               	bsf	91,1,b	;volatile
  7531                           
  7532                           ;main.c: 180:     ANSELAbits.ANSA2=1;
  7533   003736  855B               	bsf	91,2,b	;volatile
  7534   003738                     
  7535                           ; BSR set to: 15
  7536                           ;main.c: 181:     ANSELD=0X00;
  7537   003738  0E00               	movlw	0
  7538   00373A  6F5E               	movwf	94,b	;volatile
  7539   00373C                     
  7540                           ; BSR set to: 15
  7541                           ;main.c: 183:     TRISCbits.TRISC0=0;
  7542   00373C  9094               	bcf	148,0,c	;volatile
  7543   00373E                     
  7544                           ; BSR set to: 15
  7545                           ;main.c: 184:     TRISCbits.TRISC1=0;
  7546   00373E  9294               	bcf	148,1,c	;volatile
  7547   003740                     
  7548                           ; BSR set to: 15
  7549                           ;main.c: 185:     TRISCbits.TRISC2=0;
  7550   003740  9494               	bcf	148,2,c	;volatile
  7551   003742                     
  7552                           ; BSR set to: 15
  7553                           ;main.c: 187:     TRISAbits.TRISA0=1;
  7554   003742  8092               	bsf	146,0,c	;volatile
  7555   003744                     
  7556                           ; BSR set to: 15
  7557                           ;main.c: 188:     TRISAbits.TRISA1=1;
  7558   003744  8292               	bsf	146,1,c	;volatile
  7559   003746                     
  7560                           ; BSR set to: 15
  7561                           ;main.c: 189:     TRISAbits.TRISA1=1;
  7562   003746  8292               	bsf	146,1,c	;volatile
  7563                           
  7564                           ;main.c: 191:     TRISD=0X00;
  7565   003748  0E00               	movlw	0
  7566   00374A  6E95               	movwf	149,c	;volatile
  7567   00374C                     
  7568                           ; BSR set to: 15
  7569   00374C  0012               	return		;funcret
  7570   00374E                     __end_of_config_port:
  7571                           	callstack 0
  7572                           
  7573 ;; *************** function _config_interrup_usart_timer0 *****************
  7574 ;; Defined at:
  7575 ;;		line 128 in file "main.c"
  7576 ;; Parameters:    Size  Location     Type
  7577 ;;		None
  7578 ;; Auto vars:     Size  Location     Type
  7579 ;;		None
  7580 ;; Return value:  Size  Location     Type
  7581 ;;                  1    wreg      void 
  7582 ;; Registers used:
  7583 ;;		None
  7584 ;; Tracked objects:
  7585 ;;		On entry : 0/0
  7586 ;;		On exit  : 0/0
  7587 ;;		Unchanged: 0/0
  7588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7589 ;;      Params:         0       0       0       0       0       0       0       0       0
  7590 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7591 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7592 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7593 ;;Total ram usage:        0 bytes
  7594 ;; Hardware stack levels used: 1
  7595 ;; Hardware stack levels required when called: 8
  7596 ;; This function calls:
  7597 ;;		Nothing
  7598 ;; This function is called by:
  7599 ;;		_main
  7600 ;; This function uses a non-reentrant model
  7601 ;;
  7602                           
  7603                           	psect	text27
  7604   0037F4                     __ptext27:
  7605                           	callstack 0
  7606   0037F4                     _config_interrup_usart_timer0:
  7607                           	callstack 22
  7608   0037F4                     
  7609                           ;main.c: 130:     RCONbits.IPEN=1;
  7610   0037F4  8ED0               	bsf	208,7,c	;volatile
  7611                           
  7612                           ;main.c: 132:     INTCONbits.GIEH=1;
  7613   0037F6  8EF2               	bsf	242,7,c	;volatile
  7614                           
  7615                           ;main.c: 133:     INTCONbits.GIEL=1;
  7616   0037F8  8CF2               	bsf	242,6,c	;volatile
  7617                           
  7618                           ;main.c: 135:     INTCON2bits.TMR0IP=1;
  7619   0037FA  84F1               	bsf	241,2,c	;volatile
  7620                           
  7621                           ;main.c: 136:     IPR1bits.RCIP=0;
  7622   0037FC  9A9F               	bcf	159,5,c	;volatile
  7623                           
  7624                           ;main.c: 138:     PIE1bits.RC1IE=1;
  7625   0037FE  8A9D               	bsf	157,5,c	;volatile
  7626                           
  7627                           ;main.c: 139:     PIR1bits.RCIF=0;
  7628   003800  9A9E               	bcf	158,5,c	;volatile
  7629                           
  7630                           ;main.c: 140:     INTCONbits.TMR0IE=1;
  7631   003802  8AF2               	bsf	242,5,c	;volatile
  7632                           
  7633                           ;main.c: 141:     INTCONbits.TMR0IF=0;
  7634   003804  94F2               	bcf	242,2,c	;volatile
  7635   003806  0012               	return		;funcret
  7636   003808                     __end_of_config_interrup_usart_timer0:
  7637                           	callstack 0
  7638                           
  7639 ;; *************** function _config_clock *****************
  7640 ;; Defined at:
  7641 ;;		line 193 in file "main.c"
  7642 ;; Parameters:    Size  Location     Type
  7643 ;;		None
  7644 ;; Auto vars:     Size  Location     Type
  7645 ;;		None
  7646 ;; Return value:  Size  Location     Type
  7647 ;;                  1    wreg      void 
  7648 ;; Registers used:
  7649 ;;		wreg, status,2
  7650 ;; Tracked objects:
  7651 ;;		On entry : 0/0
  7652 ;;		On exit  : 0/0
  7653 ;;		Unchanged: 0/0
  7654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7655 ;;      Params:         0       0       0       0       0       0       0       0       0
  7656 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7657 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7658 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7659 ;;Total ram usage:        0 bytes
  7660 ;; Hardware stack levels used: 1
  7661 ;; Hardware stack levels required when called: 8
  7662 ;; This function calls:
  7663 ;;		Nothing
  7664 ;; This function is called by:
  7665 ;;		_main
  7666 ;; This function uses a non-reentrant model
  7667 ;;
  7668                           
  7669                           	psect	text28
  7670   003808                     __ptext28:
  7671                           	callstack 0
  7672   003808                     _config_clock:
  7673                           	callstack 22
  7674   003808                     
  7675                           ;main.c: 194:     OSCCONbits.IRCF=0b111;
  7676   003808  0E70               	movlw	112
  7677   00380A  12D3               	iorwf	211,f,c	;volatile
  7678                           
  7679                           ;main.c: 195:     OSCCONbits.SCS=0b10;
  7680   00380C  50D3               	movf	211,w,c	;volatile
  7681   00380E  0BFC               	andlw	-4
  7682   003810  0902               	iorlw	2
  7683   003812  6ED3               	movwf	211,c	;volatile
  7684   003814  0012               	return		;funcret
  7685   003816                     __end_of_config_clock:
  7686                           	callstack 0
  7687                           
  7688 ;; *************** function _config_TMR0_16bits_Temporizador *****************
  7689 ;; Defined at:
  7690 ;;		line 161 in file "main.c"
  7691 ;; Parameters:    Size  Location     Type
  7692 ;;		None
  7693 ;; Auto vars:     Size  Location     Type
  7694 ;;		None
  7695 ;; Return value:  Size  Location     Type
  7696 ;;                  1    wreg      void 
  7697 ;; Registers used:
  7698 ;;		wreg, status,2
  7699 ;; Tracked objects:
  7700 ;;		On entry : 0/0
  7701 ;;		On exit  : 0/0
  7702 ;;		Unchanged: 0/0
  7703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7704 ;;      Params:         0       0       0       0       0       0       0       0       0
  7705 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7706 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7707 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7708 ;;Total ram usage:        0 bytes
  7709 ;; Hardware stack levels used: 1
  7710 ;; Hardware stack levels required when called: 8
  7711 ;; This function calls:
  7712 ;;		Nothing
  7713 ;; This function is called by:
  7714 ;;		_main
  7715 ;; This function uses a non-reentrant model
  7716 ;;
  7717                           
  7718                           	psect	text29
  7719   0037AC                     __ptext29:
  7720                           	callstack 0
  7721   0037AC                     _config_TMR0_16bits_Temporizador:
  7722                           	callstack 22
  7723   0037AC                     
  7724                           ;main.c: 162:     T0CONbits.TMR0ON=0;
  7725   0037AC  9ED5               	bcf	213,7,c	;volatile
  7726                           
  7727                           ;main.c: 163:     T0CONbits.T08BIT=0;
  7728   0037AE  9CD5               	bcf	213,6,c	;volatile
  7729                           
  7730                           ;main.c: 164:     T0CONbits.T0CS=0;
  7731   0037B0  9AD5               	bcf	213,5,c	;volatile
  7732                           
  7733                           ;main.c: 165:     T0CONbits.PSA=0;
  7734   0037B2  96D5               	bcf	213,3,c	;volatile
  7735   0037B4                     
  7736                           ;main.c: 166:     T0CONbits.T0PS=0b100;
  7737   0037B4  50D5               	movf	213,w,c	;volatile
  7738   0037B6  0BF8               	andlw	-8
  7739   0037B8  0904               	iorlw	4
  7740   0037BA  6ED5               	movwf	213,c	;volatile
  7741                           
  7742                           ;main.c: 167:     TMR0H=0x85;
  7743   0037BC  0E85               	movlw	133
  7744   0037BE  6ED7               	movwf	215,c	;volatile
  7745                           
  7746                           ;main.c: 168:     TMR0L=0xEE;
  7747   0037C0  0EEE               	movlw	238
  7748   0037C2  6ED6               	movwf	214,c	;volatile
  7749   0037C4                     
  7750                           ;main.c: 169:     T0CONbits.TMR0ON=1;
  7751   0037C4  8ED5               	bsf	213,7,c	;volatile
  7752   0037C6  0012               	return		;funcret
  7753   0037C8                     __end_of_config_TMR0_16bits_Temporizador:
  7754                           	callstack 0
  7755                           
  7756 ;; *************** function ___xxtofl *****************
  7757 ;; Defined at:
  7758 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  7759 ;; Parameters:    Size  Location     Type
  7760 ;;  sign            1    wreg     unsigned char 
  7761 ;;  val             4   31[COMRAM] long 
  7762 ;; Auto vars:     Size  Location     Type
  7763 ;;  sign            1    0[BANK0 ] unsigned char 
  7764 ;;  arg             4    2[BANK0 ] unsigned long 
  7765 ;;  exp             1    1[BANK0 ] unsigned char 
  7766 ;; Return value:  Size  Location     Type
  7767 ;;                  4   31[COMRAM] unsigned char 
  7768 ;; Registers used:
  7769 ;;		wreg, status,2, status,0
  7770 ;; Tracked objects:
  7771 ;;		On entry : 0/0
  7772 ;;		On exit  : 0/0
  7773 ;;		Unchanged: 0/0
  7774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7775 ;;      Params:         4       0       0       0       0       0       0       0       0
  7776 ;;      Locals:         0       6       0       0       0       0       0       0       0
  7777 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7778 ;;      Totals:         8       6       0       0       0       0       0       0       0
  7779 ;;Total ram usage:       14 bytes
  7780 ;; Hardware stack levels used: 1
  7781 ;; Hardware stack levels required when called: 8
  7782 ;; This function calls:
  7783 ;;		Nothing
  7784 ;; This function is called by:
  7785 ;;		_main
  7786 ;; This function uses a non-reentrant model
  7787 ;;
  7788                           
  7789                           	psect	text30
  7790   002660                     __ptext30:
  7791                           	callstack 0
  7792   002660                     ___xxtofl:
  7793                           	callstack 22
  7794                           
  7795                           ;incstack = 0
  7796                           ;___xxtofl@sign stored from wreg
  7797   002660  0100               	movlb	0	; () banked
  7798   002662  6F60               	movwf	___xxtofl@sign& (0+255),b
  7799   002664  0100               	movlb	0	; () banked
  7800   002666  5160               	movf	___xxtofl@sign& (0+255),w,b
  7801   002668  B4D8               	btfsc	status,2,c
  7802   00266A  EF39  F013         	goto	u6141
  7803   00266E  EF3B  F013         	goto	u6140
  7804   002672                     u6141:
  7805   002672  EF5D  F013         	goto	l911
  7806   002676                     u6140:
  7807   002676                     
  7808                           ; BSR set to: 0
  7809   002676  BE23               	btfsc	(___xxtofl@val+3)^0,7,c
  7810   002678  EF42  F013         	goto	u6150
  7811   00267C  EF40  F013         	goto	u6151
  7812   002680                     u6151:
  7813   002680  EF5D  F013         	goto	l911
  7814   002684                     u6150:
  7815   002684                     
  7816                           ; BSR set to: 0
  7817   002684  C020  F024         	movff	___xxtofl@val,??___xxtofl
  7818   002688  C021  F025         	movff	___xxtofl@val+1,??___xxtofl+1
  7819   00268C  C022  F026         	movff	___xxtofl@val+2,??___xxtofl+2
  7820   002690  C023  F027         	movff	___xxtofl@val+3,??___xxtofl+3
  7821   002694  1E24               	comf	??___xxtofl^0,f,c
  7822   002696  1E25               	comf	(??___xxtofl+1)^0,f,c
  7823   002698  1E26               	comf	(??___xxtofl+2)^0,f,c
  7824   00269A  1E27               	comf	(??___xxtofl+3)^0,f,c
  7825   00269C  2A24               	incf	??___xxtofl^0,f,c
  7826   00269E  0E00               	movlw	0
  7827   0026A0  2225               	addwfc	(??___xxtofl+1)^0,f,c
  7828   0026A2  2226               	addwfc	(??___xxtofl+2)^0,f,c
  7829   0026A4  2227               	addwfc	(??___xxtofl+3)^0,f,c
  7830   0026A6  C024  F062         	movff	??___xxtofl,___xxtofl@arg
  7831   0026AA  C025  F063         	movff	??___xxtofl+1,___xxtofl@arg+1
  7832   0026AE  C026  F064         	movff	??___xxtofl+2,___xxtofl@arg+2
  7833   0026B2  C027  F065         	movff	??___xxtofl+3,___xxtofl@arg+3
  7834   0026B6  EF65  F013         	goto	l5660
  7835   0026BA                     l911:
  7836                           
  7837                           ; BSR set to: 0
  7838   0026BA  C020  F062         	movff	___xxtofl@val,___xxtofl@arg
  7839   0026BE  C021  F063         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7840   0026C2  C022  F064         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7841   0026C6  C023  F065         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7842   0026CA                     l5660:
  7843                           
  7844                           ; BSR set to: 0
  7845   0026CA  5020               	movf	___xxtofl@val^0,w,c
  7846   0026CC  1021               	iorwf	(___xxtofl@val+1)^0,w,c
  7847   0026CE  1022               	iorwf	(___xxtofl@val+2)^0,w,c
  7848   0026D0  1023               	iorwf	(___xxtofl@val+3)^0,w,c
  7849   0026D2  A4D8               	btfss	status,2,c
  7850   0026D4  EF6E  F013         	goto	u6161
  7851   0026D8  EF70  F013         	goto	u6160
  7852   0026DC                     u6161:
  7853   0026DC  EF7A  F013         	goto	l5666
  7854   0026E0                     u6160:
  7855   0026E0                     
  7856                           ; BSR set to: 0
  7857   0026E0  0E00               	movlw	0
  7858   0026E2  6E20               	movwf	?___xxtofl^0,c
  7859   0026E4  0E00               	movlw	0
  7860   0026E6  6E21               	movwf	(?___xxtofl+1)^0,c
  7861   0026E8  0E00               	movlw	0
  7862   0026EA  6E22               	movwf	(?___xxtofl+2)^0,c
  7863   0026EC  0E00               	movlw	0
  7864   0026EE  6E23               	movwf	(?___xxtofl+3)^0,c
  7865   0026F0  EF0B  F014         	goto	l914
  7866   0026F4                     l5666:
  7867                           
  7868                           ; BSR set to: 0
  7869   0026F4  0E96               	movlw	150
  7870   0026F6  6F61               	movwf	___xxtofl@exp& (0+255),b
  7871   0026F8  EF84  F013         	goto	l5670
  7872   0026FC                     l5668:
  7873                           
  7874                           ; BSR set to: 0
  7875   0026FC  2B61               	incf	___xxtofl@exp& (0+255),f,b
  7876   0026FE  90D8               	bcf	status,0,c
  7877   002700  3365               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  7878   002702  3364               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  7879   002704  3363               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  7880   002706  3362               	rrcf	___xxtofl@arg& (0+255),f,b
  7881   002708                     l5670:
  7882                           
  7883                           ; BSR set to: 0
  7884   002708  0E00               	movlw	0
  7885   00270A  1562               	andwf	___xxtofl@arg& (0+255),w,b
  7886   00270C  6E24               	movwf	??___xxtofl^0,c
  7887   00270E  0E00               	movlw	0
  7888   002710  1563               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  7889   002712  6E25               	movwf	(??___xxtofl+1)^0,c
  7890   002714  0E00               	movlw	0
  7891   002716  1564               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  7892   002718  6E26               	movwf	(??___xxtofl+2)^0,c
  7893   00271A  0EFE               	movlw	254
  7894   00271C  1565               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  7895   00271E  6E27               	movwf	(??___xxtofl+3)^0,c
  7896   002720  5024               	movf	??___xxtofl^0,w,c
  7897   002722  1025               	iorwf	(??___xxtofl+1)^0,w,c
  7898   002724  1026               	iorwf	(??___xxtofl+2)^0,w,c
  7899   002726  1027               	iorwf	(??___xxtofl+3)^0,w,c
  7900   002728  A4D8               	btfss	status,2,c
  7901   00272A  EF99  F013         	goto	u6171
  7902   00272E  EF9B  F013         	goto	u6170
  7903   002732                     u6171:
  7904   002732  EF7E  F013         	goto	l5668
  7905   002736                     u6170:
  7906   002736  EFA9  F013         	goto	l918
  7907   00273A                     l5672:
  7908                           
  7909                           ; BSR set to: 0
  7910   00273A  2B61               	incf	___xxtofl@exp& (0+255),f,b
  7911   00273C                     
  7912                           ; BSR set to: 0
  7913   00273C  0E01               	movlw	1
  7914   00273E  2762               	addwf	___xxtofl@arg& (0+255),f,b
  7915   002740  0E00               	movlw	0
  7916   002742  2363               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  7917   002744  2364               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  7918   002746  2365               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  7919   002748                     
  7920                           ; BSR set to: 0
  7921   002748  90D8               	bcf	status,0,c
  7922   00274A  3365               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  7923   00274C  3364               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  7924   00274E  3363               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  7925   002750  3362               	rrcf	___xxtofl@arg& (0+255),f,b
  7926   002752                     l918:
  7927                           
  7928                           ; BSR set to: 0
  7929   002752  0E00               	movlw	0
  7930   002754  1562               	andwf	___xxtofl@arg& (0+255),w,b
  7931   002756  6E24               	movwf	??___xxtofl^0,c
  7932   002758  0E00               	movlw	0
  7933   00275A  1563               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  7934   00275C  6E25               	movwf	(??___xxtofl+1)^0,c
  7935   00275E  0E00               	movlw	0
  7936   002760  1564               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  7937   002762  6E26               	movwf	(??___xxtofl+2)^0,c
  7938   002764  0EFF               	movlw	255
  7939   002766  1565               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  7940   002768  6E27               	movwf	(??___xxtofl+3)^0,c
  7941   00276A  5024               	movf	??___xxtofl^0,w,c
  7942   00276C  1025               	iorwf	(??___xxtofl+1)^0,w,c
  7943   00276E  1026               	iorwf	(??___xxtofl+2)^0,w,c
  7944   002770  1027               	iorwf	(??___xxtofl+3)^0,w,c
  7945   002772  A4D8               	btfss	status,2,c
  7946   002774  EFBE  F013         	goto	u6181
  7947   002778  EFC0  F013         	goto	u6180
  7948   00277C                     u6181:
  7949   00277C  EF9D  F013         	goto	l5672
  7950   002780                     u6180:
  7951   002780  EFC8  F013         	goto	l5680
  7952   002784                     l5678:
  7953                           
  7954                           ; BSR set to: 0
  7955   002784  0761               	decf	___xxtofl@exp& (0+255),f,b
  7956   002786  90D8               	bcf	status,0,c
  7957   002788  3762               	rlcf	___xxtofl@arg& (0+255),f,b
  7958   00278A  3763               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  7959   00278C  3764               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  7960   00278E  3765               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  7961   002790                     l5680:
  7962                           
  7963                           ; BSR set to: 0
  7964   002790  BF64               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  7965   002792  EFCD  F013         	goto	u6191
  7966   002796  EFCF  F013         	goto	u6190
  7967   00279A                     u6191:
  7968   00279A  EFD7  F013         	goto	l925
  7969   00279E                     u6190:
  7970   00279E                     
  7971                           ; BSR set to: 0
  7972   00279E  0E02               	movlw	2
  7973   0027A0  6161               	cpfslt	___xxtofl@exp& (0+255),b
  7974   0027A2  EFD5  F013         	goto	u6201
  7975   0027A6  EFD7  F013         	goto	u6200
  7976   0027AA                     u6201:
  7977   0027AA  EFC2  F013         	goto	l5678
  7978   0027AE                     u6200:
  7979   0027AE                     l925:
  7980                           
  7981                           ; BSR set to: 0
  7982   0027AE  B161               	btfsc	___xxtofl@exp& (0+255),0,b
  7983   0027B0  EFDC  F013         	goto	u6211
  7984   0027B4  EFDE  F013         	goto	u6210
  7985   0027B8                     u6211:
  7986   0027B8  EFDF  F013         	goto	l5686
  7987   0027BC                     u6210:
  7988   0027BC                     
  7989                           ; BSR set to: 0
  7990   0027BC  9F64               	bcf	(___xxtofl@arg+2)& (0+255),7,b
  7991   0027BE                     l5686:
  7992                           
  7993                           ; BSR set to: 0
  7994   0027BE  90D8               	bcf	status,0,c
  7995   0027C0  3361               	rrcf	___xxtofl@exp& (0+255),f,b
  7996   0027C2                     
  7997                           ; BSR set to: 0
  7998   0027C2  C061  F024         	movff	___xxtofl@exp,??___xxtofl
  7999   0027C6  6A25               	clrf	(??___xxtofl+1)^0,c
  8000   0027C8  6A26               	clrf	(??___xxtofl+2)^0,c
  8001   0027CA  6A27               	clrf	(??___xxtofl+3)^0,c
  8002   0027CC  C024  F027         	movff	??___xxtofl,??___xxtofl+3
  8003   0027D0  6A26               	clrf	(??___xxtofl+2)^0,c
  8004   0027D2  6A25               	clrf	(??___xxtofl+1)^0,c
  8005   0027D4  6A24               	clrf	??___xxtofl^0,c
  8006   0027D6  5024               	movf	??___xxtofl^0,w,c
  8007   0027D8  1362               	iorwf	___xxtofl@arg& (0+255),f,b
  8008   0027DA  5025               	movf	(??___xxtofl+1)^0,w,c
  8009   0027DC  1363               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  8010   0027DE  5026               	movf	(??___xxtofl+2)^0,w,c
  8011   0027E0  1364               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  8012   0027E2  5027               	movf	(??___xxtofl+3)^0,w,c
  8013   0027E4  1365               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  8014   0027E6                     
  8015                           ; BSR set to: 0
  8016   0027E6  5160               	movf	___xxtofl@sign& (0+255),w,b
  8017   0027E8  B4D8               	btfsc	status,2,c
  8018   0027EA  EFF9  F013         	goto	u6221
  8019   0027EE  EFFB  F013         	goto	u6220
  8020   0027F2                     u6221:
  8021   0027F2  EF03  F014         	goto	l5696
  8022   0027F6                     u6220:
  8023   0027F6                     
  8024                           ; BSR set to: 0
  8025   0027F6  BE23               	btfsc	(___xxtofl@val+3)^0,7,c
  8026   0027F8  EF02  F014         	goto	u6230
  8027   0027FC  EF00  F014         	goto	u6231
  8028   002800                     u6231:
  8029   002800  EF03  F014         	goto	l5696
  8030   002804                     u6230:
  8031   002804                     
  8032                           ; BSR set to: 0
  8033   002804  8F65               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  8034   002806                     l5696:
  8035                           
  8036                           ; BSR set to: 0
  8037   002806  C062  F020         	movff	___xxtofl@arg,?___xxtofl
  8038   00280A  C063  F021         	movff	___xxtofl@arg+1,?___xxtofl+1
  8039   00280E  C064  F022         	movff	___xxtofl@arg+2,?___xxtofl+2
  8040   002812  C065  F023         	movff	___xxtofl@arg+3,?___xxtofl+3
  8041   002816                     l914:
  8042                           
  8043                           ; BSR set to: 0
  8044   002816  0012               	return		;funcret
  8045   002818                     __end_of___xxtofl:
  8046                           	callstack 0
  8047                           
  8048 ;; *************** function _USART_init *****************
  8049 ;; Defined at:
  8050 ;;		line 3 in file "../../00_USART_Ejm1/UART.X/USART.c"
  8051 ;; Parameters:    Size  Location     Type
  8052 ;;  baudios         4   39[COMRAM] unsigned long 
  8053 ;; Auto vars:     Size  Location     Type
  8054 ;;  n               2    0[BANK0 ] unsigned short 
  8055 ;; Return value:  Size  Location     Type
  8056 ;;                  1    wreg      void 
  8057 ;; Registers used:
  8058 ;;		wreg, status,2, status,0, cstack
  8059 ;; Tracked objects:
  8060 ;;		On entry : 0/0
  8061 ;;		On exit  : 0/0
  8062 ;;		Unchanged: 0/0
  8063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8064 ;;      Params:         4       0       0       0       0       0       0       0       0
  8065 ;;      Locals:         0       2       0       0       0       0       0       0       0
  8066 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8067 ;;      Totals:         4       2       0       0       0       0       0       0       0
  8068 ;;Total ram usage:        6 bytes
  8069 ;; Hardware stack levels used: 1
  8070 ;; Hardware stack levels required when called: 9
  8071 ;; This function calls:
  8072 ;;		___lldiv
  8073 ;; This function is called by:
  8074 ;;		_main
  8075 ;; This function uses a non-reentrant model
  8076 ;;
  8077                           
  8078                           	psect	text31
  8079   002F76                     __ptext31:
  8080                           	callstack 0
  8081   002F76                     _USART_init:
  8082                           	callstack 21
  8083   002F76                     
  8084                           ;../../00_USART_Ejm1/UART.X/USART.c: 7:     ANSELCbits.ANSC6=0;
  8085   002F76  010F               	movlb	15	; () banked
  8086   002F78  9D5D               	bcf	93,6,b	;volatile
  8087   002F7A                     
  8088                           ; BSR set to: 15
  8089                           ;../../00_USART_Ejm1/UART.X/USART.c: 8:     ANSELCbits.ANSC7=0;
  8090   002F7A  9F5D               	bcf	93,7,b	;volatile
  8091   002F7C                     
  8092                           ; BSR set to: 15
  8093                           ;../../00_USART_Ejm1/UART.X/USART.c: 9:     TRISCbits.TRISC6=0;
  8094   002F7C  9C94               	bcf	148,6,c	;volatile
  8095   002F7E                     
  8096                           ; BSR set to: 15
  8097                           ;../../00_USART_Ejm1/UART.X/USART.c: 10:     TRISCbits.TRISC7=1;
  8098   002F7E  8E94               	bsf	148,7,c	;volatile
  8099                           
  8100                           ;../../00_USART_Ejm1/UART.X/USART.c: 12:     TXSTA=0B00100100;
  8101   002F80  0E24               	movlw	36
  8102   002F82  6EAC               	movwf	172,c	;volatile
  8103                           
  8104                           ;../../00_USART_Ejm1/UART.X/USART.c: 13:     RCSTA=0B10010000;
  8105   002F84  0E90               	movlw	144
  8106   002F86  6EAB               	movwf	171,c	;volatile
  8107                           
  8108                           ;../../00_USART_Ejm1/UART.X/USART.c: 14:     BAUDCON=0B00001000;
  8109   002F88  0E08               	movlw	8
  8110   002F8A  6EB8               	movwf	184,c	;volatile
  8111   002F8C                     
  8112                           ; BSR set to: 15
  8113                           ;../../00_USART_Ejm1/UART.X/USART.c: 16:     n=(uint16_t)(((16000000/baudios)/4)-1);
  8114   002F8C  0E00               	movlw	0
  8115   002F8E  6E1B               	movwf	___lldiv@dividend^0,c
  8116   002F90  0E24               	movlw	36
  8117   002F92  6E1C               	movwf	(___lldiv@dividend+1)^0,c
  8118   002F94  0EF4               	movlw	244
  8119   002F96  6E1D               	movwf	(___lldiv@dividend+2)^0,c
  8120   002F98  0E00               	movlw	0
  8121   002F9A  6E1E               	movwf	(___lldiv@dividend+3)^0,c
  8122   002F9C  C028  F01F         	movff	USART_init@baudios,___lldiv@divisor
  8123   002FA0  C029  F020         	movff	USART_init@baudios+1,___lldiv@divisor+1
  8124   002FA4  C02A  F021         	movff	USART_init@baudios+2,___lldiv@divisor+2
  8125   002FA8  C02B  F022         	movff	USART_init@baudios+3,___lldiv@divisor+3
  8126   002FAC  ECF0  F016         	call	___lldiv	;wreg free
  8127   002FB0  0E03               	movlw	3
  8128   002FB2  EFE0  F017         	goto	u6120
  8129   002FB6                     u6125:
  8130   002FB6  90D8               	bcf	status,0,c
  8131   002FB8  321E               	rrcf	(?___lldiv+3)^0,f,c
  8132   002FBA  321D               	rrcf	(?___lldiv+2)^0,f,c
  8133   002FBC  321C               	rrcf	(?___lldiv+1)^0,f,c
  8134   002FBE  321B               	rrcf	?___lldiv^0,f,c
  8135   002FC0                     u6120:
  8136   002FC0  2EE8               	decfsz	wreg,f,c
  8137   002FC2  EFDB  F017         	goto	u6125
  8138   002FC6  0EFF               	movlw	255
  8139   002FC8  241B               	addwf	?___lldiv^0,w,c
  8140   002FCA  0100               	movlb	0	; () banked
  8141   002FCC  6F60               	movwf	USART_init@n& (0+255),b
  8142   002FCE  0EFF               	movlw	255
  8143   002FD0  201C               	addwfc	(?___lldiv+1)^0,w,c
  8144   002FD2  6F61               	movwf	(USART_init@n+1)& (0+255),b
  8145   002FD4                     
  8146                           ; BSR set to: 0
  8147                           ;../../00_USART_Ejm1/UART.X/USART.c: 18:     SPBRG=(uint8_t)n;
  8148   002FD4  C060  FFAF         	movff	USART_init@n,4015	;volatile
  8149   002FD8                     
  8150                           ; BSR set to: 0
  8151                           ;../../00_USART_Ejm1/UART.X/USART.c: 19:     SPBRGH=(uint8_t)(n>>8);
  8152   002FD8  5161               	movf	(USART_init@n+1)& (0+255),w,b
  8153   002FDA  6EB0               	movwf	176,c	;volatile
  8154   002FDC                     
  8155                           ; BSR set to: 0
  8156   002FDC  0012               	return		;funcret
  8157   002FDE                     __end_of_USART_init:
  8158                           	callstack 0
  8159                           
  8160 ;; *************** function ___lldiv *****************
  8161 ;; Defined at:
  8162 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__lldiv.c"
  8163 ;; Parameters:    Size  Location     Type
  8164 ;;  dividend        4   26[COMRAM] unsigned long 
  8165 ;;  divisor         4   30[COMRAM] unsigned long 
  8166 ;; Auto vars:     Size  Location     Type
  8167 ;;  quotient        4   34[COMRAM] unsigned long 
  8168 ;;  counter         1   38[COMRAM] unsigned char 
  8169 ;; Return value:  Size  Location     Type
  8170 ;;                  4   26[COMRAM] unsigned long 
  8171 ;; Registers used:
  8172 ;;		wreg, status,2, status,0
  8173 ;; Tracked objects:
  8174 ;;		On entry : 0/0
  8175 ;;		On exit  : 0/0
  8176 ;;		Unchanged: 0/0
  8177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8178 ;;      Params:         8       0       0       0       0       0       0       0       0
  8179 ;;      Locals:         5       0       0       0       0       0       0       0       0
  8180 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8181 ;;      Totals:        13       0       0       0       0       0       0       0       0
  8182 ;;Total ram usage:       13 bytes
  8183 ;; Hardware stack levels used: 1
  8184 ;; Hardware stack levels required when called: 8
  8185 ;; This function calls:
  8186 ;;		Nothing
  8187 ;; This function is called by:
  8188 ;;		_USART_init
  8189 ;; This function uses a non-reentrant model
  8190 ;;
  8191                           
  8192                           	psect	text32
  8193   002DE0                     __ptext32:
  8194                           	callstack 0
  8195   002DE0                     ___lldiv:
  8196                           	callstack 21
  8197   002DE0  0E00               	movlw	0
  8198   002DE2  6E23               	movwf	___lldiv@quotient^0,c
  8199   002DE4  0E00               	movlw	0
  8200   002DE6  6E24               	movwf	(___lldiv@quotient+1)^0,c
  8201   002DE8  0E00               	movlw	0
  8202   002DEA  6E25               	movwf	(___lldiv@quotient+2)^0,c
  8203   002DEC  0E00               	movlw	0
  8204   002DEE  6E26               	movwf	(___lldiv@quotient+3)^0,c
  8205   002DF0  501F               	movf	___lldiv@divisor^0,w,c
  8206   002DF2  1020               	iorwf	(___lldiv@divisor+1)^0,w,c
  8207   002DF4  1021               	iorwf	(___lldiv@divisor+2)^0,w,c
  8208   002DF6  1022               	iorwf	(___lldiv@divisor+3)^0,w,c
  8209   002DF8  B4D8               	btfsc	status,2,c
  8210   002DFA  EF01  F017         	goto	u6081
  8211   002DFE  EF03  F017         	goto	u6080
  8212   002E02                     u6081:
  8213   002E02  EF39  F017         	goto	l283
  8214   002E06                     u6080:
  8215   002E06  0E01               	movlw	1
  8216   002E08  6E27               	movwf	___lldiv@counter^0,c
  8217   002E0A  EF0D  F017         	goto	l5522
  8218   002E0E                     l5520:
  8219   002E0E  90D8               	bcf	status,0,c
  8220   002E10  361F               	rlcf	___lldiv@divisor^0,f,c
  8221   002E12  3620               	rlcf	(___lldiv@divisor+1)^0,f,c
  8222   002E14  3621               	rlcf	(___lldiv@divisor+2)^0,f,c
  8223   002E16  3622               	rlcf	(___lldiv@divisor+3)^0,f,c
  8224   002E18  2A27               	incf	___lldiv@counter^0,f,c
  8225   002E1A                     l5522:
  8226   002E1A  AE22               	btfss	(___lldiv@divisor+3)^0,7,c
  8227   002E1C  EF12  F017         	goto	u6091
  8228   002E20  EF14  F017         	goto	u6090
  8229   002E24                     u6091:
  8230   002E24  EF07  F017         	goto	l5520
  8231   002E28                     u6090:
  8232   002E28                     l5524:
  8233   002E28  90D8               	bcf	status,0,c
  8234   002E2A  3623               	rlcf	___lldiv@quotient^0,f,c
  8235   002E2C  3624               	rlcf	(___lldiv@quotient+1)^0,f,c
  8236   002E2E  3625               	rlcf	(___lldiv@quotient+2)^0,f,c
  8237   002E30  3626               	rlcf	(___lldiv@quotient+3)^0,f,c
  8238   002E32  501F               	movf	___lldiv@divisor^0,w,c
  8239   002E34  5C1B               	subwf	___lldiv@dividend^0,w,c
  8240   002E36  5020               	movf	(___lldiv@divisor+1)^0,w,c
  8241   002E38  581C               	subwfb	(___lldiv@dividend+1)^0,w,c
  8242   002E3A  5021               	movf	(___lldiv@divisor+2)^0,w,c
  8243   002E3C  581D               	subwfb	(___lldiv@dividend+2)^0,w,c
  8244   002E3E  5022               	movf	(___lldiv@divisor+3)^0,w,c
  8245   002E40  581E               	subwfb	(___lldiv@dividend+3)^0,w,c
  8246   002E42  A0D8               	btfss	status,0,c
  8247   002E44  EF26  F017         	goto	u6101
  8248   002E48  EF28  F017         	goto	u6100
  8249   002E4C                     u6101:
  8250   002E4C  EF31  F017         	goto	l5532
  8251   002E50                     u6100:
  8252   002E50  501F               	movf	___lldiv@divisor^0,w,c
  8253   002E52  5E1B               	subwf	___lldiv@dividend^0,f,c
  8254   002E54  5020               	movf	(___lldiv@divisor+1)^0,w,c
  8255   002E56  5A1C               	subwfb	(___lldiv@dividend+1)^0,f,c
  8256   002E58  5021               	movf	(___lldiv@divisor+2)^0,w,c
  8257   002E5A  5A1D               	subwfb	(___lldiv@dividend+2)^0,f,c
  8258   002E5C  5022               	movf	(___lldiv@divisor+3)^0,w,c
  8259   002E5E  5A1E               	subwfb	(___lldiv@dividend+3)^0,f,c
  8260   002E60  8023               	bsf	___lldiv@quotient^0,0,c
  8261   002E62                     l5532:
  8262   002E62  90D8               	bcf	status,0,c
  8263   002E64  3222               	rrcf	(___lldiv@divisor+3)^0,f,c
  8264   002E66  3221               	rrcf	(___lldiv@divisor+2)^0,f,c
  8265   002E68  3220               	rrcf	(___lldiv@divisor+1)^0,f,c
  8266   002E6A  321F               	rrcf	___lldiv@divisor^0,f,c
  8267   002E6C  2E27               	decfsz	___lldiv@counter^0,f,c
  8268   002E6E  EF14  F017         	goto	l5524
  8269   002E72                     l283:
  8270   002E72  C023  F01B         	movff	___lldiv@quotient,?___lldiv
  8271   002E76  C024  F01C         	movff	___lldiv@quotient+1,?___lldiv+1
  8272   002E7A  C025  F01D         	movff	___lldiv@quotient+2,?___lldiv+2
  8273   002E7E  C026  F01E         	movff	___lldiv@quotient+3,?___lldiv+3
  8274   002E82  0012               	return		;funcret
  8275   002E84                     __end_of___lldiv:
  8276                           	callstack 0
  8277                           
  8278 ;; *************** function _Lcd_Init *****************
  8279 ;; Defined at:
  8280 ;;		line 62 in file "lcd.c"
  8281 ;; Parameters:    Size  Location     Type
  8282 ;;		None
  8283 ;; Auto vars:     Size  Location     Type
  8284 ;;		None
  8285 ;; Return value:  Size  Location     Type
  8286 ;;                  1    wreg      void 
  8287 ;; Registers used:
  8288 ;;		wreg, status,2, cstack
  8289 ;; Tracked objects:
  8290 ;;		On entry : 0/0
  8291 ;;		On exit  : 0/0
  8292 ;;		Unchanged: 0/0
  8293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8294 ;;      Params:         0       0       0       0       0       0       0       0       0
  8295 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8296 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8297 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8298 ;;Total ram usage:        1 bytes
  8299 ;; Hardware stack levels used: 1
  8300 ;; Hardware stack levels required when called: 10
  8301 ;; This function calls:
  8302 ;;		_Lcd_Cmd
  8303 ;;		_Lcd_Port
  8304 ;; This function is called by:
  8305 ;;		_main
  8306 ;; This function uses a non-reentrant model
  8307 ;;
  8308                           
  8309                           	psect	text33
  8310   002F02                     __ptext33:
  8311                           	callstack 0
  8312   002F02                     _Lcd_Init:
  8313                           	callstack 20
  8314   002F02                     
  8315                           ;lcd.c: 64:   Lcd_Port(0x00);
  8316   002F02  0E00               	movlw	0
  8317   002F04  ECB7  F018         	call	_Lcd_Port
  8318   002F08                     
  8319                           ;lcd.c: 65:    _delay((unsigned long)((20)*(16000000UL/4000.0)));
  8320   002F08  0E68               	movlw	104
  8321   002F0A  6E1E               	movwf	??_Lcd_Init^0,c
  8322   002F0C  0EE4               	movlw	228
  8323   002F0E                     u6247:
  8324   002F0E  2EE8               	decfsz	wreg,f,c
  8325   002F10  D7FE               	bra	u6247
  8326   002F12  2E1E               	decfsz	??_Lcd_Init^0,f,c
  8327   002F14  D7FC               	bra	u6247
  8328   002F16  D000               	nop2	
  8329   002F18                     
  8330                           ;lcd.c: 66:   Lcd_Cmd(0x03);
  8331   002F18  0E03               	movlw	3
  8332   002F1A  ECA7  F01B         	call	_Lcd_Cmd
  8333   002F1E                     
  8334                           ;lcd.c: 67:  _delay((unsigned long)((5)*(16000000UL/4000.0)));
  8335   002F1E  0E1A               	movlw	26
  8336   002F20  6E1E               	movwf	??_Lcd_Init^0,c
  8337   002F22  0EF8               	movlw	248
  8338   002F24                     u6257:
  8339   002F24  2EE8               	decfsz	wreg,f,c
  8340   002F26  D7FE               	bra	u6257
  8341   002F28  2E1E               	decfsz	??_Lcd_Init^0,f,c
  8342   002F2A  D7FC               	bra	u6257
  8343   002F2C  D000               	nop2	
  8344   002F2E                     
  8345                           ;lcd.c: 68:   Lcd_Cmd(0x03);
  8346   002F2E  0E03               	movlw	3
  8347   002F30  ECA7  F01B         	call	_Lcd_Cmd
  8348   002F34                     
  8349                           ;lcd.c: 69:  _delay((unsigned long)((11)*(16000000UL/4000.0)));
  8350   002F34  0E3A               	movlw	58
  8351   002F36  6E1E               	movwf	??_Lcd_Init^0,c
  8352   002F38  0E23               	movlw	35
  8353   002F3A                     u6267:
  8354   002F3A  2EE8               	decfsz	wreg,f,c
  8355   002F3C  D7FE               	bra	u6267
  8356   002F3E  2E1E               	decfsz	??_Lcd_Init^0,f,c
  8357   002F40  D7FC               	bra	u6267
  8358   002F42  F000               	nop	
  8359   002F44                     
  8360                           ;lcd.c: 70:   Lcd_Cmd(0x03);
  8361   002F44  0E03               	movlw	3
  8362   002F46  ECA7  F01B         	call	_Lcd_Cmd
  8363   002F4A                     
  8364                           ;lcd.c: 72:   Lcd_Cmd(0x02);
  8365   002F4A  0E02               	movlw	2
  8366   002F4C  ECA7  F01B         	call	_Lcd_Cmd
  8367   002F50                     
  8368                           ;lcd.c: 73:   Lcd_Cmd(0x02);
  8369   002F50  0E02               	movlw	2
  8370   002F52  ECA7  F01B         	call	_Lcd_Cmd
  8371   002F56                     
  8372                           ;lcd.c: 74:   Lcd_Cmd(0x08);
  8373   002F56  0E08               	movlw	8
  8374   002F58  ECA7  F01B         	call	_Lcd_Cmd
  8375   002F5C                     
  8376                           ;lcd.c: 75:   Lcd_Cmd(0x00);
  8377   002F5C  0E00               	movlw	0
  8378   002F5E  ECA7  F01B         	call	_Lcd_Cmd
  8379   002F62                     
  8380                           ;lcd.c: 76:   Lcd_Cmd(0x0C);
  8381   002F62  0E0C               	movlw	12
  8382   002F64  ECA7  F01B         	call	_Lcd_Cmd
  8383   002F68                     
  8384                           ;lcd.c: 77:   Lcd_Cmd(0x00);
  8385   002F68  0E00               	movlw	0
  8386   002F6A  ECA7  F01B         	call	_Lcd_Cmd
  8387   002F6E                     
  8388                           ;lcd.c: 78:   Lcd_Cmd(0x06);
  8389   002F6E  0E06               	movlw	6
  8390   002F70  ECA7  F01B         	call	_Lcd_Cmd
  8391   002F74  0012               	return		;funcret
  8392   002F76                     __end_of_Lcd_Init:
  8393                           	callstack 0
  8394                           
  8395 ;; *************** function _Lcd_Clear *****************
  8396 ;; Defined at:
  8397 ;;		line 35 in file "lcd.c"
  8398 ;; Parameters:    Size  Location     Type
  8399 ;;		None
  8400 ;; Auto vars:     Size  Location     Type
  8401 ;;		None
  8402 ;; Return value:  Size  Location     Type
  8403 ;;                  1    wreg      void 
  8404 ;; Registers used:
  8405 ;;		wreg, status,2, cstack
  8406 ;; Tracked objects:
  8407 ;;		On entry : 0/0
  8408 ;;		On exit  : 0/0
  8409 ;;		Unchanged: 0/0
  8410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8411 ;;      Params:         0       0       0       0       0       0       0       0       0
  8412 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8413 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8414 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8415 ;;Total ram usage:        0 bytes
  8416 ;; Hardware stack levels used: 1
  8417 ;; Hardware stack levels required when called: 10
  8418 ;; This function calls:
  8419 ;;		_Lcd_Cmd
  8420 ;; This function is called by:
  8421 ;;		_main
  8422 ;; This function uses a non-reentrant model
  8423 ;;
  8424                           
  8425                           	psect	text34
  8426   003816                     __ptext34:
  8427                           	callstack 0
  8428   003816                     _Lcd_Clear:
  8429                           	callstack 20
  8430   003816                     
  8431                           ;lcd.c: 37:  Lcd_Cmd(0);
  8432   003816  0E00               	movlw	0
  8433   003818  ECA7  F01B         	call	_Lcd_Cmd
  8434                           
  8435                           ;lcd.c: 38:  Lcd_Cmd(1);
  8436   00381C  0E01               	movlw	1
  8437   00381E  ECA7  F01B         	call	_Lcd_Cmd
  8438   003822  0012               	return		;funcret
  8439   003824                     __end_of_Lcd_Clear:
  8440                           	callstack 0
  8441                           
  8442 ;; *************** function _Init_Cargas *****************
  8443 ;; Defined at:
  8444 ;;		line 143 in file "main.c"
  8445 ;; Parameters:    Size  Location     Type
  8446 ;;		None
  8447 ;; Auto vars:     Size  Location     Type
  8448 ;;		None
  8449 ;; Return value:  Size  Location     Type
  8450 ;;                  1    wreg      void 
  8451 ;; Registers used:
  8452 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8453 ;; Tracked objects:
  8454 ;;		On entry : 0/0
  8455 ;;		On exit  : 0/0
  8456 ;;		Unchanged: 0/0
  8457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8458 ;;      Params:         0       0       0       0       0       0       0       0       0
  8459 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8460 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8461 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8462 ;;Total ram usage:        0 bytes
  8463 ;; Hardware stack levels used: 1
  8464 ;; Hardware stack levels required when called: 11
  8465 ;; This function calls:
  8466 ;;		_Lcd_Set_Cursor
  8467 ;;		_Lcd_Write_String
  8468 ;; This function is called by:
  8469 ;;		_main
  8470 ;; This function uses a non-reentrant model
  8471 ;;
  8472                           
  8473                           	psect	text35
  8474   003540                     __ptext35:
  8475                           	callstack 0
  8476   003540                     _Init_Cargas:
  8477                           	callstack 19
  8478   003540                     
  8479                           ;main.c: 144:     Lcd_Set_Cursor(1,1);
  8480   003540  0E01               	movlw	1
  8481   003542  6E1E               	movwf	Lcd_Set_Cursor@b^0,c
  8482   003544  0E01               	movlw	1
  8483   003546  EC22  F018         	call	_Lcd_Set_Cursor
  8484   00354A                     
  8485                           ;main.c: 145:     Lcd_Write_String("L1:OFF");
  8486   00354A  0E5F               	movlw	low STR_7
  8487   00354C  6E1F               	movwf	Lcd_Write_String@a^0,c
  8488   00354E  0E08               	movlw	high STR_7
  8489   003550  6E20               	movwf	(Lcd_Write_String@a+1)^0,c
  8490   003552  EC13  F019         	call	_Lcd_Write_String	;wreg free
  8491   003556                     
  8492                           ;main.c: 146:      Lcd_Set_Cursor(1,8);
  8493   003556  0E08               	movlw	8
  8494   003558  6E1E               	movwf	Lcd_Set_Cursor@b^0,c
  8495   00355A  0E01               	movlw	1
  8496   00355C  EC22  F018         	call	_Lcd_Set_Cursor
  8497                           
  8498                           ;main.c: 147:     Lcd_Write_String("L2:OFF");
  8499   003560  0E66               	movlw	low STR_8
  8500   003562  6E1F               	movwf	Lcd_Write_String@a^0,c
  8501   003564  0E08               	movlw	high STR_8
  8502   003566  6E20               	movwf	(Lcd_Write_String@a+1)^0,c
  8503   003568  EC13  F019         	call	_Lcd_Write_String	;wreg free
  8504   00356C                     
  8505                           ;main.c: 148:      Lcd_Set_Cursor(2,5);
  8506   00356C  0E05               	movlw	5
  8507   00356E  6E1E               	movwf	Lcd_Set_Cursor@b^0,c
  8508   003570  0E02               	movlw	2
  8509   003572  EC22  F018         	call	_Lcd_Set_Cursor
  8510   003576                     
  8511                           ;main.c: 149:     Lcd_Write_String("L3:OFF");
  8512   003576  0E6D               	movlw	low STR_9
  8513   003578  6E1F               	movwf	Lcd_Write_String@a^0,c
  8514   00357A  0E08               	movlw	high STR_9
  8515   00357C  6E20               	movwf	(Lcd_Write_String@a+1)^0,c
  8516   00357E  EC13  F019         	call	_Lcd_Write_String	;wreg free
  8517   003582  0012               	return		;funcret
  8518   003584                     __end_of_Init_Cargas:
  8519                           	callstack 0
  8520                           
  8521 ;; *************** function _Lcd_Write_String *****************
  8522 ;; Defined at:
  8523 ;;		line 97 in file "lcd.c"
  8524 ;; Parameters:    Size  Location     Type
  8525 ;;  a               2   30[COMRAM] PTR unsigned char 
  8526 ;;		 -> STR_18(7), STR_17(7), STR_16(7), STR_15(7), 
  8527 ;;		 -> STR_14(7), STR_13(7), STR_12(7), STR_11(7), 
  8528 ;;		 -> STR_10(7), STR_9(7), STR_8(7), STR_7(7), 
  8529 ;;		 -> STR_6(7), STR_5(7), STR_4(7), 
  8530 ;; Auto vars:     Size  Location     Type
  8531 ;;  i               2   34[COMRAM] int 
  8532 ;; Return value:  Size  Location     Type
  8533 ;;                  1    wreg      void 
  8534 ;; Registers used:
  8535 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8536 ;; Tracked objects:
  8537 ;;		On entry : 0/0
  8538 ;;		On exit  : 0/0
  8539 ;;		Unchanged: 0/0
  8540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8541 ;;      Params:         2       0       0       0       0       0       0       0       0
  8542 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8543 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8544 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8545 ;;Total ram usage:        6 bytes
  8546 ;; Hardware stack levels used: 1
  8547 ;; Hardware stack levels required when called: 10
  8548 ;; This function calls:
  8549 ;;		_Lcd_Write_Char
  8550 ;; This function is called by:
  8551 ;;		_Init_Cargas
  8552 ;; This function uses a non-reentrant model
  8553 ;;
  8554                           
  8555                           	psect	text36
  8556   003226                     __ptext36:
  8557                           	callstack 0
  8558   003226                     _Lcd_Write_String:
  8559                           	callstack 19
  8560   003226                     
  8561                           ;lcd.c: 97: void Lcd_Write_String(unsigned char *a);lcd.c: 98: {;lcd.c: 99:  int i;;lcd.
      +                          c: 100:  for(i=0;a[i]!='\0';i++)
  8562   003226  0E00               	movlw	0
  8563   003228  6E24               	movwf	(Lcd_Write_String@i+1)^0,c
  8564   00322A  0E00               	movlw	0
  8565   00322C  6E23               	movwf	Lcd_Write_String@i^0,c
  8566   00322E  EF29  F019         	goto	l5512
  8567   003232                     l5508:
  8568                           
  8569                           ;lcd.c: 101:     Lcd_Write_Char(a[i]);
  8570   003232  5023               	movf	Lcd_Write_String@i^0,w,c
  8571   003234  241F               	addwf	Lcd_Write_String@a^0,w,c
  8572   003236  6E21               	movwf	??_Lcd_Write_String^0,c
  8573   003238  5024               	movf	(Lcd_Write_String@i+1)^0,w,c
  8574   00323A  2020               	addwfc	(Lcd_Write_String@a+1)^0,w,c
  8575   00323C  6E22               	movwf	(??_Lcd_Write_String+1)^0,c
  8576   00323E  C021  FFF6         	movff	??_Lcd_Write_String,tblptrl
  8577   003242  C022  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
  8578   003246                     	if	0	;tblptru may be non-zero
  8579   003246                     	endif
  8580   003246                     	if	0	;tblptru may be non-zero
  8581   003246                     	endif
  8582   003246  0008               	tblrd		*
  8583   003248  50F5               	movf	tablat,w,c
  8584   00324A  ECFE  F01A         	call	_Lcd_Write_Char
  8585   00324E  4A23               	infsnz	Lcd_Write_String@i^0,f,c
  8586   003250  2A24               	incf	(Lcd_Write_String@i+1)^0,f,c
  8587   003252                     l5512:
  8588   003252  5023               	movf	Lcd_Write_String@i^0,w,c
  8589   003254  241F               	addwf	Lcd_Write_String@a^0,w,c
  8590   003256  6E21               	movwf	??_Lcd_Write_String^0,c
  8591   003258  5024               	movf	(Lcd_Write_String@i+1)^0,w,c
  8592   00325A  2020               	addwfc	(Lcd_Write_String@a+1)^0,w,c
  8593   00325C  6E22               	movwf	(??_Lcd_Write_String+1)^0,c
  8594   00325E  C021  FFF6         	movff	??_Lcd_Write_String,tblptrl
  8595   003262  C022  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
  8596   003266                     	if	0	;tblptru may be non-zero
  8597   003266                     	endif
  8598   003266                     	if	0	;tblptru may be non-zero
  8599   003266                     	endif
  8600   003266  0008               	tblrd		*
  8601   003268  50F5               	movf	tablat,w,c
  8602   00326A  0900               	iorlw	0
  8603   00326C  A4D8               	btfss	status,2,c
  8604   00326E  EF3B  F019         	goto	u6071
  8605   003272  EF3D  F019         	goto	u6070
  8606   003276                     u6071:
  8607   003276  EF19  F019         	goto	l5508
  8608   00327A                     u6070:
  8609   00327A  0012               	return		;funcret
  8610   00327C                     __end_of_Lcd_Write_String:
  8611                           	callstack 0
  8612                           
  8613 ;; *************** function _Lcd_Write_Char *****************
  8614 ;; Defined at:
  8615 ;;		line 81 in file "lcd.c"
  8616 ;; Parameters:    Size  Location     Type
  8617 ;;  a               1    wreg     unsigned char 
  8618 ;; Auto vars:     Size  Location     Type
  8619 ;;  a               1   29[COMRAM] unsigned char 
  8620 ;;  y               1   28[COMRAM] unsigned char 
  8621 ;;  temp            1   27[COMRAM] unsigned char 
  8622 ;; Return value:  Size  Location     Type
  8623 ;;                  1    wreg      void 
  8624 ;; Registers used:
  8625 ;;		wreg, status,2, status,0, cstack
  8626 ;; Tracked objects:
  8627 ;;		On entry : 0/0
  8628 ;;		On exit  : 0/0
  8629 ;;		Unchanged: 0/0
  8630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8631 ;;      Params:         0       0       0       0       0       0       0       0       0
  8632 ;;      Locals:         3       0       0       0       0       0       0       0       0
  8633 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8634 ;;      Totals:         3       0       0       0       0       0       0       0       0
  8635 ;;Total ram usage:        3 bytes
  8636 ;; Hardware stack levels used: 1
  8637 ;; Hardware stack levels required when called: 9
  8638 ;; This function calls:
  8639 ;;		_Lcd_Port
  8640 ;; This function is called by:
  8641 ;;		_Lcd_Write_String
  8642 ;; This function uses a non-reentrant model
  8643 ;;
  8644                           
  8645                           	psect	text37
  8646   0035FC                     __ptext37:
  8647                           	callstack 0
  8648   0035FC                     _Lcd_Write_Char:
  8649                           	callstack 19
  8650                           
  8651                           ;incstack = 0
  8652                           ;Lcd_Write_Char@a stored from wreg
  8653   0035FC  6E1E               	movwf	Lcd_Write_Char@a^0,c
  8654   0035FE                     
  8655                           ;lcd.c: 81: void Lcd_Write_Char(unsigned char a);lcd.c: 82: {;lcd.c: 83:    char temp,y;
      +                          ;lcd.c: 84:    temp = a&0x0F;
  8656   0035FE  501E               	movf	Lcd_Write_Char@a^0,w,c
  8657   003600  0B0F               	andlw	15
  8658   003602  6E1C               	movwf	Lcd_Write_Char@temp^0,c
  8659                           
  8660                           ;lcd.c: 85:    y = a&0xF0;
  8661   003604  501E               	movf	Lcd_Write_Char@a^0,w,c
  8662   003606  0BF0               	andlw	240
  8663   003608  6E1D               	movwf	Lcd_Write_Char@y^0,c
  8664   00360A                     
  8665                           ;lcd.c: 86:    LATDbits.LATD2 = 1;
  8666   00360A  848C               	bsf	140,2,c	;volatile
  8667   00360C                     
  8668                           ;lcd.c: 87:    Lcd_Port(y>>4);
  8669   00360C  381D               	swapf	Lcd_Write_Char@y^0,w,c
  8670   00360E  0B0F               	andlw	15
  8671   003610  ECB7  F018         	call	_Lcd_Port
  8672   003614                     
  8673                           ;lcd.c: 88:    LATDbits.LATD3 = 1;
  8674   003614  868C               	bsf	140,3,c	;volatile
  8675   003616                     
  8676                           ;lcd.c: 89:    _delay((unsigned long)((40)*(16000000UL/4000000.0)));
  8677   003616  0E35               	movlw	53
  8678   003618                     u6277:
  8679   003618  2EE8               	decfsz	wreg,f,c
  8680   00361A  D7FE               	bra	u6277
  8681   00361C  F000               	nop	
  8682   00361E                     
  8683                           ;lcd.c: 90:    LATDbits.LATD3 = 0;
  8684   00361E  968C               	bcf	140,3,c	;volatile
  8685   003620                     
  8686                           ;lcd.c: 91:    Lcd_Port(temp);
  8687   003620  501C               	movf	Lcd_Write_Char@temp^0,w,c
  8688   003622  ECB7  F018         	call	_Lcd_Port
  8689   003626                     
  8690                           ;lcd.c: 92:    LATDbits.LATD3 = 1;
  8691   003626  868C               	bsf	140,3,c	;volatile
  8692   003628                     
  8693                           ;lcd.c: 93:    _delay((unsigned long)((40)*(16000000UL/4000000.0)));
  8694   003628  0E35               	movlw	53
  8695   00362A                     u6287:
  8696   00362A  2EE8               	decfsz	wreg,f,c
  8697   00362C  D7FE               	bra	u6287
  8698   00362E  F000               	nop	
  8699   003630                     
  8700                           ;lcd.c: 94:    LATDbits.LATD3 = 0;
  8701   003630  968C               	bcf	140,3,c	;volatile
  8702   003632  0012               	return		;funcret
  8703   003634                     __end_of_Lcd_Write_Char:
  8704                           	callstack 0
  8705                           
  8706 ;; *************** function _Lcd_Set_Cursor *****************
  8707 ;; Defined at:
  8708 ;;		line 41 in file "lcd.c"
  8709 ;; Parameters:    Size  Location     Type
  8710 ;;  a               1    wreg     unsigned char 
  8711 ;;  b               1   29[COMRAM] unsigned char 
  8712 ;; Auto vars:     Size  Location     Type
  8713 ;;  a               1   30[COMRAM] unsigned char 
  8714 ;;  temp            1   33[COMRAM] unsigned char 
  8715 ;;  y               1   32[COMRAM] unsigned char 
  8716 ;;  z               1   31[COMRAM] unsigned char 
  8717 ;; Return value:  Size  Location     Type
  8718 ;;                  1    wreg      void 
  8719 ;; Registers used:
  8720 ;;		wreg, status,2, status,0, cstack
  8721 ;; Tracked objects:
  8722 ;;		On entry : 0/0
  8723 ;;		On exit  : 0/0
  8724 ;;		Unchanged: 0/0
  8725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8726 ;;      Params:         1       0       0       0       0       0       0       0       0
  8727 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8728 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8729 ;;      Totals:         5       0       0       0       0       0       0       0       0
  8730 ;;Total ram usage:        5 bytes
  8731 ;; Hardware stack levels used: 1
  8732 ;; Hardware stack levels required when called: 10
  8733 ;; This function calls:
  8734 ;;		_Lcd_Cmd
  8735 ;; This function is called by:
  8736 ;;		_Init_Cargas
  8737 ;; This function uses a non-reentrant model
  8738 ;;
  8739                           
  8740                           	psect	text38
  8741   003044                     __ptext38:
  8742                           	callstack 0
  8743   003044                     _Lcd_Set_Cursor:
  8744                           	callstack 19
  8745                           
  8746                           ;incstack = 0
  8747                           ;Lcd_Set_Cursor@a stored from wreg
  8748   003044  6E1F               	movwf	Lcd_Set_Cursor@a^0,c
  8749   003046                     
  8750                           ;lcd.c: 41: void Lcd_Set_Cursor(unsigned char a, unsigned char b);lcd.c: 42: {;lcd.c: 43
      +                          :  char temp,z,y;;lcd.c: 44:  if(a == 1)
  8751   003046  041F               	decf	Lcd_Set_Cursor@a^0,w,c
  8752   003048  A4D8               	btfss	status,2,c
  8753   00304A  EF29  F018         	goto	u6051
  8754   00304E  EF2B  F018         	goto	u6050
  8755   003052                     u6051:
  8756   003052  EF3C  F018         	goto	l5498
  8757   003056                     u6050:
  8758   003056                     
  8759                           ;lcd.c: 45:  {;lcd.c: 46:    temp = 0x80 + b - 1;
  8760   003056  501E               	movf	Lcd_Set_Cursor@b^0,w,c
  8761   003058  0F7F               	addlw	127
  8762   00305A  6E22               	movwf	Lcd_Set_Cursor@temp^0,c
  8763                           
  8764                           ;lcd.c: 47:   z = temp>>4;
  8765   00305C  3822               	swapf	Lcd_Set_Cursor@temp^0,w,c
  8766   00305E  0B0F               	andlw	15
  8767   003060  6E20               	movwf	Lcd_Set_Cursor@z^0,c
  8768                           
  8769                           ;lcd.c: 48:   y = temp & 0x0F;
  8770   003062  5022               	movf	Lcd_Set_Cursor@temp^0,w,c
  8771   003064  0B0F               	andlw	15
  8772   003066  6E21               	movwf	Lcd_Set_Cursor@y^0,c
  8773   003068                     
  8774                           ;lcd.c: 49:   Lcd_Cmd(z);
  8775   003068  5020               	movf	Lcd_Set_Cursor@z^0,w,c
  8776   00306A  ECA7  F01B         	call	_Lcd_Cmd
  8777   00306E                     
  8778                           ;lcd.c: 50:   Lcd_Cmd(y);
  8779   00306E  5021               	movf	Lcd_Set_Cursor@y^0,w,c
  8780   003070  ECA7  F01B         	call	_Lcd_Cmd
  8781                           
  8782                           ;lcd.c: 51:  }
  8783   003074  EF54  F018         	goto	l81
  8784   003078                     l5498:
  8785   003078  0E02               	movlw	2
  8786   00307A  181F               	xorwf	Lcd_Set_Cursor@a^0,w,c
  8787   00307C  A4D8               	btfss	status,2,c
  8788   00307E  EF43  F018         	goto	u6061
  8789   003082  EF45  F018         	goto	u6060
  8790   003086                     u6061:
  8791   003086  EF54  F018         	goto	l81
  8792   00308A                     u6060:
  8793   00308A                     
  8794                           ;lcd.c: 53:  {;lcd.c: 54:   temp = 0xC0 + b - 1;
  8795   00308A  501E               	movf	Lcd_Set_Cursor@b^0,w,c
  8796   00308C  0FBF               	addlw	191
  8797   00308E  6E22               	movwf	Lcd_Set_Cursor@temp^0,c
  8798                           
  8799                           ;lcd.c: 55:   z = temp>>4;
  8800   003090  3822               	swapf	Lcd_Set_Cursor@temp^0,w,c
  8801   003092  0B0F               	andlw	15
  8802   003094  6E20               	movwf	Lcd_Set_Cursor@z^0,c
  8803                           
  8804                           ;lcd.c: 56:   y = temp & 0x0F;
  8805   003096  5022               	movf	Lcd_Set_Cursor@temp^0,w,c
  8806   003098  0B0F               	andlw	15
  8807   00309A  6E21               	movwf	Lcd_Set_Cursor@y^0,c
  8808   00309C                     
  8809                           ;lcd.c: 57:   Lcd_Cmd(z);
  8810   00309C  5020               	movf	Lcd_Set_Cursor@z^0,w,c
  8811   00309E  ECA7  F01B         	call	_Lcd_Cmd
  8812   0030A2                     
  8813                           ;lcd.c: 58:   Lcd_Cmd(y);
  8814   0030A2  5021               	movf	Lcd_Set_Cursor@y^0,w,c
  8815   0030A4  ECA7  F01B         	call	_Lcd_Cmd
  8816   0030A8                     l81:
  8817   0030A8  0012               	return		;funcret
  8818   0030AA                     __end_of_Lcd_Set_Cursor:
  8819                           	callstack 0
  8820                           
  8821 ;; *************** function _Lcd_Cmd *****************
  8822 ;; Defined at:
  8823 ;;		line 26 in file "lcd.c"
  8824 ;; Parameters:    Size  Location     Type
  8825 ;;  a               1    wreg     unsigned char 
  8826 ;; Auto vars:     Size  Location     Type
  8827 ;;  a               1   28[COMRAM] unsigned char 
  8828 ;; Return value:  Size  Location     Type
  8829 ;;                  1    wreg      void 
  8830 ;; Registers used:
  8831 ;;		wreg, status,2, cstack
  8832 ;; Tracked objects:
  8833 ;;		On entry : 0/0
  8834 ;;		On exit  : 0/0
  8835 ;;		Unchanged: 0/0
  8836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8837 ;;      Params:         0       0       0       0       0       0       0       0       0
  8838 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8839 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8840 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8841 ;;Total ram usage:        2 bytes
  8842 ;; Hardware stack levels used: 1
  8843 ;; Hardware stack levels required when called: 9
  8844 ;; This function calls:
  8845 ;;		_Lcd_Port
  8846 ;; This function is called by:
  8847 ;;		_Lcd_Clear
  8848 ;;		_Lcd_Set_Cursor
  8849 ;;		_Lcd_Init
  8850 ;;		_Lcd_Shift_Right
  8851 ;;		_Lcd_Shift_Left
  8852 ;; This function uses a non-reentrant model
  8853 ;;
  8854                           
  8855                           	psect	text39
  8856   00374E                     __ptext39:
  8857                           	callstack 0
  8858   00374E                     _Lcd_Cmd:
  8859                           	callstack 20
  8860                           
  8861                           ;incstack = 0
  8862                           ;Lcd_Cmd@a stored from wreg
  8863   00374E  6E1D               	movwf	Lcd_Cmd@a^0,c
  8864   003750                     
  8865                           ;lcd.c: 26: void Lcd_Cmd(unsigned char a);lcd.c: 27: {;lcd.c: 28:  LATDbits.LATD2 = 0;
  8866   003750  948C               	bcf	140,2,c	;volatile
  8867   003752                     
  8868                           ;lcd.c: 29:  Lcd_Port(a);
  8869   003752  501D               	movf	Lcd_Cmd@a^0,w,c
  8870   003754  ECB7  F018         	call	_Lcd_Port
  8871   003758                     
  8872                           ;lcd.c: 30:  LATDbits.LATD3 = 1;
  8873   003758  868C               	bsf	140,3,c	;volatile
  8874   00375A                     
  8875                           ;lcd.c: 31:         _delay((unsigned long)((4)*(16000000UL/4000.0)));
  8876   00375A  0E15               	movlw	21
  8877   00375C  6E1C               	movwf	??_Lcd_Cmd^0,c
  8878   00375E  0EC6               	movlw	198
  8879   003760                     u6297:
  8880   003760  2EE8               	decfsz	wreg,f,c
  8881   003762  D7FE               	bra	u6297
  8882   003764  2E1C               	decfsz	??_Lcd_Cmd^0,f,c
  8883   003766  D7FC               	bra	u6297
  8884   003768  D000               	nop2	
  8885   00376A                     
  8886                           ;lcd.c: 32:         LATDbits.LATD3 = 0;
  8887   00376A  968C               	bcf	140,3,c	;volatile
  8888   00376C  0012               	return		;funcret
  8889   00376E                     __end_of_Lcd_Cmd:
  8890                           	callstack 0
  8891                           
  8892 ;; *************** function _Lcd_Port *****************
  8893 ;; Defined at:
  8894 ;;		line 3 in file "lcd.c"
  8895 ;; Parameters:    Size  Location     Type
  8896 ;;  a               1    wreg     unsigned char 
  8897 ;; Auto vars:     Size  Location     Type
  8898 ;;  a               1   26[COMRAM] unsigned char 
  8899 ;; Return value:  Size  Location     Type
  8900 ;;                  1    wreg      void 
  8901 ;; Registers used:
  8902 ;;		wreg
  8903 ;; Tracked objects:
  8904 ;;		On entry : 0/0
  8905 ;;		On exit  : 0/0
  8906 ;;		Unchanged: 0/0
  8907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8908 ;;      Params:         0       0       0       0       0       0       0       0       0
  8909 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8910 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8911 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8912 ;;Total ram usage:        1 bytes
  8913 ;; Hardware stack levels used: 1
  8914 ;; Hardware stack levels required when called: 8
  8915 ;; This function calls:
  8916 ;;		Nothing
  8917 ;; This function is called by:
  8918 ;;		_Lcd_Cmd
  8919 ;;		_Lcd_Init
  8920 ;;		_Lcd_Write_Char
  8921 ;; This function uses a non-reentrant model
  8922 ;;
  8923                           
  8924                           	psect	text40
  8925   00316E                     __ptext40:
  8926                           	callstack 0
  8927   00316E                     _Lcd_Port:
  8928                           	callstack 21
  8929                           
  8930                           ;incstack = 0
  8931                           ;Lcd_Port@a stored from wreg
  8932   00316E  6E1B               	movwf	Lcd_Port@a^0,c
  8933   003170                     
  8934                           ;lcd.c: 3: void Lcd_Port(unsigned char a);lcd.c: 4: {;lcd.c: 5:  if(a & 1)
  8935   003170  A01B               	btfss	Lcd_Port@a^0,0,c
  8936   003172  EFBD  F018         	goto	u5601
  8937   003176  EFBF  F018         	goto	u5600
  8938   00317A                     u5601:
  8939   00317A  EFC2  F018         	goto	l61
  8940   00317E                     u5600:
  8941   00317E                     
  8942                           ;lcd.c: 6:   LATDbits.LATD4 = 1;
  8943   00317E  888C               	bsf	140,4,c	;volatile
  8944   003180  EFC3  F018         	goto	l5106
  8945   003184                     l61:
  8946                           
  8947                           ;lcd.c: 8:   LATDbits.LATD4 = 0;
  8948   003184  988C               	bcf	140,4,c	;volatile
  8949   003186                     l5106:
  8950                           
  8951                           ;lcd.c: 10:  if(a & 2)
  8952   003186  A21B               	btfss	Lcd_Port@a^0,1,c
  8953   003188  EFC8  F018         	goto	u5611
  8954   00318C  EFCA  F018         	goto	u5610
  8955   003190                     u5611:
  8956   003190  EFCD  F018         	goto	l63
  8957   003194                     u5610:
  8958   003194                     
  8959                           ;lcd.c: 11:   LATDbits.LATD5 = 1;
  8960   003194  8A8C               	bsf	140,5,c	;volatile
  8961   003196  EFCE  F018         	goto	l5110
  8962   00319A                     l63:
  8963                           
  8964                           ;lcd.c: 13:   LATDbits.LATD5 = 0;
  8965   00319A  9A8C               	bcf	140,5,c	;volatile
  8966   00319C                     l5110:
  8967                           
  8968                           ;lcd.c: 15:  if(a & 4)
  8969   00319C  A41B               	btfss	Lcd_Port@a^0,2,c
  8970   00319E  EFD3  F018         	goto	u5621
  8971   0031A2  EFD5  F018         	goto	u5620
  8972   0031A6                     u5621:
  8973   0031A6  EFD8  F018         	goto	l65
  8974   0031AA                     u5620:
  8975   0031AA                     
  8976                           ;lcd.c: 16:   LATDbits.LATD6 = 1;
  8977   0031AA  8C8C               	bsf	140,6,c	;volatile
  8978   0031AC  EFD9  F018         	goto	l5114
  8979   0031B0                     l65:
  8980                           
  8981                           ;lcd.c: 18:   LATDbits.LATD6 = 0;
  8982   0031B0  9C8C               	bcf	140,6,c	;volatile
  8983   0031B2                     l5114:
  8984                           
  8985                           ;lcd.c: 20:  if(a & 8)
  8986   0031B2  A61B               	btfss	Lcd_Port@a^0,3,c
  8987   0031B4  EFDE  F018         	goto	u5631
  8988   0031B8  EFE0  F018         	goto	u5630
  8989   0031BC                     u5631:
  8990   0031BC  EFE3  F018         	goto	l67
  8991   0031C0                     u5630:
  8992   0031C0                     
  8993                           ;lcd.c: 21:   LATDbits.LATD7 = 1;
  8994   0031C0  8E8C               	bsf	140,7,c	;volatile
  8995   0031C2  EFE4  F018         	goto	l69
  8996   0031C6                     l67:
  8997                           
  8998                           ;lcd.c: 23:   LATDbits.LATD7 = 0;
  8999   0031C6  9E8C               	bcf	140,7,c	;volatile
  9000   0031C8                     l69:
  9001   0031C8  0012               	return		;funcret
  9002   0031CA                     __end_of_Lcd_Port:
  9003                           	callstack 0
  9004                           
  9005 ;; *************** function _ADC_Read *****************
  9006 ;; Defined at:
  9007 ;;		line 15 in file "ADC_libreria.c"
  9008 ;; Parameters:    Size  Location     Type
  9009 ;;  channel         1    wreg     enum E4854
  9010 ;; Auto vars:     Size  Location     Type
  9011 ;;  channel         1   30[COMRAM] enum E4854
  9012 ;; Return value:  Size  Location     Type
  9013 ;;                  2   26[COMRAM] unsigned short 
  9014 ;; Registers used:
  9015 ;;		wreg, status,2, status,0
  9016 ;; Tracked objects:
  9017 ;;		On entry : 0/0
  9018 ;;		On exit  : 0/0
  9019 ;;		Unchanged: 0/0
  9020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9021 ;;      Params:         2       0       0       0       0       0       0       0       0
  9022 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9023 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9024 ;;      Totals:         5       0       0       0       0       0       0       0       0
  9025 ;;Total ram usage:        5 bytes
  9026 ;; Hardware stack levels used: 1
  9027 ;; Hardware stack levels required when called: 8
  9028 ;; This function calls:
  9029 ;;		Nothing
  9030 ;; This function is called by:
  9031 ;;		_main
  9032 ;; This function uses a non-reentrant model
  9033 ;;
  9034                           
  9035                           	psect	text41
  9036   003634                     __ptext41:
  9037                           	callstack 0
  9038   003634                     _ADC_Read:
  9039                           	callstack 22
  9040                           
  9041                           ;incstack = 0
  9042                           ;ADC_Read@channel stored from wreg
  9043   003634  6E1F               	movwf	ADC_Read@channel^0,c
  9044   003636                     
  9045                           ;ADC_libreria.c: 17:     ADCON0bits.CHS =channel;
  9046   003636  C01F  F01D         	movff	ADC_Read@channel,??_ADC_Read
  9047   00363A  461D               	rlncf	??_ADC_Read^0,f,c
  9048   00363C  461D               	rlncf	??_ADC_Read^0,f,c
  9049   00363E  50C2               	movf	194,w,c	;volatile
  9050   003640  181D               	xorwf	??_ADC_Read^0,w,c
  9051   003642  0B83               	andlw	-125
  9052   003644  181D               	xorwf	??_ADC_Read^0,w,c
  9053   003646  6EC2               	movwf	194,c	;volatile
  9054   003648                     
  9055                           ;ADC_libreria.c: 18:     ADCON0bits.GO_DONE=1;
  9056   003648  82C2               	bsf	194,1,c	;volatile
  9057   00364A                     l115:
  9058   00364A  B2C2               	btfsc	194,1,c	;volatile
  9059   00364C  EF2A  F01B         	goto	u6131
  9060   003650  EF2C  F01B         	goto	u6130
  9061   003654                     u6131:
  9062   003654  EF25  F01B         	goto	l115
  9063   003658                     u6130:
  9064   003658                     
  9065                           ;ADC_libreria.c: 20:     return (uint16_t)((ADRESH<<8)+(ADRESL));
  9066   003658  50C4               	movf	196,w,c	;volatile
  9067   00365A  6E1E               	movwf	(??_ADC_Read+1)^0,c
  9068   00365C  6A1D               	clrf	??_ADC_Read^0,c
  9069   00365E  50C3               	movf	195,w,c	;volatile
  9070   003660  241D               	addwf	??_ADC_Read^0,w,c
  9071   003662  6E1B               	movwf	?_ADC_Read^0,c
  9072   003664  0E00               	movlw	0
  9073   003666  201E               	addwfc	(??_ADC_Read+1)^0,w,c
  9074   003668  6E1C               	movwf	(?_ADC_Read+1)^0,c
  9075   00366A  0012               	return		;funcret
  9076   00366C                     __end_of_ADC_Read:
  9077                           	callstack 0
  9078                           
  9079 ;; *************** function _ADC_Init *****************
  9080 ;; Defined at:
  9081 ;;		line 4 in file "ADC_libreria.c"
  9082 ;; Parameters:    Size  Location     Type
  9083 ;;		None
  9084 ;; Auto vars:     Size  Location     Type
  9085 ;;		None
  9086 ;; Return value:  Size  Location     Type
  9087 ;;                  1    wreg      void 
  9088 ;; Registers used:
  9089 ;;		wreg, status,2
  9090 ;; Tracked objects:
  9091 ;;		On entry : 0/0
  9092 ;;		On exit  : 0/0
  9093 ;;		Unchanged: 0/0
  9094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9095 ;;      Params:         0       0       0       0       0       0       0       0       0
  9096 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9097 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9098 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9099 ;;Total ram usage:        0 bytes
  9100 ;; Hardware stack levels used: 1
  9101 ;; Hardware stack levels required when called: 8
  9102 ;; This function calls:
  9103 ;;		Nothing
  9104 ;; This function is called by:
  9105 ;;		_main
  9106 ;; This function uses a non-reentrant model
  9107 ;;
  9108                           
  9109                           	psect	text42
  9110   00378E                     __ptext42:
  9111                           	callstack 0
  9112   00378E                     _ADC_Init:
  9113                           	callstack 22
  9114   00378E                     
  9115                           ;ADC_libreria.c: 6:     ADCON1bits.PVCFG = 0b00;
  9116   00378E  0EF3               	movlw	-13
  9117   003790  16C1               	andwf	193,f,c	;volatile
  9118                           
  9119                           ;ADC_libreria.c: 7:     ADCON1bits.NVCFG = 0b00;
  9120   003792  0EFC               	movlw	-4
  9121   003794  16C1               	andwf	193,f,c	;volatile
  9122   003796                     
  9123                           ;ADC_libreria.c: 8:     ADCON2bits.ADFM = 1;
  9124   003796  8EC0               	bsf	192,7,c	;volatile
  9125                           
  9126                           ;ADC_libreria.c: 9:     ADCON2bits.ACQT = 0b100;
  9127   003798  50C0               	movf	192,w,c	;volatile
  9128   00379A  0BC7               	andlw	-57
  9129   00379C  0920               	iorlw	32
  9130   00379E  6EC0               	movwf	192,c	;volatile
  9131                           
  9132                           ;ADC_libreria.c: 10:     ADCON2bits.ADCS = 0b101;
  9133   0037A0  50C0               	movf	192,w,c	;volatile
  9134   0037A2  0BF8               	andlw	-8
  9135   0037A4  0905               	iorlw	5
  9136   0037A6  6EC0               	movwf	192,c	;volatile
  9137   0037A8                     
  9138                           ;ADC_libreria.c: 11:     ADCON0bits.ADON = 1;
  9139   0037A8  80C2               	bsf	194,0,c	;volatile
  9140   0037AA  0012               	return		;funcret
  9141   0037AC                     __end_of_ADC_Init:
  9142                           	callstack 0
  9143                           
  9144 ;; *************** function _ISR_L *****************
  9145 ;; Defined at:
  9146 ;;		line 66 in file "main.c"
  9147 ;; Parameters:    Size  Location     Type
  9148 ;;		None
  9149 ;; Auto vars:     Size  Location     Type
  9150 ;;		None
  9151 ;; Return value:  Size  Location     Type
  9152 ;;                  1    wreg      void 
  9153 ;; Registers used:
  9154 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9155 ;; Tracked objects:
  9156 ;;		On entry : 0/0
  9157 ;;		On exit  : 0/0
  9158 ;;		Unchanged: 0/0
  9159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9160 ;;      Params:         0       0       0       0       0       0       0       0       0
  9161 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9162 ;;      Temps:          7       0       0       0       0       0       0       0       0
  9163 ;;      Totals:         7       0       0       0       0       0       0       0       0
  9164 ;;Total ram usage:        7 bytes
  9165 ;; Hardware stack levels used: 1
  9166 ;; Hardware stack levels required when called: 7
  9167 ;; This function calls:
  9168 ;;		i1_Lcd_Set_Cursor
  9169 ;;		i1_Lcd_Write_String
  9170 ;; This function is called by:
  9171 ;;		Interrupt level 1
  9172 ;; This function uses a non-reentrant model
  9173 ;;
  9174                           
  9175                           	psect	intcodelo
  9176   000018                     __pintcodelo:
  9177                           	callstack 0
  9178   000018                     _ISR_L:
  9179                           	callstack 15
  9180                           
  9181                           ;incstack = 0
  9182   000018  8045               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  9183   00001A  CFD8 F014          	movff	status,??_ISR_L
  9184   00001E  CFE8 F015          	movff	wreg,??_ISR_L+1
  9185   000022  CFE0 F016          	movff	bsr,??_ISR_L+2
  9186   000026  CFF6 F017          	movff	tblptrl,??_ISR_L+3
  9187   00002A  CFF7 F018          	movff	tblptrh,??_ISR_L+4
  9188   00002E  CFF8 F019          	movff	tblptru,??_ISR_L+5
  9189   000032  CFF5 F01A          	movff	tablat,??_ISR_L+6
  9190   000036                     
  9191                           ;main.c: 67:     if(PIR1bits.RCIF==1){
  9192   000036  AA9E               	btfss	158,5,c	;volatile
  9193   000038  EF20  F000         	goto	i1u422_21
  9194   00003C  EF22  F000         	goto	i1u422_20
  9195   000040                     i1u422_21:
  9196   000040  EF0D  F001         	goto	i1l235
  9197   000044                     i1u422_20:
  9198   000044                     
  9199                           ;main.c: 68:         PIR1bits.RCIF=0;
  9200   000044  9A9E               	bcf	158,5,c	;volatile
  9201                           
  9202                           ;main.c: 69:         dato_Rx=RCREG;
  9203   000046  CFAE F034          	movff	4014,_dato_Rx	;volatile
  9204   00004A                     
  9205                           ;main.c: 72:         if(dato_Rx == 'q'){
  9206   00004A  0E71               	movlw	113
  9207   00004C  1834               	xorwf	_dato_Rx^0,w,c
  9208   00004E  A4D8               	btfss	status,2,c
  9209   000050  EF2C  F000         	goto	i1u423_21
  9210   000054  EF2E  F000         	goto	i1u423_20
  9211   000058                     i1u423_21:
  9212   000058  EF3C  F000         	goto	i1l4220
  9213   00005C                     i1u423_20:
  9214   00005C                     
  9215                           ;main.c: 73:             Lcd_Set_Cursor(1,1);
  9216   00005C  0E01               	movlw	1
  9217   00005E  6E0D               	movwf	i1Lcd_Set_Cursor@b^0,c
  9218   000060  0E01               	movlw	1
  9219   000062  EC55  F018         	call	i1_Lcd_Set_Cursor
  9220   000066                     
  9221                           ;main.c: 74:             Lcd_Write_String("L1:ON ");
  9222   000066  0E4A               	movlw	low STR_4
  9223   000068  6E0E               	movwf	i1Lcd_Write_String@a^0,c
  9224   00006A  0E08               	movlw	high STR_4
  9225   00006C  6E0F               	movwf	(i1Lcd_Write_String@a+1)^0,c
  9226   00006E  EC3E  F019         	call	i1_Lcd_Write_String	;wreg free
  9227   000072                     
  9228                           ;main.c: 75:             LATCbits.LATC0=1;
  9229   000072  808B               	bsf	139,0,c	;volatile
  9230                           
  9231                           ;main.c: 76:         }
  9232   000074  EF0D  F001         	goto	i1l235
  9233   000078                     i1l4220:
  9234   000078  0E77               	movlw	119
  9235   00007A  1834               	xorwf	_dato_Rx^0,w,c
  9236   00007C  A4D8               	btfss	status,2,c
  9237   00007E  EF43  F000         	goto	i1u424_21
  9238   000082  EF45  F000         	goto	i1u424_20
  9239   000086                     i1u424_21:
  9240   000086  EF53  F000         	goto	i1l4228
  9241   00008A                     i1u424_20:
  9242   00008A                     
  9243                           ;main.c: 78:             Lcd_Set_Cursor(1,8);
  9244   00008A  0E08               	movlw	8
  9245   00008C  6E0D               	movwf	i1Lcd_Set_Cursor@b^0,c
  9246   00008E  0E01               	movlw	1
  9247   000090  EC55  F018         	call	i1_Lcd_Set_Cursor
  9248   000094                     
  9249                           ;main.c: 79:             Lcd_Write_String("L2:ON ");
  9250   000094  0E51               	movlw	low STR_5
  9251   000096  6E0E               	movwf	i1Lcd_Write_String@a^0,c
  9252   000098  0E08               	movlw	high STR_5
  9253   00009A  6E0F               	movwf	(i1Lcd_Write_String@a+1)^0,c
  9254   00009C  EC3E  F019         	call	i1_Lcd_Write_String	;wreg free
  9255   0000A0                     
  9256                           ;main.c: 80:             LATCbits.LATC1=1;
  9257   0000A0  828B               	bsf	139,1,c	;volatile
  9258                           
  9259                           ;main.c: 81:         }
  9260   0000A2  EF0D  F001         	goto	i1l235
  9261   0000A6                     i1l4228:
  9262   0000A6  0E65               	movlw	101
  9263   0000A8  1834               	xorwf	_dato_Rx^0,w,c
  9264   0000AA  A4D8               	btfss	status,2,c
  9265   0000AC  EF5A  F000         	goto	i1u425_21
  9266   0000B0  EF5C  F000         	goto	i1u425_20
  9267   0000B4                     i1u425_21:
  9268   0000B4  EF6A  F000         	goto	i1l4236
  9269   0000B8                     i1u425_20:
  9270   0000B8                     
  9271                           ;main.c: 83:             Lcd_Set_Cursor(2,5);
  9272   0000B8  0E05               	movlw	5
  9273   0000BA  6E0D               	movwf	i1Lcd_Set_Cursor@b^0,c
  9274   0000BC  0E02               	movlw	2
  9275   0000BE  EC55  F018         	call	i1_Lcd_Set_Cursor
  9276   0000C2                     
  9277                           ;main.c: 84:             Lcd_Write_String("L3:ON ");
  9278   0000C2  0E58               	movlw	low STR_6
  9279   0000C4  6E0E               	movwf	i1Lcd_Write_String@a^0,c
  9280   0000C6  0E08               	movlw	high STR_6
  9281   0000C8  6E0F               	movwf	(i1Lcd_Write_String@a+1)^0,c
  9282   0000CA  EC3E  F019         	call	i1_Lcd_Write_String	;wreg free
  9283   0000CE                     
  9284                           ;main.c: 85:             LATCbits.LATC2=1;
  9285   0000CE  848B               	bsf	139,2,c	;volatile
  9286                           
  9287                           ;main.c: 86:         }
  9288   0000D0  EF0D  F001         	goto	i1l235
  9289   0000D4                     i1l4236:
  9290   0000D4  0E61               	movlw	97
  9291   0000D6  1834               	xorwf	_dato_Rx^0,w,c
  9292   0000D8  A4D8               	btfss	status,2,c
  9293   0000DA  EF71  F000         	goto	i1u426_21
  9294   0000DE  EF73  F000         	goto	i1u426_20
  9295   0000E2                     i1u426_21:
  9296   0000E2  EF81  F000         	goto	i1l4244
  9297   0000E6                     i1u426_20:
  9298   0000E6                     
  9299                           ;main.c: 88:             Lcd_Set_Cursor(1,1);
  9300   0000E6  0E01               	movlw	1
  9301   0000E8  6E0D               	movwf	i1Lcd_Set_Cursor@b^0,c
  9302   0000EA  0E01               	movlw	1
  9303   0000EC  EC55  F018         	call	i1_Lcd_Set_Cursor
  9304   0000F0                     
  9305                           ;main.c: 89:             Lcd_Write_String("L1:OFF");
  9306   0000F0  0E5F               	movlw	low STR_7
  9307   0000F2  6E0E               	movwf	i1Lcd_Write_String@a^0,c
  9308   0000F4  0E08               	movlw	high STR_7
  9309   0000F6  6E0F               	movwf	(i1Lcd_Write_String@a+1)^0,c
  9310   0000F8  EC3E  F019         	call	i1_Lcd_Write_String	;wreg free
  9311   0000FC                     
  9312                           ;main.c: 90:             LATCbits.LATC0=0;
  9313   0000FC  908B               	bcf	139,0,c	;volatile
  9314                           
  9315                           ;main.c: 91:         }
  9316   0000FE  EF0D  F001         	goto	i1l235
  9317   000102                     i1l4244:
  9318   000102  0E73               	movlw	115
  9319   000104  1834               	xorwf	_dato_Rx^0,w,c
  9320   000106  A4D8               	btfss	status,2,c
  9321   000108  EF88  F000         	goto	i1u427_21
  9322   00010C  EF8A  F000         	goto	i1u427_20
  9323   000110                     i1u427_21:
  9324   000110  EF98  F000         	goto	i1l4252
  9325   000114                     i1u427_20:
  9326   000114                     
  9327                           ;main.c: 93:             Lcd_Set_Cursor(1,8);
  9328   000114  0E08               	movlw	8
  9329   000116  6E0D               	movwf	i1Lcd_Set_Cursor@b^0,c
  9330   000118  0E01               	movlw	1
  9331   00011A  EC55  F018         	call	i1_Lcd_Set_Cursor
  9332   00011E                     
  9333                           ;main.c: 94:             Lcd_Write_String("L2:OFF");
  9334   00011E  0E66               	movlw	low STR_8
  9335   000120  6E0E               	movwf	i1Lcd_Write_String@a^0,c
  9336   000122  0E08               	movlw	high STR_8
  9337   000124  6E0F               	movwf	(i1Lcd_Write_String@a+1)^0,c
  9338   000126  EC3E  F019         	call	i1_Lcd_Write_String	;wreg free
  9339   00012A                     
  9340                           ;main.c: 95:             LATCbits.LATC1=0;
  9341   00012A  928B               	bcf	139,1,c	;volatile
  9342                           
  9343                           ;main.c: 96:         }
  9344   00012C  EF0D  F001         	goto	i1l235
  9345   000130                     i1l4252:
  9346   000130  0E64               	movlw	100
  9347   000132  1834               	xorwf	_dato_Rx^0,w,c
  9348   000134  A4D8               	btfss	status,2,c
  9349   000136  EF9F  F000         	goto	i1u428_21
  9350   00013A  EFA1  F000         	goto	i1u428_20
  9351   00013E                     i1u428_21:
  9352   00013E  EFAF  F000         	goto	i1l4260
  9353   000142                     i1u428_20:
  9354   000142                     
  9355                           ;main.c: 98:             Lcd_Set_Cursor(2,5);
  9356   000142  0E05               	movlw	5
  9357   000144  6E0D               	movwf	i1Lcd_Set_Cursor@b^0,c
  9358   000146  0E02               	movlw	2
  9359   000148  EC55  F018         	call	i1_Lcd_Set_Cursor
  9360   00014C                     
  9361                           ;main.c: 99:             Lcd_Write_String("L3:OFF");
  9362   00014C  0E6D               	movlw	low STR_9
  9363   00014E  6E0E               	movwf	i1Lcd_Write_String@a^0,c
  9364   000150  0E08               	movlw	high STR_9
  9365   000152  6E0F               	movwf	(i1Lcd_Write_String@a+1)^0,c
  9366   000154  EC3E  F019         	call	i1_Lcd_Write_String	;wreg free
  9367   000158                     
  9368                           ;main.c: 100:             LATCbits.LATC2=0;
  9369   000158  948B               	bcf	139,2,c	;volatile
  9370                           
  9371                           ;main.c: 101:         }
  9372   00015A  EF0D  F001         	goto	i1l235
  9373   00015E                     i1l4260:
  9374   00015E  0E72               	movlw	114
  9375   000160  1834               	xorwf	_dato_Rx^0,w,c
  9376   000162  A4D8               	btfss	status,2,c
  9377   000164  EFB6  F000         	goto	i1u429_21
  9378   000168  EFB8  F000         	goto	i1u429_20
  9379   00016C                     i1u429_21:
  9380   00016C  EFDE  F000         	goto	i1l4278
  9381   000170                     i1u429_20:
  9382   000170                     
  9383                           ;main.c: 103:             Lcd_Set_Cursor(1,1);
  9384   000170  0E01               	movlw	1
  9385   000172  6E0D               	movwf	i1Lcd_Set_Cursor@b^0,c
  9386   000174  0E01               	movlw	1
  9387   000176  EC55  F018         	call	i1_Lcd_Set_Cursor
  9388   00017A                     
  9389                           ;main.c: 104:             Lcd_Write_String("L1:ON ");
  9390   00017A  0E4A               	movlw	low STR_4
  9391   00017C  6E0E               	movwf	i1Lcd_Write_String@a^0,c
  9392   00017E  0E08               	movlw	high STR_4
  9393   000180  6E0F               	movwf	(i1Lcd_Write_String@a+1)^0,c
  9394   000182  EC3E  F019         	call	i1_Lcd_Write_String	;wreg free
  9395   000186                     
  9396                           ;main.c: 105:             Lcd_Set_Cursor(1,8);
  9397   000186  0E08               	movlw	8
  9398   000188  6E0D               	movwf	i1Lcd_Set_Cursor@b^0,c
  9399   00018A  0E01               	movlw	1
  9400   00018C  EC55  F018         	call	i1_Lcd_Set_Cursor
  9401                           
  9402                           ;main.c: 106:             Lcd_Write_String("L2:ON ");
  9403   000190  0E51               	movlw	low STR_5
  9404   000192  6E0E               	movwf	i1Lcd_Write_String@a^0,c
  9405   000194  0E08               	movlw	high STR_5
  9406   000196  6E0F               	movwf	(i1Lcd_Write_String@a+1)^0,c
  9407   000198  EC3E  F019         	call	i1_Lcd_Write_String	;wreg free
  9408   00019C                     
  9409                           ;main.c: 107:             Lcd_Set_Cursor(2,5);
  9410   00019C  0E05               	movlw	5
  9411   00019E  6E0D               	movwf	i1Lcd_Set_Cursor@b^0,c
  9412   0001A0  0E02               	movlw	2
  9413   0001A2  EC55  F018         	call	i1_Lcd_Set_Cursor
  9414   0001A6                     
  9415                           ;main.c: 108:             Lcd_Write_String("L3:ON ");
  9416   0001A6  0E58               	movlw	low STR_6
  9417   0001A8  6E0E               	movwf	i1Lcd_Write_String@a^0,c
  9418   0001AA  0E08               	movlw	high STR_6
  9419   0001AC  6E0F               	movwf	(i1Lcd_Write_String@a+1)^0,c
  9420   0001AE  EC3E  F019         	call	i1_Lcd_Write_String	;wreg free
  9421   0001B2                     
  9422                           ;main.c: 109:             LATCbits.LATC0=1;
  9423   0001B2  808B               	bsf	139,0,c	;volatile
  9424   0001B4                     
  9425                           ;main.c: 110:             LATCbits.LATC1=1;
  9426   0001B4  828B               	bsf	139,1,c	;volatile
  9427   0001B6                     
  9428                           ;main.c: 111:             LATCbits.LATC2=1;
  9429   0001B6  848B               	bsf	139,2,c	;volatile
  9430                           
  9431                           ;main.c: 112:         }
  9432   0001B8  EF0D  F001         	goto	i1l235
  9433   0001BC                     i1l4278:
  9434   0001BC  0E66               	movlw	102
  9435   0001BE  1834               	xorwf	_dato_Rx^0,w,c
  9436   0001C0  A4D8               	btfss	status,2,c
  9437   0001C2  EFE5  F000         	goto	i1u430_21
  9438   0001C6  EFE7  F000         	goto	i1u430_20
  9439   0001CA                     i1u430_21:
  9440   0001CA  EF0D  F001         	goto	i1l229
  9441   0001CE                     i1u430_20:
  9442   0001CE                     
  9443                           ;main.c: 114:             Lcd_Set_Cursor(1,1);
  9444   0001CE  0E01               	movlw	1
  9445   0001D0  6E0D               	movwf	i1Lcd_Set_Cursor@b^0,c
  9446   0001D2  0E01               	movlw	1
  9447   0001D4  EC55  F018         	call	i1_Lcd_Set_Cursor
  9448   0001D8                     
  9449                           ;main.c: 115:             Lcd_Write_String("L1:OFF");
  9450   0001D8  0E5F               	movlw	low STR_7
  9451   0001DA  6E0E               	movwf	i1Lcd_Write_String@a^0,c
  9452   0001DC  0E08               	movlw	high STR_7
  9453   0001DE  6E0F               	movwf	(i1Lcd_Write_String@a+1)^0,c
  9454   0001E0  EC3E  F019         	call	i1_Lcd_Write_String	;wreg free
  9455   0001E4                     
  9456                           ;main.c: 116:             Lcd_Set_Cursor(1,8);
  9457   0001E4  0E08               	movlw	8
  9458   0001E6  6E0D               	movwf	i1Lcd_Set_Cursor@b^0,c
  9459   0001E8  0E01               	movlw	1
  9460   0001EA  EC55  F018         	call	i1_Lcd_Set_Cursor
  9461                           
  9462                           ;main.c: 117:             Lcd_Write_String("L2:OFF");
  9463   0001EE  0E66               	movlw	low STR_8
  9464   0001F0  6E0E               	movwf	i1Lcd_Write_String@a^0,c
  9465   0001F2  0E08               	movlw	high STR_8
  9466   0001F4  6E0F               	movwf	(i1Lcd_Write_String@a+1)^0,c
  9467   0001F6  EC3E  F019         	call	i1_Lcd_Write_String	;wreg free
  9468   0001FA                     
  9469                           ;main.c: 118:             Lcd_Set_Cursor(2,5);
  9470   0001FA  0E05               	movlw	5
  9471   0001FC  6E0D               	movwf	i1Lcd_Set_Cursor@b^0,c
  9472   0001FE  0E02               	movlw	2
  9473   000200  EC55  F018         	call	i1_Lcd_Set_Cursor
  9474   000204                     
  9475                           ;main.c: 119:             Lcd_Write_String("L3:OFF");
  9476   000204  0E6D               	movlw	low STR_9
  9477   000206  6E0E               	movwf	i1Lcd_Write_String@a^0,c
  9478   000208  0E08               	movlw	high STR_9
  9479   00020A  6E0F               	movwf	(i1Lcd_Write_String@a+1)^0,c
  9480   00020C  EC3E  F019         	call	i1_Lcd_Write_String	;wreg free
  9481   000210                     
  9482                           ;main.c: 120:             LATCbits.LATC0=0;
  9483   000210  908B               	bcf	139,0,c	;volatile
  9484   000212                     
  9485                           ;main.c: 121:             LATCbits.LATC1=0;
  9486   000212  928B               	bcf	139,1,c	;volatile
  9487   000214                     
  9488                           ;main.c: 122:             LATCbits.LATC2=0;
  9489   000214  948B               	bcf	139,2,c	;volatile
  9490   000216  EF0D  F001         	goto	i1l235
  9491   00021A                     i1l229:
  9492   00021A                     i1l235:
  9493   00021A  C01A  FFF5         	movff	??_ISR_L+6,tablat
  9494   00021E  C019  FFF8         	movff	??_ISR_L+5,tblptru
  9495   000222  C018  FFF7         	movff	??_ISR_L+4,tblptrh
  9496   000226  C017  FFF6         	movff	??_ISR_L+3,tblptrl
  9497   00022A  C016  FFE0         	movff	??_ISR_L+2,bsr
  9498   00022E  C015  FFE8         	movff	??_ISR_L+1,wreg
  9499   000232  C014  FFD8         	movff	??_ISR_L,status
  9500   000236  9045               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  9501   000238  0010               	retfie	
  9502   00023A                     __end_of_ISR_L:
  9503                           	callstack 0
  9504                           
  9505 ;; *************** function i1_Lcd_Write_String *****************
  9506 ;; Defined at:
  9507 ;;		line 97 in file "lcd.c"
  9508 ;; Parameters:    Size  Location     Type
  9509 ;;  a               2   13[COMRAM] PTR unsigned char 
  9510 ;;		 -> STR_18(7), STR_17(7), STR_16(7), STR_15(7), 
  9511 ;;		 -> STR_14(7), STR_13(7), STR_12(7), STR_11(7), 
  9512 ;;		 -> STR_10(7), STR_9(7), STR_8(7), STR_7(7), 
  9513 ;;		 -> STR_6(7), STR_5(7), STR_4(7), 
  9514 ;; Auto vars:     Size  Location     Type
  9515 ;;  i               2   17[COMRAM] int 
  9516 ;; Return value:  Size  Location     Type
  9517 ;;                  1    wreg      void 
  9518 ;; Registers used:
  9519 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9520 ;; Tracked objects:
  9521 ;;		On entry : 0/0
  9522 ;;		On exit  : 0/0
  9523 ;;		Unchanged: 0/0
  9524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9525 ;;      Params:         2       0       0       0       0       0       0       0       0
  9526 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9527 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9528 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9529 ;;Total ram usage:        6 bytes
  9530 ;; Hardware stack levels used: 1
  9531 ;; Hardware stack levels required when called: 6
  9532 ;; This function calls:
  9533 ;;		i1_Lcd_Write_Char
  9534 ;; This function is called by:
  9535 ;;		_ISR_L
  9536 ;; This function uses a non-reentrant model
  9537 ;;
  9538                           
  9539                           	psect	text44
  9540   00327C                     __ptext44:
  9541                           	callstack 0
  9542   00327C                     i1_Lcd_Write_String:
  9543                           	callstack 15
  9544   00327C                     
  9545                           ;lcd.c: 97: void Lcd_Write_String(unsigned char *a);lcd.c: 98: {;lcd.c: 99:  int i;;lcd.
      +                          c: 100:  for(i=0;a[i]!='\0';i++)
  9546   00327C  0E00               	movlw	0
  9547   00327E  6E13               	movwf	(i1Lcd_Write_String@i+1)^0,c
  9548   003280  0E00               	movlw	0
  9549   003282  6E12               	movwf	i1Lcd_Write_String@i^0,c
  9550   003284  EF54  F019         	goto	i1l4162
  9551   003288                     i1l4158:
  9552                           
  9553                           ;lcd.c: 101:     Lcd_Write_Char(a[i]);
  9554   003288  5012               	movf	i1Lcd_Write_String@i^0,w,c
  9555   00328A  240E               	addwf	i1Lcd_Write_String@a^0,w,c
  9556   00328C  6E10               	movwf	??i1_Lcd_Write_String^0,c
  9557   00328E  5013               	movf	(i1Lcd_Write_String@i+1)^0,w,c
  9558   003290  200F               	addwfc	(i1Lcd_Write_String@a+1)^0,w,c
  9559   003292  6E11               	movwf	(??i1_Lcd_Write_String+1)^0,c
  9560   003294  C010  FFF6         	movff	??i1_Lcd_Write_String,tblptrl
  9561   003298  C011  FFF7         	movff	??i1_Lcd_Write_String+1,tblptrh
  9562   00329C                     	if	0	;tblptru may be non-zero
  9563   00329C                     	endif
  9564   00329C                     	if	0	;tblptru may be non-zero
  9565   00329C                     	endif
  9566   00329C  0008               	tblrd		*
  9567   00329E  50F5               	movf	tablat,w,c
  9568   0032A0  EC36  F01B         	call	i1_Lcd_Write_Char
  9569   0032A4  4A12               	infsnz	i1Lcd_Write_String@i^0,f,c
  9570   0032A6  2A13               	incf	(i1Lcd_Write_String@i+1)^0,f,c
  9571   0032A8                     i1l4162:
  9572   0032A8  5012               	movf	i1Lcd_Write_String@i^0,w,c
  9573   0032AA  240E               	addwf	i1Lcd_Write_String@a^0,w,c
  9574   0032AC  6E10               	movwf	??i1_Lcd_Write_String^0,c
  9575   0032AE  5013               	movf	(i1Lcd_Write_String@i+1)^0,w,c
  9576   0032B0  200F               	addwfc	(i1Lcd_Write_String@a+1)^0,w,c
  9577   0032B2  6E11               	movwf	(??i1_Lcd_Write_String+1)^0,c
  9578   0032B4  C010  FFF6         	movff	??i1_Lcd_Write_String,tblptrl
  9579   0032B8  C011  FFF7         	movff	??i1_Lcd_Write_String+1,tblptrh
  9580   0032BC                     	if	0	;tblptru may be non-zero
  9581   0032BC                     	endif
  9582   0032BC                     	if	0	;tblptru may be non-zero
  9583   0032BC                     	endif
  9584   0032BC  0008               	tblrd		*
  9585   0032BE  50F5               	movf	tablat,w,c
  9586   0032C0  0900               	iorlw	0
  9587   0032C2  A4D8               	btfss	status,2,c
  9588   0032C4  EF66  F019         	goto	i1u420_21
  9589   0032C8  EF68  F019         	goto	i1u420_20
  9590   0032CC                     i1u420_21:
  9591   0032CC  EF44  F019         	goto	i1l4158
  9592   0032D0                     i1u420_20:
  9593   0032D0  0012               	return		;funcret
  9594   0032D2                     __end_ofi1_Lcd_Write_String:
  9595                           	callstack 0
  9596                           
  9597 ;; *************** function i1_Lcd_Write_Char *****************
  9598 ;; Defined at:
  9599 ;;		line 81 in file "lcd.c"
  9600 ;; Parameters:    Size  Location     Type
  9601 ;;  a               1    wreg     unsigned char 
  9602 ;; Auto vars:     Size  Location     Type
  9603 ;;  a               1   12[COMRAM] unsigned char 
  9604 ;;  y               1   11[COMRAM] unsigned char 
  9605 ;;  temp            1   10[COMRAM] unsigned char 
  9606 ;; Return value:  Size  Location     Type
  9607 ;;                  1    wreg      void 
  9608 ;; Registers used:
  9609 ;;		wreg, status,2, status,0, cstack
  9610 ;; Tracked objects:
  9611 ;;		On entry : 0/0
  9612 ;;		On exit  : 0/0
  9613 ;;		Unchanged: 0/0
  9614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9615 ;;      Params:         0       0       0       0       0       0       0       0       0
  9616 ;;      Locals:         3       0       0       0       0       0       0       0       0
  9617 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9618 ;;      Totals:         3       0       0       0       0       0       0       0       0
  9619 ;;Total ram usage:        3 bytes
  9620 ;; Hardware stack levels used: 1
  9621 ;; Hardware stack levels required when called: 5
  9622 ;; This function calls:
  9623 ;;		i1_Lcd_Port
  9624 ;; This function is called by:
  9625 ;;		i1_Lcd_Write_String
  9626 ;; This function uses a non-reentrant model
  9627 ;;
  9628                           
  9629                           	psect	text45
  9630   00366C                     __ptext45:
  9631                           	callstack 0
  9632   00366C                     i1_Lcd_Write_Char:
  9633                           	callstack 15
  9634                           
  9635                           ;incstack = 0
  9636                           ;i1Lcd_Write_Char@a stored from wreg
  9637   00366C  6E0D               	movwf	i1Lcd_Write_Char@a^0,c
  9638   00366E                     
  9639                           ;lcd.c: 81: void Lcd_Write_Char(unsigned char a);lcd.c: 82: {;lcd.c: 83:    char temp,y;
      +                          ;lcd.c: 84:    temp = a&0x0F;
  9640   00366E  500D               	movf	i1Lcd_Write_Char@a^0,w,c
  9641   003670  0B0F               	andlw	15
  9642   003672  6E0B               	movwf	i1Lcd_Write_Char@temp^0,c
  9643                           
  9644                           ;lcd.c: 85:    y = a&0xF0;
  9645   003674  500D               	movf	i1Lcd_Write_Char@a^0,w,c
  9646   003676  0BF0               	andlw	240
  9647   003678  6E0C               	movwf	i1Lcd_Write_Char@y^0,c
  9648   00367A                     
  9649                           ;lcd.c: 86:    LATDbits.LATD2 = 1;
  9650   00367A  848C               	bsf	140,2,c	;volatile
  9651   00367C                     
  9652                           ;lcd.c: 87:    Lcd_Port(y>>4);
  9653   00367C  380C               	swapf	i1Lcd_Write_Char@y^0,w,c
  9654   00367E  0B0F               	andlw	15
  9655   003680  ECE5  F018         	call	i1_Lcd_Port
  9656   003684                     
  9657                           ;lcd.c: 88:    LATDbits.LATD3 = 1;
  9658   003684  868C               	bsf	140,3,c	;volatile
  9659   003686                     
  9660                           ;lcd.c: 89:    _delay((unsigned long)((40)*(16000000UL/4000000.0)));
  9661   003686  0E35               	movlw	53
  9662   003688                     i1u630_27:
  9663   003688  2EE8               	decfsz	wreg,f,c
  9664   00368A  D7FE               	bra	i1u630_27
  9665   00368C  F000               	nop	
  9666   00368E                     
  9667                           ;lcd.c: 90:    LATDbits.LATD3 = 0;
  9668   00368E  968C               	bcf	140,3,c	;volatile
  9669   003690                     
  9670                           ;lcd.c: 91:    Lcd_Port(temp);
  9671   003690  500B               	movf	i1Lcd_Write_Char@temp^0,w,c
  9672   003692  ECE5  F018         	call	i1_Lcd_Port
  9673   003696                     
  9674                           ;lcd.c: 92:    LATDbits.LATD3 = 1;
  9675   003696  868C               	bsf	140,3,c	;volatile
  9676   003698                     
  9677                           ;lcd.c: 93:    _delay((unsigned long)((40)*(16000000UL/4000000.0)));
  9678   003698  0E35               	movlw	53
  9679   00369A                     i1u631_27:
  9680   00369A  2EE8               	decfsz	wreg,f,c
  9681   00369C  D7FE               	bra	i1u631_27
  9682   00369E  F000               	nop	
  9683   0036A0                     
  9684                           ;lcd.c: 94:    LATDbits.LATD3 = 0;
  9685   0036A0  968C               	bcf	140,3,c	;volatile
  9686   0036A2  0012               	return		;funcret
  9687   0036A4                     __end_ofi1_Lcd_Write_Char:
  9688                           	callstack 0
  9689                           
  9690 ;; *************** function i1_Lcd_Set_Cursor *****************
  9691 ;; Defined at:
  9692 ;;		line 41 in file "lcd.c"
  9693 ;; Parameters:    Size  Location     Type
  9694 ;;  a               1    wreg     unsigned char 
  9695 ;;  b               1   12[COMRAM] unsigned char 
  9696 ;; Auto vars:     Size  Location     Type
  9697 ;;  a               1   13[COMRAM] unsigned char 
  9698 ;;  temp            1   16[COMRAM] unsigned char 
  9699 ;;  y               1   15[COMRAM] unsigned char 
  9700 ;;  z               1   14[COMRAM] unsigned char 
  9701 ;; Return value:  Size  Location     Type
  9702 ;;                  1    wreg      void 
  9703 ;; Registers used:
  9704 ;;		wreg, status,2, status,0, cstack
  9705 ;; Tracked objects:
  9706 ;;		On entry : 0/0
  9707 ;;		On exit  : 0/0
  9708 ;;		Unchanged: 0/0
  9709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9710 ;;      Params:         1       0       0       0       0       0       0       0       0
  9711 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9712 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9713 ;;      Totals:         5       0       0       0       0       0       0       0       0
  9714 ;;Total ram usage:        5 bytes
  9715 ;; Hardware stack levels used: 1
  9716 ;; Hardware stack levels required when called: 6
  9717 ;; This function calls:
  9718 ;;		i1_Lcd_Cmd
  9719 ;; This function is called by:
  9720 ;;		_ISR_L
  9721 ;; This function uses a non-reentrant model
  9722 ;;
  9723                           
  9724                           	psect	text46
  9725   0030AA                     __ptext46:
  9726                           	callstack 0
  9727   0030AA                     i1_Lcd_Set_Cursor:
  9728                           	callstack 15
  9729                           
  9730                           ;incstack = 0
  9731                           ;i1Lcd_Set_Cursor@a stored from wreg
  9732   0030AA  6E0E               	movwf	i1Lcd_Set_Cursor@a^0,c
  9733   0030AC                     
  9734                           ;lcd.c: 41: void Lcd_Set_Cursor(unsigned char a, unsigned char b);lcd.c: 42: {;lcd.c: 43
      +                          :  char temp,z,y;;lcd.c: 44:  if(a == 1)
  9735   0030AC  040E               	decf	i1Lcd_Set_Cursor@a^0,w,c
  9736   0030AE  A4D8               	btfss	status,2,c
  9737   0030B0  EF5C  F018         	goto	i1u418_21
  9738   0030B4  EF5E  F018         	goto	i1u418_20
  9739   0030B8                     i1u418_21:
  9740   0030B8  EF6F  F018         	goto	i1l4148
  9741   0030BC                     i1u418_20:
  9742   0030BC                     
  9743                           ;lcd.c: 45:  {;lcd.c: 46:    temp = 0x80 + b - 1;
  9744   0030BC  500D               	movf	i1Lcd_Set_Cursor@b^0,w,c
  9745   0030BE  0F7F               	addlw	127
  9746   0030C0  6E11               	movwf	i1Lcd_Set_Cursor@temp^0,c
  9747                           
  9748                           ;lcd.c: 47:   z = temp>>4;
  9749   0030C2  3811               	swapf	i1Lcd_Set_Cursor@temp^0,w,c
  9750   0030C4  0B0F               	andlw	15
  9751   0030C6  6E0F               	movwf	i1Lcd_Set_Cursor@z^0,c
  9752                           
  9753                           ;lcd.c: 48:   y = temp & 0x0F;
  9754   0030C8  5011               	movf	i1Lcd_Set_Cursor@temp^0,w,c
  9755   0030CA  0B0F               	andlw	15
  9756   0030CC  6E10               	movwf	i1Lcd_Set_Cursor@y^0,c
  9757   0030CE                     
  9758                           ;lcd.c: 49:   Lcd_Cmd(z);
  9759   0030CE  500F               	movf	i1Lcd_Set_Cursor@z^0,w,c
  9760   0030D0  ECB7  F01B         	call	i1_Lcd_Cmd
  9761   0030D4                     
  9762                           ;lcd.c: 50:   Lcd_Cmd(y);
  9763   0030D4  5010               	movf	i1Lcd_Set_Cursor@y^0,w,c
  9764   0030D6  ECB7  F01B         	call	i1_Lcd_Cmd
  9765                           
  9766                           ;lcd.c: 51:  }
  9767   0030DA  EF87  F018         	goto	i1l81
  9768   0030DE                     i1l4148:
  9769   0030DE  0E02               	movlw	2
  9770   0030E0  180E               	xorwf	i1Lcd_Set_Cursor@a^0,w,c
  9771   0030E2  A4D8               	btfss	status,2,c
  9772   0030E4  EF76  F018         	goto	i1u419_21
  9773   0030E8  EF78  F018         	goto	i1u419_20
  9774   0030EC                     i1u419_21:
  9775   0030EC  EF87  F018         	goto	i1l81
  9776   0030F0                     i1u419_20:
  9777   0030F0                     
  9778                           ;lcd.c: 53:  {;lcd.c: 54:   temp = 0xC0 + b - 1;
  9779   0030F0  500D               	movf	i1Lcd_Set_Cursor@b^0,w,c
  9780   0030F2  0FBF               	addlw	191
  9781   0030F4  6E11               	movwf	i1Lcd_Set_Cursor@temp^0,c
  9782                           
  9783                           ;lcd.c: 55:   z = temp>>4;
  9784   0030F6  3811               	swapf	i1Lcd_Set_Cursor@temp^0,w,c
  9785   0030F8  0B0F               	andlw	15
  9786   0030FA  6E0F               	movwf	i1Lcd_Set_Cursor@z^0,c
  9787                           
  9788                           ;lcd.c: 56:   y = temp & 0x0F;
  9789   0030FC  5011               	movf	i1Lcd_Set_Cursor@temp^0,w,c
  9790   0030FE  0B0F               	andlw	15
  9791   003100  6E10               	movwf	i1Lcd_Set_Cursor@y^0,c
  9792   003102                     
  9793                           ;lcd.c: 57:   Lcd_Cmd(z);
  9794   003102  500F               	movf	i1Lcd_Set_Cursor@z^0,w,c
  9795   003104  ECB7  F01B         	call	i1_Lcd_Cmd
  9796   003108                     
  9797                           ;lcd.c: 58:   Lcd_Cmd(y);
  9798   003108  5010               	movf	i1Lcd_Set_Cursor@y^0,w,c
  9799   00310A  ECB7  F01B         	call	i1_Lcd_Cmd
  9800   00310E                     i1l81:
  9801   00310E  0012               	return		;funcret
  9802   003110                     __end_ofi1_Lcd_Set_Cursor:
  9803                           	callstack 0
  9804                           
  9805 ;; *************** function i1_Lcd_Cmd *****************
  9806 ;; Defined at:
  9807 ;;		line 26 in file "lcd.c"
  9808 ;; Parameters:    Size  Location     Type
  9809 ;;  a               1    wreg     unsigned char 
  9810 ;; Auto vars:     Size  Location     Type
  9811 ;;  a               1   11[COMRAM] unsigned char 
  9812 ;; Return value:  Size  Location     Type
  9813 ;;                  1    wreg      void 
  9814 ;; Registers used:
  9815 ;;		wreg, status,2, cstack
  9816 ;; Tracked objects:
  9817 ;;		On entry : 0/0
  9818 ;;		On exit  : 0/0
  9819 ;;		Unchanged: 0/0
  9820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9821 ;;      Params:         0       0       0       0       0       0       0       0       0
  9822 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9823 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9824 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9825 ;;Total ram usage:        2 bytes
  9826 ;; Hardware stack levels used: 1
  9827 ;; Hardware stack levels required when called: 5
  9828 ;; This function calls:
  9829 ;;		i1_Lcd_Port
  9830 ;; This function is called by:
  9831 ;;		i1_Lcd_Set_Cursor
  9832 ;; This function uses a non-reentrant model
  9833 ;;
  9834                           
  9835                           	psect	text47
  9836   00376E                     __ptext47:
  9837                           	callstack 0
  9838   00376E                     i1_Lcd_Cmd:
  9839                           	callstack 15
  9840                           
  9841                           ;incstack = 0
  9842                           ;i1Lcd_Cmd@a stored from wreg
  9843   00376E  6E0C               	movwf	i1Lcd_Cmd@a^0,c
  9844   003770                     
  9845                           ;lcd.c: 26: void Lcd_Cmd(unsigned char a);lcd.c: 27: {;lcd.c: 28:  LATDbits.LATD2 = 0;
  9846   003770  948C               	bcf	140,2,c	;volatile
  9847   003772                     
  9848                           ;lcd.c: 29:  Lcd_Port(a);
  9849   003772  500C               	movf	i1Lcd_Cmd@a^0,w,c
  9850   003774  ECE5  F018         	call	i1_Lcd_Port
  9851   003778                     
  9852                           ;lcd.c: 30:  LATDbits.LATD3 = 1;
  9853   003778  868C               	bsf	140,3,c	;volatile
  9854   00377A                     
  9855                           ;lcd.c: 31:         _delay((unsigned long)((4)*(16000000UL/4000.0)));
  9856   00377A  0E15               	movlw	21
  9857   00377C  6E0B               	movwf	??i1_Lcd_Cmd^0,c
  9858   00377E  0EC6               	movlw	198
  9859   003780                     i1u632_27:
  9860   003780  2EE8               	decfsz	wreg,f,c
  9861   003782  D7FE               	bra	i1u632_27
  9862   003784  2E0B               	decfsz	??i1_Lcd_Cmd^0,f,c
  9863   003786  D7FC               	bra	i1u632_27
  9864   003788  D000               	nop2	
  9865   00378A                     
  9866                           ;lcd.c: 32:         LATDbits.LATD3 = 0;
  9867   00378A  968C               	bcf	140,3,c	;volatile
  9868   00378C  0012               	return		;funcret
  9869   00378E                     __end_ofi1_Lcd_Cmd:
  9870                           	callstack 0
  9871                           
  9872 ;; *************** function i1_Lcd_Port *****************
  9873 ;; Defined at:
  9874 ;;		line 3 in file "lcd.c"
  9875 ;; Parameters:    Size  Location     Type
  9876 ;;  a               1    wreg     unsigned char 
  9877 ;; Auto vars:     Size  Location     Type
  9878 ;;  a               1    9[COMRAM] unsigned char 
  9879 ;; Return value:  Size  Location     Type
  9880 ;;                  1    wreg      void 
  9881 ;; Registers used:
  9882 ;;		wreg
  9883 ;; Tracked objects:
  9884 ;;		On entry : 0/0
  9885 ;;		On exit  : 0/0
  9886 ;;		Unchanged: 0/0
  9887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9888 ;;      Params:         0       0       0       0       0       0       0       0       0
  9889 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9890 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9891 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9892 ;;Total ram usage:        1 bytes
  9893 ;; Hardware stack levels used: 1
  9894 ;; Hardware stack levels required when called: 4
  9895 ;; This function calls:
  9896 ;;		Nothing
  9897 ;; This function is called by:
  9898 ;;		i1_Lcd_Cmd
  9899 ;;		i1_Lcd_Write_Char
  9900 ;; This function uses a non-reentrant model
  9901 ;;
  9902                           
  9903                           	psect	text48
  9904   0031CA                     __ptext48:
  9905                           	callstack 0
  9906   0031CA                     i1_Lcd_Port:
  9907                           	callstack 15
  9908                           
  9909                           ;incstack = 0
  9910                           ;i1Lcd_Port@a stored from wreg
  9911   0031CA  6E0A               	movwf	i1Lcd_Port@a^0,c
  9912   0031CC                     
  9913                           ;lcd.c: 3: void Lcd_Port(unsigned char a);lcd.c: 4: {;lcd.c: 5:  if(a & 1)
  9914   0031CC  A00A               	btfss	i1Lcd_Port@a^0,0,c
  9915   0031CE  EFEB  F018         	goto	i1u392_21
  9916   0031D2  EFED  F018         	goto	i1u392_20
  9917   0031D6                     i1u392_21:
  9918   0031D6  EFF0  F018         	goto	i1l61
  9919   0031DA                     i1u392_20:
  9920   0031DA                     
  9921                           ;lcd.c: 6:   LATDbits.LATD4 = 1;
  9922   0031DA  888C               	bsf	140,4,c	;volatile
  9923   0031DC  EFF1  F018         	goto	i1l3878
  9924   0031E0                     i1l61:
  9925                           
  9926                           ;lcd.c: 8:   LATDbits.LATD4 = 0;
  9927   0031E0  988C               	bcf	140,4,c	;volatile
  9928   0031E2                     i1l3878:
  9929                           
  9930                           ;lcd.c: 10:  if(a & 2)
  9931   0031E2  A20A               	btfss	i1Lcd_Port@a^0,1,c
  9932   0031E4  EFF6  F018         	goto	i1u393_21
  9933   0031E8  EFF8  F018         	goto	i1u393_20
  9934   0031EC                     i1u393_21:
  9935   0031EC  EFFB  F018         	goto	i1l63
  9936   0031F0                     i1u393_20:
  9937   0031F0                     
  9938                           ;lcd.c: 11:   LATDbits.LATD5 = 1;
  9939   0031F0  8A8C               	bsf	140,5,c	;volatile
  9940   0031F2  EFFC  F018         	goto	i1l3882
  9941   0031F6                     i1l63:
  9942                           
  9943                           ;lcd.c: 13:   LATDbits.LATD5 = 0;
  9944   0031F6  9A8C               	bcf	140,5,c	;volatile
  9945   0031F8                     i1l3882:
  9946                           
  9947                           ;lcd.c: 15:  if(a & 4)
  9948   0031F8  A40A               	btfss	i1Lcd_Port@a^0,2,c
  9949   0031FA  EF01  F019         	goto	i1u394_21
  9950   0031FE  EF03  F019         	goto	i1u394_20
  9951   003202                     i1u394_21:
  9952   003202  EF06  F019         	goto	i1l65
  9953   003206                     i1u394_20:
  9954   003206                     
  9955                           ;lcd.c: 16:   LATDbits.LATD6 = 1;
  9956   003206  8C8C               	bsf	140,6,c	;volatile
  9957   003208  EF07  F019         	goto	i1l3886
  9958   00320C                     i1l65:
  9959                           
  9960                           ;lcd.c: 18:   LATDbits.LATD6 = 0;
  9961   00320C  9C8C               	bcf	140,6,c	;volatile
  9962   00320E                     i1l3886:
  9963                           
  9964                           ;lcd.c: 20:  if(a & 8)
  9965   00320E  A60A               	btfss	i1Lcd_Port@a^0,3,c
  9966   003210  EF0C  F019         	goto	i1u395_21
  9967   003214  EF0E  F019         	goto	i1u395_20
  9968   003218                     i1u395_21:
  9969   003218  EF11  F019         	goto	i1l67
  9970   00321C                     i1u395_20:
  9971   00321C                     
  9972                           ;lcd.c: 21:   LATDbits.LATD7 = 1;
  9973   00321C  8E8C               	bsf	140,7,c	;volatile
  9974   00321E  EF12  F019         	goto	i1l69
  9975   003222                     i1l67:
  9976                           
  9977                           ;lcd.c: 23:   LATDbits.LATD7 = 0;
  9978   003222  9E8C               	bcf	140,7,c	;volatile
  9979   003224                     i1l69:
  9980   003224  0012               	return		;funcret
  9981   003226                     __end_ofi1_Lcd_Port:
  9982                           	callstack 0
  9983                           
  9984 ;; *************** function _ISR_H *****************
  9985 ;; Defined at:
  9986 ;;		line 58 in file "main.c"
  9987 ;; Parameters:    Size  Location     Type
  9988 ;;		None
  9989 ;; Auto vars:     Size  Location     Type
  9990 ;;		None
  9991 ;; Return value:  Size  Location     Type
  9992 ;;                  1    wreg      void 
  9993 ;; Registers used:
  9994 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9995 ;; Tracked objects:
  9996 ;;		On entry : 0/0
  9997 ;;		On exit  : 0/0
  9998 ;;		Unchanged: 0/0
  9999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10000 ;;      Params:         0       0       0       0       0       0       0       0       0
 10001 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10002 ;;      Temps:          6       0       0       0       0       0       0       0       0
 10003 ;;      Totals:         6       0       0       0       0       0       0       0       0
 10004 ;;Total ram usage:        6 bytes
 10005 ;; Hardware stack levels used: 1
 10006 ;; Hardware stack levels required when called: 3
 10007 ;; This function calls:
 10008 ;;		_Enviar_Data_UART
 10009 ;; This function is called by:
 10010 ;;		Interrupt level 2
 10011 ;; This function uses a non-reentrant model
 10012 ;;
 10013                           
 10014                           	psect	intcode
 10015   000008                     __pintcode:
 10016                           	callstack 0
 10017   000008                     _ISR_H:
 10018                           	callstack 15
 10019                           
 10020                           ;incstack = 0
 10021   000008  8245               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 10022   00000A  EF0F  F01A         	goto	int_func
 10023                           
 10024                           	psect	intcode_body
 10025   00341E                     __pintcode_body:
 10026                           	callstack 15
 10027   00341E                     int_func:
 10028                           	callstack 15
 10029   00341E  CFE1 F004          	movff	fsr1l,??_ISR_H
 10030   003422  CFE2 F005          	movff	fsr1h,??_ISR_H+1
 10031   003426  CFF6 F006          	movff	tblptrl,??_ISR_H+2
 10032   00342A  CFF7 F007          	movff	tblptrh,??_ISR_H+3
 10033   00342E  CFF8 F008          	movff	tblptru,??_ISR_H+4
 10034   003432  CFF5 F009          	movff	tablat,??_ISR_H+5
 10035   003436                     
 10036                           ;main.c: 59:     if(INTCONbits.TMR0IF==1){
 10037   003436  A4F2               	btfss	242,2,c	;volatile
 10038   003438  EF20  F01A         	goto	i2u421_41
 10039   00343C  EF22  F01A         	goto	i2u421_40
 10040   003440                     i2u421_41:
 10041   003440  EF29  F01A         	goto	i2l214
 10042   003444                     i2u421_40:
 10043   003444                     
 10044                           ;main.c: 60:         INTCONbits.TMR0IF=0;
 10045   003444  94F2               	bcf	242,2,c	;volatile
 10046   003446                     
 10047                           ;main.c: 61:         TMR0H=0x85;
 10048   003446  0E85               	movlw	133
 10049   003448  6ED7               	movwf	215,c	;volatile
 10050                           
 10051                           ;main.c: 62:         TMR0L=0xEE;
 10052   00344A  0EEE               	movlw	238
 10053   00344C  6ED6               	movwf	214,c	;volatile
 10054   00344E                     
 10055                           ;main.c: 63:         Enviar_Data_UART();
 10056   00344E  EC69  F019         	call	_Enviar_Data_UART	;wreg free
 10057   003452                     i2l214:
 10058   003452  C009  FFF5         	movff	??_ISR_H+5,tablat
 10059   003456  C008  FFF8         	movff	??_ISR_H+4,tblptru
 10060   00345A  C007  FFF7         	movff	??_ISR_H+3,tblptrh
 10061   00345E  C006  FFF6         	movff	??_ISR_H+2,tblptrl
 10062   003462  C005  FFE2         	movff	??_ISR_H+1,fsr1h
 10063   003466  C004  FFE1         	movff	??_ISR_H,fsr1l
 10064   00346A  9245               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 10065   00346C  0011               	retfie		f
 10066   00346E                     __end_of_ISR_H:
 10067                           	callstack 0
 10068                           
 10069 ;; *************** function _Enviar_Data_UART *****************
 10070 ;; Defined at:
 10071 ;;		line 151 in file "main.c"
 10072 ;; Parameters:    Size  Location     Type
 10073 ;;		None
 10074 ;; Auto vars:     Size  Location     Type
 10075 ;;		None
 10076 ;; Return value:  Size  Location     Type
 10077 ;;                  1    wreg      void 
 10078 ;; Registers used:
 10079 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10080 ;; Tracked objects:
 10081 ;;		On entry : 0/0
 10082 ;;		On exit  : 0/0
 10083 ;;		Unchanged: 0/0
 10084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10085 ;;      Params:         0       0       0       0       0       0       0       0       0
 10086 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10087 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10088 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10089 ;;Total ram usage:        0 bytes
 10090 ;; Hardware stack levels used: 1
 10091 ;; Hardware stack levels required when called: 2
 10092 ;; This function calls:
 10093 ;;		_USART_printString
 10094 ;; This function is called by:
 10095 ;;		_ISR_H
 10096 ;; This function uses a non-reentrant model
 10097 ;;
 10098                           
 10099                           	psect	text50
 10100   0032D2                     __ptext50:
 10101                           	callstack 0
 10102   0032D2                     _Enviar_Data_UART:
 10103                           	callstack 15
 10104   0032D2                     
 10105                           ;main.c: 153:     USART_printString("\r\r\rSistema de adquisición de datos: ");
 10106   0032D2  0E01               	movlw	low STR_19
 10107   0032D4  6E02               	movwf	USART_printString@Ptr_string^0,c
 10108   0032D6  0E08               	movlw	high STR_19
 10109   0032D8  6E03               	movwf	(USART_printString@Ptr_string+1)^0,c
 10110   0032DA  EC88  F018         	call	_USART_printString	;wreg free
 10111                           
 10112                           ;main.c: 154:     USART_printString("\rTemp LM35: ");
 10113   0032DE  0E26               	movlw	low STR_20
 10114   0032E0  6E02               	movwf	USART_printString@Ptr_string^0,c
 10115   0032E2  0E08               	movlw	high STR_20
 10116   0032E4  6E03               	movwf	(USART_printString@Ptr_string+1)^0,c
 10117   0032E6  EC88  F018         	call	_USART_printString	;wreg free
 10118                           
 10119                           ;main.c: 155:     USART_printString(Str_lm35);
 10120   0032EA  0EF5               	movlw	low _Str_lm35
 10121   0032EC  6E02               	movwf	USART_printString@Ptr_string^0,c
 10122   0032EE  0E00               	movlw	high _Str_lm35
 10123   0032F0  6E03               	movwf	(USART_printString@Ptr_string+1)^0,c
 10124   0032F2  EC88  F018         	call	_USART_printString	;wreg free
 10125                           
 10126                           ;main.c: 156:     USART_printString("\rTemp MCP: ");
 10127   0032F6  0E33               	movlw	low STR_21
 10128   0032F8  6E02               	movwf	USART_printString@Ptr_string^0,c
 10129   0032FA  0E08               	movlw	high STR_21
 10130   0032FC  6E03               	movwf	(USART_printString@Ptr_string+1)^0,c
 10131   0032FE  EC88  F018         	call	_USART_printString	;wreg free
 10132                           
 10133                           ;main.c: 157:     USART_printString(Str_mcp);
 10134   003302  0E3D               	movlw	low _Str_mcp
 10135   003304  6E02               	movwf	USART_printString@Ptr_string^0,c
 10136   003306  0E00               	movlw	high _Str_mcp
 10137   003308  6E03               	movwf	(USART_printString@Ptr_string+1)^0,c
 10138   00330A  EC88  F018         	call	_USART_printString	;wreg free
 10139                           
 10140                           ;main.c: 158:     USART_printString("\rVoltaje: ");
 10141   00330E  0E3F               	movlw	low STR_22
 10142   003310  6E02               	movwf	USART_printString@Ptr_string^0,c
 10143   003312  0E08               	movlw	high STR_22
 10144   003314  6E03               	movwf	(USART_printString@Ptr_string+1)^0,c
 10145   003316  EC88  F018         	call	_USART_printString	;wreg free
 10146                           
 10147                           ;main.c: 159:     USART_printString(Str_v1);
 10148   00331A  0E35               	movlw	low _Str_v1
 10149   00331C  6E02               	movwf	USART_printString@Ptr_string^0,c
 10150   00331E  0E00               	movlw	high _Str_v1
 10151   003320  6E03               	movwf	(USART_printString@Ptr_string+1)^0,c
 10152   003322  EC88  F018         	call	_USART_printString	;wreg free
 10153   003326  0012               	return		;funcret
 10154   003328                     __end_of_Enviar_Data_UART:
 10155                           	callstack 0
 10156                           
 10157 ;; *************** function _USART_printString *****************
 10158 ;; Defined at:
 10159 ;;		line 25 in file "../../00_USART_Ejm1/UART.X/USART.c"
 10160 ;; Parameters:    Size  Location     Type
 10161 ;;  Ptr_string      2    1[COMRAM] PTR unsigned char 
 10162 ;;		 -> STR_22(11), STR_21(12), STR_20(13), STR_19(37), 
 10163 ;;		 -> Str_v1(8), Str_mcp(8), Str_lm35(8), 
 10164 ;; Auto vars:     Size  Location     Type
 10165 ;;		None
 10166 ;; Return value:  Size  Location     Type
 10167 ;;                  1    wreg      void 
 10168 ;; Registers used:
 10169 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10170 ;; Tracked objects:
 10171 ;;		On entry : 0/0
 10172 ;;		On exit  : 0/0
 10173 ;;		Unchanged: 0/0
 10174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10175 ;;      Params:         2       0       0       0       0       0       0       0       0
 10176 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10177 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10178 ;;      Totals:         2       0       0       0       0       0       0       0       0
 10179 ;;Total ram usage:        2 bytes
 10180 ;; Hardware stack levels used: 1
 10181 ;; Hardware stack levels required when called: 1
 10182 ;; This function calls:
 10183 ;;		_USART_printChar
 10184 ;; This function is called by:
 10185 ;;		_Enviar_Data_UART
 10186 ;; This function uses a non-reentrant model
 10187 ;;
 10188                           
 10189                           	psect	text51
 10190   003110                     __ptext51:
 10191                           	callstack 0
 10192   003110                     _USART_printString:
 10193                           	callstack 15
 10194   003110                     
 10195                           ;../../00_USART_Ejm1/UART.X/USART.c: 26:     while(*Ptr_string!='\0'){
 10196   003110  EF9E  F018         	goto	i2l3896
 10197   003114                     i2l3892:
 10198                           
 10199                           ;../../00_USART_Ejm1/UART.X/USART.c: 27:         USART_printChar(*Ptr_string);
 10200   003114  C002  FFF6         	movff	USART_printString@Ptr_string,tblptrl
 10201   003118  C003  FFF7         	movff	USART_printString@Ptr_string+1,tblptrh
 10202   00311C  6AF8               	clrf	tblptru,c
 10203   00311E  0E07               	movlw	(high __ramtop+-1)
 10204   003120  64F7               	cpfsgt	tblptrh,c
 10205   003122  D003               	bra	i2u396_47
 10206   003124  0008               	tblrd		*
 10207   003126  50F5               	movf	tablat,w,c
 10208   003128  D005               	bra	i2u396_40
 10209   00312A                     i2u396_47:
 10210   00312A  CFF6 FFE1          	movff	tblptrl,fsr1l
 10211   00312E  CFF7 FFE2          	movff	tblptrh,fsr1h
 10212   003132  50E7               	movf	indf1,w,c
 10213   003134                     i2u396_40:
 10214   003134  ECEF  F01B         	call	_USART_printChar
 10215   003138                     
 10216                           ;../../00_USART_Ejm1/UART.X/USART.c: 28:         Ptr_string++;
 10217   003138  4A02               	infsnz	USART_printString@Ptr_string^0,f,c
 10218   00313A  2A03               	incf	(USART_printString@Ptr_string+1)^0,f,c
 10219   00313C                     i2l3896:
 10220                           
 10221                           ;../../00_USART_Ejm1/UART.X/USART.c: 26:     while(*Ptr_string!='\0'){
 10222   00313C  C002  FFF6         	movff	USART_printString@Ptr_string,tblptrl
 10223   003140  C003  FFF7         	movff	USART_printString@Ptr_string+1,tblptrh
 10224   003144  6AF8               	clrf	tblptru,c
 10225   003146  0E07               	movlw	(high __ramtop+-1)
 10226   003148  64F7               	cpfsgt	tblptrh,c
 10227   00314A  D003               	bra	i2u397_47
 10228   00314C  0008               	tblrd		*
 10229   00314E  50F5               	movf	tablat,w,c
 10230   003150  D005               	bra	i2u397_40
 10231   003152                     i2u397_47:
 10232   003152  CFF6 FFE1          	movff	tblptrl,fsr1l
 10233   003156  CFF7 FFE2          	movff	tblptrh,fsr1h
 10234   00315A  50E7               	movf	indf1,w,c
 10235   00315C                     i2u397_40:
 10236   00315C  0900               	iorlw	0
 10237   00315E  A4D8               	btfss	status,2,c
 10238   003160  EFB4  F018         	goto	i2u398_41
 10239   003164  EFB6  F018         	goto	i2u398_40
 10240   003168                     i2u398_41:
 10241   003168  EF8A  F018         	goto	i2l3892
 10242   00316C                     i2u398_40:
 10243   00316C  0012               	return		;funcret
 10244   00316E                     __end_of_USART_printString:
 10245                           	callstack 0
 10246                           
 10247 ;; *************** function _USART_printChar *****************
 10248 ;; Defined at:
 10249 ;;		line 21 in file "../../00_USART_Ejm1/UART.X/USART.c"
 10250 ;; Parameters:    Size  Location     Type
 10251 ;;  caracter        1    wreg     unsigned char 
 10252 ;; Auto vars:     Size  Location     Type
 10253 ;;  caracter        1    0[COMRAM] unsigned char 
 10254 ;; Return value:  Size  Location     Type
 10255 ;;                  1    wreg      void 
 10256 ;; Registers used:
 10257 ;;		wreg
 10258 ;; Tracked objects:
 10259 ;;		On entry : 0/0
 10260 ;;		On exit  : 0/0
 10261 ;;		Unchanged: 0/0
 10262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10263 ;;      Params:         0       0       0       0       0       0       0       0       0
 10264 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10265 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10266 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10267 ;;Total ram usage:        1 bytes
 10268 ;; Hardware stack levels used: 1
 10269 ;; This function calls:
 10270 ;;		Nothing
 10271 ;; This function is called by:
 10272 ;;		_USART_printString
 10273 ;; This function uses a non-reentrant model
 10274 ;;
 10275                           
 10276                           	psect	text52
 10277   0037DE                     __ptext52:
 10278                           	callstack 0
 10279   0037DE                     _USART_printChar:
 10280                           	callstack 15
 10281                           
 10282                           ;incstack = 0
 10283                           ;USART_printChar@caracter stored from wreg
 10284   0037DE  6E01               	movwf	USART_printChar@caracter^0,c
 10285   0037E0                     
 10286                           ;../../00_USART_Ejm1/UART.X/USART.c: 22:     TXREG=caracter;
 10287   0037E0  C001  FFAD         	movff	USART_printChar@caracter,4013	;volatile
 10288   0037E4                     i2l32:
 10289   0037E4  A2AC               	btfss	172,1,c	;volatile
 10290   0037E6  EFF7  F01B         	goto	i2u386_41
 10291   0037EA  EFF9  F01B         	goto	i2u386_40
 10292   0037EE                     i2u386_41:
 10293   0037EE  EFF2  F01B         	goto	i2l32
 10294   0037F2                     i2u386_40:
 10295   0037F2  0012               	return		;funcret
 10296   0037F4                     __end_of_USART_printChar:
 10297                           	callstack 0
 10298                           
 10299                           	psect	rparam
 10300   000000                     
 10301                           	psect	temp
 10302   000045                     btemp:
 10303                           	callstack 0
 10304   000045                     	ds	1
 10305   000000                     int$flags	set	btemp
 10306   000000                     wtemp8	set	btemp+1
 10307   000000                     ttemp5	set	btemp+1
 10308   000000                     ttemp6	set	btemp+4
 10309   000000                     ttemp7	set	btemp+8
 10310                           
 10311                           	psect	idloc
 10312                           
 10313                           ;Config register IDLOC0 @ 0x200000
 10314                           ;	unspecified, using default values
 10315   200000                     	org	2097152
 10316   200000  FF                 	db	255
 10317                           
 10318                           ;Config register IDLOC1 @ 0x200001
 10319                           ;	unspecified, using default values
 10320   200001                     	org	2097153
 10321   200001  FF                 	db	255
 10322                           
 10323                           ;Config register IDLOC2 @ 0x200002
 10324                           ;	unspecified, using default values
 10325   200002                     	org	2097154
 10326   200002  FF                 	db	255
 10327                           
 10328                           ;Config register IDLOC3 @ 0x200003
 10329                           ;	unspecified, using default values
 10330   200003                     	org	2097155
 10331   200003  FF                 	db	255
 10332                           
 10333                           ;Config register IDLOC4 @ 0x200004
 10334                           ;	unspecified, using default values
 10335   200004                     	org	2097156
 10336   200004  FF                 	db	255
 10337                           
 10338                           ;Config register IDLOC5 @ 0x200005
 10339                           ;	unspecified, using default values
 10340   200005                     	org	2097157
 10341   200005  FF                 	db	255
 10342                           
 10343                           ;Config register IDLOC6 @ 0x200006
 10344                           ;	unspecified, using default values
 10345   200006                     	org	2097158
 10346   200006  FF                 	db	255
 10347                           
 10348                           ;Config register IDLOC7 @ 0x200007
 10349                           ;	unspecified, using default values
 10350   200007                     	org	2097159
 10351   200007  FF                 	db	255
 10352                           
 10353                           	psect	config
 10354                           
 10355                           ;Config register CONFIG1L @ 0x300000
 10356                           ;	PLL Selection
 10357                           ;	PLLSEL = PLL4X, 4x clock multiplier
 10358                           ;	PLL Enable Configuration bit
 10359                           ;	CFGPLLEN = OFF, PLL Disabled (firmware controlled)
 10360                           ;	CPU System Clock Postscaler
 10361                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
 10362                           ;	Low Speed USB mode with 48 MHz system clock
 10363                           ;	LS48MHZ = SYS24X4, System clock at 24 MHz, USB clock divider is set to 4
 10364   300000                     	org	3145728
 10365   300000  00                 	db	0
 10366                           
 10367                           ;Config register CONFIG1H @ 0x300001
 10368                           ;	Oscillator Selection
 10369                           ;	FOSC = INTOSCIO, Internal oscillator
 10370                           ;	Primary Oscillator Shutdown
 10371                           ;	PCLKEN = ON, Primary oscillator enabled
 10372                           ;	Fail-Safe Clock Monitor
 10373                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 10374                           ;	Internal/External Oscillator Switchover
 10375                           ;	IESO = OFF, Oscillator Switchover mode disabled
 10376   300001                     	org	3145729
 10377   300001  28                 	db	40
 10378                           
 10379                           ;Config register CONFIG2L @ 0x300002
 10380                           ;	Power-up Timer Enable
 10381                           ;	nPWRTEN = ON, Power up timer enabled
 10382                           ;	Brown-out Reset Enable
 10383                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
 10384                           ;	Brown-out Reset Voltage
 10385                           ;	BORV = 190, BOR set to 1.9V nominal
 10386                           ;	Low-Power Brown-out Reset
 10387                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
 10388   300002                     	org	3145730
 10389   300002  5E                 	db	94
 10390                           
 10391                           ;Config register CONFIG2H @ 0x300003
 10392                           ;	Watchdog Timer Enable bits
 10393                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
 10394                           ;	Watchdog Timer Postscaler
 10395                           ;	WDTPS = 32768, 1:32768
 10396   300003                     	org	3145731
 10397   300003  3C                 	db	60
 10398                           
 10399                           ; Padding undefined space
 10400   300004                     	org	3145732
 10401   300004  FF                 	db	255
 10402                           
 10403                           ;Config register CONFIG3H @ 0x300005
 10404                           ;	CCP2 MUX bit
 10405                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
 10406                           ;	PORTB A/D Enable bit
 10407                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
 10408                           ;	Timer3 Clock Input MUX bit
 10409                           ;	T3CMX = RC0, T3CKI function is on RC0
 10410                           ;	SDO Output MUX bit
 10411                           ;	SDOMX = RB3, SDO function is on RB3
 10412                           ;	Master Clear Reset Pin Enable
 10413                           ;	MCLRE = OFF, RE3 input pin enabled; external MCLR disabled
 10414   300005                     	org	3145733
 10415   300005  53                 	db	83
 10416                           
 10417                           ;Config register CONFIG4L @ 0x300006
 10418                           ;	Stack Full/Underflow Reset
 10419                           ;	STVREN = ON, Stack full/underflow will cause Reset
 10420                           ;	Single-Supply ICSP Enable bit
 10421                           ;	LVP = OFF, Single-Supply ICSP disabled
 10422                           ;	Dedicated In-Circuit Debug/Programming Port Enable
 10423                           ;	ICPRT = OFF, ICPORT disabled
 10424                           ;	Extended Instruction Set Enable bit
 10425                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
 10426                           ;	Background Debugger Enable bit
 10427                           ;	DEBUG = 0x1, unprogrammed default
 10428   300006                     	org	3145734
 10429   300006  81                 	db	129
 10430                           
 10431                           ; Padding undefined space
 10432   300007                     	org	3145735
 10433   300007  FF                 	db	255
 10434                           
 10435                           ;Config register CONFIG5L @ 0x300008
 10436                           ;	Block 0 Code Protect
 10437                           ;	CP0 = OFF, Block 0 is not code-protected
 10438                           ;	Block 1 Code Protect
 10439                           ;	CP1 = OFF, Block 1 is not code-protected
 10440                           ;	Block 2 Code Protect
 10441                           ;	CP2 = OFF, Block 2 is not code-protected
 10442                           ;	Block 3 Code Protect
 10443                           ;	CP3 = OFF, Block 3 is not code-protected
 10444   300008                     	org	3145736
 10445   300008  0F                 	db	15
 10446                           
 10447                           ;Config register CONFIG5H @ 0x300009
 10448                           ;	Boot Block Code Protect
 10449                           ;	CPB = OFF, Boot block is not code-protected
 10450                           ;	Data EEPROM Code Protect
 10451                           ;	CPD = OFF, Data EEPROM is not code-protected
 10452   300009                     	org	3145737
 10453   300009  C0                 	db	192
 10454                           
 10455                           ;Config register CONFIG6L @ 0x30000A
 10456                           ;	Block 0 Write Protect
 10457                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
 10458                           ;	Block 1 Write Protect
 10459                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
 10460                           ;	Block 2 Write Protect
 10461                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
 10462                           ;	Block 3 Write Protect
 10463                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
 10464   30000A                     	org	3145738
 10465   30000A  0F                 	db	15
 10466                           
 10467                           ;Config register CONFIG6H @ 0x30000B
 10468                           ;	Configuration Registers Write Protect
 10469                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
 10470                           ;	Boot Block Write Protect
 10471                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
 10472                           ;	Data EEPROM Write Protect
 10473                           ;	WRTD = OFF, Data EEPROM is not write-protected
 10474   30000B                     	org	3145739
 10475   30000B  E0                 	db	224
 10476                           
 10477                           ;Config register CONFIG7L @ 0x30000C
 10478                           ;	Block 0 Table Read Protect
 10479                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
 10480                           ;	Block 1 Table Read Protect
 10481                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
 10482                           ;	Block 2 Table Read Protect
 10483                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
 10484                           ;	Block 3 Table Read Protect
 10485                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
 10486   30000C                     	org	3145740
 10487   30000C  0F                 	db	15
 10488                           
 10489                           ;Config register CONFIG7H @ 0x30000D
 10490                           ;	Boot Block Table Read Protect
 10491                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
 10492   30000D                     	org	3145741
 10493   30000D  40                 	db	64
 10494                           tosu	equ	0xFFF
 10495                           tosh	equ	0xFFE
 10496                           tosl	equ	0xFFD
 10497                           stkptr	equ	0xFFC
 10498                           pclatu	equ	0xFFB
 10499                           pclath	equ	0xFFA
 10500                           pcl	equ	0xFF9
 10501                           tblptru	equ	0xFF8
 10502                           tblptrh	equ	0xFF7
 10503                           tblptrl	equ	0xFF6
 10504                           tablat	equ	0xFF5
 10505                           prodh	equ	0xFF4
 10506                           prodl	equ	0xFF3
 10507                           indf0	equ	0xFEF
 10508                           postinc0	equ	0xFEE
 10509                           postdec0	equ	0xFED
 10510                           preinc0	equ	0xFEC
 10511                           plusw0	equ	0xFEB
 10512                           fsr0h	equ	0xFEA
 10513                           fsr0l	equ	0xFE9
 10514                           wreg	equ	0xFE8
 10515                           indf1	equ	0xFE7
 10516                           postinc1	equ	0xFE6
 10517                           postdec1	equ	0xFE5
 10518                           preinc1	equ	0xFE4
 10519                           plusw1	equ	0xFE3
 10520                           fsr1h	equ	0xFE2
 10521                           fsr1l	equ	0xFE1
 10522                           bsr	equ	0xFE0
 10523                           indf2	equ	0xFDF
 10524                           postinc2	equ	0xFDE
 10525                           postdec2	equ	0xFDD
 10526                           preinc2	equ	0xFDC
 10527                           plusw2	equ	0xFDB
 10528                           fsr2h	equ	0xFDA
 10529                           fsr2l	equ	0xFD9
 10530                           status	equ	0xFD8

Data Sizes:
    Strings     128
    Constant    0
    Data        0
    BSS         150
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     43      68
    BANK0           160    132     157
    BANK1           256     25     125
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_26(CODE[4]), STR_23(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_26(CODE[4]), STR_23(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_3(CODE[5]), STR_2(CODE[5]), STR_1(CODE[5]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_3(CODE[5]), STR_2(CODE[5]), STR_1(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_3(CODE[5]), STR_2(CODE[5]), STR_1(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 5
		 -> STR_3(CODE[5]), STR_2(CODE[5]), STR_1(CODE[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S1718$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_3(CODE[5]), STR_2(CODE[5]), STR_1(CODE[5]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 8
		 -> Str_v1(COMRAM[8]), Str_mcp(COMRAM[8]), Str_lm35(BANK0[8]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S1639$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1639$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 7
		 -> STR_18(CODE[7]), STR_17(CODE[7]), STR_16(CODE[7]), STR_15(CODE[7]), 
		 -> STR_14(CODE[7]), STR_13(CODE[7]), STR_12(CODE[7]), STR_11(CODE[7]), 
		 -> STR_10(CODE[7]), STR_9(CODE[7]), STR_8(CODE[7]), STR_7(CODE[7]), 
		 -> STR_6(CODE[7]), STR_5(CODE[7]), STR_4(CODE[7]), 

    USART_printString@Ptr_string	PTR unsigned char  size(2) Largest target is 37
		 -> STR_22(CODE[11]), STR_21(CODE[12]), STR_20(CODE[13]), STR_19(CODE[37]), 
		 -> Str_v1(COMRAM[8]), Str_mcp(COMRAM[8]), Str_lm35(BANK0[8]), 


Critical Paths under _main in COMRAM

    _main->_USART_init
    _main->___flmul
    _efgtoa->___flmul
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _floorf->___fldiv
    ___flsub->___flmul
    ___fladd->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    _atoi->___wmul
    ___xxtofl->_ADC_Read
    _USART_init->___lldiv
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Init_Cargas->_Lcd_Write_String
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR_L in COMRAM

    _ISR_L->i1_Lcd_Write_String
    i1_Lcd_Write_String->i1_Lcd_Write_Char
    i1_Lcd_Write_Char->i1_Lcd_Port
    i1_Lcd_Set_Cursor->i1_Lcd_Cmd
    i1_Lcd_Cmd->i1_Lcd_Port

Critical Paths under _ISR_H in COMRAM

    _Enviar_Data_UART->_USART_printString
    _USART_printString->_USART_printChar

Critical Paths under _main in BANK0

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flsub
    _floorf->___fldiv
    ___flsub->___fladd
    ___fladd->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul

Critical Paths under _ISR_L in BANK0

    None.

Critical Paths under _ISR_H in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _ISR_L in BANK1

    None.

Critical Paths under _ISR_H in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_L in BANK2

    None.

Critical Paths under _ISR_H in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_L in BANK3

    None.

Critical Paths under _ISR_H in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_L in BANK4

    None.

Critical Paths under _ISR_H in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_L in BANK5

    None.

Critical Paths under _ISR_H in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_L in BANK6

    None.

Critical Paths under _ISR_H in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_L in BANK7

    None.

Critical Paths under _ISR_H in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   44101
                                             21 BANK1      4     4      0
                           _ADC_Init
                           _ADC_Read
                        _Init_Cargas
                          _Lcd_Clear
                           _Lcd_Init
                         _USART_init
                            ___fladd
                            ___flmul
                           ___xxtofl
    _config_TMR0_16bits_Temporizador
                       _config_clock
       _config_interrup_usart_timer0
                        _config_port
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    15      8   31488
                                              0 BANK1     21    13      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   30630
                                            124 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           24    18      6   30136
                                            104 BANK0     20    14      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              54    47      7   26404
                                             51 BANK0     53    46      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     4      4     497
                                             26 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3135
                                              0 BANK0     11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1208
                                             36 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     888
                                             27 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      31
                                             26 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     478
                                             26 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     363
                                             26 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     669
                                             38 COMRAM     4     0      4
                                             13 BANK0     16    16      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     375
                                             26 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     607
                                             26 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    4187
                                             43 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3622
                                             27 BANK0     16     8      8
                           _ADC_Read (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     155
                                             26 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    4313
                                             39 COMRAM     4     4      0
                                              6 BANK0     21    13      8
                           _ADC_Read (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     986
                                             27 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     770
                                             26 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2723
                                             26 COMRAM    12     4      8
                                              0 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 9     7      2    1404
                                             32 COMRAM     9     7      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              5     3      2     259
                                             26 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              4     2      2     281
                                             26 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     412
                                             26 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _config_port                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_interrup_usart_timer0                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_clock                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_TMR0_16bits_Temporizador                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     746
                                             31 COMRAM     8     4      4
                                              0 BANK0      6     6      0
                           _ADC_Read (ARG)
 ---------------------------------------------------------------------------------
 (1) _USART_init                                           6     2      4     610
                                             39 COMRAM     4     0      4
                                              0 BANK0      2     2      0
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     421
                                             26 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     279
                                             29 COMRAM     1     1      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Init_Cargas                                          0     0      0    2789
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     6     4      2    1314
                                             30 COMRAM     6     4      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       3     3      0     254
                                             27 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       5     4      1    1475
                                             29 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     2      0     155
                                             27 COMRAM     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Port                                             1     1      0     124
                                             26 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             5     3      2      31
                                             26 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_L                                                7     7      0    1272
                                             19 COMRAM     7     7      0
                   i1_Lcd_Set_Cursor
                 i1_Lcd_Write_String
 ---------------------------------------------------------------------------------
 (10) i1_Lcd_Write_String                                  6     4      2     580
                                             13 COMRAM     6     4      2
                   i1_Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (11) i1_Lcd_Write_Char                                    3     3      0     178
                                             10 COMRAM     3     3      0
                         i1_Lcd_Port
 ---------------------------------------------------------------------------------
 (10) i1_Lcd_Set_Cursor                                    5     4      1     692
                                             12 COMRAM     5     4      1
                          i1_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (11) i1_Lcd_Cmd                                           2     2      0     110
                                             10 COMRAM     2     2      0
                         i1_Lcd_Port
 ---------------------------------------------------------------------------------
 (12) i1_Lcd_Port                                          1     1      0      88
                                              9 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _ISR_H                                               6     6      0     599
                                              3 COMRAM     6     6      0
                   _Enviar_Data_UART
 ---------------------------------------------------------------------------------
 (14) _Enviar_Data_UART                                    0     0      0     599
                  _USART_printString
 ---------------------------------------------------------------------------------
 (15) _USART_printString                                   2     0      2     599
                                              1 COMRAM     2     0      2
                    _USART_printChar
 ---------------------------------------------------------------------------------
 (16) _USART_printChar                                     1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_Read
   _Init_Cargas
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
   _Lcd_Clear
     _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _USART_init
     ___lldiv
   ___fladd
     _ADC_Read (ARG)
     ___flmul (ARG)
       _ADC_Read (ARG)
       ___xxtofl (ARG)
         _ADC_Read (ARG)
     ___xxtofl (ARG)
   ___flmul
   ___xxtofl
   _config_TMR0_16bits_Temporizador
   _config_clock
   _config_interrup_usart_timer0
   _config_port
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
             _fputc
               _putch
             _fputs
               _fputc
           _strcpy
         _fputc
         _isdigit

 _ISR_L (ROOT)
   i1_Lcd_Set_Cursor
     i1_Lcd_Cmd
       i1_Lcd_Port
   i1_Lcd_Write_String
     i1_Lcd_Write_Char
       i1_Lcd_Port

 _ISR_H (ROOT)
   _Enviar_Data_UART
     _USART_printString
       _USART_printChar

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      35        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     19      7D       7       48.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     84      9D       5       98.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2B      44       1       72.3%
BITBIGSFRhll        2C      0       0      31        0.0%
BITBIGSFRhhhhhh     19      0       0      21        0.0%
BITBIGSFRhhhhhh      D      0       0      20        0.0%
BITBIGSFRhhhhhh      B      0       0      24        0.0%
BITBIGSFRhhlh        B      0       0      27        0.0%
BITBIGSFRll          8      0       0      33        0.0%
BITBIGSFRhhhlh       7      0       0      26        0.0%
BITBIGSFRhhhhl       7      0       0      25        0.0%
BITBIGSFRhhll        7      0       0      28        0.0%
BITBIGSFRhlhl        5      0       0      30        0.0%
BITBIGSFRhhhhhh      2      0       0      23        0.0%
BITBIGSFRhhhhhh      1      0       0      22        0.0%
BITBIGSFRhlhh        1      0       0      29        0.0%
BITBIGSFRlh          1      0       0      32        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     15E      34        0.0%
DATA                 0      0     15E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Aug 13 21:53:29 2022

                           ___fldiv@aexp 006C                             ___fldiv@bexp 006B  
                           ___fldiv@sign 0064                                       l44 37CE  
                                     l61 3184                                       l29 2FDC  
                                     l63 319A                                       l47 37DC  
                                     l72 376C                                       l65 31B0  
                                     l81 30A8                                       l67 31C6  
                                     l75 3822                                       l84 2F74  
                                     l69 31C8                                       l93 327A  
                                     l87 3632                                       _v1 00E4  
                                     bsr 000FE0                      ___wmul@multiplicand 001D  
                                    l112 37AA                                      l115 364A  
                                    l118 366A                                      l241 3582  
                                    l250 374C                                      l253 3814  
                                    l238 3806                                      l247 37C6  
                                    l256 3726                                      l521 2B26  
                                    l290 2E82                                      l530 35FA  
                                    l283 2E72                                      l515 2DDE  
                                    l526 2B6C                                      l801 158A  
                                    l553 2A66                                      l810 165A  
                                    l811 1648                                      l911 26BA  
                                    l840 1D68                                      l914 2816  
                                    l826 34B4                                      l851 1E26  
                                    l843 1D2C                                      l852 1E14  
                                    l925 27AE                                      l918 2752  
                                    l838 1F08                                      l870 1808  
                                    l934 337A                                      l880 1A64  
                                    l784 1470                                      l849 1DAE  
                                    l793 1740                                      l785 145E  
                                    l874 1B6C                                      l786 1424  
                                    l972 2F00                                      l877 19FE  
                                    l887 1B2E                                      l879 1A76  
                                    l983 127E                                      l968 2EA8  
                                    l986 0C18                                      l988 0A5A  
                                    _pad 2E84                                      wreg 000FE8  
                           ___flmul@aexp 006F                             ___flmul@bexp 0074  
                           ___flmul@sign 006E                             ___flmul@temp 0079  
                           ___flmul@prod 0075                             ___fltol@exp1 0024  
                                   l1100 265E                                     l1110 3700  
                                   l1103 25A2                                     l1016 1060  
                                   l1051 2220                                     l1125 3032  
                                   l1118 34FA                                     l1134 341C  
                                   l1128 3042                                     l1160 35C2  
                                   l1146 2D34                                     l1154 353E  
                                   l1058 33CC                                     l1091 2958  
                                   l1068 2C6A                                     l1094 2960  
                                   l5010 2EC8                                     l5002 2E84  
                                   l5020 2BCC                                     l5012 2ECE  
                                   l5004 2E94                                     l5110 319C  
                                   l5102 3170                                     l5030 2C1E  
                                   l5022 2BF4                                     l5014 2EEC  
                                   l5006 2EA0                                     l5112 31AA  
                                   l5104 317E                                     l5024 2C00  
                                   l5016 2B6E                                     l5008 2EB4  
                                   l5040 3594                                     l5200 0BA4  
                                   l5120 0888                                     l5114 31B2  
                                   l5106 3186                                     l5034 2C62  
                                   l5018 2B8E                                     l5050 24C2  
                                   l5042 2FDE                                     l4410 2C7E  
                                   l5210 0C3C                                     l5130 08D8  
                                   l5122 0898                                     l5116 31C0  
                                   l5108 3194                                     l4500 13C2  
                                   l5028 2C0C                                     l5060 2592  
                                   l5052 24D6                                     l5044 2FFC  
                                   l4412 2C90                                     l5300 10C2  
                                   l5220 0C70                                     l5212 0C44  
                                   l5204 0BE4                                     l5140 0914  
                                   l5132 08E0                                     l5124 08A6  
                                   l4510 1432                                     l4502 13C6  
                                   l4430 12AE                                     l4422 1280  
                                   l5070 264E                                     l5054 24E4  
                                   l5062 25C6                                     l5046 244A  
                                   l4406 37CA                                     l4414 2C9A  
                                   l5038 3584                                     l5310 1148  
                                   l5302 10D4                                     l5230 0CBA  
                                   l5222 0C88                                     l5214 0C4C  
                                   l5206 0C20                                     l5150 095A  
                                   l5134 08F0                                     l5142 0918  
                                   l5126 08AA                                     l5118 0882  
                                   l5400 3630                                     l4600 16C0  
                                   l4520 145C                                     l4512 143E  
                                   l4504 13F0                                     l4440 12E8  
                                   l4432 12BE                                     l4424 128E  
                                   l5064 2602                                     l5048 246A  
                                   l5080 33F2                                     l4416 2CB8  
                                   l4408 2C6C                                     l5320 11C2  
                                   l5312 117C                                     l5304 10E6  
                                   l5232 0CCE                                     l5240 0DC4  
                                   l5224 0C9A                                     l5216 0C50  
                                   l5208 0C30                                     l5152 0962  
                                   l5144 093E                                     l5160 09A4  
                                   l5136 0900                                     l5128 08CE  
                                   l5090 34B6                                     l4610 1712  
                                   l4602 16D0                                     l4530 14B2  
                                   l4522 147E                                     l4514 1442  
                                   l4506 140C                                     l4450 1316  
                                   l4442 12EE                                     l4434 12CE  
                                   l4426 129C                                     l5066 2616  
                                   l5058 2556                                     l5082 33FE  
                                   l5074 33CE                                     l4418 2CEE  
                                   l5330 1230                                     l5322 11CA  
                                   l5314 1184                                     l5306 10EA  
                                   l5250 0E90                                     l5242 0DE2  
                                   l5234 0D32                                     l5218 0C62  
                                   l5226 0CA2                                     l5170 09EE  
                                   l5162 09CA                                     l5154 097A  
                                   l5146 0950                                     l5138 090C  
                                   l5410 1F4E                                     l5402 1F0A  
                                   l5500 308A                                     l5092 34BA  
                                   l5340 2818                                     l4700 1CD0  
                                   l4620 1730                                     l4612 1718  
                                   l4604 16E0                                     l4540 14EC  
                                   l4532 14C0                                     l4524 148E  
                                   l4516 1450                                     l4508 141C  
                                   l4460 134A                                     l4452 1318  
                                   l4444 1300                                     l4436 12D0  
                                   l4428 129E                                     l5068 263E  
                                   l5076 33E2                                     l5084 3402  
                                   l5332 1240                                     l5324 11DA  
                                   l5308 10F0                                     l5316 1188  
                                   l5260 0F42                                     l5252 0EA0  
                                   l5244 0E16                                     l5236 0D8A  
                                   l5228 0CAA                                     l5180 0A24  
                                   l5164 09DC                                     l5156 0984  
                                   l5148 0954                                     l5420 1FE6  
                                   l5412 1F72                                     l5404 1F2E  
                                   l5502 309C                                     l5510 324E  
                                   l5086 36D6                                     l5094 34CE  
                                   l5350 2880                                     l5342 282C  
                                   l4710 1D1C                                     l4702 1CE0  
                                   l4614 171A                                     l4606 1700  
                                   l4550 1558                                     l4542 14EE  
                                   l4534 14CE                                     l4518 1452  
                                   l4470 1386                                     l4454 1328  
                                   l4462 1352                                     l4446 1302  
                                   l4438 12D8                                     l5078 33EE  
                                   l4630 351E                                     l5334 1256  
                                   l5326 120A                                     l5318 11A6  
                                   l5270 0FA6                                     l5262 0F76  
                                   l5254 0EB0                                     l5246 0E4A  
                                   l5238 0DBE                                     l5190 0AE4  
                                   l5166 09E0                                     l5430 205E  
                                   l5422 2006                                     l5414 1F7A  
                                   l5406 1F3C                                     ?_pad 0060  
                                   l5600 3648                                     l5504 30A2  
                                   l5512 3252                                     l5520 2E0E  
                                   l4632 3702                                     l5096 34F0  
                                   l5352 2888                                     l4720 1D66  
                                   l4712 1D2A                                     l4704 1CF0  
                                   l4640 1B7C                                     l4800 17C2  
                                   l4616 1720                                     l4608 1704  
                                   l4560 15B0                                     l4552 155A  
                                   l4544 14F8                                     l4536 14DA  
                                   l4528 14A2                                     l4480 139A  
                                   l4472 138A                                     l4464 1362  
                                   l4456 1338                                     l4448 1308  
                                   l4624 34FC                                     l5336 125E  
                                   l5328 1218                                     l5280 1056  
                                   l5272 0FAA                                     l5264 0F8A  
                                   l5256 0EE4                                     l5248 0E5E  
                                   l5192 0B18                                     l5184 0A6A  
                                   l5168 09E6                                     l5432 2070  
                                   l5440 2088                                     l5416 1F88  
                                   l5408 1F4A                                     l5602 3658  
                                   l5506 3226                                     l5530 2E60  
                                   l5522 2E1A                                     l5514 2DE0  
                                   l5610 3738                                     l4634 371E  
                                   l5098 34F4                                     l5362 28FA  
                                   l5354 2890                                     l5346 2830  
                                   l4730 1DAC                                     l4722 1D78  
                                   l4714 1D36                                     l4706 1CF8  
                                   l4650 1BBC                                     l4642 1B8A  
                                   l4810 1818                                     l4802 17D2  
                                   l4618 172E                                     l4570 15DE  
                                   l4554 156A                                     l4538 14DE  
                                   l4546 14FE                                     l4490 13AE  
                                   l4482 139E                                     l4474 138E  
                                   l4466 1374                                     l4458 1348  
                                   l4626 3508                                     l5290 109A  
                                   l5282 1072                                     l5274 0FB2  
                                   l5258 0F3E                                     l5266 0F8E  
                                   l5194 0B54                                     l5186 0A70  
                                   l5178 0A0A                                     l5450 2142  
                                   l5434 2078                                     l5442 20BA  
                                   l5426 2014                                     l5418 1FAC  
                                   l5380 376A                                     l5372 3750  
                                   l5508 3232                                     l5532 2E62  
                                   l5524 2E28                                     l5516 2DF0  
                                   l5620 3744                                     l5612 373C  
                                   l5364 292A                                     l5356 28C4  
                                   l5348 284C                                     l4740 1E0C  
                                   l4724 1D8E                                     l4732 1DBE  
                                   l4716 1D54                                     l4708 1D08  
                                   l4660 1BE2                                     l4652 1BBE  
                                   l4644 1B8C                                     l4900 1B58  
                                   l4820 1852                                     l4812 1828  
                                   l4804 17E2                                     l4572 15EC  
                                   l4564 15C4                                     l4580 160A  
                                   l4548 1524                                     l4556 157A  
                                   l4492 13B2                                     l4484 13A2  
                                   l4476 1392                                     l4468 1382  
                                   l4628 351A                                     l5292 10A2  
                                   l5284 1080                                     l5276 0FBE  
                                   l5268 0F9E                                     l5196 0B68  
                                   l5188 0AA6                                     l5460 21BA  
                                   l5452 216C                                     l5444 20DA  
                                   l5436 2080                                     l5428 204E  
                                   l5540 33A6                                     l5374 3752  
                                   l5390 3616                                     l5382 35FE  
                                   l5630 356C                                     l5534 2E6C  
                                   l5526 2E32                                     l5518 2E06  
                                   l5550 2F7A                                     l5606 3808  
                                   l5622 3746                                     l5614 373E  
                                   l5366 293C                                     l4750 1E7A  
                                   l4734 1DCC                                     l4726 1D94  
                                   l4718 1D56                                     l4670 1C22  
                                   l4662 1BF0                                     l4646 1B9C  
                                   l4654 1BC6                                     l4638 1B6E  
                                   l4902 1B5C                                     l4830 18A4  
                                   l4822 1868                                     l4806 17F2  
                                   l4574 15F4                                     l4566 15CE  
                                   l4558 15A0                                     l4582 1618  
                                   l4494 13B6                                     l4486 13A6  
                                   l4478 1396                                     l5294 10B2  
                                   l5286 1090                                     l5278 1036  
                                   l5198 0B9C                                     l5454 218C  
                                   l5446 210E                                     l5462 21E6  
                                   l5542 33C2                                     l5710 2242  
                                   l5376 3758                                     l5392 361E  
                                   l5384 360A                                     l5632 3576  
                                   l5624 3540                                     l5528 2E50  
                                   l5560 2FD8                                     l5552 2F7C  
                                   l5640 37C4                                     l5616 3740  
                                   l5608 3728                                     l4760 1EE4  
                                   l4744 1E36                                     l4752 1E7E  
                                   l4736 1DD0                                     l4728 1D9E  
                                   l4680 1C62                                     l4672 1C24  
                                   l4664 1BF2                                     l4656 1BD6  
                                   l4648 1BAC                                     l4920 2DB2  
                                   l4912 2D36                                     l4840 18EA  
                                   l4832 18B2                                     l4824 1874  
                                   l4816 183C                                     l4808 17F8  
                                   l4592 166A                                     l4584 161C  
                                   l4576 15F8                                     l4568 15DC  
                                   l4496 13BA                                     l4488 13AA  
                                   l5296 10B6                                     l5288 1094  
                                   l5536 337C                                     l5720 2256  
                                   l5712 2246                                     l5704 2222  
                                   l5378 375A                                     l5490 3046  
                                   l5394 3620                                     l5386 360C  
                                   l5626 354A                                     l5562 3816  
                                   l5570 2F1E                                     l5554 2F7E  
                                   l5546 2F76                                     l5634 37F4  
                                   l5618 3742                                     l4762 1EE8  
                                   l4754 1E98                                     l4746 1E42  
                                   l4738 1DDE                                     l4690 1C92  
                                   l4682 1C6A                                     l4666 1C02  
                                   l4674 1C2C                                     l4658 1BDC  
                                   l4922 2DD6                                     l4914 2D64  
                                   l4930 2A98                                     l4850 1958  
                                   l4842 1904                                     l4834 18BE  
                                   l4826 188C                                     l4818 1848  
                                   l4594 1676                                     l4586 162A  
                                   l4578 1608                                     l4498 13BE  
                                   l4906 346E                                     l5298 10BC  
                                   l5466 21F8                                     l5538 3388  
                                   l5650 3368                                     l5642 3328  
                                   l5730 23D0                                     l5722 22A4  
                                   l5714 224A                                     l5706 222A  
                                   l5492 3056                                     l5396 3626  
                                   l5388 3614                                     l5628 3556  
                                   l5580 2F50                                     l5572 2F2E  
                                   l5564 2F02                                     l5556 2F8C  
                                   l5548 2F76                                     l5660 26CA  
                                   l5636 37AC                                     l4764 1EF6  
                                   l4756 1EAE                                     l4748 1E50  
                                   l4692 1C92                                     l4684 1C6E  
                                   l4676 1C3C                                     l4668 1C12  
                                   l4924 2DDC                                     l4916 2D74  
                                   l4940 2B06                                     l4932 2AA8  
                                   l4860 19EE                                     l4852 1982  
                                   l4844 1914                                     l4836 18CE  
                                   l4828 1898                                     l4780 175E  
                                   l4596 1684                                     l4588 1640  
                                   l4908 3480                                     l5644 333A  
                                   l5732 23F6                                     l5724 22DA  
                                   l5716 224E                                     l5708 223E  
                                   l5494 3068                                     l5398 3628  
                                   l5590 2F6E                                     l5582 2F56  
                                   l5574 2F34                                     l5566 2F08  
                                   l5558 2FD4                                     l5670 2708  
                                   l5662 26E0                                     l5654 2664  
                                   l5638 37B4                                     l4766 1EFC  
                                   l4758 1EC8                                     l4678 1C52  
                                   l4918 2DA2                                     l4942 2B14  
                                   l4934 2AD6                                     l4870 1A2E  
                                   l4862 19FC                                     l4854 19B8  
                                   l4846 1930                                     l4838 18DA  
                                   l4790 1796                                     l4782 1760  
                                   l4950 35C4                                     l4598 16BE  
                                   l5646 3342                                     l5734 241C  
                                   l5726 234C                                     l5718 2252  
                                   l5592 378E                                     l5496 306E  
                                   l5584 2F5C                                     l5576 2F44  
                                   l5568 2F18                                     l5680 2790  
                                   l5672 273A                                     l5656 2676  
                                   l4768 1EFE                                     l4696 1CA6  
                                   l4688 1C82                                     l4944 2B64  
                                   l4936 2AE6                                     l4928 2A68  
                                   l4880 1AA0                                     l4872 1A5C  
                                   l4864 1A0E                                     l4856 19C6  
                                   l4848 193C                                     l4792 17A6  
                                   l4784 1770                                     l4776 1742  
                                   l4952 35DA                                     l4960 2978  
                                   l5648 334A                                     l5728 2382  
                                   l5594 3796                                     l5498 3078  
                                   l5586 2F62                                     l5578 2F4A  
                                   l5690 27E6                                     l5682 279E  
                                   l5674 273C                                     l5666 26F4  
                                   l5658 2684                                     l4698 1CC0  
                                   l4946 2B6A                                     l4938 2AF4  
                                   l4890 1B16                                     l4882 1ACA  
                                   l4866 1A1C                                     l4858 19E4  
                                   l4794 17AC                                     l4786 1780  
                                   l4778 1750                                     l4954 35EA  
                                   l4970 29C8                                     l5850 21D8  
                                   l5596 37A8                                     l5588 2F68  
                                   l5692 27F6                                     l5684 27BC  
                                   l5676 2748                                     l5668 26FC  
                                   l5852 28AE                                     l4892 1B32  
                                   l4876 1A86                                     l4884 1ACE  
                                   l4868 1A20                                     l4796 17B2  
                                   l4788 1790                                     l4980 29F2  
                                   l4972 29CC                                     l4964 298C  
                                   l5598 3636                                     l5694 2804  
                                   l5686 27BE                                     l5678 2784  
                                   l4894 1B42                                     l4886 1AE8  
                                   l4878 1A92                                     l4798 17C0  
                                   l4990 2A1A                                     l4982 29FC  
                                   l4974 29DA                                     l4966 29B6  
                                   l4958 2962                                     l5846 209C  
                                   l5696 2806                                     l5688 27C2  
                                   l4896 1B50                                     l4888 1AFC  
                                   l4992 2A26                                     l4984 2A06  
                                   l4968 29B8                                     l5848 2156  
                                   l4898 1B52                                     l4994 2A36  
                                   l4996 2A46                                     l4998 2A56  
                                   STR_1 0874                                     STR_2 0874  
                                   STR_3 0874                                     STR_4 084A  
                                   STR_5 0851                                     STR_6 0858  
                                   STR_7 085F                                     STR_8 0866  
                                   STR_9 086D                                     u5000 1770  
                                   u5001 176C                                     u5010 1780  
                                   u5011 177C                                     u5100 1A2E  
                                   u5020 17C0                                     u5101 1A2A  
                                   u5021 17BC                                     u5110 1A5C  
                                   u5030 17D2                                     u4310 37DC  
                                   u5111 1A58                                     u5031 17CE  
                                   u4311 37D8                                     u5200 2DD6  
                                   u5120 1A72                                     u5040 17E2  
                                   u4400 1316                                     u4320 2C7E  
                                   u6000 1F2E                                     u5201 2DD2  
                                   u5121 1A6E                                     u5041 17DE  
                                   u4401 1312                                     u4321 2C7A  
                                   u6001 1F2A                                     u5210 2A98  
                                   u5130 1A86                                     u5050 1818  
                                   u4410 1328                                     u4330 2C90  
                                   u6010 1F72                                     u5211 2A94  
                                   u5131 1A82                                     u5051 1814  
                                   u4411 1324                                     u4331 2C8C  
                                   u6011 1F6E                                     u6100 2E50  
                                   u5220 2AD6                                     u5140 1AA0  
                                   u5060 1828                                     u4500 1470  
                                   u4420 1338                                     u5300 29EE  
                                   u4340 2CB8                                     u6020 1FAC  
                                   u6101 2E4C                                     u5221 2AD2  
                                   u5141 1A9C                                     u5061 1824  
                                   u4501 146C                                     u4421 1334  
                                   u5301 29EA                                     u4341 2CB4  
                                   u6021 1FA8                                     u5230 2AF4  
                                   u5150 1AE8                                     u5070 19A2  
                                   u4510 147E                                     u4430 1374  
                                   u5310 2A16                                     u4350 2CEE  
                                   u6030 204E                                     u6110 33C2  
                                   u5231 2AF0                                     u5151 1AE4  
                                   u4511 147A                                     u4431 1370  
                                   u5311 2A12                                     u4351 2CEA  
                                   u6031 204A                                     u6111 33BE  
                                   u6120 2FC0                                     u6200 27AE  
                                   u5240 2B14                                     u5160 1B16  
                                   u5080 19FC                                     u4600 15DC  
                                   u4520 148E                                     u4440 1382  
                                   u4360 129C                                     u5320 2A36  
                                   u6040 20D6                                     u6201 27AA  
                                   u5241 2B10                                     u5161 1B12  
                                   u5081 19F8                                     u4601 15D8  
                                   u4521 148A                                     u4441 137E  
                                   u4361 1298                                     u5321 2A32  
                                   u6041 20D2                                     u6130 3658  
                                   u6050 3056                                     u6210 27BC  
                                   u5250 2B64                                     u5170 1B50  
                                   u5090 1A1C                                     u4610 15EC  
                                   u4530 14C0                                     u4450 13F0  
                                   u4370 12AE                                     u5330 2A46  
                                   u5410 2C58                                     u6131 3654  
                                   u6051 3052                                     u6211 27B8  
                                   u5251 2B60                                     u5171 1B4C  
                                   u5091 1A18                                     u5075 1998  
                                   u4611 15E8                                     u4531 14BC  
                                   u4451 13EC                                     u4371 12AA  
                                   u5331 2A42                                     u5411 2C52  
                                   u6060 308A                                     u6220 27F6  
                                   u6140 2676                                     u5180 2D64  
                                   u5260 35DA                                     u4700 16D0  
                                   u4620 1608                                     u4540 14CE  
                                   u4460 1408                                     u4380 12BE  
                                   u5420 2C5A                                     u5500 2576  
                                   u5340 2E94                                     u6061 3086  
                                   u6125 2FB6                                     u6221 27F2  
                                   u6141 2672                                     u5181 2D60  
                                   u5261 35D6                                     u4701 16CC  
                                   u4621 1604                                     u4541 14CA  
                                   u4461 1402                                     u4381 12BA  
                                   u5405 2C30                                     u5341 2E90  
                                   u6070 327A                                     u6230 2804  
                                   u6150 2684                                     u5190 2DA2  
                                   u4710 16E0                                     u4630 1618  
                                   u4550 14EC                                     u4470 140A  
                                   u4390 1300                                     u5270 2978  
                                   u5510 2592                                     u5350 2EEC  
                                   u5430 35C2                                     u6071 3276  
                                   u6231 2800                                     u6151 2680  
                                   u5191 2D9E                                     u4711 16DC  
                                   u4631 1614                                     u4551 14E8  
                                   u4391 12FC                                     u5271 2974  
                                   u5511 258E                                     u5351 2EE8  
                                   u5431 35BE                                     u5600 317E  
                                   u6080 2E06                                     u6160 26E0  
                                   u4800 1C02                                     u4720 1700  
                                   u4640 162A                                     u4560 1524  
                                   u4480 1432                                     u5280 29AC  
                                   u5360 2BAE                                     u5520 25E6  
                                   u5440 2FFC                                     u5601 317A  
                                   u6081 2E02                                     u6161 26DC  
                                   u4801 1BFE                                     u4721 16FC  
                                   u4641 1626                                     u4561 1520  
                                   u4481 142E                                     u5505 256C  
                                   u5441 2FF8                                     u5610 3194  
                                   u6090 2E28                                     u6170 2736  
                                   u4810 1C12                                     u4730 1712  
                                   u4650 1640                                     u4570 156A  
                                   u4490 1450                                     u5290 29DA  
                                   u5370 2BCC                                     u5530 2602  
                                   u5450 2494                                     u5611 3190  
                                   u6091 2E24                                     u6171 2732  
                                   u4811 1C0E                                     u4731 170E  
                                   u4651 163C                                     u4571 1566  
                                   u4491 144C                                     u5291 29D6  
                                   u5371 2BC8                                     u5531 25FE  
                                   u5620 31AA                                     u6180 2780  
                                   u4900 1DCC                                     u4820 1C52  
                                   u4740 172E                                     u4660 1656  
                                   u4580 15A0                                     u5380 2BF4  
                                   u5540 263E                                     u5460 24C2  
                                   u5700 09DC                                     i1l61 31E0  
                                   u5621 31A6                                     u6181 277C  
                                   u4901 1DC8                                     u4821 1C4E  
                                   u4741 172A                                     u4661 1652  
                                   u4581 159C                                     u5285 29A2  
                                   u5381 2BF0                                     u5365 2BA4  
                                   u5541 263A                                     u5525 25DC  
                                   u5461 24BE                                     u5701 09D8  
                                   u5630 31C0                                     u6190 279E  
                                   u4910 1DDE                                     u4830 1C92  
                                   u4670 166A                                     u4590 15B0  
                                   u5390 2C1E                                     u5470 24E4  
                                   u5550 341C                                     u4750 353E  
                                   u5710 0A56                                     i1l63 31F6  
                                   u5631 31BC                                     u6247 2F0E  
                                   u6191 279A                                     u4911 1DDA  
                                   u4831 1C8E                                     u4671 1666  
                                   u4591 15AC                                     u5391 2C1A  
                                   u5471 24E0                                     u5455 248A  
                                   u5551 3418                                     u4751 353A  
                                   u5711 0A52                                     i2l32 37E4  
                                   i1l72 378C                                     u5560 36FA  
                                   u4920 1E0C                                     u4840 1D08  
                                   u4760 1B8A                                     u4680 1684  
                                   u5800 0C9A                                     u5720 0AE4  
                                   u5640 08A6                                     i2l41 316C  
                                   i1l65 320C                                     i1l81 310E  
                                   u6257 2F24                                     u5561 36F4  
                                   u4921 1E08                                     u4841 1D04  
                                   u4761 1B86                                     u4681 1680  
                                   u5801 0C96                                     u5721 0AE0  
                                   u5641 08A2                                     u5570 36FC  
                                   u4930 1E22                                     u4850 1D2A  
                                   u4770 1B9C                                     u4690 16BE  
                                   u5490 2552                                     u5810 0DE2  
                                   u5730 0B18                                     u5650 08F0  
                                   i2l35 37F2                                     i1l67 3222  
                                   u6267 2F3A                                     u4931 1E1E  
                                   u4851 1D26                                     u4771 1B98  
                                   u4691 16BA                                     u5491 254E  
                                   u5811 0DDE                                     u5731 0B14  
                                   u5651 08EC                                     u5580 34CE  
                                   u4940 1E36                                     u4860 1D54  
                                   u4780 1BAC                                     u5900 10D4  
                                   u5820 0E4A                                     u5740 0B54  
                                   u5660 0900                                     i1l69 3224  
                                   i1l93 32D0                                     u6277 3618  
                                   u5581 34CA                                     u4941 1E32  
                                   u4861 1D50                                     u4781 1BA8  
                                   u5485 24F8                                     u5901 10D0  
                                   u5821 0E46                                     u5741 0B50  
                                   u5661 08FC                                     u5590 34F0  
                                   u4950 1E50                                     u4870 1D78  
                                   u4790 1BF0                                     u5486 2502  
                                   u5910 11A6                                     u5830 0E90  
                                   u5750 0BE0                                     u5670 093E  
                                   i1l87 36A2                                     u6287 362A  
                                   u5591 34EC                                     u4951 1E4C  
                                   u4871 1D74                                     u4791 1BEC  
                                   u5487 2512                                     u5911 11A2  
                                   u5831 0E8C                                     u5751 0BDC  
                                   u5671 093A                                     u4960 1E98  
                                   u4880 1D8E                                     u5920 11C2  
                                   u5840 0EA0                                     u5760 0C18  
                                   u5680 0950                                     u6297 3760  
                                   u4961 1E94                                     u4881 1D8A  
                                   u5921 11BE                                     u5841 0E9C  
                                   u5761 0C14                                     u5681 094C  
                                   u4970 1EC8                                     u4890 1DAC  
                                   u5930 122A                                     u5850 0F3E  
                                   u5770 0C30                                     u5690 09CA  
                                   u4971 1EC4                                     u4891 1DA8  
                                   u5931 1224                                     u5851 0F3A  
                                   u5771 0C2C                                     u5691 09C6  
                                   u4980 1EF6                                     u5940 122C  
                                   u5860 0F8A                                     u5780 0C62  
                                   u4981 1EF2                                     u5861 0F86  
                                   u5781 0C5E                                     u4990 175E  
                                   u5950 1240                                     u5870 1036  
                                   u5790 0C70                                     u4991 175A  
                                   u5951 123C                                     u5871 1032  
                                   u5791 0C6C                                     u5960 284C  
                                   u5880 1072                                     u5961 2848  
                                   u5881 106E                                     u5970 287C  
                                   u5890 1080                                     u5971 2878  
                                   u5891 107C                                     u5980 292A  
                                   u5981 2926                                     u5990 293C  
                                   u5991 2938                        ?_Lcd_Write_String 001F  
                                   _dbuf 0114                                     _labs 2FDE  
                                   _atoi 2818                                     _main 2222  
                                   _prec 00F2                                     pad@i 0067  
                                   pad@p 0064                                     fsr1h 000FE2  
                                   fsr2h 000FDA                                     indf1 000FE7  
                                   indf2 000FDF                                     fsr1l 000FE1  
                                   pad@w 0069                                     fsr2l 000FD9  
                                   btemp 0045                           ??_config_clock 001B  
                       __end_of_ADC_Init 37AC                         __end_of_ADC_Read 366C  
                          ___fpclassifyf 2B6E                                     prodh 000FF4  
                                   prodl 000FF3                                     start 023A  
                     ??_Lcd_Write_String 0021                            ??_Init_Cargas 0025  
                        ___fldiv@new_exp 0065                          _USART_printChar 37DE  
                        __end_of_Lcd_Cmd 376E                             ___param_bank 000000  
                                  ??_pad 0066                            ___fltol@sign1 0023  
                                  ?_labs 001B                                    ?_atoi 0021  
                        __end_of___fladd 1742                                    ?_main 0001  
                        __end_of___fldiv 1F0A                          __end_of___flneg 35FC  
                                  STR_10 084A                                    STR_11 0851  
                                  STR_12 0858                                    STR_20 0826  
                                  STR_13 085F                                    STR_21 0833  
                                  STR_14 0866                                    STR_22 083F  
                                  STR_15 086D                                    STR_23 0879  
                                  STR_16 085F                                    STR_17 0866  
                                  STR_18 086D                                    STR_26 087D  
                                  STR_19 0801                          __end_of___flmul 1B6E  
                        __end_of___flsub 34B6                          __end_of___fltol 2A68  
                        __end_of___lldiv 2E84                                    i1l235 021A  
                                  i1l229 021A                                    i2l214 3452  
                                  i2l244 3326                        ?i1_Lcd_Set_Cursor 000D  
                                  _RCREG 000FAE                                    _RCSTA 000FAB  
                                  _ISR_H 0008                                    _ISR_L 0018  
                           vfpfcnvrt@fmt 00CA                                    _TMR0H 000FD7  
                                  _TMR0L 000FD6                                    _SPBRG 000FAF  
                                  _TRISD 000F95                                    _TXREG 000FAD  
                                  _TXSTA 000FAC                              ?i1_Lcd_Port 0001  
                     ??i1_Lcd_Set_Cursor 000E                                    _flags 00F4  
                                  _fputc 2C6C                                    _fputs 34FC  
                        __end_of_isdigit 3702                                    labs@a 001B  
                                  atoi@n 0028                                    pad@fp 0060  
                                  atoi@s 0021                                    _width 00F0  
                                  _putch 37C8                          __end_of_isspace 34FC  
                                  tablat 000FF5                                    ttemp5 0046  
                                  ttemp6 0049                                    ttemp7 004D  
                                  status 000FD8                                    wtemp8 0046  
                        __end_of_sprintf 337C                           ?___fpclassifyf 001B  
                       __end_of_Lcd_Init 2F76                         __end_of_Lcd_Port 31CA  
                            ?_USART_init 0028                          __initialization 36A4  
                           __end_of_labs 3044                             __end_of_atoi 2962  
                           __end_of_main 244A                 __end_of_Enviar_Data_UART 3328  
                    __end_of_Init_Cargas 3584                                   ??_labs 001F  
                                 ??_atoi 0023                                   ??_main 002C  
                          __activetblptr 000002                                   ?_ISR_H 0001  
                                 ?_ISR_L 0001                                   ?_fputc 001C  
                                 ?_fputs 0025                                   _ADRESH 000FC4  
                                 _ADRESL 000FC3                                   ?_putch 0001  
                                 _ANSELD 000F5E                  __end_of_USART_printChar 37F4  
                                 i1l4210 0044                                   i1l4140 30AC  
                                 i1l4220 0078                                   i1l4212 004A  
                                 i1l4150 30F0                                   i1l4142 30BC  
                                 i1l4230 00B8                                   i1l4222 008A  
                                 i1l4214 005C                                   i1l4152 3102  
                                 i1l4144 30CE                                   i1l4160 32A4  
                                 i1l4240 00F0                                   i1l4232 00C2  
                                 i1l4224 0094                                   i1l4216 0066  
                                 i1l4208 0036                                   i1l4154 3108  
                                 i1l4146 30D4                                   i1l4162 32A8  
                                 i1l4250 012A                                   i1l4242 00FC  
                                 i1l4234 00CE                                   i1l4226 00A0  
                                 i1l4218 0072                                   i1l4148 30DE  
                                 i1l4156 327C                                   i1l4260 015E  
                                 i1l4252 0130                                   i1l4244 0102  
                                 i1l4236 00D4                                   i1l4228 00A6  
                                 i1l4158 3288                                   i1l4270 01A6  
                                 i1l4262 0170                                   i1l4254 0142  
                                 i1l4246 0114                                   i1l4238 00E6  
                                 i1l4280 01CE                                   i1l4272 01B2  
                                 i1l4264 017A                                   i1l4256 014C  
                                 i1l4248 011E                                   i1l4290 0210  
                                 i1l4282 01D8                                   i1l4274 01B4  
                                 i1l4266 0186                                   i1l4258 0158  
                                 i1l4292 0212                                   i1l4284 01E4  
                                 i1l4276 01B6                                   i1l4268 019C  
                                 i1l4294 0214                                   i1l4286 01FA  
                                 i1l4278 01BC                                   i1l4288 0204  
                                 i2l4200 3436                                   i1l3880 31F0  
                                 i1l3960 377A                                   i2l4202 3444  
                                 i1l3882 31F8                                   i1l3874 31CC  
                                 i1l3962 378A                                   i1l3954 3770  
                                 i1l3970 3684                                   i2l4204 3446  
                                 i1l3884 3206                                   i1l3876 31DA  
                                 i1l3956 3772                                   i1l3980 3698  
                                 i1l3972 3686                                   i1l3964 366E  
                                 i2l4206 344E                                   i1l3886 320E  
                                 i1l3878 31E2                                   i1l3958 3778  
                                 i1l3982 36A0                                   i1l3974 368E  
                                 i1l3966 367A                                   i1l3888 321C  
                                 i1l3976 3690                                   i1l3968 367C  
                                 i1l3978 3696                                   i2l4092 32D2  
                                 i2l3754 37E0                                   i2l3890 3110  
                                 i2l3892 3114                                   i2l3894 3138  
                                 i2l3896 313C                        ?i1_Lcd_Write_Char 0001  
                              ??_Lcd_Cmd 001C                                   _SPBRGH 000FB0  
                       __end_of___xxtofl 2818                       ??i1_Lcd_Write_Char 000B  
                      __end_ofi1_Lcd_Cmd 378E                             vfprintf@cfmt 00E2  
                                 _Str_v1 0035                                   ___flge 2A68  
                                 ___fleq 2D36                        i1Lcd_Write_Char@a 000D  
                      i1Lcd_Write_Char@y 000C                                ??___fladd 0083  
                                 ___wmul 3702                                ??___fldiv 0023  
                              ??___flneg 001F                                ??___flmul 0028  
                              ??___flsub 002C                                ??___fltol 001F  
                              ??___lldiv 0023                                   _efgtoa 0882  
                        ADC_Read@channel 001F                                   _floorf 244A  
                                 _memcpy 33CE                                   clear_0 36AA  
                                 clear_1 36B6                                   clear_2 36C2  
                                 isa$std 000001                                   pad@buf 0062  
                                 _strcpy 3584                                   fputc@c 001C  
                   __end_of_config_clock 3816                                   fputs@c 0029  
                                 fputs@i 002A                                   fputs@s 0025  
                              ??_isdigit 001D                          ___fpclassifyf@e 0023  
                              ?_ADC_Init 0001                          ___fpclassifyf@u 0025  
                              ?_ADC_Read 001B                          ___fpclassifyf@x 001B  
                           __mediumconst 0000                                ??_isspace 001D  
                                 tblptrh 000FF7                                   tblptrl 000FF6  
                                 tblptru 000FF8                                   putch@c 001B  
                USART_printChar@caracter 0001                         __end_of_vfprintf 33CE  
                              ??_sprintf 002C                          Lcd_Set_Cursor@a 001F  
                        Lcd_Set_Cursor@b 001E                          Lcd_Set_Cursor@y 0021  
                        Lcd_Set_Cursor@z 0020                               ___flge@ff1 007B  
                        ??___fpclassifyf 001F                               ___flge@ff2 007F  
                           ___xxtofl@arg 0062                             ___xxtofl@exp 0061  
                           ___xxtofl@val 0020                               ___fleq@ff1 001B  
                             ___fleq@ff2 001F                               __accesstop 0060  
                __end_of__initialization 36C8                               ___flneg@f1 001B  
                      __end_of_Lcd_Clear 3824                            ___rparam_used 000001  
                             ___fltol@f1 001B                            __end_of_ISR_H 346E  
                          __end_of_ISR_L 023A                        _USART_printString 3110  
                            _Init_Cargas 3540                           __pcstackCOMRAM 0001  
                     ?_USART_printString 0002                            __end_of_fputc 2D36  
                          __end_of_fputs 3540                            __end_of_putch 37DE  
                    ??_USART_printString 0004                           _Lcd_Set_Cursor 3044  
                                ??_ISR_H 0004                                  ??_ISR_L 0014  
                             ??_ADC_Init 001B                               ??_ADC_Read 001D  
                              ?_Lcd_Init 0001                                ?_Lcd_Port 0001  
                                ??_fputc 0020                                  ??_fputs 0029  
                                ??_putch 001B                               __pbssBANK0 00E4  
                             __pbssBANK1 0100                         ?_USART_printChar 0001  
              __end_of_USART_printString 316E                                  ?___flge 007B  
                                ?___fleq 001B                                  ?___wmul 001B  
                                ?_efgtoa 0093                                  ?_floorf 0027  
                             _lcd_Buffer 0100                                  ?_memcpy 001B  
                                _BAUDCON 000FB8                   __end_of_Lcd_Set_Cursor 30AA  
                                ?_strcpy 001B                                ?___xxtofl 0020  
                           ??i1_Lcd_Port 000A                               ??_Lcd_Init 001E  
                             ??_Lcd_Port 001B                           _Lcd_Write_Char 35FC  
                                _Lcd_Cmd 374E                                  __Hparam 0000  
                                __Lparam 0000                             ??_USART_init 002C  
                     __end_ofi1_Lcd_Port 3226                                  ___fladd 1280  
                                ___fldiv 1B6E                                  _Str_mcp 003D  
                                ___flneg 35C4                                  ___flmul 1742  
                                ___flsub 346E                                  ___fltol 2962  
                                ___lldiv 2DE0                                ?_vfprintf 00DC  
                           __psmallconst 0800                        ?_Enviar_Data_UART 0001  
                                __pcinit 36A4                                  _dato_Rx 0034  
                                __ramtop 0800                          ?_Lcd_Set_Cursor 001E  
                                __ptext0 2222                                  __ptext1 3328  
                                __ptext2 337C                                  __ptext3 1F0A  
                                __ptext4 0882                                  __ptext5 3584  
                                __ptext6 2E84                                  __ptext7 34FC  
                                __ptext8 2C6C                                  __ptext9 37C8  
                     ??_Enviar_Data_UART 0004                                _T0CONbits 000FD5  
                                _isdigit 36D6                               ??___xxtofl 0024  
                                _isspace 34B6                                  efgtoa@c 0099  
                                efgtoa@d 00A7                                  efgtoa@e 00AB  
                                efgtoa@f 0095                                  efgtoa@g 00BE  
                                efgtoa@h 00B5                                  efgtoa@i 00B3  
                                efgtoa@l 00B9                                  efgtoa@m 00A9  
                                efgtoa@n 00C2                                  efgtoa@p 009E  
                                efgtoa@t 00A0                                  efgtoa@u 00C4  
                                efgtoa@w 00AD                                  atoi@neg 0026  
             __end_ofi1_Lcd_Write_String 32D2                                  _sprintf 3328  
                     __end_of_USART_init 2FDE                   __end_of_Lcd_Write_Char 3634  
                         __pintcode_body 341E                     end_of_initialization 36C8  
                                floorf@e 0077                                  floorf@m 0073  
                                floorf@u 0079                                  floorf@x 0027  
                                memcpy@d 0022                                  memcpy@n 001F  
                                memcpy@s 0024                                  fputc@fp 001E  
                          __Lmediumconst 0000                                  int_func 341E  
                                fputs@fp 0027                          ___lldiv@divisor 001F  
                           _config_clock 3808                        USART_init@baudios 0028  
            USART_printString@Ptr_string 0002                          ___lldiv@counter 0027  
                      __end_of_vfpfcnvrt 2222                               efgtoa@mode 00A5  
                             efgtoa@sign 00BD                                _RCSTAbits 000FAB  
                                postdec2 000FDD                                  postinc0 000FEE  
                                postinc1 000FE6                                  postinc2 000FDE  
                       vfpfcnvrt@convarg 00D1                                Lcd_Port@a 001B  
                             ??_vfprintf 002C                                i1_Lcd_Cmd 376E  
                                strcpy@d 0021                                  strcpy@s 001F  
                            ___fladd@grs 008A                            ___xxtofl@sign 0060  
                              _TRISAbits 000F92                                _TRISCbits 000F94  
                            ___fldiv@grs 0067                              ___fldiv@rem 0060  
                        ?_Lcd_Write_Char 0001                        Lcd_Write_String@a 001F  
                      Lcd_Write_String@i 0023                              ___flmul@grs 0070  
                              _TXSTAbits 000FAC                             ?_Init_Cargas 0001  
                          ??_config_port 001B                                _Lcd_Clear 3816  
                         __end_of___flge 2B6E                           __end_of___fleq 2DE0  
                            vfpfcnvrt@ap 00CC                              vfpfcnvrt@cp 00DA  
                            vfpfcnvrt@fp 00C8                           __end_of___wmul 3728  
                             ?i1_Lcd_Cmd 0001                         _Lcd_Write_String 3226  
                         __end_of_efgtoa 1280                           __end_of_floorf 2660  
                         __end_of_memcpy 341E                               floorf@F526 002C  
                         __end_of_strcpy 35C4                      start_initialization 36A4  
                            __end_of_pad 2F02                              USART_init@n 0060  
                       i1_Lcd_Set_Cursor 30AA                    __end_of___fpclassifyf 2C6C  
   __end_of_config_interrup_usart_timer0 3808             _config_interrup_usart_timer0 37F4  
                            vfprintf@fmt 00DE                               ?_Lcd_Clear 0001  
                               ??___flge 0083                                 ??___fleq 0023  
                               ??___wmul 001F                                 ??_efgtoa 009A  
                               ??_floorf 006D                                 ??_memcpy 0021  
                        Lcd_Write_Char@a 001E                          Lcd_Write_Char@y 001D  
                    __end_of_config_port 374E                                 ??_strcpy 001F  
                              ___fladd@a 007F                                ___fladd@b 007B  
                              ___fldiv@a 001F                                ___fldiv@b 001B  
                              ___flmul@a 006A                                ___flmul@b 0066  
                            __pbssCOMRAM 002C                                ___flsub@a 008F  
                              ___flsub@b 008B                            __pcstackBANK0 0060  
                          __pcstackBANK1 0164                     i1Lcd_Write_Char@temp 000B  
                               ?_Lcd_Cmd 0001                              _efgtoa$1777 00A2  
                              _main$2134 0179                         ??_Lcd_Set_Cursor 001F  
                              __pintcode 0008            ?_config_interrup_usart_timer0 0001  
                               ?___fladd 007B                                 ?___fldiv 001B  
                               ?___flneg 001B                                 ?___flmul 0066  
                               ?___flsub 008B                                 ?___fltol 001B  
                               ?___lldiv 001B                         i1_Lcd_Write_Char 366C  
                            ??i1_Lcd_Cmd 000B                     i1Lcd_Set_Cursor@temp 0011  
                            __pintcodelo 0018                              __smallconst 0800  
                               ?_isdigit 001B                                 _ADC_Init 378E  
                               _ADC_Read 3634                                 ?_isspace 001B  
                               ?_sprintf 0164                           ___wmul@product 001F  
                               _LATCbits 000F8B                                 _LATDbits 000F8C  
                               _IPR1bits 000F9F                                 _PIE1bits 000F9D  
                               i1u420_20 32D0                                 i1u420_21 32CC  
                               i1u430_20 01CE                                 i1u422_20 0044  
                               i1u430_21 01CA                                 i1u422_21 0040  
                               i1u423_20 005C                                 i1u423_21 0058  
                               i1u424_20 008A                                 i1u424_21 0086  
                               i1u425_20 00B8                                 i1u425_21 00B4  
                               i1u418_20 30BC                                 i1u426_20 00E6  
                               i1u418_21 30B8                                 i1u426_21 00E2  
                               i1u419_20 30F0                                 i1u427_20 0114  
                               i1u419_21 30EC                                 i1u427_21 0110  
                               i1u428_20 0142                                 i1u428_21 013E  
                               i1u429_20 0170                                 i1u429_21 016C  
                               i1u630_27 3688                                 i1u631_27 369A  
                               i1u392_20 31DA                                 i1u392_21 31D6  
                               i1u632_27 3780                                 i1u393_20 31F0  
                               i1u393_21 31EC                       i1_Lcd_Write_String 327C  
                               i1u394_20 3206                                 i1u394_21 3202  
                               i1u395_20 321C                                 i1u395_21 3218  
                               Lcd_Cmd@a 001D                                 i2u421_40 3444  
                               i2u421_41 3440                                 _PIR1bits 000F9E  
                            _config_port 3728                                 i2u386_40 37F2  
                               i2u386_41 37EE                                 i2u396_40 3134  
                               i2u396_47 312A                                 i2u397_40 315C  
                               i2u397_47 3152                                 i2u398_40 316C  
                               i2u398_41 3168                                _temp_lm35 00EC  
                            ??_Lcd_Clear 001E                                 _RCONbits 000FD0  
                    ?i1_Lcd_Write_String 000E                                _vfpfcnvrt 1F0A  
                             _ADCON0bits 000FC2                               _ADCON1bits 000FC1  
                             _ADCON2bits 000FC0                        ___wmul@multiplier 001B  
                       ??_Lcd_Write_Char 001C                             _isspace$1855 001F  
                               _Lcd_Init 2F02                                 _Lcd_Port 316E  
                             vfpfcnvrt@c 00D9                              _INTCON2bits 000FF1  
                   ??i1_Lcd_Write_String 0010                 __end_of_Lcd_Write_String 327C  
                               __Hrparam 0000                                memcpy@tmp 0021  
                             vfprintf@ap 00E0                                 __Lrparam 0000  
                             vfprintf@fp 00DC                                 _Str_lm35 00F5  
                             ?_vfpfcnvrt 00C8                        ??_USART_printChar 0001  
         ??_config_interrup_usart_timer0 001B                 __end_ofi1_Lcd_Set_Cursor 3110  
                             _ANSELAbits 000F5B                               _ANSELCbits 000F5D  
                     ___fpclassifyf@F465 0030                               sprintf@fmt 0166  
                               ___xxtofl 2660                        i1Lcd_Set_Cursor@a 000E  
                      i1Lcd_Set_Cursor@b 000D                        i1Lcd_Set_Cursor@y 0010  
                      i1Lcd_Set_Cursor@z 000F                                 __ptext10 33CE  
                               __ptext11 2FDE                                 __ptext20 2D36  
                               __ptext12 244A                                 __ptext21 1B6E  
                               __ptext13 2B6E                                 __ptext30 2660  
                               __ptext22 2818                                 __ptext14 2962  
                               __ptext31 2F76                                 __ptext23 34B6  
                               __ptext15 346E                                 __ptext40 316E  
                               __ptext32 2DE0                                 __ptext24 36D6  
                               __ptext16 1280                                 __ptext41 3634  
                               __ptext33 2F02                                 __ptext25 3702  
                               __ptext17 35C4                                 __ptext50 32D2  
                               __ptext42 378E                                 __ptext34 3816  
                               __ptext26 3728                                 __ptext18 1742  
                               __ptext51 3110                                 __ptext35 3540  
                               __ptext27 37F4                                 __ptext19 2A68  
                               __ptext52 37DE                                 __ptext44 327C  
                               __ptext36 3226                                 __ptext28 3808  
                               __ptext45 366C                                 __ptext37 35FC  
                               __ptext29 37AC                                 __ptext46 30AA  
                               __ptext38 3044                                 __ptext47 376E  
                               __ptext39 374E                                 __ptext48 31CA  
                             strcpy@dest 001B                              i1Lcd_Port@a 000A  
                               efgtoa@fp 0093                                 efgtoa@ne 009C  
                               efgtoa@pp 00A4                                 efgtoa@ou 00AF  
                               _temp_mcp 00E8  __end_of_config_TMR0_16bits_Temporizador 37C8  
      ??_config_TMR0_16bits_Temporizador 001B         ?_config_TMR0_16bits_Temporizador 0001  
        _config_TMR0_16bits_Temporizador 37AC                                 isa$xinst 000000  
                               int$flags 0045                                 _vfprintf 337C  
                    i1Lcd_Write_String@a 000E                      i1Lcd_Write_String@i 0012  
                             _INTCONbits 000FF2                                 memcpy@d1 001B  
                               memcpy@s1 001D                                 isdigit@c 001B  
                       _Enviar_Data_UART 32D2                       Lcd_Write_Char@temp 001C  
                               intlevel1 0000                                 intlevel2 0000  
                              sprintf@ap 016C                 __end_ofi1_Lcd_Write_Char 36A4  
                               isspace@c 001B                         ___lldiv@dividend 001B  
                             i1Lcd_Cmd@a 000C                                strcpy@src 001D  
                             _OSCCONbits 000FD3                              efgtoa@nmode 00A6  
                            ??_vfpfcnvrt 00CE                       Lcd_Set_Cursor@temp 0022  
                               sprintf@f 016E                                 sprintf@s 0164  
                       ___lldiv@quotient 0023                               i1_Lcd_Port 31CA  
                          ___fladd@signs 0087                             ___fladd@aexp 0088  
                           ___fladd@bexp 0089                            ?_config_clock 0001  
                           ?_config_port 0001                               _USART_init 2F76  
