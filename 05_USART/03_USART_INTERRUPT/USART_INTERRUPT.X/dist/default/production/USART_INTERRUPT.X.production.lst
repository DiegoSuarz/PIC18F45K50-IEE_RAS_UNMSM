

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Aug 13 21:09:19 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    21                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    23   000000                     
    24                           ; Version 2.35
    25                           ; Generated 05/05/2021 GMT
    26                           ; 
    27                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution. Publication is not required when
    41                           ;        this file is used in an embedded application.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F45K50 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59   000000                     _RCREG	set	4014
    60   000000                     _TXREG	set	4013
    61   000000                     _SPBRG	set	4015
    62   000000                     _BAUDCON	set	4024
    63   000000                     _RCSTAbits	set	4011
    64   000000                     _TXSTAbits	set	4012
    65   000000                     _ANSELCbits	set	3933
    66   000000                     _SLRCON	set	3962
    67   000000                     _LATCbits	set	3979
    68   000000                     _TRISCbits	set	3988
    69   000000                     _PIE1bits	set	3997
    70   000000                     _PIR1bits	set	3998
    71   000000                     _RCSTA	set	4011
    72   000000                     _TXSTA	set	4012
    73   000000                     _OSCCONbits	set	4051
    74   000000                     _SPBRGH	set	4016
    75   000000                     _INTCONbits	set	4082
    76                           
    77                           	psect	smallconst
    78   000800                     __psmallconst:
    79                           	callstack 0
    80   000800  00                 	db	0
    81   000801                     STR_7:
    82   000801  0D                 	db	13
    83   000802  54                 	db	84	;'T'
    84   000803  6F                 	db	111	;'o'
    85   000804  64                 	db	100	;'d'
    86   000805  61                 	db	97	;'a'
    87   000806  73                 	db	115	;'s'
    88   000807  20                 	db	32
    89   000808  6C                 	db	108	;'l'
    90   000809  61                 	db	97	;'a'
    91   00080A  73                 	db	115	;'s'
    92   00080B  20                 	db	32
    93   00080C  6C                 	db	108	;'l'
    94   00080D  61                 	db	97	;'a'
    95   00080E  6D                 	db	109	;'m'
    96   00080F  70                 	db	112	;'p'
    97   000810  61                 	db	97	;'a'
    98   000811  72                 	db	114	;'r'
    99   000812  61                 	db	97	;'a'
   100   000813  73                 	db	115	;'s'
   101   000814  20                 	db	32
   102   000815  65                 	db	101	;'e'
   103   000816  6E                 	db	110	;'n'
   104   000817  63                 	db	99	;'c'
   105   000818  65                 	db	101	;'e'
   106   000819  6E                 	db	110	;'n'
   107   00081A  64                 	db	100	;'d'
   108   00081B  69                 	db	105	;'i'
   109   00081C  64                 	db	100	;'d'
   110   00081D  61                 	db	97	;'a'
   111   00081E  73                 	db	115	;'s'
   112   00081F  0D                 	db	13
   113   000820  00                 	db	0
   114   000821                     STR_8:
   115   000821  0D                 	db	13
   116   000822  54                 	db	84	;'T'
   117   000823  6F                 	db	111	;'o'
   118   000824  64                 	db	100	;'d'
   119   000825  61                 	db	97	;'a'
   120   000826  73                 	db	115	;'s'
   121   000827  20                 	db	32
   122   000828  6C                 	db	108	;'l'
   123   000829  61                 	db	97	;'a'
   124   00082A  73                 	db	115	;'s'
   125   00082B  20                 	db	32
   126   00082C  6C                 	db	108	;'l'
   127   00082D  61                 	db	97	;'a'
   128   00082E  6D                 	db	109	;'m'
   129   00082F  70                 	db	112	;'p'
   130   000830  61                 	db	97	;'a'
   131   000831  72                 	db	114	;'r'
   132   000832  61                 	db	97	;'a'
   133   000833  73                 	db	115	;'s'
   134   000834  20                 	db	32
   135   000835  61                 	db	97	;'a'
   136   000836  70                 	db	112	;'p'
   137   000837  61                 	db	97	;'a'
   138   000838  67                 	db	103	;'g'
   139   000839  61                 	db	97	;'a'
   140   00083A  64                 	db	100	;'d'
   141   00083B  61                 	db	97	;'a'
   142   00083C  73                 	db	115	;'s'
   143   00083D  0D                 	db	13
   144   00083E  00                 	db	0
   145   00083F                     STR_1:
   146   00083F  0D                 	db	13
   147   000840  4C                 	db	76	;'L'
   148   000841  61                 	db	97	;'a'
   149   000842  6D                 	db	109	;'m'
   150   000843  70                 	db	112	;'p'
   151   000844  61                 	db	97	;'a'
   152   000845  72                 	db	114	;'r'
   153   000846  61                 	db	97	;'a'
   154   000847  20                 	db	32
   155   000848  31                 	db	49	;'1'
   156   000849  20                 	db	32
   157   00084A  65                 	db	101	;'e'
   158   00084B  6E                 	db	110	;'n'
   159   00084C  63                 	db	99	;'c'
   160   00084D  65                 	db	101	;'e'
   161   00084E  6E                 	db	110	;'n'
   162   00084F  64                 	db	100	;'d'
   163   000850  69                 	db	105	;'i'
   164   000851  64                 	db	100	;'d'
   165   000852  61                 	db	97	;'a'
   166   000853  0D                 	db	13
   167   000854  00                 	db	0
   168   000855                     STR_2:
   169   000855  0D                 	db	13
   170   000856  4C                 	db	76	;'L'
   171   000857  61                 	db	97	;'a'
   172   000858  6D                 	db	109	;'m'
   173   000859  70                 	db	112	;'p'
   174   00085A  61                 	db	97	;'a'
   175   00085B  72                 	db	114	;'r'
   176   00085C  61                 	db	97	;'a'
   177   00085D  20                 	db	32
   178   00085E  32                 	db	50	;'2'
   179   00085F  20                 	db	32
   180   000860  65                 	db	101	;'e'
   181   000861  6E                 	db	110	;'n'
   182   000862  63                 	db	99	;'c'
   183   000863  65                 	db	101	;'e'
   184   000864  6E                 	db	110	;'n'
   185   000865  64                 	db	100	;'d'
   186   000866  69                 	db	105	;'i'
   187   000867  64                 	db	100	;'d'
   188   000868  61                 	db	97	;'a'
   189   000869  0D                 	db	13
   190   00086A  00                 	db	0
   191   00086B                     STR_3:
   192   00086B  0D                 	db	13
   193   00086C  4C                 	db	76	;'L'
   194   00086D  61                 	db	97	;'a'
   195   00086E  6D                 	db	109	;'m'
   196   00086F  70                 	db	112	;'p'
   197   000870  61                 	db	97	;'a'
   198   000871  72                 	db	114	;'r'
   199   000872  61                 	db	97	;'a'
   200   000873  20                 	db	32
   201   000874  33                 	db	51	;'3'
   202   000875  20                 	db	32
   203   000876  65                 	db	101	;'e'
   204   000877  6E                 	db	110	;'n'
   205   000878  63                 	db	99	;'c'
   206   000879  65                 	db	101	;'e'
   207   00087A  6E                 	db	110	;'n'
   208   00087B  64                 	db	100	;'d'
   209   00087C  69                 	db	105	;'i'
   210   00087D  64                 	db	100	;'d'
   211   00087E  61                 	db	97	;'a'
   212   00087F  0D                 	db	13
   213   000880  00                 	db	0
   214   000881                     STR_4:
   215   000881  0D                 	db	13
   216   000882  4C                 	db	76	;'L'
   217   000883  61                 	db	97	;'a'
   218   000884  6D                 	db	109	;'m'
   219   000885  70                 	db	112	;'p'
   220   000886  61                 	db	97	;'a'
   221   000887  72                 	db	114	;'r'
   222   000888  61                 	db	97	;'a'
   223   000889  20                 	db	32
   224   00088A  31                 	db	49	;'1'
   225   00088B  20                 	db	32
   226   00088C  61                 	db	97	;'a'
   227   00088D  70                 	db	112	;'p'
   228   00088E  61                 	db	97	;'a'
   229   00088F  67                 	db	103	;'g'
   230   000890  61                 	db	97	;'a'
   231   000891  64                 	db	100	;'d'
   232   000892  6F                 	db	111	;'o'
   233   000893  0D                 	db	13
   234   000894  00                 	db	0
   235   000895                     STR_5:
   236   000895  0D                 	db	13
   237   000896  4C                 	db	76	;'L'
   238   000897  61                 	db	97	;'a'
   239   000898  6D                 	db	109	;'m'
   240   000899  70                 	db	112	;'p'
   241   00089A  61                 	db	97	;'a'
   242   00089B  72                 	db	114	;'r'
   243   00089C  61                 	db	97	;'a'
   244   00089D  20                 	db	32
   245   00089E  32                 	db	50	;'2'
   246   00089F  20                 	db	32
   247   0008A0  61                 	db	97	;'a'
   248   0008A1  70                 	db	112	;'p'
   249   0008A2  61                 	db	97	;'a'
   250   0008A3  67                 	db	103	;'g'
   251   0008A4  61                 	db	97	;'a'
   252   0008A5  64                 	db	100	;'d'
   253   0008A6  6F                 	db	111	;'o'
   254   0008A7  0D                 	db	13
   255   0008A8  00                 	db	0
   256   0008A9                     STR_6:
   257   0008A9  0D                 	db	13
   258   0008AA  4C                 	db	76	;'L'
   259   0008AB  61                 	db	97	;'a'
   260   0008AC  6D                 	db	109	;'m'
   261   0008AD  70                 	db	112	;'p'
   262   0008AE  61                 	db	97	;'a'
   263   0008AF  72                 	db	114	;'r'
   264   0008B0  61                 	db	97	;'a'
   265   0008B1  20                 	db	32
   266   0008B2  33                 	db	51	;'3'
   267   0008B3  20                 	db	32
   268   0008B4  61                 	db	97	;'a'
   269   0008B5  70                 	db	112	;'p'
   270   0008B6  61                 	db	97	;'a'
   271   0008B7  67                 	db	103	;'g'
   272   0008B8  61                 	db	97	;'a'
   273   0008B9  64                 	db	100	;'d'
   274   0008BA  6F                 	db	111	;'o'
   275   0008BB  0D                 	db	13
   276   0008BC  00                 	db	0
   277   0008BD  00                 	db	0	; dummy byte at the end
   278   000000                     
   279                           ; #config settings
   280                           
   281                           	psect	cinit
   282   000A3C                     __pcinit:
   283                           	callstack 0
   284   000A3C                     start_initialization:
   285                           	callstack 0
   286   000A3C                     __initialization:
   287                           	callstack 0
   288                           
   289                           ; Clear objects allocated to COMRAM (1 bytes)
   290   000A3C  6A1B               	clrf	__pbssCOMRAM& (0+255),c
   291   000A3E                     end_of_initialization:
   292                           	callstack 0
   293   000A3E                     __end_of__initialization:
   294                           	callstack 0
   295   000A3E  901C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   296   000A40  921C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   297   000A42  0E00               	movlw	low (__Lsmallconst shr (0+16))
   298   000A44  6EF8               	movwf	tblptru,c
   299   000A46  0E08               	movlw	high __Lsmallconst
   300   000A48  6EF7               	movwf	tblptrh,c
   301   000A4A  0100               	movlb	0
   302   000A4C  EFFF  F004         	goto	_main	;jump to C main() function
   303                           
   304                           	psect	bssCOMRAM
   305   00001B                     __pbssCOMRAM:
   306                           	callstack 0
   307   00001B                     _dato_rx:
   308                           	callstack 0
   309   00001B                     	ds	1
   310                           
   311                           	psect	cstackCOMRAM
   312   000001                     __pcstackCOMRAM:
   313                           	callstack 0
   314   000001                     USART_printChar@caracter:
   315                           	callstack 0
   316                           
   317                           ; 1 bytes @ 0x0
   318   000001                     	ds	1
   319   000002                     USART_printString@Ptr_string:
   320                           	callstack 0
   321                           
   322                           ; 2 bytes @ 0x1
   323   000002                     	ds	2
   324   000004                     ??_ISR:
   325                           
   326                           ; 1 bytes @ 0x3
   327   000004                     	ds	4
   328   000008                     ?___lldiv:
   329                           	callstack 0
   330   000008                     ___lldiv@dividend:
   331                           	callstack 0
   332                           
   333                           ; 4 bytes @ 0x7
   334   000008                     	ds	4
   335   00000C                     ___lldiv@divisor:
   336                           	callstack 0
   337                           
   338                           ; 4 bytes @ 0xB
   339   00000C                     	ds	4
   340   000010                     ___lldiv@quotient:
   341                           	callstack 0
   342                           
   343                           ; 4 bytes @ 0xF
   344   000010                     	ds	4
   345   000014                     ___lldiv@counter:
   346                           	callstack 0
   347                           
   348                           ; 1 bytes @ 0x13
   349   000014                     	ds	1
   350   000015                     USART_init@baudios:
   351                           	callstack 0
   352                           
   353                           ; 4 bytes @ 0x14
   354   000015                     	ds	4
   355   000019                     USART_init@n:
   356                           	callstack 0
   357                           
   358                           ; 2 bytes @ 0x18
   359   000019                     	ds	2
   360   00001B                     
   361                           ; 1 bytes @ 0x1A
   362 ;;
   363 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   364 ;;
   365 ;; *************** function _main *****************
   366 ;; Defined at:
   367 ;;		line 33 in file "main.c"
   368 ;; Parameters:    Size  Location     Type
   369 ;;		None
   370 ;; Auto vars:     Size  Location     Type
   371 ;;		None
   372 ;; Return value:  Size  Location     Type
   373 ;;                  1    wreg      void 
   374 ;; Registers used:
   375 ;;		wreg, status,2, status,0, cstack
   376 ;; Tracked objects:
   377 ;;		On entry : 0/0
   378 ;;		On exit  : 0/0
   379 ;;		Unchanged: 0/0
   380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   381 ;;      Params:         0       0       0       0       0       0       0       0       0
   382 ;;      Locals:         0       0       0       0       0       0       0       0       0
   383 ;;      Temps:          0       0       0       0       0       0       0       0       0
   384 ;;      Totals:         0       0       0       0       0       0       0       0       0
   385 ;;Total ram usage:        0 bytes
   386 ;; Hardware stack levels required when called: 5
   387 ;; This function calls:
   388 ;;		_Config_Clock
   389 ;;		_Config_Port
   390 ;;		_USART_init
   391 ;;		_config_Interrupt_USART
   392 ;; This function is called by:
   393 ;;		Startup code after reset
   394 ;; This function uses a non-reentrant model
   395 ;;
   396                           
   397                           	psect	text0
   398   0009FE                     __ptext0:
   399                           	callstack 0
   400   0009FE                     _main:
   401                           	callstack 26
   402   0009FE                     
   403                           ;main.c: 34:     Config_Clock();
   404   0009FE  EC31  F005         	call	_Config_Clock	;wreg free
   405                           
   406                           ;main.c: 35:     Config_Port();
   407   000A02  EC28  F005         	call	_Config_Port	;wreg free
   408   000A06                     
   409                           ;main.c: 36:     config_Interrupt_USART();
   410   000A06  EC38  F005         	call	_config_Interrupt_USART	;wreg free
   411   000A0A                     
   412                           ;main.c: 37:     USART_init(9600);
   413   000A0A  0E80               	movlw	128
   414   000A0C  6E15               	movwf	USART_init@baudios^0,c
   415   000A0E  0E25               	movlw	37
   416   000A10  6E16               	movwf	(USART_init@baudios+1)^0,c
   417   000A12  0E00               	movlw	0
   418   000A14  6E17               	movwf	(USART_init@baudios+2)^0,c
   419   000A16  0E00               	movlw	0
   420   000A18  6E18               	movwf	(USART_init@baudios+3)^0,c
   421   000A1A  ECB1  F004         	call	_USART_init	;wreg free
   422   000A1E                     l87:
   423   000A1E  EF0F  F005         	goto	l87
   424   000A22  EFB5  F000         	goto	start
   425   000A26                     __end_of_main:
   426                           	callstack 0
   427                           
   428 ;; *************** function _config_Interrupt_USART *****************
   429 ;; Defined at:
   430 ;;		line 68 in file "main.c"
   431 ;; Parameters:    Size  Location     Type
   432 ;;		None
   433 ;; Auto vars:     Size  Location     Type
   434 ;;		None
   435 ;; Return value:  Size  Location     Type
   436 ;;                  1    wreg      void 
   437 ;; Registers used:
   438 ;;		None
   439 ;; Tracked objects:
   440 ;;		On entry : 0/0
   441 ;;		On exit  : 0/0
   442 ;;		Unchanged: 0/0
   443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   444 ;;      Params:         0       0       0       0       0       0       0       0       0
   445 ;;      Locals:         0       0       0       0       0       0       0       0       0
   446 ;;      Temps:          0       0       0       0       0       0       0       0       0
   447 ;;      Totals:         0       0       0       0       0       0       0       0       0
   448 ;;Total ram usage:        0 bytes
   449 ;; Hardware stack levels used: 1
   450 ;; Hardware stack levels required when called: 3
   451 ;; This function calls:
   452 ;;		Nothing
   453 ;; This function is called by:
   454 ;;		_main
   455 ;; This function uses a non-reentrant model
   456 ;;
   457                           
   458                           	psect	text1
   459   000A70                     __ptext1:
   460                           	callstack 0
   461   000A70                     _config_Interrupt_USART:
   462                           	callstack 27
   463   000A70                     
   464                           ;main.c: 69:     INTCONbits.GIE=1;
   465   000A70  8EF2               	bsf	242,7,c	;volatile
   466                           
   467                           ;main.c: 70:     INTCONbits.PEIE=1;
   468   000A72  8CF2               	bsf	242,6,c	;volatile
   469                           
   470                           ;main.c: 71:     PIE1bits.RC1IE=1;
   471   000A74  8A9D               	bsf	157,5,c	;volatile
   472                           
   473                           ;main.c: 72:     PIR1bits.RCIF=1;
   474   000A76  8A9E               	bsf	158,5,c	;volatile
   475   000A78  0012               	return		;funcret
   476   000A7A                     __end_of_config_Interrupt_USART:
   477                           	callstack 0
   478                           
   479 ;; *************** function _USART_init *****************
   480 ;; Defined at:
   481 ;;		line 3 in file "../../00_USART_Ejm1/UART.X/USART.c"
   482 ;; Parameters:    Size  Location     Type
   483 ;;  baudios         4   20[COMRAM] unsigned long 
   484 ;; Auto vars:     Size  Location     Type
   485 ;;  n               2   24[COMRAM] unsigned short 
   486 ;; Return value:  Size  Location     Type
   487 ;;                  1    wreg      void 
   488 ;; Registers used:
   489 ;;		wreg, status,2, status,0, cstack
   490 ;; Tracked objects:
   491 ;;		On entry : 0/0
   492 ;;		On exit  : 0/0
   493 ;;		Unchanged: 0/0
   494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   495 ;;      Params:         4       0       0       0       0       0       0       0       0
   496 ;;      Locals:         2       0       0       0       0       0       0       0       0
   497 ;;      Temps:          0       0       0       0       0       0       0       0       0
   498 ;;      Totals:         6       0       0       0       0       0       0       0       0
   499 ;;Total ram usage:        6 bytes
   500 ;; Hardware stack levels used: 1
   501 ;; Hardware stack levels required when called: 4
   502 ;; This function calls:
   503 ;;		___lldiv
   504 ;; This function is called by:
   505 ;;		_main
   506 ;; This function uses a non-reentrant model
   507 ;;
   508                           
   509                           	psect	text2
   510   000962                     __ptext2:
   511                           	callstack 0
   512   000962                     _USART_init:
   513                           	callstack 26
   514   000962                     
   515                           ;../../00_USART_Ejm1/UART.X/USART.c: 7:     ANSELCbits.ANSC6=0;
   516   000962  010F               	movlb	15	; () banked
   517   000964  9D5D               	bcf	93,6,b	;volatile
   518   000966                     
   519                           ; BSR set to: 15
   520                           ;../../00_USART_Ejm1/UART.X/USART.c: 8:     ANSELCbits.ANSC7=0;
   521   000966  9F5D               	bcf	93,7,b	;volatile
   522   000968                     
   523                           ; BSR set to: 15
   524                           ;../../00_USART_Ejm1/UART.X/USART.c: 9:     TRISCbits.TRISC6=0;
   525   000968  9C94               	bcf	148,6,c	;volatile
   526   00096A                     
   527                           ; BSR set to: 15
   528                           ;../../00_USART_Ejm1/UART.X/USART.c: 10:     TRISCbits.TRISC7=1;
   529   00096A  8E94               	bsf	148,7,c	;volatile
   530                           
   531                           ;../../00_USART_Ejm1/UART.X/USART.c: 12:     TXSTA=0B00100100;
   532   00096C  0E24               	movlw	36
   533   00096E  6EAC               	movwf	172,c	;volatile
   534                           
   535                           ;../../00_USART_Ejm1/UART.X/USART.c: 13:     RCSTA=0B10010000;
   536   000970  0E90               	movlw	144
   537   000972  6EAB               	movwf	171,c	;volatile
   538                           
   539                           ;../../00_USART_Ejm1/UART.X/USART.c: 14:     BAUDCON=0B00001000;
   540   000974  0E08               	movlw	8
   541   000976  6EB8               	movwf	184,c	;volatile
   542   000978                     
   543                           ; BSR set to: 15
   544                           ;../../00_USART_Ejm1/UART.X/USART.c: 16:     n=(uint16_t)(((16000000/baudios)/4)-1);
   545   000978  0E00               	movlw	0
   546   00097A  6E08               	movwf	___lldiv@dividend^0,c
   547   00097C  0E24               	movlw	36
   548   00097E  6E09               	movwf	(___lldiv@dividend+1)^0,c
   549   000980  0EF4               	movlw	244
   550   000982  6E0A               	movwf	(___lldiv@dividend+2)^0,c
   551   000984  0E00               	movlw	0
   552   000986  6E0B               	movwf	(___lldiv@dividend+3)^0,c
   553   000988  C015  F00C         	movff	USART_init@baudios,___lldiv@divisor
   554   00098C  C016  F00D         	movff	USART_init@baudios+1,___lldiv@divisor+1
   555   000990  C017  F00E         	movff	USART_init@baudios+2,___lldiv@divisor+2
   556   000994  C018  F00F         	movff	USART_init@baudios+3,___lldiv@divisor+3
   557   000998  EC5F  F004         	call	___lldiv	;wreg free
   558   00099C  0E03               	movlw	3
   559   00099E  EFD6  F004         	goto	u220
   560   0009A2                     u225:
   561   0009A2  90D8               	bcf	status,0,c
   562   0009A4  320B               	rrcf	(?___lldiv+3)^0,f,c
   563   0009A6  320A               	rrcf	(?___lldiv+2)^0,f,c
   564   0009A8  3209               	rrcf	(?___lldiv+1)^0,f,c
   565   0009AA  3208               	rrcf	?___lldiv^0,f,c
   566   0009AC                     u220:
   567   0009AC  2EE8               	decfsz	wreg,f,c
   568   0009AE  EFD1  F004         	goto	u225
   569   0009B2  0EFF               	movlw	255
   570   0009B4  2408               	addwf	?___lldiv^0,w,c
   571   0009B6  6E19               	movwf	USART_init@n^0,c
   572   0009B8  0EFF               	movlw	255
   573   0009BA  2009               	addwfc	(?___lldiv+1)^0,w,c
   574   0009BC  6E1A               	movwf	(USART_init@n+1)^0,c
   575   0009BE                     
   576                           ;../../00_USART_Ejm1/UART.X/USART.c: 18:     SPBRG=(uint8_t)n;
   577   0009BE  C019  FFAF         	movff	USART_init@n,4015	;volatile
   578   0009C2                     
   579                           ;../../00_USART_Ejm1/UART.X/USART.c: 19:     SPBRGH=(uint8_t)(n>>8);
   580   0009C2  501A               	movf	(USART_init@n+1)^0,w,c
   581   0009C4  6EB0               	movwf	176,c	;volatile
   582   0009C6  0012               	return		;funcret
   583   0009C8                     __end_of_USART_init:
   584                           	callstack 0
   585                           
   586 ;; *************** function ___lldiv *****************
   587 ;; Defined at:
   588 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__lldiv.c"
   589 ;; Parameters:    Size  Location     Type
   590 ;;  dividend        4    7[COMRAM] unsigned long 
   591 ;;  divisor         4   11[COMRAM] unsigned long 
   592 ;; Auto vars:     Size  Location     Type
   593 ;;  quotient        4   15[COMRAM] unsigned long 
   594 ;;  counter         1   19[COMRAM] unsigned char 
   595 ;; Return value:  Size  Location     Type
   596 ;;                  4    7[COMRAM] unsigned long 
   597 ;; Registers used:
   598 ;;		wreg, status,2, status,0
   599 ;; Tracked objects:
   600 ;;		On entry : 0/0
   601 ;;		On exit  : 0/0
   602 ;;		Unchanged: 0/0
   603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   604 ;;      Params:         8       0       0       0       0       0       0       0       0
   605 ;;      Locals:         5       0       0       0       0       0       0       0       0
   606 ;;      Temps:          0       0       0       0       0       0       0       0       0
   607 ;;      Totals:        13       0       0       0       0       0       0       0       0
   608 ;;Total ram usage:       13 bytes
   609 ;; Hardware stack levels used: 1
   610 ;; Hardware stack levels required when called: 3
   611 ;; This function calls:
   612 ;;		Nothing
   613 ;; This function is called by:
   614 ;;		_USART_init
   615 ;; This function uses a non-reentrant model
   616 ;;
   617                           
   618                           	psect	text3
   619   0008BE                     __ptext3:
   620                           	callstack 0
   621   0008BE                     ___lldiv:
   622                           	callstack 26
   623   0008BE  0E00               	movlw	0
   624   0008C0  6E10               	movwf	___lldiv@quotient^0,c
   625   0008C2  0E00               	movlw	0
   626   0008C4  6E11               	movwf	(___lldiv@quotient+1)^0,c
   627   0008C6  0E00               	movlw	0
   628   0008C8  6E12               	movwf	(___lldiv@quotient+2)^0,c
   629   0008CA  0E00               	movlw	0
   630   0008CC  6E13               	movwf	(___lldiv@quotient+3)^0,c
   631   0008CE  500C               	movf	___lldiv@divisor^0,w,c
   632   0008D0  100D               	iorwf	(___lldiv@divisor+1)^0,w,c
   633   0008D2  100E               	iorwf	(___lldiv@divisor+2)^0,w,c
   634   0008D4  100F               	iorwf	(___lldiv@divisor+3)^0,w,c
   635   0008D6  B4D8               	btfsc	status,2,c
   636   0008D8  EF70  F004         	goto	u191
   637   0008DC  EF72  F004         	goto	u190
   638   0008E0                     u191:
   639   0008E0  EFA8  F004         	goto	l150
   640   0008E4                     u190:
   641   0008E4  0E01               	movlw	1
   642   0008E6  6E14               	movwf	___lldiv@counter^0,c
   643   0008E8  EF7C  F004         	goto	l942
   644   0008EC                     l940:
   645   0008EC  90D8               	bcf	status,0,c
   646   0008EE  360C               	rlcf	___lldiv@divisor^0,f,c
   647   0008F0  360D               	rlcf	(___lldiv@divisor+1)^0,f,c
   648   0008F2  360E               	rlcf	(___lldiv@divisor+2)^0,f,c
   649   0008F4  360F               	rlcf	(___lldiv@divisor+3)^0,f,c
   650   0008F6  2A14               	incf	___lldiv@counter^0,f,c
   651   0008F8                     l942:
   652   0008F8  AE0F               	btfss	(___lldiv@divisor+3)^0,7,c
   653   0008FA  EF81  F004         	goto	u201
   654   0008FE  EF83  F004         	goto	u200
   655   000902                     u201:
   656   000902  EF76  F004         	goto	l940
   657   000906                     u200:
   658   000906                     l944:
   659   000906  90D8               	bcf	status,0,c
   660   000908  3610               	rlcf	___lldiv@quotient^0,f,c
   661   00090A  3611               	rlcf	(___lldiv@quotient+1)^0,f,c
   662   00090C  3612               	rlcf	(___lldiv@quotient+2)^0,f,c
   663   00090E  3613               	rlcf	(___lldiv@quotient+3)^0,f,c
   664   000910  500C               	movf	___lldiv@divisor^0,w,c
   665   000912  5C08               	subwf	___lldiv@dividend^0,w,c
   666   000914  500D               	movf	(___lldiv@divisor+1)^0,w,c
   667   000916  5809               	subwfb	(___lldiv@dividend+1)^0,w,c
   668   000918  500E               	movf	(___lldiv@divisor+2)^0,w,c
   669   00091A  580A               	subwfb	(___lldiv@dividend+2)^0,w,c
   670   00091C  500F               	movf	(___lldiv@divisor+3)^0,w,c
   671   00091E  580B               	subwfb	(___lldiv@dividend+3)^0,w,c
   672   000920  A0D8               	btfss	status,0,c
   673   000922  EF95  F004         	goto	u211
   674   000926  EF97  F004         	goto	u210
   675   00092A                     u211:
   676   00092A  EFA0  F004         	goto	l952
   677   00092E                     u210:
   678   00092E  500C               	movf	___lldiv@divisor^0,w,c
   679   000930  5E08               	subwf	___lldiv@dividend^0,f,c
   680   000932  500D               	movf	(___lldiv@divisor+1)^0,w,c
   681   000934  5A09               	subwfb	(___lldiv@dividend+1)^0,f,c
   682   000936  500E               	movf	(___lldiv@divisor+2)^0,w,c
   683   000938  5A0A               	subwfb	(___lldiv@dividend+2)^0,f,c
   684   00093A  500F               	movf	(___lldiv@divisor+3)^0,w,c
   685   00093C  5A0B               	subwfb	(___lldiv@dividend+3)^0,f,c
   686   00093E  8010               	bsf	___lldiv@quotient^0,0,c
   687   000940                     l952:
   688   000940  90D8               	bcf	status,0,c
   689   000942  320F               	rrcf	(___lldiv@divisor+3)^0,f,c
   690   000944  320E               	rrcf	(___lldiv@divisor+2)^0,f,c
   691   000946  320D               	rrcf	(___lldiv@divisor+1)^0,f,c
   692   000948  320C               	rrcf	___lldiv@divisor^0,f,c
   693   00094A  2E14               	decfsz	___lldiv@counter^0,f,c
   694   00094C  EF83  F004         	goto	l944
   695   000950                     l150:
   696   000950  C010  F008         	movff	___lldiv@quotient,?___lldiv
   697   000954  C011  F009         	movff	___lldiv@quotient+1,?___lldiv+1
   698   000958  C012  F00A         	movff	___lldiv@quotient+2,?___lldiv+2
   699   00095C  C013  F00B         	movff	___lldiv@quotient+3,?___lldiv+3
   700   000960  0012               	return		;funcret
   701   000962                     __end_of___lldiv:
   702                           	callstack 0
   703                           
   704 ;; *************** function _Config_Port *****************
   705 ;; Defined at:
   706 ;;		line 51 in file "main.c"
   707 ;; Parameters:    Size  Location     Type
   708 ;;		None
   709 ;; Auto vars:     Size  Location     Type
   710 ;;		None
   711 ;; Return value:  Size  Location     Type
   712 ;;                  1    wreg      void 
   713 ;; Registers used:
   714 ;;		wreg, status,2
   715 ;; Tracked objects:
   716 ;;		On entry : 0/0
   717 ;;		On exit  : 0/0
   718 ;;		Unchanged: 0/0
   719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   720 ;;      Params:         0       0       0       0       0       0       0       0       0
   721 ;;      Locals:         0       0       0       0       0       0       0       0       0
   722 ;;      Temps:          0       0       0       0       0       0       0       0       0
   723 ;;      Totals:         0       0       0       0       0       0       0       0       0
   724 ;;Total ram usage:        0 bytes
   725 ;; Hardware stack levels used: 1
   726 ;; Hardware stack levels required when called: 3
   727 ;; This function calls:
   728 ;;		Nothing
   729 ;; This function is called by:
   730 ;;		_main
   731 ;; This function uses a non-reentrant model
   732 ;;
   733                           
   734                           	psect	text4
   735   000A50                     __ptext4:
   736                           	callstack 0
   737   000A50                     _Config_Port:
   738                           	callstack 27
   739   000A50                     
   740                           ;main.c: 53:     LATCbits.LATC0;
   741   000A50  508B               	movf	139,w,c	;volatile
   742                           
   743                           ;main.c: 54:     LATCbits.LATC1;
   744   000A52  508B               	movf	139,w,c	;volatile
   745                           
   746                           ;main.c: 55:     LATCbits.LATC2;
   747   000A54  508B               	movf	139,w,c	;volatile
   748   000A56                     
   749                           ;main.c: 57:     SLRCON=0b00000000;
   750   000A56  0E00               	movlw	0
   751   000A58  6E7A               	movwf	122,c	;volatile
   752   000A5A                     
   753                           ;main.c: 62:     TRISCbits.TRISC0=0;
   754   000A5A  9094               	bcf	148,0,c	;volatile
   755   000A5C                     
   756                           ;main.c: 63:     TRISCbits.TRISC1=0;
   757   000A5C  9294               	bcf	148,1,c	;volatile
   758   000A5E                     
   759                           ;main.c: 64:     TRISCbits.TRISC2=0;
   760   000A5E  9494               	bcf	148,2,c	;volatile
   761   000A60  0012               	return		;funcret
   762   000A62                     __end_of_Config_Port:
   763                           	callstack 0
   764                           
   765 ;; *************** function _Config_Clock *****************
   766 ;; Defined at:
   767 ;;		line 46 in file "main.c"
   768 ;; Parameters:    Size  Location     Type
   769 ;;		None
   770 ;; Auto vars:     Size  Location     Type
   771 ;;		None
   772 ;; Return value:  Size  Location     Type
   773 ;;                  1    wreg      void 
   774 ;; Registers used:
   775 ;;		wreg, status,2
   776 ;; Tracked objects:
   777 ;;		On entry : 0/0
   778 ;;		On exit  : 0/0
   779 ;;		Unchanged: 0/0
   780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   781 ;;      Params:         0       0       0       0       0       0       0       0       0
   782 ;;      Locals:         0       0       0       0       0       0       0       0       0
   783 ;;      Temps:          0       0       0       0       0       0       0       0       0
   784 ;;      Totals:         0       0       0       0       0       0       0       0       0
   785 ;;Total ram usage:        0 bytes
   786 ;; Hardware stack levels used: 1
   787 ;; Hardware stack levels required when called: 3
   788 ;; This function calls:
   789 ;;		Nothing
   790 ;; This function is called by:
   791 ;;		_main
   792 ;; This function uses a non-reentrant model
   793 ;;
   794                           
   795                           	psect	text5
   796   000A62                     __ptext5:
   797                           	callstack 0
   798   000A62                     _Config_Clock:
   799                           	callstack 27
   800   000A62                     
   801                           ;main.c: 47:     OSCCONbits.IRCF=0b111;
   802   000A62  0E70               	movlw	112
   803   000A64  12D3               	iorwf	211,f,c	;volatile
   804                           
   805                           ;main.c: 48:     OSCCONbits.SCS=0b10;
   806   000A66  50D3               	movf	211,w,c	;volatile
   807   000A68  0BFC               	andlw	-4
   808   000A6A  0902               	iorlw	2
   809   000A6C  6ED3               	movwf	211,c	;volatile
   810   000A6E  0012               	return		;funcret
   811   000A70                     __end_of_Config_Clock:
   812                           	callstack 0
   813                           
   814 ;; *************** function _ISR *****************
   815 ;; Defined at:
   816 ;;		line 75 in file "main.c"
   817 ;; Parameters:    Size  Location     Type
   818 ;;		None
   819 ;; Auto vars:     Size  Location     Type
   820 ;;		None
   821 ;; Return value:  Size  Location     Type
   822 ;;                  1    wreg      void 
   823 ;; Registers used:
   824 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   825 ;; Tracked objects:
   826 ;;		On entry : 0/0
   827 ;;		On exit  : 0/0
   828 ;;		Unchanged: 0/0
   829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   830 ;;      Params:         0       0       0       0       0       0       0       0       0
   831 ;;      Locals:         0       0       0       0       0       0       0       0       0
   832 ;;      Temps:          4       0       0       0       0       0       0       0       0
   833 ;;      Totals:         4       0       0       0       0       0       0       0       0
   834 ;;Total ram usage:        4 bytes
   835 ;; Hardware stack levels used: 1
   836 ;; Hardware stack levels required when called: 2
   837 ;; This function calls:
   838 ;;		_USART_printString
   839 ;; This function is called by:
   840 ;;		Interrupt level 2
   841 ;; This function uses a non-reentrant model
   842 ;;
   843                           
   844                           	psect	intcode
   845   000008                     __pintcode:
   846                           	callstack 0
   847   000008                     _ISR:
   848                           	callstack 26
   849                           
   850                           ;incstack = 0
   851   000008  821C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   852   00000A  CFF6 F004          	movff	tblptrl,??_ISR
   853   00000E  CFF7 F005          	movff	tblptrh,??_ISR+1
   854   000012  CFF8 F006          	movff	tblptru,??_ISR+2
   855   000016  CFF5 F007          	movff	tablat,??_ISR+3
   856   00001A                     
   857                           ;main.c: 76:     if(PIR1bits.RCIF){
   858   00001A  AA9E               	btfss	158,5,c	;volatile
   859   00001C  EF12  F000         	goto	i2u24_41
   860   000020  EF14  F000         	goto	i2u24_40
   861   000024                     i2u24_41:
   862   000024  EFAB  F000         	goto	i2l120
   863   000028                     i2u24_40:
   864   000028                     
   865                           ;main.c: 77:         PIR1bits.RCIF=0;
   866   000028  9A9E               	bcf	158,5,c	;volatile
   867                           
   868                           ;main.c: 78:         dato_rx=RCREG;
   869   00002A  CFAE F01B          	movff	4014,_dato_rx	;volatile
   870   00002E                     
   871                           ;main.c: 81:         if(dato_rx == 'q'){
   872   00002E  0E71               	movlw	113
   873   000030  181B               	xorwf	_dato_rx^0,w,c
   874   000032  A4D8               	btfss	status,2,c
   875   000034  EF1E  F000         	goto	i2u25_41
   876   000038  EF20  F000         	goto	i2u25_40
   877   00003C                     i2u25_41:
   878   00003C  EF29  F000         	goto	i2l996
   879   000040                     i2u25_40:
   880   000040                     
   881                           ;main.c: 82:             USART_printString("\rLampara 1 encendida\r");
   882   000040  0E3F               	movlw	low STR_1
   883   000042  6E02               	movwf	USART_printString@Ptr_string^0,c
   884   000044  0E08               	movlw	high STR_1
   885   000046  6E03               	movwf	(USART_printString@Ptr_string+1)^0,c
   886   000048  ECE4  F004         	call	_USART_printString	;wreg free
   887   00004C                     
   888                           ;main.c: 83:             LATCbits.LATC0 = 1;
   889   00004C  808B               	bsf	139,0,c	;volatile
   890                           
   891                           ;main.c: 85:         }
   892   00004E  EFAB  F000         	goto	i2l120
   893   000052                     i2l996:
   894   000052  0E77               	movlw	119
   895   000054  181B               	xorwf	_dato_rx^0,w,c
   896   000056  A4D8               	btfss	status,2,c
   897   000058  EF30  F000         	goto	i2u26_41
   898   00005C  EF32  F000         	goto	i2u26_40
   899   000060                     i2u26_41:
   900   000060  EF3B  F000         	goto	i2l1002
   901   000064                     i2u26_40:
   902   000064                     
   903                           ;main.c: 87:             USART_printString("\rLampara 2 encendida\r");
   904   000064  0E55               	movlw	low STR_2
   905   000066  6E02               	movwf	USART_printString@Ptr_string^0,c
   906   000068  0E08               	movlw	high STR_2
   907   00006A  6E03               	movwf	(USART_printString@Ptr_string+1)^0,c
   908   00006C  ECE4  F004         	call	_USART_printString	;wreg free
   909   000070                     
   910                           ;main.c: 88:             LATCbits.LATC1 = 1;
   911   000070  828B               	bsf	139,1,c	;volatile
   912                           
   913                           ;main.c: 89:         }
   914   000072  EFAB  F000         	goto	i2l120
   915   000076                     i2l1002:
   916   000076  0E65               	movlw	101
   917   000078  181B               	xorwf	_dato_rx^0,w,c
   918   00007A  A4D8               	btfss	status,2,c
   919   00007C  EF42  F000         	goto	i2u27_41
   920   000080  EF44  F000         	goto	i2u27_40
   921   000084                     i2u27_41:
   922   000084  EF4D  F000         	goto	i2l1008
   923   000088                     i2u27_40:
   924   000088                     
   925                           ;main.c: 91:             USART_printString("\rLampara 3 encendida\r");
   926   000088  0E6B               	movlw	low STR_3
   927   00008A  6E02               	movwf	USART_printString@Ptr_string^0,c
   928   00008C  0E08               	movlw	high STR_3
   929   00008E  6E03               	movwf	(USART_printString@Ptr_string+1)^0,c
   930   000090  ECE4  F004         	call	_USART_printString	;wreg free
   931   000094                     
   932                           ;main.c: 92:             LATCbits.LATC2 = 1;
   933   000094  848B               	bsf	139,2,c	;volatile
   934                           
   935                           ;main.c: 93:         }
   936   000096  EFAB  F000         	goto	i2l120
   937   00009A                     i2l1008:
   938   00009A  0E61               	movlw	97
   939   00009C  181B               	xorwf	_dato_rx^0,w,c
   940   00009E  A4D8               	btfss	status,2,c
   941   0000A0  EF54  F000         	goto	i2u28_41
   942   0000A4  EF56  F000         	goto	i2u28_40
   943   0000A8                     i2u28_41:
   944   0000A8  EF5F  F000         	goto	i2l1014
   945   0000AC                     i2u28_40:
   946   0000AC                     
   947                           ;main.c: 95:             USART_printString("\rLampara 1 apagado\r");
   948   0000AC  0E81               	movlw	low STR_4
   949   0000AE  6E02               	movwf	USART_printString@Ptr_string^0,c
   950   0000B0  0E08               	movlw	high STR_4
   951   0000B2  6E03               	movwf	(USART_printString@Ptr_string+1)^0,c
   952   0000B4  ECE4  F004         	call	_USART_printString	;wreg free
   953   0000B8                     
   954                           ;main.c: 96:             LATCbits.LATC0 = 0;
   955   0000B8  908B               	bcf	139,0,c	;volatile
   956                           
   957                           ;main.c: 97:         }
   958   0000BA  EFAB  F000         	goto	i2l120
   959   0000BE                     i2l1014:
   960   0000BE  0E73               	movlw	115
   961   0000C0  181B               	xorwf	_dato_rx^0,w,c
   962   0000C2  A4D8               	btfss	status,2,c
   963   0000C4  EF66  F000         	goto	i2u29_41
   964   0000C8  EF68  F000         	goto	i2u29_40
   965   0000CC                     i2u29_41:
   966   0000CC  EF71  F000         	goto	i2l1020
   967   0000D0                     i2u29_40:
   968   0000D0                     
   969                           ;main.c: 99:             USART_printString("\rLampara 2 apagado\r");
   970   0000D0  0E95               	movlw	low STR_5
   971   0000D2  6E02               	movwf	USART_printString@Ptr_string^0,c
   972   0000D4  0E08               	movlw	high STR_5
   973   0000D6  6E03               	movwf	(USART_printString@Ptr_string+1)^0,c
   974   0000D8  ECE4  F004         	call	_USART_printString	;wreg free
   975   0000DC                     
   976                           ;main.c: 100:             LATCbits.LATC1 = 0;
   977   0000DC  928B               	bcf	139,1,c	;volatile
   978                           
   979                           ;main.c: 101:         }
   980   0000DE  EFAB  F000         	goto	i2l120
   981   0000E2                     i2l1020:
   982   0000E2  0E64               	movlw	100
   983   0000E4  181B               	xorwf	_dato_rx^0,w,c
   984   0000E6  A4D8               	btfss	status,2,c
   985   0000E8  EF78  F000         	goto	i2u30_41
   986   0000EC  EF7A  F000         	goto	i2u30_40
   987   0000F0                     i2u30_41:
   988   0000F0  EF83  F000         	goto	i2l1026
   989   0000F4                     i2u30_40:
   990   0000F4                     
   991                           ;main.c: 103:             USART_printString("\rLampara 3 apagado\r");
   992   0000F4  0EA9               	movlw	low STR_6
   993   0000F6  6E02               	movwf	USART_printString@Ptr_string^0,c
   994   0000F8  0E08               	movlw	high STR_6
   995   0000FA  6E03               	movwf	(USART_printString@Ptr_string+1)^0,c
   996   0000FC  ECE4  F004         	call	_USART_printString	;wreg free
   997   000100                     
   998                           ;main.c: 104:             LATCbits.LATC2 = 0;
   999   000100  948B               	bcf	139,2,c	;volatile
  1000                           
  1001                           ;main.c: 105:         }
  1002   000102  EFAB  F000         	goto	i2l120
  1003   000106                     i2l1026:
  1004   000106  0E72               	movlw	114
  1005   000108  181B               	xorwf	_dato_rx^0,w,c
  1006   00010A  A4D8               	btfss	status,2,c
  1007   00010C  EF8A  F000         	goto	i2u31_41
  1008   000110  EF8C  F000         	goto	i2u31_40
  1009   000114                     i2u31_41:
  1010   000114  EF97  F000         	goto	i2l1036
  1011   000118                     i2u31_40:
  1012   000118                     
  1013                           ;main.c: 107:             USART_printString("\rTodas las lamparas encendidas\r");
  1014   000118  0E01               	movlw	low STR_7
  1015   00011A  6E02               	movwf	USART_printString@Ptr_string^0,c
  1016   00011C  0E08               	movlw	high STR_7
  1017   00011E  6E03               	movwf	(USART_printString@Ptr_string+1)^0,c
  1018   000120  ECE4  F004         	call	_USART_printString	;wreg free
  1019   000124                     
  1020                           ;main.c: 108:             LATCbits.LATC0 = 1;
  1021   000124  808B               	bsf	139,0,c	;volatile
  1022   000126                     
  1023                           ;main.c: 109:             LATCbits.LATC1 = 1;
  1024   000126  828B               	bsf	139,1,c	;volatile
  1025   000128                     
  1026                           ;main.c: 110:             LATCbits.LATC2 = 1;
  1027   000128  848B               	bsf	139,2,c	;volatile
  1028                           
  1029                           ;main.c: 111:         }
  1030   00012A  EFAB  F000         	goto	i2l120
  1031   00012E                     i2l1036:
  1032   00012E  0E66               	movlw	102
  1033   000130  181B               	xorwf	_dato_rx^0,w,c
  1034   000132  A4D8               	btfss	status,2,c
  1035   000134  EF9E  F000         	goto	i2u32_41
  1036   000138  EFA0  F000         	goto	i2u32_40
  1037   00013C                     i2u32_41:
  1038   00013C  EFAB  F000         	goto	i2l114
  1039   000140                     i2u32_40:
  1040   000140                     
  1041                           ;main.c: 113:             USART_printString("\rTodas las lamparas apagadas\r");
  1042   000140  0E21               	movlw	low STR_8
  1043   000142  6E02               	movwf	USART_printString@Ptr_string^0,c
  1044   000144  0E08               	movlw	high STR_8
  1045   000146  6E03               	movwf	(USART_printString@Ptr_string+1)^0,c
  1046   000148  ECE4  F004         	call	_USART_printString	;wreg free
  1047   00014C                     
  1048                           ;main.c: 114:             LATCbits.LATC0 = 0;
  1049   00014C  908B               	bcf	139,0,c	;volatile
  1050   00014E                     
  1051                           ;main.c: 115:             LATCbits.LATC1 = 0;
  1052   00014E  928B               	bcf	139,1,c	;volatile
  1053   000150                     
  1054                           ;main.c: 116:             LATCbits.LATC2 = 0;
  1055   000150  948B               	bcf	139,2,c	;volatile
  1056   000152  EFAB  F000         	goto	i2l120
  1057   000156                     i2l114:
  1058   000156                     i2l120:
  1059   000156  C007  FFF5         	movff	??_ISR+3,tablat
  1060   00015A  C006  FFF8         	movff	??_ISR+2,tblptru
  1061   00015E  C005  FFF7         	movff	??_ISR+1,tblptrh
  1062   000162  C004  FFF6         	movff	??_ISR,tblptrl
  1063   000166  921C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1064   000168  0011               	retfie		f
  1065   00016A                     __end_of_ISR:
  1066                           	callstack 0
  1067                           
  1068 ;; *************** function _USART_printString *****************
  1069 ;; Defined at:
  1070 ;;		line 25 in file "../../00_USART_Ejm1/UART.X/USART.c"
  1071 ;; Parameters:    Size  Location     Type
  1072 ;;  Ptr_string      2    1[COMRAM] PTR unsigned char 
  1073 ;;		 -> STR_8(30), STR_7(32), STR_6(20), STR_5(20), 
  1074 ;;		 -> STR_4(20), STR_3(22), STR_2(22), STR_1(22), 
  1075 ;; Auto vars:     Size  Location     Type
  1076 ;;		None
  1077 ;; Return value:  Size  Location     Type
  1078 ;;                  1    wreg      void 
  1079 ;; Registers used:
  1080 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1081 ;; Tracked objects:
  1082 ;;		On entry : 0/0
  1083 ;;		On exit  : 0/0
  1084 ;;		Unchanged: 0/0
  1085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1086 ;;      Params:         2       0       0       0       0       0       0       0       0
  1087 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1088 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1089 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1090 ;;Total ram usage:        2 bytes
  1091 ;; Hardware stack levels used: 1
  1092 ;; Hardware stack levels required when called: 1
  1093 ;; This function calls:
  1094 ;;		_USART_printChar
  1095 ;; This function is called by:
  1096 ;;		_ISR
  1097 ;; This function uses a non-reentrant model
  1098 ;;
  1099                           
  1100                           	psect	text7
  1101   0009C8                     __ptext7:
  1102                           	callstack 0
  1103   0009C8                     _USART_printString:
  1104                           	callstack 26
  1105   0009C8                     
  1106                           ;../../00_USART_Ejm1/UART.X/USART.c: 26:     while(*Ptr_string!='\0'){
  1107   0009C8  EFF0  F004         	goto	i2l978
  1108   0009CC                     i2l974:
  1109                           
  1110                           ;../../00_USART_Ejm1/UART.X/USART.c: 27:         USART_printChar(*Ptr_string);
  1111   0009CC  C002  FFF6         	movff	USART_printString@Ptr_string,tblptrl
  1112   0009D0  C003  FFF7         	movff	USART_printString@Ptr_string+1,tblptrh
  1113   0009D4                     	if	0	;tblptru may be non-zero
  1114   0009D4                     	endif
  1115   0009D4                     	if	0	;tblptru may be non-zero
  1116   0009D4                     	endif
  1117   0009D4  0008               	tblrd		*
  1118   0009D6  50F5               	movf	tablat,w,c
  1119   0009D8  EC13  F005         	call	_USART_printChar
  1120   0009DC                     
  1121                           ;../../00_USART_Ejm1/UART.X/USART.c: 28:         Ptr_string++;
  1122   0009DC  4A02               	infsnz	USART_printString@Ptr_string^0,f,c
  1123   0009DE  2A03               	incf	(USART_printString@Ptr_string+1)^0,f,c
  1124   0009E0                     i2l978:
  1125                           
  1126                           ;../../00_USART_Ejm1/UART.X/USART.c: 26:     while(*Ptr_string!='\0'){
  1127   0009E0  C002  FFF6         	movff	USART_printString@Ptr_string,tblptrl
  1128   0009E4  C003  FFF7         	movff	USART_printString@Ptr_string+1,tblptrh
  1129   0009E8                     	if	0	;tblptru may be non-zero
  1130   0009E8                     	endif
  1131   0009E8                     	if	0	;tblptru may be non-zero
  1132   0009E8                     	endif
  1133   0009E8  0008               	tblrd		*
  1134   0009EA  50F5               	movf	tablat,w,c
  1135   0009EC  0900               	iorlw	0
  1136   0009EE  A4D8               	btfss	status,2,c
  1137   0009F0  EFFC  F004         	goto	i2u23_41
  1138   0009F4  EFFE  F004         	goto	i2u23_40
  1139   0009F8                     i2u23_41:
  1140   0009F8  EFE6  F004         	goto	i2l974
  1141   0009FC                     i2u23_40:
  1142   0009FC  0012               	return		;funcret
  1143   0009FE                     __end_of_USART_printString:
  1144                           	callstack 0
  1145                           
  1146 ;; *************** function _USART_printChar *****************
  1147 ;; Defined at:
  1148 ;;		line 21 in file "../../00_USART_Ejm1/UART.X/USART.c"
  1149 ;; Parameters:    Size  Location     Type
  1150 ;;  caracter        1    wreg     unsigned char 
  1151 ;; Auto vars:     Size  Location     Type
  1152 ;;  caracter        1    0[COMRAM] unsigned char 
  1153 ;; Return value:  Size  Location     Type
  1154 ;;                  1    wreg      void 
  1155 ;; Registers used:
  1156 ;;		wreg
  1157 ;; Tracked objects:
  1158 ;;		On entry : 0/0
  1159 ;;		On exit  : 0/0
  1160 ;;		Unchanged: 0/0
  1161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1162 ;;      Params:         0       0       0       0       0       0       0       0       0
  1163 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1164 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1165 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1166 ;;Total ram usage:        1 bytes
  1167 ;; Hardware stack levels used: 1
  1168 ;; This function calls:
  1169 ;;		Nothing
  1170 ;; This function is called by:
  1171 ;;		_USART_printString
  1172 ;; This function uses a non-reentrant model
  1173 ;;
  1174                           
  1175                           	psect	text8
  1176   000A26                     __ptext8:
  1177                           	callstack 0
  1178   000A26                     _USART_printChar:
  1179                           	callstack 26
  1180                           
  1181                           ;incstack = 0
  1182                           ;USART_printChar@caracter stored from wreg
  1183   000A26  6E01               	movwf	USART_printChar@caracter^0,c
  1184   000A28                     
  1185                           ;../../00_USART_Ejm1/UART.X/USART.c: 22:     TXREG=caracter;
  1186   000A28  C001  FFAD         	movff	USART_printChar@caracter,4013	;volatile
  1187   000A2C                     i2l32:
  1188   000A2C  A2AC               	btfss	172,1,c	;volatile
  1189   000A2E  EF1B  F005         	goto	i2u1_41
  1190   000A32  EF1D  F005         	goto	i2u1_40
  1191   000A36                     i2u1_41:
  1192   000A36  EF16  F005         	goto	i2l32
  1193   000A3A                     i2u1_40:
  1194   000A3A  0012               	return		;funcret
  1195   000A3C                     __end_of_USART_printChar:
  1196                           	callstack 0
  1197                           
  1198                           	psect	rparam
  1199   000000                     
  1200                           	psect	temp
  1201   00001C                     btemp:
  1202                           	callstack 0
  1203   00001C                     	ds	1
  1204   000000                     int$flags	set	btemp
  1205   000000                     wtemp8	set	btemp+1
  1206   000000                     ttemp5	set	btemp+1
  1207   000000                     ttemp6	set	btemp+4
  1208   000000                     ttemp7	set	btemp+8
  1209                           
  1210                           	psect	idloc
  1211                           
  1212                           ;Config register IDLOC0 @ 0x200000
  1213                           ;	unspecified, using default values
  1214   200000                     	org	2097152
  1215   200000  FF                 	db	255
  1216                           
  1217                           ;Config register IDLOC1 @ 0x200001
  1218                           ;	unspecified, using default values
  1219   200001                     	org	2097153
  1220   200001  FF                 	db	255
  1221                           
  1222                           ;Config register IDLOC2 @ 0x200002
  1223                           ;	unspecified, using default values
  1224   200002                     	org	2097154
  1225   200002  FF                 	db	255
  1226                           
  1227                           ;Config register IDLOC3 @ 0x200003
  1228                           ;	unspecified, using default values
  1229   200003                     	org	2097155
  1230   200003  FF                 	db	255
  1231                           
  1232                           ;Config register IDLOC4 @ 0x200004
  1233                           ;	unspecified, using default values
  1234   200004                     	org	2097156
  1235   200004  FF                 	db	255
  1236                           
  1237                           ;Config register IDLOC5 @ 0x200005
  1238                           ;	unspecified, using default values
  1239   200005                     	org	2097157
  1240   200005  FF                 	db	255
  1241                           
  1242                           ;Config register IDLOC6 @ 0x200006
  1243                           ;	unspecified, using default values
  1244   200006                     	org	2097158
  1245   200006  FF                 	db	255
  1246                           
  1247                           ;Config register IDLOC7 @ 0x200007
  1248                           ;	unspecified, using default values
  1249   200007                     	org	2097159
  1250   200007  FF                 	db	255
  1251                           
  1252                           	psect	config
  1253                           
  1254                           ;Config register CONFIG1L @ 0x300000
  1255                           ;	PLL Selection
  1256                           ;	PLLSEL = PLL4X, 4x clock multiplier
  1257                           ;	PLL Enable Configuration bit
  1258                           ;	CFGPLLEN = OFF, PLL Disabled (firmware controlled)
  1259                           ;	CPU System Clock Postscaler
  1260                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
  1261                           ;	Low Speed USB mode with 48 MHz system clock
  1262                           ;	LS48MHZ = SYS24X4, System clock at 24 MHz, USB clock divider is set to 4
  1263   300000                     	org	3145728
  1264   300000  00                 	db	0
  1265                           
  1266                           ;Config register CONFIG1H @ 0x300001
  1267                           ;	Oscillator Selection
  1268                           ;	FOSC = INTOSCIO, Internal oscillator
  1269                           ;	Primary Oscillator Shutdown
  1270                           ;	PCLKEN = ON, Primary oscillator enabled
  1271                           ;	Fail-Safe Clock Monitor
  1272                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1273                           ;	Internal/External Oscillator Switchover
  1274                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1275   300001                     	org	3145729
  1276   300001  28                 	db	40
  1277                           
  1278                           ;Config register CONFIG2L @ 0x300002
  1279                           ;	Power-up Timer Enable
  1280                           ;	nPWRTEN = ON, Power up timer enabled
  1281                           ;	Brown-out Reset Enable
  1282                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
  1283                           ;	Brown-out Reset Voltage
  1284                           ;	BORV = 190, BOR set to 1.9V nominal
  1285                           ;	Low-Power Brown-out Reset
  1286                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  1287   300002                     	org	3145730
  1288   300002  5E                 	db	94
  1289                           
  1290                           ;Config register CONFIG2H @ 0x300003
  1291                           ;	Watchdog Timer Enable bits
  1292                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  1293                           ;	Watchdog Timer Postscaler
  1294                           ;	WDTPS = 32768, 1:32768
  1295   300003                     	org	3145731
  1296   300003  3C                 	db	60
  1297                           
  1298                           ; Padding undefined space
  1299   300004                     	org	3145732
  1300   300004  FF                 	db	255
  1301                           
  1302                           ;Config register CONFIG3H @ 0x300005
  1303                           ;	CCP2 MUX bit
  1304                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  1305                           ;	PORTB A/D Enable bit
  1306                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  1307                           ;	Timer3 Clock Input MUX bit
  1308                           ;	T3CMX = RC0, T3CKI function is on RC0
  1309                           ;	SDO Output MUX bit
  1310                           ;	SDOMX = RB3, SDO function is on RB3
  1311                           ;	Master Clear Reset Pin Enable
  1312                           ;	MCLRE = OFF, RE3 input pin enabled; external MCLR disabled
  1313   300005                     	org	3145733
  1314   300005  53                 	db	83
  1315                           
  1316                           ;Config register CONFIG4L @ 0x300006
  1317                           ;	Stack Full/Underflow Reset
  1318                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1319                           ;	Single-Supply ICSP Enable bit
  1320                           ;	LVP = OFF, Single-Supply ICSP disabled
  1321                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  1322                           ;	ICPRT = OFF, ICPORT disabled
  1323                           ;	Extended Instruction Set Enable bit
  1324                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  1325                           ;	Background Debugger Enable bit
  1326                           ;	DEBUG = 0x1, unprogrammed default
  1327   300006                     	org	3145734
  1328   300006  81                 	db	129
  1329                           
  1330                           ; Padding undefined space
  1331   300007                     	org	3145735
  1332   300007  FF                 	db	255
  1333                           
  1334                           ;Config register CONFIG5L @ 0x300008
  1335                           ;	Block 0 Code Protect
  1336                           ;	CP0 = OFF, Block 0 is not code-protected
  1337                           ;	Block 1 Code Protect
  1338                           ;	CP1 = OFF, Block 1 is not code-protected
  1339                           ;	Block 2 Code Protect
  1340                           ;	CP2 = OFF, Block 2 is not code-protected
  1341                           ;	Block 3 Code Protect
  1342                           ;	CP3 = OFF, Block 3 is not code-protected
  1343   300008                     	org	3145736
  1344   300008  0F                 	db	15
  1345                           
  1346                           ;Config register CONFIG5H @ 0x300009
  1347                           ;	Boot Block Code Protect
  1348                           ;	CPB = OFF, Boot block is not code-protected
  1349                           ;	Data EEPROM Code Protect
  1350                           ;	CPD = OFF, Data EEPROM is not code-protected
  1351   300009                     	org	3145737
  1352   300009  C0                 	db	192
  1353                           
  1354                           ;Config register CONFIG6L @ 0x30000A
  1355                           ;	Block 0 Write Protect
  1356                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
  1357                           ;	Block 1 Write Protect
  1358                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
  1359                           ;	Block 2 Write Protect
  1360                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
  1361                           ;	Block 3 Write Protect
  1362                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
  1363   30000A                     	org	3145738
  1364   30000A  0F                 	db	15
  1365                           
  1366                           ;Config register CONFIG6H @ 0x30000B
  1367                           ;	Configuration Registers Write Protect
  1368                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1369                           ;	Boot Block Write Protect
  1370                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
  1371                           ;	Data EEPROM Write Protect
  1372                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1373   30000B                     	org	3145739
  1374   30000B  E0                 	db	224
  1375                           
  1376                           ;Config register CONFIG7L @ 0x30000C
  1377                           ;	Block 0 Table Read Protect
  1378                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
  1379                           ;	Block 1 Table Read Protect
  1380                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
  1381                           ;	Block 2 Table Read Protect
  1382                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
  1383                           ;	Block 3 Table Read Protect
  1384                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
  1385   30000C                     	org	3145740
  1386   30000C  0F                 	db	15
  1387                           
  1388                           ;Config register CONFIG7H @ 0x30000D
  1389                           ;	Boot Block Table Read Protect
  1390                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
  1391   30000D                     	org	3145741
  1392   30000D  40                 	db	64
  1393                           tosu	equ	0xFFF
  1394                           tosh	equ	0xFFE
  1395                           tosl	equ	0xFFD
  1396                           stkptr	equ	0xFFC
  1397                           pclatu	equ	0xFFB
  1398                           pclath	equ	0xFFA
  1399                           pcl	equ	0xFF9
  1400                           tblptru	equ	0xFF8
  1401                           tblptrh	equ	0xFF7
  1402                           tblptrl	equ	0xFF6
  1403                           tablat	equ	0xFF5
  1404                           prodh	equ	0xFF4
  1405                           prodl	equ	0xFF3
  1406                           indf0	equ	0xFEF
  1407                           postinc0	equ	0xFEE
  1408                           postdec0	equ	0xFED
  1409                           preinc0	equ	0xFEC
  1410                           plusw0	equ	0xFEB
  1411                           fsr0h	equ	0xFEA
  1412                           fsr0l	equ	0xFE9
  1413                           wreg	equ	0xFE8
  1414                           indf1	equ	0xFE7
  1415                           postinc1	equ	0xFE6
  1416                           postdec1	equ	0xFE5
  1417                           preinc1	equ	0xFE4
  1418                           plusw1	equ	0xFE3
  1419                           fsr1h	equ	0xFE2
  1420                           fsr1l	equ	0xFE1
  1421                           bsr	equ	0xFE0
  1422                           indf2	equ	0xFDF
  1423                           postinc2	equ	0xFDE
  1424                           postdec2	equ	0xFDD
  1425                           preinc2	equ	0xFDC
  1426                           plusw2	equ	0xFDB
  1427                           fsr2h	equ	0xFDA
  1428                           fsr2l	equ	0xFD9
  1429                           status	equ	0xFD8

Data Sizes:
    Strings     188
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     26      27
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    USART_printString@Ptr_string	PTR unsigned char  size(2) Largest target is 32
		 -> STR_8(CODE[30]), STR_7(CODE[32]), STR_6(CODE[20]), STR_5(CODE[20]), 
		 -> STR_4(CODE[20]), STR_3(CODE[22]), STR_2(CODE[22]), STR_1(CODE[22]), 


Critical Paths under _main in COMRAM

    _main->_USART_init
    _USART_init->___lldiv

Critical Paths under _ISR in COMRAM

    _ISR->_USART_printString
    _USART_printString->_USART_printChar

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     458
                       _Config_Clock
                        _Config_Port
                         _USART_init
             _config_Interrupt_USART
 ---------------------------------------------------------------------------------
 (1) _config_Interrupt_USART                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_init                                           6     2      4     458
                                             20 COMRAM     6     2      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              7 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _Config_Port                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Config_Clock                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  4     4      0     668
                                              3 COMRAM     4     4      0
                  _USART_printString
 ---------------------------------------------------------------------------------
 (4) _USART_printString                                    2     0      2     668
                                              1 COMRAM     2     0      2
                    _USART_printChar
 ---------------------------------------------------------------------------------
 (5) _USART_printChar                                      1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Config_Clock
   _Config_Port
   _USART_init
     ___lldiv
   _config_Interrupt_USART

 _ISR (ROOT)
   _USART_printString
     _USART_printChar

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      31        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1A      1B       1       28.7%
BITBIGSFRhhhhhl     1E      0       0      21        0.0%
BITBIGSFRhlll       1C      0       0      28        0.0%
BITBIGSFRhhhhl      1A      0       0      22        0.0%
BITBIGSFRhllh       10      0       0      27        0.0%
BITBIGSFRhhhhhh      D      0       0      20        0.0%
BITBIGSFRhhlh        C      0       0      24        0.0%
BITBIGSFRl           A      0       0      29        0.0%
BITBIGSFRhlh         8      0       0      26        0.0%
BITBIGSFRhhll        8      0       0      25        0.0%
BITBIGSFRhhhlh       7      0       0      23        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1B      30        0.0%
DATA                 0      0      1B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Aug 13 21:09:19 2022

                            l29 09C6                              l93 0A6E                              l87 0A1E  
                            l96 0A60                              l88 0A1E                              l99 0A78  
                           l150 0950                             l157 0960                             l850 0A5A  
                           l844 0A62                             l852 0A5C                             l940 08EC  
                           l854 0A5E                             l846 0A50                             l950 093E  
                           l942 08F8                             l934 08BE                             l848 0A56  
                           l952 0940                             l944 0906                             l936 08CE  
                           l960 0966                             l856 0A70                             l954 094A  
                           l946 0910                             l938 08E4                             l970 09C2  
                           l962 0968                             l948 092E                             l964 096A  
                           l956 0962                             l980 09FE                             l966 0978  
                           l958 0962                             l982 0A06                             l968 09BE  
                           l984 0A0A                             u200 0906                             u201 0902  
                           u210 092E                             u211 092A                             u220 09AC  
                           u225 09A2                             u190 08E4                             u191 08E0  
                           _ISR 0008                             wreg 000FE8                            ?_ISR 0001  
__end_of_config_Interrupt_USART 0A7A                            STR_1 083F                            STR_2 0855  
                          STR_3 086B                            STR_4 0881                            STR_5 0895  
                          STR_6 08A9                            STR_7 0801                            STR_8 0821  
                          i2l32 0A2C                            i2l41 09FC                            i2l35 0A3A  
                          _main 09FE                            btemp 001C                            start 016A  
               _USART_printChar 0A26                    ___param_bank 000000             __end_of_Config_Port 0A62  
                         ??_ISR 0004                           ?_main 0001                 __end_of___lldiv 0962  
                         i2l120 0156                           i2l114 0156                           i2l796 0A28  
                         i2l972 09C8                           i2l974 09CC                           i2l990 002E  
                         i2l976 09DC                           i2l992 0040                           i2l978 09E0  
                         i2l994 004C                           i2l986 001A                           i2l996 0052  
                         i2l988 0028                           i2l998 0064                           _RCREG 000FAE  
                         _RCSTA 000FAB                           _SPBRG 000FAF                           _TXREG 000FAD  
                         _TXSTA 000FAC                           tablat 000FF5                           ttemp5 001D  
                         ttemp6 0020                           ttemp7 0024                           status 000FD8  
                         wtemp8 001D                     ?_USART_init 0015                 __initialization 0A3C  
          __end_of_Config_Clock 0A70                    __end_of_main 0A26                          ??_main 001B  
                 __activetblptr 000001         __end_of_USART_printChar 0A3C                          i2l1000 0070  
                        i2l1010 00AC                          i2l1002 0076                          i2l1020 00E2  
                        i2l1012 00B8                          i2l1004 0088                          i2l1030 0124  
                        i2l1022 00F4                          i2l1014 00BE                          i2l1006 0094  
                        i2l1040 014C                          i2l1032 0126                          i2l1024 0100  
                        i2l1016 00D0                          i2l1008 009A                          i2l1042 014E  
                        i2l1034 0128                          i2l1026 0106                          i2l1018 00DC  
                        i2l1044 0150                          i2l1028 0118                          i2l1036 012E  
                        i2l1038 0140                          _SPBRGH 000FB0                          _SLRCON 000F7A  
                        i2u1_40 0A3A                          i2u1_41 0A36                     _Config_Port 0A50  
                     ??___lldiv 0010                          isa$std 000001                    __mediumconst 0000  
                        tblptrh 000FF7                          tblptrl 000FF6                          tblptru 000FF8  
       USART_printChar@caracter 0001                      __accesstop 0060         __end_of__initialization 0A3E  
                 ___rparam_used 000001               _USART_printString 09C8                  __pcstackCOMRAM 0001  
            ?_USART_printString 0002             ??_USART_printString 0004                ?_USART_printChar 0001  
     __end_of_USART_printString 09FE                         _BAUDCON 000FB8                         i2u30_40 00F4  
                       i2u30_41 00F0                         i2u23_40 09FC                         i2u31_40 0118  
                       i2u23_41 09F8                         i2u31_41 0114                         i2u32_40 0140  
                       i2u24_40 0028                         i2u32_41 013C                         i2u24_41 0024  
                       i2u25_40 0040                         i2u25_41 003C                         i2u26_40 0064  
                       i2u26_41 0060                         i2u27_40 0088                         i2u27_41 0084  
                       i2u28_40 00AC                         i2u28_41 00A8                         i2u29_40 00D0  
                       i2u29_41 00CC                    _Config_Clock 0A62                         __Hparam 0000  
                       __Lparam 0000                    ??_USART_init 0019                         ___lldiv 08BE  
                  __psmallconst 0800                         __pcinit 0A3C                         __ramtop 0800  
                       _dato_rx 001B                         __ptext0 09FE                         __ptext1 0A70  
                       __ptext2 0962                         __ptext3 08BE                         __ptext4 0A50  
                       __ptext5 0A62                         __ptext7 09C8                         __ptext8 0A26  
            __end_of_USART_init 09C8            end_of_initialization 0A3E                    ?_Config_Port 0001  
               ___lldiv@divisor 000C               USART_init@baudios 0015     USART_printString@Ptr_string 0002  
               ___lldiv@counter 0014                       _RCSTAbits 000FAB        ??_config_Interrupt_USART 0008  
                     _TRISCbits 000F94                       _TXSTAbits 000FAC             start_initialization 0A3C  
                   __end_of_ISR 016A                     USART_init@n 0019                     __pbssCOMRAM 001B  
                     __pintcode 0008                        ?___lldiv 0008                     __smallconst 0800  
                      _LATCbits 000F8B                        _PIE1bits 000F9D          _config_Interrupt_USART 0A70  
                      _PIR1bits 000F9E                        __Hrparam 0000                        __Lrparam 0000  
                  __Lsmallconst 0800               ??_USART_printChar 0001                      _ANSELCbits 000F5D  
                      isa$xinst 000000                        int$flags 001C                      _INTCONbits 000FF2  
                 ?_Config_Clock 0001                        intlevel2 0000                ___lldiv@dividend 0008  
                    _OSCCONbits 000FD3                ___lldiv@quotient 0010                  ??_Config_Clock 0008  
       ?_config_Interrupt_USART 0001                   ??_Config_Port 0008                      _USART_init 0962  
