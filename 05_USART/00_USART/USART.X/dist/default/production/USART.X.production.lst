

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Aug 13 19:06:37 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    25   000000                     
    26                           ; Version 2.35
    27                           ; Generated 05/05/2021 GMT
    28                           ; 
    29                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution. Publication is not required when
    43                           ;        this file is used in an embedded application.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC18F45K50 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61   000000                     _TXSTAbits	set	4012
    62   000000                     _ANSELCbits	set	3933
    63   000000                     _OSCCONbits	set	4051
    64   000000                     _TRISCbits	set	3988
    65   000000                     _RCSTA	set	4011
    66   000000                     _TXSTA	set	4012
    67   000000                     _TXREG	set	4013
    68   000000                     _SPBRG	set	4015
    69   000000                     _BAUDCON	set	4024
    70   000000                     _SPBRGH	set	4016
    71                           
    72                           	psect	smallconst
    73   000800                     __psmallconst:
    74                           	callstack 0
    75   000800  00                 	db	0
    76   000801                     STR_1:
    77   000801  43                 	db	67	;'C'
    78   000802  75                 	db	117	;'u'
    79   000803  72                 	db	114	;'r'
    80   000804  73                 	db	115	;'s'
    81   000805  6F                 	db	111	;'o'
    82   000806  20                 	db	32
    83   000807  50                 	db	80	;'P'
    84   000808  49                 	db	73	;'I'
    85   000809  43                 	db	67	;'C'
    86   00080A  20                 	db	32
    87   00080B  52                 	db	82	;'R'
    88   00080C  41                 	db	65	;'A'
    89   00080D  53                 	db	83	;'S'
    90   00080E  20                 	db	32
    91   00080F  55                 	db	85	;'U'
    92   000810  4E                 	db	78	;'N'
    93   000811  4D                 	db	77	;'M'
    94   000812  53                 	db	83	;'S'
    95   000813  4D                 	db	77	;'M'
    96   000814  0D                 	db	13
    97   000815  00                 	db	0
    98   000816  00                 	db	0	; dummy byte at the end
    99   000000                     
   100                           ; #config settings
   101                           
   102                           	psect	cinit
   103   000B34                     __pcinit:
   104                           	callstack 0
   105   000B34                     start_initialization:
   106                           	callstack 0
   107   000B34                     __initialization:
   108                           	callstack 0
   109                           
   110                           ; Clear objects allocated to COMRAM (37 bytes)
   111   000B34  EE00  F001         	lfsr	0,__pbssCOMRAM
   112   000B38  0E25               	movlw	37
   113   000B3A                     clear_0:
   114   000B3A  6AEE               	clrf	postinc0,c
   115   000B3C  06E8               	decf	wreg,f,c
   116   000B3E  E1FD               	bnz	clear_0
   117   000B40                     end_of_initialization:
   118                           	callstack 0
   119   000B40                     __end_of__initialization:
   120                           	callstack 0
   121   000B40  0E00               	movlw	low (__Lsmallconst shr (0+16))
   122   000B42  6EF8               	movwf	tblptru,c
   123   000B44  0E08               	movlw	high __Lsmallconst
   124   000B46  6EF7               	movwf	tblptrh,c
   125   000B48  0100               	movlb	0
   126   000B4A  EF67  F005         	goto	_main	;jump to C main() function
   127                           
   128                           	psect	bssCOMRAM
   129   000001                     __pbssCOMRAM:
   130                           	callstack 0
   131   000001                     	ds	32
   132   000021                     _width:
   133                           	callstack 0
   134   000021                     	ds	2
   135   000023                     _prec:
   136                           	callstack 0
   137   000023                     	ds	2
   138   000025                     _flags:
   139                           	callstack 0
   140   000025                     	ds	1
   141                           
   142                           	psect	cstackCOMRAM
   143   000026                     __pcstackCOMRAM:
   144                           	callstack 0
   145   000026                     ?___lldiv:
   146                           	callstack 0
   147   000026                     printChar_USART@caracter:
   148                           	callstack 0
   149   000026                     putch@c:
   150                           	callstack 0
   151   000026                     ___lldiv@dividend:
   152                           	callstack 0
   153                           
   154                           ; 4 bytes @ 0x0
   155   000026                     	ds	1
   156   000027                     fputc@c:
   157                           	callstack 0
   158                           
   159                           ; 2 bytes @ 0x1
   160   000027                     	ds	2
   161   000029                     fputc@fp:
   162                           	callstack 0
   163                           
   164                           ; 2 bytes @ 0x3
   165   000029                     	ds	1
   166   00002A                     ___lldiv@divisor:
   167                           	callstack 0
   168                           
   169                           ; 4 bytes @ 0x4
   170   00002A                     	ds	1
   171   00002B                     ??_fputc:
   172                           
   173                           ; 1 bytes @ 0x5
   174   00002B                     	ds	3
   175   00002E                     ___lldiv@quotient:
   176                           	callstack 0
   177                           
   178                           ; 4 bytes @ 0x8
   179   00002E                     	ds	2
   180   000030                     vfpfcnvrt@fp:
   181                           	callstack 0
   182                           
   183                           ; 2 bytes @ 0xA
   184   000030                     	ds	2
   185   000032                     ___lldiv@counter:
   186                           	callstack 0
   187   000032                     vfpfcnvrt@fmt:
   188                           	callstack 0
   189                           
   190                           ; 2 bytes @ 0xC
   191   000032                     	ds	1
   192   000033                     Serial_begin@baudios:
   193                           	callstack 0
   194                           
   195                           ; 4 bytes @ 0xD
   196   000033                     	ds	1
   197   000034                     vfpfcnvrt@ap:
   198                           	callstack 0
   199                           
   200                           ; 2 bytes @ 0xE
   201   000034                     	ds	2
   202   000036                     ?_vfprintf:
   203                           	callstack 0
   204   000036                     vfprintf@fp:
   205                           	callstack 0
   206                           
   207                           ; 2 bytes @ 0x10
   208   000036                     	ds	1
   209   000037                     Serial_begin@n:
   210                           	callstack 0
   211                           
   212                           ; 2 bytes @ 0x11
   213   000037                     	ds	1
   214   000038                     vfprintf@fmt:
   215                           	callstack 0
   216                           
   217                           ; 2 bytes @ 0x12
   218   000038                     	ds	2
   219   00003A                     vfprintf@ap:
   220                           	callstack 0
   221                           
   222                           ; 2 bytes @ 0x14
   223   00003A                     	ds	2
   224   00003C                     vfprintf@cfmt:
   225                           	callstack 0
   226                           
   227                           ; 2 bytes @ 0x16
   228   00003C                     	ds	2
   229   00003E                     ?_printf:
   230                           	callstack 0
   231   00003E                     printf@fmt:
   232                           	callstack 0
   233                           
   234                           ; 2 bytes @ 0x18
   235   00003E                     	ds	2
   236   000040                     printf@ap:
   237                           	callstack 0
   238                           
   239                           ; 2 bytes @ 0x1A
   240   000040                     	ds	2
   241   000042                     ??_main:
   242                           
   243                           ; 1 bytes @ 0x1C
   244   000042                     	ds	2
   245                           
   246 ;;
   247 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   248 ;;
   249 ;; *************** function _main *****************
   250 ;; Defined at:
   251 ;;		line 25 in file "main.c"
   252 ;; Parameters:    Size  Location     Type
   253 ;;		None
   254 ;; Auto vars:     Size  Location     Type
   255 ;;		None
   256 ;; Return value:  Size  Location     Type
   257 ;;                  2   36[None  ] int 
   258 ;; Registers used:
   259 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   260 ;; Tracked objects:
   261 ;;		On entry : 0/0
   262 ;;		On exit  : 0/0
   263 ;;		Unchanged: 0/0
   264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   265 ;;      Params:         0       0       0       0       0       0       0       0       0
   266 ;;      Locals:         0       0       0       0       0       0       0       0       0
   267 ;;      Temps:          2       0       0       0       0       0       0       0       0
   268 ;;      Totals:         2       0       0       0       0       0       0       0       0
   269 ;;Total ram usage:        2 bytes
   270 ;; Hardware stack levels required when called: 6
   271 ;; This function calls:
   272 ;;		_MSJCharacter
   273 ;;		_MsjString
   274 ;;		_Serial_begin
   275 ;;		_config_clock
   276 ;; This function is called by:
   277 ;;		Startup code after reset
   278 ;; This function uses a non-reentrant model
   279 ;;
   280                           
   281                           	psect	text0
   282   000ACE                     __ptext0:
   283                           	callstack 0
   284   000ACE                     _main:
   285                           	callstack 25
   286   000ACE                     
   287                           ;main.c: 26:     config_clock();
   288   000ACE  ECBD  F005         	call	_config_clock	;wreg free
   289   000AD2                     
   290                           ;main.c: 27:     Serial_begin(9600);
   291   000AD2  0E80               	movlw	128
   292   000AD4  6E33               	movwf	Serial_begin@baudios^0,c
   293   000AD6  0E25               	movlw	37
   294   000AD8  6E34               	movwf	(Serial_begin@baudios+1)^0,c
   295   000ADA  0E00               	movlw	0
   296   000ADC  6E35               	movwf	(Serial_begin@baudios+2)^0,c
   297   000ADE  0E00               	movlw	0
   298   000AE0  6E36               	movwf	(Serial_begin@baudios+3)^0,c
   299   000AE2  ECE8  F004         	call	_Serial_begin	;wreg free
   300   000AE6                     l1014:
   301                           
   302                           ;main.c: 32:         MsjString();
   303   000AE6  ECC4  F005         	call	_MsjString	;wreg free
   304   000AEA                     
   305                           ;main.c: 33:         _delay((unsigned long)((200)*(16000000/4000.0)));
   306   000AEA  0E05               	movlw	5
   307   000AEC  6E43               	movwf	(??_main+1)^0,c
   308   000AEE  0E0F               	movlw	15
   309   000AF0  6E42               	movwf	??_main^0,c
   310   000AF2  0EF1               	movlw	241
   311   000AF4                     u247:
   312   000AF4  2EE8               	decfsz	wreg,f,c
   313   000AF6  D7FE               	bra	u247
   314   000AF8  2E42               	decfsz	??_main^0,f,c
   315   000AFA  D7FC               	bra	u247
   316   000AFC  2E43               	decfsz	(??_main+1)^0,f,c
   317   000AFE  D7FA               	bra	u247
   318   000B00  F000               	nop	
   319   000B02                     
   320                           ;main.c: 35:         MSJCharacter();
   321   000B02  EC42  F005         	call	_MSJCharacter	;wreg free
   322   000B06  EF73  F005         	goto	l1014
   323   000B0A  EF00  F000         	goto	start
   324   000B0E                     __end_of_main:
   325                           	callstack 0
   326                           
   327 ;; *************** function _config_clock *****************
   328 ;; Defined at:
   329 ;;		line 43 in file "main.c"
   330 ;; Parameters:    Size  Location     Type
   331 ;;		None
   332 ;; Auto vars:     Size  Location     Type
   333 ;;		None
   334 ;; Return value:  Size  Location     Type
   335 ;;                  1    wreg      void 
   336 ;; Registers used:
   337 ;;		wreg, status,2
   338 ;; Tracked objects:
   339 ;;		On entry : 0/0
   340 ;;		On exit  : 0/0
   341 ;;		Unchanged: 0/0
   342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   343 ;;      Params:         0       0       0       0       0       0       0       0       0
   344 ;;      Locals:         0       0       0       0       0       0       0       0       0
   345 ;;      Temps:          0       0       0       0       0       0       0       0       0
   346 ;;      Totals:         0       0       0       0       0       0       0       0       0
   347 ;;Total ram usage:        0 bytes
   348 ;; Hardware stack levels used: 1
   349 ;; This function calls:
   350 ;;		Nothing
   351 ;; This function is called by:
   352 ;;		_main
   353 ;; This function uses a non-reentrant model
   354 ;;
   355                           
   356                           	psect	text1
   357   000B7A                     __ptext1:
   358                           	callstack 0
   359   000B7A                     _config_clock:
   360                           	callstack 30
   361   000B7A                     
   362                           ;main.c: 44:     OSCCONbits.IRCF=0b111;
   363   000B7A  0E70               	movlw	112
   364   000B7C  12D3               	iorwf	211,f,c	;volatile
   365                           
   366                           ;main.c: 45:     OSCCONbits.SCS=0b10;
   367   000B7E  50D3               	movf	211,w,c	;volatile
   368   000B80  0BFC               	andlw	-4
   369   000B82  0902               	iorlw	2
   370   000B84  6ED3               	movwf	211,c	;volatile
   371   000B86  0012               	return		;funcret
   372   000B88                     __end_of_config_clock:
   373                           	callstack 0
   374                           
   375 ;; *************** function _Serial_begin *****************
   376 ;; Defined at:
   377 ;;		line 47 in file "main.c"
   378 ;; Parameters:    Size  Location     Type
   379 ;;  baudios         4   13[COMRAM] unsigned long 
   380 ;; Auto vars:     Size  Location     Type
   381 ;;  n               2   17[COMRAM] unsigned short 
   382 ;; Return value:  Size  Location     Type
   383 ;;                  1    wreg      void 
   384 ;; Registers used:
   385 ;;		wreg, status,2, status,0, cstack
   386 ;; Tracked objects:
   387 ;;		On entry : 0/0
   388 ;;		On exit  : 0/0
   389 ;;		Unchanged: 0/0
   390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   391 ;;      Params:         4       0       0       0       0       0       0       0       0
   392 ;;      Locals:         2       0       0       0       0       0       0       0       0
   393 ;;      Temps:          0       0       0       0       0       0       0       0       0
   394 ;;      Totals:         6       0       0       0       0       0       0       0       0
   395 ;;Total ram usage:        6 bytes
   396 ;; Hardware stack levels used: 1
   397 ;; Hardware stack levels required when called: 1
   398 ;; This function calls:
   399 ;;		___lldiv
   400 ;; This function is called by:
   401 ;;		_main
   402 ;; This function uses a non-reentrant model
   403 ;;
   404                           
   405                           	psect	text2
   406   0009D0                     __ptext2:
   407                           	callstack 0
   408   0009D0                     _Serial_begin:
   409                           	callstack 29
   410   0009D0                     
   411                           ;main.c: 51:     ANSELCbits.ANSC6=0;
   412   0009D0  010F               	movlb	15	; () banked
   413   0009D2  9D5D               	bcf	93,6,b	;volatile
   414   0009D4                     
   415                           ; BSR set to: 15
   416                           ;main.c: 52:     ANSELCbits.ANSC7=0;
   417   0009D4  9F5D               	bcf	93,7,b	;volatile
   418   0009D6                     
   419                           ; BSR set to: 15
   420                           ;main.c: 53:     TRISCbits.TRISC6=0;
   421   0009D6  9C94               	bcf	148,6,c	;volatile
   422   0009D8                     
   423                           ; BSR set to: 15
   424                           ;main.c: 54:     TRISCbits.TRISC7=1;
   425   0009D8  8E94               	bsf	148,7,c	;volatile
   426                           
   427                           ;main.c: 56:     TXSTA=0B00100100;
   428   0009DA  0E24               	movlw	36
   429   0009DC  6EAC               	movwf	172,c	;volatile
   430                           
   431                           ;main.c: 57:     RCSTA=0B10010000;
   432   0009DE  0E90               	movlw	144
   433   0009E0  6EAB               	movwf	171,c	;volatile
   434                           
   435                           ;main.c: 58:     BAUDCON=0B00001000;
   436   0009E2  0E08               	movlw	8
   437   0009E4  6EB8               	movwf	184,c	;volatile
   438   0009E6                     
   439                           ; BSR set to: 15
   440                           ;main.c: 60:     n=(uint16_t)(((16000000/baudios)/4)-1);
   441   0009E6  0E00               	movlw	0
   442   0009E8  6E26               	movwf	___lldiv@dividend^0,c
   443   0009EA  0E24               	movlw	36
   444   0009EC  6E27               	movwf	(___lldiv@dividend+1)^0,c
   445   0009EE  0EF4               	movlw	244
   446   0009F0  6E28               	movwf	(___lldiv@dividend+2)^0,c
   447   0009F2  0E00               	movlw	0
   448   0009F4  6E29               	movwf	(___lldiv@dividend+3)^0,c
   449   0009F6  C033  F02A         	movff	Serial_begin@baudios,___lldiv@divisor
   450   0009FA  C034  F02B         	movff	Serial_begin@baudios+1,___lldiv@divisor+1
   451   0009FE  C035  F02C         	movff	Serial_begin@baudios+2,___lldiv@divisor+2
   452   000A02  C036  F02D         	movff	Serial_begin@baudios+3,___lldiv@divisor+3
   453   000A06  EC0C  F004         	call	___lldiv	;wreg free
   454   000A0A  0E03               	movlw	3
   455   000A0C  EF0D  F005         	goto	u230
   456   000A10                     u235:
   457   000A10  90D8               	bcf	status,0,c
   458   000A12  3229               	rrcf	(?___lldiv+3)^0,f,c
   459   000A14  3228               	rrcf	(?___lldiv+2)^0,f,c
   460   000A16  3227               	rrcf	(?___lldiv+1)^0,f,c
   461   000A18  3226               	rrcf	?___lldiv^0,f,c
   462   000A1A                     u230:
   463   000A1A  2EE8               	decfsz	wreg,f,c
   464   000A1C  EF08  F005         	goto	u235
   465   000A20  0EFF               	movlw	255
   466   000A22  2426               	addwf	?___lldiv^0,w,c
   467   000A24  6E37               	movwf	Serial_begin@n^0,c
   468   000A26  0EFF               	movlw	255
   469   000A28  2027               	addwfc	(?___lldiv+1)^0,w,c
   470   000A2A  6E38               	movwf	(Serial_begin@n+1)^0,c
   471   000A2C                     
   472                           ;main.c: 62:     SPBRG=n;
   473   000A2C  C037  FFAF         	movff	Serial_begin@n,4015	;volatile
   474   000A30                     
   475                           ;main.c: 63:     SPBRGH=(n>>8);
   476   000A30  5038               	movf	(Serial_begin@n+1)^0,w,c
   477   000A32  6EB0               	movwf	176,c	;volatile
   478   000A34  0012               	return		;funcret
   479   000A36                     __end_of_Serial_begin:
   480                           	callstack 0
   481                           
   482 ;; *************** function ___lldiv *****************
   483 ;; Defined at:
   484 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__lldiv.c"
   485 ;; Parameters:    Size  Location     Type
   486 ;;  dividend        4    0[COMRAM] unsigned long 
   487 ;;  divisor         4    4[COMRAM] unsigned long 
   488 ;; Auto vars:     Size  Location     Type
   489 ;;  quotient        4    8[COMRAM] unsigned long 
   490 ;;  counter         1   12[COMRAM] unsigned char 
   491 ;; Return value:  Size  Location     Type
   492 ;;                  4    0[COMRAM] unsigned long 
   493 ;; Registers used:
   494 ;;		wreg, status,2, status,0
   495 ;; Tracked objects:
   496 ;;		On entry : 0/0
   497 ;;		On exit  : 0/0
   498 ;;		Unchanged: 0/0
   499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   500 ;;      Params:         8       0       0       0       0       0       0       0       0
   501 ;;      Locals:         5       0       0       0       0       0       0       0       0
   502 ;;      Temps:          0       0       0       0       0       0       0       0       0
   503 ;;      Totals:        13       0       0       0       0       0       0       0       0
   504 ;;Total ram usage:       13 bytes
   505 ;; Hardware stack levels used: 1
   506 ;; This function calls:
   507 ;;		Nothing
   508 ;; This function is called by:
   509 ;;		_Serial_begin
   510 ;; This function uses a non-reentrant model
   511 ;;
   512                           
   513                           	psect	text3
   514   000818                     __ptext3:
   515                           	callstack 0
   516   000818                     ___lldiv:
   517                           	callstack 29
   518   000818  0E00               	movlw	0
   519   00081A  6E2E               	movwf	___lldiv@quotient^0,c
   520   00081C  0E00               	movlw	0
   521   00081E  6E2F               	movwf	(___lldiv@quotient+1)^0,c
   522   000820  0E00               	movlw	0
   523   000822  6E30               	movwf	(___lldiv@quotient+2)^0,c
   524   000824  0E00               	movlw	0
   525   000826  6E31               	movwf	(___lldiv@quotient+3)^0,c
   526   000828  502A               	movf	___lldiv@divisor^0,w,c
   527   00082A  102B               	iorwf	(___lldiv@divisor+1)^0,w,c
   528   00082C  102C               	iorwf	(___lldiv@divisor+2)^0,w,c
   529   00082E  102D               	iorwf	(___lldiv@divisor+3)^0,w,c
   530   000830  B4D8               	btfsc	status,2,c
   531   000832  EF1D  F004         	goto	u201
   532   000836  EF1F  F004         	goto	u200
   533   00083A                     u201:
   534   00083A  EF55  F004         	goto	l103
   535   00083E                     u200:
   536   00083E  0E01               	movlw	1
   537   000840  6E32               	movwf	___lldiv@counter^0,c
   538   000842  EF29  F004         	goto	l978
   539   000846                     l976:
   540   000846  90D8               	bcf	status,0,c
   541   000848  362A               	rlcf	___lldiv@divisor^0,f,c
   542   00084A  362B               	rlcf	(___lldiv@divisor+1)^0,f,c
   543   00084C  362C               	rlcf	(___lldiv@divisor+2)^0,f,c
   544   00084E  362D               	rlcf	(___lldiv@divisor+3)^0,f,c
   545   000850  2A32               	incf	___lldiv@counter^0,f,c
   546   000852                     l978:
   547   000852  AE2D               	btfss	(___lldiv@divisor+3)^0,7,c
   548   000854  EF2E  F004         	goto	u211
   549   000858  EF30  F004         	goto	u210
   550   00085C                     u211:
   551   00085C  EF23  F004         	goto	l976
   552   000860                     u210:
   553   000860                     l980:
   554   000860  90D8               	bcf	status,0,c
   555   000862  362E               	rlcf	___lldiv@quotient^0,f,c
   556   000864  362F               	rlcf	(___lldiv@quotient+1)^0,f,c
   557   000866  3630               	rlcf	(___lldiv@quotient+2)^0,f,c
   558   000868  3631               	rlcf	(___lldiv@quotient+3)^0,f,c
   559   00086A  502A               	movf	___lldiv@divisor^0,w,c
   560   00086C  5C26               	subwf	___lldiv@dividend^0,w,c
   561   00086E  502B               	movf	(___lldiv@divisor+1)^0,w,c
   562   000870  5827               	subwfb	(___lldiv@dividend+1)^0,w,c
   563   000872  502C               	movf	(___lldiv@divisor+2)^0,w,c
   564   000874  5828               	subwfb	(___lldiv@dividend+2)^0,w,c
   565   000876  502D               	movf	(___lldiv@divisor+3)^0,w,c
   566   000878  5829               	subwfb	(___lldiv@dividend+3)^0,w,c
   567   00087A  A0D8               	btfss	status,0,c
   568   00087C  EF42  F004         	goto	u221
   569   000880  EF44  F004         	goto	u220
   570   000884                     u221:
   571   000884  EF4D  F004         	goto	l988
   572   000888                     u220:
   573   000888  502A               	movf	___lldiv@divisor^0,w,c
   574   00088A  5E26               	subwf	___lldiv@dividend^0,f,c
   575   00088C  502B               	movf	(___lldiv@divisor+1)^0,w,c
   576   00088E  5A27               	subwfb	(___lldiv@dividend+1)^0,f,c
   577   000890  502C               	movf	(___lldiv@divisor+2)^0,w,c
   578   000892  5A28               	subwfb	(___lldiv@dividend+2)^0,f,c
   579   000894  502D               	movf	(___lldiv@divisor+3)^0,w,c
   580   000896  5A29               	subwfb	(___lldiv@dividend+3)^0,f,c
   581   000898  802E               	bsf	___lldiv@quotient^0,0,c
   582   00089A                     l988:
   583   00089A  90D8               	bcf	status,0,c
   584   00089C  322D               	rrcf	(___lldiv@divisor+3)^0,f,c
   585   00089E  322C               	rrcf	(___lldiv@divisor+2)^0,f,c
   586   0008A0  322B               	rrcf	(___lldiv@divisor+1)^0,f,c
   587   0008A2  322A               	rrcf	___lldiv@divisor^0,f,c
   588   0008A4  2E32               	decfsz	___lldiv@counter^0,f,c
   589   0008A6  EF30  F004         	goto	l980
   590   0008AA                     l103:
   591   0008AA  C02E  F026         	movff	___lldiv@quotient,?___lldiv
   592   0008AE  C02F  F027         	movff	___lldiv@quotient+1,?___lldiv+1
   593   0008B2  C030  F028         	movff	___lldiv@quotient+2,?___lldiv+2
   594   0008B6  C031  F029         	movff	___lldiv@quotient+3,?___lldiv+3
   595   0008BA  0012               	return		;funcret
   596   0008BC                     __end_of___lldiv:
   597                           	callstack 0
   598                           
   599 ;; *************** function _MsjString *****************
   600 ;; Defined at:
   601 ;;		line 97 in file "main.c"
   602 ;; Parameters:    Size  Location     Type
   603 ;;		None
   604 ;; Auto vars:     Size  Location     Type
   605 ;;		None
   606 ;; Return value:  Size  Location     Type
   607 ;;                  1    wreg      void 
   608 ;; Registers used:
   609 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   610 ;; Tracked objects:
   611 ;;		On entry : 0/0
   612 ;;		On exit  : 0/0
   613 ;;		Unchanged: 0/0
   614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   615 ;;      Params:         0       0       0       0       0       0       0       0       0
   616 ;;      Locals:         0       0       0       0       0       0       0       0       0
   617 ;;      Temps:          0       0       0       0       0       0       0       0       0
   618 ;;      Totals:         0       0       0       0       0       0       0       0       0
   619 ;;Total ram usage:        0 bytes
   620 ;; Hardware stack levels used: 1
   621 ;; Hardware stack levels required when called: 5
   622 ;; This function calls:
   623 ;;		_printf
   624 ;; This function is called by:
   625 ;;		_main
   626 ;; This function uses a non-reentrant model
   627 ;;
   628                           
   629                           	psect	text4
   630   000B88                     __ptext4:
   631                           	callstack 0
   632   000B88                     _MsjString:
   633                           	callstack 25
   634   000B88                     
   635                           ;main.c: 102:     printf("Curso PIC RAS UNMSM\r");
   636   000B88  0E01               	movlw	low STR_1
   637   000B8A  6E3E               	movwf	printf@fmt^0,c
   638   000B8C  0E08               	movlw	high STR_1
   639   000B8E  6E3F               	movwf	(printf@fmt+1)^0,c
   640   000B90  EC87  F005         	call	_printf	;wreg free
   641   000B94  0012               	return		;funcret
   642   000B96                     __end_of_MsjString:
   643                           	callstack 0
   644                           
   645 ;; *************** function _printf *****************
   646 ;; Defined at:
   647 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\printf.c"
   648 ;; Parameters:    Size  Location     Type
   649 ;;  fmt             2   24[COMRAM] PTR const unsigned char 
   650 ;;		 -> STR_1(21), 
   651 ;; Auto vars:     Size  Location     Type
   652 ;;  ap              2   26[COMRAM] PTR void [1]
   653 ;;		 -> ?_printf(2), 
   654 ;;  ret             2    0        int 
   655 ;; Return value:  Size  Location     Type
   656 ;;                  2   24[COMRAM] int 
   657 ;; Registers used:
   658 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   659 ;; Tracked objects:
   660 ;;		On entry : 0/0
   661 ;;		On exit  : 0/0
   662 ;;		Unchanged: 0/0
   663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   664 ;;      Params:         2       0       0       0       0       0       0       0       0
   665 ;;      Locals:         2       0       0       0       0       0       0       0       0
   666 ;;      Temps:          0       0       0       0       0       0       0       0       0
   667 ;;      Totals:         4       0       0       0       0       0       0       0       0
   668 ;;Total ram usage:        4 bytes
   669 ;; Hardware stack levels used: 1
   670 ;; Hardware stack levels required when called: 4
   671 ;; This function calls:
   672 ;;		_vfprintf
   673 ;; This function is called by:
   674 ;;		_MsjString
   675 ;; This function uses a non-reentrant model
   676 ;;
   677                           
   678                           	psect	text5
   679   000B0E                     __ptext5:
   680                           	callstack 0
   681   000B0E                     _printf:
   682                           	callstack 25
   683   000B0E  0E40               	movlw	low (?_printf+2)
   684   000B10  6E40               	movwf	printf@ap^0,c
   685   000B12  0E00               	movlw	high (?_printf+2)
   686   000B14  6E41               	movwf	(printf@ap+1)^0,c
   687   000B16  0E00               	movlw	0
   688   000B18  6E36               	movwf	vfprintf@fp^0,c
   689   000B1A  0E00               	movlw	0
   690   000B1C  6E37               	movwf	(vfprintf@fp+1)^0,c
   691   000B1E  C03E  F038         	movff	printf@fmt,vfprintf@fmt
   692   000B22  C03F  F039         	movff	printf@fmt+1,vfprintf@fmt+1
   693   000B26  0E40               	movlw	low printf@ap
   694   000B28  6E3A               	movwf	vfprintf@ap^0,c
   695   000B2A  0E00               	movlw	high printf@ap
   696   000B2C  6E3B               	movwf	(vfprintf@ap+1)^0,c
   697   000B2E  EC1B  F005         	call	_vfprintf	;wreg free
   698   000B32  0012               	return		;funcret
   699   000B34                     __end_of_printf:
   700                           	callstack 0
   701                           
   702 ;; *************** function _vfprintf *****************
   703 ;; Defined at:
   704 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
   705 ;; Parameters:    Size  Location     Type
   706 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
   707 ;;		 -> NULL(0), 
   708 ;;  fmt             2   18[COMRAM] PTR const unsigned char 
   709 ;;		 -> STR_1(21), 
   710 ;;  ap              2   20[COMRAM] PTR PTR void 
   711 ;;		 -> printf@ap(2), 
   712 ;; Auto vars:     Size  Location     Type
   713 ;;  cfmt            2   22[COMRAM] PTR unsigned char 
   714 ;;		 -> STR_1(21), 
   715 ;; Return value:  Size  Location     Type
   716 ;;                  2   16[COMRAM] int 
   717 ;; Registers used:
   718 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   719 ;; Tracked objects:
   720 ;;		On entry : 0/0
   721 ;;		On exit  : 0/0
   722 ;;		Unchanged: 0/0
   723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   724 ;;      Params:         6       0       0       0       0       0       0       0       0
   725 ;;      Locals:         2       0       0       0       0       0       0       0       0
   726 ;;      Temps:          0       0       0       0       0       0       0       0       0
   727 ;;      Totals:         8       0       0       0       0       0       0       0       0
   728 ;;Total ram usage:        8 bytes
   729 ;; Hardware stack levels used: 1
   730 ;; Hardware stack levels required when called: 3
   731 ;; This function calls:
   732 ;;		_vfpfcnvrt
   733 ;; This function is called by:
   734 ;;		_printf
   735 ;; This function uses a non-reentrant model
   736 ;;
   737                           
   738                           	psect	text6
   739   000A36                     __ptext6:
   740                           	callstack 0
   741   000A36                     _vfprintf:
   742                           	callstack 25
   743   000A36                     
   744                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
   745   000A36  C038  F03C         	movff	vfprintf@fmt,vfprintf@cfmt
   746   000A3A  C039  F03D         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   747                           
   748                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
   749   000A3E  EF2F  F005         	goto	l958
   750   000A42                     l956:
   751                           
   752                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
   753   000A42  C036  F030         	movff	vfprintf@fp,vfpfcnvrt@fp
   754   000A46  C037  F031         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   755   000A4A  0E3C               	movlw	low vfprintf@cfmt
   756   000A4C  6E32               	movwf	vfpfcnvrt@fmt^0,c
   757   000A4E  0E00               	movlw	high vfprintf@cfmt
   758   000A50  6E33               	movwf	(vfpfcnvrt@fmt+1)^0,c
   759   000A52  C03A  F034         	movff	vfprintf@ap,vfpfcnvrt@ap
   760   000A56  C03B  F035         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   761   000A5A  ECA9  F004         	call	_vfpfcnvrt	;wreg free
   762   000A5E                     l958:
   763                           
   764                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
   765   000A5E  C03C  FFF6         	movff	vfprintf@cfmt,tblptrl
   766   000A62  C03D  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   767   000A66                     	if	0	;tblptru may be non-zero
   768   000A66                     	endif
   769   000A66                     	if	0	;tblptru may be non-zero
   770   000A66                     	endif
   771   000A66  0008               	tblrd		*
   772   000A68  50F5               	movf	tablat,w,c
   773   000A6A  0900               	iorlw	0
   774   000A6C  A4D8               	btfss	status,2,c
   775   000A6E  EF3B  F005         	goto	u191
   776   000A72  EF3D  F005         	goto	u190
   777   000A76                     u191:
   778   000A76  EF21  F005         	goto	l956
   779   000A7A                     u190:
   780   000A7A                     
   781                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
   782   000A7A  0E00               	movlw	0
   783   000A7C  6E37               	movwf	(?_vfprintf+1)^0,c
   784   000A7E  0E00               	movlw	0
   785   000A80  6E36               	movwf	?_vfprintf^0,c
   786   000A82  0012               	return		;funcret
   787   000A84                     __end_of_vfprintf:
   788                           	callstack 0
   789                           
   790 ;; *************** function _vfpfcnvrt *****************
   791 ;; Defined at:
   792 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
   793 ;; Parameters:    Size  Location     Type
   794 ;;  fp              2   10[COMRAM] PTR struct _IO_FILE
   795 ;;		 -> NULL(0), 
   796 ;;  fmt             2   12[COMRAM] PTR PTR unsigned char 
   797 ;;		 -> vfprintf@cfmt(2), 
   798 ;;  ap              2   14[COMRAM] PTR PTR void 
   799 ;;		 -> printf@ap(2), 
   800 ;; Auto vars:     Size  Location     Type
   801 ;;  convarg         8    0        struct .
   802 ;;  cp              3    0        PTR unsigned char 
   803 ;;  i               2    0        int 
   804 ;;  done            2    0        int 
   805 ;;  c               1    0        unsigned char 
   806 ;; Return value:  Size  Location     Type
   807 ;;                  1    wreg      void 
   808 ;; Registers used:
   809 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   810 ;; Tracked objects:
   811 ;;		On entry : 0/0
   812 ;;		On exit  : 0/0
   813 ;;		Unchanged: 0/0
   814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   815 ;;      Params:         6       0       0       0       0       0       0       0       0
   816 ;;      Locals:         0       0       0       0       0       0       0       0       0
   817 ;;      Temps:          0       0       0       0       0       0       0       0       0
   818 ;;      Totals:         6       0       0       0       0       0       0       0       0
   819 ;;Total ram usage:        6 bytes
   820 ;; Hardware stack levels used: 1
   821 ;; Hardware stack levels required when called: 2
   822 ;; This function calls:
   823 ;;		_fputc
   824 ;; This function is called by:
   825 ;;		_vfprintf
   826 ;; This function uses a non-reentrant model
   827 ;;
   828                           
   829                           	psect	text7
   830   000952                     __ptext7:
   831                           	callstack 0
   832   000952                     _vfpfcnvrt:
   833                           	callstack 25
   834   000952                     
   835                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
   836   000952  C032  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   837   000956  C033  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   838   00095A  CFDE FFF6          	movff	postinc2,tblptrl
   839   00095E  CFDD FFF7          	movff	postdec2,tblptrh
   840   000962                     	if	0	;tblptru may be non-zero
   841   000962                     	endif
   842   000962                     	if	0	;tblptru may be non-zero
   843   000962                     	endif
   844   000962  0008               	tblrd		*
   845   000964  50F5               	movf	tablat,w,c
   846   000966  0A25               	xorlw	37
   847   000968  A4D8               	btfss	status,2,c
   848   00096A  EFB9  F004         	goto	u181
   849   00096E  EFBB  F004         	goto	u180
   850   000972                     u181:
   851   000972  EFD3  F004         	goto	l948
   852   000976                     u180:
   853   000976                     
   854                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
   855   000976  C032  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   856   00097A  C033  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   857   00097E  2ADE               	incf	postinc2,f,c
   858   000980  0E00               	movlw	0
   859   000982  22DD               	addwfc	postdec2,f,c
   860   000984                     
   861                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
   862   000984  0E00               	movlw	0
   863   000986  6E22               	movwf	(_width+1)^0,c
   864   000988  0E00               	movlw	0
   865   00098A  6E21               	movwf	_width^0,c
   866   00098C  C021  F025         	movff	_width,_flags
   867   000990                     
   868                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
   869   000990  6823               	setf	_prec^0,c
   870   000992  6824               	setf	(_prec+1)^0,c
   871   000994                     l944:
   872                           
   873                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
   874   000994  C032  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   875   000998  C033  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   876   00099C  2ADE               	incf	postinc2,f,c
   877   00099E  0E00               	movlw	0
   878   0009A0  22DD               	addwfc	postdec2,f,c
   879   0009A2  EFE7  F004         	goto	l780
   880   0009A6                     l948:
   881                           
   882                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
   883   0009A6  C032  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   884   0009AA  C033  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   885   0009AE  CFDE FFF6          	movff	postinc2,tblptrl
   886   0009B2  CFDD FFF7          	movff	postdec2,tblptrh
   887   0009B6                     	if	0	;tblptru may be non-zero
   888   0009B6                     	endif
   889   0009B6                     	if	0	;tblptru may be non-zero
   890   0009B6                     	endif
   891   0009B6  0008               	tblrd		*
   892   0009B8  50F5               	movf	tablat,w,c
   893   0009BA  6E27               	movwf	fputc@c^0,c
   894   0009BC  6A28               	clrf	(fputc@c+1)^0,c
   895   0009BE  C030  F029         	movff	vfpfcnvrt@fp,fputc@fp
   896   0009C2  C031  F02A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
   897   0009C6  EC5E  F004         	call	_fputc	;wreg free
   898   0009CA  EFCA  F004         	goto	l944
   899   0009CE                     l780:
   900   0009CE  0012               	return		;funcret
   901   0009D0                     __end_of_vfpfcnvrt:
   902                           	callstack 0
   903                           
   904 ;; *************** function _fputc *****************
   905 ;; Defined at:
   906 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
   907 ;; Parameters:    Size  Location     Type
   908 ;;  c               2    1[COMRAM] int 
   909 ;;  fp              2    3[COMRAM] PTR struct _IO_FILE
   910 ;;		 -> NULL(0), 
   911 ;; Auto vars:     Size  Location     Type
   912 ;;		None
   913 ;; Return value:  Size  Location     Type
   914 ;;                  2    1[COMRAM] int 
   915 ;; Registers used:
   916 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   917 ;; Tracked objects:
   918 ;;		On entry : 0/0
   919 ;;		On exit  : 0/0
   920 ;;		Unchanged: 0/0
   921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   922 ;;      Params:         4       0       0       0       0       0       0       0       0
   923 ;;      Locals:         0       0       0       0       0       0       0       0       0
   924 ;;      Temps:          5       0       0       0       0       0       0       0       0
   925 ;;      Totals:         9       0       0       0       0       0       0       0       0
   926 ;;Total ram usage:        9 bytes
   927 ;; Hardware stack levels used: 1
   928 ;; Hardware stack levels required when called: 1
   929 ;; This function calls:
   930 ;;		_putch
   931 ;; This function is called by:
   932 ;;		_vfpfcnvrt
   933 ;; This function uses a non-reentrant model
   934 ;;
   935                           
   936                           	psect	text8
   937   0008BC                     __ptext8:
   938                           	callstack 0
   939   0008BC                     _fputc:
   940                           	callstack 25
   941   0008BC  5029               	movf	fputc@fp^0,w,c
   942   0008BE  102A               	iorwf	(fputc@fp+1)^0,w,c
   943   0008C0  B4D8               	btfsc	status,2,c
   944   0008C2  EF65  F004         	goto	u141
   945   0008C6  EF67  F004         	goto	u140
   946   0008CA                     u141:
   947   0008CA  EF70  F004         	goto	l926
   948   0008CE                     u140:
   949   0008CE  5029               	movf	fputc@fp^0,w,c
   950   0008D0  102A               	iorwf	(fputc@fp+1)^0,w,c
   951   0008D2  A4D8               	btfss	status,2,c
   952   0008D4  EF6E  F004         	goto	u151
   953   0008D8  EF70  F004         	goto	u150
   954   0008DC                     u151:
   955   0008DC  EF75  F004         	goto	l928
   956   0008E0                     u150:
   957   0008E0                     l926:
   958   0008E0  5027               	movf	fputc@c^0,w,c
   959   0008E2  ECA7  F005         	call	_putch
   960   0008E6  EFA8  F004         	goto	l798
   961   0008EA                     l928:
   962   0008EA  EE20 F009          	lfsr	2,9
   963   0008EE  5029               	movf	fputc@fp^0,w,c
   964   0008F0  26D9               	addwf	fsr2l,f,c
   965   0008F2  502A               	movf	(fputc@fp+1)^0,w,c
   966   0008F4  22DA               	addwfc	fsr2h,f,c
   967   0008F6  50DE               	movf	postinc2,w,c
   968   0008F8  10DE               	iorwf	postinc2,w,c
   969   0008FA  B4D8               	btfsc	status,2,c
   970   0008FC  EF82  F004         	goto	u161
   971   000900  EF84  F004         	goto	u160
   972   000904                     u161:
   973   000904  EF9F  F004         	goto	l932
   974   000908                     u160:
   975   000908  EE20 F009          	lfsr	2,9
   976   00090C  5029               	movf	fputc@fp^0,w,c
   977   00090E  26D9               	addwf	fsr2l,f,c
   978   000910  502A               	movf	(fputc@fp+1)^0,w,c
   979   000912  22DA               	addwfc	fsr2h,f,c
   980   000914  EE10 F003          	lfsr	1,3
   981   000918  5029               	movf	fputc@fp^0,w,c
   982   00091A  26E1               	addwf	fsr1l,f,c
   983   00091C  502A               	movf	(fputc@fp+1)^0,w,c
   984   00091E  22E2               	addwfc	fsr1h,f,c
   985   000920  50DE               	movf	postinc2,w,c
   986   000922  5CE6               	subwf	postinc1,w,c
   987   000924  50E6               	movf	postinc1,w,c
   988   000926  0A80               	xorlw	128
   989   000928  6E2F               	movwf	(??_fputc+4)^0,c
   990   00092A  50DE               	movf	postinc2,w,c
   991   00092C  0A80               	xorlw	128
   992   00092E  582F               	subwfb	(??_fputc+4)^0,w,c
   993   000930  B0D8               	btfsc	status,0,c
   994   000932  EF9D  F004         	goto	u171
   995   000936  EF9F  F004         	goto	u170
   996   00093A                     u171:
   997   00093A  EFA8  F004         	goto	l798
   998   00093E                     u170:
   999   00093E                     l932:
  1000   00093E  EE20 F003          	lfsr	2,3
  1001   000942  5029               	movf	fputc@fp^0,w,c
  1002   000944  26D9               	addwf	fsr2l,f,c
  1003   000946  502A               	movf	(fputc@fp+1)^0,w,c
  1004   000948  22DA               	addwfc	fsr2h,f,c
  1005   00094A  2ADE               	incf	postinc2,f,c
  1006   00094C  0E00               	movlw	0
  1007   00094E  22DD               	addwfc	postdec2,f,c
  1008   000950                     l798:
  1009   000950  0012               	return		;funcret
  1010   000952                     __end_of_fputc:
  1011                           	callstack 0
  1012                           
  1013 ;; *************** function _putch *****************
  1014 ;; Defined at:
  1015 ;;		line 76 in file "main.c"
  1016 ;; Parameters:    Size  Location     Type
  1017 ;;  c               1    wreg     unsigned char 
  1018 ;; Auto vars:     Size  Location     Type
  1019 ;;  c               1    0[COMRAM] unsigned char 
  1020 ;; Return value:  Size  Location     Type
  1021 ;;                  1    wreg      void 
  1022 ;; Registers used:
  1023 ;;		wreg
  1024 ;; Tracked objects:
  1025 ;;		On entry : 0/0
  1026 ;;		On exit  : 0/0
  1027 ;;		Unchanged: 0/0
  1028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1029 ;;      Params:         0       0       0       0       0       0       0       0       0
  1030 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1031 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1032 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1033 ;;Total ram usage:        1 bytes
  1034 ;; Hardware stack levels used: 1
  1035 ;; This function calls:
  1036 ;;		Nothing
  1037 ;; This function is called by:
  1038 ;;		_fputc
  1039 ;; This function uses a non-reentrant model
  1040 ;;
  1041                           
  1042                           	psect	text9
  1043   000B4E                     __ptext9:
  1044                           	callstack 0
  1045   000B4E                     _putch:
  1046                           	callstack 25
  1047                           
  1048                           ;incstack = 0
  1049                           ;putch@c stored from wreg
  1050   000B4E  6E26               	movwf	putch@c^0,c
  1051   000B50                     
  1052                           ;main.c: 77:     TXREG = c;
  1053   000B50  C026  FFAD         	movff	putch@c,4013	;volatile
  1054   000B54                     l64:
  1055   000B54  A2AC               	btfss	172,1,c	;volatile
  1056   000B56  EFAF  F005         	goto	u11
  1057   000B5A  EFB1  F005         	goto	u10
  1058   000B5E                     u11:
  1059   000B5E  EFAA  F005         	goto	l64
  1060   000B62                     u10:
  1061   000B62  0012               	return		;funcret
  1062   000B64                     __end_of_putch:
  1063                           	callstack 0
  1064                           
  1065 ;; *************** function _MSJCharacter *****************
  1066 ;; Defined at:
  1067 ;;		line 81 in file "main.c"
  1068 ;; Parameters:    Size  Location     Type
  1069 ;;		None
  1070 ;; Auto vars:     Size  Location     Type
  1071 ;;		None
  1072 ;; Return value:  Size  Location     Type
  1073 ;;                  1    wreg      void 
  1074 ;; Registers used:
  1075 ;;		wreg, cstack
  1076 ;; Tracked objects:
  1077 ;;		On entry : 0/0
  1078 ;;		On exit  : 0/0
  1079 ;;		Unchanged: 0/0
  1080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1081 ;;      Params:         0       0       0       0       0       0       0       0       0
  1082 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1083 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1084 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1085 ;;Total ram usage:        0 bytes
  1086 ;; Hardware stack levels used: 1
  1087 ;; Hardware stack levels required when called: 1
  1088 ;; This function calls:
  1089 ;;		_printChar_USART
  1090 ;; This function is called by:
  1091 ;;		_main
  1092 ;; This function uses a non-reentrant model
  1093 ;;
  1094                           
  1095                           	psect	text10
  1096   000A84                     __ptext10:
  1097                           	callstack 0
  1098   000A84                     _MSJCharacter:
  1099                           	callstack 29
  1100   000A84                     
  1101                           ;main.c: 83:     printChar_USART('P');
  1102   000A84  0E50               	movlw	80
  1103   000A86  ECB2  F005         	call	_printChar_USART
  1104                           
  1105                           ;main.c: 84:     printChar_USART('I');
  1106   000A8A  0E49               	movlw	73
  1107   000A8C  ECB2  F005         	call	_printChar_USART
  1108                           
  1109                           ;main.c: 85:     printChar_USART('C');
  1110   000A90  0E43               	movlw	67
  1111   000A92  ECB2  F005         	call	_printChar_USART
  1112                           
  1113                           ;main.c: 86:     printChar_USART('1');
  1114   000A96  0E31               	movlw	49
  1115   000A98  ECB2  F005         	call	_printChar_USART
  1116                           
  1117                           ;main.c: 87:     printChar_USART('8');
  1118   000A9C  0E38               	movlw	56
  1119   000A9E  ECB2  F005         	call	_printChar_USART
  1120                           
  1121                           ;main.c: 88:     printChar_USART('F');
  1122   000AA2  0E46               	movlw	70
  1123   000AA4  ECB2  F005         	call	_printChar_USART
  1124                           
  1125                           ;main.c: 89:     printChar_USART('4');
  1126   000AA8  0E34               	movlw	52
  1127   000AAA  ECB2  F005         	call	_printChar_USART
  1128                           
  1129                           ;main.c: 90:     printChar_USART('5');
  1130   000AAE  0E35               	movlw	53
  1131   000AB0  ECB2  F005         	call	_printChar_USART
  1132                           
  1133                           ;main.c: 91:     printChar_USART('K');
  1134   000AB4  0E4B               	movlw	75
  1135   000AB6  ECB2  F005         	call	_printChar_USART
  1136                           
  1137                           ;main.c: 92:     printChar_USART('5');
  1138   000ABA  0E35               	movlw	53
  1139   000ABC  ECB2  F005         	call	_printChar_USART
  1140                           
  1141                           ;main.c: 93:     printChar_USART('0');
  1142   000AC0  0E30               	movlw	48
  1143   000AC2  ECB2  F005         	call	_printChar_USART
  1144                           
  1145                           ;main.c: 94:     printChar_USART('\r');
  1146   000AC6  0E0D               	movlw	13
  1147   000AC8  ECB2  F005         	call	_printChar_USART
  1148   000ACC  0012               	return		;funcret
  1149   000ACE                     __end_of_MSJCharacter:
  1150                           	callstack 0
  1151                           
  1152 ;; *************** function _printChar_USART *****************
  1153 ;; Defined at:
  1154 ;;		line 65 in file "main.c"
  1155 ;; Parameters:    Size  Location     Type
  1156 ;;  caracter        1    wreg     unsigned char 
  1157 ;; Auto vars:     Size  Location     Type
  1158 ;;  caracter        1    0[COMRAM] unsigned char 
  1159 ;; Return value:  Size  Location     Type
  1160 ;;                  1    wreg      void 
  1161 ;; Registers used:
  1162 ;;		wreg
  1163 ;; Tracked objects:
  1164 ;;		On entry : 0/0
  1165 ;;		On exit  : 0/0
  1166 ;;		Unchanged: 0/0
  1167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1168 ;;      Params:         0       0       0       0       0       0       0       0       0
  1169 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1170 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1171 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1172 ;;Total ram usage:        1 bytes
  1173 ;; Hardware stack levels used: 1
  1174 ;; This function calls:
  1175 ;;		Nothing
  1176 ;; This function is called by:
  1177 ;;		_MSJCharacter
  1178 ;;		_printString_USART
  1179 ;; This function uses a non-reentrant model
  1180 ;;
  1181                           
  1182                           	psect	text11
  1183   000B64                     __ptext11:
  1184                           	callstack 0
  1185   000B64                     _printChar_USART:
  1186                           	callstack 29
  1187                           
  1188                           ;incstack = 0
  1189                           ;printChar_USART@caracter stored from wreg
  1190   000B64  6E26               	movwf	printChar_USART@caracter^0,c
  1191   000B66                     
  1192                           ;main.c: 66:     TXREG=caracter;
  1193   000B66  C026  FFAD         	movff	printChar_USART@caracter,4013	;volatile
  1194   000B6A                     l52:
  1195   000B6A  A2AC               	btfss	172,1,c	;volatile
  1196   000B6C  EFBA  F005         	goto	u81
  1197   000B70  EFBC  F005         	goto	u80
  1198   000B74                     u81:
  1199   000B74  EFB5  F005         	goto	l52
  1200   000B78                     u80:
  1201   000B78  0012               	return		;funcret
  1202   000B7A                     __end_of_printChar_USART:
  1203                           	callstack 0
  1204                           
  1205                           	psect	rparam
  1206   000000                     
  1207                           	psect	idloc
  1208                           
  1209                           ;Config register IDLOC0 @ 0x200000
  1210                           ;	unspecified, using default values
  1211   200000                     	org	2097152
  1212   200000  FF                 	db	255
  1213                           
  1214                           ;Config register IDLOC1 @ 0x200001
  1215                           ;	unspecified, using default values
  1216   200001                     	org	2097153
  1217   200001  FF                 	db	255
  1218                           
  1219                           ;Config register IDLOC2 @ 0x200002
  1220                           ;	unspecified, using default values
  1221   200002                     	org	2097154
  1222   200002  FF                 	db	255
  1223                           
  1224                           ;Config register IDLOC3 @ 0x200003
  1225                           ;	unspecified, using default values
  1226   200003                     	org	2097155
  1227   200003  FF                 	db	255
  1228                           
  1229                           ;Config register IDLOC4 @ 0x200004
  1230                           ;	unspecified, using default values
  1231   200004                     	org	2097156
  1232   200004  FF                 	db	255
  1233                           
  1234                           ;Config register IDLOC5 @ 0x200005
  1235                           ;	unspecified, using default values
  1236   200005                     	org	2097157
  1237   200005  FF                 	db	255
  1238                           
  1239                           ;Config register IDLOC6 @ 0x200006
  1240                           ;	unspecified, using default values
  1241   200006                     	org	2097158
  1242   200006  FF                 	db	255
  1243                           
  1244                           ;Config register IDLOC7 @ 0x200007
  1245                           ;	unspecified, using default values
  1246   200007                     	org	2097159
  1247   200007  FF                 	db	255
  1248                           
  1249                           	psect	config
  1250                           
  1251                           ;Config register CONFIG1L @ 0x300000
  1252                           ;	PLL Selection
  1253                           ;	PLLSEL = PLL4X, 4x clock multiplier
  1254                           ;	PLL Enable Configuration bit
  1255                           ;	CFGPLLEN = OFF, PLL Disabled (firmware controlled)
  1256                           ;	CPU System Clock Postscaler
  1257                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
  1258                           ;	Low Speed USB mode with 48 MHz system clock
  1259                           ;	LS48MHZ = SYS24X4, System clock at 24 MHz, USB clock divider is set to 4
  1260   300000                     	org	3145728
  1261   300000  00                 	db	0
  1262                           
  1263                           ;Config register CONFIG1H @ 0x300001
  1264                           ;	Oscillator Selection
  1265                           ;	FOSC = INTOSCIO, Internal oscillator
  1266                           ;	Primary Oscillator Shutdown
  1267                           ;	PCLKEN = ON, Primary oscillator enabled
  1268                           ;	Fail-Safe Clock Monitor
  1269                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1270                           ;	Internal/External Oscillator Switchover
  1271                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1272   300001                     	org	3145729
  1273   300001  28                 	db	40
  1274                           
  1275                           ;Config register CONFIG2L @ 0x300002
  1276                           ;	Power-up Timer Enable
  1277                           ;	nPWRTEN = ON, Power up timer enabled
  1278                           ;	Brown-out Reset Enable
  1279                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
  1280                           ;	Brown-out Reset Voltage
  1281                           ;	BORV = 190, BOR set to 1.9V nominal
  1282                           ;	Low-Power Brown-out Reset
  1283                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  1284   300002                     	org	3145730
  1285   300002  5E                 	db	94
  1286                           
  1287                           ;Config register CONFIG2H @ 0x300003
  1288                           ;	Watchdog Timer Enable bits
  1289                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  1290                           ;	Watchdog Timer Postscaler
  1291                           ;	WDTPS = 32768, 1:32768
  1292   300003                     	org	3145731
  1293   300003  3C                 	db	60
  1294                           
  1295                           ; Padding undefined space
  1296   300004                     	org	3145732
  1297   300004  FF                 	db	255
  1298                           
  1299                           ;Config register CONFIG3H @ 0x300005
  1300                           ;	CCP2 MUX bit
  1301                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  1302                           ;	PORTB A/D Enable bit
  1303                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  1304                           ;	Timer3 Clock Input MUX bit
  1305                           ;	T3CMX = RC0, T3CKI function is on RC0
  1306                           ;	SDO Output MUX bit
  1307                           ;	SDOMX = RB3, SDO function is on RB3
  1308                           ;	Master Clear Reset Pin Enable
  1309                           ;	MCLRE = OFF, RE3 input pin enabled; external MCLR disabled
  1310   300005                     	org	3145733
  1311   300005  53                 	db	83
  1312                           
  1313                           ;Config register CONFIG4L @ 0x300006
  1314                           ;	Stack Full/Underflow Reset
  1315                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1316                           ;	Single-Supply ICSP Enable bit
  1317                           ;	LVP = OFF, Single-Supply ICSP disabled
  1318                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  1319                           ;	ICPRT = OFF, ICPORT disabled
  1320                           ;	Extended Instruction Set Enable bit
  1321                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  1322                           ;	Background Debugger Enable bit
  1323                           ;	DEBUG = 0x1, unprogrammed default
  1324   300006                     	org	3145734
  1325   300006  81                 	db	129
  1326                           
  1327                           ; Padding undefined space
  1328   300007                     	org	3145735
  1329   300007  FF                 	db	255
  1330                           
  1331                           ;Config register CONFIG5L @ 0x300008
  1332                           ;	Block 0 Code Protect
  1333                           ;	CP0 = OFF, Block 0 is not code-protected
  1334                           ;	Block 1 Code Protect
  1335                           ;	CP1 = OFF, Block 1 is not code-protected
  1336                           ;	Block 2 Code Protect
  1337                           ;	CP2 = OFF, Block 2 is not code-protected
  1338                           ;	Block 3 Code Protect
  1339                           ;	CP3 = OFF, Block 3 is not code-protected
  1340   300008                     	org	3145736
  1341   300008  0F                 	db	15
  1342                           
  1343                           ;Config register CONFIG5H @ 0x300009
  1344                           ;	Boot Block Code Protect
  1345                           ;	CPB = OFF, Boot block is not code-protected
  1346                           ;	Data EEPROM Code Protect
  1347                           ;	CPD = OFF, Data EEPROM is not code-protected
  1348   300009                     	org	3145737
  1349   300009  C0                 	db	192
  1350                           
  1351                           ;Config register CONFIG6L @ 0x30000A
  1352                           ;	Block 0 Write Protect
  1353                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
  1354                           ;	Block 1 Write Protect
  1355                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
  1356                           ;	Block 2 Write Protect
  1357                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
  1358                           ;	Block 3 Write Protect
  1359                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
  1360   30000A                     	org	3145738
  1361   30000A  0F                 	db	15
  1362                           
  1363                           ;Config register CONFIG6H @ 0x30000B
  1364                           ;	Configuration Registers Write Protect
  1365                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1366                           ;	Boot Block Write Protect
  1367                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
  1368                           ;	Data EEPROM Write Protect
  1369                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1370   30000B                     	org	3145739
  1371   30000B  E0                 	db	224
  1372                           
  1373                           ;Config register CONFIG7L @ 0x30000C
  1374                           ;	Block 0 Table Read Protect
  1375                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
  1376                           ;	Block 1 Table Read Protect
  1377                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
  1378                           ;	Block 2 Table Read Protect
  1379                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
  1380                           ;	Block 3 Table Read Protect
  1381                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
  1382   30000C                     	org	3145740
  1383   30000C  0F                 	db	15
  1384                           
  1385                           ;Config register CONFIG7H @ 0x30000D
  1386                           ;	Boot Block Table Read Protect
  1387                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
  1388   30000D                     	org	3145741
  1389   30000D  40                 	db	64
  1390                           tosu	equ	0xFFF
  1391                           tosh	equ	0xFFE
  1392                           tosl	equ	0xFFD
  1393                           stkptr	equ	0xFFC
  1394                           pclatu	equ	0xFFB
  1395                           pclath	equ	0xFFA
  1396                           pcl	equ	0xFF9
  1397                           tblptru	equ	0xFF8
  1398                           tblptrh	equ	0xFF7
  1399                           tblptrl	equ	0xFF6
  1400                           tablat	equ	0xFF5
  1401                           prodh	equ	0xFF4
  1402                           prodl	equ	0xFF3
  1403                           indf0	equ	0xFEF
  1404                           postinc0	equ	0xFEE
  1405                           postdec0	equ	0xFED
  1406                           preinc0	equ	0xFEC
  1407                           plusw0	equ	0xFEB
  1408                           fsr0h	equ	0xFEA
  1409                           fsr0l	equ	0xFE9
  1410                           wreg	equ	0xFE8
  1411                           indf1	equ	0xFE7
  1412                           postinc1	equ	0xFE6
  1413                           postdec1	equ	0xFE5
  1414                           preinc1	equ	0xFE4
  1415                           plusw1	equ	0xFE3
  1416                           fsr1h	equ	0xFE2
  1417                           fsr1l	equ	0xFE1
  1418                           bsr	equ	0xFE0
  1419                           indf2	equ	0xFDF
  1420                           postinc2	equ	0xFDE
  1421                           postdec2	equ	0xFDD
  1422                           preinc2	equ	0xFDC
  1423                           plusw2	equ	0xFDB
  1424                           fsr2h	equ	0xFDA
  1425                           fsr2l	equ	0xFD9
  1426                           status	equ	0xFD8

Data Sizes:
    Strings     21
    Constant    0
    Data        0
    BSS         37
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     30      67
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    S712$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    S712$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_1(CODE[21]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 21
		 -> STR_1(CODE[21]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S747$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    printf@fmt	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_1(CODE[21]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _Serial_begin->___lldiv
    _MsjString->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_fputc
    _fputc->_putch
    _MSJCharacter->_printChar_USART

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1887
                                             28 COMRAM     2     2      0
                       _MSJCharacter
                          _MsjString
                       _Serial_begin
                       _config_clock
 ---------------------------------------------------------------------------------
 (1) _config_clock                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Serial_begin                                         6     2      4     458
                                             13 COMRAM     6     2      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _MsjString                                            0     0      0    1414
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                               6     4      2    1414
                                             24 COMRAM     4     2      2
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    1286
                                             16 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           22    16      6     939
                                             10 COMRAM     6     0      6
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     579
                                              1 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _MSJCharacter                                         0     0      0      15
                    _printChar_USART
 ---------------------------------------------------------------------------------
 (2) _printChar_USART                                      1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MSJCharacter
     _printChar_USART
   _MsjString
     _printf
       _vfprintf
         _vfpfcnvrt
           _fputc
             _putch
   _Serial_begin
     ___lldiv
   _config_clock

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      28        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1E      43       1       70.5%
BITBIGSFRlhl        36      0       0      25        0.0%
BITBIGSFRh          2C      0       0      20        0.0%
BITBIGSFRlhhhh      1A      0       0      21        0.0%
BITBIGSFRlhhl       16      0       0      24        0.0%
BITBIGSFRll          A      0       0      26        0.0%
BITBIGSFRlhhhlh      7      0       0      22        0.0%
BITBIGSFRlhhhll      1      0       0      23        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      43      27        0.0%
DATA                 0      0      43       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Aug 13 19:06:37 2022

                     l52 0B6A                       l70 0ACC                       l46 0B86  
                     l55 0B78                       l64 0B54                       l73 0B94  
                     l49 0A34                       l67 0B62                       u10 0B62  
                     u11 0B5E                       u80 0B78                       u81 0B74  
                    l110 08BA                      l103 08AA                      l902 0A84  
                    l808 0B50                      l930 0908                      l922 08BC  
                    l754 0B32                      l852 0B66                      l932 093E  
                    l924 08CE                      l780 09CE                      l940 0984  
                    l926 08E0                      l942 0990                      l928 08EA  
                    l944 0994                      l936 0952                      l960 0A7A  
                    l938 0976                      l786 0A82                      l954 0A36  
                    l970 0818                      l882 0B7A                      l948 09A6  
                    l956 0A42                      l964 0B0E                      l980 0860  
                    l972 0828                      l798 0950                      l958 0A5E  
                    l966 0B16                      l990 08A4                      l982 086A  
                    l974 083E                      l984 0888                      l976 0846  
                    l992 09D0                      l986 0898                      l978 0852  
                    l994 09D0                      l988 089A                      l996 09D4  
                    l998 09D6                      u200 083E                      u201 083A  
                    u210 0860                      u211 085C                      u140 08CE  
                    u220 0888                      u141 08CA                      u221 0884  
                    u150 08E0                      u230 0A1A                      u151 08DC  
                    u160 0908                      u161 0904                      u170 093E  
                    u171 093A                      u235 0A10                      u180 0976  
                    u181 0972                      u190 0A7A                      u191 0A76  
                    u247 0AF4                      wreg 000FE8                     l1000 09D8  
                   l1002 09E6                     l1010 0ACE                     l1004 0A2C  
                   l1012 0AD2                     l1006 0A30                     l1014 0AE6  
                   l1008 0B88                     l1016 0AEA                     l1018 0B02  
                   STR_1 0801                     _dbuf 0001                     _main 0ACE  
                   _prec 0023                     fsr1h 000FE2                     fsr2h 000FDA  
                   fsr1l 000FE1                     fsr2l 000FD9           ??_config_clock 0026  
                   start 0000             ___param_bank 000000                    ?_main 0026  
        __end_of___lldiv 08BC                    _RCSTA 000FAB             vfpfcnvrt@fmt 0032  
                  _SPBRG 000FAF                    _TXREG 000FAD                    _TXSTA 000FAC  
                  _flags 0025                    _fputc 08BC                    _width 0021  
                  _putch 0B4E                    tablat 000FF5                    status 000FD8  
        __initialization 0B34             __end_of_main 0B0E                   ??_main 0042  
          __activetblptr 000001                   ?_fputc 0027                   ?_putch 0026  
                 _SPBRGH 000FB0             vfprintf@cfmt 003C                ??___lldiv 002E  
      ??_printChar_USART 0026                   clear_0 0B3A                   isa$std 000001  
                 _printf 0B0E                   fputc@c 0027     __end_of_config_clock 0B88  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8                   putch@c 0026         __end_of_vfprintf 0A84  
             __accesstop 0060  __end_of__initialization 0B40            ___rparam_used 000001  
         __pcstackCOMRAM 0026            __end_of_fputc 0952            __end_of_putch 0B64  
                ??_fputc 002B        __end_of_MsjString 0B96                  ??_putch 0026  
          ?_Serial_begin 0033            ?_MSJCharacter 0026                  _BAUDCON 000FB8  
                ?_printf 003E           ??_Serial_begin 0037           ??_MSJCharacter 0027  
                __Hparam 0000                  __Lparam 0000            Serial_begin@n 0037  
                ___lldiv 0818                ?_vfprintf 0036             __psmallconst 0800  
                __pcinit 0B34                  __ramtop 0800                  __ptext0 0ACE  
                __ptext1 0B7A                  __ptext2 09D0                  __ptext3 0818  
                __ptext4 0B88                  __ptext5 0B0E                  __ptext6 0A36  
                __ptext7 0952                  __ptext8 08BC                  __ptext9 0B4E  
   end_of_initialization 0B40                  fputc@fp 0029          _printChar_USART 0B64  
        ___lldiv@divisor 002A             _config_clock 0B7A          ___lldiv@counter 0032  
      __end_of_vfpfcnvrt 09D0                  postdec2 000FDD                  postinc0 000FEE  
                postinc1 000FE6                  postinc2 000FDE               ??_vfprintf 003C  
              _TRISCbits 000F94                _TXSTAbits 000FAC              vfpfcnvrt@ap 0034  
            vfpfcnvrt@fp 0030     __end_of_Serial_begin 0A36     __end_of_MSJCharacter 0ACE  
         __end_of_printf 0B34      start_initialization 0B34  __end_of_printChar_USART 0B7A  
              _MsjString 0B88              vfprintf@fmt 0038                 ??_printf 0040  
            __pbssCOMRAM 0001               ?_MsjString 0026                 ?___lldiv 0026  
            __smallconst 0800         ?_printChar_USART 0026                _vfpfcnvrt 0952  
           _Serial_begin 09D0              ??_MsjString 0042             _MSJCharacter 0A84  
               __Hrparam 0000               vfprintf@ap 003A                 __Lrparam 0000  
             vfprintf@fp 0036             __Lsmallconst 0800               ?_vfpfcnvrt 0030  
             _ANSELCbits 000F5D                 __ptext10 0A84                 __ptext11 0B64  
               isa$xinst 000000                 _vfprintf 0A36                printf@fmt 003E  
       ___lldiv@dividend 0026  printChar_USART@caracter 0026               _OSCCONbits 000FD3  
               printf@ap 0040              ??_vfpfcnvrt 0036      Serial_begin@baudios 0033  
       ___lldiv@quotient 002E            ?_config_clock 0026  
