

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Aug 12 21:23:25 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    19   000000                     
    20                           ; Version 2.35
    21                           ; Generated 05/05/2021 GMT
    22                           ; 
    23                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F45K50 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55   000000                     
    56                           	psect	idataCOMRAM
    57   007F80                     __pidataCOMRAM:
    58                           	callstack 0
    59                           
    60                           ;initializer for _Array_DAC
    61   007F80  10                 	db	16
    62   007F81  13                 	db	19
    63   007F82  15                 	db	21
    64   007F83  18                 	db	24
    65   007F84  1A                 	db	26
    66   007F85  1C                 	db	28
    67   007F86  1E                 	db	30
    68   007F87  1F                 	db	31
    69   007F88  1F                 	db	31
    70   007F89  1F                 	db	31
    71   007F8A  1E                 	db	30
    72   007F8B  1C                 	db	28
    73   007F8C  1A                 	db	26
    74   007F8D  18                 	db	24
    75   007F8E  15                 	db	21
    76   007F8F  13                 	db	19
    77   007F90  10                 	db	16
    78   007F91  0C                 	db	12
    79   007F92  0A                 	db	10
    80   007F93  07                 	db	7
    81   007F94  05                 	db	5
    82   007F95  03                 	db	3
    83   007F96  01                 	db	1
    84   007F97  00                 	db	0
    85   007F98  00                 	db	0
    86   007F99  00                 	db	0
    87   007F9A  01                 	db	1
    88   007F9B  03                 	db	3
    89   007F9C  05                 	db	5
    90   007F9D  07                 	db	7
    91   007F9E  0A                 	db	10
    92   007F9F  0C                 	db	12
    93   000000                     _VREFCON2	set	3963
    94   000000                     _VREFCON1bits	set	3964
    95   000000                     _ANSELAbits	set	3931
    96   000000                     _ANSELD	set	3934
    97   000000                     _SLRCON	set	3962
    98   000000                     _OSCCONbits	set	4051
    99                           
   100                           ; #config settings
   101                           
   102                           	psect	cinit
   103   007FA0                     __pcinit:
   104                           	callstack 0
   105   007FA0                     start_initialization:
   106                           	callstack 0
   107   007FA0                     __initialization:
   108                           	callstack 0
   109                           
   110                           ; Initialize objects allocated to COMRAM (32 bytes)
   111                           ; load TBLPTR registers with __pidataCOMRAM
   112   007FA0  0E80               	movlw	low __pidataCOMRAM
   113   007FA2  6EF6               	movwf	tblptrl,c
   114   007FA4  0E7F               	movlw	high __pidataCOMRAM
   115   007FA6  6EF7               	movwf	tblptrh,c
   116   007FA8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   117   007FAA  6EF8               	movwf	tblptru,c
   118   007FAC  EE00  F001         	lfsr	0,__pdataCOMRAM
   119   007FB0  EE10 F020          	lfsr	1,32
   120   007FB4                     copy_data0:
   121   007FB4  0009               	tblrd		*+
   122   007FB6  CFF5 FFEE          	movff	tablat,postinc0
   123   007FBA  50E5               	movf	postdec1,w,c
   124   007FBC  50E1               	movf	fsr1l,w,c
   125   007FBE  E1FA               	bnz	copy_data0
   126   007FC0                     end_of_initialization:
   127                           	callstack 0
   128   007FC0                     __end_of__initialization:
   129                           	callstack 0
   130   007FC0  0100               	movlb	0
   131   007FC2  EFB4  F03F         	goto	_main	;jump to C main() function
   132                           
   133                           	psect	dataCOMRAM
   134   000001                     __pdataCOMRAM:
   135                           	callstack 0
   136   000001                     _Array_DAC:
   137                           	callstack 0
   138   000001                     	ds	32
   139                           
   140                           	psect	cstackCOMRAM
   141   000021                     __pcstackCOMRAM:
   142                           	callstack 0
   143   000021                     Volt_DAC@voltaje:
   144                           	callstack 0
   145                           
   146                           ; 1 bytes @ 0x0
   147   000021                     	ds	1
   148   000022                     ??_SignalSeno:
   149                           
   150                           ; 1 bytes @ 0x1
   151   000022                     	ds	1
   152   000023                     SignalSeno@i:
   153                           	callstack 0
   154                           
   155                           ; 1 bytes @ 0x2
   156   000023                     	ds	1
   157   000024                     
   158                           ; 1 bytes @ 0x3
   159 ;;
   160 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   161 ;;
   162 ;; *************** function _main *****************
   163 ;; Defined at:
   164 ;;		line 33 in file "main.c"
   165 ;; Parameters:    Size  Location     Type
   166 ;;		None
   167 ;; Auto vars:     Size  Location     Type
   168 ;;		None
   169 ;; Return value:  Size  Location     Type
   170 ;;                  1    wreg      void 
   171 ;; Registers used:
   172 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   173 ;; Tracked objects:
   174 ;;		On entry : 0/0
   175 ;;		On exit  : 0/0
   176 ;;		Unchanged: 0/0
   177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   178 ;;      Params:         0       0       0       0       0       0       0       0       0
   179 ;;      Locals:         0       0       0       0       0       0       0       0       0
   180 ;;      Temps:          0       0       0       0       0       0       0       0       0
   181 ;;      Totals:         0       0       0       0       0       0       0       0       0
   182 ;;Total ram usage:        0 bytes
   183 ;; Hardware stack levels required when called: 2
   184 ;; This function calls:
   185 ;;		_Config_Clock
   186 ;;		_Config_Port
   187 ;;		_DAC_Init
   188 ;;		_SignalSeno
   189 ;; This function is called by:
   190 ;;		Startup code after reset
   191 ;; This function uses a non-reentrant model
   192 ;;
   193                           
   194                           	psect	text0
   195   007F68                     __ptext0:
   196                           	callstack 0
   197   007F68                     _main:
   198                           	callstack 29
   199   007F68                     
   200                           ;main.c: 34:     Config_Clock();
   201   007F68  ECA4  F03F         	call	_Config_Clock	;wreg free
   202                           
   203                           ;main.c: 35:     Config_Port();
   204   007F6C  EC9E  F03F         	call	_Config_Port	;wreg free
   205                           
   206                           ;main.c: 38:     DAC_Init();
   207   007F70  ECAB  F03F         	call	_DAC_Init	;wreg free
   208   007F74                     l768:
   209                           
   210                           ;main.c: 43:         SignalSeno();
   211   007F74  ECE3  F03F         	call	_SignalSeno	;wreg free
   212   007F78  EFBA  F03F         	goto	l768
   213   007F7C  EF00  F000         	goto	start
   214   007F80                     __end_of_main:
   215                           	callstack 0
   216                           
   217 ;; *************** function _SignalSeno *****************
   218 ;; Defined at:
   219 ;;		line 112 in file "main.c"
   220 ;; Parameters:    Size  Location     Type
   221 ;;		None
   222 ;; Auto vars:     Size  Location     Type
   223 ;;  i               1    2[COMRAM] unsigned char 
   224 ;; Return value:  Size  Location     Type
   225 ;;                  1    wreg      void 
   226 ;; Registers used:
   227 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   228 ;; Tracked objects:
   229 ;;		On entry : 0/0
   230 ;;		On exit  : 0/0
   231 ;;		Unchanged: 0/0
   232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   233 ;;      Params:         0       0       0       0       0       0       0       0       0
   234 ;;      Locals:         1       0       0       0       0       0       0       0       0
   235 ;;      Temps:          1       0       0       0       0       0       0       0       0
   236 ;;      Totals:         2       0       0       0       0       0       0       0       0
   237 ;;Total ram usage:        2 bytes
   238 ;; Hardware stack levels used: 1
   239 ;; Hardware stack levels required when called: 1
   240 ;; This function calls:
   241 ;;		_Volt_DAC
   242 ;; This function is called by:
   243 ;;		_main
   244 ;; This function uses a non-reentrant model
   245 ;;
   246                           
   247                           	psect	text1
   248   007FC6                     __ptext1:
   249                           	callstack 0
   250   007FC6                     _SignalSeno:
   251                           	callstack 29
   252   007FC6                     
   253                           ;main.c: 113:     for(uint8_t i=0;i<(sizeof(Array_DAC)/sizeof(Array_DAC[0]));i++){
   254   007FC6  0E00               	movlw	0
   255   007FC8  6E23               	movwf	SignalSeno@i^0,c
   256   007FCA                     l758:
   257                           
   258                           ;main.c: 114:         Volt_DAC(Array_DAC[i]);
   259   007FCA  0E01               	movlw	low _Array_DAC
   260   007FCC  2423               	addwf	SignalSeno@i^0,w,c
   261   007FCE  6ED9               	movwf	fsr2l,c
   262   007FD0  6ADA               	clrf	fsr2h,c
   263   007FD2  0E00               	movlw	high _Array_DAC
   264   007FD4  22DA               	addwfc	fsr2h,f,c
   265   007FD6  50DF               	movf	indf2,w,c
   266   007FD8  EC99  F03F         	call	_Volt_DAC
   267   007FDC                     
   268                           ;main.c: 115:         _delay((unsigned long)((1)*(16000000UL/4000.0)));
   269   007FDC  0E06               	movlw	6
   270   007FDE  6E22               	movwf	??_SignalSeno^0,c
   271   007FE0  0E30               	movlw	48
   272   007FE2                     u57:
   273   007FE2  2EE8               	decfsz	wreg,f,c
   274   007FE4  D7FE               	bra	u57
   275   007FE6  2E22               	decfsz	??_SignalSeno^0,f,c
   276   007FE8  D7FC               	bra	u57
   277   007FEA  D000               	nop2	
   278   007FEC                     
   279                           ;main.c: 116:     }
   280   007FEC  2A23               	incf	SignalSeno@i^0,f,c
   281   007FEE  0E1F               	movlw	31
   282   007FF0  6423               	cpfsgt	SignalSeno@i^0,c
   283   007FF2  EFFD  F03F         	goto	u11
   284   007FF6  EFFF  F03F         	goto	u10
   285   007FFA                     u11:
   286   007FFA  EFE5  F03F         	goto	l758
   287   007FFE                     u10:
   288   007FFE  0012               	return		;funcret
   289   008000                     __end_of_SignalSeno:
   290                           	callstack 0
   291                           
   292 ;; *************** function _Volt_DAC *****************
   293 ;; Defined at:
   294 ;;		line 82 in file "main.c"
   295 ;; Parameters:    Size  Location     Type
   296 ;;  voltaje         1    wreg     unsigned char 
   297 ;; Auto vars:     Size  Location     Type
   298 ;;  voltaje         1    0[COMRAM] unsigned char 
   299 ;; Return value:  Size  Location     Type
   300 ;;                  1    wreg      void 
   301 ;; Registers used:
   302 ;;		wreg, status,2, status,0
   303 ;; Tracked objects:
   304 ;;		On entry : 0/0
   305 ;;		On exit  : 0/0
   306 ;;		Unchanged: 0/0
   307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   308 ;;      Params:         0       0       0       0       0       0       0       0       0
   309 ;;      Locals:         1       0       0       0       0       0       0       0       0
   310 ;;      Temps:          0       0       0       0       0       0       0       0       0
   311 ;;      Totals:         1       0       0       0       0       0       0       0       0
   312 ;;Total ram usage:        1 bytes
   313 ;; Hardware stack levels used: 1
   314 ;; This function calls:
   315 ;;		Nothing
   316 ;; This function is called by:
   317 ;;		_SignalSeno
   318 ;;		_SignalSquare
   319 ;;		_DienteSierra
   320 ;;		_SignalTriangle
   321 ;; This function uses a non-reentrant model
   322 ;;
   323                           
   324                           	psect	text2
   325   007F32                     __ptext2:
   326                           	callstack 0
   327   007F32                     _Volt_DAC:
   328                           	callstack 29
   329                           
   330                           ;incstack = 0
   331                           ;Volt_DAC@voltaje stored from wreg
   332   007F32  6E21               	movwf	Volt_DAC@voltaje^0,c
   333   007F34                     
   334                           ;main.c: 83:     VREFCON2 = (voltaje & 0x1F);
   335   007F34  5021               	movf	Volt_DAC@voltaje^0,w,c
   336   007F36  0B1F               	andlw	31
   337   007F38  6E7B               	movwf	123,c	;volatile
   338   007F3A  0012               	return		;funcret
   339   007F3C                     __end_of_Volt_DAC:
   340                           	callstack 0
   341                           
   342 ;; *************** function _DAC_Init *****************
   343 ;; Defined at:
   344 ;;		line 68 in file "main.c"
   345 ;; Parameters:    Size  Location     Type
   346 ;;		None
   347 ;; Auto vars:     Size  Location     Type
   348 ;;		None
   349 ;; Return value:  Size  Location     Type
   350 ;;                  1    wreg      void 
   351 ;; Registers used:
   352 ;;		wreg, status,2
   353 ;; Tracked objects:
   354 ;;		On entry : 0/0
   355 ;;		On exit  : 0/0
   356 ;;		Unchanged: 0/0
   357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   358 ;;      Params:         0       0       0       0       0       0       0       0       0
   359 ;;      Locals:         0       0       0       0       0       0       0       0       0
   360 ;;      Temps:          0       0       0       0       0       0       0       0       0
   361 ;;      Totals:         0       0       0       0       0       0       0       0       0
   362 ;;Total ram usage:        0 bytes
   363 ;; Hardware stack levels used: 1
   364 ;; This function calls:
   365 ;;		Nothing
   366 ;; This function is called by:
   367 ;;		_main
   368 ;; This function uses a non-reentrant model
   369 ;;
   370                           
   371                           	psect	text3
   372   007F56                     __ptext3:
   373                           	callstack 0
   374   007F56                     _DAC_Init:
   375                           	callstack 30
   376   007F56                     
   377                           ;main.c: 71:     ANSELAbits.ANSA2 = 0;
   378   007F56  010F               	movlb	15	; () banked
   379   007F58  955B               	bcf	91,2,b	;volatile
   380                           
   381                           ;main.c: 75:     VREFCON1bits.DACEN = 1;
   382   007F5A  8E7C               	bsf	124,7,c	;volatile
   383                           
   384                           ;main.c: 76:     VREFCON1bits.DACLPS = 0;
   385   007F5C  9C7C               	bcf	124,6,c	;volatile
   386                           
   387                           ;main.c: 77:     VREFCON1bits.DACOE = 1;
   388   007F5E  8A7C               	bsf	124,5,c	;volatile
   389   007F60                     
   390                           ; BSR set to: 15
   391                           ;main.c: 78:     VREFCON1bits.DACPSS = 0b00;
   392   007F60  0EF3               	movlw	-13
   393   007F62  167C               	andwf	124,f,c	;volatile
   394   007F64                     
   395                           ; BSR set to: 15
   396                           ;main.c: 79:     VREFCON1bits.DACNSS =0;
   397   007F64  907C               	bcf	124,0,c	;volatile
   398   007F66                     
   399                           ; BSR set to: 15
   400   007F66  0012               	return		;funcret
   401   007F68                     __end_of_DAC_Init:
   402                           	callstack 0
   403                           
   404 ;; *************** function _Config_Port *****************
   405 ;; Defined at:
   406 ;;		line 54 in file "main.c"
   407 ;; Parameters:    Size  Location     Type
   408 ;;		None
   409 ;; Auto vars:     Size  Location     Type
   410 ;;		None
   411 ;; Return value:  Size  Location     Type
   412 ;;                  1    wreg      void 
   413 ;; Registers used:
   414 ;;		wreg, status,2
   415 ;; Tracked objects:
   416 ;;		On entry : 0/0
   417 ;;		On exit  : 0/0
   418 ;;		Unchanged: 0/0
   419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   420 ;;      Params:         0       0       0       0       0       0       0       0       0
   421 ;;      Locals:         0       0       0       0       0       0       0       0       0
   422 ;;      Temps:          0       0       0       0       0       0       0       0       0
   423 ;;      Totals:         0       0       0       0       0       0       0       0       0
   424 ;;Total ram usage:        0 bytes
   425 ;; Hardware stack levels used: 1
   426 ;; This function calls:
   427 ;;		Nothing
   428 ;; This function is called by:
   429 ;;		_main
   430 ;; This function uses a non-reentrant model
   431 ;;
   432                           
   433                           	psect	text4
   434   007F3C                     __ptext4:
   435                           	callstack 0
   436   007F3C                     _Config_Port:
   437                           	callstack 30
   438   007F3C                     
   439                           ;main.c: 58:     SLRCON=0b00000000;
   440   007F3C  0E00               	movlw	0
   441   007F3E  6E7A               	movwf	122,c	;volatile
   442                           
   443                           ;main.c: 62:     ANSELD = 0x00;
   444   007F40  0E00               	movlw	0
   445   007F42  010F               	movlb	15	; () banked
   446   007F44  6F5E               	movwf	94,b	;volatile
   447   007F46                     
   448                           ; BSR set to: 15
   449   007F46  0012               	return		;funcret
   450   007F48                     __end_of_Config_Port:
   451                           	callstack 0
   452                           
   453 ;; *************** function _Config_Clock *****************
   454 ;; Defined at:
   455 ;;		line 49 in file "main.c"
   456 ;; Parameters:    Size  Location     Type
   457 ;;		None
   458 ;; Auto vars:     Size  Location     Type
   459 ;;		None
   460 ;; Return value:  Size  Location     Type
   461 ;;                  1    wreg      void 
   462 ;; Registers used:
   463 ;;		wreg, status,2
   464 ;; Tracked objects:
   465 ;;		On entry : 0/0
   466 ;;		On exit  : 0/0
   467 ;;		Unchanged: 0/0
   468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   469 ;;      Params:         0       0       0       0       0       0       0       0       0
   470 ;;      Locals:         0       0       0       0       0       0       0       0       0
   471 ;;      Temps:          0       0       0       0       0       0       0       0       0
   472 ;;      Totals:         0       0       0       0       0       0       0       0       0
   473 ;;Total ram usage:        0 bytes
   474 ;; Hardware stack levels used: 1
   475 ;; This function calls:
   476 ;;		Nothing
   477 ;; This function is called by:
   478 ;;		_main
   479 ;; This function uses a non-reentrant model
   480 ;;
   481                           
   482                           	psect	text5
   483   007F48                     __ptext5:
   484                           	callstack 0
   485   007F48                     _Config_Clock:
   486                           	callstack 30
   487   007F48                     
   488                           ;main.c: 50:     OSCCONbits.IRCF=0b111;
   489   007F48  0E70               	movlw	112
   490   007F4A  12D3               	iorwf	211,f,c	;volatile
   491                           
   492                           ;main.c: 51:     OSCCONbits.SCS=0b10;
   493   007F4C  50D3               	movf	211,w,c	;volatile
   494   007F4E  0BFC               	andlw	-4
   495   007F50  0902               	iorlw	2
   496   007F52  6ED3               	movwf	211,c	;volatile
   497   007F54  0012               	return		;funcret
   498   007F56                     __end_of_Config_Clock:
   499                           	callstack 0
   500   000000                     
   501                           	psect	rparam
   502   000000                     
   503                           	psect	idloc
   504                           
   505                           ;Config register IDLOC0 @ 0x200000
   506                           ;	unspecified, using default values
   507   200000                     	org	2097152
   508   200000  FF                 	db	255
   509                           
   510                           ;Config register IDLOC1 @ 0x200001
   511                           ;	unspecified, using default values
   512   200001                     	org	2097153
   513   200001  FF                 	db	255
   514                           
   515                           ;Config register IDLOC2 @ 0x200002
   516                           ;	unspecified, using default values
   517   200002                     	org	2097154
   518   200002  FF                 	db	255
   519                           
   520                           ;Config register IDLOC3 @ 0x200003
   521                           ;	unspecified, using default values
   522   200003                     	org	2097155
   523   200003  FF                 	db	255
   524                           
   525                           ;Config register IDLOC4 @ 0x200004
   526                           ;	unspecified, using default values
   527   200004                     	org	2097156
   528   200004  FF                 	db	255
   529                           
   530                           ;Config register IDLOC5 @ 0x200005
   531                           ;	unspecified, using default values
   532   200005                     	org	2097157
   533   200005  FF                 	db	255
   534                           
   535                           ;Config register IDLOC6 @ 0x200006
   536                           ;	unspecified, using default values
   537   200006                     	org	2097158
   538   200006  FF                 	db	255
   539                           
   540                           ;Config register IDLOC7 @ 0x200007
   541                           ;	unspecified, using default values
   542   200007                     	org	2097159
   543   200007  FF                 	db	255
   544                           
   545                           	psect	config
   546                           
   547                           ;Config register CONFIG1L @ 0x300000
   548                           ;	PLL Selection
   549                           ;	PLLSEL = PLL4X, 4x clock multiplier
   550                           ;	PLL Enable Configuration bit
   551                           ;	CFGPLLEN = OFF, PLL Disabled (firmware controlled)
   552                           ;	CPU System Clock Postscaler
   553                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
   554                           ;	Low Speed USB mode with 48 MHz system clock
   555                           ;	LS48MHZ = SYS24X4, System clock at 24 MHz, USB clock divider is set to 4
   556   300000                     	org	3145728
   557   300000  00                 	db	0
   558                           
   559                           ;Config register CONFIG1H @ 0x300001
   560                           ;	Oscillator Selection
   561                           ;	FOSC = INTOSCIO, Internal oscillator
   562                           ;	Primary Oscillator Shutdown
   563                           ;	PCLKEN = ON, Primary oscillator enabled
   564                           ;	Fail-Safe Clock Monitor
   565                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   566                           ;	Internal/External Oscillator Switchover
   567                           ;	IESO = OFF, Oscillator Switchover mode disabled
   568   300001                     	org	3145729
   569   300001  28                 	db	40
   570                           
   571                           ;Config register CONFIG2L @ 0x300002
   572                           ;	Power-up Timer Enable
   573                           ;	nPWRTEN = ON, Power up timer enabled
   574                           ;	Brown-out Reset Enable
   575                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
   576                           ;	Brown-out Reset Voltage
   577                           ;	BORV = 190, BOR set to 1.9V nominal
   578                           ;	Low-Power Brown-out Reset
   579                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
   580   300002                     	org	3145730
   581   300002  5E                 	db	94
   582                           
   583                           ;Config register CONFIG2H @ 0x300003
   584                           ;	Watchdog Timer Enable bits
   585                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
   586                           ;	Watchdog Timer Postscaler
   587                           ;	WDTPS = 32768, 1:32768
   588   300003                     	org	3145731
   589   300003  3C                 	db	60
   590                           
   591                           ; Padding undefined space
   592   300004                     	org	3145732
   593   300004  FF                 	db	255
   594                           
   595                           ;Config register CONFIG3H @ 0x300005
   596                           ;	CCP2 MUX bit
   597                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
   598                           ;	PORTB A/D Enable bit
   599                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
   600                           ;	Timer3 Clock Input MUX bit
   601                           ;	T3CMX = RC0, T3CKI function is on RC0
   602                           ;	SDO Output MUX bit
   603                           ;	SDOMX = RB3, SDO function is on RB3
   604                           ;	Master Clear Reset Pin Enable
   605                           ;	MCLRE = OFF, RE3 input pin enabled; external MCLR disabled
   606   300005                     	org	3145733
   607   300005  53                 	db	83
   608                           
   609                           ;Config register CONFIG4L @ 0x300006
   610                           ;	Stack Full/Underflow Reset
   611                           ;	STVREN = ON, Stack full/underflow will cause Reset
   612                           ;	Single-Supply ICSP Enable bit
   613                           ;	LVP = OFF, Single-Supply ICSP disabled
   614                           ;	Dedicated In-Circuit Debug/Programming Port Enable
   615                           ;	ICPRT = OFF, ICPORT disabled
   616                           ;	Extended Instruction Set Enable bit
   617                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
   618                           ;	Background Debugger Enable bit
   619                           ;	DEBUG = 0x1, unprogrammed default
   620   300006                     	org	3145734
   621   300006  81                 	db	129
   622                           
   623                           ; Padding undefined space
   624   300007                     	org	3145735
   625   300007  FF                 	db	255
   626                           
   627                           ;Config register CONFIG5L @ 0x300008
   628                           ;	Block 0 Code Protect
   629                           ;	CP0 = OFF, Block 0 is not code-protected
   630                           ;	Block 1 Code Protect
   631                           ;	CP1 = OFF, Block 1 is not code-protected
   632                           ;	Block 2 Code Protect
   633                           ;	CP2 = OFF, Block 2 is not code-protected
   634                           ;	Block 3 Code Protect
   635                           ;	CP3 = OFF, Block 3 is not code-protected
   636   300008                     	org	3145736
   637   300008  0F                 	db	15
   638                           
   639                           ;Config register CONFIG5H @ 0x300009
   640                           ;	Boot Block Code Protect
   641                           ;	CPB = OFF, Boot block is not code-protected
   642                           ;	Data EEPROM Code Protect
   643                           ;	CPD = OFF, Data EEPROM is not code-protected
   644   300009                     	org	3145737
   645   300009  C0                 	db	192
   646                           
   647                           ;Config register CONFIG6L @ 0x30000A
   648                           ;	Block 0 Write Protect
   649                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
   650                           ;	Block 1 Write Protect
   651                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
   652                           ;	Block 2 Write Protect
   653                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
   654                           ;	Block 3 Write Protect
   655                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
   656   30000A                     	org	3145738
   657   30000A  0F                 	db	15
   658                           
   659                           ;Config register CONFIG6H @ 0x30000B
   660                           ;	Configuration Registers Write Protect
   661                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   662                           ;	Boot Block Write Protect
   663                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
   664                           ;	Data EEPROM Write Protect
   665                           ;	WRTD = OFF, Data EEPROM is not write-protected
   666   30000B                     	org	3145739
   667   30000B  E0                 	db	224
   668                           
   669                           ;Config register CONFIG7L @ 0x30000C
   670                           ;	Block 0 Table Read Protect
   671                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
   672                           ;	Block 1 Table Read Protect
   673                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
   674                           ;	Block 2 Table Read Protect
   675                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
   676                           ;	Block 3 Table Read Protect
   677                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
   678   30000C                     	org	3145740
   679   30000C  0F                 	db	15
   680                           
   681                           ;Config register CONFIG7H @ 0x30000D
   682                           ;	Boot Block Table Read Protect
   683                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
   684   30000D                     	org	3145741
   685   30000D  40                 	db	64
   686                           tosu	equ	0xFFF
   687                           tosh	equ	0xFFE
   688                           tosl	equ	0xFFD
   689                           stkptr	equ	0xFFC
   690                           pclatu	equ	0xFFB
   691                           pclath	equ	0xFFA
   692                           pcl	equ	0xFF9
   693                           tblptru	equ	0xFF8
   694                           tblptrh	equ	0xFF7
   695                           tblptrl	equ	0xFF6
   696                           tablat	equ	0xFF5
   697                           prodh	equ	0xFF4
   698                           prodl	equ	0xFF3
   699                           indf0	equ	0xFEF
   700                           postinc0	equ	0xFEE
   701                           postdec0	equ	0xFED
   702                           preinc0	equ	0xFEC
   703                           plusw0	equ	0xFEB
   704                           fsr0h	equ	0xFEA
   705                           fsr0l	equ	0xFE9
   706                           wreg	equ	0xFE8
   707                           indf1	equ	0xFE7
   708                           postinc1	equ	0xFE6
   709                           postdec1	equ	0xFE5
   710                           preinc1	equ	0xFE4
   711                           plusw1	equ	0xFE3
   712                           fsr1h	equ	0xFE2
   713                           fsr1l	equ	0xFE1
   714                           bsr	equ	0xFE0
   715                           indf2	equ	0xFDF
   716                           postinc2	equ	0xFDE
   717                           postdec2	equ	0xFDD
   718                           preinc2	equ	0xFDC
   719                           plusw2	equ	0xFDB
   720                           fsr2h	equ	0xFDA
   721                           fsr2l	equ	0xFD9
   722                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        32
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      3      35
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_SignalSeno
    _SignalSeno->_Volt_DAC

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      60
                       _Config_Clock
                        _Config_Port
                           _DAC_Init
                         _SignalSeno
 ---------------------------------------------------------------------------------
 (1) _SignalSeno                                           2     2      0      60
                                              1 COMRAM     2     2      0
                           _Volt_DAC
 ---------------------------------------------------------------------------------
 (2) _Volt_DAC                                             1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DAC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Config_Port                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Config_Clock                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Config_Clock
   _Config_Port
   _DAC_Init
   _SignalSeno
     _Volt_DAC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      26        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      3      23       1       36.8%
BITBIGSFRlhh        56      0       0      21        0.0%
BITBIGSFRh          2C      0       0      20        0.0%
BITBIGSFRllh        1B      0       0      22        0.0%
BITBIGSFRllll        8      0       0      24        0.0%
BITBIGSFRlllh        2      0       0      23        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      23      25        0.0%
DATA                 0      0      23       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Aug 12 21:23:25 2022

                     l41 7F66                       l35 7F54                       l44 7F3A  
                     l38 7F46                       l64 7FFE                       u10 7FFE  
                     u11 7FFA                       u57 7FE2                      l740 7F34  
                    l742 7F48                      l750 7F64                      l744 7F3C  
                    l760 7FDC                      l752 7FC6                      l746 7F56  
                    l762 7FEC                      l748 7F60                      l764 7FEE  
                    l758 7FCA                      l766 7F68                      l768 7F74  
                    wreg 000FE8                     _main 7F68                     indf2 000FDF  
                   fsr1l 000FE1                     fsr2l 000FD9         __end_of_DAC_Init 7F68  
                   start 0000             ___param_bank 000000      __end_of_Config_Port 7F48  
                  ?_main 0021                    tablat 000FF5          __initialization 7FA0  
   __end_of_Config_Clock 7F56             __end_of_main 7F80                   ??_main 0024  
          __activetblptr 000000         __end_of_Volt_DAC 7F3C                   _ANSELD 000F5E  
                 _SLRCON 000F7A              _Config_Port 7F3C               _SignalSeno 7FC6  
                 isa$std 000001             __pdataCOMRAM 0001                ?_DAC_Init 0021  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
             __accesstop 0060  __end_of__initialization 7FC0            ___rparam_used 000001  
         __pcstackCOMRAM 0021               ??_DAC_Init 0021              ?_SignalSeno 0021  
            SignalSeno@i 0023                ?_Volt_DAC 0021             _Config_Clock 7F48  
                __Hparam 0000                  __Lparam 0000               ??_Volt_DAC 0021  
                __pcinit 7FA0                  __ramtop 0800                  __ptext0 7F68  
                __ptext1 7FC6                  __ptext2 7F32                  __ptext3 7F56  
                __ptext4 7F3C                  __ptext5 7F48     end_of_initialization 7FC0  
           ?_Config_Port 0021                  postdec1 000FE5                  postinc0 000FEE  
              _Array_DAC 0001            __pidataCOMRAM 7F80      start_initialization 7FA0  
           ??_SignalSeno 0022       __end_of_SignalSeno 8000                 _DAC_Init 7F56  
        Volt_DAC@voltaje 0021                 _VREFCON2 000F7B                copy_data0 7FB4  
               __Hrparam 0000                 __Lrparam 0000                 _Volt_DAC 7F32  
             _ANSELAbits 000F5B                 isa$xinst 000000            ?_Config_Clock 0021  
           _VREFCON1bits 000F7C               _OSCCONbits 000FD3           ??_Config_Clock 0021  
          ??_Config_Port 0021  
