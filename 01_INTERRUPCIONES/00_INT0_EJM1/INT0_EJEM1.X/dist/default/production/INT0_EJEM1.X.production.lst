

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Jun 28 14:45:40 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1
    57                           	psect	text45,global,reloc=2,class=CODE,delta=1
    58                           	psect	text46,global,reloc=2,class=CODE,delta=1
    59                           	psect	text47,global,reloc=2,class=CODE,delta=1
    60                           	psect	text48,global,reloc=2,class=CODE,delta=1
    61                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    62                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    63                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    64                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    65                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    66  0000                     
    67                           ; Version 2.35
    68                           ; Generated 05/05/2021 GMT
    69                           ; 
    70                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    71                           ; All rights reserved.
    72                           ; 
    73                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    74                           ; 
    75                           ; Redistribution and use in source and binary forms, with or without modification, are
    76                           ; permitted provided that the following conditions are met:
    77                           ; 
    78                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    79                           ;        conditions and the following disclaimer.
    80                           ; 
    81                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    82                           ;        of conditions and the following disclaimer in the documentation and/or other
    83                           ;        materials provided with the distribution. Publication is not required when
    84                           ;        this file is used in an embedded application.
    85                           ; 
    86                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    87                           ;        software without specific prior written permission.
    88                           ; 
    89                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    90                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    91                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    92                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    93                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    94                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    95                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    96                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    97                           ; 
    98                           ; 
    99                           ; Code-generator required, PIC18F45K50 Definitions
   100                           ; 
   101                           ; SFR Addresses
   102  0000                     _LATE	set	3981
   103  0000                     _LATD	set	3980
   104  0000                     _ANSELAbits	set	3931
   105  0000                     _SLRCON	set	3962
   106  0000                     _LATA	set	3977
   107  0000                     _LATDbits	set	3980
   108  0000                     _TRISA	set	3986
   109  0000                     _LATEbits	set	3981
   110  0000                     _OSCCONbits	set	4051
   111  0000                     _INTCON3bits	set	4080
   112  0000                     _INTCON2bits	set	4081
   113  0000                     _WPUBbits	set	3973
   114  0000                     _ANSELD	set	3934
   115  0000                     _ANSELEbits	set	3935
   116  0000                     _ANSELBbits	set	3932
   117  0000                     _TRISBbits	set	3987
   118  0000                     _TRISD	set	3989
   119  0000                     _TRISEbits	set	3990
   120  0000                     _INTCONbits	set	4082
   121                           
   122                           	psect	smallconst
   123  000800                     __psmallconst:
   124                           	callstack 0
   125  000800  00                 	db	0
   126  000801                     STR_2:
   127  000801  50                 	db	80	;'P'
   128  000802  65                 	db	101	;'e'
   129  000803  72                 	db	114	;'r'
   130  000804  73                 	db	115	;'s'
   131  000805  6F                 	db	111	;'o'
   132  000806  6E                 	db	110	;'n'
   133  000807  61                 	db	97	;'a'
   134  000808  73                 	db	115	;'s'
   135  000809  3A                 	db	58	;':'
   136  00080A  25                 	db	37
   137  00080B  30                 	db	48	;'0'
   138  00080C  33                 	db	51	;'3'
   139  00080D  64                 	db	100	;'d'
   140  00080E  00                 	db	0
   141  00080F                     STR_1:
   142  00080F  41                 	db	65	;'A'
   143  000810  75                 	db	117	;'u'
   144  000811  74                 	db	116	;'t'
   145  000812  6F                 	db	111	;'o'
   146  000813  73                 	db	115	;'s'
   147  000814  3A                 	db	58	;':'
   148  000815  25                 	db	37
   149  000816  30                 	db	48	;'0'
   150  000817  33                 	db	51	;'3'
   151  000818  64                 	db	100	;'d'
   152  000819  00                 	db	0
   153  00081A  00                 	db	0	; dummy byte at the end
   154  0000                     
   155                           ; #config settings
   156                           
   157                           	psect	cinit
   158  002872                     __pcinit:
   159                           	callstack 0
   160  002872                     start_initialization:
   161                           	callstack 0
   162  002872                     __initialization:
   163                           	callstack 0
   164                           
   165                           ; Clear objects allocated to BANK1 (48 bytes)
   166  002872  EE01  F000         	lfsr	0,__pbssBANK1
   167  002876  0E30               	movlw	48
   168  002878                     clear_0:
   169  002878  6AEE               	clrf	postinc0,c
   170  00287A  06E8               	decf	wreg,f,c
   171  00287C  E1FD               	bnz	clear_0
   172                           
   173                           ; Clear objects allocated to BANK0 (26 bytes)
   174  00287E  EE00  F0C8         	lfsr	0,__pbssBANK0
   175  002882  0E1A               	movlw	26
   176  002884                     clear_1:
   177  002884  6AEE               	clrf	postinc0,c
   178  002886  06E8               	decf	wreg,f,c
   179  002888  E1FD               	bnz	clear_1
   180  00288A                     end_of_initialization:
   181                           	callstack 0
   182  00288A                     __end_of__initialization:
   183                           	callstack 0
   184  00288A  905C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   185  00288C  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   186  00288E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   187  002890  6EF8               	movwf	tblptru,c
   188  002892  0100               	movlb	0
   189  002894  EF97  F00E         	goto	_main	;jump to C main() function
   190                           
   191                           	psect	bssBANK0
   192  0000C8                     __pbssBANK0:
   193                           	callstack 0
   194  0000C8                     _nout:
   195                           	callstack 0
   196  0000C8                     	ds	2
   197  0000CA                     _width:
   198                           	callstack 0
   199  0000CA                     	ds	2
   200  0000CC                     _prec:
   201                           	callstack 0
   202  0000CC                     	ds	2
   203  0000CE                     _flags:
   204                           	callstack 0
   205  0000CE                     	ds	2
   206  0000D0                     _personas:
   207                           	callstack 0
   208  0000D0                     	ds	1
   209  0000D1                     _autos:
   210                           	callstack 0
   211  0000D1                     	ds	1
   212  0000D2                     _str_autos:
   213                           	callstack 0
   214  0000D2                     	ds	16
   215                           
   216                           	psect	bssBANK1
   217  000100                     __pbssBANK1:
   218                           	callstack 0
   219  000100                     _dbuf:
   220                           	callstack 0
   221  000100                     	ds	32
   222  000120                     _str_personas:
   223                           	callstack 0
   224  000120                     	ds	16
   225                           
   226                           	psect	cstackBANK1
   227  000130                     __pcstackBANK1:
   228                           	callstack 0
   229  000130                     vfpfcnvrt@ll:
   230                           	callstack 0
   231                           
   232                           ; 8 bytes @ 0x0
   233  000130                     	ds	8
   234  000138                     vfpfcnvrt@done:
   235                           	callstack 0
   236                           
   237                           ; 2 bytes @ 0x8
   238  000138                     	ds	2
   239  00013A                     ?_vfprintf:
   240                           	callstack 0
   241  00013A                     vfprintf@fp:
   242                           	callstack 0
   243                           
   244                           ; 2 bytes @ 0xA
   245  00013A                     	ds	2
   246  00013C                     vfprintf@fmt:
   247                           	callstack 0
   248                           
   249                           ; 2 bytes @ 0xC
   250  00013C                     	ds	2
   251  00013E                     vfprintf@ap:
   252                           	callstack 0
   253                           
   254                           ; 2 bytes @ 0xE
   255  00013E                     	ds	2
   256  000140                     ?_sprintf:
   257                           	callstack 0
   258  000140                     sprintf@s:
   259                           	callstack 0
   260                           
   261                           ; 2 bytes @ 0x10
   262  000140                     	ds	2
   263  000142                     sprintf@fmt:
   264                           	callstack 0
   265                           
   266                           ; 2 bytes @ 0x12
   267  000142                     	ds	4
   268  000146                     sprintf@ap:
   269                           	callstack 0
   270                           
   271                           ; 2 bytes @ 0x16
   272  000146                     	ds	2
   273  000148                     sprintf@f:
   274                           	callstack 0
   275                           
   276                           ; 11 bytes @ 0x18
   277  000148                     	ds	11
   278  000153                     ??_main:
   279                           
   280                           ; 1 bytes @ 0x23
   281  000153                     	ds	2
   282                           
   283                           	psect	cstackBANK0
   284  000060                     __pcstackBANK0:
   285                           	callstack 0
   286  000060                     ?i2_sprintf:
   287                           	callstack 0
   288  000060                     i2sprintf@s:
   289                           	callstack 0
   290                           
   291                           ; 2 bytes @ 0x0
   292  000060                     	ds	2
   293  000062                     i2sprintf@fmt:
   294                           	callstack 0
   295                           
   296                           ; 2 bytes @ 0x2
   297  000062                     	ds	4
   298  000066                     i2sprintf@ap:
   299                           	callstack 0
   300                           
   301                           ; 2 bytes @ 0x6
   302  000066                     	ds	2
   303  000068                     i2sprintf@f:
   304                           	callstack 0
   305                           
   306                           ; 11 bytes @ 0x8
   307  000068                     	ds	11
   308  000073                     ??_ISR_INT0:
   309                           
   310                           ; 1 bytes @ 0x13
   311  000073                     	ds	10
   312  00007D                     ?_strlen:
   313                           	callstack 0
   314  00007D                     ?_isdigit:
   315                           	callstack 0
   316  00007D                     ?_isspace:
   317                           	callstack 0
   318  00007D                     ?___wmul:
   319                           	callstack 0
   320  00007D                     ?___aodiv:
   321                           	callstack 0
   322  00007D                     ?___aomod:
   323                           	callstack 0
   324  00007D                     Lcd_Port@a:
   325                           	callstack 0
   326  00007D                     ___wmul@multiplier:
   327                           	callstack 0
   328  00007D                     isdigit@c:
   329                           	callstack 0
   330  00007D                     isspace@c:
   331                           	callstack 0
   332  00007D                     fputc@c:
   333                           	callstack 0
   334  00007D                     strlen@s:
   335                           	callstack 0
   336  00007D                     ___aodiv@dividend:
   337                           	callstack 0
   338  00007D                     ___aomod@dividend:
   339                           	callstack 0
   340                           
   341                           ; 8 bytes @ 0x1D
   342  00007D                     	ds	1
   343  00007E                     ??_Lcd_Cmd:
   344  00007E                     Lcd_Write_Char@temp:
   345                           	callstack 0
   346                           
   347                           ; 1 bytes @ 0x1E
   348  00007E                     	ds	1
   349  00007F                     ??_isdigit:
   350  00007F                     ??_isspace:
   351  00007F                     Lcd_Cmd@a:
   352                           	callstack 0
   353  00007F                     Lcd_Write_Char@y:
   354                           	callstack 0
   355  00007F                     ___wmul@multiplicand:
   356                           	callstack 0
   357  00007F                     fputc@fp:
   358                           	callstack 0
   359  00007F                     strlen@a:
   360                           	callstack 0
   361                           
   362                           ; 2 bytes @ 0x1F
   363  00007F                     	ds	1
   364  000080                     ??_Lcd_Init:
   365  000080                     Lcd_Set_Cursor@b:
   366                           	callstack 0
   367  000080                     Lcd_Write_Char@a:
   368                           	callstack 0
   369                           
   370                           ; 1 bytes @ 0x20
   371  000080                     	ds	1
   372  000081                     ??_fputc:
   373  000081                     Lcd_Set_Cursor@a:
   374                           	callstack 0
   375  000081                     Lcd_Write_String@a:
   376                           	callstack 0
   377  000081                     ___wmul@product:
   378                           	callstack 0
   379                           
   380                           ; 2 bytes @ 0x21
   381  000081                     	ds	1
   382  000082                     Lcd_Set_Cursor@z:
   383                           	callstack 0
   384                           
   385                           ; 1 bytes @ 0x22
   386  000082                     	ds	1
   387  000083                     Lcd_Set_Cursor@y:
   388                           	callstack 0
   389  000083                     _isspace$1114:
   390                           	callstack 0
   391  000083                     Lcd_Write_String@i:
   392                           	callstack 0
   393                           
   394                           ; 2 bytes @ 0x23
   395  000083                     	ds	1
   396  000084                     ?_atoi:
   397                           	callstack 0
   398  000084                     Lcd_Set_Cursor@temp:
   399                           	callstack 0
   400  000084                     atoi@s:
   401                           	callstack 0
   402                           
   403                           ; 2 bytes @ 0x24
   404  000084                     	ds	1
   405  000085                     ___aodiv@divisor:
   406                           	callstack 0
   407  000085                     ___aomod@divisor:
   408                           	callstack 0
   409                           
   410                           ; 8 bytes @ 0x25
   411  000085                     	ds	1
   412  000086                     ??_atoi:
   413  000086                     fputs@s:
   414                           	callstack 0
   415                           
   416                           ; 2 bytes @ 0x26
   417  000086                     	ds	2
   418  000088                     fputs@fp:
   419                           	callstack 0
   420                           
   421                           ; 2 bytes @ 0x28
   422  000088                     	ds	2
   423  00008A                     fputs@c:
   424                           	callstack 0
   425  00008A                     atoi@neg:
   426                           	callstack 0
   427                           
   428                           ; 2 bytes @ 0x2A
   429  00008A                     	ds	1
   430  00008B                     fputs@i:
   431                           	callstack 0
   432                           
   433                           ; 2 bytes @ 0x2B
   434  00008B                     	ds	1
   435  00008C                     atoi@n:
   436                           	callstack 0
   437                           
   438                           ; 2 bytes @ 0x2C
   439  00008C                     	ds	1
   440  00008D                     ?_pad:
   441                           	callstack 0
   442  00008D                     ___aodiv@counter:
   443                           	callstack 0
   444  00008D                     ___aomod@counter:
   445                           	callstack 0
   446  00008D                     pad@fp:
   447                           	callstack 0
   448                           
   449                           ; 2 bytes @ 0x2D
   450  00008D                     	ds	1
   451  00008E                     ___aodiv@sign:
   452                           	callstack 0
   453  00008E                     ___aomod@sign:
   454                           	callstack 0
   455                           
   456                           ; 1 bytes @ 0x2E
   457  00008E                     	ds	1
   458  00008F                     ?_abs:
   459                           	callstack 0
   460  00008F                     pad@buf:
   461                           	callstack 0
   462  00008F                     abs@a:
   463                           	callstack 0
   464  00008F                     ___aodiv@quotient:
   465                           	callstack 0
   466                           
   467                           ; 8 bytes @ 0x2F
   468  00008F                     	ds	2
   469  000091                     ??_abs:
   470  000091                     pad@p:
   471                           	callstack 0
   472                           
   473                           ; 2 bytes @ 0x31
   474  000091                     	ds	2
   475  000093                     ??_pad:
   476                           
   477                           ; 1 bytes @ 0x33
   478  000093                     	ds	1
   479  000094                     pad@i:
   480                           	callstack 0
   481                           
   482                           ; 2 bytes @ 0x34
   483  000094                     	ds	2
   484  000096                     pad@w:
   485                           	callstack 0
   486                           
   487                           ; 2 bytes @ 0x36
   488  000096                     	ds	2
   489  000098                     ?_dtoa:
   490                           	callstack 0
   491  000098                     dtoa@fp:
   492                           	callstack 0
   493                           
   494                           ; 2 bytes @ 0x38
   495  000098                     	ds	2
   496  00009A                     dtoa@d:
   497                           	callstack 0
   498                           
   499                           ; 8 bytes @ 0x3A
   500  00009A                     	ds	8
   501  0000A2                     ??_dtoa:
   502                           
   503                           ; 1 bytes @ 0x42
   504  0000A2                     	ds	8
   505  0000AA                     _dtoa$1065:
   506                           	callstack 0
   507                           
   508                           ; 2 bytes @ 0x4A
   509  0000AA                     	ds	2
   510  0000AC                     dtoa@p:
   511                           	callstack 0
   512                           
   513                           ; 2 bytes @ 0x4C
   514  0000AC                     	ds	2
   515  0000AE                     dtoa@w:
   516                           	callstack 0
   517                           
   518                           ; 2 bytes @ 0x4E
   519  0000AE                     	ds	2
   520  0000B0                     dtoa@s:
   521                           	callstack 0
   522                           
   523                           ; 2 bytes @ 0x50
   524  0000B0                     	ds	2
   525  0000B2                     dtoa@n:
   526                           	callstack 0
   527                           
   528                           ; 8 bytes @ 0x52
   529  0000B2                     	ds	8
   530  0000BA                     dtoa@i:
   531                           	callstack 0
   532                           
   533                           ; 2 bytes @ 0x5A
   534  0000BA                     	ds	2
   535  0000BC                     ?_vfpfcnvrt:
   536                           	callstack 0
   537  0000BC                     vfpfcnvrt@fp:
   538                           	callstack 0
   539                           
   540                           ; 2 bytes @ 0x5C
   541  0000BC                     	ds	2
   542  0000BE                     vfpfcnvrt@fmt:
   543                           	callstack 0
   544                           
   545                           ; 2 bytes @ 0x5E
   546  0000BE                     	ds	2
   547  0000C0                     vfpfcnvrt@ap:
   548                           	callstack 0
   549                           
   550                           ; 2 bytes @ 0x60
   551  0000C0                     	ds	2
   552  0000C2                     ??_vfpfcnvrt:
   553                           
   554                           ; 1 bytes @ 0x62
   555  0000C2                     	ds	4
   556  0000C6                     vfprintf@cfmt:
   557                           	callstack 0
   558                           
   559                           ; 2 bytes @ 0x66
   560  0000C6                     	ds	2
   561  0000C8                     
   562                           ; 1 bytes @ 0x68
   563                           
   564                           	psect	cstackCOMRAM
   565  000001                     __pcstackCOMRAM:
   566                           	callstack 0
   567  000001                     ?i2___wmul:
   568                           	callstack 0
   569  000001                     ?i2_strlen:
   570                           	callstack 0
   571  000001                     ?i2___aodiv:
   572                           	callstack 0
   573  000001                     ?i2___aomod:
   574                           	callstack 0
   575  000001                     i2Lcd_Port@a:
   576                           	callstack 0
   577  000001                     i2___wmul@multiplier:
   578                           	callstack 0
   579  000001                     i2isdigit@c:
   580                           	callstack 0
   581  000001                     i2isspace@c:
   582                           	callstack 0
   583  000001                     i2fputc@c:
   584                           	callstack 0
   585  000001                     i2strlen@s:
   586                           	callstack 0
   587  000001                     i2___aodiv@dividend:
   588                           	callstack 0
   589  000001                     i2___aomod@dividend:
   590                           	callstack 0
   591                           
   592                           ; 8 bytes @ 0x0
   593  000001                     	ds	1
   594  000002                     ??i2_Lcd_Cmd:
   595  000002                     i2Lcd_Write_Char@temp:
   596                           	callstack 0
   597                           
   598                           ; 1 bytes @ 0x1
   599  000002                     	ds	1
   600  000003                     ??i2_isspace:
   601  000003                     i2Lcd_Cmd@a:
   602                           	callstack 0
   603  000003                     i2Lcd_Write_Char@y:
   604                           	callstack 0
   605  000003                     i2___wmul@multiplicand:
   606                           	callstack 0
   607  000003                     i2fputc@fp:
   608                           	callstack 0
   609  000003                     i2strlen@a:
   610                           	callstack 0
   611                           
   612                           ; 2 bytes @ 0x2
   613  000003                     	ds	1
   614  000004                     i2Lcd_Set_Cursor@b:
   615                           	callstack 0
   616  000004                     i2Lcd_Write_Char@a:
   617                           	callstack 0
   618                           
   619                           ; 1 bytes @ 0x3
   620  000004                     	ds	1
   621  000005                     ??i2_fputc:
   622  000005                     i2Lcd_Set_Cursor@a:
   623                           	callstack 0
   624  000005                     i2Lcd_Write_String@a:
   625                           	callstack 0
   626  000005                     i2___wmul@product:
   627                           	callstack 0
   628                           
   629                           ; 2 bytes @ 0x4
   630  000005                     	ds	1
   631  000006                     i2Lcd_Set_Cursor@z:
   632                           	callstack 0
   633                           
   634                           ; 1 bytes @ 0x5
   635  000006                     	ds	1
   636  000007                     ?i2_atoi:
   637                           	callstack 0
   638  000007                     i2Lcd_Set_Cursor@y:
   639                           	callstack 0
   640  000007                     i2Lcd_Write_String@i:
   641                           	callstack 0
   642  000007                     i2atoi@s:
   643                           	callstack 0
   644                           
   645                           ; 2 bytes @ 0x6
   646  000007                     	ds	1
   647  000008                     i2Lcd_Set_Cursor@temp:
   648                           	callstack 0
   649                           
   650                           ; 1 bytes @ 0x7
   651  000008                     	ds	1
   652  000009                     ??i2_atoi:
   653  000009                     i2___aodiv@divisor:
   654                           	callstack 0
   655  000009                     i2___aomod@divisor:
   656                           	callstack 0
   657                           
   658                           ; 8 bytes @ 0x8
   659  000009                     	ds	1
   660  00000A                     i2fputs@s:
   661                           	callstack 0
   662                           
   663                           ; 2 bytes @ 0x9
   664  00000A                     	ds	2
   665  00000C                     i2fputs@fp:
   666                           	callstack 0
   667                           
   668                           ; 2 bytes @ 0xB
   669  00000C                     	ds	1
   670  00000D                     i2atoi@neg:
   671                           	callstack 0
   672                           
   673                           ; 2 bytes @ 0xC
   674  00000D                     	ds	1
   675  00000E                     i2fputs@c:
   676                           	callstack 0
   677                           
   678                           ; 1 bytes @ 0xD
   679  00000E                     	ds	1
   680  00000F                     i2atoi@n:
   681                           	callstack 0
   682  00000F                     i2fputs@i:
   683                           	callstack 0
   684                           
   685                           ; 2 bytes @ 0xE
   686  00000F                     	ds	2
   687  000011                     ?i2_pad:
   688                           	callstack 0
   689  000011                     i2___aodiv@counter:
   690                           	callstack 0
   691  000011                     i2___aomod@counter:
   692                           	callstack 0
   693  000011                     i2pad@fp:
   694                           	callstack 0
   695                           
   696                           ; 2 bytes @ 0x10
   697  000011                     	ds	1
   698  000012                     i2___aodiv@sign:
   699                           	callstack 0
   700  000012                     i2___aomod@sign:
   701                           	callstack 0
   702                           
   703                           ; 1 bytes @ 0x11
   704  000012                     	ds	1
   705  000013                     ?i2_abs:
   706                           	callstack 0
   707  000013                     i2pad@buf:
   708                           	callstack 0
   709  000013                     i2abs@a:
   710                           	callstack 0
   711  000013                     i2___aodiv@quotient:
   712                           	callstack 0
   713                           
   714                           ; 8 bytes @ 0x12
   715  000013                     	ds	2
   716  000015                     ??i2_abs:
   717  000015                     i2pad@p:
   718                           	callstack 0
   719                           
   720                           ; 2 bytes @ 0x14
   721  000015                     	ds	2
   722  000017                     ??i2_pad:
   723                           
   724                           ; 1 bytes @ 0x16
   725  000017                     	ds	1
   726  000018                     i2pad@i:
   727                           	callstack 0
   728                           
   729                           ; 2 bytes @ 0x17
   730  000018                     	ds	2
   731  00001A                     i2pad@w:
   732                           	callstack 0
   733                           
   734                           ; 2 bytes @ 0x19
   735  00001A                     	ds	2
   736  00001C                     ?i2_dtoa:
   737                           	callstack 0
   738  00001C                     i2dtoa@fp:
   739                           	callstack 0
   740                           
   741                           ; 2 bytes @ 0x1B
   742  00001C                     	ds	2
   743  00001E                     i2dtoa@d:
   744                           	callstack 0
   745                           
   746                           ; 8 bytes @ 0x1D
   747  00001E                     	ds	8
   748  000026                     ??i2_dtoa:
   749                           
   750                           ; 1 bytes @ 0x25
   751  000026                     	ds	8
   752  00002E                     i2_dtoa$1065:
   753                           	callstack 0
   754                           
   755                           ; 2 bytes @ 0x2D
   756  00002E                     	ds	2
   757  000030                     i2dtoa@p:
   758                           	callstack 0
   759                           
   760                           ; 2 bytes @ 0x2F
   761  000030                     	ds	2
   762  000032                     i2dtoa@w:
   763                           	callstack 0
   764                           
   765                           ; 2 bytes @ 0x31
   766  000032                     	ds	2
   767  000034                     i2dtoa@s:
   768                           	callstack 0
   769                           
   770                           ; 2 bytes @ 0x33
   771  000034                     	ds	2
   772  000036                     i2dtoa@n:
   773                           	callstack 0
   774                           
   775                           ; 8 bytes @ 0x35
   776  000036                     	ds	8
   777  00003E                     i2dtoa@i:
   778                           	callstack 0
   779                           
   780                           ; 2 bytes @ 0x3D
   781  00003E                     	ds	2
   782  000040                     ?i2_vfpfcnvrt:
   783                           	callstack 0
   784  000040                     i2vfpfcnvrt@fp:
   785                           	callstack 0
   786                           
   787                           ; 2 bytes @ 0x3F
   788  000040                     	ds	2
   789  000042                     i2vfpfcnvrt@fmt:
   790                           	callstack 0
   791                           
   792                           ; 2 bytes @ 0x41
   793  000042                     	ds	2
   794  000044                     i2vfpfcnvrt@ap:
   795                           	callstack 0
   796                           
   797                           ; 2 bytes @ 0x43
   798  000044                     	ds	2
   799  000046                     ??i2_vfpfcnvrt:
   800                           
   801                           ; 1 bytes @ 0x45
   802  000046                     	ds	4
   803  00004A                     i2vfpfcnvrt@ll:
   804                           	callstack 0
   805                           
   806                           ; 8 bytes @ 0x49
   807  00004A                     	ds	8
   808  000052                     i2vfpfcnvrt@done:
   809                           	callstack 0
   810                           
   811                           ; 2 bytes @ 0x51
   812  000052                     	ds	2
   813  000054                     ?i2_vfprintf:
   814                           	callstack 0
   815  000054                     i2vfprintf@fp:
   816                           	callstack 0
   817                           
   818                           ; 2 bytes @ 0x53
   819  000054                     	ds	2
   820  000056                     i2vfprintf@fmt:
   821                           	callstack 0
   822                           
   823                           ; 2 bytes @ 0x55
   824  000056                     	ds	2
   825  000058                     i2vfprintf@ap:
   826                           	callstack 0
   827                           
   828                           ; 2 bytes @ 0x57
   829  000058                     	ds	2
   830  00005A                     i2vfprintf@cfmt:
   831                           	callstack 0
   832                           
   833                           ; 2 bytes @ 0x59
   834  00005A                     	ds	2
   835  00005C                     
   836                           ; 1 bytes @ 0x5B
   837 ;;
   838 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   839 ;;
   840 ;; *************** function _main *****************
   841 ;; Defined at:
   842 ;;		line 28 in file "main.c"
   843 ;; Parameters:    Size  Location     Type
   844 ;;		None
   845 ;; Auto vars:     Size  Location     Type
   846 ;;		None
   847 ;; Return value:  Size  Location     Type
   848 ;;                  1    wreg      void 
   849 ;; Registers used:
   850 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   851 ;; Tracked objects:
   852 ;;		On entry : 0/0
   853 ;;		On exit  : 0/0
   854 ;;		Unchanged: 0/0
   855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   856 ;;      Params:         0       0       0       0       0       0       0       0       0
   857 ;;      Locals:         0       0       0       0       0       0       0       0       0
   858 ;;      Temps:          0       0       2       0       0       0       0       0       0
   859 ;;      Totals:         0       0       2       0       0       0       0       0       0
   860 ;;Total ram usage:        2 bytes
   861 ;; Hardware stack levels required when called: 17
   862 ;; This function calls:
   863 ;;		_Config_Clock
   864 ;;		_Config_Interrupt
   865 ;;		_Config_Port
   866 ;;		_Lcd_Clear
   867 ;;		_Lcd_Init
   868 ;;		_Lcd_Set_Cursor
   869 ;;		_Lcd_Write_String
   870 ;;		_sprintf
   871 ;; This function is called by:
   872 ;;		Startup code after reset
   873 ;; This function uses a non-reentrant model
   874 ;;
   875                           
   876                           	psect	text0
   877  001D2E                     __ptext0:
   878                           	callstack 0
   879  001D2E                     _main:
   880                           	callstack 14
   881  001D2E                     
   882                           ;main.c: 29:     Config_Clock();
   883  001D2E  EC95  F014         	call	_Config_Clock	;wreg free
   884                           
   885                           ;main.c: 30:     Config_Port();
   886  001D32  EC96  F013         	call	_Config_Port	;wreg free
   887  001D36                     
   888                           ;main.c: 31:     Config_Interrupt();
   889  001D36  EC82  F014         	call	_Config_Interrupt	;wreg free
   890  001D3A                     
   891                           ;main.c: 32:     Lcd_Init();
   892  001D3A  ECAA  F010         	call	_Lcd_Init	;wreg free
   893  001D3E                     
   894                           ;main.c: 33:     Lcd_Clear();
   895  001D3E  EC8E  F014         	call	_Lcd_Clear	;wreg free
   896  001D42                     
   897                           ;main.c: 34:     sprintf(str_autos,"Autos:%03d",autos);
   898  001D42  0ED2               	movlw	low _str_autos
   899  001D44  0101               	movlb	1	; () banked
   900  001D46  6F40               	movwf	sprintf@s& (0+255),b
   901  001D48  0E00               	movlw	high _str_autos
   902  001D4A  6F41               	movwf	(sprintf@s+1)& (0+255),b
   903  001D4C  0E0F               	movlw	low STR_1
   904  001D4E  6F42               	movwf	sprintf@fmt& (0+255),b
   905  001D50  0E08               	movlw	high STR_1
   906  001D52  6F43               	movwf	(sprintf@fmt+1)& (0+255),b
   907  001D54  C0D1  F144         	movff	_autos,?_sprintf+4
   908  001D58  6B45               	clrf	(?_sprintf+5)& (0+255),b
   909  001D5A  EC3A  F012         	call	_sprintf	;wreg free
   910  001D5E                     
   911                           ;main.c: 35:     sprintf(str_personas,"Personas:%03d",personas);
   912  001D5E  0E20               	movlw	low _str_personas
   913  001D60  0101               	movlb	1	; () banked
   914  001D62  6F40               	movwf	sprintf@s& (0+255),b
   915  001D64  0E01               	movlw	high _str_personas
   916  001D66  6F41               	movwf	(sprintf@s+1)& (0+255),b
   917  001D68  0E01               	movlw	low STR_2
   918  001D6A  6F42               	movwf	sprintf@fmt& (0+255),b
   919  001D6C  0E08               	movlw	high STR_2
   920  001D6E  6F43               	movwf	(sprintf@fmt+1)& (0+255),b
   921  001D70  C0D0  F144         	movff	_personas,?_sprintf+4
   922  001D74  6B45               	clrf	(?_sprintf+5)& (0+255),b
   923  001D76  EC3A  F012         	call	_sprintf	;wreg free
   924  001D7A                     
   925                           ;main.c: 36:     Lcd_Set_Cursor(1,1);
   926  001D7A  0E01               	movlw	1
   927  001D7C  0100               	movlb	0	; () banked
   928  001D7E  6F80               	movwf	Lcd_Set_Cursor@b& (0+255),b
   929  001D80  0E01               	movlw	1
   930  001D82  ECE6  F010         	call	_Lcd_Set_Cursor
   931  001D86                     
   932                           ;main.c: 37:     Lcd_Write_String(str_autos);
   933  001D86  0ED2               	movlw	low _str_autos
   934  001D88  0100               	movlb	0	; () banked
   935  001D8A  6F81               	movwf	Lcd_Write_String@a& (0+255),b
   936  001D8C  0E00               	movlw	high _str_autos
   937  001D8E  6F82               	movwf	(Lcd_Write_String@a+1)& (0+255),b
   938  001D90  ECB0  F012         	call	_Lcd_Write_String	;wreg free
   939  001D94                     
   940                           ;main.c: 38:     Lcd_Set_Cursor(2,1);
   941  001D94  0E01               	movlw	1
   942  001D96  0100               	movlb	0	; () banked
   943  001D98  6F80               	movwf	Lcd_Set_Cursor@b& (0+255),b
   944  001D9A  0E02               	movlw	2
   945  001D9C  ECE6  F010         	call	_Lcd_Set_Cursor
   946  001DA0                     
   947                           ;main.c: 39:     Lcd_Write_String(str_personas);
   948  001DA0  0E20               	movlw	low _str_personas
   949  001DA2  0100               	movlb	0	; () banked
   950  001DA4  6F81               	movwf	Lcd_Write_String@a& (0+255),b
   951  001DA6  0E01               	movlw	high _str_personas
   952  001DA8  6F82               	movwf	(Lcd_Write_String@a+1)& (0+255),b
   953  001DAA  ECB0  F012         	call	_Lcd_Write_String	;wreg free
   954  001DAE                     l112:
   955                           
   956                           ;main.c: 41:         LATA = 0b00001100;
   957  001DAE  0E0C               	movlw	12
   958  001DB0  6E89               	movwf	137,c	;volatile
   959  001DB2                     
   960                           ;main.c: 42:         _delay((unsigned long)((3000)*(16000000UL/4000.0)));
   961  001DB2  0E3D               	movlw	61
   962  001DB4  0101               	movlb	1	; () banked
   963  001DB6  6F54               	movwf	(??_main+1)& (0+255),b
   964  001DB8  0EE1               	movlw	225
   965  001DBA  6F53               	movwf	??_main& (0+255),b
   966  001DBC  0E3F               	movlw	63
   967  001DBE                     u3167:
   968  001DBE  2EE8               	decfsz	wreg,f,c
   969  001DC0  D7FE               	bra	u3167
   970  001DC2  2F53               	decfsz	??_main& (0+255),f,b
   971  001DC4  D7FC               	bra	u3167
   972  001DC6  2F54               	decfsz	(??_main+1)& (0+255),f,b
   973  001DC8  D7FA               	bra	u3167
   974  001DCA  D000               	nop2	
   975  001DCC                     
   976                           ;main.c: 44:         LATA = 0b00010010;
   977  001DCC  0E12               	movlw	18
   978  001DCE  6E89               	movwf	137,c	;volatile
   979                           
   980                           ;main.c: 45:         _delay((unsigned long)((3000)*(16000000UL/4000.0)));
   981  001DD0  0E3D               	movlw	61
   982  001DD2  0101               	movlb	1	; () banked
   983  001DD4  6F54               	movwf	(??_main+1)& (0+255),b
   984  001DD6  0EE1               	movlw	225
   985  001DD8  6F53               	movwf	??_main& (0+255),b
   986  001DDA  0E3F               	movlw	63
   987  001DDC                     u3177:
   988  001DDC  2EE8               	decfsz	wreg,f,c
   989  001DDE  D7FE               	bra	u3177
   990  001DE0  2F53               	decfsz	??_main& (0+255),f,b
   991  001DE2  D7FC               	bra	u3177
   992  001DE4  2F54               	decfsz	(??_main+1)& (0+255),f,b
   993  001DE6  D7FA               	bra	u3177
   994  001DE8  D000               	nop2	
   995  001DEA                     
   996                           ;main.c: 47:          LATA = 0b00100001;
   997  001DEA  0E21               	movlw	33
   998  001DEC  6E89               	movwf	137,c	;volatile
   999  001DEE                     
  1000                           ;main.c: 48:         _delay((unsigned long)((3000)*(16000000UL/4000.0)));
  1001  001DEE  0E3D               	movlw	61
  1002  001DF0  0101               	movlb	1	; () banked
  1003  001DF2  6F54               	movwf	(??_main+1)& (0+255),b
  1004  001DF4  0EE1               	movlw	225
  1005  001DF6  6F53               	movwf	??_main& (0+255),b
  1006  001DF8  0E3F               	movlw	63
  1007  001DFA                     u3187:
  1008  001DFA  2EE8               	decfsz	wreg,f,c
  1009  001DFC  D7FE               	bra	u3187
  1010  001DFE  2F53               	decfsz	??_main& (0+255),f,b
  1011  001E00  D7FC               	bra	u3187
  1012  001E02  2F54               	decfsz	(??_main+1)& (0+255),f,b
  1013  001E04  D7FA               	bra	u3187
  1014  001E06  D000               	nop2	
  1015                           
  1016                           ;main.c: 50:          LATA = 0b00010010;
  1017  001E08  0E12               	movlw	18
  1018  001E0A  6E89               	movwf	137,c	;volatile
  1019  001E0C                     
  1020                           ;main.c: 51:         _delay((unsigned long)((3000)*(16000000UL/4000.0)));
  1021  001E0C  0E3D               	movlw	61
  1022  001E0E  0101               	movlb	1	; () banked
  1023  001E10  6F54               	movwf	(??_main+1)& (0+255),b
  1024  001E12  0EE1               	movlw	225
  1025  001E14  6F53               	movwf	??_main& (0+255),b
  1026  001E16  0E3F               	movlw	63
  1027  001E18                     u3197:
  1028  001E18  2EE8               	decfsz	wreg,f,c
  1029  001E1A  D7FE               	bra	u3197
  1030  001E1C  2F53               	decfsz	??_main& (0+255),f,b
  1031  001E1E  D7FC               	bra	u3197
  1032  001E20  2F54               	decfsz	(??_main+1)& (0+255),f,b
  1033  001E22  D7FA               	bra	u3197
  1034  001E24  D000               	nop2	
  1035  001E26  EFD7  F00E         	goto	l112
  1036  001E2A  EF7F  F000         	goto	start
  1037  001E2E                     __end_of_main:
  1038                           	callstack 0
  1039                           
  1040 ;; *************** function _sprintf *****************
  1041 ;; Defined at:
  1042 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_sprintf.c"
  1043 ;; Parameters:    Size  Location     Type
  1044 ;;  s               2   16[BANK1 ] PTR unsigned char 
  1045 ;;		 -> str_personas(16), str_autos(16), 
  1046 ;;  fmt             2   18[BANK1 ] PTR const unsigned char 
  1047 ;;		 -> STR_4(14), STR_3(11), STR_2(14), STR_1(11), 
  1048 ;; Auto vars:     Size  Location     Type
  1049 ;;  f              11   24[BANK1 ] struct _IO_FILE
  1050 ;;  ap              2   22[BANK1 ] PTR void [1]
  1051 ;;		 -> ?_sprintf(2), 
  1052 ;;  ret             2    0        int 
  1053 ;; Return value:  Size  Location     Type
  1054 ;;                  2   16[BANK1 ] int 
  1055 ;; Registers used:
  1056 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1057 ;; Tracked objects:
  1058 ;;		On entry : 0/0
  1059 ;;		On exit  : 0/0
  1060 ;;		Unchanged: 0/0
  1061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1062 ;;      Params:         0       0       6       0       0       0       0       0       0
  1063 ;;      Locals:         0       0      13       0       0       0       0       0       0
  1064 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1065 ;;      Totals:         0       0      19       0       0       0       0       0       0
  1066 ;;Total ram usage:       19 bytes
  1067 ;; Hardware stack levels used: 1
  1068 ;; Hardware stack levels required when called: 16
  1069 ;; This function calls:
  1070 ;;		_vfprintf
  1071 ;; This function is called by:
  1072 ;;		_main
  1073 ;; This function uses a non-reentrant model
  1074 ;;
  1075                           
  1076                           	psect	text1
  1077  002474                     __ptext1:
  1078                           	callstack 0
  1079  002474                     _sprintf:
  1080                           	callstack 14
  1081  002474  0E44               	movlw	low (?_sprintf+4)
  1082  002476  0101               	movlb	1	; () banked
  1083  002478  6F46               	movwf	sprintf@ap& (0+255),b
  1084  00247A  0E01               	movlw	high (?_sprintf+4)
  1085  00247C  6F47               	movwf	(sprintf@ap+1)& (0+255),b
  1086  00247E  C140  F148         	movff	sprintf@s,sprintf@f
  1087  002482  C141  F149         	movff	sprintf@s+1,sprintf@f+1
  1088  002486                     
  1089                           ; BSR set to: 1
  1090  002486  0E00               	movlw	0
  1091  002488  6F4C               	movwf	(sprintf@f+4)& (0+255),b
  1092  00248A  0E00               	movlw	0
  1093  00248C  6F4B               	movwf	(sprintf@f+3)& (0+255),b
  1094  00248E                     
  1095                           ; BSR set to: 1
  1096  00248E  0E00               	movlw	0
  1097  002490  6F52               	movwf	(sprintf@f+10)& (0+255),b
  1098  002492  0E00               	movlw	0
  1099  002494  6F51               	movwf	(sprintf@f+9)& (0+255),b
  1100  002496                     
  1101                           ; BSR set to: 1
  1102  002496  0E48               	movlw	low sprintf@f
  1103  002498  6F3A               	movwf	vfprintf@fp& (0+255),b
  1104  00249A  0E01               	movlw	high sprintf@f
  1105  00249C  6F3B               	movwf	(vfprintf@fp+1)& (0+255),b
  1106  00249E  C142  F13C         	movff	sprintf@fmt,vfprintf@fmt
  1107  0024A2  C143  F13D         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1108  0024A6  0E46               	movlw	low sprintf@ap
  1109  0024A8  6F3E               	movwf	vfprintf@ap& (0+255),b
  1110  0024AA  0E01               	movlw	high sprintf@ap
  1111  0024AC  6F3F               	movwf	(vfprintf@ap+1)& (0+255),b
  1112  0024AE  EC50  F011         	call	_vfprintf	;wreg free
  1113  0024B2  0101               	movlb	1	; () banked
  1114  0024B4  514B               	movf	(sprintf@f+3)& (0+255),w,b
  1115  0024B6  2540               	addwf	sprintf@s& (0+255),w,b
  1116  0024B8  6ED9               	movwf	fsr2l,c
  1117  0024BA  514C               	movf	(sprintf@f+4)& (0+255),w,b
  1118  0024BC  2141               	addwfc	(sprintf@s+1)& (0+255),w,b
  1119  0024BE  6EDA               	movwf	fsr2h,c
  1120  0024C0  0E00               	movlw	0
  1121  0024C2  6EDF               	movwf	indf2,c
  1122  0024C4                     
  1123                           ; BSR set to: 1
  1124  0024C4  0012               	return		;funcret
  1125  0024C6                     __end_of_sprintf:
  1126                           	callstack 0
  1127                           
  1128 ;; *************** function _vfprintf *****************
  1129 ;; Defined at:
  1130 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1131 ;; Parameters:    Size  Location     Type
  1132 ;;  fp              2   10[BANK1 ] PTR struct _IO_FILE
  1133 ;;		 -> sprintf@f(11), 
  1134 ;;  fmt             2   12[BANK1 ] PTR const unsigned char 
  1135 ;;		 -> STR_4(14), STR_3(11), STR_2(14), STR_1(11), 
  1136 ;;  ap              2   14[BANK1 ] PTR PTR void 
  1137 ;;		 -> sprintf@ap(2), 
  1138 ;; Auto vars:     Size  Location     Type
  1139 ;;  cfmt            2  102[BANK0 ] PTR unsigned char 
  1140 ;;		 -> STR_4(14), STR_3(11), STR_2(14), STR_1(11), 
  1141 ;; Return value:  Size  Location     Type
  1142 ;;                  2   10[BANK1 ] int 
  1143 ;; Registers used:
  1144 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1145 ;; Tracked objects:
  1146 ;;		On entry : 0/0
  1147 ;;		On exit  : 0/0
  1148 ;;		Unchanged: 0/0
  1149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1150 ;;      Params:         0       0       6       0       0       0       0       0       0
  1151 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1152 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1153 ;;      Totals:         0       2       6       0       0       0       0       0       0
  1154 ;;Total ram usage:        8 bytes
  1155 ;; Hardware stack levels used: 1
  1156 ;; Hardware stack levels required when called: 15
  1157 ;; This function calls:
  1158 ;;		_vfpfcnvrt
  1159 ;; This function is called by:
  1160 ;;		_sprintf
  1161 ;; This function uses a non-reentrant model
  1162 ;;
  1163                           
  1164                           	psect	text2
  1165  0022A0                     __ptext2:
  1166                           	callstack 0
  1167  0022A0                     _vfprintf:
  1168                           	callstack 14
  1169  0022A0                     
  1170                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1171  0022A0  C13C  F0C6         	movff	vfprintf@fmt,vfprintf@cfmt
  1172  0022A4  C13D  F0C7         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1173  0022A8                     
  1174                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1175  0022A8  0E00               	movlw	0
  1176  0022AA  0100               	movlb	0	; () banked
  1177  0022AC  6FC9               	movwf	(_nout+1)& (0+255),b
  1178  0022AE  0E00               	movlw	0
  1179  0022B0  6FC8               	movwf	_nout& (0+255),b
  1180                           
  1181                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1182  0022B2  EF6E  F011         	goto	l3558
  1183  0022B6                     l3556:
  1184                           
  1185                           ; BSR set to: 0
  1186                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1187  0022B6  C13A  F0BC         	movff	vfprintf@fp,vfpfcnvrt@fp
  1188  0022BA  C13B  F0BD         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1189  0022BE  0EC6               	movlw	low vfprintf@cfmt
  1190  0022C0  6FBE               	movwf	vfpfcnvrt@fmt& (0+255),b
  1191  0022C2  0E00               	movlw	high vfprintf@cfmt
  1192  0022C4  6FBF               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1193  0022C6  C13E  F0C0         	movff	vfprintf@ap,vfpfcnvrt@ap
  1194  0022CA  C13F  F0C1         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1195  0022CE  EC0E  F004         	call	_vfpfcnvrt	;wreg free
  1196  0022D2  0100               	movlb	0	; () banked
  1197  0022D4  51BC               	movf	?_vfpfcnvrt& (0+255),w,b
  1198  0022D6  27C8               	addwf	_nout& (0+255),f,b
  1199  0022D8  51BD               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1200  0022DA  23C9               	addwfc	(_nout+1)& (0+255),f,b
  1201  0022DC                     l3558:
  1202                           
  1203                           ; BSR set to: 0
  1204                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1205  0022DC  C0C6  FFF6         	movff	vfprintf@cfmt,tblptrl
  1206  0022E0  C0C7  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1207  0022E4                     	if	0	;tblptru may be non-zero
  1208  0022E4                     	endif
  1209  0022E4                     	if	0	;tblptru may be non-zero
  1210  0022E4                     	endif
  1211  0022E4  0008               	tblrd		*
  1212  0022E6  50F5               	movf	tablat,w,c
  1213  0022E8  0900               	iorlw	0
  1214  0022EA  A4D8               	btfss	status,2,c
  1215  0022EC  EF7A  F011         	goto	u3151
  1216  0022F0  EF7C  F011         	goto	u3150
  1217  0022F4                     u3151:
  1218  0022F4  EF5B  F011         	goto	l3556
  1219  0022F8                     u3150:
  1220  0022F8                     
  1221                           ; BSR set to: 0
  1222                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1223  0022F8  C0C8  F13A         	movff	_nout,?_vfprintf
  1224  0022FC  C0C9  F13B         	movff	_nout+1,?_vfprintf+1
  1225  002300                     
  1226                           ; BSR set to: 0
  1227  002300  0012               	return		;funcret
  1228  002302                     __end_of_vfprintf:
  1229                           	callstack 0
  1230                           
  1231 ;; *************** function _vfpfcnvrt *****************
  1232 ;; Defined at:
  1233 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1234 ;; Parameters:    Size  Location     Type
  1235 ;;  fp              2   92[BANK0 ] PTR struct _IO_FILE
  1236 ;;		 -> sprintf@f(11), 
  1237 ;;  fmt             2   94[BANK0 ] PTR PTR unsigned char 
  1238 ;;		 -> vfprintf@cfmt(2), 
  1239 ;;  ap              2   96[BANK0 ] PTR PTR void 
  1240 ;;		 -> sprintf@ap(2), 
  1241 ;; Auto vars:     Size  Location     Type
  1242 ;;  ll              8    0[BANK1 ] long long 
  1243 ;;  llu             8    0        unsigned long long 
  1244 ;;  f               4    0        unsigned long long 
  1245 ;;  vp              3    0        PTR void 
  1246 ;;  ct              3    0        unsigned char [3]
  1247 ;;  cp              3    0        PTR unsigned char 
  1248 ;;  done            2    8[BANK1 ] int 
  1249 ;;  i               2    0        int 
  1250 ;;  c               1    0        unsigned char 
  1251 ;; Return value:  Size  Location     Type
  1252 ;;                  2   92[BANK0 ] int 
  1253 ;; Registers used:
  1254 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1255 ;; Tracked objects:
  1256 ;;		On entry : 0/0
  1257 ;;		On exit  : 0/0
  1258 ;;		Unchanged: 0/0
  1259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1260 ;;      Params:         0       6       0       0       0       0       0       0       0
  1261 ;;      Locals:         0       0      10       0       0       0       0       0       0
  1262 ;;      Temps:          0       4       0       0       0       0       0       0       0
  1263 ;;      Totals:         0      10      10       0       0       0       0       0       0
  1264 ;;Total ram usage:       20 bytes
  1265 ;; Hardware stack levels used: 1
  1266 ;; Hardware stack levels required when called: 14
  1267 ;; This function calls:
  1268 ;;		_atoi
  1269 ;;		_dtoa
  1270 ;;		_fputc
  1271 ;;		_isdigit
  1272 ;; This function is called by:
  1273 ;;		_vfprintf
  1274 ;; This function uses a non-reentrant model
  1275 ;;
  1276                           
  1277                           	psect	text3
  1278  00081C                     __ptext3:
  1279                           	callstack 0
  1280  00081C                     _vfpfcnvrt:
  1281                           	callstack 14
  1282  00081C                     
  1283                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.36\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1284  00081C  C0BE  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1285  000820  C0BF  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1286  000824  CFDE FFF6          	movff	postinc2,tblptrl
  1287  000828  CFDD FFF7          	movff	postdec2,tblptrh
  1288  00082C                     	if	0	;tblptru may be non-zero
  1289  00082C                     	endif
  1290  00082C                     	if	0	;tblptru may be non-zero
  1291  00082C                     	endif
  1292  00082C  0008               	tblrd		*
  1293  00082E  50F5               	movf	tablat,w,c
  1294  000830  0A25               	xorlw	37
  1295  000832  A4D8               	btfss	status,2,c
  1296  000834  EF1E  F004         	goto	u3061
  1297  000838  EF20  F004         	goto	u3060
  1298  00083C                     u3061:
  1299  00083C  EFA2  F005         	goto	l3538
  1300  000840                     u3060:
  1301  000840                     
  1302                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1303  000840  C0BE  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1304  000844  C0BF  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1305  000848  2ADE               	incf	postinc2,f,c
  1306  00084A  0E00               	movlw	0
  1307  00084C  22DD               	addwfc	postdec2,f,c
  1308  00084E                     
  1309                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1310  00084E  0E00               	movlw	0
  1311  000850  0100               	movlb	0	; () banked
  1312  000852  6FCB               	movwf	(_width+1)& (0+255),b
  1313  000854  0E00               	movlw	0
  1314  000856  6FCA               	movwf	_width& (0+255),b
  1315  000858  C0CA  F0CE         	movff	_width,_flags
  1316  00085C  C0CB  F0CF         	movff	_width+1,_flags+1
  1317  000860                     
  1318                           ; BSR set to: 0
  1319                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1320  000860  69CC               	setf	_prec& (0+255),b
  1321  000862  69CD               	setf	(_prec+1)& (0+255),b
  1322  000864                     
  1323                           ; BSR set to: 0
  1324                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  1325  000864  0E00               	movlw	0
  1326  000866  0101               	movlb	1	; () banked
  1327  000868  6F39               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1328  00086A  0E00               	movlw	0
  1329  00086C  6F38               	movwf	vfpfcnvrt@done& (0+255),b
  1330                           
  1331                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  1332  00086E  EF81  F004         	goto	l3492
  1333  000872                     l3466:
  1334                           
  1335                           ; BSR set to: 0
  1336                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  1337  000872  81CE               	bsf	_flags& (0+255),0,b
  1338  000874                     l3468:
  1339                           
  1340                           ; BSR set to: 0
  1341                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  1342  000874  C0BE  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1343  000878  C0BF  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1344  00087C  2ADE               	incf	postinc2,f,c
  1345  00087E  0E00               	movlw	0
  1346  000880  22DD               	addwfc	postdec2,f,c
  1347                           
  1348                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  1349  000882  EF81  F004         	goto	l3492
  1350  000886                     l3470:
  1351                           
  1352                           ; BSR set to: 0
  1353                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  1354  000886  83CE               	bsf	_flags& (0+255),1,b
  1355  000888  EF3A  F004         	goto	l3468
  1356  00088C                     l3474:
  1357                           
  1358                           ; BSR set to: 0
  1359                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  1360  00088C  85CE               	bsf	_flags& (0+255),2,b
  1361  00088E  EF3A  F004         	goto	l3468
  1362  000892                     l3478:
  1363                           
  1364                           ; BSR set to: 0
  1365                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  1366  000892  87CE               	bsf	_flags& (0+255),3,b
  1367  000894  EF3A  F004         	goto	l3468
  1368  000898                     l3482:
  1369                           
  1370                           ; BSR set to: 0
  1371                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  1372  000898  89CE               	bsf	_flags& (0+255),4,b
  1373  00089A  EF3A  F004         	goto	l3468
  1374  00089E                     l3486:
  1375                           
  1376                           ; BSR set to: 0
  1377                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  1378  00089E  0E00               	movlw	0
  1379  0008A0  0101               	movlb	1	; () banked
  1380  0008A2  6F39               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1381  0008A4  0E01               	movlw	1
  1382  0008A6  6F38               	movwf	vfpfcnvrt@done& (0+255),b
  1383                           
  1384                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  1385  0008A8  EF81  F004         	goto	l3492
  1386  0008AC                     l3490:
  1387                           
  1388                           ; BSR set to: 1
  1389  0008AC  C0BE  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1390  0008B0  C0BF  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1391  0008B4  CFDE FFF6          	movff	postinc2,tblptrl
  1392  0008B8  CFDD FFF7          	movff	postdec2,tblptrh
  1393  0008BC                     	if	0	;tblptru may be non-zero
  1394  0008BC                     	endif
  1395  0008BC                     	if	0	;tblptru may be non-zero
  1396  0008BC                     	endif
  1397  0008BC  0008               	tblrd		*
  1398  0008BE  50F5               	movf	tablat,w,c
  1399  0008C0  0100               	movlb	0	; () banked
  1400  0008C2  6FC2               	movwf	??_vfpfcnvrt& (0+255),b
  1401  0008C4  6BC3               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  1402                           
  1403                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1404                           ; Switch size 1, requested type "simple"
  1405                           ; Number of cases is 1, Range of values is 0 to 0
  1406                           ; switch strategies available:
  1407                           ; Name         Instructions Cycles
  1408                           ; simple_byte            4     3 (average)
  1409                           ;	Chosen strategy is simple_byte
  1410  0008C6  51C3               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1411  0008C8  0A00               	xorlw	0	; case 0
  1412  0008CA  B4D8               	btfsc	status,2,c
  1413  0008CC  EF6A  F004         	goto	l3702
  1414  0008D0  EF4F  F004         	goto	l3486
  1415  0008D4                     l3702:
  1416                           
  1417                           ; BSR set to: 0
  1418                           ; Switch size 1, requested type "simple"
  1419                           ; Number of cases is 5, Range of values is 32 to 48
  1420                           ; switch strategies available:
  1421                           ; Name         Instructions Cycles
  1422                           ; simple_byte           16     9 (average)
  1423                           ;	Chosen strategy is simple_byte
  1424  0008D4  51C2               	movf	??_vfpfcnvrt& (0+255),w,b
  1425  0008D6  0A20               	xorlw	32	; case 32
  1426  0008D8  B4D8               	btfsc	status,2,c
  1427  0008DA  EF49  F004         	goto	l3478
  1428  0008DE  0A03               	xorlw	3	; case 35
  1429  0008E0  B4D8               	btfsc	status,2,c
  1430  0008E2  EF4C  F004         	goto	l3482
  1431  0008E6  0A08               	xorlw	8	; case 43
  1432  0008E8  B4D8               	btfsc	status,2,c
  1433  0008EA  EF46  F004         	goto	l3474
  1434  0008EE  0A06               	xorlw	6	; case 45
  1435  0008F0  B4D8               	btfsc	status,2,c
  1436  0008F2  EF39  F004         	goto	l3466
  1437  0008F6  0A1D               	xorlw	29	; case 48
  1438  0008F8  B4D8               	btfsc	status,2,c
  1439  0008FA  EF43  F004         	goto	l3470
  1440  0008FE  EF4F  F004         	goto	l3486
  1441  000902                     l3492:
  1442                           
  1443                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  1444  000902  0101               	movlb	1	; () banked
  1445  000904  5138               	movf	vfpfcnvrt@done& (0+255),w,b
  1446  000906  1139               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  1447  000908  B4D8               	btfsc	status,2,c
  1448  00090A  EF89  F004         	goto	u3071
  1449  00090E  EF8B  F004         	goto	u3070
  1450  000912                     u3071:
  1451  000912  EF56  F004         	goto	l3490
  1452  000916                     u3070:
  1453  000916                     
  1454                           ; BSR set to: 1
  1455                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  1456  000916  0100               	movlb	0	; () banked
  1457  000918  A1CE               	btfss	_flags& (0+255),0,b
  1458  00091A  EF91  F004         	goto	u3081
  1459  00091E  EF93  F004         	goto	u3080
  1460  000922                     u3081:
  1461  000922  EF94  F004         	goto	l3496
  1462  000926                     u3080:
  1463  000926                     
  1464                           ; BSR set to: 0
  1465                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  1466  000926  93CE               	bcf	_flags& (0+255),1,b
  1467  000928                     l3496:
  1468                           
  1469                           ; BSR set to: 0
  1470                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  1471  000928  C0BE  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1472  00092C  C0BF  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1473  000930  CFDE FFF6          	movff	postinc2,tblptrl
  1474  000934  CFDD FFF7          	movff	postdec2,tblptrh
  1475  000938                     	if	0	;tblptru may be non-zero
  1476  000938                     	endif
  1477  000938                     	if	0	;tblptru may be non-zero
  1478  000938                     	endif
  1479  000938  0008               	tblrd		*
  1480  00093A  50F5               	movf	tablat,w,c
  1481  00093C  0A2A               	xorlw	42
  1482  00093E  A4D8               	btfss	status,2,c
  1483  000940  EFA4  F004         	goto	u3091
  1484  000944  EFA6  F004         	goto	u3090
  1485  000948                     u3091:
  1486  000948  EFCF  F004         	goto	l3504
  1487  00094C                     u3090:
  1488  00094C                     
  1489                           ; BSR set to: 0
  1490                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  1491  00094C  C0BE  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1492  000950  C0BF  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1493  000954  2ADE               	incf	postinc2,f,c
  1494  000956  0E00               	movlw	0
  1495  000958  22DD               	addwfc	postdec2,f,c
  1496                           
  1497                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  1498  00095A  C0C0  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1499  00095E  C0C1  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1500  000962  CFDF F0C2          	movff	indf2,??_vfpfcnvrt
  1501  000966  0E02               	movlw	2
  1502  000968  26DE               	addwf	postinc2,f,c
  1503  00096A  CFDF F0C3          	movff	indf2,??_vfpfcnvrt+1
  1504  00096E  0E00               	movlw	0
  1505  000970  22DD               	addwfc	postdec2,f,c
  1506  000972  C0C2  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1507  000976  C0C3  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1508  00097A  CFDE F0CA          	movff	postinc2,_width
  1509  00097E  CFDD F0CB          	movff	postdec2,_width+1
  1510  000982                     
  1511                           ; BSR set to: 0
  1512                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  1513  000982  BFCB               	btfsc	(_width+1)& (0+255),7,b
  1514  000984  EFC8  F004         	goto	u3100
  1515  000988  EFC6  F004         	goto	u3101
  1516  00098C                     u3101:
  1517  00098C  EF06  F005         	goto	l3512
  1518  000990                     u3100:
  1519  000990                     
  1520                           ; BSR set to: 0
  1521                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  1522  000990  81CE               	bsf	_flags& (0+255),0,b
  1523                           
  1524                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  1525  000992  6DCA               	negf	_width& (0+255),b
  1526  000994  1FCB               	comf	(_width+1)& (0+255),f,b
  1527  000996  B0D8               	btfsc	status,0,c
  1528  000998  2BCB               	incf	(_width+1)& (0+255),f,b
  1529  00099A  EF06  F005         	goto	l3512
  1530  00099E                     l3504:
  1531                           
  1532                           ; BSR set to: 0
  1533                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  1534  00099E  C0BE  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1535  0009A2  C0BF  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1536  0009A6  CFDE F084          	movff	postinc2,atoi@s
  1537  0009AA  CFDD F085          	movff	postdec2,atoi@s+1
  1538  0009AE  EC3F  F00D         	call	_atoi	;wreg free
  1539  0009B2  C084  F0CA         	movff	?_atoi,_width
  1540  0009B6  C085  F0CB         	movff	?_atoi+1,_width+1
  1541                           
  1542                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  1543  0009BA  EFE6  F004         	goto	l3510
  1544  0009BE                     l3506:
  1545                           
  1546                           ; BSR set to: 0
  1547                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  1548  0009BE  C0BE  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1549  0009C2  C0BF  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1550  0009C6  2ADE               	incf	postinc2,f,c
  1551  0009C8  0E00               	movlw	0
  1552  0009CA  22DD               	addwfc	postdec2,f,c
  1553  0009CC                     l3510:
  1554  0009CC  0ED0               	movlw	208
  1555  0009CE  0100               	movlb	0	; () banked
  1556  0009D0  6FC2               	movwf	??_vfpfcnvrt& (0+255),b
  1557  0009D2  0EFF               	movlw	255
  1558  0009D4  6FC3               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  1559  0009D6  C0BE  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1560  0009DA  C0BF  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1561  0009DE  CFDE FFF6          	movff	postinc2,tblptrl
  1562  0009E2  CFDD FFF7          	movff	postdec2,tblptrh
  1563  0009E6                     	if	0	;tblptru may be non-zero
  1564  0009E6                     	endif
  1565  0009E6                     	if	0	;tblptru may be non-zero
  1566  0009E6                     	endif
  1567  0009E6  0008               	tblrd		*
  1568  0009E8  50F5               	movf	tablat,w,c
  1569  0009EA  6FC4               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  1570  0009EC  6BC5               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  1571  0009EE  51C2               	movf	??_vfpfcnvrt& (0+255),w,b
  1572  0009F0  27C4               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  1573  0009F2  51C3               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1574  0009F4  23C5               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  1575  0009F6  51C5               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  1576  0009F8  E109               	bnz	u3110
  1577  0009FA  0E0A               	movlw	10
  1578  0009FC  5DC4               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  1579  0009FE  A0D8               	btfss	status,0,c
  1580  000A00  EF04  F005         	goto	u3111
  1581  000A04  EF06  F005         	goto	u3110
  1582  000A08                     u3111:
  1583  000A08  EFDF  F004         	goto	l3506
  1584  000A0C                     u3110:
  1585  000A0C                     l3512:
  1586                           
  1587                           ; BSR set to: 0
  1588                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1589  000A0C  C0BE  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1590  000A10  C0BF  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1591  000A14  CFDE FFF6          	movff	postinc2,tblptrl
  1592  000A18  CFDD FFF7          	movff	postdec2,tblptrh
  1593  000A1C                     	if	0	;tblptru may be non-zero
  1594  000A1C                     	endif
  1595  000A1C                     	if	0	;tblptru may be non-zero
  1596  000A1C                     	endif
  1597  000A1C  0008               	tblrd		*
  1598  000A1E  50F5               	movf	tablat,w,c
  1599  000A20  0A64               	xorlw	100
  1600  000A22  B4D8               	btfsc	status,2,c
  1601  000A24  EF16  F005         	goto	u3121
  1602  000A28  EF18  F005         	goto	u3120
  1603  000A2C                     u3121:
  1604  000A2C  EF2A  F005         	goto	l3516
  1605  000A30                     u3120:
  1606  000A30                     
  1607                           ; BSR set to: 0
  1608  000A30  C0BE  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1609  000A34  C0BF  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1610  000A38  CFDE FFF6          	movff	postinc2,tblptrl
  1611  000A3C  CFDD FFF7          	movff	postdec2,tblptrh
  1612  000A40                     	if	0	;tblptru may be non-zero
  1613  000A40                     	endif
  1614  000A40                     	if	0	;tblptru may be non-zero
  1615  000A40                     	endif
  1616  000A40  0008               	tblrd		*
  1617  000A42  50F5               	movf	tablat,w,c
  1618  000A44  0A69               	xorlw	105
  1619  000A46  A4D8               	btfss	status,2,c
  1620  000A48  EF28  F005         	goto	u3131
  1621  000A4C  EF2A  F005         	goto	u3130
  1622  000A50                     u3131:
  1623  000A50  EF6B  F005         	goto	l3522
  1624  000A54                     u3130:
  1625  000A54                     l3516:
  1626                           
  1627                           ; BSR set to: 0
  1628                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  1629  000A54  C0BE  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1630  000A58  C0BF  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1631  000A5C  2ADE               	incf	postinc2,f,c
  1632  000A5E  0E00               	movlw	0
  1633  000A60  22DD               	addwfc	postdec2,f,c
  1634                           
  1635                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1636  000A62  C0C0  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1637  000A66  C0C1  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1638  000A6A  CFDF F0C2          	movff	indf2,??_vfpfcnvrt
  1639  000A6E  0E02               	movlw	2
  1640  000A70  26DE               	addwf	postinc2,f,c
  1641  000A72  CFDF F0C3          	movff	indf2,??_vfpfcnvrt+1
  1642  000A76  0E00               	movlw	0
  1643  000A78  22DD               	addwfc	postdec2,f,c
  1644  000A7A  C0C2  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1645  000A7E  C0C3  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1646  000A82  CFDE F130          	movff	postinc2,vfpfcnvrt@ll
  1647  000A86  CFDD F131          	movff	postdec2,vfpfcnvrt@ll+1
  1648  000A8A  0101               	movlb	1	; () banked
  1649  000A8C  0E00               	movlw	0
  1650  000A8E  BF31               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  1651  000A90  0EFF               	movlw	-1
  1652  000A92  6F32               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  1653  000A94  6F33               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  1654  000A96  6F34               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  1655  000A98  6F35               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  1656  000A9A  6F36               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  1657  000A9C  6F37               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  1658  000A9E                     
  1659                           ; BSR set to: 1
  1660                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  1661  000A9E  C0BC  F098         	movff	vfpfcnvrt@fp,dtoa@fp
  1662  000AA2  C0BD  F099         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1663  000AA6  C130  F09A         	movff	vfpfcnvrt@ll,dtoa@d
  1664  000AAA  C131  F09B         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1665  000AAE  C132  F09C         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1666  000AB2  C133  F09D         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1667  000AB6  C134  F09E         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1668  000ABA  C135  F09F         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1669  000ABE  C136  F0A0         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1670  000AC2  C137  F0A1         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1671  000AC6  EC6D  F007         	call	_dtoa	;wreg free
  1672  000ACA  C098  F0BC         	movff	?_dtoa,?_vfpfcnvrt
  1673  000ACE  C099  F0BD         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1674  000AD2  EFBE  F005         	goto	l902
  1675  000AD6                     l3522:
  1676                           
  1677                           ; BSR set to: 0
  1678                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1679  000AD6  C0BE  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1680  000ADA  C0BF  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1681  000ADE  CFDE FFF6          	movff	postinc2,tblptrl
  1682  000AE2  CFDD FFF7          	movff	postdec2,tblptrh
  1683  000AE6                     	if	0	;tblptru may be non-zero
  1684  000AE6                     	endif
  1685  000AE6                     	if	0	;tblptru may be non-zero
  1686  000AE6                     	endif
  1687  000AE6  0008               	tblrd		*
  1688  000AE8  50F5               	movf	tablat,w,c
  1689  000AEA  0A25               	xorlw	37
  1690  000AEC  A4D8               	btfss	status,2,c
  1691  000AEE  EF7B  F005         	goto	u3141
  1692  000AF2  EF7D  F005         	goto	u3140
  1693  000AF6                     u3141:
  1694  000AF6  EF95  F005         	goto	l3532
  1695  000AFA                     u3140:
  1696  000AFA                     
  1697                           ; BSR set to: 0
  1698                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1699  000AFA  C0BE  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1700  000AFE  C0BF  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1701  000B02  2ADE               	incf	postinc2,f,c
  1702  000B04  0E00               	movlw	0
  1703  000B06  22DD               	addwfc	postdec2,f,c
  1704  000B08                     
  1705                           ; BSR set to: 0
  1706                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1707  000B08  0E00               	movlw	0
  1708  000B0A  6F7E               	movwf	(fputc@c+1)& (0+255),b
  1709  000B0C  0E25               	movlw	37
  1710  000B0E  6F7D               	movwf	fputc@c& (0+255),b
  1711  000B10  C0BC  F07F         	movff	vfpfcnvrt@fp,fputc@fp
  1712  000B14  C0BD  F080         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1713  000B18  EC17  F00F         	call	_fputc	;wreg free
  1714  000B1C                     l3528:
  1715                           
  1716                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1717  000B1C  0E00               	movlw	0
  1718  000B1E  0100               	movlb	0	; () banked
  1719  000B20  6FBD               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  1720  000B22  0E01               	movlw	1
  1721  000B24  6FBC               	movwf	?_vfpfcnvrt& (0+255),b
  1722  000B26  EFBE  F005         	goto	l902
  1723  000B2A                     l3532:
  1724                           
  1725                           ; BSR set to: 0
  1726                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1727  000B2A  C0BE  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1728  000B2E  C0BF  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1729  000B32  2ADE               	incf	postinc2,f,c
  1730  000B34  0E00               	movlw	0
  1731  000B36  22DD               	addwfc	postdec2,f,c
  1732  000B38                     
  1733                           ; BSR set to: 0
  1734                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1735  000B38  0E00               	movlw	0
  1736  000B3A  6FBD               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  1737  000B3C  0E00               	movlw	0
  1738  000B3E  6FBC               	movwf	?_vfpfcnvrt& (0+255),b
  1739  000B40  EFBE  F005         	goto	l902
  1740  000B44                     l3538:
  1741                           
  1742                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1743  000B44  C0BE  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1744  000B48  C0BF  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1745  000B4C  CFDE FFF6          	movff	postinc2,tblptrl
  1746  000B50  CFDD FFF7          	movff	postdec2,tblptrh
  1747  000B54                     	if	0	;tblptru may be non-zero
  1748  000B54                     	endif
  1749  000B54                     	if	0	;tblptru may be non-zero
  1750  000B54                     	endif
  1751  000B54  0008               	tblrd		*
  1752  000B56  50F5               	movf	tablat,w,c
  1753  000B58  0100               	movlb	0	; () banked
  1754  000B5A  6F7D               	movwf	fputc@c& (0+255),b
  1755  000B5C  6B7E               	clrf	(fputc@c+1)& (0+255),b
  1756  000B5E  C0BC  F07F         	movff	vfpfcnvrt@fp,fputc@fp
  1757  000B62  C0BD  F080         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1758  000B66  EC17  F00F         	call	_fputc	;wreg free
  1759  000B6A                     
  1760                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1761  000B6A  C0BE  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1762  000B6E  C0BF  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1763  000B72  2ADE               	incf	postinc2,f,c
  1764  000B74  0E00               	movlw	0
  1765  000B76  22DD               	addwfc	postdec2,f,c
  1766  000B78  EF8E  F005         	goto	l3528
  1767  000B7C                     l902:
  1768  000B7C  0012               	return		;funcret
  1769  000B7E                     __end_of_vfpfcnvrt:
  1770                           	callstack 0
  1771                           
  1772 ;; *************** function _dtoa *****************
  1773 ;; Defined at:
  1774 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1775 ;; Parameters:    Size  Location     Type
  1776 ;;  fp              2   56[BANK0 ] PTR struct _IO_FILE
  1777 ;;		 -> sprintf@f(11), 
  1778 ;;  d               8   58[BANK0 ] long long 
  1779 ;; Auto vars:     Size  Location     Type
  1780 ;;  n               8   82[BANK0 ] long long 
  1781 ;;  i               2   90[BANK0 ] int 
  1782 ;;  s               2   80[BANK0 ] int 
  1783 ;;  w               2   78[BANK0 ] int 
  1784 ;;  p               2   76[BANK0 ] int 
  1785 ;; Return value:  Size  Location     Type
  1786 ;;                  2   56[BANK0 ] int 
  1787 ;; Registers used:
  1788 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1789 ;; Tracked objects:
  1790 ;;		On entry : 0/0
  1791 ;;		On exit  : 0/0
  1792 ;;		Unchanged: 0/0
  1793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1794 ;;      Params:         0      10       0       0       0       0       0       0       0
  1795 ;;      Locals:         0      18       0       0       0       0       0       0       0
  1796 ;;      Temps:          0       8       0       0       0       0       0       0       0
  1797 ;;      Totals:         0      36       0       0       0       0       0       0       0
  1798 ;;Total ram usage:       36 bytes
  1799 ;; Hardware stack levels used: 1
  1800 ;; Hardware stack levels required when called: 13
  1801 ;; This function calls:
  1802 ;;		___aodiv
  1803 ;;		___aomod
  1804 ;;		_abs
  1805 ;;		_pad
  1806 ;; This function is called by:
  1807 ;;		_vfpfcnvrt
  1808 ;; This function uses a non-reentrant model
  1809 ;;
  1810                           
  1811                           	psect	text4
  1812  000EDA                     __ptext4:
  1813                           	callstack 0
  1814  000EDA                     _dtoa:
  1815                           	callstack 14
  1816  000EDA                     
  1817                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  1818  000EDA  C09A  F0B2         	movff	dtoa@d,dtoa@n
  1819  000EDE  C09B  F0B3         	movff	dtoa@d+1,dtoa@n+1
  1820  000EE2  C09C  F0B4         	movff	dtoa@d+2,dtoa@n+2
  1821  000EE6  C09D  F0B5         	movff	dtoa@d+3,dtoa@n+3
  1822  000EEA  C09E  F0B6         	movff	dtoa@d+4,dtoa@n+4
  1823  000EEE  C09F  F0B7         	movff	dtoa@d+5,dtoa@n+5
  1824  000EF2  C0A0  F0B8         	movff	dtoa@d+6,dtoa@n+6
  1825  000EF6  C0A1  F0B9         	movff	dtoa@d+7,dtoa@n+7
  1826  000EFA                     
  1827                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  1828  000EFA  0100               	movlb	0	; () banked
  1829  000EFC  BFB9               	btfsc	(dtoa@n+7)& (0+255),7,b
  1830  000EFE  EF83  F007         	goto	u2871
  1831  000F02  EF86  F007         	goto	u2870
  1832  000F06                     u2871:
  1833  000F06  0E01               	movlw	1
  1834  000F08  EF87  F007         	goto	u2880
  1835  000F0C                     u2870:
  1836  000F0C  0E00               	movlw	0
  1837  000F0E                     u2880:
  1838  000F0E  6FB0               	movwf	dtoa@s& (0+255),b
  1839  000F10  6BB1               	clrf	(dtoa@s+1)& (0+255),b
  1840                           
  1841                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  1842  000F12  51B0               	movf	dtoa@s& (0+255),w,b
  1843  000F14  11B1               	iorwf	(dtoa@s+1)& (0+255),w,b
  1844  000F16  B4D8               	btfsc	status,2,c
  1845  000F18  EF90  F007         	goto	u2891
  1846  000F1C  EF92  F007         	goto	u2890
  1847  000F20                     u2891:
  1848  000F20  EFA2  F007         	goto	l3368
  1849  000F24                     u2890:
  1850  000F24                     
  1851                           ; BSR set to: 0
  1852                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  1853  000F24  1FB9               	comf	(dtoa@n+7)& (0+255),f,b
  1854  000F26  1FB8               	comf	(dtoa@n+6)& (0+255),f,b
  1855  000F28  1FB7               	comf	(dtoa@n+5)& (0+255),f,b
  1856  000F2A  1FB6               	comf	(dtoa@n+4)& (0+255),f,b
  1857  000F2C  1FB5               	comf	(dtoa@n+3)& (0+255),f,b
  1858  000F2E  1FB4               	comf	(dtoa@n+2)& (0+255),f,b
  1859  000F30  1FB3               	comf	(dtoa@n+1)& (0+255),f,b
  1860  000F32  6DB2               	negf	dtoa@n& (0+255),b
  1861  000F34  0E00               	movlw	0
  1862  000F36  23B3               	addwfc	(dtoa@n+1)& (0+255),f,b
  1863  000F38  23B4               	addwfc	(dtoa@n+2)& (0+255),f,b
  1864  000F3A  23B5               	addwfc	(dtoa@n+3)& (0+255),f,b
  1865  000F3C  23B6               	addwfc	(dtoa@n+4)& (0+255),f,b
  1866  000F3E  23B7               	addwfc	(dtoa@n+5)& (0+255),f,b
  1867  000F40  23B8               	addwfc	(dtoa@n+6)& (0+255),f,b
  1868  000F42  23B9               	addwfc	(dtoa@n+7)& (0+255),f,b
  1869  000F44                     l3368:
  1870                           
  1871                           ; BSR set to: 0
  1872                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  1873  000F44  BFCD               	btfsc	(_prec+1)& (0+255),7,b
  1874  000F46  EFA7  F007         	goto	u2901
  1875  000F4A  EFA9  F007         	goto	u2900
  1876  000F4E                     u2901:
  1877  000F4E  EFAA  F007         	goto	l3372
  1878  000F52                     u2900:
  1879  000F52                     
  1880                           ; BSR set to: 0
  1881                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  1882  000F52  93CE               	bcf	_flags& (0+255),1,b
  1883  000F54                     l3372:
  1884                           
  1885                           ; BSR set to: 0
  1886                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  1887  000F54  BFCD               	btfsc	(_prec+1)& (0+255),7,b
  1888  000F56  EFB7  F007         	goto	u2910
  1889  000F5A  51CD               	movf	(_prec+1)& (0+255),w,b
  1890  000F5C  E106               	bnz	u2911
  1891  000F5E  05CC               	decf	_prec& (0+255),w,b
  1892  000F60  B0D8               	btfsc	status,0,c
  1893  000F62  EFB5  F007         	goto	u2911
  1894  000F66  EFB7  F007         	goto	u2910
  1895  000F6A                     u2911:
  1896  000F6A  EFBD  F007         	goto	l855
  1897  000F6E                     u2910:
  1898  000F6E                     
  1899                           ; BSR set to: 0
  1900  000F6E  0E00               	movlw	0
  1901  000F70  6FAD               	movwf	(dtoa@p+1)& (0+255),b
  1902  000F72  0E01               	movlw	1
  1903  000F74  6FAC               	movwf	dtoa@p& (0+255),b
  1904  000F76  EFC1  F007         	goto	l857
  1905  000F7A                     l855:
  1906                           
  1907                           ; BSR set to: 0
  1908  000F7A  C0CC  F0AC         	movff	_prec,dtoa@p
  1909  000F7E  C0CD  F0AD         	movff	_prec+1,dtoa@p+1
  1910  000F82                     l857:
  1911                           
  1912                           ; BSR set to: 0
  1913                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  1914  000F82  C0CA  F0AE         	movff	_width,dtoa@w
  1915  000F86  C0CB  F0AF         	movff	_width+1,dtoa@w+1
  1916  000F8A                     
  1917                           ; BSR set to: 0
  1918                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  1919  000F8A  51B0               	movf	dtoa@s& (0+255),w,b
  1920  000F8C  11B1               	iorwf	(dtoa@s+1)& (0+255),w,b
  1921  000F8E  A4D8               	btfss	status,2,c
  1922  000F90  EFCC  F007         	goto	u2921
  1923  000F94  EFCE  F007         	goto	u2920
  1924  000F98                     u2921:
  1925  000F98  EFD5  F007         	goto	l3380
  1926  000F9C                     u2920:
  1927  000F9C                     
  1928                           ; BSR set to: 0
  1929  000F9C  A5CE               	btfss	_flags& (0+255),2,b
  1930  000F9E  EFD3  F007         	goto	u2931
  1931  000FA2  EFD5  F007         	goto	u2930
  1932  000FA6                     u2931:
  1933  000FA6  EFD8  F007         	goto	l3382
  1934  000FAA                     u2930:
  1935  000FAA                     l3380:
  1936                           
  1937                           ; BSR set to: 0
  1938                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 306:         --w;
  1939  000FAA  07AE               	decf	dtoa@w& (0+255),f,b
  1940  000FAC  A0D8               	btfss	status,0,c
  1941  000FAE  07AF               	decf	(dtoa@w+1)& (0+255),f,b
  1942  000FB0                     l3382:
  1943                           
  1944                           ; BSR set to: 0
  1945                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  1946  000FB0  0E00               	movlw	0
  1947  000FB2  6FBB               	movwf	(dtoa@i+1)& (0+255),b
  1948  000FB4  0E1F               	movlw	31
  1949  000FB6  6FBA               	movwf	dtoa@i& (0+255),b
  1950  000FB8                     
  1951                           ; BSR set to: 0
  1952                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  1953  000FB8  0E00               	movlw	0
  1954  000FBA  0101               	movlb	1	; () banked
  1955  000FBC  6F1F               	movwf	(_dbuf+31)& (0+255),b
  1956                           
  1957                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1958  000FBE  EF5E  F008         	goto	l3396
  1959  000FC2                     l3386:
  1960                           
  1961                           ; BSR set to: 0
  1962                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 313:         --i;
  1963  000FC2  07BA               	decf	dtoa@i& (0+255),f,b
  1964  000FC4  A0D8               	btfss	status,0,c
  1965  000FC6  07BB               	decf	(dtoa@i+1)& (0+255),f,b
  1966  000FC8                     
  1967                           ; BSR set to: 0
  1968                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1969  000FC8  0E00               	movlw	low _dbuf
  1970  000FCA  25BA               	addwf	dtoa@i& (0+255),w,b
  1971  000FCC  6ED9               	movwf	fsr2l,c
  1972  000FCE  0E01               	movlw	high _dbuf
  1973  000FD0  21BB               	addwfc	(dtoa@i+1)& (0+255),w,b
  1974  000FD2  6EDA               	movwf	fsr2h,c
  1975  000FD4  C0B2  F07D         	movff	dtoa@n,___aomod@dividend
  1976  000FD8  C0B3  F07E         	movff	dtoa@n+1,___aomod@dividend+1
  1977  000FDC  C0B4  F07F         	movff	dtoa@n+2,___aomod@dividend+2
  1978  000FE0  C0B5  F080         	movff	dtoa@n+3,___aomod@dividend+3
  1979  000FE4  C0B6  F081         	movff	dtoa@n+4,___aomod@dividend+4
  1980  000FE8  C0B7  F082         	movff	dtoa@n+5,___aomod@dividend+5
  1981  000FEC  C0B8  F083         	movff	dtoa@n+6,___aomod@dividend+6
  1982  000FF0  C0B9  F084         	movff	dtoa@n+7,___aomod@dividend+7
  1983  000FF4  0E0A               	movlw	10
  1984  000FF6  6F85               	movwf	___aomod@divisor& (0+255),b
  1985  000FF8  0E00               	movlw	0
  1986  000FFA  6F86               	movwf	(___aomod@divisor+1)& (0+255),b
  1987  000FFC  0E00               	movlw	0
  1988  000FFE  6F87               	movwf	(___aomod@divisor+2)& (0+255),b
  1989  001000  0E00               	movlw	0
  1990  001002  6F88               	movwf	(___aomod@divisor+3)& (0+255),b
  1991  001004  0E00               	movlw	0
  1992  001006  6F89               	movwf	(___aomod@divisor+4)& (0+255),b
  1993  001008  0E00               	movlw	0
  1994  00100A  6F8A               	movwf	(___aomod@divisor+5)& (0+255),b
  1995  00100C  0E00               	movlw	0
  1996  00100E  6F8B               	movwf	(___aomod@divisor+6)& (0+255),b
  1997  001010  0E00               	movlw	0
  1998  001012  6F8C               	movwf	(___aomod@divisor+7)& (0+255),b
  1999  001014  ECDA  F00B         	call	___aomod	;wreg free
  2000  001018  C07D  F0A2         	movff	?___aomod,??_dtoa
  2001  00101C  C07E  F0A3         	movff	?___aomod+1,??_dtoa+1
  2002  001020  C07F  F0A4         	movff	?___aomod+2,??_dtoa+2
  2003  001024  C080  F0A5         	movff	?___aomod+3,??_dtoa+3
  2004  001028  C081  F0A6         	movff	?___aomod+4,??_dtoa+4
  2005  00102C  C082  F0A7         	movff	?___aomod+5,??_dtoa+5
  2006  001030  C083  F0A8         	movff	?___aomod+6,??_dtoa+6
  2007  001034  C084  F0A9         	movff	?___aomod+7,??_dtoa+7
  2008  001038  C0A2  F08F         	movff	??_dtoa,abs@a
  2009  00103C  C0A4  F090         	movff	??_dtoa+2,abs@a+1
  2010  001040  EC16  F013         	call	_abs	;wreg free
  2011  001044  0100               	movlb	0	; () banked
  2012  001046  518F               	movf	?_abs& (0+255),w,b
  2013  001048  0F30               	addlw	48
  2014  00104A  6EDF               	movwf	indf2,c
  2015  00104C                     
  2016                           ; BSR set to: 0
  2017                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 315:         --p;
  2018  00104C  07AC               	decf	dtoa@p& (0+255),f,b
  2019  00104E  A0D8               	btfss	status,0,c
  2020  001050  07AD               	decf	(dtoa@p+1)& (0+255),f,b
  2021  001052                     
  2022                           ; BSR set to: 0
  2023                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 316:         --w;
  2024  001052  07AE               	decf	dtoa@w& (0+255),f,b
  2025  001054  A0D8               	btfss	status,0,c
  2026  001056  07AF               	decf	(dtoa@w+1)& (0+255),f,b
  2027  001058                     
  2028                           ; BSR set to: 0
  2029                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  2030  001058  C0B2  F07D         	movff	dtoa@n,___aodiv@dividend
  2031  00105C  C0B3  F07E         	movff	dtoa@n+1,___aodiv@dividend+1
  2032  001060  C0B4  F07F         	movff	dtoa@n+2,___aodiv@dividend+2
  2033  001064  C0B5  F080         	movff	dtoa@n+3,___aodiv@dividend+3
  2034  001068  C0B6  F081         	movff	dtoa@n+4,___aodiv@dividend+4
  2035  00106C  C0B7  F082         	movff	dtoa@n+5,___aodiv@dividend+5
  2036  001070  C0B8  F083         	movff	dtoa@n+6,___aodiv@dividend+6
  2037  001074  C0B9  F084         	movff	dtoa@n+7,___aodiv@dividend+7
  2038  001078  0E0A               	movlw	10
  2039  00107A  6F85               	movwf	___aodiv@divisor& (0+255),b
  2040  00107C  0E00               	movlw	0
  2041  00107E  6F86               	movwf	(___aodiv@divisor+1)& (0+255),b
  2042  001080  0E00               	movlw	0
  2043  001082  6F87               	movwf	(___aodiv@divisor+2)& (0+255),b
  2044  001084  0E00               	movlw	0
  2045  001086  6F88               	movwf	(___aodiv@divisor+3)& (0+255),b
  2046  001088  0E00               	movlw	0
  2047  00108A  6F89               	movwf	(___aodiv@divisor+4)& (0+255),b
  2048  00108C  0E00               	movlw	0
  2049  00108E  6F8A               	movwf	(___aodiv@divisor+5)& (0+255),b
  2050  001090  0E00               	movlw	0
  2051  001092  6F8B               	movwf	(___aodiv@divisor+6)& (0+255),b
  2052  001094  0E00               	movlw	0
  2053  001096  6F8C               	movwf	(___aodiv@divisor+7)& (0+255),b
  2054  001098  EC51  F00A         	call	___aodiv	;wreg free
  2055  00109C  C07D  F0B2         	movff	?___aodiv,dtoa@n
  2056  0010A0  C07E  F0B3         	movff	?___aodiv+1,dtoa@n+1
  2057  0010A4  C07F  F0B4         	movff	?___aodiv+2,dtoa@n+2
  2058  0010A8  C080  F0B5         	movff	?___aodiv+3,dtoa@n+3
  2059  0010AC  C081  F0B6         	movff	?___aodiv+4,dtoa@n+4
  2060  0010B0  C082  F0B7         	movff	?___aodiv+5,dtoa@n+5
  2061  0010B4  C083  F0B8         	movff	?___aodiv+6,dtoa@n+6
  2062  0010B8  C084  F0B9         	movff	?___aodiv+7,dtoa@n+7
  2063  0010BC                     l3396:
  2064                           
  2065                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2066  0010BC  0100               	movlb	0	; () banked
  2067  0010BE  BFBB               	btfsc	(dtoa@i+1)& (0+255),7,b
  2068  0010C0  EF6A  F008         	goto	u2941
  2069  0010C4  51BB               	movf	(dtoa@i+1)& (0+255),w,b
  2070  0010C6  E108               	bnz	u2940
  2071  0010C8  05BA               	decf	dtoa@i& (0+255),w,b
  2072  0010CA  A0D8               	btfss	status,0,c
  2073  0010CC  EF6A  F008         	goto	u2941
  2074  0010D0  EF6C  F008         	goto	u2940
  2075  0010D4                     u2941:
  2076  0010D4  EF9C  F008         	goto	l3406
  2077  0010D8                     u2940:
  2078  0010D8                     
  2079                           ; BSR set to: 0
  2080  0010D8  51B2               	movf	dtoa@n& (0+255),w,b
  2081  0010DA  11B3               	iorwf	(dtoa@n+1)& (0+255),w,b
  2082  0010DC  11B4               	iorwf	(dtoa@n+2)& (0+255),w,b
  2083  0010DE  11B5               	iorwf	(dtoa@n+3)& (0+255),w,b
  2084  0010E0  11B6               	iorwf	(dtoa@n+4)& (0+255),w,b
  2085  0010E2  11B7               	iorwf	(dtoa@n+5)& (0+255),w,b
  2086  0010E4  11B8               	iorwf	(dtoa@n+6)& (0+255),w,b
  2087  0010E6  11B9               	iorwf	(dtoa@n+7)& (0+255),w,b
  2088  0010E8  A4D8               	btfss	status,2,c
  2089  0010EA  EF79  F008         	goto	u2951
  2090  0010EE  EF7B  F008         	goto	u2950
  2091  0010F2                     u2951:
  2092  0010F2  EFE1  F007         	goto	l3386
  2093  0010F6                     u2950:
  2094  0010F6                     
  2095                           ; BSR set to: 0
  2096  0010F6  BFAD               	btfsc	(dtoa@p+1)& (0+255),7,b
  2097  0010F8  EF88  F008         	goto	u2960
  2098  0010FC  51AD               	movf	(dtoa@p+1)& (0+255),w,b
  2099  0010FE  E106               	bnz	u2961
  2100  001100  05AC               	decf	dtoa@p& (0+255),w,b
  2101  001102  B0D8               	btfsc	status,0,c
  2102  001104  EF86  F008         	goto	u2961
  2103  001108  EF88  F008         	goto	u2960
  2104  00110C                     u2961:
  2105  00110C  EFE1  F007         	goto	l3386
  2106  001110                     u2960:
  2107  001110                     
  2108                           ; BSR set to: 0
  2109  001110  BFAF               	btfsc	(dtoa@w+1)& (0+255),7,b
  2110  001112  EF93  F008         	goto	u2971
  2111  001116  51AF               	movf	(dtoa@w+1)& (0+255),w,b
  2112  001118  E108               	bnz	u2970
  2113  00111A  05AE               	decf	dtoa@w& (0+255),w,b
  2114  00111C  A0D8               	btfss	status,0,c
  2115  00111E  EF93  F008         	goto	u2971
  2116  001122  EF95  F008         	goto	u2970
  2117  001126                     u2971:
  2118  001126  EF9C  F008         	goto	l3406
  2119  00112A                     u2970:
  2120  00112A                     
  2121                           ; BSR set to: 0
  2122  00112A  B3CE               	btfsc	_flags& (0+255),1,b
  2123  00112C  EF9A  F008         	goto	u2981
  2124  001130  EF9C  F008         	goto	u2980
  2125  001134                     u2981:
  2126  001134  EFE1  F007         	goto	l3386
  2127  001138                     u2980:
  2128  001138                     l3406:
  2129                           
  2130                           ; BSR set to: 0
  2131                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  2132  001138  51B0               	movf	dtoa@s& (0+255),w,b
  2133  00113A  11B1               	iorwf	(dtoa@s+1)& (0+255),w,b
  2134  00113C  A4D8               	btfss	status,2,c
  2135  00113E  EFA3  F008         	goto	u2991
  2136  001142  EFA5  F008         	goto	u2990
  2137  001146                     u2991:
  2138  001146  EFAC  F008         	goto	l3410
  2139  00114A                     u2990:
  2140  00114A                     
  2141                           ; BSR set to: 0
  2142  00114A  A5CE               	btfss	_flags& (0+255),2,b
  2143  00114C  EFAA  F008         	goto	u3001
  2144  001150  EFAC  F008         	goto	u3000
  2145  001154                     u3001:
  2146  001154  EFCA  F008         	goto	l3420
  2147  001158                     u3000:
  2148  001158                     l3410:
  2149                           
  2150                           ; BSR set to: 0
  2151                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 322:         --i;
  2152  001158  07BA               	decf	dtoa@i& (0+255),f,b
  2153  00115A  A0D8               	btfss	status,0,c
  2154  00115C  07BB               	decf	(dtoa@i+1)& (0+255),f,b
  2155  00115E                     
  2156                           ; BSR set to: 0
  2157                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  2158  00115E  51B0               	movf	dtoa@s& (0+255),w,b
  2159  001160  11B1               	iorwf	(dtoa@s+1)& (0+255),w,b
  2160  001162  A4D8               	btfss	status,2,c
  2161  001164  EFB6  F008         	goto	u3011
  2162  001168  EFB8  F008         	goto	u3010
  2163  00116C                     u3011:
  2164  00116C  EFBE  F008         	goto	l3416
  2165  001170                     u3010:
  2166  001170                     
  2167                           ; BSR set to: 0
  2168  001170  0E00               	movlw	0
  2169  001172  6FAB               	movwf	(_dtoa$1065+1)& (0+255),b
  2170  001174  0E2B               	movlw	43
  2171  001176  6FAA               	movwf	_dtoa$1065& (0+255),b
  2172  001178  EFC2  F008         	goto	l3418
  2173  00117C                     l3416:
  2174                           
  2175                           ; BSR set to: 0
  2176  00117C  0E00               	movlw	0
  2177  00117E  6FAB               	movwf	(_dtoa$1065+1)& (0+255),b
  2178  001180  0E2D               	movlw	45
  2179  001182  6FAA               	movwf	_dtoa$1065& (0+255),b
  2180  001184                     l3418:
  2181                           
  2182                           ; BSR set to: 0
  2183  001184  0E00               	movlw	low _dbuf
  2184  001186  25BA               	addwf	dtoa@i& (0+255),w,b
  2185  001188  6ED9               	movwf	fsr2l,c
  2186  00118A  0E01               	movlw	high _dbuf
  2187  00118C  21BB               	addwfc	(dtoa@i+1)& (0+255),w,b
  2188  00118E  6EDA               	movwf	fsr2h,c
  2189  001190  C0AA  FFDF         	movff	_dtoa$1065,indf2
  2190  001194                     l3420:
  2191                           
  2192                           ; BSR set to: 0
  2193                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  2194  001194  C098  F08D         	movff	dtoa@fp,pad@fp
  2195  001198  C099  F08E         	movff	dtoa@fp+1,pad@fp+1
  2196  00119C  0E00               	movlw	low _dbuf
  2197  00119E  25BA               	addwf	dtoa@i& (0+255),w,b
  2198  0011A0  6F8F               	movwf	pad@buf& (0+255),b
  2199  0011A2  0E01               	movlw	high _dbuf
  2200  0011A4  21BB               	addwfc	(dtoa@i+1)& (0+255),w,b
  2201  0011A6  6F90               	movwf	(pad@buf+1)& (0+255),b
  2202  0011A8  C0AE  F091         	movff	dtoa@w,pad@p
  2203  0011AC  C0AF  F092         	movff	dtoa@w+1,pad@p+1
  2204  0011B0  EC7D  F00F         	call	_pad	;wreg free
  2205  0011B4  C08D  F098         	movff	?_pad,?_dtoa
  2206  0011B8  C08E  F099         	movff	?_pad+1,?_dtoa+1
  2207  0011BC  0012               	return		;funcret
  2208  0011BE                     __end_of_dtoa:
  2209                           	callstack 0
  2210                           
  2211 ;; *************** function _pad *****************
  2212 ;; Defined at:
  2213 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2214 ;; Parameters:    Size  Location     Type
  2215 ;;  fp              2   45[BANK0 ] PTR struct _IO_FILE
  2216 ;;		 -> sprintf@f(11), 
  2217 ;;  buf             2   47[BANK0 ] PTR unsigned char 
  2218 ;;		 -> dbuf(32), 
  2219 ;;  p               2   49[BANK0 ] int 
  2220 ;; Auto vars:     Size  Location     Type
  2221 ;;  w               2   54[BANK0 ] int 
  2222 ;;  i               2   52[BANK0 ] int 
  2223 ;; Return value:  Size  Location     Type
  2224 ;;                  2   45[BANK0 ] int 
  2225 ;; Registers used:
  2226 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2227 ;; Tracked objects:
  2228 ;;		On entry : 0/0
  2229 ;;		On exit  : 0/0
  2230 ;;		Unchanged: 0/0
  2231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2232 ;;      Params:         0       6       0       0       0       0       0       0       0
  2233 ;;      Locals:         0       4       0       0       0       0       0       0       0
  2234 ;;      Temps:          0       1       0       0       0       0       0       0       0
  2235 ;;      Totals:         0      11       0       0       0       0       0       0       0
  2236 ;;Total ram usage:       11 bytes
  2237 ;; Hardware stack levels used: 1
  2238 ;; Hardware stack levels required when called: 12
  2239 ;; This function calls:
  2240 ;;		_fputc
  2241 ;;		_fputs
  2242 ;;		_strlen
  2243 ;; This function is called by:
  2244 ;;		_dtoa
  2245 ;; This function uses a non-reentrant model
  2246 ;;
  2247                           
  2248                           	psect	text5
  2249  001EFA                     __ptext5:
  2250                           	callstack 0
  2251  001EFA                     _pad:
  2252                           	callstack 14
  2253  001EFA                     
  2254                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2255  001EFA  0100               	movlb	0	; () banked
  2256  001EFC  A1CE               	btfss	_flags& (0+255),0,b
  2257  001EFE  EF83  F00F         	goto	u2781
  2258  001F02  EF85  F00F         	goto	u2780
  2259  001F06                     u2781:
  2260  001F06  EF8F  F00F         	goto	l3324
  2261  001F0A                     u2780:
  2262  001F0A                     
  2263                           ; BSR set to: 0
  2264                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2265  001F0A  C08F  F086         	movff	pad@buf,fputs@s
  2266  001F0E  C090  F087         	movff	pad@buf+1,fputs@s+1
  2267  001F12  C08D  F088         	movff	pad@fp,fputs@fp
  2268  001F16  C08E  F089         	movff	pad@fp+1,fputs@fp+1
  2269  001F1A  EC8C  F012         	call	_fputs	;wreg free
  2270  001F1E                     l3324:
  2271                           
  2272                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2273  001F1E  0100               	movlb	0	; () banked
  2274  001F20  BF92               	btfsc	(pad@p+1)& (0+255),7,b
  2275  001F22  EF95  F00F         	goto	u2791
  2276  001F26  EF97  F00F         	goto	u2790
  2277  001F2A                     u2791:
  2278  001F2A  EF9D  F00F         	goto	l3328
  2279  001F2E                     u2790:
  2280  001F2E                     
  2281                           ; BSR set to: 0
  2282  001F2E  C091  F096         	movff	pad@p,pad@w
  2283  001F32  C092  F097         	movff	pad@p+1,pad@w+1
  2284  001F36  EFA1  F00F         	goto	l844
  2285  001F3A                     l3328:
  2286                           
  2287                           ; BSR set to: 0
  2288  001F3A  0E00               	movlw	0
  2289  001F3C  6F97               	movwf	(pad@w+1)& (0+255),b
  2290  001F3E  0E00               	movlw	0
  2291  001F40  6F96               	movwf	pad@w& (0+255),b
  2292  001F42                     l844:
  2293                           
  2294                           ; BSR set to: 0
  2295                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2296  001F42  0E00               	movlw	0
  2297  001F44  6F95               	movwf	(pad@i+1)& (0+255),b
  2298  001F46  0E00               	movlw	0
  2299  001F48  6F94               	movwf	pad@i& (0+255),b
  2300                           
  2301                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2302  001F4A  EFB4  F00F         	goto	l3334
  2303  001F4E                     l3330:
  2304                           
  2305                           ; BSR set to: 0
  2306                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2307  001F4E  0E00               	movlw	0
  2308  001F50  6F7E               	movwf	(fputc@c+1)& (0+255),b
  2309  001F52  0E20               	movlw	32
  2310  001F54  6F7D               	movwf	fputc@c& (0+255),b
  2311  001F56  C08D  F07F         	movff	pad@fp,fputc@fp
  2312  001F5A  C08E  F080         	movff	pad@fp+1,fputc@fp+1
  2313  001F5E  EC17  F00F         	call	_fputc	;wreg free
  2314  001F62                     
  2315                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2316  001F62  0100               	movlb	0	; () banked
  2317  001F64  4B94               	infsnz	pad@i& (0+255),f,b
  2318  001F66  2B95               	incf	(pad@i+1)& (0+255),f,b
  2319  001F68                     l3334:
  2320                           
  2321                           ; BSR set to: 0
  2322                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2323  001F68  5196               	movf	pad@w& (0+255),w,b
  2324  001F6A  5D94               	subwf	pad@i& (0+255),w,b
  2325  001F6C  5195               	movf	(pad@i+1)& (0+255),w,b
  2326  001F6E  0A80               	xorlw	128
  2327  001F70  6F93               	movwf	??_pad& (0+255),b
  2328  001F72  5197               	movf	(pad@w+1)& (0+255),w,b
  2329  001F74  0A80               	xorlw	128
  2330  001F76  5993               	subwfb	??_pad& (0+255),w,b
  2331  001F78  A0D8               	btfss	status,0,c
  2332  001F7A  EFC1  F00F         	goto	u2801
  2333  001F7E  EFC3  F00F         	goto	u2800
  2334  001F82                     u2801:
  2335  001F82  EFA7  F00F         	goto	l3330
  2336  001F86                     u2800:
  2337  001F86                     
  2338                           ; BSR set to: 0
  2339                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2340  001F86  B1CE               	btfsc	_flags& (0+255),0,b
  2341  001F88  EFC8  F00F         	goto	u2811
  2342  001F8C  EFCA  F00F         	goto	u2810
  2343  001F90                     u2811:
  2344  001F90  EFD4  F00F         	goto	l3338
  2345  001F94                     u2810:
  2346  001F94                     
  2347                           ; BSR set to: 0
  2348                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  2349  001F94  C08F  F086         	movff	pad@buf,fputs@s
  2350  001F98  C090  F087         	movff	pad@buf+1,fputs@s+1
  2351  001F9C  C08D  F088         	movff	pad@fp,fputs@fp
  2352  001FA0  C08E  F089         	movff	pad@fp+1,fputs@fp+1
  2353  001FA4  EC8C  F012         	call	_fputs	;wreg free
  2354  001FA8                     l3338:
  2355                           
  2356                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  2357  001FA8  C08F  F07D         	movff	pad@buf,strlen@s
  2358  001FAC  C090  F07E         	movff	pad@buf+1,strlen@s+1
  2359  001FB0  ECB4  F013         	call	_strlen	;wreg free
  2360  001FB4  0100               	movlb	0	; () banked
  2361  001FB6  5196               	movf	pad@w& (0+255),w,b
  2362  001FB8  257D               	addwf	?_strlen& (0+255),w,b
  2363  001FBA  6F8D               	movwf	?_pad& (0+255),b
  2364  001FBC  5197               	movf	(pad@w+1)& (0+255),w,b
  2365  001FBE  217E               	addwfc	(?_strlen+1)& (0+255),w,b
  2366  001FC0  6F8E               	movwf	(?_pad+1)& (0+255),b
  2367  001FC2                     
  2368                           ; BSR set to: 0
  2369  001FC2  0012               	return		;funcret
  2370  001FC4                     __end_of_pad:
  2371                           	callstack 0
  2372                           
  2373 ;; *************** function _strlen *****************
  2374 ;; Defined at:
  2375 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  2376 ;; Parameters:    Size  Location     Type
  2377 ;;  s               2   29[BANK0 ] PTR const unsigned char 
  2378 ;;		 -> dbuf(32), 
  2379 ;; Auto vars:     Size  Location     Type
  2380 ;;  a               2   31[BANK0 ] PTR const unsigned char 
  2381 ;;		 -> dbuf(32), 
  2382 ;; Return value:  Size  Location     Type
  2383 ;;                  2   29[BANK0 ] unsigned int 
  2384 ;; Registers used:
  2385 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2386 ;; Tracked objects:
  2387 ;;		On entry : 0/0
  2388 ;;		On exit  : 0/0
  2389 ;;		Unchanged: 0/0
  2390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2391 ;;      Params:         0       2       0       0       0       0       0       0       0
  2392 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2393 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2394 ;;      Totals:         0       4       0       0       0       0       0       0       0
  2395 ;;Total ram usage:        4 bytes
  2396 ;; Hardware stack levels used: 1
  2397 ;; Hardware stack levels required when called: 9
  2398 ;; This function calls:
  2399 ;;		Nothing
  2400 ;; This function is called by:
  2401 ;;		_pad
  2402 ;; This function uses a non-reentrant model
  2403 ;;
  2404                           
  2405                           	psect	text6
  2406  002768                     __ptext6:
  2407                           	callstack 0
  2408  002768                     _strlen:
  2409                           	callstack 16
  2410  002768  C07D  F07F         	movff	strlen@s,strlen@a
  2411  00276C  C07E  F080         	movff	strlen@s+1,strlen@a+1
  2412  002770  EFBD  F013         	goto	l3228
  2413  002774                     l3226:
  2414  002774  0100               	movlb	0	; () banked
  2415  002776  4B7D               	infsnz	strlen@s& (0+255),f,b
  2416  002778  2B7E               	incf	(strlen@s+1)& (0+255),f,b
  2417  00277A                     l3228:
  2418  00277A  C07D  FFD9         	movff	strlen@s,fsr2l
  2419  00277E  C07E  FFDA         	movff	strlen@s+1,fsr2h
  2420  002782  50DF               	movf	indf2,w,c
  2421  002784  A4D8               	btfss	status,2,c
  2422  002786  EFC7  F013         	goto	u2641
  2423  00278A  EFC9  F013         	goto	u2640
  2424  00278E                     u2641:
  2425  00278E  EFBA  F013         	goto	l3226
  2426  002792                     u2640:
  2427  002792  0100               	movlb	0	; () banked
  2428  002794  517F               	movf	strlen@a& (0+255),w,b
  2429  002796  5D7D               	subwf	strlen@s& (0+255),w,b
  2430  002798  6F7D               	movwf	?_strlen& (0+255),b
  2431  00279A  5180               	movf	(strlen@a+1)& (0+255),w,b
  2432  00279C  597E               	subwfb	(strlen@s+1)& (0+255),w,b
  2433  00279E  6F7E               	movwf	(?_strlen+1)& (0+255),b
  2434  0027A0                     
  2435                           ; BSR set to: 0
  2436  0027A0  0012               	return		;funcret
  2437  0027A2                     __end_of_strlen:
  2438                           	callstack 0
  2439                           
  2440 ;; *************** function _fputs *****************
  2441 ;; Defined at:
  2442 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputs.c"
  2443 ;; Parameters:    Size  Location     Type
  2444 ;;  s               2   38[BANK0 ] PTR const unsigned char 
  2445 ;;		 -> dbuf(32), 
  2446 ;;  fp              2   40[BANK0 ] PTR struct _IO_FILE
  2447 ;;		 -> sprintf@f(11), 
  2448 ;; Auto vars:     Size  Location     Type
  2449 ;;  i               2   43[BANK0 ] int 
  2450 ;;  c               1   42[BANK0 ] unsigned char 
  2451 ;; Return value:  Size  Location     Type
  2452 ;;                  2   38[BANK0 ] int 
  2453 ;; Registers used:
  2454 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2455 ;; Tracked objects:
  2456 ;;		On entry : 0/0
  2457 ;;		On exit  : 0/0
  2458 ;;		Unchanged: 0/0
  2459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2460 ;;      Params:         0       4       0       0       0       0       0       0       0
  2461 ;;      Locals:         0       3       0       0       0       0       0       0       0
  2462 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2463 ;;      Totals:         0       7       0       0       0       0       0       0       0
  2464 ;;Total ram usage:        7 bytes
  2465 ;; Hardware stack levels used: 1
  2466 ;; Hardware stack levels required when called: 11
  2467 ;; This function calls:
  2468 ;;		_fputc
  2469 ;; This function is called by:
  2470 ;;		_pad
  2471 ;; This function uses a non-reentrant model
  2472 ;;
  2473                           
  2474                           	psect	text7
  2475  002518                     __ptext7:
  2476                           	callstack 0
  2477  002518                     _fputs:
  2478                           	callstack 14
  2479  002518  0E00               	movlw	0
  2480  00251A  0100               	movlb	0	; () banked
  2481  00251C  6F8C               	movwf	(fputs@i+1)& (0+255),b
  2482  00251E  0E00               	movlw	0
  2483  002520  6F8B               	movwf	fputs@i& (0+255),b
  2484  002522  EF9F  F012         	goto	l3222
  2485  002526                     l3218:
  2486                           
  2487                           ; BSR set to: 0
  2488  002526  C08A  F07D         	movff	fputs@c,fputc@c
  2489  00252A  6B7E               	clrf	(fputc@c+1)& (0+255),b
  2490  00252C  C088  F07F         	movff	fputs@fp,fputc@fp
  2491  002530  C089  F080         	movff	fputs@fp+1,fputc@fp+1
  2492  002534  EC17  F00F         	call	_fputc	;wreg free
  2493  002538  0100               	movlb	0	; () banked
  2494  00253A  4B8B               	infsnz	fputs@i& (0+255),f,b
  2495  00253C  2B8C               	incf	(fputs@i+1)& (0+255),f,b
  2496  00253E                     l3222:
  2497                           
  2498                           ; BSR set to: 0
  2499  00253E  518B               	movf	fputs@i& (0+255),w,b
  2500  002540  2586               	addwf	fputs@s& (0+255),w,b
  2501  002542  6ED9               	movwf	fsr2l,c
  2502  002544  518C               	movf	(fputs@i+1)& (0+255),w,b
  2503  002546  2187               	addwfc	(fputs@s+1)& (0+255),w,b
  2504  002548  6EDA               	movwf	fsr2h,c
  2505  00254A  50DF               	movf	indf2,w,c
  2506  00254C  6F8A               	movwf	fputs@c& (0+255),b
  2507  00254E  518A               	movf	fputs@c& (0+255),w,b
  2508  002550  A4D8               	btfss	status,2,c
  2509  002552  EFAD  F012         	goto	u2631
  2510  002556  EFAF  F012         	goto	u2630
  2511  00255A                     u2631:
  2512  00255A  EF93  F012         	goto	l3218
  2513  00255E                     u2630:
  2514  00255E                     
  2515                           ; BSR set to: 0
  2516  00255E  0012               	return		;funcret
  2517  002560                     __end_of_fputs:
  2518                           	callstack 0
  2519                           
  2520 ;; *************** function _fputc *****************
  2521 ;; Defined at:
  2522 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputc.c"
  2523 ;; Parameters:    Size  Location     Type
  2524 ;;  c               2   29[BANK0 ] int 
  2525 ;;  fp              2   31[BANK0 ] PTR struct _IO_FILE
  2526 ;;		 -> sprintf@f(11), 
  2527 ;; Auto vars:     Size  Location     Type
  2528 ;;		None
  2529 ;; Return value:  Size  Location     Type
  2530 ;;                  2   29[BANK0 ] int 
  2531 ;; Registers used:
  2532 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2533 ;; Tracked objects:
  2534 ;;		On entry : 0/0
  2535 ;;		On exit  : 0/0
  2536 ;;		Unchanged: 0/0
  2537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2538 ;;      Params:         0       4       0       0       0       0       0       0       0
  2539 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2540 ;;      Temps:          0       5       0       0       0       0       0       0       0
  2541 ;;      Totals:         0       9       0       0       0       0       0       0       0
  2542 ;;Total ram usage:        9 bytes
  2543 ;; Hardware stack levels used: 1
  2544 ;; Hardware stack levels required when called: 10
  2545 ;; This function calls:
  2546 ;;		_putch
  2547 ;; This function is called by:
  2548 ;;		_pad
  2549 ;;		_vfpfcnvrt
  2550 ;;		_fputs
  2551 ;; This function uses a non-reentrant model
  2552 ;;
  2553                           
  2554                           	psect	text8
  2555  001E2E                     __ptext8:
  2556                           	callstack 0
  2557  001E2E                     _fputc:
  2558                           	callstack 17
  2559  001E2E  0100               	movlb	0	; () banked
  2560  001E30  517F               	movf	fputc@fp& (0+255),w,b
  2561  001E32  1180               	iorwf	(fputc@fp+1)& (0+255),w,b
  2562  001E34  B4D8               	btfsc	status,2,c
  2563  001E36  EF1F  F00F         	goto	u2591
  2564  001E3A  EF21  F00F         	goto	u2590
  2565  001E3E                     u2591:
  2566  001E3E  EF2A  F00F         	goto	l3206
  2567  001E42                     u2590:
  2568  001E42                     
  2569                           ; BSR set to: 0
  2570  001E42  517F               	movf	fputc@fp& (0+255),w,b
  2571  001E44  1180               	iorwf	(fputc@fp+1)& (0+255),w,b
  2572  001E46  A4D8               	btfss	status,2,c
  2573  001E48  EF28  F00F         	goto	u2601
  2574  001E4C  EF2A  F00F         	goto	u2600
  2575  001E50                     u2601:
  2576  001E50  EF2F  F00F         	goto	l3208
  2577  001E54                     u2600:
  2578  001E54                     l3206:
  2579                           
  2580                           ; BSR set to: 0
  2581  001E54  517D               	movf	fputc@c& (0+255),w,b
  2582  001E56  EC9C  F014         	call	_putch
  2583  001E5A  EF7C  F00F         	goto	l967
  2584  001E5E                     l3208:
  2585                           
  2586                           ; BSR set to: 0
  2587  001E5E  EE20 F009          	lfsr	2,9
  2588  001E62  517F               	movf	fputc@fp& (0+255),w,b
  2589  001E64  26D9               	addwf	fsr2l,f,c
  2590  001E66  5180               	movf	(fputc@fp+1)& (0+255),w,b
  2591  001E68  22DA               	addwfc	fsr2h,f,c
  2592  001E6A  50DE               	movf	postinc2,w,c
  2593  001E6C  10DE               	iorwf	postinc2,w,c
  2594  001E6E  B4D8               	btfsc	status,2,c
  2595  001E70  EF3C  F00F         	goto	u2611
  2596  001E74  EF3E  F00F         	goto	u2610
  2597  001E78                     u2611:
  2598  001E78  EF59  F00F         	goto	l3212
  2599  001E7C                     u2610:
  2600  001E7C                     
  2601                           ; BSR set to: 0
  2602  001E7C  EE20 F009          	lfsr	2,9
  2603  001E80  517F               	movf	fputc@fp& (0+255),w,b
  2604  001E82  26D9               	addwf	fsr2l,f,c
  2605  001E84  5180               	movf	(fputc@fp+1)& (0+255),w,b
  2606  001E86  22DA               	addwfc	fsr2h,f,c
  2607  001E88  EE10 F003          	lfsr	1,3
  2608  001E8C  517F               	movf	fputc@fp& (0+255),w,b
  2609  001E8E  26E1               	addwf	fsr1l,f,c
  2610  001E90  5180               	movf	(fputc@fp+1)& (0+255),w,b
  2611  001E92  22E2               	addwfc	fsr1h,f,c
  2612  001E94  50DE               	movf	postinc2,w,c
  2613  001E96  5CE6               	subwf	postinc1,w,c
  2614  001E98  50E6               	movf	postinc1,w,c
  2615  001E9A  0A80               	xorlw	128
  2616  001E9C  6F85               	movwf	(??_fputc+4)& (0+255),b
  2617  001E9E  50DE               	movf	postinc2,w,c
  2618  001EA0  0A80               	xorlw	128
  2619  001EA2  5985               	subwfb	(??_fputc+4)& (0+255),w,b
  2620  001EA4  B0D8               	btfsc	status,0,c
  2621  001EA6  EF57  F00F         	goto	u2621
  2622  001EAA  EF59  F00F         	goto	u2620
  2623  001EAE                     u2621:
  2624  001EAE  EF7C  F00F         	goto	l967
  2625  001EB2                     u2620:
  2626  001EB2                     l3212:
  2627                           
  2628                           ; BSR set to: 0
  2629  001EB2  EE20 F003          	lfsr	2,3
  2630  001EB6  517F               	movf	fputc@fp& (0+255),w,b
  2631  001EB8  26D9               	addwf	fsr2l,f,c
  2632  001EBA  5180               	movf	(fputc@fp+1)& (0+255),w,b
  2633  001EBC  22DA               	addwfc	fsr2h,f,c
  2634  001EBE  CFDE F081          	movff	postinc2,??_fputc
  2635  001EC2  CFDD F082          	movff	postdec2,??_fputc+1
  2636  001EC6  C07F  FFD9         	movff	fputc@fp,fsr2l
  2637  001ECA  C080  FFDA         	movff	fputc@fp+1,fsr2h
  2638  001ECE  CFDE F083          	movff	postinc2,??_fputc+2
  2639  001ED2  CFDD F084          	movff	postdec2,??_fputc+3
  2640  001ED6  5181               	movf	??_fputc& (0+255),w,b
  2641  001ED8  2583               	addwf	(??_fputc+2)& (0+255),w,b
  2642  001EDA  6ED9               	movwf	fsr2l,c
  2643  001EDC  5182               	movf	(??_fputc+1)& (0+255),w,b
  2644  001EDE  2184               	addwfc	(??_fputc+3)& (0+255),w,b
  2645  001EE0  6EDA               	movwf	fsr2h,c
  2646  001EE2  C07D  FFDF         	movff	fputc@c,indf2
  2647  001EE6  EE20 F003          	lfsr	2,3
  2648  001EEA  517F               	movf	fputc@fp& (0+255),w,b
  2649  001EEC  26D9               	addwf	fsr2l,f,c
  2650  001EEE  5180               	movf	(fputc@fp+1)& (0+255),w,b
  2651  001EF0  22DA               	addwfc	fsr2h,f,c
  2652  001EF2  2ADE               	incf	postinc2,f,c
  2653  001EF4  0E00               	movlw	0
  2654  001EF6  22DD               	addwfc	postdec2,f,c
  2655  001EF8                     l967:
  2656  001EF8  0012               	return		;funcret
  2657  001EFA                     __end_of_fputc:
  2658                           	callstack 0
  2659                           
  2660 ;; *************** function _putch *****************
  2661 ;; Defined at:
  2662 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\putch.c"
  2663 ;; Parameters:    Size  Location     Type
  2664 ;;  c               1    wreg     unsigned char 
  2665 ;; Auto vars:     Size  Location     Type
  2666 ;;  c               1    0[COMRAM] unsigned char 
  2667 ;; Return value:  Size  Location     Type
  2668 ;;                  1    wreg      void 
  2669 ;; Registers used:
  2670 ;;		wreg
  2671 ;; Tracked objects:
  2672 ;;		On entry : 0/0
  2673 ;;		On exit  : 0/0
  2674 ;;		Unchanged: 0/0
  2675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2676 ;;      Params:         0       0       0       0       0       0       0       0       0
  2677 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2678 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2679 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2680 ;;Total ram usage:        0 bytes
  2681 ;; Hardware stack levels used: 1
  2682 ;; Hardware stack levels required when called: 9
  2683 ;; This function calls:
  2684 ;;		Nothing
  2685 ;; This function is called by:
  2686 ;;		_fputc
  2687 ;; This function uses a non-reentrant model
  2688 ;;
  2689                           
  2690                           	psect	text9
  2691  002938                     __ptext9:
  2692                           	callstack 0
  2693  002938                     _putch:
  2694                           	callstack 17
  2695  002938  0012               	return		;funcret
  2696  00293A                     __end_of_putch:
  2697                           	callstack 0
  2698                           
  2699 ;; *************** function _abs *****************
  2700 ;; Defined at:
  2701 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\abs.c"
  2702 ;; Parameters:    Size  Location     Type
  2703 ;;  a               2   47[BANK0 ] int 
  2704 ;; Auto vars:     Size  Location     Type
  2705 ;;		None
  2706 ;; Return value:  Size  Location     Type
  2707 ;;                  2   47[BANK0 ] int 
  2708 ;; Registers used:
  2709 ;;		wreg, status,2, status,0
  2710 ;; Tracked objects:
  2711 ;;		On entry : 0/0
  2712 ;;		On exit  : 0/0
  2713 ;;		Unchanged: 0/0
  2714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2715 ;;      Params:         0       2       0       0       0       0       0       0       0
  2716 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2717 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2718 ;;      Totals:         0       4       0       0       0       0       0       0       0
  2719 ;;Total ram usage:        4 bytes
  2720 ;; Hardware stack levels used: 1
  2721 ;; Hardware stack levels required when called: 9
  2722 ;; This function calls:
  2723 ;;		Nothing
  2724 ;; This function is called by:
  2725 ;;		_dtoa
  2726 ;; This function uses a non-reentrant model
  2727 ;;
  2728                           
  2729                           	psect	text10
  2730  00262C                     __ptext10:
  2731                           	callstack 0
  2732  00262C                     _abs:
  2733                           	callstack 17
  2734  00262C  0100               	movlb	0	; () banked
  2735  00262E  BF90               	btfsc	(abs@a+1)& (0+255),7,b
  2736  002630  EF24  F013         	goto	u2820
  2737  002634  5190               	movf	(abs@a+1)& (0+255),w,b
  2738  002636  E106               	bnz	u2821
  2739  002638  058F               	decf	abs@a& (0+255),w,b
  2740  00263A  B0D8               	btfsc	status,0,c
  2741  00263C  EF22  F013         	goto	u2821
  2742  002640  EF24  F013         	goto	u2820
  2743  002644                     u2821:
  2744  002644  EF32  F013         	goto	l913
  2745  002648                     u2820:
  2746  002648                     
  2747                           ; BSR set to: 0
  2748  002648  C08F  F091         	movff	abs@a,??_abs
  2749  00264C  C090  F092         	movff	abs@a+1,??_abs+1
  2750  002650  1F91               	comf	??_abs& (0+255),f,b
  2751  002652  1F92               	comf	(??_abs+1)& (0+255),f,b
  2752  002654  4B91               	infsnz	??_abs& (0+255),f,b
  2753  002656  2B92               	incf	(??_abs+1)& (0+255),f,b
  2754  002658  C091  F08F         	movff	??_abs,?_abs
  2755  00265C  C092  F090         	movff	??_abs+1,?_abs+1
  2756  002660  EF36  F013         	goto	l916
  2757  002664                     l913:
  2758                           
  2759                           ; BSR set to: 0
  2760  002664  C08F  F08F         	movff	abs@a,?_abs
  2761  002668  C090  F090         	movff	abs@a+1,?_abs+1
  2762  00266C                     l916:
  2763                           
  2764                           ; BSR set to: 0
  2765  00266C  0012               	return		;funcret
  2766  00266E                     __end_of_abs:
  2767                           	callstack 0
  2768                           
  2769 ;; *************** function ___aomod *****************
  2770 ;; Defined at:
  2771 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aomod.c"
  2772 ;; Parameters:    Size  Location     Type
  2773 ;;  dividend        8   29[BANK0 ] long long 
  2774 ;;  divisor         8   37[BANK0 ] long long 
  2775 ;; Auto vars:     Size  Location     Type
  2776 ;;  sign            1   46[BANK0 ] unsigned char 
  2777 ;;  counter         1   45[BANK0 ] unsigned char 
  2778 ;; Return value:  Size  Location     Type
  2779 ;;                  8   29[BANK0 ] long long 
  2780 ;; Registers used:
  2781 ;;		wreg, status,2, status,0
  2782 ;; Tracked objects:
  2783 ;;		On entry : 0/0
  2784 ;;		On exit  : 0/0
  2785 ;;		Unchanged: 0/0
  2786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2787 ;;      Params:         0      16       0       0       0       0       0       0       0
  2788 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2789 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2790 ;;      Totals:         0      18       0       0       0       0       0       0       0
  2791 ;;Total ram usage:       18 bytes
  2792 ;; Hardware stack levels used: 1
  2793 ;; Hardware stack levels required when called: 9
  2794 ;; This function calls:
  2795 ;;		Nothing
  2796 ;; This function is called by:
  2797 ;;		_dtoa
  2798 ;; This function uses a non-reentrant model
  2799 ;;
  2800                           
  2801                           	psect	text11
  2802  0017B4                     __ptext11:
  2803                           	callstack 0
  2804  0017B4                     ___aomod:
  2805                           	callstack 17
  2806  0017B4  0E00               	movlw	0
  2807  0017B6  0100               	movlb	0	; () banked
  2808  0017B8  6F8E               	movwf	___aomod@sign& (0+255),b
  2809  0017BA                     
  2810                           ; BSR set to: 0
  2811  0017BA  BF84               	btfsc	(___aomod@dividend+7)& (0+255),7,b
  2812  0017BC  EFE4  F00B         	goto	u2720
  2813  0017C0  EFE2  F00B         	goto	u2721
  2814  0017C4                     u2721:
  2815  0017C4  EFF6  F00B         	goto	l3292
  2816  0017C8                     u2720:
  2817  0017C8                     
  2818                           ; BSR set to: 0
  2819  0017C8  1F84               	comf	(___aomod@dividend+7)& (0+255),f,b
  2820  0017CA  1F83               	comf	(___aomod@dividend+6)& (0+255),f,b
  2821  0017CC  1F82               	comf	(___aomod@dividend+5)& (0+255),f,b
  2822  0017CE  1F81               	comf	(___aomod@dividend+4)& (0+255),f,b
  2823  0017D0  1F80               	comf	(___aomod@dividend+3)& (0+255),f,b
  2824  0017D2  1F7F               	comf	(___aomod@dividend+2)& (0+255),f,b
  2825  0017D4  1F7E               	comf	(___aomod@dividend+1)& (0+255),f,b
  2826  0017D6  6D7D               	negf	___aomod@dividend& (0+255),b
  2827  0017D8  0E00               	movlw	0
  2828  0017DA  237E               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  2829  0017DC  237F               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  2830  0017DE  2380               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  2831  0017E0  2381               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  2832  0017E2  2382               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  2833  0017E4  2383               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  2834  0017E6  2384               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  2835  0017E8                     
  2836                           ; BSR set to: 0
  2837  0017E8  0E01               	movlw	1
  2838  0017EA  6F8E               	movwf	___aomod@sign& (0+255),b
  2839  0017EC                     l3292:
  2840                           
  2841                           ; BSR set to: 0
  2842  0017EC  BF8C               	btfsc	(___aomod@divisor+7)& (0+255),7,b
  2843  0017EE  EFFD  F00B         	goto	u2730
  2844  0017F2  EFFB  F00B         	goto	u2731
  2845  0017F6                     u2731:
  2846  0017F6  EF0D  F00C         	goto	l3296
  2847  0017FA                     u2730:
  2848  0017FA                     
  2849                           ; BSR set to: 0
  2850  0017FA  1F8C               	comf	(___aomod@divisor+7)& (0+255),f,b
  2851  0017FC  1F8B               	comf	(___aomod@divisor+6)& (0+255),f,b
  2852  0017FE  1F8A               	comf	(___aomod@divisor+5)& (0+255),f,b
  2853  001800  1F89               	comf	(___aomod@divisor+4)& (0+255),f,b
  2854  001802  1F88               	comf	(___aomod@divisor+3)& (0+255),f,b
  2855  001804  1F87               	comf	(___aomod@divisor+2)& (0+255),f,b
  2856  001806  1F86               	comf	(___aomod@divisor+1)& (0+255),f,b
  2857  001808  6D85               	negf	___aomod@divisor& (0+255),b
  2858  00180A  0E00               	movlw	0
  2859  00180C  2386               	addwfc	(___aomod@divisor+1)& (0+255),f,b
  2860  00180E  2387               	addwfc	(___aomod@divisor+2)& (0+255),f,b
  2861  001810  2388               	addwfc	(___aomod@divisor+3)& (0+255),f,b
  2862  001812  2389               	addwfc	(___aomod@divisor+4)& (0+255),f,b
  2863  001814  238A               	addwfc	(___aomod@divisor+5)& (0+255),f,b
  2864  001816  238B               	addwfc	(___aomod@divisor+6)& (0+255),f,b
  2865  001818  238C               	addwfc	(___aomod@divisor+7)& (0+255),f,b
  2866  00181A                     l3296:
  2867                           
  2868                           ; BSR set to: 0
  2869  00181A  5185               	movf	___aomod@divisor& (0+255),w,b
  2870  00181C  1186               	iorwf	(___aomod@divisor+1)& (0+255),w,b
  2871  00181E  1187               	iorwf	(___aomod@divisor+2)& (0+255),w,b
  2872  001820  1188               	iorwf	(___aomod@divisor+3)& (0+255),w,b
  2873  001822  1189               	iorwf	(___aomod@divisor+4)& (0+255),w,b
  2874  001824  118A               	iorwf	(___aomod@divisor+5)& (0+255),w,b
  2875  001826  118B               	iorwf	(___aomod@divisor+6)& (0+255),w,b
  2876  001828  118C               	iorwf	(___aomod@divisor+7)& (0+255),w,b
  2877  00182A  B4D8               	btfsc	status,2,c
  2878  00182C  EF1A  F00C         	goto	u2741
  2879  001830  EF1C  F00C         	goto	u2740
  2880  001834                     u2741:
  2881  001834  EF64  F00C         	goto	l3312
  2882  001838                     u2740:
  2883  001838                     
  2884                           ; BSR set to: 0
  2885  001838  0E01               	movlw	1
  2886  00183A  6F8D               	movwf	___aomod@counter& (0+255),b
  2887  00183C  EF2A  F00C         	goto	l3302
  2888  001840                     l3300:
  2889                           
  2890                           ; BSR set to: 0
  2891  001840  90D8               	bcf	status,0,c
  2892  001842  3785               	rlcf	___aomod@divisor& (0+255),f,b
  2893  001844  3786               	rlcf	(___aomod@divisor+1)& (0+255),f,b
  2894  001846  3787               	rlcf	(___aomod@divisor+2)& (0+255),f,b
  2895  001848  3788               	rlcf	(___aomod@divisor+3)& (0+255),f,b
  2896  00184A  3789               	rlcf	(___aomod@divisor+4)& (0+255),f,b
  2897  00184C  378A               	rlcf	(___aomod@divisor+5)& (0+255),f,b
  2898  00184E  378B               	rlcf	(___aomod@divisor+6)& (0+255),f,b
  2899  001850  378C               	rlcf	(___aomod@divisor+7)& (0+255),f,b
  2900  001852  2B8D               	incf	___aomod@counter& (0+255),f,b
  2901  001854                     l3302:
  2902                           
  2903                           ; BSR set to: 0
  2904  001854  AF8C               	btfss	(___aomod@divisor+7)& (0+255),7,b
  2905  001856  EF2F  F00C         	goto	u2751
  2906  00185A  EF31  F00C         	goto	u2750
  2907  00185E                     u2751:
  2908  00185E  EF20  F00C         	goto	l3300
  2909  001862                     u2750:
  2910  001862                     l3304:
  2911                           
  2912                           ; BSR set to: 0
  2913  001862  5185               	movf	___aomod@divisor& (0+255),w,b
  2914  001864  5D7D               	subwf	___aomod@dividend& (0+255),w,b
  2915  001866  5186               	movf	(___aomod@divisor+1)& (0+255),w,b
  2916  001868  597E               	subwfb	(___aomod@dividend+1)& (0+255),w,b
  2917  00186A  5187               	movf	(___aomod@divisor+2)& (0+255),w,b
  2918  00186C  597F               	subwfb	(___aomod@dividend+2)& (0+255),w,b
  2919  00186E  5188               	movf	(___aomod@divisor+3)& (0+255),w,b
  2920  001870  5980               	subwfb	(___aomod@dividend+3)& (0+255),w,b
  2921  001872  5189               	movf	(___aomod@divisor+4)& (0+255),w,b
  2922  001874  5981               	subwfb	(___aomod@dividend+4)& (0+255),w,b
  2923  001876  518A               	movf	(___aomod@divisor+5)& (0+255),w,b
  2924  001878  5982               	subwfb	(___aomod@dividend+5)& (0+255),w,b
  2925  00187A  518B               	movf	(___aomod@divisor+6)& (0+255),w,b
  2926  00187C  5983               	subwfb	(___aomod@dividend+6)& (0+255),w,b
  2927  00187E  518C               	movf	(___aomod@divisor+7)& (0+255),w,b
  2928  001880  5984               	subwfb	(___aomod@dividend+7)& (0+255),w,b
  2929  001882  A0D8               	btfss	status,0,c
  2930  001884  EF46  F00C         	goto	u2761
  2931  001888  EF48  F00C         	goto	u2760
  2932  00188C                     u2761:
  2933  00188C  EF58  F00C         	goto	l3308
  2934  001890                     u2760:
  2935  001890                     
  2936                           ; BSR set to: 0
  2937  001890  5185               	movf	___aomod@divisor& (0+255),w,b
  2938  001892  5F7D               	subwf	___aomod@dividend& (0+255),f,b
  2939  001894  5186               	movf	(___aomod@divisor+1)& (0+255),w,b
  2940  001896  5B7E               	subwfb	(___aomod@dividend+1)& (0+255),f,b
  2941  001898  5187               	movf	(___aomod@divisor+2)& (0+255),w,b
  2942  00189A  5B7F               	subwfb	(___aomod@dividend+2)& (0+255),f,b
  2943  00189C  5188               	movf	(___aomod@divisor+3)& (0+255),w,b
  2944  00189E  5B80               	subwfb	(___aomod@dividend+3)& (0+255),f,b
  2945  0018A0  5189               	movf	(___aomod@divisor+4)& (0+255),w,b
  2946  0018A2  5B81               	subwfb	(___aomod@dividend+4)& (0+255),f,b
  2947  0018A4  518A               	movf	(___aomod@divisor+5)& (0+255),w,b
  2948  0018A6  5B82               	subwfb	(___aomod@dividend+5)& (0+255),f,b
  2949  0018A8  518B               	movf	(___aomod@divisor+6)& (0+255),w,b
  2950  0018AA  5B83               	subwfb	(___aomod@dividend+6)& (0+255),f,b
  2951  0018AC  518C               	movf	(___aomod@divisor+7)& (0+255),w,b
  2952  0018AE  5B84               	subwfb	(___aomod@dividend+7)& (0+255),f,b
  2953  0018B0                     l3308:
  2954                           
  2955                           ; BSR set to: 0
  2956  0018B0  90D8               	bcf	status,0,c
  2957  0018B2  338C               	rrcf	(___aomod@divisor+7)& (0+255),f,b
  2958  0018B4  338B               	rrcf	(___aomod@divisor+6)& (0+255),f,b
  2959  0018B6  338A               	rrcf	(___aomod@divisor+5)& (0+255),f,b
  2960  0018B8  3389               	rrcf	(___aomod@divisor+4)& (0+255),f,b
  2961  0018BA  3388               	rrcf	(___aomod@divisor+3)& (0+255),f,b
  2962  0018BC  3387               	rrcf	(___aomod@divisor+2)& (0+255),f,b
  2963  0018BE  3386               	rrcf	(___aomod@divisor+1)& (0+255),f,b
  2964  0018C0  3385               	rrcf	___aomod@divisor& (0+255),f,b
  2965  0018C2                     
  2966                           ; BSR set to: 0
  2967  0018C2  2F8D               	decfsz	___aomod@counter& (0+255),f,b
  2968  0018C4  EF31  F00C         	goto	l3304
  2969  0018C8                     l3312:
  2970                           
  2971                           ; BSR set to: 0
  2972  0018C8  518E               	movf	___aomod@sign& (0+255),w,b
  2973  0018CA  B4D8               	btfsc	status,2,c
  2974  0018CC  EF6A  F00C         	goto	u2771
  2975  0018D0  EF6C  F00C         	goto	u2770
  2976  0018D4                     u2771:
  2977  0018D4  EF7C  F00C         	goto	l3316
  2978  0018D8                     u2770:
  2979  0018D8                     
  2980                           ; BSR set to: 0
  2981  0018D8  1F84               	comf	(___aomod@dividend+7)& (0+255),f,b
  2982  0018DA  1F83               	comf	(___aomod@dividend+6)& (0+255),f,b
  2983  0018DC  1F82               	comf	(___aomod@dividend+5)& (0+255),f,b
  2984  0018DE  1F81               	comf	(___aomod@dividend+4)& (0+255),f,b
  2985  0018E0  1F80               	comf	(___aomod@dividend+3)& (0+255),f,b
  2986  0018E2  1F7F               	comf	(___aomod@dividend+2)& (0+255),f,b
  2987  0018E4  1F7E               	comf	(___aomod@dividend+1)& (0+255),f,b
  2988  0018E6  6D7D               	negf	___aomod@dividend& (0+255),b
  2989  0018E8  0E00               	movlw	0
  2990  0018EA  237E               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  2991  0018EC  237F               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  2992  0018EE  2380               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  2993  0018F0  2381               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  2994  0018F2  2382               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  2995  0018F4  2383               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  2996  0018F6  2384               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  2997  0018F8                     l3316:
  2998                           
  2999                           ; BSR set to: 0
  3000  0018F8  C07D  F07D         	movff	___aomod@dividend,?___aomod
  3001  0018FC  C07E  F07E         	movff	___aomod@dividend+1,?___aomod+1
  3002  001900  C07F  F07F         	movff	___aomod@dividend+2,?___aomod+2
  3003  001904  C080  F080         	movff	___aomod@dividend+3,?___aomod+3
  3004  001908  C081  F081         	movff	___aomod@dividend+4,?___aomod+4
  3005  00190C  C082  F082         	movff	___aomod@dividend+5,?___aomod+5
  3006  001910  C083  F083         	movff	___aomod@dividend+6,?___aomod+6
  3007  001914  C084  F084         	movff	___aomod@dividend+7,?___aomod+7
  3008  001918                     
  3009                           ; BSR set to: 0
  3010  001918  0012               	return		;funcret
  3011  00191A                     __end_of___aomod:
  3012                           	callstack 0
  3013                           
  3014 ;; *************** function ___aodiv *****************
  3015 ;; Defined at:
  3016 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aodiv.c"
  3017 ;; Parameters:    Size  Location     Type
  3018 ;;  dividend        8   29[BANK0 ] long long 
  3019 ;;  divisor         8   37[BANK0 ] long long 
  3020 ;; Auto vars:     Size  Location     Type
  3021 ;;  quotient        8   47[BANK0 ] long long 
  3022 ;;  sign            1   46[BANK0 ] unsigned char 
  3023 ;;  counter         1   45[BANK0 ] unsigned char 
  3024 ;; Return value:  Size  Location     Type
  3025 ;;                  8   29[BANK0 ] long long 
  3026 ;; Registers used:
  3027 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3028 ;; Tracked objects:
  3029 ;;		On entry : 0/0
  3030 ;;		On exit  : 0/0
  3031 ;;		Unchanged: 0/0
  3032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3033 ;;      Params:         0      16       0       0       0       0       0       0       0
  3034 ;;      Locals:         0      10       0       0       0       0       0       0       0
  3035 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3036 ;;      Totals:         0      26       0       0       0       0       0       0       0
  3037 ;;Total ram usage:       26 bytes
  3038 ;; Hardware stack levels used: 1
  3039 ;; Hardware stack levels required when called: 9
  3040 ;; This function calls:
  3041 ;;		Nothing
  3042 ;; This function is called by:
  3043 ;;		_dtoa
  3044 ;; This function uses a non-reentrant model
  3045 ;;
  3046                           
  3047                           	psect	text12
  3048  0014A2                     __ptext12:
  3049                           	callstack 0
  3050  0014A2                     ___aodiv:
  3051                           	callstack 17
  3052  0014A2  0E00               	movlw	0
  3053  0014A4  0100               	movlb	0	; () banked
  3054  0014A6  6F8E               	movwf	___aodiv@sign& (0+255),b
  3055  0014A8                     
  3056                           ; BSR set to: 0
  3057  0014A8  BF8C               	btfsc	(___aodiv@divisor+7)& (0+255),7,b
  3058  0014AA  EF5B  F00A         	goto	u2650
  3059  0014AE  EF59  F00A         	goto	u2651
  3060  0014B2                     u2651:
  3061  0014B2  EF6D  F00A         	goto	l3248
  3062  0014B6                     u2650:
  3063  0014B6                     
  3064                           ; BSR set to: 0
  3065  0014B6  1F8C               	comf	(___aodiv@divisor+7)& (0+255),f,b
  3066  0014B8  1F8B               	comf	(___aodiv@divisor+6)& (0+255),f,b
  3067  0014BA  1F8A               	comf	(___aodiv@divisor+5)& (0+255),f,b
  3068  0014BC  1F89               	comf	(___aodiv@divisor+4)& (0+255),f,b
  3069  0014BE  1F88               	comf	(___aodiv@divisor+3)& (0+255),f,b
  3070  0014C0  1F87               	comf	(___aodiv@divisor+2)& (0+255),f,b
  3071  0014C2  1F86               	comf	(___aodiv@divisor+1)& (0+255),f,b
  3072  0014C4  6D85               	negf	___aodiv@divisor& (0+255),b
  3073  0014C6  0E00               	movlw	0
  3074  0014C8  2386               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
  3075  0014CA  2387               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
  3076  0014CC  2388               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
  3077  0014CE  2389               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
  3078  0014D0  238A               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
  3079  0014D2  238B               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
  3080  0014D4  238C               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
  3081  0014D6                     
  3082                           ; BSR set to: 0
  3083  0014D6  0E01               	movlw	1
  3084  0014D8  6F8E               	movwf	___aodiv@sign& (0+255),b
  3085  0014DA                     l3248:
  3086                           
  3087                           ; BSR set to: 0
  3088  0014DA  BF84               	btfsc	(___aodiv@dividend+7)& (0+255),7,b
  3089  0014DC  EF74  F00A         	goto	u2660
  3090  0014E0  EF72  F00A         	goto	u2661
  3091  0014E4                     u2661:
  3092  0014E4  EF86  F00A         	goto	l3254
  3093  0014E8                     u2660:
  3094  0014E8                     
  3095                           ; BSR set to: 0
  3096  0014E8  1F84               	comf	(___aodiv@dividend+7)& (0+255),f,b
  3097  0014EA  1F83               	comf	(___aodiv@dividend+6)& (0+255),f,b
  3098  0014EC  1F82               	comf	(___aodiv@dividend+5)& (0+255),f,b
  3099  0014EE  1F81               	comf	(___aodiv@dividend+4)& (0+255),f,b
  3100  0014F0  1F80               	comf	(___aodiv@dividend+3)& (0+255),f,b
  3101  0014F2  1F7F               	comf	(___aodiv@dividend+2)& (0+255),f,b
  3102  0014F4  1F7E               	comf	(___aodiv@dividend+1)& (0+255),f,b
  3103  0014F6  6D7D               	negf	___aodiv@dividend& (0+255),b
  3104  0014F8  0E00               	movlw	0
  3105  0014FA  237E               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
  3106  0014FC  237F               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
  3107  0014FE  2380               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
  3108  001500  2381               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
  3109  001502  2382               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
  3110  001504  2383               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
  3111  001506  2384               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
  3112  001508                     
  3113                           ; BSR set to: 0
  3114  001508  0E01               	movlw	1
  3115  00150A  1B8E               	xorwf	___aodiv@sign& (0+255),f,b
  3116  00150C                     l3254:
  3117                           
  3118                           ; BSR set to: 0
  3119  00150C  EE20  F08F         	lfsr	2,___aodiv@quotient
  3120  001510  0E07               	movlw	7
  3121  001512                     u2671:
  3122  001512  6ADE               	clrf	postinc2,c
  3123  001514  06E8               	decf	wreg,f,c
  3124  001516  E2FD               	bc	u2671
  3125  001518                     
  3126                           ; BSR set to: 0
  3127  001518  5185               	movf	___aodiv@divisor& (0+255),w,b
  3128  00151A  1186               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
  3129  00151C  1187               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
  3130  00151E  1188               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
  3131  001520  1189               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
  3132  001522  118A               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
  3133  001524  118B               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
  3134  001526  118C               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
  3135  001528  B4D8               	btfsc	status,2,c
  3136  00152A  EF99  F00A         	goto	u2681
  3137  00152E  EF9B  F00A         	goto	u2680
  3138  001532                     u2681:
  3139  001532  EFED  F00A         	goto	l3276
  3140  001536                     u2680:
  3141  001536                     
  3142                           ; BSR set to: 0
  3143  001536  0E01               	movlw	1
  3144  001538  6F8D               	movwf	___aodiv@counter& (0+255),b
  3145  00153A  EFA9  F00A         	goto	l3262
  3146  00153E                     l3260:
  3147                           
  3148                           ; BSR set to: 0
  3149  00153E  90D8               	bcf	status,0,c
  3150  001540  3785               	rlcf	___aodiv@divisor& (0+255),f,b
  3151  001542  3786               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
  3152  001544  3787               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
  3153  001546  3788               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
  3154  001548  3789               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
  3155  00154A  378A               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
  3156  00154C  378B               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
  3157  00154E  378C               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
  3158  001550  2B8D               	incf	___aodiv@counter& (0+255),f,b
  3159  001552                     l3262:
  3160                           
  3161                           ; BSR set to: 0
  3162  001552  AF8C               	btfss	(___aodiv@divisor+7)& (0+255),7,b
  3163  001554  EFAE  F00A         	goto	u2691
  3164  001558  EFB0  F00A         	goto	u2690
  3165  00155C                     u2691:
  3166  00155C  EF9F  F00A         	goto	l3260
  3167  001560                     u2690:
  3168  001560                     l3264:
  3169                           
  3170                           ; BSR set to: 0
  3171  001560  90D8               	bcf	status,0,c
  3172  001562  378F               	rlcf	___aodiv@quotient& (0+255),f,b
  3173  001564  3790               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
  3174  001566  3791               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
  3175  001568  3792               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
  3176  00156A  3793               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
  3177  00156C  3794               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
  3178  00156E  3795               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
  3179  001570  3796               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
  3180  001572                     
  3181                           ; BSR set to: 0
  3182  001572  5185               	movf	___aodiv@divisor& (0+255),w,b
  3183  001574  5D7D               	subwf	___aodiv@dividend& (0+255),w,b
  3184  001576  5186               	movf	(___aodiv@divisor+1)& (0+255),w,b
  3185  001578  597E               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
  3186  00157A  5187               	movf	(___aodiv@divisor+2)& (0+255),w,b
  3187  00157C  597F               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
  3188  00157E  5188               	movf	(___aodiv@divisor+3)& (0+255),w,b
  3189  001580  5980               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
  3190  001582  5189               	movf	(___aodiv@divisor+4)& (0+255),w,b
  3191  001584  5981               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
  3192  001586  518A               	movf	(___aodiv@divisor+5)& (0+255),w,b
  3193  001588  5982               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
  3194  00158A  518B               	movf	(___aodiv@divisor+6)& (0+255),w,b
  3195  00158C  5983               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
  3196  00158E  518C               	movf	(___aodiv@divisor+7)& (0+255),w,b
  3197  001590  5984               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
  3198  001592  A0D8               	btfss	status,0,c
  3199  001594  EFCE  F00A         	goto	u2701
  3200  001598  EFD0  F00A         	goto	u2700
  3201  00159C                     u2701:
  3202  00159C  EFE1  F00A         	goto	l3272
  3203  0015A0                     u2700:
  3204  0015A0                     
  3205                           ; BSR set to: 0
  3206  0015A0  5185               	movf	___aodiv@divisor& (0+255),w,b
  3207  0015A2  5F7D               	subwf	___aodiv@dividend& (0+255),f,b
  3208  0015A4  5186               	movf	(___aodiv@divisor+1)& (0+255),w,b
  3209  0015A6  5B7E               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
  3210  0015A8  5187               	movf	(___aodiv@divisor+2)& (0+255),w,b
  3211  0015AA  5B7F               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
  3212  0015AC  5188               	movf	(___aodiv@divisor+3)& (0+255),w,b
  3213  0015AE  5B80               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
  3214  0015B0  5189               	movf	(___aodiv@divisor+4)& (0+255),w,b
  3215  0015B2  5B81               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
  3216  0015B4  518A               	movf	(___aodiv@divisor+5)& (0+255),w,b
  3217  0015B6  5B82               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
  3218  0015B8  518B               	movf	(___aodiv@divisor+6)& (0+255),w,b
  3219  0015BA  5B83               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
  3220  0015BC  518C               	movf	(___aodiv@divisor+7)& (0+255),w,b
  3221  0015BE  5B84               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
  3222  0015C0                     
  3223                           ; BSR set to: 0
  3224  0015C0  818F               	bsf	___aodiv@quotient& (0+255),0,b
  3225  0015C2                     l3272:
  3226                           
  3227                           ; BSR set to: 0
  3228  0015C2  90D8               	bcf	status,0,c
  3229  0015C4  338C               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
  3230  0015C6  338B               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
  3231  0015C8  338A               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
  3232  0015CA  3389               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
  3233  0015CC  3388               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
  3234  0015CE  3387               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
  3235  0015D0  3386               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
  3236  0015D2  3385               	rrcf	___aodiv@divisor& (0+255),f,b
  3237  0015D4                     
  3238                           ; BSR set to: 0
  3239  0015D4  2F8D               	decfsz	___aodiv@counter& (0+255),f,b
  3240  0015D6  EFB0  F00A         	goto	l3264
  3241  0015DA                     l3276:
  3242                           
  3243                           ; BSR set to: 0
  3244  0015DA  518E               	movf	___aodiv@sign& (0+255),w,b
  3245  0015DC  B4D8               	btfsc	status,2,c
  3246  0015DE  EFF3  F00A         	goto	u2711
  3247  0015E2  EFF5  F00A         	goto	u2710
  3248  0015E6                     u2711:
  3249  0015E6  EF05  F00B         	goto	l3280
  3250  0015EA                     u2710:
  3251  0015EA                     
  3252                           ; BSR set to: 0
  3253  0015EA  1F96               	comf	(___aodiv@quotient+7)& (0+255),f,b
  3254  0015EC  1F95               	comf	(___aodiv@quotient+6)& (0+255),f,b
  3255  0015EE  1F94               	comf	(___aodiv@quotient+5)& (0+255),f,b
  3256  0015F0  1F93               	comf	(___aodiv@quotient+4)& (0+255),f,b
  3257  0015F2  1F92               	comf	(___aodiv@quotient+3)& (0+255),f,b
  3258  0015F4  1F91               	comf	(___aodiv@quotient+2)& (0+255),f,b
  3259  0015F6  1F90               	comf	(___aodiv@quotient+1)& (0+255),f,b
  3260  0015F8  6D8F               	negf	___aodiv@quotient& (0+255),b
  3261  0015FA  0E00               	movlw	0
  3262  0015FC  2390               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
  3263  0015FE  2391               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
  3264  001600  2392               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
  3265  001602  2393               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
  3266  001604  2394               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
  3267  001606  2395               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
  3268  001608  2396               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
  3269  00160A                     l3280:
  3270                           
  3271                           ; BSR set to: 0
  3272  00160A  C08F  F07D         	movff	___aodiv@quotient,?___aodiv
  3273  00160E  C090  F07E         	movff	___aodiv@quotient+1,?___aodiv+1
  3274  001612  C091  F07F         	movff	___aodiv@quotient+2,?___aodiv+2
  3275  001616  C092  F080         	movff	___aodiv@quotient+3,?___aodiv+3
  3276  00161A  C093  F081         	movff	___aodiv@quotient+4,?___aodiv+4
  3277  00161E  C094  F082         	movff	___aodiv@quotient+5,?___aodiv+5
  3278  001622  C095  F083         	movff	___aodiv@quotient+6,?___aodiv+6
  3279  001626  C096  F084         	movff	___aodiv@quotient+7,?___aodiv+7
  3280  00162A                     
  3281                           ; BSR set to: 0
  3282  00162A  0012               	return		;funcret
  3283  00162C                     __end_of___aodiv:
  3284                           	callstack 0
  3285                           
  3286 ;; *************** function _atoi *****************
  3287 ;; Defined at:
  3288 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\atoi.c"
  3289 ;; Parameters:    Size  Location     Type
  3290 ;;  s               2   36[BANK0 ] PTR const unsigned char 
  3291 ;;		 -> STR_4(14), STR_3(11), STR_2(14), STR_1(11), 
  3292 ;; Auto vars:     Size  Location     Type
  3293 ;;  n               2   44[BANK0 ] int 
  3294 ;;  neg             2   42[BANK0 ] int 
  3295 ;; Return value:  Size  Location     Type
  3296 ;;                  2   36[BANK0 ] int 
  3297 ;; Registers used:
  3298 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3299 ;; Tracked objects:
  3300 ;;		On entry : 0/0
  3301 ;;		On exit  : 0/0
  3302 ;;		Unchanged: 0/0
  3303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3304 ;;      Params:         0       2       0       0       0       0       0       0       0
  3305 ;;      Locals:         0       4       0       0       0       0       0       0       0
  3306 ;;      Temps:          0       4       0       0       0       0       0       0       0
  3307 ;;      Totals:         0      10       0       0       0       0       0       0       0
  3308 ;;Total ram usage:       10 bytes
  3309 ;; Hardware stack levels used: 1
  3310 ;; Hardware stack levels required when called: 10
  3311 ;; This function calls:
  3312 ;;		___wmul
  3313 ;;		_isdigit
  3314 ;;		_isspace
  3315 ;; This function is called by:
  3316 ;;		_vfpfcnvrt
  3317 ;; This function uses a non-reentrant model
  3318 ;;
  3319                           
  3320                           	psect	text13
  3321  001A7E                     __ptext13:
  3322                           	callstack 0
  3323  001A7E                     _atoi:
  3324                           	callstack 17
  3325  001A7E  0E00               	movlw	0
  3326  001A80  0100               	movlb	0	; () banked
  3327  001A82  6F8D               	movwf	(atoi@n+1)& (0+255),b
  3328  001A84  0E00               	movlw	0
  3329  001A86  6F8C               	movwf	atoi@n& (0+255),b
  3330  001A88  0E00               	movlw	0
  3331  001A8A  6F8B               	movwf	(atoi@neg+1)& (0+255),b
  3332  001A8C  0E00               	movlw	0
  3333  001A8E  6F8A               	movwf	atoi@neg& (0+255),b
  3334  001A90  EF4C  F00D         	goto	l3430
  3335  001A94                     l3426:
  3336                           
  3337                           ; BSR set to: 0
  3338  001A94  4B84               	infsnz	atoi@s& (0+255),f,b
  3339  001A96  2B85               	incf	(atoi@s+1)& (0+255),f,b
  3340  001A98                     l3430:
  3341                           
  3342                           ; BSR set to: 0
  3343  001A98  C084  FFF6         	movff	atoi@s,tblptrl
  3344  001A9C  C085  FFF7         	movff	atoi@s+1,tblptrh
  3345  001AA0                     	if	0	;tblptru may be non-zero
  3346  001AA0                     	endif
  3347  001AA0                     	if	0	;tblptru may be non-zero
  3348  001AA0                     	endif
  3349  001AA0  0008               	tblrd		*
  3350  001AA2  50F5               	movf	tablat,w,c
  3351  001AA4  0A20               	xorlw	32
  3352  001AA6  B4D8               	btfsc	status,2,c
  3353  001AA8  EF58  F00D         	goto	u3021
  3354  001AAC  EF5A  F00D         	goto	u3020
  3355  001AB0                     u3021:
  3356  001AB0  EF4A  F00D         	goto	l3426
  3357  001AB4                     u3020:
  3358  001AB4                     
  3359                           ; BSR set to: 0
  3360  001AB4  0EF7               	movlw	247
  3361  001AB6  6F86               	movwf	??_atoi& (0+255),b
  3362  001AB8  0EFF               	movlw	255
  3363  001ABA  6F87               	movwf	(??_atoi+1)& (0+255),b
  3364  001ABC  C084  FFF6         	movff	atoi@s,tblptrl
  3365  001AC0  C085  FFF7         	movff	atoi@s+1,tblptrh
  3366  001AC4                     	if	0	;tblptru may be non-zero
  3367  001AC4                     	endif
  3368  001AC4                     	if	0	;tblptru may be non-zero
  3369  001AC4                     	endif
  3370  001AC4  0008               	tblrd		*
  3371  001AC6  50F5               	movf	tablat,w,c
  3372  001AC8  6F88               	movwf	(??_atoi+2)& (0+255),b
  3373  001ACA  6B89               	clrf	(??_atoi+3)& (0+255),b
  3374  001ACC  5186               	movf	??_atoi& (0+255),w,b
  3375  001ACE  2788               	addwf	(??_atoi+2)& (0+255),f,b
  3376  001AD0  5187               	movf	(??_atoi+1)& (0+255),w,b
  3377  001AD2  2389               	addwfc	(??_atoi+3)& (0+255),f,b
  3378  001AD4  5189               	movf	(??_atoi+3)& (0+255),w,b
  3379  001AD6  E109               	bnz	u3030
  3380  001AD8  0E05               	movlw	5
  3381  001ADA  5D88               	subwf	(??_atoi+2)& (0+255),w,b
  3382  001ADC  A0D8               	btfss	status,0,c
  3383  001ADE  EF73  F00D         	goto	u3031
  3384  001AE2  EF75  F00D         	goto	u3030
  3385  001AE6                     u3031:
  3386  001AE6  EF4A  F00D         	goto	l3426
  3387  001AEA                     u3030:
  3388  001AEA  EF7F  F00D         	goto	l3438
  3389  001AEE                     l3434:
  3390                           
  3391                           ; BSR set to: 0
  3392  001AEE  0E00               	movlw	0
  3393  001AF0  6F8B               	movwf	(atoi@neg+1)& (0+255),b
  3394  001AF2  0E01               	movlw	1
  3395  001AF4  6F8A               	movwf	atoi@neg& (0+255),b
  3396  001AF6                     l3436:
  3397                           
  3398                           ; BSR set to: 0
  3399  001AF6  4B84               	infsnz	atoi@s& (0+255),f,b
  3400  001AF8  2B85               	incf	(atoi@s+1)& (0+255),f,b
  3401  001AFA  EFB5  F00D         	goto	l3446
  3402  001AFE                     l3438:
  3403                           
  3404                           ; BSR set to: 0
  3405  001AFE  C084  FFF6         	movff	atoi@s,tblptrl
  3406  001B02  C085  FFF7         	movff	atoi@s+1,tblptrh
  3407  001B06                     	if	0	;tblptru may be non-zero
  3408  001B06                     	endif
  3409  001B06                     	if	0	;tblptru may be non-zero
  3410  001B06                     	endif
  3411  001B06  0008               	tblrd		*
  3412  001B08  50F5               	movf	tablat,w,c
  3413  001B0A  6F86               	movwf	??_atoi& (0+255),b
  3414  001B0C  6B87               	clrf	(??_atoi+1)& (0+255),b
  3415                           
  3416                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3417                           ; Switch size 1, requested type "simple"
  3418                           ; Number of cases is 1, Range of values is 0 to 0
  3419                           ; switch strategies available:
  3420                           ; Name         Instructions Cycles
  3421                           ; simple_byte            4     3 (average)
  3422                           ;	Chosen strategy is simple_byte
  3423  001B0E  5187               	movf	(??_atoi+1)& (0+255),w,b
  3424  001B10  0A00               	xorlw	0	; case 0
  3425  001B12  B4D8               	btfsc	status,2,c
  3426  001B14  EF8E  F00D         	goto	l3704
  3427  001B18  EFB5  F00D         	goto	l3446
  3428  001B1C                     l3704:
  3429                           
  3430                           ; BSR set to: 0
  3431                           ; Switch size 1, requested type "simple"
  3432                           ; Number of cases is 2, Range of values is 43 to 45
  3433                           ; switch strategies available:
  3434                           ; Name         Instructions Cycles
  3435                           ; simple_byte            7     4 (average)
  3436                           ;	Chosen strategy is simple_byte
  3437  001B1C  5186               	movf	??_atoi& (0+255),w,b
  3438  001B1E  0A2B               	xorlw	43	; case 43
  3439  001B20  B4D8               	btfsc	status,2,c
  3440  001B22  EF7B  F00D         	goto	l3436
  3441  001B26  0A06               	xorlw	6	; case 45
  3442  001B28  B4D8               	btfsc	status,2,c
  3443  001B2A  EF77  F00D         	goto	l3434
  3444  001B2E  EFB5  F00D         	goto	l3446
  3445  001B32                     l3440:
  3446                           
  3447                           ; BSR set to: 0
  3448  001B32  C08C  F07D         	movff	atoi@n,___wmul@multiplier
  3449  001B36  C08D  F07E         	movff	atoi@n+1,___wmul@multiplier+1
  3450  001B3A  0E00               	movlw	0
  3451  001B3C  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3452  001B3E  0E0A               	movlw	10
  3453  001B40  6F7F               	movwf	___wmul@multiplicand& (0+255),b
  3454  001B42  EC25  F014         	call	___wmul	;wreg free
  3455  001B46  C084  FFF6         	movff	atoi@s,tblptrl
  3456  001B4A  C085  FFF7         	movff	atoi@s+1,tblptrh
  3457  001B4E                     	if	0	;tblptru may be non-zero
  3458  001B4E                     	endif
  3459  001B4E                     	if	0	;tblptru may be non-zero
  3460  001B4E                     	endif
  3461  001B4E  0008               	tblrd		*
  3462  001B50  50F5               	movf	tablat,w,c
  3463  001B52  0100               	movlb	0	; () banked
  3464  001B54  5F7D               	subwf	?___wmul& (0+255),f,b
  3465  001B56  0E00               	movlw	0
  3466  001B58  5B7E               	subwfb	(?___wmul+1)& (0+255),f,b
  3467  001B5A  0E30               	movlw	48
  3468  001B5C  257D               	addwf	?___wmul& (0+255),w,b
  3469  001B5E  6F8C               	movwf	atoi@n& (0+255),b
  3470  001B60  0E00               	movlw	0
  3471  001B62  217E               	addwfc	(?___wmul+1)& (0+255),w,b
  3472  001B64  6F8D               	movwf	(atoi@n+1)& (0+255),b
  3473  001B66  EF7B  F00D         	goto	l3436
  3474  001B6A                     l3446:
  3475                           
  3476                           ; BSR set to: 0
  3477  001B6A  0ED0               	movlw	208
  3478  001B6C  6F86               	movwf	??_atoi& (0+255),b
  3479  001B6E  0EFF               	movlw	255
  3480  001B70  6F87               	movwf	(??_atoi+1)& (0+255),b
  3481  001B72  C084  FFF6         	movff	atoi@s,tblptrl
  3482  001B76  C085  FFF7         	movff	atoi@s+1,tblptrh
  3483  001B7A                     	if	0	;tblptru may be non-zero
  3484  001B7A                     	endif
  3485  001B7A                     	if	0	;tblptru may be non-zero
  3486  001B7A                     	endif
  3487  001B7A  0008               	tblrd		*
  3488  001B7C  50F5               	movf	tablat,w,c
  3489  001B7E  6F88               	movwf	(??_atoi+2)& (0+255),b
  3490  001B80  6B89               	clrf	(??_atoi+3)& (0+255),b
  3491  001B82  5186               	movf	??_atoi& (0+255),w,b
  3492  001B84  2788               	addwf	(??_atoi+2)& (0+255),f,b
  3493  001B86  5187               	movf	(??_atoi+1)& (0+255),w,b
  3494  001B88  2389               	addwfc	(??_atoi+3)& (0+255),f,b
  3495  001B8A  5189               	movf	(??_atoi+3)& (0+255),w,b
  3496  001B8C  E109               	bnz	u3040
  3497  001B8E  0E0A               	movlw	10
  3498  001B90  5D88               	subwf	(??_atoi+2)& (0+255),w,b
  3499  001B92  A0D8               	btfss	status,0,c
  3500  001B94  EFCE  F00D         	goto	u3041
  3501  001B98  EFD0  F00D         	goto	u3040
  3502  001B9C                     u3041:
  3503  001B9C  EF99  F00D         	goto	l3440
  3504  001BA0                     u3040:
  3505  001BA0                     
  3506                           ; BSR set to: 0
  3507  001BA0  518A               	movf	atoi@neg& (0+255),w,b
  3508  001BA2  118B               	iorwf	(atoi@neg+1)& (0+255),w,b
  3509  001BA4  A4D8               	btfss	status,2,c
  3510  001BA6  EFD7  F00D         	goto	u3051
  3511  001BAA  EFD9  F00D         	goto	u3050
  3512  001BAE                     u3051:
  3513  001BAE  EFE7  F00D         	goto	l938
  3514  001BB2                     u3050:
  3515  001BB2                     
  3516                           ; BSR set to: 0
  3517  001BB2  C08C  F086         	movff	atoi@n,??_atoi
  3518  001BB6  C08D  F087         	movff	atoi@n+1,??_atoi+1
  3519  001BBA  1F86               	comf	??_atoi& (0+255),f,b
  3520  001BBC  1F87               	comf	(??_atoi+1)& (0+255),f,b
  3521  001BBE  4B86               	infsnz	??_atoi& (0+255),f,b
  3522  001BC0  2B87               	incf	(??_atoi+1)& (0+255),f,b
  3523  001BC2  C086  F084         	movff	??_atoi,?_atoi
  3524  001BC6  C087  F085         	movff	??_atoi+1,?_atoi+1
  3525  001BCA  EFEB  F00D         	goto	l941
  3526  001BCE                     l938:
  3527                           
  3528                           ; BSR set to: 0
  3529  001BCE  C08C  F084         	movff	atoi@n,?_atoi
  3530  001BD2  C08D  F085         	movff	atoi@n+1,?_atoi+1
  3531  001BD6                     l941:
  3532                           
  3533                           ; BSR set to: 0
  3534  001BD6  0012               	return		;funcret
  3535  001BD8                     __end_of_atoi:
  3536                           	callstack 0
  3537                           
  3538 ;; *************** function _isspace *****************
  3539 ;; Defined at:
  3540 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isspace.c"
  3541 ;; Parameters:    Size  Location     Type
  3542 ;;  c               2   29[BANK0 ] int 
  3543 ;; Auto vars:     Size  Location     Type
  3544 ;;		None
  3545 ;; Return value:  Size  Location     Type
  3546 ;;                  2   29[BANK0 ] int 
  3547 ;; Registers used:
  3548 ;;		wreg, status,2, status,0
  3549 ;; Tracked objects:
  3550 ;;		On entry : 0/0
  3551 ;;		On exit  : 0/0
  3552 ;;		Unchanged: 0/0
  3553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3554 ;;      Params:         0       2       0       0       0       0       0       0       0
  3555 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3556 ;;      Temps:          0       4       0       0       0       0       0       0       0
  3557 ;;      Totals:         0       7       0       0       0       0       0       0       0
  3558 ;;Total ram usage:        7 bytes
  3559 ;; Hardware stack levels used: 1
  3560 ;; Hardware stack levels required when called: 9
  3561 ;; This function calls:
  3562 ;;		Nothing
  3563 ;; This function is called by:
  3564 ;;		_atoi
  3565 ;; This function uses a non-reentrant model
  3566 ;;
  3567                           
  3568                           	psect	text14
  3569  002420                     __ptext14:
  3570                           	callstack 0
  3571  002420                     _isspace:
  3572                           	callstack 17
  3573  002420  0E01               	movlw	1
  3574  002422  0100               	movlb	0	; () banked
  3575  002424  6F83               	movwf	_isspace$1114& (0+255),b
  3576  002426                     
  3577                           ; BSR set to: 0
  3578  002426  0E20               	movlw	32
  3579  002428  197D               	xorwf	isspace@c& (0+255),w,b
  3580  00242A  117E               	iorwf	(isspace@c+1)& (0+255),w,b
  3581  00242C  B4D8               	btfsc	status,2,c
  3582  00242E  EF1B  F012         	goto	u2851
  3583  002432  EF1D  F012         	goto	u2850
  3584  002436                     u2851:
  3585  002436  EF36  F012         	goto	l3358
  3586  00243A                     u2850:
  3587  00243A                     
  3588                           ; BSR set to: 0
  3589  00243A  0EF7               	movlw	247
  3590  00243C  6F7F               	movwf	??_isspace& (0+255),b
  3591  00243E  0EFF               	movlw	255
  3592  002440  6F80               	movwf	(??_isspace+1)& (0+255),b
  3593  002442  C07D  F081         	movff	isspace@c,??_isspace+2
  3594  002446  C07E  F082         	movff	isspace@c+1,??_isspace+3
  3595  00244A  517F               	movf	??_isspace& (0+255),w,b
  3596  00244C  2781               	addwf	(??_isspace+2)& (0+255),f,b
  3597  00244E  5180               	movf	(??_isspace+1)& (0+255),w,b
  3598  002450  2382               	addwfc	(??_isspace+3)& (0+255),f,b
  3599  002452  5182               	movf	(??_isspace+3)& (0+255),w,b
  3600  002454  E109               	bnz	u2860
  3601  002456  0E05               	movlw	5
  3602  002458  5D81               	subwf	(??_isspace+2)& (0+255),w,b
  3603  00245A  A0D8               	btfss	status,0,c
  3604  00245C  EF32  F012         	goto	u2861
  3605  002460  EF34  F012         	goto	u2860
  3606  002464                     u2861:
  3607  002464  EF36  F012         	goto	l3358
  3608  002468                     u2860:
  3609  002468                     
  3610                           ; BSR set to: 0
  3611  002468  0E00               	movlw	0
  3612  00246A  6F83               	movwf	_isspace$1114& (0+255),b
  3613  00246C                     l3358:
  3614                           
  3615                           ; BSR set to: 0
  3616  00246C  C083  F07D         	movff	_isspace$1114,?_isspace
  3617  002470  6B7E               	clrf	(?_isspace+1)& (0+255),b
  3618  002472                     
  3619                           ; BSR set to: 0
  3620  002472  0012               	return		;funcret
  3621  002474                     __end_of_isspace:
  3622                           	callstack 0
  3623                           
  3624 ;; *************** function _isdigit *****************
  3625 ;; Defined at:
  3626 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isdigit.c"
  3627 ;; Parameters:    Size  Location     Type
  3628 ;;  c               2   29[BANK0 ] int 
  3629 ;; Auto vars:     Size  Location     Type
  3630 ;;		None
  3631 ;; Return value:  Size  Location     Type
  3632 ;;                  2   29[BANK0 ] int 
  3633 ;; Registers used:
  3634 ;;		wreg, status,2, status,0
  3635 ;; Tracked objects:
  3636 ;;		On entry : 0/0
  3637 ;;		On exit  : 0/0
  3638 ;;		Unchanged: 0/0
  3639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3640 ;;      Params:         0       2       0       0       0       0       0       0       0
  3641 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3642 ;;      Temps:          0       4       0       0       0       0       0       0       0
  3643 ;;      Totals:         0       6       0       0       0       0       0       0       0
  3644 ;;Total ram usage:        6 bytes
  3645 ;; Hardware stack levels used: 1
  3646 ;; Hardware stack levels required when called: 9
  3647 ;; This function calls:
  3648 ;;		Nothing
  3649 ;; This function is called by:
  3650 ;;		_vfpfcnvrt
  3651 ;;		_atoi
  3652 ;; This function uses a non-reentrant model
  3653 ;;
  3654                           
  3655                           	psect	text15
  3656  0027A2                     __ptext15:
  3657                           	callstack 0
  3658  0027A2                     _isdigit:
  3659                           	callstack 18
  3660  0027A2  0ED0               	movlw	208
  3661  0027A4  0100               	movlb	0	; () banked
  3662  0027A6  6F7F               	movwf	??_isdigit& (0+255),b
  3663  0027A8  0EFF               	movlw	255
  3664  0027AA  6F80               	movwf	(??_isdigit+1)& (0+255),b
  3665  0027AC  C07D  F081         	movff	isdigit@c,??_isdigit+2
  3666  0027B0  C07E  F082         	movff	isdigit@c+1,??_isdigit+3
  3667  0027B4  517F               	movf	??_isdigit& (0+255),w,b
  3668  0027B6  2781               	addwf	(??_isdigit+2)& (0+255),f,b
  3669  0027B8  5180               	movf	(??_isdigit+1)& (0+255),w,b
  3670  0027BA  2382               	addwfc	(??_isdigit+3)& (0+255),f,b
  3671  0027BC  5182               	movf	(??_isdigit+3)& (0+255),w,b
  3672  0027BE  E10A               	bnz	u2830
  3673  0027C0  0E0A               	movlw	10
  3674  0027C2  5D81               	subwf	(??_isdigit+2)& (0+255),w,b
  3675  0027C4  A0D8               	btfss	status,0,c
  3676  0027C6  EFE7  F013         	goto	u2831
  3677  0027CA  EFEA  F013         	goto	u2830
  3678  0027CE                     u2831:
  3679  0027CE  0E01               	movlw	1
  3680  0027D0  EFEB  F013         	goto	u2840
  3681  0027D4                     u2830:
  3682  0027D4  0E00               	movlw	0
  3683  0027D6                     u2840:
  3684  0027D6  6F7D               	movwf	?_isdigit& (0+255),b
  3685  0027D8  6B7E               	clrf	(?_isdigit+1)& (0+255),b
  3686  0027DA                     
  3687                           ; BSR set to: 0
  3688  0027DA  0012               	return		;funcret
  3689  0027DC                     __end_of_isdigit:
  3690                           	callstack 0
  3691                           
  3692 ;; *************** function ___wmul *****************
  3693 ;; Defined at:
  3694 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
  3695 ;; Parameters:    Size  Location     Type
  3696 ;;  multiplier      2   29[BANK0 ] unsigned int 
  3697 ;;  multiplicand    2   31[BANK0 ] unsigned int 
  3698 ;; Auto vars:     Size  Location     Type
  3699 ;;  product         2   33[BANK0 ] unsigned int 
  3700 ;; Return value:  Size  Location     Type
  3701 ;;                  2   29[BANK0 ] unsigned int 
  3702 ;; Registers used:
  3703 ;;		wreg, status,2, status,0, prodl, prodh
  3704 ;; Tracked objects:
  3705 ;;		On entry : 0/0
  3706 ;;		On exit  : 0/0
  3707 ;;		Unchanged: 0/0
  3708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3709 ;;      Params:         0       4       0       0       0       0       0       0       0
  3710 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3711 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3712 ;;      Totals:         0       6       0       0       0       0       0       0       0
  3713 ;;Total ram usage:        6 bytes
  3714 ;; Hardware stack levels used: 1
  3715 ;; Hardware stack levels required when called: 9
  3716 ;; This function calls:
  3717 ;;		Nothing
  3718 ;; This function is called by:
  3719 ;;		_atoi
  3720 ;; This function uses a non-reentrant model
  3721 ;;
  3722                           
  3723                           	psect	text16
  3724  00284A                     __ptext16:
  3725                           	callstack 0
  3726  00284A                     ___wmul:
  3727                           	callstack 17
  3728  00284A  0100               	movlb	0	; () banked
  3729  00284C  517D               	movf	___wmul@multiplier& (0+255),w,b
  3730  00284E  037F               	mulwf	___wmul@multiplicand& (0+255),b
  3731  002850  CFF3 F081          	movff	prodl,___wmul@product
  3732  002854  CFF4 F082          	movff	prodh,___wmul@product+1
  3733  002858  517D               	movf	___wmul@multiplier& (0+255),w,b
  3734  00285A  0380               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  3735  00285C  50F3               	movf	243,w,c
  3736  00285E  2782               	addwf	(___wmul@product+1)& (0+255),f,b
  3737  002860  517E               	movf	(___wmul@multiplier+1)& (0+255),w,b
  3738  002862  037F               	mulwf	___wmul@multiplicand& (0+255),b
  3739  002864  50F3               	movf	243,w,c
  3740  002866  2782               	addwf	(___wmul@product+1)& (0+255),f,b
  3741  002868                     
  3742                           ; BSR set to: 0
  3743  002868  C081  F07D         	movff	___wmul@product,?___wmul
  3744  00286C  C082  F07E         	movff	___wmul@product+1,?___wmul+1
  3745  002870                     
  3746                           ; BSR set to: 0
  3747  002870  0012               	return		;funcret
  3748  002872                     __end_of___wmul:
  3749                           	callstack 0
  3750                           
  3751 ;; *************** function _Lcd_Write_String *****************
  3752 ;; Defined at:
  3753 ;;		line 97 in file "lcd.c"
  3754 ;; Parameters:    Size  Location     Type
  3755 ;;  a               2   33[BANK0 ] PTR unsigned char 
  3756 ;;		 -> str_personas(16), str_autos(16), 
  3757 ;; Auto vars:     Size  Location     Type
  3758 ;;  i               2   35[BANK0 ] int 
  3759 ;; Return value:  Size  Location     Type
  3760 ;;                  1    wreg      void 
  3761 ;; Registers used:
  3762 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3763 ;; Tracked objects:
  3764 ;;		On entry : 0/0
  3765 ;;		On exit  : 0/0
  3766 ;;		Unchanged: 0/0
  3767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3768 ;;      Params:         0       2       0       0       0       0       0       0       0
  3769 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3770 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3771 ;;      Totals:         0       4       0       0       0       0       0       0       0
  3772 ;;Total ram usage:        4 bytes
  3773 ;; Hardware stack levels used: 1
  3774 ;; Hardware stack levels required when called: 11
  3775 ;; This function calls:
  3776 ;;		_Lcd_Write_Char
  3777 ;; This function is called by:
  3778 ;;		_main
  3779 ;; This function uses a non-reentrant model
  3780 ;;
  3781                           
  3782                           	psect	text17
  3783  002560                     __ptext17:
  3784                           	callstack 0
  3785  002560                     _Lcd_Write_String:
  3786                           	callstack 19
  3787  002560                     
  3788                           ;lcd.c: 97: void Lcd_Write_String(unsigned char *a);lcd.c: 98: {;lcd.c: 99:  int i;;lcd.
      +                          c: 100:  for(i=0;a[i]!='\0';i++)
  3789  002560  0E00               	movlw	0
  3790  002562  0100               	movlb	0	; () banked
  3791  002564  6F84               	movwf	(Lcd_Write_String@i+1)& (0+255),b
  3792  002566  0E00               	movlw	0
  3793  002568  6F83               	movwf	Lcd_Write_String@i& (0+255),b
  3794  00256A  EFC3  F012         	goto	l2950
  3795  00256E                     l2946:
  3796                           
  3797                           ; BSR set to: 0
  3798                           ;lcd.c: 101:     Lcd_Write_Char(a[i]);
  3799  00256E  5183               	movf	Lcd_Write_String@i& (0+255),w,b
  3800  002570  2581               	addwf	Lcd_Write_String@a& (0+255),w,b
  3801  002572  6ED9               	movwf	fsr2l,c
  3802  002574  5184               	movf	(Lcd_Write_String@i+1)& (0+255),w,b
  3803  002576  2182               	addwfc	(Lcd_Write_String@a+1)& (0+255),w,b
  3804  002578  6EDA               	movwf	fsr2h,c
  3805  00257A  50DF               	movf	indf2,w,c
  3806  00257C  EC77  F013         	call	_Lcd_Write_Char
  3807  002580  0100               	movlb	0	; () banked
  3808  002582  4B83               	infsnz	Lcd_Write_String@i& (0+255),f,b
  3809  002584  2B84               	incf	(Lcd_Write_String@i+1)& (0+255),f,b
  3810  002586                     l2950:
  3811                           
  3812                           ; BSR set to: 0
  3813  002586  5183               	movf	Lcd_Write_String@i& (0+255),w,b
  3814  002588  2581               	addwf	Lcd_Write_String@a& (0+255),w,b
  3815  00258A  6ED9               	movwf	fsr2l,c
  3816  00258C  5184               	movf	(Lcd_Write_String@i+1)& (0+255),w,b
  3817  00258E  2182               	addwfc	(Lcd_Write_String@a+1)& (0+255),w,b
  3818  002590  6EDA               	movwf	fsr2h,c
  3819  002592  50DF               	movf	indf2,w,c
  3820  002594  A4D8               	btfss	status,2,c
  3821  002596  EFCF  F012         	goto	u2521
  3822  00259A  EFD1  F012         	goto	u2520
  3823  00259E                     u2521:
  3824  00259E  EFB7  F012         	goto	l2946
  3825  0025A2                     u2520:
  3826  0025A2                     
  3827                           ; BSR set to: 0
  3828  0025A2  0012               	return		;funcret
  3829  0025A4                     __end_of_Lcd_Write_String:
  3830                           	callstack 0
  3831                           
  3832 ;; *************** function _Lcd_Write_Char *****************
  3833 ;; Defined at:
  3834 ;;		line 81 in file "lcd.c"
  3835 ;; Parameters:    Size  Location     Type
  3836 ;;  a               1    wreg     unsigned char 
  3837 ;; Auto vars:     Size  Location     Type
  3838 ;;  a               1   32[BANK0 ] unsigned char 
  3839 ;;  y               1   31[BANK0 ] unsigned char 
  3840 ;;  temp            1   30[BANK0 ] unsigned char 
  3841 ;; Return value:  Size  Location     Type
  3842 ;;                  1    wreg      void 
  3843 ;; Registers used:
  3844 ;;		wreg, status,2, status,0, cstack
  3845 ;; Tracked objects:
  3846 ;;		On entry : 0/0
  3847 ;;		On exit  : 0/0
  3848 ;;		Unchanged: 0/0
  3849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3850 ;;      Params:         0       0       0       0       0       0       0       0       0
  3851 ;;      Locals:         0       3       0       0       0       0       0       0       0
  3852 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3853 ;;      Totals:         0       3       0       0       0       0       0       0       0
  3854 ;;Total ram usage:        3 bytes
  3855 ;; Hardware stack levels used: 1
  3856 ;; Hardware stack levels required when called: 10
  3857 ;; This function calls:
  3858 ;;		_Lcd_Port
  3859 ;; This function is called by:
  3860 ;;		_Lcd_Write_String
  3861 ;; This function uses a non-reentrant model
  3862 ;;
  3863                           
  3864                           	psect	text18
  3865  0026EE                     __ptext18:
  3866                           	callstack 0
  3867  0026EE                     _Lcd_Write_Char:
  3868                           	callstack 19
  3869                           
  3870                           ; BSR set to: 0
  3871                           ;incstack = 0
  3872                           ;Lcd_Write_Char@a stored from wreg
  3873  0026EE  0100               	movlb	0	; () banked
  3874  0026F0  6F80               	movwf	Lcd_Write_Char@a& (0+255),b
  3875  0026F2                     
  3876                           ;lcd.c: 81: void Lcd_Write_Char(unsigned char a);lcd.c: 82: {;lcd.c: 83:    char temp,y;
      +                          ;lcd.c: 84:    temp = a&0x0F;
  3877  0026F2  0100               	movlb	0	; () banked
  3878  0026F4  5180               	movf	Lcd_Write_Char@a& (0+255),w,b
  3879  0026F6  0B0F               	andlw	15
  3880  0026F8  6F7E               	movwf	Lcd_Write_Char@temp& (0+255),b
  3881                           
  3882                           ;lcd.c: 85:    y = a&0xF0;
  3883  0026FA  5180               	movf	Lcd_Write_Char@a& (0+255),w,b
  3884  0026FC  0BF0               	andlw	240
  3885  0026FE  6F7F               	movwf	Lcd_Write_Char@y& (0+255),b
  3886  002700                     
  3887                           ; BSR set to: 0
  3888                           ;lcd.c: 86:    LATDbits.LATD2 = 1;
  3889  002700  848C               	bsf	140,2,c	;volatile
  3890  002702                     
  3891                           ; BSR set to: 0
  3892                           ;lcd.c: 87:    Lcd_Port(y>>4);
  3893  002702  397F               	swapf	Lcd_Write_Char@y& (0+255),w,b
  3894  002704  0B0F               	andlw	15
  3895  002706  ECB2  F011         	call	_Lcd_Port
  3896  00270A                     
  3897                           ;lcd.c: 88:    LATDbits.LATD3 = 1;
  3898  00270A  868C               	bsf	140,3,c	;volatile
  3899  00270C                     
  3900                           ;lcd.c: 89:    _delay((unsigned long)((40)*(16000000UL/4000000.0)));
  3901  00270C  0E35               	movlw	53
  3902  00270E                     u3207:
  3903  00270E  2EE8               	decfsz	wreg,f,c
  3904  002710  D7FE               	bra	u3207
  3905  002712  F000               	nop	
  3906  002714                     
  3907                           ;lcd.c: 90:    LATDbits.LATD3 = 0;
  3908  002714  968C               	bcf	140,3,c	;volatile
  3909  002716                     
  3910                           ;lcd.c: 91:    Lcd_Port(temp);
  3911  002716  0100               	movlb	0	; () banked
  3912  002718  517E               	movf	Lcd_Write_Char@temp& (0+255),w,b
  3913  00271A  ECB2  F011         	call	_Lcd_Port
  3914  00271E                     
  3915                           ;lcd.c: 92:    LATDbits.LATD3 = 1;
  3916  00271E  868C               	bsf	140,3,c	;volatile
  3917  002720                     
  3918                           ;lcd.c: 93:    _delay((unsigned long)((40)*(16000000UL/4000000.0)));
  3919  002720  0E35               	movlw	53
  3920  002722                     u3217:
  3921  002722  2EE8               	decfsz	wreg,f,c
  3922  002724  D7FE               	bra	u3217
  3923  002726  F000               	nop	
  3924  002728                     
  3925                           ;lcd.c: 94:    LATDbits.LATD3 = 0;
  3926  002728  968C               	bcf	140,3,c	;volatile
  3927  00272A  0012               	return		;funcret
  3928  00272C                     __end_of_Lcd_Write_Char:
  3929                           	callstack 0
  3930                           
  3931 ;; *************** function _Lcd_Set_Cursor *****************
  3932 ;; Defined at:
  3933 ;;		line 41 in file "lcd.c"
  3934 ;; Parameters:    Size  Location     Type
  3935 ;;  a               1    wreg     unsigned char 
  3936 ;;  b               1   32[BANK0 ] unsigned char 
  3937 ;; Auto vars:     Size  Location     Type
  3938 ;;  a               1   33[BANK0 ] unsigned char 
  3939 ;;  temp            1   36[BANK0 ] unsigned char 
  3940 ;;  y               1   35[BANK0 ] unsigned char 
  3941 ;;  z               1   34[BANK0 ] unsigned char 
  3942 ;; Return value:  Size  Location     Type
  3943 ;;                  1    wreg      void 
  3944 ;; Registers used:
  3945 ;;		wreg, status,2, status,0, cstack
  3946 ;; Tracked objects:
  3947 ;;		On entry : 0/0
  3948 ;;		On exit  : 0/0
  3949 ;;		Unchanged: 0/0
  3950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3951 ;;      Params:         0       1       0       0       0       0       0       0       0
  3952 ;;      Locals:         0       4       0       0       0       0       0       0       0
  3953 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3954 ;;      Totals:         0       5       0       0       0       0       0       0       0
  3955 ;;Total ram usage:        5 bytes
  3956 ;; Hardware stack levels used: 1
  3957 ;; Hardware stack levels required when called: 11
  3958 ;; This function calls:
  3959 ;;		_Lcd_Cmd
  3960 ;; This function is called by:
  3961 ;;		_main
  3962 ;; This function uses a non-reentrant model
  3963 ;;
  3964                           
  3965                           	psect	text19
  3966  0021CC                     __ptext19:
  3967                           	callstack 0
  3968  0021CC                     _Lcd_Set_Cursor:
  3969                           	callstack 19
  3970                           
  3971                           ;incstack = 0
  3972                           ;Lcd_Set_Cursor@a stored from wreg
  3973  0021CC  0100               	movlb	0	; () banked
  3974  0021CE  6F81               	movwf	Lcd_Set_Cursor@a& (0+255),b
  3975  0021D0                     
  3976                           ;lcd.c: 41: void Lcd_Set_Cursor(unsigned char a, unsigned char b);lcd.c: 42: {;lcd.c: 43
      +                          :  char temp,z,y;;lcd.c: 44:  if(a == 1)
  3977  0021D0  0100               	movlb	0	; () banked
  3978  0021D2  0581               	decf	Lcd_Set_Cursor@a& (0+255),w,b
  3979  0021D4  A4D8               	btfss	status,2,c
  3980  0021D6  EFEF  F010         	goto	u2501
  3981  0021DA  EFF1  F010         	goto	u2500
  3982  0021DE                     u2501:
  3983  0021DE  EF03  F011         	goto	l2908
  3984  0021E2                     u2500:
  3985  0021E2                     
  3986                           ; BSR set to: 0
  3987                           ;lcd.c: 45:  {;lcd.c: 46:    temp = 0x80 + b - 1;
  3988  0021E2  5180               	movf	Lcd_Set_Cursor@b& (0+255),w,b
  3989  0021E4  0F7F               	addlw	127
  3990  0021E6  6F84               	movwf	Lcd_Set_Cursor@temp& (0+255),b
  3991                           
  3992                           ;lcd.c: 47:   z = temp>>4;
  3993  0021E8  3984               	swapf	Lcd_Set_Cursor@temp& (0+255),w,b
  3994  0021EA  0B0F               	andlw	15
  3995  0021EC  6F82               	movwf	Lcd_Set_Cursor@z& (0+255),b
  3996                           
  3997                           ;lcd.c: 48:   y = temp & 0x0F;
  3998  0021EE  5184               	movf	Lcd_Set_Cursor@temp& (0+255),w,b
  3999  0021F0  0B0F               	andlw	15
  4000  0021F2  6F83               	movwf	Lcd_Set_Cursor@y& (0+255),b
  4001  0021F4                     
  4002                           ; BSR set to: 0
  4003                           ;lcd.c: 49:   Lcd_Cmd(z);
  4004  0021F4  5182               	movf	Lcd_Set_Cursor@z& (0+255),w,b
  4005  0021F6  EC4C  F014         	call	_Lcd_Cmd
  4006  0021FA                     
  4007                           ;lcd.c: 50:   Lcd_Cmd(y);
  4008  0021FA  0100               	movlb	0	; () banked
  4009  0021FC  5183               	movf	Lcd_Set_Cursor@y& (0+255),w,b
  4010  0021FE  EC4C  F014         	call	_Lcd_Cmd
  4011                           
  4012                           ;lcd.c: 51:  }
  4013  002202  EF1C  F011         	goto	l27
  4014  002206                     l2908:
  4015                           
  4016                           ; BSR set to: 0
  4017  002206  0E02               	movlw	2
  4018  002208  1981               	xorwf	Lcd_Set_Cursor@a& (0+255),w,b
  4019  00220A  A4D8               	btfss	status,2,c
  4020  00220C  EF0A  F011         	goto	u2511
  4021  002210  EF0C  F011         	goto	u2510
  4022  002214                     u2511:
  4023  002214  EF1C  F011         	goto	l27
  4024  002218                     u2510:
  4025  002218                     
  4026                           ; BSR set to: 0
  4027                           ;lcd.c: 53:  {;lcd.c: 54:   temp = 0xC0 + b - 1;
  4028  002218  5180               	movf	Lcd_Set_Cursor@b& (0+255),w,b
  4029  00221A  0FBF               	addlw	191
  4030  00221C  6F84               	movwf	Lcd_Set_Cursor@temp& (0+255),b
  4031                           
  4032                           ;lcd.c: 55:   z = temp>>4;
  4033  00221E  3984               	swapf	Lcd_Set_Cursor@temp& (0+255),w,b
  4034  002220  0B0F               	andlw	15
  4035  002222  6F82               	movwf	Lcd_Set_Cursor@z& (0+255),b
  4036                           
  4037                           ;lcd.c: 56:   y = temp & 0x0F;
  4038  002224  5184               	movf	Lcd_Set_Cursor@temp& (0+255),w,b
  4039  002226  0B0F               	andlw	15
  4040  002228  6F83               	movwf	Lcd_Set_Cursor@y& (0+255),b
  4041  00222A                     
  4042                           ; BSR set to: 0
  4043                           ;lcd.c: 57:   Lcd_Cmd(z);
  4044  00222A  5182               	movf	Lcd_Set_Cursor@z& (0+255),w,b
  4045  00222C  EC4C  F014         	call	_Lcd_Cmd
  4046  002230                     
  4047                           ;lcd.c: 58:   Lcd_Cmd(y);
  4048  002230  0100               	movlb	0	; () banked
  4049  002232  5183               	movf	Lcd_Set_Cursor@y& (0+255),w,b
  4050  002234  EC4C  F014         	call	_Lcd_Cmd
  4051  002238                     l27:
  4052  002238  0012               	return		;funcret
  4053  00223A                     __end_of_Lcd_Set_Cursor:
  4054                           	callstack 0
  4055                           
  4056 ;; *************** function _Lcd_Init *****************
  4057 ;; Defined at:
  4058 ;;		line 62 in file "lcd.c"
  4059 ;; Parameters:    Size  Location     Type
  4060 ;;		None
  4061 ;; Auto vars:     Size  Location     Type
  4062 ;;		None
  4063 ;; Return value:  Size  Location     Type
  4064 ;;                  1    wreg      void 
  4065 ;; Registers used:
  4066 ;;		wreg, status,2, cstack
  4067 ;; Tracked objects:
  4068 ;;		On entry : 0/0
  4069 ;;		On exit  : 0/0
  4070 ;;		Unchanged: 0/0
  4071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4072 ;;      Params:         0       0       0       0       0       0       0       0       0
  4073 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4074 ;;      Temps:          0       1       0       0       0       0       0       0       0
  4075 ;;      Totals:         0       1       0       0       0       0       0       0       0
  4076 ;;Total ram usage:        1 bytes
  4077 ;; Hardware stack levels used: 1
  4078 ;; Hardware stack levels required when called: 11
  4079 ;; This function calls:
  4080 ;;		_Lcd_Cmd
  4081 ;;		_Lcd_Port
  4082 ;; This function is called by:
  4083 ;;		_main
  4084 ;; This function uses a non-reentrant model
  4085 ;;
  4086                           
  4087                           	psect	text20
  4088  002154                     __ptext20:
  4089                           	callstack 0
  4090  002154                     _Lcd_Init:
  4091                           	callstack 19
  4092  002154                     
  4093                           ;lcd.c: 64:   Lcd_Port(0x00);
  4094  002154  0E00               	movlw	0
  4095  002156  ECB2  F011         	call	_Lcd_Port
  4096  00215A                     
  4097                           ;lcd.c: 65:    _delay((unsigned long)((20)*(16000000UL/4000.0)));
  4098  00215A  0E68               	movlw	104
  4099  00215C  0100               	movlb	0	; () banked
  4100  00215E  6F80               	movwf	??_Lcd_Init& (0+255),b
  4101  002160  0EE4               	movlw	228
  4102  002162                     u3227:
  4103  002162  2EE8               	decfsz	wreg,f,c
  4104  002164  D7FE               	bra	u3227
  4105  002166  2F80               	decfsz	??_Lcd_Init& (0+255),f,b
  4106  002168  D7FC               	bra	u3227
  4107  00216A  F000               	nop	
  4108  00216C                     
  4109                           ;lcd.c: 66:   Lcd_Cmd(0x03);
  4110  00216C  0E03               	movlw	3
  4111  00216E  EC4C  F014         	call	_Lcd_Cmd
  4112  002172                     
  4113                           ;lcd.c: 67:  _delay((unsigned long)((5)*(16000000UL/4000.0)));
  4114  002172  0E1A               	movlw	26
  4115  002174  0100               	movlb	0	; () banked
  4116  002176  6F80               	movwf	??_Lcd_Init& (0+255),b
  4117  002178  0EF8               	movlw	248
  4118  00217A                     u3237:
  4119  00217A  2EE8               	decfsz	wreg,f,c
  4120  00217C  D7FE               	bra	u3237
  4121  00217E  2F80               	decfsz	??_Lcd_Init& (0+255),f,b
  4122  002180  D7FC               	bra	u3237
  4123  002182  F000               	nop	
  4124  002184                     
  4125                           ;lcd.c: 68:   Lcd_Cmd(0x03);
  4126  002184  0E03               	movlw	3
  4127  002186  EC4C  F014         	call	_Lcd_Cmd
  4128  00218A                     
  4129                           ;lcd.c: 69:  _delay((unsigned long)((11)*(16000000UL/4000.0)));
  4130  00218A  0E3A               	movlw	58
  4131  00218C  0100               	movlb	0	; () banked
  4132  00218E  6F80               	movwf	??_Lcd_Init& (0+255),b
  4133  002190  0E23               	movlw	35
  4134  002192                     u3247:
  4135  002192  2EE8               	decfsz	wreg,f,c
  4136  002194  D7FE               	bra	u3247
  4137  002196  2F80               	decfsz	??_Lcd_Init& (0+255),f,b
  4138  002198  D7FC               	bra	u3247
  4139  00219A                     
  4140                           ;lcd.c: 70:   Lcd_Cmd(0x03);
  4141  00219A  0E03               	movlw	3
  4142  00219C  EC4C  F014         	call	_Lcd_Cmd
  4143  0021A0                     
  4144                           ;lcd.c: 72:   Lcd_Cmd(0x02);
  4145  0021A0  0E02               	movlw	2
  4146  0021A2  EC4C  F014         	call	_Lcd_Cmd
  4147  0021A6                     
  4148                           ;lcd.c: 73:   Lcd_Cmd(0x02);
  4149  0021A6  0E02               	movlw	2
  4150  0021A8  EC4C  F014         	call	_Lcd_Cmd
  4151  0021AC                     
  4152                           ;lcd.c: 74:   Lcd_Cmd(0x08);
  4153  0021AC  0E08               	movlw	8
  4154  0021AE  EC4C  F014         	call	_Lcd_Cmd
  4155  0021B2                     
  4156                           ;lcd.c: 75:   Lcd_Cmd(0x00);
  4157  0021B2  0E00               	movlw	0
  4158  0021B4  EC4C  F014         	call	_Lcd_Cmd
  4159  0021B8                     
  4160                           ;lcd.c: 76:   Lcd_Cmd(0x0C);
  4161  0021B8  0E0C               	movlw	12
  4162  0021BA  EC4C  F014         	call	_Lcd_Cmd
  4163  0021BE                     
  4164                           ;lcd.c: 77:   Lcd_Cmd(0x00);
  4165  0021BE  0E00               	movlw	0
  4166  0021C0  EC4C  F014         	call	_Lcd_Cmd
  4167  0021C4                     
  4168                           ;lcd.c: 78:   Lcd_Cmd(0x06);
  4169  0021C4  0E06               	movlw	6
  4170  0021C6  EC4C  F014         	call	_Lcd_Cmd
  4171  0021CA  0012               	return		;funcret
  4172  0021CC                     __end_of_Lcd_Init:
  4173                           	callstack 0
  4174                           
  4175 ;; *************** function _Lcd_Clear *****************
  4176 ;; Defined at:
  4177 ;;		line 35 in file "lcd.c"
  4178 ;; Parameters:    Size  Location     Type
  4179 ;;		None
  4180 ;; Auto vars:     Size  Location     Type
  4181 ;;		None
  4182 ;; Return value:  Size  Location     Type
  4183 ;;                  1    wreg      void 
  4184 ;; Registers used:
  4185 ;;		wreg, status,2, cstack
  4186 ;; Tracked objects:
  4187 ;;		On entry : 0/0
  4188 ;;		On exit  : 0/0
  4189 ;;		Unchanged: 0/0
  4190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4191 ;;      Params:         0       0       0       0       0       0       0       0       0
  4192 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4193 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4194 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4195 ;;Total ram usage:        0 bytes
  4196 ;; Hardware stack levels used: 1
  4197 ;; Hardware stack levels required when called: 11
  4198 ;; This function calls:
  4199 ;;		_Lcd_Cmd
  4200 ;; This function is called by:
  4201 ;;		_main
  4202 ;; This function uses a non-reentrant model
  4203 ;;
  4204                           
  4205                           	psect	text21
  4206  00291C                     __ptext21:
  4207                           	callstack 0
  4208  00291C                     _Lcd_Clear:
  4209                           	callstack 19
  4210  00291C                     
  4211                           ;lcd.c: 37:  Lcd_Cmd(0);
  4212  00291C  0E00               	movlw	0
  4213  00291E  EC4C  F014         	call	_Lcd_Cmd
  4214                           
  4215                           ;lcd.c: 38:  Lcd_Cmd(1);
  4216  002922  0E01               	movlw	1
  4217  002924  EC4C  F014         	call	_Lcd_Cmd
  4218  002928  0012               	return		;funcret
  4219  00292A                     __end_of_Lcd_Clear:
  4220                           	callstack 0
  4221                           
  4222 ;; *************** function _Lcd_Cmd *****************
  4223 ;; Defined at:
  4224 ;;		line 26 in file "lcd.c"
  4225 ;; Parameters:    Size  Location     Type
  4226 ;;  a               1    wreg     unsigned char 
  4227 ;; Auto vars:     Size  Location     Type
  4228 ;;  a               1   31[BANK0 ] unsigned char 
  4229 ;; Return value:  Size  Location     Type
  4230 ;;                  1    wreg      void 
  4231 ;; Registers used:
  4232 ;;		wreg, status,2, cstack
  4233 ;; Tracked objects:
  4234 ;;		On entry : 0/0
  4235 ;;		On exit  : 0/0
  4236 ;;		Unchanged: 0/0
  4237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4238 ;;      Params:         0       0       0       0       0       0       0       0       0
  4239 ;;      Locals:         0       1       0       0       0       0       0       0       0
  4240 ;;      Temps:          0       1       0       0       0       0       0       0       0
  4241 ;;      Totals:         0       2       0       0       0       0       0       0       0
  4242 ;;Total ram usage:        2 bytes
  4243 ;; Hardware stack levels used: 1
  4244 ;; Hardware stack levels required when called: 10
  4245 ;; This function calls:
  4246 ;;		_Lcd_Port
  4247 ;; This function is called by:
  4248 ;;		_Lcd_Clear
  4249 ;;		_Lcd_Set_Cursor
  4250 ;;		_Lcd_Init
  4251 ;;		_Lcd_Shift_Right
  4252 ;;		_Lcd_Shift_Left
  4253 ;; This function uses a non-reentrant model
  4254 ;;
  4255                           
  4256                           	psect	text22
  4257  002898                     __ptext22:
  4258                           	callstack 0
  4259  002898                     _Lcd_Cmd:
  4260                           	callstack 19
  4261                           
  4262                           ;incstack = 0
  4263                           ;Lcd_Cmd@a stored from wreg
  4264  002898  0100               	movlb	0	; () banked
  4265  00289A  6F7F               	movwf	Lcd_Cmd@a& (0+255),b
  4266  00289C                     
  4267                           ;lcd.c: 26: void Lcd_Cmd(unsigned char a);lcd.c: 27: {;lcd.c: 28:  LATDbits.LATD2 = 0;
  4268  00289C  948C               	bcf	140,2,c	;volatile
  4269  00289E                     
  4270                           ;lcd.c: 29:  Lcd_Port(a);
  4271  00289E  0100               	movlb	0	; () banked
  4272  0028A0  517F               	movf	Lcd_Cmd@a& (0+255),w,b
  4273  0028A2  ECB2  F011         	call	_Lcd_Port
  4274  0028A6                     
  4275                           ;lcd.c: 30:  LATDbits.LATD3 = 1;
  4276  0028A6  868C               	bsf	140,3,c	;volatile
  4277  0028A8                     
  4278                           ;lcd.c: 31:         _delay((unsigned long)((4)*(16000000UL/4000.0)));
  4279  0028A8  0E15               	movlw	21
  4280  0028AA  0100               	movlb	0	; () banked
  4281  0028AC  6F7E               	movwf	??_Lcd_Cmd& (0+255),b
  4282  0028AE  0EC6               	movlw	198
  4283  0028B0                     u3257:
  4284  0028B0  2EE8               	decfsz	wreg,f,c
  4285  0028B2  D7FE               	bra	u3257
  4286  0028B4  2F7E               	decfsz	??_Lcd_Cmd& (0+255),f,b
  4287  0028B6  D7FC               	bra	u3257
  4288  0028B8  F000               	nop	
  4289  0028BA                     
  4290                           ;lcd.c: 32:         LATDbits.LATD3 = 0;
  4291  0028BA  968C               	bcf	140,3,c	;volatile
  4292  0028BC  0012               	return		;funcret
  4293  0028BE                     __end_of_Lcd_Cmd:
  4294                           	callstack 0
  4295                           
  4296 ;; *************** function _Lcd_Port *****************
  4297 ;; Defined at:
  4298 ;;		line 3 in file "lcd.c"
  4299 ;; Parameters:    Size  Location     Type
  4300 ;;  a               1    wreg     unsigned char 
  4301 ;; Auto vars:     Size  Location     Type
  4302 ;;  a               1   29[BANK0 ] unsigned char 
  4303 ;; Return value:  Size  Location     Type
  4304 ;;                  1    wreg      void 
  4305 ;; Registers used:
  4306 ;;		wreg
  4307 ;; Tracked objects:
  4308 ;;		On entry : 0/0
  4309 ;;		On exit  : 0/0
  4310 ;;		Unchanged: 0/0
  4311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4312 ;;      Params:         0       0       0       0       0       0       0       0       0
  4313 ;;      Locals:         0       1       0       0       0       0       0       0       0
  4314 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4315 ;;      Totals:         0       1       0       0       0       0       0       0       0
  4316 ;;Total ram usage:        1 bytes
  4317 ;; Hardware stack levels used: 1
  4318 ;; Hardware stack levels required when called: 9
  4319 ;; This function calls:
  4320 ;;		Nothing
  4321 ;; This function is called by:
  4322 ;;		_Lcd_Cmd
  4323 ;;		_Lcd_Init
  4324 ;;		_Lcd_Write_Char
  4325 ;; This function uses a non-reentrant model
  4326 ;;
  4327                           
  4328                           	psect	text23
  4329  002364                     __ptext23:
  4330                           	callstack 0
  4331  002364                     _Lcd_Port:
  4332                           	callstack 19
  4333                           
  4334                           ;incstack = 0
  4335                           ;Lcd_Port@a stored from wreg
  4336  002364  0100               	movlb	0	; () banked
  4337  002366  6F7D               	movwf	Lcd_Port@a& (0+255),b
  4338  002368                     
  4339                           ;lcd.c: 3: void Lcd_Port(unsigned char a);lcd.c: 4: {;lcd.c: 5:  if(a & 1)
  4340  002368  0100               	movlb	0	; () banked
  4341  00236A  A17D               	btfss	Lcd_Port@a& (0+255),0,b
  4342  00236C  EFBA  F011         	goto	u2221
  4343  002370  EFBC  F011         	goto	u2220
  4344  002374                     u2221:
  4345  002374  EFBF  F011         	goto	l7
  4346  002378                     u2220:
  4347  002378                     
  4348                           ; BSR set to: 0
  4349                           ;lcd.c: 6:   LATDbits.LATD4 = 1;
  4350  002378  888C               	bsf	140,4,c	;volatile
  4351  00237A  EFC0  F011         	goto	l2602
  4352  00237E                     l7:
  4353                           
  4354                           ; BSR set to: 0
  4355                           ;lcd.c: 8:   LATDbits.LATD4 = 0;
  4356  00237E  988C               	bcf	140,4,c	;volatile
  4357  002380                     l2602:
  4358                           
  4359                           ; BSR set to: 0
  4360                           ;lcd.c: 10:  if(a & 2)
  4361  002380  A37D               	btfss	Lcd_Port@a& (0+255),1,b
  4362  002382  EFC5  F011         	goto	u2231
  4363  002386  EFC7  F011         	goto	u2230
  4364  00238A                     u2231:
  4365  00238A  EFCA  F011         	goto	l9
  4366  00238E                     u2230:
  4367  00238E                     
  4368                           ; BSR set to: 0
  4369                           ;lcd.c: 11:   LATDbits.LATD5 = 1;
  4370  00238E  8A8C               	bsf	140,5,c	;volatile
  4371  002390  EFCB  F011         	goto	l2606
  4372  002394                     l9:
  4373                           
  4374                           ; BSR set to: 0
  4375                           ;lcd.c: 13:   LATDbits.LATD5 = 0;
  4376  002394  9A8C               	bcf	140,5,c	;volatile
  4377  002396                     l2606:
  4378                           
  4379                           ; BSR set to: 0
  4380                           ;lcd.c: 15:  if(a & 4)
  4381  002396  A57D               	btfss	Lcd_Port@a& (0+255),2,b
  4382  002398  EFD0  F011         	goto	u2241
  4383  00239C  EFD2  F011         	goto	u2240
  4384  0023A0                     u2241:
  4385  0023A0  EFD5  F011         	goto	l11
  4386  0023A4                     u2240:
  4387  0023A4                     
  4388                           ; BSR set to: 0
  4389                           ;lcd.c: 16:   LATDbits.LATD6 = 1;
  4390  0023A4  8C8C               	bsf	140,6,c	;volatile
  4391  0023A6  EFD6  F011         	goto	l2610
  4392  0023AA                     l11:
  4393                           
  4394                           ; BSR set to: 0
  4395                           ;lcd.c: 18:   LATDbits.LATD6 = 0;
  4396  0023AA  9C8C               	bcf	140,6,c	;volatile
  4397  0023AC                     l2610:
  4398                           
  4399                           ; BSR set to: 0
  4400                           ;lcd.c: 20:  if(a & 8)
  4401  0023AC  A77D               	btfss	Lcd_Port@a& (0+255),3,b
  4402  0023AE  EFDB  F011         	goto	u2251
  4403  0023B2  EFDD  F011         	goto	u2250
  4404  0023B6                     u2251:
  4405  0023B6  EFE0  F011         	goto	l13
  4406  0023BA                     u2250:
  4407  0023BA                     
  4408                           ; BSR set to: 0
  4409                           ;lcd.c: 21:   LATDbits.LATD7 = 1;
  4410  0023BA  8E8C               	bsf	140,7,c	;volatile
  4411  0023BC  EFE1  F011         	goto	l15
  4412  0023C0                     l13:
  4413                           
  4414                           ; BSR set to: 0
  4415                           ;lcd.c: 23:   LATDbits.LATD7 = 0;
  4416  0023C0  9E8C               	bcf	140,7,c	;volatile
  4417  0023C2                     l15:
  4418                           
  4419                           ; BSR set to: 0
  4420  0023C2  0012               	return		;funcret
  4421  0023C4                     __end_of_Lcd_Port:
  4422                           	callstack 0
  4423                           
  4424 ;; *************** function _Config_Port *****************
  4425 ;; Defined at:
  4426 ;;		line 61 in file "main.c"
  4427 ;; Parameters:    Size  Location     Type
  4428 ;;		None
  4429 ;; Auto vars:     Size  Location     Type
  4430 ;;		None
  4431 ;; Return value:  Size  Location     Type
  4432 ;;                  1    wreg      void 
  4433 ;; Registers used:
  4434 ;;		wreg, status,2
  4435 ;; Tracked objects:
  4436 ;;		On entry : 0/0
  4437 ;;		On exit  : 0/0
  4438 ;;		Unchanged: 0/0
  4439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4440 ;;      Params:         0       0       0       0       0       0       0       0       0
  4441 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4442 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4443 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4444 ;;Total ram usage:        0 bytes
  4445 ;; Hardware stack levels used: 1
  4446 ;; Hardware stack levels required when called: 9
  4447 ;; This function calls:
  4448 ;;		Nothing
  4449 ;; This function is called by:
  4450 ;;		_main
  4451 ;; This function uses a non-reentrant model
  4452 ;;
  4453                           
  4454                           	psect	text24
  4455  00272C                     __ptext24:
  4456                           	callstack 0
  4457  00272C                     _Config_Port:
  4458                           	callstack 21
  4459  00272C                     
  4460                           ;main.c: 64:     LATA= 0b00000000;
  4461  00272C  0E00               	movlw	0
  4462  00272E  6E89               	movwf	137,c	;volatile
  4463                           
  4464                           ;main.c: 65:     LATD= 0x00;
  4465  002730  0E00               	movlw	0
  4466  002732  6E8C               	movwf	140,c	;volatile
  4467  002734                     
  4468                           ;main.c: 66:     LATEbits.LATE0=0;
  4469  002734  908D               	bcf	141,0,c	;volatile
  4470                           
  4471                           ;main.c: 68:     SLRCON=0b00000000;
  4472  002736  0E00               	movlw	0
  4473  002738  6E7A               	movwf	122,c	;volatile
  4474  00273A                     
  4475                           ;main.c: 71:     ANSELAbits.ANSA0=0;
  4476  00273A  010F               	movlb	15	; () banked
  4477  00273C  915B               	bcf	91,0,b	;volatile
  4478  00273E                     
  4479                           ; BSR set to: 15
  4480                           ;main.c: 72:     ANSELAbits.ANSA1=0;
  4481  00273E  935B               	bcf	91,1,b	;volatile
  4482  002740                     
  4483                           ; BSR set to: 15
  4484                           ;main.c: 73:     ANSELAbits.ANSA2=0;
  4485  002740  955B               	bcf	91,2,b	;volatile
  4486  002742                     
  4487                           ; BSR set to: 15
  4488                           ;main.c: 74:     ANSELAbits.ANSA5=0;
  4489  002742  9B5B               	bcf	91,5,b	;volatile
  4490  002744                     
  4491                           ; BSR set to: 15
  4492                           ;main.c: 76:     ANSELBbits.ANSB0=0;
  4493  002744  915C               	bcf	92,0,b	;volatile
  4494  002746                     
  4495                           ; BSR set to: 15
  4496                           ;main.c: 77:     ANSELBbits.ANSB1=0;
  4497  002746  935C               	bcf	92,1,b	;volatile
  4498  002748                     
  4499                           ; BSR set to: 15
  4500                           ;main.c: 78:     ANSELBbits.ANSB2=0;
  4501  002748  955C               	bcf	92,2,b	;volatile
  4502  00274A                     
  4503                           ; BSR set to: 15
  4504                           ;main.c: 80:     ANSELEbits.ANSE0=0;
  4505  00274A  915F               	bcf	95,0,b	;volatile
  4506                           
  4507                           ;main.c: 82:     ANSELD = 0x00;
  4508  00274C  0E00               	movlw	0
  4509  00274E  6F5E               	movwf	94,b	;volatile
  4510                           
  4511                           ;main.c: 85:     TRISA=0x00;
  4512  002750  0E00               	movlw	0
  4513  002752  6E92               	movwf	146,c	;volatile
  4514                           
  4515                           ;main.c: 86:     TRISD=0x00;
  4516  002754  0E00               	movlw	0
  4517  002756  6E95               	movwf	149,c	;volatile
  4518  002758                     
  4519                           ; BSR set to: 15
  4520                           ;main.c: 87:     TRISEbits.RE0=0;
  4521  002758  9096               	bcf	150,0,c	;volatile
  4522  00275A                     
  4523                           ; BSR set to: 15
  4524                           ;main.c: 89:     TRISBbits.RB0=1;
  4525  00275A  8093               	bsf	147,0,c	;volatile
  4526  00275C                     
  4527                           ; BSR set to: 15
  4528                           ;main.c: 90:     TRISBbits.RB1=1;
  4529  00275C  8293               	bsf	147,1,c	;volatile
  4530  00275E                     
  4531                           ; BSR set to: 15
  4532                           ;main.c: 91:     TRISBbits.RB2=1;
  4533  00275E  8493               	bsf	147,2,c	;volatile
  4534  002760                     
  4535                           ; BSR set to: 15
  4536                           ;main.c: 94:     WPUBbits.WPUB0=1;
  4537  002760  8085               	bsf	133,0,c	;volatile
  4538  002762                     
  4539                           ; BSR set to: 15
  4540                           ;main.c: 95:     WPUBbits.WPUB1=1;
  4541  002762  8285               	bsf	133,1,c	;volatile
  4542  002764                     
  4543                           ; BSR set to: 15
  4544                           ;main.c: 96:     INTCON2bits.NOT_RBPU=0;
  4545  002764  9EF1               	bcf	241,7,c	;volatile
  4546  002766                     
  4547                           ; BSR set to: 15
  4548  002766  0012               	return		;funcret
  4549  002768                     __end_of_Config_Port:
  4550                           	callstack 0
  4551                           
  4552 ;; *************** function _Config_Interrupt *****************
  4553 ;; Defined at:
  4554 ;;		line 100 in file "main.c"
  4555 ;; Parameters:    Size  Location     Type
  4556 ;;		None
  4557 ;; Auto vars:     Size  Location     Type
  4558 ;;		None
  4559 ;; Return value:  Size  Location     Type
  4560 ;;                  1    wreg      void 
  4561 ;; Registers used:
  4562 ;;		None
  4563 ;; Tracked objects:
  4564 ;;		On entry : 0/0
  4565 ;;		On exit  : 0/0
  4566 ;;		Unchanged: 0/0
  4567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4568 ;;      Params:         0       0       0       0       0       0       0       0       0
  4569 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4570 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4571 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4572 ;;Total ram usage:        0 bytes
  4573 ;; Hardware stack levels used: 1
  4574 ;; Hardware stack levels required when called: 9
  4575 ;; This function calls:
  4576 ;;		Nothing
  4577 ;; This function is called by:
  4578 ;;		_main
  4579 ;; This function uses a non-reentrant model
  4580 ;;
  4581                           
  4582                           	psect	text25
  4583  002904                     __ptext25:
  4584                           	callstack 0
  4585  002904                     _Config_Interrupt:
  4586                           	callstack 21
  4587  002904                     
  4588                           ;main.c: 102:     INTCONbits.GIE=1;
  4589  002904  8EF2               	bsf	242,7,c	;volatile
  4590                           
  4591                           ;main.c: 103:     INTCONbits.PEIE=1;
  4592  002906  8CF2               	bsf	242,6,c	;volatile
  4593                           
  4594                           ;main.c: 106:     INTCONbits.INT0E=1;
  4595  002908  88F2               	bsf	242,4,c	;volatile
  4596                           
  4597                           ;main.c: 107:     INTCONbits.INT0F=0;
  4598  00290A  92F2               	bcf	242,1,c	;volatile
  4599                           
  4600                           ;main.c: 108:     INTCON2bits.INTEDG0=0;
  4601  00290C  9CF1               	bcf	241,6,c	;volatile
  4602                           
  4603                           ;main.c: 111:     INTCON3bits.INT1E=1;
  4604  00290E  86F0               	bsf	240,3,c	;volatile
  4605                           
  4606                           ;main.c: 112:     INTCON3bits.INT1F=0;
  4607  002910  90F0               	bcf	240,0,c	;volatile
  4608                           
  4609                           ;main.c: 113:     INTCON2bits.INTEDG1=0;
  4610  002912  9AF1               	bcf	241,5,c	;volatile
  4611                           
  4612                           ;main.c: 116:     INTCON3bits.INT2E=1;
  4613  002914  88F0               	bsf	240,4,c	;volatile
  4614                           
  4615                           ;main.c: 117:     INTCON3bits.INT2F=0;
  4616  002916  92F0               	bcf	240,1,c	;volatile
  4617                           
  4618                           ;main.c: 118:     INTCON2bits.INTEDG2=0;
  4619  002918  98F1               	bcf	241,4,c	;volatile
  4620  00291A  0012               	return		;funcret
  4621  00291C                     __end_of_Config_Interrupt:
  4622                           	callstack 0
  4623                           
  4624 ;; *************** function _Config_Clock *****************
  4625 ;; Defined at:
  4626 ;;		line 56 in file "main.c"
  4627 ;; Parameters:    Size  Location     Type
  4628 ;;		None
  4629 ;; Auto vars:     Size  Location     Type
  4630 ;;		None
  4631 ;; Return value:  Size  Location     Type
  4632 ;;                  1    wreg      void 
  4633 ;; Registers used:
  4634 ;;		wreg, status,2
  4635 ;; Tracked objects:
  4636 ;;		On entry : 0/0
  4637 ;;		On exit  : 0/0
  4638 ;;		Unchanged: 0/0
  4639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4640 ;;      Params:         0       0       0       0       0       0       0       0       0
  4641 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4642 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4643 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4644 ;;Total ram usage:        0 bytes
  4645 ;; Hardware stack levels used: 1
  4646 ;; Hardware stack levels required when called: 9
  4647 ;; This function calls:
  4648 ;;		Nothing
  4649 ;; This function is called by:
  4650 ;;		_main
  4651 ;; This function uses a non-reentrant model
  4652 ;;
  4653                           
  4654                           	psect	text26
  4655  00292A                     __ptext26:
  4656                           	callstack 0
  4657  00292A                     _Config_Clock:
  4658                           	callstack 21
  4659  00292A                     
  4660                           ;main.c: 57:     OSCCONbits.IRCF=0b111;
  4661  00292A  0E70               	movlw	112
  4662  00292C  12D3               	iorwf	211,f,c	;volatile
  4663                           
  4664                           ;main.c: 58:     OSCCONbits.SCS=0b10;
  4665  00292E  50D3               	movf	211,w,c	;volatile
  4666  002930  0BFC               	andlw	-4
  4667  002932  0902               	iorlw	2
  4668  002934  6ED3               	movwf	211,c	;volatile
  4669  002936  0012               	return		;funcret
  4670  002938                     __end_of_Config_Clock:
  4671                           	callstack 0
  4672                           
  4673 ;; *************** function _ISR_INT0 *****************
  4674 ;; Defined at:
  4675 ;;		line 121 in file "main.c"
  4676 ;; Parameters:    Size  Location     Type
  4677 ;;		None
  4678 ;; Auto vars:     Size  Location     Type
  4679 ;;		None
  4680 ;; Return value:  Size  Location     Type
  4681 ;;                  1    wreg      void 
  4682 ;; Registers used:
  4683 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4684 ;; Tracked objects:
  4685 ;;		On entry : 0/0
  4686 ;;		On exit  : 0/0
  4687 ;;		Unchanged: 0/0
  4688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4689 ;;      Params:         0       0       0       0       0       0       0       0       0
  4690 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4691 ;;      Temps:          0      10       0       0       0       0       0       0       0
  4692 ;;      Totals:         0      10       0       0       0       0       0       0       0
  4693 ;;Total ram usage:       10 bytes
  4694 ;; Hardware stack levels used: 1
  4695 ;; Hardware stack levels required when called: 8
  4696 ;; This function calls:
  4697 ;;		i2_Lcd_Set_Cursor
  4698 ;;		i2_Lcd_Write_String
  4699 ;;		i2_sprintf
  4700 ;; This function is called by:
  4701 ;;		Interrupt level 2
  4702 ;; This function uses a non-reentrant model
  4703 ;;
  4704                           
  4705                           	psect	intcode
  4706  000008                     __pintcode:
  4707                           	callstack 0
  4708  000008                     _ISR_INT0:
  4709                           	callstack 14
  4710                           
  4711                           ;incstack = 0
  4712  000008  825C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4713  00000A  CFE1 F073          	movff	fsr1l,??_ISR_INT0
  4714  00000E  CFE2 F074          	movff	fsr1h,??_ISR_INT0+1
  4715  000012  CFD9 F075          	movff	fsr2l,??_ISR_INT0+2
  4716  000016  CFDA F076          	movff	fsr2h,??_ISR_INT0+3
  4717  00001A  CFF3 F077          	movff	prodl,??_ISR_INT0+4
  4718  00001E  CFF4 F078          	movff	prodh,??_ISR_INT0+5
  4719  000022  CFF6 F079          	movff	tblptrl,??_ISR_INT0+6
  4720  000026  CFF7 F07A          	movff	tblptrh,??_ISR_INT0+7
  4721  00002A  CFF8 F07B          	movff	tblptru,??_ISR_INT0+8
  4722  00002E  CFF5 F07C          	movff	tablat,??_ISR_INT0+9
  4723  000032                     
  4724                           ;main.c: 123:     if(INTCONbits.INT0F){
  4725  000032  A2F2               	btfss	242,1,c	;volatile
  4726  000034  EF1E  F000         	goto	i2u256_41
  4727  000038  EF20  F000         	goto	i2u256_40
  4728  00003C                     i2u256_41:
  4729  00003C  EF23  F000         	goto	i2l3078
  4730  000040                     i2u256_40:
  4731  000040                     
  4732                           ;main.c: 124:         autos++;
  4733  000040  0100               	movlb	0	; () banked
  4734  000042  2BD1               	incf	_autos& (0+255),f,b
  4735  000044                     
  4736                           ; BSR set to: 0
  4737                           ;main.c: 125:         INTCONbits.INT0F=0;
  4738  000044  92F2               	bcf	242,1,c	;volatile
  4739  000046                     i2l3078:
  4740                           
  4741                           ;main.c: 127:     if(INTCON3bits.INT1F == 1){
  4742  000046  A0F0               	btfss	240,0,c	;volatile
  4743  000048  EF28  F000         	goto	i2u257_41
  4744  00004C  EF2A  F000         	goto	i2u257_40
  4745  000050                     i2u257_41:
  4746  000050  EF2D  F000         	goto	i2l3084
  4747  000054                     i2u257_40:
  4748  000054                     
  4749                           ;main.c: 128:         personas++;
  4750  000054  0100               	movlb	0	; () banked
  4751  000056  2BD0               	incf	_personas& (0+255),f,b
  4752  000058                     
  4753                           ; BSR set to: 0
  4754                           ;main.c: 129:         INTCON3bits.INT1F=0;
  4755  000058  90F0               	bcf	240,0,c	;volatile
  4756  00005A                     i2l3084:
  4757                           
  4758                           ;main.c: 132:     if(INTCON3bits.INT2F){
  4759  00005A  A2F0               	btfss	240,1,c	;volatile
  4760  00005C  EF32  F000         	goto	i2u258_41
  4761  000060  EF34  F000         	goto	i2u258_40
  4762  000064                     i2u258_41:
  4763  000064  EF37  F000         	goto	i2l3090
  4764  000068                     i2u258_40:
  4765  000068                     
  4766                           ;main.c: 133:         LATE^=(1<<0);
  4767  000068  0E01               	movlw	1
  4768  00006A  1A8D               	xorwf	141,f,c	;volatile
  4769  00006C                     
  4770                           ;main.c: 134:         INTCON3bits.INT2F=0;
  4771  00006C  92F0               	bcf	240,1,c	;volatile
  4772  00006E                     i2l3090:
  4773                           
  4774                           ;main.c: 137:     sprintf(str_autos,"Autos:%03d",autos);
  4775  00006E  0ED2               	movlw	low _str_autos
  4776  000070  0100               	movlb	0	; () banked
  4777  000072  6F60               	movwf	i2sprintf@s& (0+255),b
  4778  000074  0E00               	movlw	high _str_autos
  4779  000076  6F61               	movwf	(i2sprintf@s+1)& (0+255),b
  4780  000078  0E0F               	movlw	low STR_1
  4781  00007A  6F62               	movwf	i2sprintf@fmt& (0+255),b
  4782  00007C  0E08               	movlw	high STR_1
  4783  00007E  6F63               	movwf	(i2sprintf@fmt+1)& (0+255),b
  4784  000080  C0D1  F064         	movff	_autos,?i2_sprintf+4
  4785  000084  6B65               	clrf	(?i2_sprintf+5)& (0+255),b
  4786  000086  EC63  F012         	call	i2_sprintf	;wreg free
  4787  00008A                     
  4788                           ;main.c: 138:     sprintf(str_personas,"Personas:%03d",personas);
  4789  00008A  0E20               	movlw	low _str_personas
  4790  00008C  0100               	movlb	0	; () banked
  4791  00008E  6F60               	movwf	i2sprintf@s& (0+255),b
  4792  000090  0E01               	movlw	high _str_personas
  4793  000092  6F61               	movwf	(i2sprintf@s+1)& (0+255),b
  4794  000094  0E01               	movlw	low STR_2
  4795  000096  6F62               	movwf	i2sprintf@fmt& (0+255),b
  4796  000098  0E08               	movlw	high STR_2
  4797  00009A  6F63               	movwf	(i2sprintf@fmt+1)& (0+255),b
  4798  00009C  C0D0  F064         	movff	_personas,?i2_sprintf+4
  4799  0000A0  6B65               	clrf	(?i2_sprintf+5)& (0+255),b
  4800  0000A2  EC63  F012         	call	i2_sprintf	;wreg free
  4801  0000A6                     
  4802                           ;main.c: 139:     Lcd_Set_Cursor(1,1);
  4803  0000A6  0E01               	movlw	1
  4804  0000A8  6E04               	movwf	i2Lcd_Set_Cursor@b^0,c
  4805  0000AA  0E01               	movlw	1
  4806  0000AC  EC1D  F011         	call	i2_Lcd_Set_Cursor
  4807  0000B0                     
  4808                           ;main.c: 140:     Lcd_Write_String(str_autos);
  4809  0000B0  0ED2               	movlw	low _str_autos
  4810  0000B2  6E05               	movwf	i2Lcd_Write_String@a^0,c
  4811  0000B4  0E00               	movlw	high _str_autos
  4812  0000B6  6E06               	movwf	(i2Lcd_Write_String@a+1)^0,c
  4813  0000B8  EC57  F013         	call	i2_Lcd_Write_String	;wreg free
  4814  0000BC                     
  4815                           ;main.c: 141:     Lcd_Set_Cursor(2,1);
  4816  0000BC  0E01               	movlw	1
  4817  0000BE  6E04               	movwf	i2Lcd_Set_Cursor@b^0,c
  4818  0000C0  0E02               	movlw	2
  4819  0000C2  EC1D  F011         	call	i2_Lcd_Set_Cursor
  4820  0000C6                     
  4821                           ;main.c: 142:     Lcd_Write_String(str_personas);
  4822  0000C6  0E20               	movlw	low _str_personas
  4823  0000C8  6E05               	movwf	i2Lcd_Write_String@a^0,c
  4824  0000CA  0E01               	movlw	high _str_personas
  4825  0000CC  6E06               	movwf	(i2Lcd_Write_String@a+1)^0,c
  4826  0000CE  EC57  F013         	call	i2_Lcd_Write_String	;wreg free
  4827  0000D2  C07C  FFF5         	movff	??_ISR_INT0+9,tablat
  4828  0000D6  C07B  FFF8         	movff	??_ISR_INT0+8,tblptru
  4829  0000DA  C07A  FFF7         	movff	??_ISR_INT0+7,tblptrh
  4830  0000DE  C079  FFF6         	movff	??_ISR_INT0+6,tblptrl
  4831  0000E2  C078  FFF4         	movff	??_ISR_INT0+5,prodh
  4832  0000E6  C077  FFF3         	movff	??_ISR_INT0+4,prodl
  4833  0000EA  C076  FFDA         	movff	??_ISR_INT0+3,fsr2h
  4834  0000EE  C075  FFD9         	movff	??_ISR_INT0+2,fsr2l
  4835  0000F2  C074  FFE2         	movff	??_ISR_INT0+1,fsr1h
  4836  0000F6  C073  FFE1         	movff	??_ISR_INT0,fsr1l
  4837  0000FA  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4838  0000FC  0011               	retfie		f
  4839  0000FE                     __end_of_ISR_INT0:
  4840                           	callstack 0
  4841                           
  4842 ;; *************** function i2_sprintf *****************
  4843 ;; Defined at:
  4844 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_sprintf.c"
  4845 ;; Parameters:    Size  Location     Type
  4846 ;;  s               2    0[BANK0 ] PTR unsigned char 
  4847 ;;		 -> str_personas(16), str_autos(16), 
  4848 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  4849 ;;		 -> STR_4(14), STR_3(11), STR_2(14), STR_1(11), 
  4850 ;; Auto vars:     Size  Location     Type
  4851 ;;  f              11    8[BANK0 ] struct _IO_FILE
  4852 ;;  ap              2    6[BANK0 ] PTR void [1]
  4853 ;;		 -> ?i2_sprintf(2), ?_sprintf(2), 
  4854 ;;  ret             2    0        int 
  4855 ;; Return value:  Size  Location     Type
  4856 ;;                  2    0[BANK0 ] int 
  4857 ;; Registers used:
  4858 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4859 ;; Tracked objects:
  4860 ;;		On entry : 0/0
  4861 ;;		On exit  : 0/0
  4862 ;;		Unchanged: 0/0
  4863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4864 ;;      Params:         0       6       0       0       0       0       0       0       0
  4865 ;;      Locals:         0      13       0       0       0       0       0       0       0
  4866 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4867 ;;      Totals:         0      19       0       0       0       0       0       0       0
  4868 ;;Total ram usage:       19 bytes
  4869 ;; Hardware stack levels used: 1
  4870 ;; Hardware stack levels required when called: 7
  4871 ;; This function calls:
  4872 ;;		i2_vfprintf
  4873 ;; This function is called by:
  4874 ;;		_ISR_INT0
  4875 ;; This function uses a non-reentrant model
  4876 ;;
  4877                           
  4878                           	psect	text28
  4879  0024C6                     __ptext28:
  4880                           	callstack 0
  4881  0024C6                     i2_sprintf:
  4882                           	callstack 14
  4883  0024C6  0E64               	movlw	low (?i2_sprintf+4)
  4884  0024C8  0100               	movlb	0	; () banked
  4885  0024CA  6F66               	movwf	i2sprintf@ap& (0+255),b
  4886  0024CC  0E00               	movlw	high (?i2_sprintf+4)
  4887  0024CE  6F67               	movwf	(i2sprintf@ap+1)& (0+255),b
  4888  0024D0  C060  F068         	movff	i2sprintf@s,i2sprintf@f
  4889  0024D4  C061  F069         	movff	i2sprintf@s+1,i2sprintf@f+1
  4890  0024D8                     
  4891                           ; BSR set to: 0
  4892  0024D8  0E00               	movlw	0
  4893  0024DA  6F6C               	movwf	(i2sprintf@f+4)& (0+255),b
  4894  0024DC  0E00               	movlw	0
  4895  0024DE  6F6B               	movwf	(i2sprintf@f+3)& (0+255),b
  4896  0024E0                     
  4897                           ; BSR set to: 0
  4898  0024E0  0E00               	movlw	0
  4899  0024E2  6F72               	movwf	(i2sprintf@f+10)& (0+255),b
  4900  0024E4  0E00               	movlw	0
  4901  0024E6  6F71               	movwf	(i2sprintf@f+9)& (0+255),b
  4902  0024E8                     
  4903                           ; BSR set to: 0
  4904  0024E8  0E68               	movlw	low i2sprintf@f
  4905  0024EA  6E54               	movwf	i2vfprintf@fp^0,c
  4906  0024EC  0E00               	movlw	high i2sprintf@f
  4907  0024EE  6E55               	movwf	(i2vfprintf@fp+1)^0,c
  4908  0024F0  C062  F056         	movff	i2sprintf@fmt,i2vfprintf@fmt
  4909  0024F4  C063  F057         	movff	i2sprintf@fmt+1,i2vfprintf@fmt+1
  4910  0024F8  0E66               	movlw	low i2sprintf@ap
  4911  0024FA  6E58               	movwf	i2vfprintf@ap^0,c
  4912  0024FC  0E00               	movlw	high i2sprintf@ap
  4913  0024FE  6E59               	movwf	(i2vfprintf@ap+1)^0,c
  4914  002500  EC81  F011         	call	i2_vfprintf	;wreg free
  4915  002504  0100               	movlb	0	; () banked
  4916  002506  516B               	movf	(i2sprintf@f+3)& (0+255),w,b
  4917  002508  2560               	addwf	i2sprintf@s& (0+255),w,b
  4918  00250A  6ED9               	movwf	fsr2l,c
  4919  00250C  516C               	movf	(i2sprintf@f+4)& (0+255),w,b
  4920  00250E  2161               	addwfc	(i2sprintf@s+1)& (0+255),w,b
  4921  002510  6EDA               	movwf	fsr2h,c
  4922  002512  0E00               	movlw	0
  4923  002514  6EDF               	movwf	indf2,c
  4924  002516                     
  4925                           ; BSR set to: 0
  4926  002516  0012               	return		;funcret
  4927  002518                     __end_ofi2_sprintf:
  4928                           	callstack 0
  4929                           
  4930 ;; *************** function i2_vfprintf *****************
  4931 ;; Defined at:
  4932 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  4933 ;; Parameters:    Size  Location     Type
  4934 ;;  fp              2   83[COMRAM] PTR struct _IO_FILE
  4935 ;;		 -> i2sprintf@f(11), sprintf@f(11), 
  4936 ;;  fmt             2   85[COMRAM] PTR const unsigned char 
  4937 ;;		 -> STR_4(14), STR_3(11), STR_2(14), STR_1(11), 
  4938 ;;  ap              2   87[COMRAM] PTR PTR void 
  4939 ;;		 -> i2sprintf@ap(2), sprintf@ap(2), 
  4940 ;; Auto vars:     Size  Location     Type
  4941 ;;  cfmt            2   89[COMRAM] PTR unsigned char 
  4942 ;;		 -> STR_4(14), STR_3(11), STR_2(14), STR_1(11), 
  4943 ;; Return value:  Size  Location     Type
  4944 ;;                  2   83[COMRAM] int 
  4945 ;; Registers used:
  4946 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4947 ;; Tracked objects:
  4948 ;;		On entry : 0/0
  4949 ;;		On exit  : 0/0
  4950 ;;		Unchanged: 0/0
  4951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4952 ;;      Params:         6       0       0       0       0       0       0       0       0
  4953 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4954 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4955 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4956 ;;Total ram usage:        8 bytes
  4957 ;; Hardware stack levels used: 1
  4958 ;; Hardware stack levels required when called: 6
  4959 ;; This function calls:
  4960 ;;		i2_vfpfcnvrt
  4961 ;; This function is called by:
  4962 ;;		i2_sprintf
  4963 ;; This function uses a non-reentrant model
  4964 ;;
  4965                           
  4966                           	psect	text29
  4967  002302                     __ptext29:
  4968                           	callstack 0
  4969  002302                     i2_vfprintf:
  4970                           	callstack 14
  4971  002302                     
  4972                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  4973  002302  C056  F05A         	movff	i2vfprintf@fmt,i2vfprintf@cfmt
  4974  002306  C057  F05B         	movff	i2vfprintf@fmt+1,i2vfprintf@cfmt+1
  4975  00230A                     
  4976                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  4977  00230A  0E00               	movlw	0
  4978  00230C  0100               	movlb	0	; () banked
  4979  00230E  6FC9               	movwf	(_nout+1)& (0+255),b
  4980  002310  0E00               	movlw	0
  4981  002312  6FC8               	movwf	_nout& (0+255),b
  4982                           
  4983                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4984  002314  EF9F  F011         	goto	i2l2896
  4985  002318                     i2l2894:
  4986                           
  4987                           ; BSR set to: 0
  4988                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  4989  002318  C054  F040         	movff	i2vfprintf@fp,i2vfpfcnvrt@fp
  4990  00231C  C055  F041         	movff	i2vfprintf@fp+1,i2vfpfcnvrt@fp+1
  4991  002320  0E5A               	movlw	low i2vfprintf@cfmt
  4992  002322  6E42               	movwf	i2vfpfcnvrt@fmt^0,c
  4993  002324  0E00               	movlw	high i2vfprintf@cfmt
  4994  002326  6E43               	movwf	(i2vfpfcnvrt@fmt+1)^0,c
  4995  002328  C058  F044         	movff	i2vfprintf@ap,i2vfpfcnvrt@ap
  4996  00232C  C059  F045         	movff	i2vfprintf@ap+1,i2vfpfcnvrt@ap+1
  4997  002330  ECBF  F005         	call	i2_vfpfcnvrt	;wreg free
  4998  002334  5040               	movf	?i2_vfpfcnvrt^0,w,c
  4999  002336  0100               	movlb	0	; () banked
  5000  002338  27C8               	addwf	_nout& (0+255),f,b
  5001  00233A  5041               	movf	(?i2_vfpfcnvrt+1)^0,w,c
  5002  00233C  23C9               	addwfc	(_nout+1)& (0+255),f,b
  5003  00233E                     i2l2896:
  5004                           
  5005                           ; BSR set to: 0
  5006                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  5007  00233E  C05A  FFF6         	movff	i2vfprintf@cfmt,tblptrl
  5008  002342  C05B  FFF7         	movff	i2vfprintf@cfmt+1,tblptrh
  5009  002346                     	if	0	;tblptru may be non-zero
  5010  002346                     	endif
  5011  002346                     	if	0	;tblptru may be non-zero
  5012  002346                     	endif
  5013  002346  0008               	tblrd		*
  5014  002348  50F5               	movf	tablat,w,c
  5015  00234A  0900               	iorlw	0
  5016  00234C  A4D8               	btfss	status,2,c
  5017  00234E  EFAB  F011         	goto	i2u249_41
  5018  002352  EFAD  F011         	goto	i2u249_40
  5019  002356                     i2u249_41:
  5020  002356  EF8C  F011         	goto	i2l2894
  5021  00235A                     i2u249_40:
  5022  00235A                     
  5023                           ; BSR set to: 0
  5024                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  5025  00235A  C0C8  F054         	movff	_nout,?i2_vfprintf
  5026  00235E  C0C9  F055         	movff	_nout+1,?i2_vfprintf+1
  5027  002362                     
  5028                           ; BSR set to: 0
  5029  002362  0012               	return		;funcret
  5030  002364                     __end_ofi2_vfprintf:
  5031                           	callstack 0
  5032                           
  5033 ;; *************** function i2_vfpfcnvrt *****************
  5034 ;; Defined at:
  5035 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  5036 ;; Parameters:    Size  Location     Type
  5037 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  5038 ;;		 -> i2sprintf@f(11), sprintf@f(11), 
  5039 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  5040 ;;		 -> i2vfprintf@cfmt(2), vfprintf@cfmt(2), 
  5041 ;;  ap              2   67[COMRAM] PTR PTR void 
  5042 ;;		 -> i2sprintf@ap(2), sprintf@ap(2), 
  5043 ;; Auto vars:     Size  Location     Type
  5044 ;;  ll              8   73[COMRAM] long long 
  5045 ;;  llu             8    0        unsigned long long 
  5046 ;;  f               4    0        unsigned long long 
  5047 ;;  vp              3    0        PTR void 
  5048 ;;  ct              3    0        unsigned char [3]
  5049 ;;  cp              3    0        PTR unsigned char 
  5050 ;;  done            2   81[COMRAM] int 
  5051 ;;  i               2    0        int 
  5052 ;;  c               1    0        unsigned char 
  5053 ;; Return value:  Size  Location     Type
  5054 ;;                  2   63[COMRAM] int 
  5055 ;; Registers used:
  5056 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5057 ;; Tracked objects:
  5058 ;;		On entry : 0/0
  5059 ;;		On exit  : 0/0
  5060 ;;		Unchanged: 0/0
  5061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5062 ;;      Params:         6       0       0       0       0       0       0       0       0
  5063 ;;      Locals:        10       0       0       0       0       0       0       0       0
  5064 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5065 ;;      Totals:        20       0       0       0       0       0       0       0       0
  5066 ;;Total ram usage:       20 bytes
  5067 ;; Hardware stack levels used: 1
  5068 ;; Hardware stack levels required when called: 5
  5069 ;; This function calls:
  5070 ;;		i2_atoi
  5071 ;;		i2_dtoa
  5072 ;;		i2_fputc
  5073 ;;		i2_isdigit
  5074 ;; This function is called by:
  5075 ;;		i2_vfprintf
  5076 ;; This function uses a non-reentrant model
  5077 ;;
  5078                           
  5079                           	psect	text30
  5080  000B7E                     __ptext30:
  5081                           	callstack 0
  5082  000B7E                     i2_vfpfcnvrt:
  5083                           	callstack 14
  5084  000B7E                     
  5085                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.36\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  5086  000B7E  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  5087  000B82  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  5088  000B86  CFDE FFF6          	movff	postinc2,tblptrl
  5089  000B8A  CFDD FFF7          	movff	postdec2,tblptrh
  5090  000B8E                     	if	0	;tblptru may be non-zero
  5091  000B8E                     	endif
  5092  000B8E                     	if	0	;tblptru may be non-zero
  5093  000B8E                     	endif
  5094  000B8E  0008               	tblrd		*
  5095  000B90  50F5               	movf	tablat,w,c
  5096  000B92  0A25               	xorlw	37
  5097  000B94  A4D8               	btfss	status,2,c
  5098  000B96  EFCF  F005         	goto	i2u239_41
  5099  000B9A  EFD1  F005         	goto	i2u239_40
  5100  000B9E                     i2u239_41:
  5101  000B9E  EF51  F007         	goto	i2l2808
  5102  000BA2                     i2u239_40:
  5103  000BA2                     
  5104                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  5105  000BA2  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  5106  000BA6  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  5107  000BAA  2ADE               	incf	postinc2,f,c
  5108  000BAC  0E00               	movlw	0
  5109  000BAE  22DD               	addwfc	postdec2,f,c
  5110  000BB0                     
  5111                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  5112  000BB0  0E00               	movlw	0
  5113  000BB2  0100               	movlb	0	; () banked
  5114  000BB4  6FCB               	movwf	(_width+1)& (0+255),b
  5115  000BB6  0E00               	movlw	0
  5116  000BB8  6FCA               	movwf	_width& (0+255),b
  5117  000BBA  C0CA  F0CE         	movff	_width,_flags
  5118  000BBE  C0CB  F0CF         	movff	_width+1,_flags+1
  5119  000BC2                     
  5120                           ; BSR set to: 0
  5121                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  5122  000BC2  69CC               	setf	_prec& (0+255),b
  5123  000BC4  69CD               	setf	(_prec+1)& (0+255),b
  5124  000BC6                     
  5125                           ; BSR set to: 0
  5126                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  5127  000BC6  0E00               	movlw	0
  5128  000BC8  6E53               	movwf	(i2vfpfcnvrt@done+1)^0,c
  5129  000BCA  0E00               	movlw	0
  5130  000BCC  6E52               	movwf	i2vfpfcnvrt@done^0,c
  5131                           
  5132                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  5133  000BCE  EF34  F006         	goto	i2l2762
  5134  000BD2                     i2l2736:
  5135                           
  5136                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  5137  000BD2  0100               	movlb	0	; () banked
  5138  000BD4  81CE               	bsf	_flags& (0+255),0,b
  5139  000BD6                     i2l2738:
  5140                           
  5141                           ; BSR set to: 0
  5142                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  5143  000BD6  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  5144  000BDA  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  5145  000BDE  2ADE               	incf	postinc2,f,c
  5146  000BE0  0E00               	movlw	0
  5147  000BE2  22DD               	addwfc	postdec2,f,c
  5148                           
  5149                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  5150  000BE4  EF34  F006         	goto	i2l2762
  5151  000BE8                     i2l2740:
  5152                           
  5153                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  5154  000BE8  0100               	movlb	0	; () banked
  5155  000BEA  83CE               	bsf	_flags& (0+255),1,b
  5156  000BEC  EFEB  F005         	goto	i2l2738
  5157  000BF0                     i2l2744:
  5158                           
  5159                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  5160  000BF0  0100               	movlb	0	; () banked
  5161  000BF2  85CE               	bsf	_flags& (0+255),2,b
  5162  000BF4  EFEB  F005         	goto	i2l2738
  5163  000BF8                     i2l2748:
  5164                           
  5165                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  5166  000BF8  0100               	movlb	0	; () banked
  5167  000BFA  87CE               	bsf	_flags& (0+255),3,b
  5168  000BFC  EFEB  F005         	goto	i2l2738
  5169  000C00                     i2l2752:
  5170                           
  5171                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  5172  000C00  0100               	movlb	0	; () banked
  5173  000C02  89CE               	bsf	_flags& (0+255),4,b
  5174  000C04  EFEB  F005         	goto	i2l2738
  5175  000C08                     i2l2756:
  5176                           
  5177                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  5178  000C08  0E00               	movlw	0
  5179  000C0A  6E53               	movwf	(i2vfpfcnvrt@done+1)^0,c
  5180  000C0C  0E01               	movlw	1
  5181  000C0E  6E52               	movwf	i2vfpfcnvrt@done^0,c
  5182                           
  5183                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  5184  000C10  EF34  F006         	goto	i2l2762
  5185  000C14                     i2l2760:
  5186  000C14  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  5187  000C18  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  5188  000C1C  CFDE FFF6          	movff	postinc2,tblptrl
  5189  000C20  CFDD FFF7          	movff	postdec2,tblptrh
  5190  000C24                     	if	0	;tblptru may be non-zero
  5191  000C24                     	endif
  5192  000C24                     	if	0	;tblptru may be non-zero
  5193  000C24                     	endif
  5194  000C24  0008               	tblrd		*
  5195  000C26  50F5               	movf	tablat,w,c
  5196  000C28  6E46               	movwf	??i2_vfpfcnvrt^0,c
  5197  000C2A  6A47               	clrf	(??i2_vfpfcnvrt+1)^0,c
  5198                           
  5199                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5200                           ; Switch size 1, requested type "simple"
  5201                           ; Number of cases is 1, Range of values is 0 to 0
  5202                           ; switch strategies available:
  5203                           ; Name         Instructions Cycles
  5204                           ; simple_byte            4     3 (average)
  5205                           ;	Chosen strategy is simple_byte
  5206  000C2C  5047               	movf	(??i2_vfpfcnvrt+1)^0,w,c
  5207  000C2E  0A00               	xorlw	0	; case 0
  5208  000C30  B4D8               	btfsc	status,2,c
  5209  000C32  EF1D  F006         	goto	i2l3706
  5210  000C36  EF04  F006         	goto	i2l2756
  5211  000C3A                     i2l3706:
  5212                           
  5213                           ; Switch size 1, requested type "simple"
  5214                           ; Number of cases is 5, Range of values is 32 to 48
  5215                           ; switch strategies available:
  5216                           ; Name         Instructions Cycles
  5217                           ; simple_byte           16     9 (average)
  5218                           ;	Chosen strategy is simple_byte
  5219  000C3A  5046               	movf	??i2_vfpfcnvrt^0,w,c
  5220  000C3C  0A20               	xorlw	32	; case 32
  5221  000C3E  B4D8               	btfsc	status,2,c
  5222  000C40  EFFC  F005         	goto	i2l2748
  5223  000C44  0A03               	xorlw	3	; case 35
  5224  000C46  B4D8               	btfsc	status,2,c
  5225  000C48  EF00  F006         	goto	i2l2752
  5226  000C4C  0A08               	xorlw	8	; case 43
  5227  000C4E  B4D8               	btfsc	status,2,c
  5228  000C50  EFF8  F005         	goto	i2l2744
  5229  000C54  0A06               	xorlw	6	; case 45
  5230  000C56  B4D8               	btfsc	status,2,c
  5231  000C58  EFE9  F005         	goto	i2l2736
  5232  000C5C  0A1D               	xorlw	29	; case 48
  5233  000C5E  B4D8               	btfsc	status,2,c
  5234  000C60  EFF4  F005         	goto	i2l2740
  5235  000C64  EF04  F006         	goto	i2l2756
  5236  000C68                     i2l2762:
  5237                           
  5238                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  5239  000C68  5052               	movf	i2vfpfcnvrt@done^0,w,c
  5240  000C6A  1053               	iorwf	(i2vfpfcnvrt@done+1)^0,w,c
  5241  000C6C  B4D8               	btfsc	status,2,c
  5242  000C6E  EF3B  F006         	goto	i2u240_41
  5243  000C72  EF3D  F006         	goto	i2u240_40
  5244  000C76                     i2u240_41:
  5245  000C76  EF0A  F006         	goto	i2l2760
  5246  000C7A                     i2u240_40:
  5247  000C7A                     
  5248                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  5249  000C7A  0100               	movlb	0	; () banked
  5250  000C7C  A1CE               	btfss	_flags& (0+255),0,b
  5251  000C7E  EF43  F006         	goto	i2u241_41
  5252  000C82  EF45  F006         	goto	i2u241_40
  5253  000C86                     i2u241_41:
  5254  000C86  EF46  F006         	goto	i2l2766
  5255  000C8A                     i2u241_40:
  5256  000C8A                     
  5257                           ; BSR set to: 0
  5258                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  5259  000C8A  93CE               	bcf	_flags& (0+255),1,b
  5260  000C8C                     i2l2766:
  5261                           
  5262                           ; BSR set to: 0
  5263                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  5264  000C8C  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  5265  000C90  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  5266  000C94  CFDE FFF6          	movff	postinc2,tblptrl
  5267  000C98  CFDD FFF7          	movff	postdec2,tblptrh
  5268  000C9C                     	if	0	;tblptru may be non-zero
  5269  000C9C                     	endif
  5270  000C9C                     	if	0	;tblptru may be non-zero
  5271  000C9C                     	endif
  5272  000C9C  0008               	tblrd		*
  5273  000C9E  50F5               	movf	tablat,w,c
  5274  000CA0  0A2A               	xorlw	42
  5275  000CA2  A4D8               	btfss	status,2,c
  5276  000CA4  EF56  F006         	goto	i2u242_41
  5277  000CA8  EF58  F006         	goto	i2u242_40
  5278  000CAC                     i2u242_41:
  5279  000CAC  EF81  F006         	goto	i2l2774
  5280  000CB0                     i2u242_40:
  5281  000CB0                     
  5282                           ; BSR set to: 0
  5283                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  5284  000CB0  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  5285  000CB4  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  5286  000CB8  2ADE               	incf	postinc2,f,c
  5287  000CBA  0E00               	movlw	0
  5288  000CBC  22DD               	addwfc	postdec2,f,c
  5289                           
  5290                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  5291  000CBE  C044  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
  5292  000CC2  C045  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
  5293  000CC6  CFDF F046          	movff	indf2,??i2_vfpfcnvrt
  5294  000CCA  0E02               	movlw	2
  5295  000CCC  26DE               	addwf	postinc2,f,c
  5296  000CCE  CFDF F047          	movff	indf2,??i2_vfpfcnvrt+1
  5297  000CD2  0E00               	movlw	0
  5298  000CD4  22DD               	addwfc	postdec2,f,c
  5299  000CD6  C046  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
  5300  000CDA  C047  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
  5301  000CDE  CFDE F0CA          	movff	postinc2,_width
  5302  000CE2  CFDD F0CB          	movff	postdec2,_width+1
  5303  000CE6                     
  5304                           ; BSR set to: 0
  5305                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  5306  000CE6  BFCB               	btfsc	(_width+1)& (0+255),7,b
  5307  000CE8  EF7A  F006         	goto	i2u243_40
  5308  000CEC  EF78  F006         	goto	i2u243_41
  5309  000CF0                     i2u243_41:
  5310  000CF0  EFB7  F006         	goto	i2l2782
  5311  000CF4                     i2u243_40:
  5312  000CF4                     
  5313                           ; BSR set to: 0
  5314                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  5315  000CF4  81CE               	bsf	_flags& (0+255),0,b
  5316                           
  5317                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  5318  000CF6  6DCA               	negf	_width& (0+255),b
  5319  000CF8  1FCB               	comf	(_width+1)& (0+255),f,b
  5320  000CFA  B0D8               	btfsc	status,0,c
  5321  000CFC  2BCB               	incf	(_width+1)& (0+255),f,b
  5322  000CFE  EFB7  F006         	goto	i2l2782
  5323  000D02                     i2l2774:
  5324                           
  5325                           ; BSR set to: 0
  5326                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  5327  000D02  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  5328  000D06  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  5329  000D0A  CFDE F007          	movff	postinc2,i2atoi@s
  5330  000D0E  CFDD F008          	movff	postdec2,i2atoi@s+1
  5331  000D12  ECEC  F00D         	call	i2_atoi	;wreg free
  5332  000D16  C007  F0CA         	movff	?i2_atoi,_width
  5333  000D1A  C008  F0CB         	movff	?i2_atoi+1,_width+1
  5334                           
  5335                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  5336  000D1E  EF98  F006         	goto	i2l2780
  5337  000D22                     i2l2776:
  5338                           
  5339                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  5340  000D22  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  5341  000D26  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  5342  000D2A  2ADE               	incf	postinc2,f,c
  5343  000D2C  0E00               	movlw	0
  5344  000D2E  22DD               	addwfc	postdec2,f,c
  5345  000D30                     i2l2780:
  5346  000D30  0ED0               	movlw	208
  5347  000D32  6E46               	movwf	??i2_vfpfcnvrt^0,c
  5348  000D34  0EFF               	movlw	255
  5349  000D36  6E47               	movwf	(??i2_vfpfcnvrt+1)^0,c
  5350  000D38  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  5351  000D3C  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  5352  000D40  CFDE FFF6          	movff	postinc2,tblptrl
  5353  000D44  CFDD FFF7          	movff	postdec2,tblptrh
  5354  000D48                     	if	0	;tblptru may be non-zero
  5355  000D48                     	endif
  5356  000D48                     	if	0	;tblptru may be non-zero
  5357  000D48                     	endif
  5358  000D48  0008               	tblrd		*
  5359  000D4A  50F5               	movf	tablat,w,c
  5360  000D4C  6E48               	movwf	(??i2_vfpfcnvrt+2)^0,c
  5361  000D4E  6A49               	clrf	(??i2_vfpfcnvrt+3)^0,c
  5362  000D50  5046               	movf	??i2_vfpfcnvrt^0,w,c
  5363  000D52  2648               	addwf	(??i2_vfpfcnvrt+2)^0,f,c
  5364  000D54  5047               	movf	(??i2_vfpfcnvrt+1)^0,w,c
  5365  000D56  2249               	addwfc	(??i2_vfpfcnvrt+3)^0,f,c
  5366  000D58  5049               	movf	(??i2_vfpfcnvrt+3)^0,w,c
  5367  000D5A  E109               	bnz	i2u244_40
  5368  000D5C  0E0A               	movlw	10
  5369  000D5E  5C48               	subwf	(??i2_vfpfcnvrt+2)^0,w,c
  5370  000D60  A0D8               	btfss	status,0,c
  5371  000D62  EFB5  F006         	goto	i2u244_41
  5372  000D66  EFB7  F006         	goto	i2u244_40
  5373  000D6A                     i2u244_41:
  5374  000D6A  EF91  F006         	goto	i2l2776
  5375  000D6E                     i2u244_40:
  5376  000D6E                     i2l2782:
  5377                           
  5378                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  5379  000D6E  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  5380  000D72  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  5381  000D76  CFDE FFF6          	movff	postinc2,tblptrl
  5382  000D7A  CFDD FFF7          	movff	postdec2,tblptrh
  5383  000D7E                     	if	0	;tblptru may be non-zero
  5384  000D7E                     	endif
  5385  000D7E                     	if	0	;tblptru may be non-zero
  5386  000D7E                     	endif
  5387  000D7E  0008               	tblrd		*
  5388  000D80  50F5               	movf	tablat,w,c
  5389  000D82  0A64               	xorlw	100
  5390  000D84  B4D8               	btfsc	status,2,c
  5391  000D86  EFC7  F006         	goto	i2u245_41
  5392  000D8A  EFC9  F006         	goto	i2u245_40
  5393  000D8E                     i2u245_41:
  5394  000D8E  EFDB  F006         	goto	i2l2786
  5395  000D92                     i2u245_40:
  5396  000D92  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  5397  000D96  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  5398  000D9A  CFDE FFF6          	movff	postinc2,tblptrl
  5399  000D9E  CFDD FFF7          	movff	postdec2,tblptrh
  5400  000DA2                     	if	0	;tblptru may be non-zero
  5401  000DA2                     	endif
  5402  000DA2                     	if	0	;tblptru may be non-zero
  5403  000DA2                     	endif
  5404  000DA2  0008               	tblrd		*
  5405  000DA4  50F5               	movf	tablat,w,c
  5406  000DA6  0A69               	xorlw	105
  5407  000DA8  A4D8               	btfss	status,2,c
  5408  000DAA  EFD9  F006         	goto	i2u246_41
  5409  000DAE  EFDB  F006         	goto	i2u246_40
  5410  000DB2                     i2u246_41:
  5411  000DB2  EF1B  F007         	goto	i2l2792
  5412  000DB6                     i2u246_40:
  5413  000DB6                     i2l2786:
  5414                           
  5415                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  5416  000DB6  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  5417  000DBA  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  5418  000DBE  2ADE               	incf	postinc2,f,c
  5419  000DC0  0E00               	movlw	0
  5420  000DC2  22DD               	addwfc	postdec2,f,c
  5421                           
  5422                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  5423  000DC4  C044  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
  5424  000DC8  C045  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
  5425  000DCC  CFDF F046          	movff	indf2,??i2_vfpfcnvrt
  5426  000DD0  0E02               	movlw	2
  5427  000DD2  26DE               	addwf	postinc2,f,c
  5428  000DD4  CFDF F047          	movff	indf2,??i2_vfpfcnvrt+1
  5429  000DD8  0E00               	movlw	0
  5430  000DDA  22DD               	addwfc	postdec2,f,c
  5431  000DDC  C046  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
  5432  000DE0  C047  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
  5433  000DE4  CFDE F04A          	movff	postinc2,i2vfpfcnvrt@ll
  5434  000DE8  CFDD F04B          	movff	postdec2,i2vfpfcnvrt@ll+1
  5435  000DEC  0E00               	movlw	0
  5436  000DEE  BE4B               	btfsc	(i2vfpfcnvrt@ll+1)^0,7,c
  5437  000DF0  0EFF               	movlw	-1
  5438  000DF2  6E4C               	movwf	(i2vfpfcnvrt@ll+2)^0,c
  5439  000DF4  6E4D               	movwf	(i2vfpfcnvrt@ll+3)^0,c
  5440  000DF6  6E4E               	movwf	(i2vfpfcnvrt@ll+4)^0,c
  5441  000DF8  6E4F               	movwf	(i2vfpfcnvrt@ll+5)^0,c
  5442  000DFA  6E50               	movwf	(i2vfpfcnvrt@ll+6)^0,c
  5443  000DFC  6E51               	movwf	(i2vfpfcnvrt@ll+7)^0,c
  5444  000DFE                     
  5445                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  5446  000DFE  C040  F01C         	movff	i2vfpfcnvrt@fp,i2dtoa@fp
  5447  000E02  C041  F01D         	movff	i2vfpfcnvrt@fp+1,i2dtoa@fp+1
  5448  000E06  C04A  F01E         	movff	i2vfpfcnvrt@ll,i2dtoa@d
  5449  000E0A  C04B  F01F         	movff	i2vfpfcnvrt@ll+1,i2dtoa@d+1
  5450  000E0E  C04C  F020         	movff	i2vfpfcnvrt@ll+2,i2dtoa@d+2
  5451  000E12  C04D  F021         	movff	i2vfpfcnvrt@ll+3,i2dtoa@d+3
  5452  000E16  C04E  F022         	movff	i2vfpfcnvrt@ll+4,i2dtoa@d+4
  5453  000E1A  C04F  F023         	movff	i2vfpfcnvrt@ll+5,i2dtoa@d+5
  5454  000E1E  C050  F024         	movff	i2vfpfcnvrt@ll+6,i2dtoa@d+6
  5455  000E22  C051  F025         	movff	i2vfpfcnvrt@ll+7,i2dtoa@d+7
  5456  000E26  ECDF  F008         	call	i2_dtoa	;wreg free
  5457  000E2A  C01C  F040         	movff	?i2_dtoa,?i2_vfpfcnvrt
  5458  000E2E  C01D  F041         	movff	?i2_dtoa+1,?i2_vfpfcnvrt+1
  5459  000E32  EF6C  F007         	goto	i2l902
  5460  000E36                     i2l2792:
  5461                           
  5462                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  5463  000E36  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  5464  000E3A  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  5465  000E3E  CFDE FFF6          	movff	postinc2,tblptrl
  5466  000E42  CFDD FFF7          	movff	postdec2,tblptrh
  5467  000E46                     	if	0	;tblptru may be non-zero
  5468  000E46                     	endif
  5469  000E46                     	if	0	;tblptru may be non-zero
  5470  000E46                     	endif
  5471  000E46  0008               	tblrd		*
  5472  000E48  50F5               	movf	tablat,w,c
  5473  000E4A  0A25               	xorlw	37
  5474  000E4C  A4D8               	btfss	status,2,c
  5475  000E4E  EF2B  F007         	goto	i2u247_41
  5476  000E52  EF2D  F007         	goto	i2u247_40
  5477  000E56                     i2u247_41:
  5478  000E56  EF44  F007         	goto	i2l2802
  5479  000E5A                     i2u247_40:
  5480  000E5A                     
  5481                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  5482  000E5A  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  5483  000E5E  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  5484  000E62  2ADE               	incf	postinc2,f,c
  5485  000E64  0E00               	movlw	0
  5486  000E66  22DD               	addwfc	postdec2,f,c
  5487  000E68                     
  5488                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  5489  000E68  0E00               	movlw	0
  5490  000E6A  6E02               	movwf	(i2fputc@c+1)^0,c
  5491  000E6C  0E25               	movlw	37
  5492  000E6E  6E01               	movwf	i2fputc@c^0,c
  5493  000E70  C040  F003         	movff	i2vfpfcnvrt@fp,i2fputc@fp
  5494  000E74  C041  F004         	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
  5495  000E78  ECE2  F00F         	call	i2_fputc	;wreg free
  5496  000E7C                     i2l2798:
  5497                           
  5498                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  5499  000E7C  0E00               	movlw	0
  5500  000E7E  6E41               	movwf	(?i2_vfpfcnvrt+1)^0,c
  5501  000E80  0E01               	movlw	1
  5502  000E82  6E40               	movwf	?i2_vfpfcnvrt^0,c
  5503  000E84  EF6C  F007         	goto	i2l902
  5504  000E88                     i2l2802:
  5505                           
  5506                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  5507  000E88  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  5508  000E8C  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  5509  000E90  2ADE               	incf	postinc2,f,c
  5510  000E92  0E00               	movlw	0
  5511  000E94  22DD               	addwfc	postdec2,f,c
  5512  000E96                     
  5513                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  5514  000E96  0E00               	movlw	0
  5515  000E98  6E41               	movwf	(?i2_vfpfcnvrt+1)^0,c
  5516  000E9A  0E00               	movlw	0
  5517  000E9C  6E40               	movwf	?i2_vfpfcnvrt^0,c
  5518  000E9E  EF6C  F007         	goto	i2l902
  5519  000EA2                     i2l2808:
  5520                           
  5521                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  5522  000EA2  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  5523  000EA6  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  5524  000EAA  CFDE FFF6          	movff	postinc2,tblptrl
  5525  000EAE  CFDD FFF7          	movff	postdec2,tblptrh
  5526  000EB2                     	if	0	;tblptru may be non-zero
  5527  000EB2                     	endif
  5528  000EB2                     	if	0	;tblptru may be non-zero
  5529  000EB2                     	endif
  5530  000EB2  0008               	tblrd		*
  5531  000EB4  50F5               	movf	tablat,w,c
  5532  000EB6  6E01               	movwf	i2fputc@c^0,c
  5533  000EB8  6A02               	clrf	(i2fputc@c+1)^0,c
  5534  000EBA  C040  F003         	movff	i2vfpfcnvrt@fp,i2fputc@fp
  5535  000EBE  C041  F004         	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
  5536  000EC2  ECE2  F00F         	call	i2_fputc	;wreg free
  5537  000EC6                     
  5538                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  5539  000EC6  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  5540  000ECA  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  5541  000ECE  2ADE               	incf	postinc2,f,c
  5542  000ED0  0E00               	movlw	0
  5543  000ED2  22DD               	addwfc	postdec2,f,c
  5544  000ED4  EF3E  F007         	goto	i2l2798
  5545  000ED8                     i2l902:
  5546  000ED8  0012               	return		;funcret
  5547  000EDA                     __end_ofi2_vfpfcnvrt:
  5548                           	callstack 0
  5549                           
  5550 ;; *************** function i2_dtoa *****************
  5551 ;; Defined at:
  5552 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  5553 ;; Parameters:    Size  Location     Type
  5554 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5555 ;;		 -> i2sprintf@f(11), sprintf@f(11), 
  5556 ;;  d               8   29[COMRAM] long long 
  5557 ;; Auto vars:     Size  Location     Type
  5558 ;;  n               8   53[COMRAM] long long 
  5559 ;;  i               2   61[COMRAM] int 
  5560 ;;  s               2   51[COMRAM] int 
  5561 ;;  w               2   49[COMRAM] int 
  5562 ;;  p               2   47[COMRAM] int 
  5563 ;; Return value:  Size  Location     Type
  5564 ;;                  2   27[COMRAM] int 
  5565 ;; Registers used:
  5566 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5567 ;; Tracked objects:
  5568 ;;		On entry : 0/0
  5569 ;;		On exit  : 0/0
  5570 ;;		Unchanged: 0/0
  5571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5572 ;;      Params:        10       0       0       0       0       0       0       0       0
  5573 ;;      Locals:        18       0       0       0       0       0       0       0       0
  5574 ;;      Temps:          8       0       0       0       0       0       0       0       0
  5575 ;;      Totals:        36       0       0       0       0       0       0       0       0
  5576 ;;Total ram usage:       36 bytes
  5577 ;; Hardware stack levels used: 1
  5578 ;; Hardware stack levels required when called: 4
  5579 ;; This function calls:
  5580 ;;		i2___aodiv
  5581 ;;		i2___aomod
  5582 ;;		i2_abs
  5583 ;;		i2_pad
  5584 ;; This function is called by:
  5585 ;;		i2_vfpfcnvrt
  5586 ;; This function uses a non-reentrant model
  5587 ;;
  5588                           
  5589                           	psect	text31
  5590  0011BE                     __ptext31:
  5591                           	callstack 0
  5592  0011BE                     i2_dtoa:
  5593                           	callstack 14
  5594  0011BE                     
  5595                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  5596  0011BE  C01E  F036         	movff	i2dtoa@d,i2dtoa@n
  5597  0011C2  C01F  F037         	movff	i2dtoa@d+1,i2dtoa@n+1
  5598  0011C6  C020  F038         	movff	i2dtoa@d+2,i2dtoa@n+2
  5599  0011CA  C021  F039         	movff	i2dtoa@d+3,i2dtoa@n+3
  5600  0011CE  C022  F03A         	movff	i2dtoa@d+4,i2dtoa@n+4
  5601  0011D2  C023  F03B         	movff	i2dtoa@d+5,i2dtoa@n+5
  5602  0011D6  C024  F03C         	movff	i2dtoa@d+6,i2dtoa@n+6
  5603  0011DA  C025  F03D         	movff	i2dtoa@d+7,i2dtoa@n+7
  5604  0011DE                     
  5605                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  5606  0011DE  BE3D               	btfsc	(i2dtoa@n+7)^0,7,c
  5607  0011E0  EFF4  F008         	goto	i2u203_41
  5608  0011E4  EFF7  F008         	goto	i2u203_40
  5609  0011E8                     i2u203_41:
  5610  0011E8  0E01               	movlw	1
  5611  0011EA  EFF8  F008         	goto	i2u204_40
  5612  0011EE                     i2u203_40:
  5613  0011EE  0E00               	movlw	0
  5614  0011F0                     i2u204_40:
  5615  0011F0  6E34               	movwf	i2dtoa@s^0,c
  5616  0011F2  6A35               	clrf	(i2dtoa@s+1)^0,c
  5617                           
  5618                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  5619  0011F4  5034               	movf	i2dtoa@s^0,w,c
  5620  0011F6  1035               	iorwf	(i2dtoa@s+1)^0,w,c
  5621  0011F8  B4D8               	btfsc	status,2,c
  5622  0011FA  EF01  F009         	goto	i2u205_41
  5623  0011FE  EF03  F009         	goto	i2u205_40
  5624  001202                     i2u205_41:
  5625  001202  EF13  F009         	goto	i2l2510
  5626  001206                     i2u205_40:
  5627  001206                     
  5628                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  5629  001206  1E3D               	comf	(i2dtoa@n+7)^0,f,c
  5630  001208  1E3C               	comf	(i2dtoa@n+6)^0,f,c
  5631  00120A  1E3B               	comf	(i2dtoa@n+5)^0,f,c
  5632  00120C  1E3A               	comf	(i2dtoa@n+4)^0,f,c
  5633  00120E  1E39               	comf	(i2dtoa@n+3)^0,f,c
  5634  001210  1E38               	comf	(i2dtoa@n+2)^0,f,c
  5635  001212  1E37               	comf	(i2dtoa@n+1)^0,f,c
  5636  001214  6C36               	negf	i2dtoa@n^0,c
  5637  001216  0E00               	movlw	0
  5638  001218  2237               	addwfc	(i2dtoa@n+1)^0,f,c
  5639  00121A  2238               	addwfc	(i2dtoa@n+2)^0,f,c
  5640  00121C  2239               	addwfc	(i2dtoa@n+3)^0,f,c
  5641  00121E  223A               	addwfc	(i2dtoa@n+4)^0,f,c
  5642  001220  223B               	addwfc	(i2dtoa@n+5)^0,f,c
  5643  001222  223C               	addwfc	(i2dtoa@n+6)^0,f,c
  5644  001224  223D               	addwfc	(i2dtoa@n+7)^0,f,c
  5645  001226                     i2l2510:
  5646                           
  5647                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  5648  001226  0100               	movlb	0	; () banked
  5649  001228  BFCD               	btfsc	(_prec+1)& (0+255),7,b
  5650  00122A  EF19  F009         	goto	i2u206_41
  5651  00122E  EF1B  F009         	goto	i2u206_40
  5652  001232                     i2u206_41:
  5653  001232  EF1C  F009         	goto	i2l2514
  5654  001236                     i2u206_40:
  5655  001236                     
  5656                           ; BSR set to: 0
  5657                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  5658  001236  93CE               	bcf	_flags& (0+255),1,b
  5659  001238                     i2l2514:
  5660                           
  5661                           ; BSR set to: 0
  5662                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  5663  001238  BFCD               	btfsc	(_prec+1)& (0+255),7,b
  5664  00123A  EF29  F009         	goto	i2u207_40
  5665  00123E  51CD               	movf	(_prec+1)& (0+255),w,b
  5666  001240  E106               	bnz	i2u207_41
  5667  001242  05CC               	decf	_prec& (0+255),w,b
  5668  001244  B0D8               	btfsc	status,0,c
  5669  001246  EF27  F009         	goto	i2u207_41
  5670  00124A  EF29  F009         	goto	i2u207_40
  5671  00124E                     i2u207_41:
  5672  00124E  EF2F  F009         	goto	i2l855
  5673  001252                     i2u207_40:
  5674  001252                     
  5675                           ; BSR set to: 0
  5676  001252  0E00               	movlw	0
  5677  001254  6E31               	movwf	(i2dtoa@p+1)^0,c
  5678  001256  0E01               	movlw	1
  5679  001258  6E30               	movwf	i2dtoa@p^0,c
  5680  00125A  EF33  F009         	goto	i2l857
  5681  00125E                     i2l855:
  5682                           
  5683                           ; BSR set to: 0
  5684  00125E  C0CC  F030         	movff	_prec,i2dtoa@p
  5685  001262  C0CD  F031         	movff	_prec+1,i2dtoa@p+1
  5686  001266                     i2l857:
  5687                           
  5688                           ; BSR set to: 0
  5689                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  5690  001266  C0CA  F032         	movff	_width,i2dtoa@w
  5691  00126A  C0CB  F033         	movff	_width+1,i2dtoa@w+1
  5692  00126E                     
  5693                           ; BSR set to: 0
  5694                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  5695  00126E  5034               	movf	i2dtoa@s^0,w,c
  5696  001270  1035               	iorwf	(i2dtoa@s+1)^0,w,c
  5697  001272  A4D8               	btfss	status,2,c
  5698  001274  EF3E  F009         	goto	i2u208_41
  5699  001278  EF40  F009         	goto	i2u208_40
  5700  00127C                     i2u208_41:
  5701  00127C  EF47  F009         	goto	i2l2522
  5702  001280                     i2u208_40:
  5703  001280                     
  5704                           ; BSR set to: 0
  5705  001280  A5CE               	btfss	_flags& (0+255),2,b
  5706  001282  EF45  F009         	goto	i2u209_41
  5707  001286  EF47  F009         	goto	i2u209_40
  5708  00128A                     i2u209_41:
  5709  00128A  EF4A  F009         	goto	i2l2524
  5710  00128E                     i2u209_40:
  5711  00128E                     i2l2522:
  5712                           
  5713                           ; BSR set to: 0
  5714                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 306:         --w;
  5715  00128E  0632               	decf	i2dtoa@w^0,f,c
  5716  001290  A0D8               	btfss	status,0,c
  5717  001292  0633               	decf	(i2dtoa@w+1)^0,f,c
  5718  001294                     i2l2524:
  5719                           
  5720                           ; BSR set to: 0
  5721                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  5722  001294  0E00               	movlw	0
  5723  001296  6E3F               	movwf	(i2dtoa@i+1)^0,c
  5724  001298  0E1F               	movlw	31
  5725  00129A  6E3E               	movwf	i2dtoa@i^0,c
  5726  00129C                     
  5727                           ; BSR set to: 0
  5728                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  5729  00129C  0E00               	movlw	0
  5730  00129E  0101               	movlb	1	; () banked
  5731  0012A0  6F1F               	movwf	(_dbuf+31)& (0+255),b
  5732                           
  5733                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5734  0012A2  EFCF  F009         	goto	i2l2538
  5735  0012A6                     i2l2528:
  5736                           
  5737                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 313:         --i;
  5738  0012A6  063E               	decf	i2dtoa@i^0,f,c
  5739  0012A8  A0D8               	btfss	status,0,c
  5740  0012AA  063F               	decf	(i2dtoa@i+1)^0,f,c
  5741  0012AC                     
  5742                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  5743  0012AC  0E00               	movlw	low _dbuf
  5744  0012AE  243E               	addwf	i2dtoa@i^0,w,c
  5745  0012B0  6ED9               	movwf	fsr2l,c
  5746  0012B2  0E01               	movlw	high _dbuf
  5747  0012B4  203F               	addwfc	(i2dtoa@i+1)^0,w,c
  5748  0012B6  6EDA               	movwf	fsr2h,c
  5749  0012B8  C036  F001         	movff	i2dtoa@n,i2___aomod@dividend
  5750  0012BC  C037  F002         	movff	i2dtoa@n+1,i2___aomod@dividend+1
  5751  0012C0  C038  F003         	movff	i2dtoa@n+2,i2___aomod@dividend+2
  5752  0012C4  C039  F004         	movff	i2dtoa@n+3,i2___aomod@dividend+3
  5753  0012C8  C03A  F005         	movff	i2dtoa@n+4,i2___aomod@dividend+4
  5754  0012CC  C03B  F006         	movff	i2dtoa@n+5,i2___aomod@dividend+5
  5755  0012D0  C03C  F007         	movff	i2dtoa@n+6,i2___aomod@dividend+6
  5756  0012D4  C03D  F008         	movff	i2dtoa@n+7,i2___aomod@dividend+7
  5757  0012D8  0E0A               	movlw	10
  5758  0012DA  6E09               	movwf	i2___aomod@divisor^0,c
  5759  0012DC  0E00               	movlw	0
  5760  0012DE  6E0A               	movwf	(i2___aomod@divisor+1)^0,c
  5761  0012E0  0E00               	movlw	0
  5762  0012E2  6E0B               	movwf	(i2___aomod@divisor+2)^0,c
  5763  0012E4  0E00               	movlw	0
  5764  0012E6  6E0C               	movwf	(i2___aomod@divisor+3)^0,c
  5765  0012E8  0E00               	movlw	0
  5766  0012EA  6E0D               	movwf	(i2___aomod@divisor+4)^0,c
  5767  0012EC  0E00               	movlw	0
  5768  0012EE  6E0E               	movwf	(i2___aomod@divisor+5)^0,c
  5769  0012F0  0E00               	movlw	0
  5770  0012F2  6E0F               	movwf	(i2___aomod@divisor+6)^0,c
  5771  0012F4  0E00               	movlw	0
  5772  0012F6  6E10               	movwf	(i2___aomod@divisor+7)^0,c
  5773  0012F8  EC8D  F00C         	call	i2___aomod	;wreg free
  5774  0012FC  C001  F026         	movff	?i2___aomod,??i2_dtoa
  5775  001300  C002  F027         	movff	?i2___aomod+1,??i2_dtoa+1
  5776  001304  C003  F028         	movff	?i2___aomod+2,??i2_dtoa+2
  5777  001308  C004  F029         	movff	?i2___aomod+3,??i2_dtoa+3
  5778  00130C  C005  F02A         	movff	?i2___aomod+4,??i2_dtoa+4
  5779  001310  C006  F02B         	movff	?i2___aomod+5,??i2_dtoa+5
  5780  001314  C007  F02C         	movff	?i2___aomod+6,??i2_dtoa+6
  5781  001318  C008  F02D         	movff	?i2___aomod+7,??i2_dtoa+7
  5782  00131C  C026  F013         	movff	??i2_dtoa,i2abs@a
  5783  001320  C028  F014         	movff	??i2_dtoa+2,i2abs@a+1
  5784  001324  EC37  F013         	call	i2_abs	;wreg free
  5785  001328  5013               	movf	?i2_abs^0,w,c
  5786  00132A  0F30               	addlw	48
  5787  00132C  6EDF               	movwf	indf2,c
  5788  00132E                     
  5789                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 315:         --p;
  5790  00132E  0630               	decf	i2dtoa@p^0,f,c
  5791  001330  A0D8               	btfss	status,0,c
  5792  001332  0631               	decf	(i2dtoa@p+1)^0,f,c
  5793  001334                     
  5794                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 316:         --w;
  5795  001334  0632               	decf	i2dtoa@w^0,f,c
  5796  001336  A0D8               	btfss	status,0,c
  5797  001338  0633               	decf	(i2dtoa@w+1)^0,f,c
  5798  00133A                     
  5799                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  5800  00133A  C036  F001         	movff	i2dtoa@n,i2___aodiv@dividend
  5801  00133E  C037  F002         	movff	i2dtoa@n+1,i2___aodiv@dividend+1
  5802  001342  C038  F003         	movff	i2dtoa@n+2,i2___aodiv@dividend+2
  5803  001346  C039  F004         	movff	i2dtoa@n+3,i2___aodiv@dividend+3
  5804  00134A  C03A  F005         	movff	i2dtoa@n+4,i2___aodiv@dividend+4
  5805  00134E  C03B  F006         	movff	i2dtoa@n+5,i2___aodiv@dividend+5
  5806  001352  C03C  F007         	movff	i2dtoa@n+6,i2___aodiv@dividend+6
  5807  001356  C03D  F008         	movff	i2dtoa@n+7,i2___aodiv@dividend+7
  5808  00135A  0E0A               	movlw	10
  5809  00135C  6E09               	movwf	i2___aodiv@divisor^0,c
  5810  00135E  0E00               	movlw	0
  5811  001360  6E0A               	movwf	(i2___aodiv@divisor+1)^0,c
  5812  001362  0E00               	movlw	0
  5813  001364  6E0B               	movwf	(i2___aodiv@divisor+2)^0,c
  5814  001366  0E00               	movlw	0
  5815  001368  6E0C               	movwf	(i2___aodiv@divisor+3)^0,c
  5816  00136A  0E00               	movlw	0
  5817  00136C  6E0D               	movwf	(i2___aodiv@divisor+4)^0,c
  5818  00136E  0E00               	movlw	0
  5819  001370  6E0E               	movwf	(i2___aodiv@divisor+5)^0,c
  5820  001372  0E00               	movlw	0
  5821  001374  6E0F               	movwf	(i2___aodiv@divisor+6)^0,c
  5822  001376  0E00               	movlw	0
  5823  001378  6E10               	movwf	(i2___aodiv@divisor+7)^0,c
  5824  00137A  EC16  F00B         	call	i2___aodiv	;wreg free
  5825  00137E  C001  F036         	movff	?i2___aodiv,i2dtoa@n
  5826  001382  C002  F037         	movff	?i2___aodiv+1,i2dtoa@n+1
  5827  001386  C003  F038         	movff	?i2___aodiv+2,i2dtoa@n+2
  5828  00138A  C004  F039         	movff	?i2___aodiv+3,i2dtoa@n+3
  5829  00138E  C005  F03A         	movff	?i2___aodiv+4,i2dtoa@n+4
  5830  001392  C006  F03B         	movff	?i2___aodiv+5,i2dtoa@n+5
  5831  001396  C007  F03C         	movff	?i2___aodiv+6,i2dtoa@n+6
  5832  00139A  C008  F03D         	movff	?i2___aodiv+7,i2dtoa@n+7
  5833  00139E                     i2l2538:
  5834                           
  5835                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5836  00139E  BE3F               	btfsc	(i2dtoa@i+1)^0,7,c
  5837  0013A0  EFDA  F009         	goto	i2u210_41
  5838  0013A4  503F               	movf	(i2dtoa@i+1)^0,w,c
  5839  0013A6  E108               	bnz	i2u210_40
  5840  0013A8  043E               	decf	i2dtoa@i^0,w,c
  5841  0013AA  A0D8               	btfss	status,0,c
  5842  0013AC  EFDA  F009         	goto	i2u210_41
  5843  0013B0  EFDC  F009         	goto	i2u210_40
  5844  0013B4                     i2u210_41:
  5845  0013B4  EF0D  F00A         	goto	i2l2548
  5846  0013B8                     i2u210_40:
  5847  0013B8  5036               	movf	i2dtoa@n^0,w,c
  5848  0013BA  1037               	iorwf	(i2dtoa@n+1)^0,w,c
  5849  0013BC  1038               	iorwf	(i2dtoa@n+2)^0,w,c
  5850  0013BE  1039               	iorwf	(i2dtoa@n+3)^0,w,c
  5851  0013C0  103A               	iorwf	(i2dtoa@n+4)^0,w,c
  5852  0013C2  103B               	iorwf	(i2dtoa@n+5)^0,w,c
  5853  0013C4  103C               	iorwf	(i2dtoa@n+6)^0,w,c
  5854  0013C6  103D               	iorwf	(i2dtoa@n+7)^0,w,c
  5855  0013C8  A4D8               	btfss	status,2,c
  5856  0013CA  EFE9  F009         	goto	i2u211_41
  5857  0013CE  EFEB  F009         	goto	i2u211_40
  5858  0013D2                     i2u211_41:
  5859  0013D2  EF53  F009         	goto	i2l2528
  5860  0013D6                     i2u211_40:
  5861  0013D6  BE31               	btfsc	(i2dtoa@p+1)^0,7,c
  5862  0013D8  EFF8  F009         	goto	i2u212_40
  5863  0013DC  5031               	movf	(i2dtoa@p+1)^0,w,c
  5864  0013DE  E106               	bnz	i2u212_41
  5865  0013E0  0430               	decf	i2dtoa@p^0,w,c
  5866  0013E2  B0D8               	btfsc	status,0,c
  5867  0013E4  EFF6  F009         	goto	i2u212_41
  5868  0013E8  EFF8  F009         	goto	i2u212_40
  5869  0013EC                     i2u212_41:
  5870  0013EC  EF53  F009         	goto	i2l2528
  5871  0013F0                     i2u212_40:
  5872  0013F0  BE33               	btfsc	(i2dtoa@w+1)^0,7,c
  5873  0013F2  EF03  F00A         	goto	i2u213_41
  5874  0013F6  5033               	movf	(i2dtoa@w+1)^0,w,c
  5875  0013F8  E108               	bnz	i2u213_40
  5876  0013FA  0432               	decf	i2dtoa@w^0,w,c
  5877  0013FC  A0D8               	btfss	status,0,c
  5878  0013FE  EF03  F00A         	goto	i2u213_41
  5879  001402  EF05  F00A         	goto	i2u213_40
  5880  001406                     i2u213_41:
  5881  001406  EF0D  F00A         	goto	i2l2548
  5882  00140A                     i2u213_40:
  5883  00140A  0100               	movlb	0	; () banked
  5884  00140C  B3CE               	btfsc	_flags& (0+255),1,b
  5885  00140E  EF0B  F00A         	goto	i2u214_41
  5886  001412  EF0D  F00A         	goto	i2u214_40
  5887  001416                     i2u214_41:
  5888  001416  EF53  F009         	goto	i2l2528
  5889  00141A                     i2u214_40:
  5890  00141A                     i2l2548:
  5891                           
  5892                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  5893  00141A  5034               	movf	i2dtoa@s^0,w,c
  5894  00141C  1035               	iorwf	(i2dtoa@s+1)^0,w,c
  5895  00141E  A4D8               	btfss	status,2,c
  5896  001420  EF14  F00A         	goto	i2u215_41
  5897  001424  EF16  F00A         	goto	i2u215_40
  5898  001428                     i2u215_41:
  5899  001428  EF1E  F00A         	goto	i2l2552
  5900  00142C                     i2u215_40:
  5901  00142C  0100               	movlb	0	; () banked
  5902  00142E  A5CE               	btfss	_flags& (0+255),2,b
  5903  001430  EF1C  F00A         	goto	i2u216_41
  5904  001434  EF1E  F00A         	goto	i2u216_40
  5905  001438                     i2u216_41:
  5906  001438  EF3C  F00A         	goto	i2l2562
  5907  00143C                     i2u216_40:
  5908  00143C                     i2l2552:
  5909                           
  5910                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 322:         --i;
  5911  00143C  063E               	decf	i2dtoa@i^0,f,c
  5912  00143E  A0D8               	btfss	status,0,c
  5913  001440  063F               	decf	(i2dtoa@i+1)^0,f,c
  5914  001442                     
  5915                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  5916  001442  5034               	movf	i2dtoa@s^0,w,c
  5917  001444  1035               	iorwf	(i2dtoa@s+1)^0,w,c
  5918  001446  A4D8               	btfss	status,2,c
  5919  001448  EF28  F00A         	goto	i2u217_41
  5920  00144C  EF2A  F00A         	goto	i2u217_40
  5921  001450                     i2u217_41:
  5922  001450  EF30  F00A         	goto	i2l2558
  5923  001454                     i2u217_40:
  5924  001454  0E00               	movlw	0
  5925  001456  6E2F               	movwf	(i2_dtoa$1065+1)^0,c
  5926  001458  0E2B               	movlw	43
  5927  00145A  6E2E               	movwf	i2_dtoa$1065^0,c
  5928  00145C  EF34  F00A         	goto	i2l2560
  5929  001460                     i2l2558:
  5930  001460  0E00               	movlw	0
  5931  001462  6E2F               	movwf	(i2_dtoa$1065+1)^0,c
  5932  001464  0E2D               	movlw	45
  5933  001466  6E2E               	movwf	i2_dtoa$1065^0,c
  5934  001468                     i2l2560:
  5935  001468  0E00               	movlw	low _dbuf
  5936  00146A  243E               	addwf	i2dtoa@i^0,w,c
  5937  00146C  6ED9               	movwf	fsr2l,c
  5938  00146E  0E01               	movlw	high _dbuf
  5939  001470  203F               	addwfc	(i2dtoa@i+1)^0,w,c
  5940  001472  6EDA               	movwf	fsr2h,c
  5941  001474  C02E  FFDF         	movff	i2_dtoa$1065,indf2
  5942  001478                     i2l2562:
  5943                           
  5944                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  5945  001478  C01C  F011         	movff	i2dtoa@fp,i2pad@fp
  5946  00147C  C01D  F012         	movff	i2dtoa@fp+1,i2pad@fp+1
  5947  001480  0E00               	movlw	low _dbuf
  5948  001482  243E               	addwf	i2dtoa@i^0,w,c
  5949  001484  6E13               	movwf	i2pad@buf^0,c
  5950  001486  0E01               	movlw	high _dbuf
  5951  001488  203F               	addwfc	(i2dtoa@i+1)^0,w,c
  5952  00148A  6E14               	movwf	(i2pad@buf+1)^0,c
  5953  00148C  C032  F015         	movff	i2dtoa@w,i2pad@p
  5954  001490  C033  F016         	movff	i2dtoa@w+1,i2pad@p+1
  5955  001494  EC47  F010         	call	i2_pad	;wreg free
  5956  001498  C011  F01C         	movff	?i2_pad,?i2_dtoa
  5957  00149C  C012  F01D         	movff	?i2_pad+1,?i2_dtoa+1
  5958  0014A0  0012               	return		;funcret
  5959  0014A2                     __end_ofi2_dtoa:
  5960                           	callstack 0
  5961                           
  5962 ;; *************** function i2_pad *****************
  5963 ;; Defined at:
  5964 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  5965 ;; Parameters:    Size  Location     Type
  5966 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  5967 ;;		 -> i2sprintf@f(11), sprintf@f(11), 
  5968 ;;  buf             2   18[COMRAM] PTR unsigned char 
  5969 ;;		 -> dbuf(32), 
  5970 ;;  p               2   20[COMRAM] int 
  5971 ;; Auto vars:     Size  Location     Type
  5972 ;;  w               2   25[COMRAM] int 
  5973 ;;  i               2   23[COMRAM] int 
  5974 ;; Return value:  Size  Location     Type
  5975 ;;                  2   16[COMRAM] int 
  5976 ;; Registers used:
  5977 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5978 ;; Tracked objects:
  5979 ;;		On entry : 0/0
  5980 ;;		On exit  : 0/0
  5981 ;;		Unchanged: 0/0
  5982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5983 ;;      Params:         6       0       0       0       0       0       0       0       0
  5984 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5985 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5986 ;;      Totals:        11       0       0       0       0       0       0       0       0
  5987 ;;Total ram usage:       11 bytes
  5988 ;; Hardware stack levels used: 1
  5989 ;; Hardware stack levels required when called: 3
  5990 ;; This function calls:
  5991 ;;		i2_fputc
  5992 ;;		i2_fputs
  5993 ;;		i2_strlen
  5994 ;; This function is called by:
  5995 ;;		i2_dtoa
  5996 ;; This function uses a non-reentrant model
  5997 ;;
  5998                           
  5999                           	psect	text32
  6000  00208E                     __ptext32:
  6001                           	callstack 0
  6002  00208E                     i2_pad:
  6003                           	callstack 14
  6004  00208E                     
  6005                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  6006  00208E  0100               	movlb	0	; () banked
  6007  002090  A1CE               	btfss	_flags& (0+255),0,b
  6008  002092  EF4D  F010         	goto	i2u177_41
  6009  002096  EF4F  F010         	goto	i2u177_40
  6010  00209A                     i2u177_41:
  6011  00209A  EF59  F010         	goto	i2l2376
  6012  00209E                     i2u177_40:
  6013  00209E                     
  6014                           ; BSR set to: 0
  6015                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  6016  00209E  C013  F00A         	movff	i2pad@buf,i2fputs@s
  6017  0020A2  C014  F00B         	movff	i2pad@buf+1,i2fputs@s+1
  6018  0020A6  C011  F00C         	movff	i2pad@fp,i2fputs@fp
  6019  0020AA  C012  F00D         	movff	i2pad@fp+1,i2fputs@fp+1
  6020  0020AE  ECD2  F012         	call	i2_fputs	;wreg free
  6021  0020B2                     i2l2376:
  6022                           
  6023                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  6024  0020B2  BE16               	btfsc	(i2pad@p+1)^0,7,c
  6025  0020B4  EF5E  F010         	goto	i2u178_41
  6026  0020B8  EF60  F010         	goto	i2u178_40
  6027  0020BC                     i2u178_41:
  6028  0020BC  EF66  F010         	goto	i2l2380
  6029  0020C0                     i2u178_40:
  6030  0020C0  C015  F01A         	movff	i2pad@p,i2pad@w
  6031  0020C4  C016  F01B         	movff	i2pad@p+1,i2pad@w+1
  6032  0020C8  EF6A  F010         	goto	i2l844
  6033  0020CC                     i2l2380:
  6034  0020CC  0E00               	movlw	0
  6035  0020CE  6E1B               	movwf	(i2pad@w+1)^0,c
  6036  0020D0  0E00               	movlw	0
  6037  0020D2  6E1A               	movwf	i2pad@w^0,c
  6038  0020D4                     i2l844:
  6039                           
  6040                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  6041  0020D4  0E00               	movlw	0
  6042  0020D6  6E19               	movwf	(i2pad@i+1)^0,c
  6043  0020D8  0E00               	movlw	0
  6044  0020DA  6E18               	movwf	i2pad@i^0,c
  6045                           
  6046                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6047  0020DC  EF7C  F010         	goto	i2l2386
  6048  0020E0                     i2l2382:
  6049                           
  6050                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  6051  0020E0  0E00               	movlw	0
  6052  0020E2  6E02               	movwf	(i2fputc@c+1)^0,c
  6053  0020E4  0E20               	movlw	32
  6054  0020E6  6E01               	movwf	i2fputc@c^0,c
  6055  0020E8  C011  F003         	movff	i2pad@fp,i2fputc@fp
  6056  0020EC  C012  F004         	movff	i2pad@fp+1,i2fputc@fp+1
  6057  0020F0  ECE2  F00F         	call	i2_fputc	;wreg free
  6058  0020F4                     
  6059                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 86:         ++i;
  6060  0020F4  4A18               	infsnz	i2pad@i^0,f,c
  6061  0020F6  2A19               	incf	(i2pad@i+1)^0,f,c
  6062  0020F8                     i2l2386:
  6063                           
  6064                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6065  0020F8  501A               	movf	i2pad@w^0,w,c
  6066  0020FA  5C18               	subwf	i2pad@i^0,w,c
  6067  0020FC  5019               	movf	(i2pad@i+1)^0,w,c
  6068  0020FE  0A80               	xorlw	128
  6069  002100  6E17               	movwf	??i2_pad^0,c
  6070  002102  501B               	movf	(i2pad@w+1)^0,w,c
  6071  002104  0A80               	xorlw	128
  6072  002106  5817               	subwfb	??i2_pad^0,w,c
  6073  002108  A0D8               	btfss	status,0,c
  6074  00210A  EF89  F010         	goto	i2u179_41
  6075  00210E  EF8B  F010         	goto	i2u179_40
  6076  002112                     i2u179_41:
  6077  002112  EF70  F010         	goto	i2l2382
  6078  002116                     i2u179_40:
  6079  002116                     
  6080                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  6081  002116  0100               	movlb	0	; () banked
  6082  002118  B1CE               	btfsc	_flags& (0+255),0,b
  6083  00211A  EF91  F010         	goto	i2u180_41
  6084  00211E  EF93  F010         	goto	i2u180_40
  6085  002122                     i2u180_41:
  6086  002122  EF9D  F010         	goto	i2l2390
  6087  002126                     i2u180_40:
  6088  002126                     
  6089                           ; BSR set to: 0
  6090                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  6091  002126  C013  F00A         	movff	i2pad@buf,i2fputs@s
  6092  00212A  C014  F00B         	movff	i2pad@buf+1,i2fputs@s+1
  6093  00212E  C011  F00C         	movff	i2pad@fp,i2fputs@fp
  6094  002132  C012  F00D         	movff	i2pad@fp+1,i2fputs@fp+1
  6095  002136  ECD2  F012         	call	i2_fputs	;wreg free
  6096  00213A                     i2l2390:
  6097                           
  6098                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  6099  00213A  C013  F001         	movff	i2pad@buf,i2strlen@s
  6100  00213E  C014  F002         	movff	i2pad@buf+1,i2strlen@s+1
  6101  002142  EC0A  F014         	call	i2_strlen	;wreg free
  6102  002146  501A               	movf	i2pad@w^0,w,c
  6103  002148  2401               	addwf	?i2_strlen^0,w,c
  6104  00214A  6E11               	movwf	?i2_pad^0,c
  6105  00214C  501B               	movf	(i2pad@w+1)^0,w,c
  6106  00214E  2002               	addwfc	(?i2_strlen+1)^0,w,c
  6107  002150  6E12               	movwf	(?i2_pad+1)^0,c
  6108  002152  0012               	return		;funcret
  6109  002154                     __end_ofi2_pad:
  6110                           	callstack 0
  6111                           
  6112 ;; *************** function i2_strlen *****************
  6113 ;; Defined at:
  6114 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  6115 ;; Parameters:    Size  Location     Type
  6116 ;;  s               2    0[COMRAM] PTR const unsigned char 
  6117 ;;		 -> dbuf(32), 
  6118 ;; Auto vars:     Size  Location     Type
  6119 ;;  a               2    2[COMRAM] PTR const unsigned char 
  6120 ;;		 -> dbuf(32), 
  6121 ;; Return value:  Size  Location     Type
  6122 ;;                  2    0[COMRAM] unsigned int 
  6123 ;; Registers used:
  6124 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6125 ;; Tracked objects:
  6126 ;;		On entry : 0/0
  6127 ;;		On exit  : 0/0
  6128 ;;		Unchanged: 0/0
  6129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6130 ;;      Params:         2       0       0       0       0       0       0       0       0
  6131 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6132 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6133 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6134 ;;Total ram usage:        4 bytes
  6135 ;; Hardware stack levels used: 1
  6136 ;; This function calls:
  6137 ;;		Nothing
  6138 ;; This function is called by:
  6139 ;;		i2_pad
  6140 ;; This function uses a non-reentrant model
  6141 ;;
  6142                           
  6143                           	psect	text33
  6144  002814                     __ptext33:
  6145                           	callstack 0
  6146  002814                     i2_strlen:
  6147                           	callstack 16
  6148  002814  C001  F003         	movff	i2strlen@s,i2strlen@a
  6149  002818  C002  F004         	movff	i2strlen@s+1,i2strlen@a+1
  6150  00281C  EF12  F014         	goto	i2l2152
  6151  002820                     i2l2150:
  6152  002820  4A01               	infsnz	i2strlen@s^0,f,c
  6153  002822  2A02               	incf	(i2strlen@s+1)^0,f,c
  6154  002824                     i2l2152:
  6155  002824  C001  FFD9         	movff	i2strlen@s,fsr2l
  6156  002828  C002  FFDA         	movff	i2strlen@s+1,fsr2h
  6157  00282C  50DF               	movf	indf2,w,c
  6158  00282E  A4D8               	btfss	status,2,c
  6159  002830  EF1C  F014         	goto	i2u141_41
  6160  002834  EF1E  F014         	goto	i2u141_40
  6161  002838                     i2u141_41:
  6162  002838  EF10  F014         	goto	i2l2150
  6163  00283C                     i2u141_40:
  6164  00283C  5003               	movf	i2strlen@a^0,w,c
  6165  00283E  5C01               	subwf	i2strlen@s^0,w,c
  6166  002840  6E01               	movwf	?i2_strlen^0,c
  6167  002842  5004               	movf	(i2strlen@a+1)^0,w,c
  6168  002844  5802               	subwfb	(i2strlen@s+1)^0,w,c
  6169  002846  6E02               	movwf	(?i2_strlen+1)^0,c
  6170  002848  0012               	return		;funcret
  6171  00284A                     __end_ofi2_strlen:
  6172                           	callstack 0
  6173                           
  6174 ;; *************** function i2_fputs *****************
  6175 ;; Defined at:
  6176 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputs.c"
  6177 ;; Parameters:    Size  Location     Type
  6178 ;;  s               2    9[COMRAM] PTR const unsigned char 
  6179 ;;		 -> dbuf(32), 
  6180 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  6181 ;;		 -> i2sprintf@f(11), sprintf@f(11), 
  6182 ;; Auto vars:     Size  Location     Type
  6183 ;;  i               2   14[COMRAM] int 
  6184 ;;  c               1   13[COMRAM] unsigned char 
  6185 ;; Return value:  Size  Location     Type
  6186 ;;                  2    9[COMRAM] int 
  6187 ;; Registers used:
  6188 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6189 ;; Tracked objects:
  6190 ;;		On entry : 0/0
  6191 ;;		On exit  : 0/0
  6192 ;;		Unchanged: 0/0
  6193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6194 ;;      Params:         4       0       0       0       0       0       0       0       0
  6195 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6196 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6197 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6198 ;;Total ram usage:        7 bytes
  6199 ;; Hardware stack levels used: 1
  6200 ;; Hardware stack levels required when called: 2
  6201 ;; This function calls:
  6202 ;;		i2_fputc
  6203 ;; This function is called by:
  6204 ;;		i2_pad
  6205 ;; This function uses a non-reentrant model
  6206 ;;
  6207                           
  6208                           	psect	text34
  6209  0025A4                     __ptext34:
  6210                           	callstack 0
  6211  0025A4                     i2_fputs:
  6212                           	callstack 14
  6213  0025A4  0E00               	movlw	0
  6214  0025A6  6E10               	movwf	(i2fputs@i+1)^0,c
  6215  0025A8  0E00               	movlw	0
  6216  0025AA  6E0F               	movwf	i2fputs@i^0,c
  6217  0025AC  EFE3  F012         	goto	i2l2146
  6218  0025B0                     i2l2142:
  6219  0025B0  C00E  F001         	movff	i2fputs@c,i2fputc@c
  6220  0025B4  6A02               	clrf	(i2fputc@c+1)^0,c
  6221  0025B6  C00C  F003         	movff	i2fputs@fp,i2fputc@fp
  6222  0025BA  C00D  F004         	movff	i2fputs@fp+1,i2fputc@fp+1
  6223  0025BE  ECE2  F00F         	call	i2_fputc	;wreg free
  6224  0025C2  4A0F               	infsnz	i2fputs@i^0,f,c
  6225  0025C4  2A10               	incf	(i2fputs@i+1)^0,f,c
  6226  0025C6                     i2l2146:
  6227  0025C6  500F               	movf	i2fputs@i^0,w,c
  6228  0025C8  240A               	addwf	i2fputs@s^0,w,c
  6229  0025CA  6ED9               	movwf	fsr2l,c
  6230  0025CC  5010               	movf	(i2fputs@i+1)^0,w,c
  6231  0025CE  200B               	addwfc	(i2fputs@s+1)^0,w,c
  6232  0025D0  6EDA               	movwf	fsr2h,c
  6233  0025D2  50DF               	movf	indf2,w,c
  6234  0025D4  6E0E               	movwf	i2fputs@c^0,c
  6235  0025D6  500E               	movf	i2fputs@c^0,w,c
  6236  0025D8  A4D8               	btfss	status,2,c
  6237  0025DA  EFF1  F012         	goto	i2u140_41
  6238  0025DE  EFF3  F012         	goto	i2u140_40
  6239  0025E2                     i2u140_41:
  6240  0025E2  EFD8  F012         	goto	i2l2142
  6241  0025E6                     i2u140_40:
  6242  0025E6  0012               	return		;funcret
  6243  0025E8                     __end_ofi2_fputs:
  6244                           	callstack 0
  6245                           
  6246 ;; *************** function i2_fputc *****************
  6247 ;; Defined at:
  6248 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputc.c"
  6249 ;; Parameters:    Size  Location     Type
  6250 ;;  c               2    0[COMRAM] int 
  6251 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  6252 ;;		 -> i2sprintf@f(11), sprintf@f(11), 
  6253 ;; Auto vars:     Size  Location     Type
  6254 ;;		None
  6255 ;; Return value:  Size  Location     Type
  6256 ;;                  2    0[COMRAM] int 
  6257 ;; Registers used:
  6258 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6259 ;; Tracked objects:
  6260 ;;		On entry : 0/0
  6261 ;;		On exit  : 0/0
  6262 ;;		Unchanged: 0/0
  6263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6264 ;;      Params:         4       0       0       0       0       0       0       0       0
  6265 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6266 ;;      Temps:          5       0       0       0       0       0       0       0       0
  6267 ;;      Totals:         9       0       0       0       0       0       0       0       0
  6268 ;;Total ram usage:        9 bytes
  6269 ;; Hardware stack levels used: 1
  6270 ;; Hardware stack levels required when called: 1
  6271 ;; This function calls:
  6272 ;;		i2_putch
  6273 ;; This function is called by:
  6274 ;;		i2_pad
  6275 ;;		i2_vfpfcnvrt
  6276 ;;		i2_fputs
  6277 ;; This function uses a non-reentrant model
  6278 ;;
  6279                           
  6280                           	psect	text35
  6281  001FC4                     __ptext35:
  6282                           	callstack 0
  6283  001FC4                     i2_fputc:
  6284                           	callstack 17
  6285  001FC4  5003               	movf	i2fputc@fp^0,w,c
  6286  001FC6  1004               	iorwf	(i2fputc@fp+1)^0,w,c
  6287  001FC8  B4D8               	btfsc	status,2,c
  6288  001FCA  EFE9  F00F         	goto	i2u134_41
  6289  001FCE  EFEB  F00F         	goto	i2u134_40
  6290  001FD2                     i2u134_41:
  6291  001FD2  EFF4  F00F         	goto	i2l2112
  6292  001FD6                     i2u134_40:
  6293  001FD6  5003               	movf	i2fputc@fp^0,w,c
  6294  001FD8  1004               	iorwf	(i2fputc@fp+1)^0,w,c
  6295  001FDA  A4D8               	btfss	status,2,c
  6296  001FDC  EFF2  F00F         	goto	i2u135_41
  6297  001FE0  EFF4  F00F         	goto	i2u135_40
  6298  001FE4                     i2u135_41:
  6299  001FE4  EFF9  F00F         	goto	i2l2114
  6300  001FE8                     i2u135_40:
  6301  001FE8                     i2l2112:
  6302  001FE8  5001               	movf	i2fputc@c^0,w,c
  6303  001FEA  EC9D  F014         	call	i2_putch
  6304  001FEE  EF46  F010         	goto	i2l967
  6305  001FF2                     i2l2114:
  6306  001FF2  EE20 F009          	lfsr	2,9
  6307  001FF6  5003               	movf	i2fputc@fp^0,w,c
  6308  001FF8  26D9               	addwf	fsr2l,f,c
  6309  001FFA  5004               	movf	(i2fputc@fp+1)^0,w,c
  6310  001FFC  22DA               	addwfc	fsr2h,f,c
  6311  001FFE  50DE               	movf	postinc2,w,c
  6312  002000  10DE               	iorwf	postinc2,w,c
  6313  002002  B4D8               	btfsc	status,2,c
  6314  002004  EF06  F010         	goto	i2u136_41
  6315  002008  EF08  F010         	goto	i2u136_40
  6316  00200C                     i2u136_41:
  6317  00200C  EF23  F010         	goto	i2l2118
  6318  002010                     i2u136_40:
  6319  002010  EE20 F009          	lfsr	2,9
  6320  002014  5003               	movf	i2fputc@fp^0,w,c
  6321  002016  26D9               	addwf	fsr2l,f,c
  6322  002018  5004               	movf	(i2fputc@fp+1)^0,w,c
  6323  00201A  22DA               	addwfc	fsr2h,f,c
  6324  00201C  EE10 F003          	lfsr	1,3
  6325  002020  5003               	movf	i2fputc@fp^0,w,c
  6326  002022  26E1               	addwf	fsr1l,f,c
  6327  002024  5004               	movf	(i2fputc@fp+1)^0,w,c
  6328  002026  22E2               	addwfc	fsr1h,f,c
  6329  002028  50DE               	movf	postinc2,w,c
  6330  00202A  5CE6               	subwf	postinc1,w,c
  6331  00202C  50E6               	movf	postinc1,w,c
  6332  00202E  0A80               	xorlw	128
  6333  002030  6E09               	movwf	(??i2_fputc+4)^0,c
  6334  002032  50DE               	movf	postinc2,w,c
  6335  002034  0A80               	xorlw	128
  6336  002036  5809               	subwfb	(??i2_fputc+4)^0,w,c
  6337  002038  B0D8               	btfsc	status,0,c
  6338  00203A  EF21  F010         	goto	i2u137_41
  6339  00203E  EF23  F010         	goto	i2u137_40
  6340  002042                     i2u137_41:
  6341  002042  EF46  F010         	goto	i2l967
  6342  002046                     i2u137_40:
  6343  002046                     i2l2118:
  6344  002046  EE20 F003          	lfsr	2,3
  6345  00204A  5003               	movf	i2fputc@fp^0,w,c
  6346  00204C  26D9               	addwf	fsr2l,f,c
  6347  00204E  5004               	movf	(i2fputc@fp+1)^0,w,c
  6348  002050  22DA               	addwfc	fsr2h,f,c
  6349  002052  CFDE F005          	movff	postinc2,??i2_fputc
  6350  002056  CFDD F006          	movff	postdec2,??i2_fputc+1
  6351  00205A  C003  FFD9         	movff	i2fputc@fp,fsr2l
  6352  00205E  C004  FFDA         	movff	i2fputc@fp+1,fsr2h
  6353  002062  CFDE F007          	movff	postinc2,??i2_fputc+2
  6354  002066  CFDD F008          	movff	postdec2,??i2_fputc+3
  6355  00206A  5005               	movf	??i2_fputc^0,w,c
  6356  00206C  2407               	addwf	(??i2_fputc+2)^0,w,c
  6357  00206E  6ED9               	movwf	fsr2l,c
  6358  002070  5006               	movf	(??i2_fputc+1)^0,w,c
  6359  002072  2008               	addwfc	(??i2_fputc+3)^0,w,c
  6360  002074  6EDA               	movwf	fsr2h,c
  6361  002076  C001  FFDF         	movff	i2fputc@c,indf2
  6362  00207A  EE20 F003          	lfsr	2,3
  6363  00207E  5003               	movf	i2fputc@fp^0,w,c
  6364  002080  26D9               	addwf	fsr2l,f,c
  6365  002082  5004               	movf	(i2fputc@fp+1)^0,w,c
  6366  002084  22DA               	addwfc	fsr2h,f,c
  6367  002086  2ADE               	incf	postinc2,f,c
  6368  002088  0E00               	movlw	0
  6369  00208A  22DD               	addwfc	postdec2,f,c
  6370  00208C                     i2l967:
  6371  00208C  0012               	return		;funcret
  6372  00208E                     __end_ofi2_fputc:
  6373                           	callstack 0
  6374                           
  6375 ;; *************** function i2_putch *****************
  6376 ;; Defined at:
  6377 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\putch.c"
  6378 ;; Parameters:    Size  Location     Type
  6379 ;;  c               1    wreg     unsigned char 
  6380 ;; Auto vars:     Size  Location     Type
  6381 ;;  c               1  (no storage) unsigned char 
  6382 ;; Return value:  Size  Location     Type
  6383 ;;                  1    wreg      void 
  6384 ;; Registers used:
  6385 ;;		wreg
  6386 ;; Tracked objects:
  6387 ;;		On entry : 0/0
  6388 ;;		On exit  : 0/0
  6389 ;;		Unchanged: 0/0
  6390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6391 ;;      Params:         0       0       0       0       0       0       0       0       0
  6392 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6393 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6394 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6395 ;;Total ram usage:        0 bytes
  6396 ;; Hardware stack levels used: 1
  6397 ;; This function calls:
  6398 ;;		Nothing
  6399 ;; This function is called by:
  6400 ;;		i2_fputc
  6401 ;; This function uses a non-reentrant model
  6402 ;;
  6403                           
  6404                           	psect	text36
  6405  00293A                     __ptext36:
  6406                           	callstack 0
  6407  00293A                     i2_putch:
  6408                           	callstack 17
  6409  00293A  0012               	return		;funcret
  6410  00293C                     __end_ofi2_putch:
  6411                           	callstack 0
  6412                           
  6413 ;; *************** function i2_abs *****************
  6414 ;; Defined at:
  6415 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\abs.c"
  6416 ;; Parameters:    Size  Location     Type
  6417 ;;  a               2   18[COMRAM] int 
  6418 ;; Auto vars:     Size  Location     Type
  6419 ;;		None
  6420 ;; Return value:  Size  Location     Type
  6421 ;;                  2   18[COMRAM] int 
  6422 ;; Registers used:
  6423 ;;		wreg, status,2, status,0
  6424 ;; Tracked objects:
  6425 ;;		On entry : 0/0
  6426 ;;		On exit  : 0/0
  6427 ;;		Unchanged: 0/0
  6428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6429 ;;      Params:         2       0       0       0       0       0       0       0       0
  6430 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6431 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6432 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6433 ;;Total ram usage:        4 bytes
  6434 ;; Hardware stack levels used: 1
  6435 ;; This function calls:
  6436 ;;		Nothing
  6437 ;; This function is called by:
  6438 ;;		i2_dtoa
  6439 ;; This function uses a non-reentrant model
  6440 ;;
  6441                           
  6442                           	psect	text37
  6443  00266E                     __ptext37:
  6444                           	callstack 0
  6445  00266E                     i2_abs:
  6446                           	callstack 17
  6447  00266E  BE14               	btfsc	(i2abs@a+1)^0,7,c
  6448  002670  EF44  F013         	goto	i2u181_40
  6449  002674  5014               	movf	(i2abs@a+1)^0,w,c
  6450  002676  E106               	bnz	i2u181_41
  6451  002678  0413               	decf	i2abs@a^0,w,c
  6452  00267A  B0D8               	btfsc	status,0,c
  6453  00267C  EF42  F013         	goto	i2u181_41
  6454  002680  EF44  F013         	goto	i2u181_40
  6455  002684                     i2u181_41:
  6456  002684  EF52  F013         	goto	i2l913
  6457  002688                     i2u181_40:
  6458  002688  C013  F015         	movff	i2abs@a,??i2_abs
  6459  00268C  C014  F016         	movff	i2abs@a+1,??i2_abs+1
  6460  002690  1E15               	comf	??i2_abs^0,f,c
  6461  002692  1E16               	comf	(??i2_abs+1)^0,f,c
  6462  002694  4A15               	infsnz	??i2_abs^0,f,c
  6463  002696  2A16               	incf	(??i2_abs+1)^0,f,c
  6464  002698  C015  F013         	movff	??i2_abs,?i2_abs
  6465  00269C  C016  F014         	movff	??i2_abs+1,?i2_abs+1
  6466  0026A0  EF56  F013         	goto	i2l916
  6467  0026A4                     i2l913:
  6468  0026A4  C013  F013         	movff	i2abs@a,?i2_abs
  6469  0026A8  C014  F014         	movff	i2abs@a+1,?i2_abs+1
  6470  0026AC                     i2l916:
  6471  0026AC  0012               	return		;funcret
  6472  0026AE                     __end_ofi2_abs:
  6473                           	callstack 0
  6474                           
  6475 ;; *************** function i2___aomod *****************
  6476 ;; Defined at:
  6477 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aomod.c"
  6478 ;; Parameters:    Size  Location     Type
  6479 ;;  dividend        8    0[COMRAM] long long 
  6480 ;;  divisor         8    8[COMRAM] long long 
  6481 ;; Auto vars:     Size  Location     Type
  6482 ;;  sign            1   17[COMRAM] unsigned char 
  6483 ;;  counter         1   16[COMRAM] unsigned char 
  6484 ;; Return value:  Size  Location     Type
  6485 ;;                  8    0[COMRAM] long long 
  6486 ;; Registers used:
  6487 ;;		wreg, status,2, status,0
  6488 ;; Tracked objects:
  6489 ;;		On entry : 0/0
  6490 ;;		On exit  : 0/0
  6491 ;;		Unchanged: 0/0
  6492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6493 ;;      Params:        16       0       0       0       0       0       0       0       0
  6494 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6495 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6496 ;;      Totals:        18       0       0       0       0       0       0       0       0
  6497 ;;Total ram usage:       18 bytes
  6498 ;; Hardware stack levels used: 1
  6499 ;; This function calls:
  6500 ;;		Nothing
  6501 ;; This function is called by:
  6502 ;;		i2_dtoa
  6503 ;; This function uses a non-reentrant model
  6504 ;;
  6505                           
  6506                           	psect	text38
  6507  00191A                     __ptext38:
  6508                           	callstack 0
  6509  00191A                     i2___aomod:
  6510                           	callstack 17
  6511  00191A  0E00               	movlw	0
  6512  00191C  6E12               	movwf	i2___aomod@sign^0,c
  6513  00191E  BE08               	btfsc	(i2___aomod@dividend+7)^0,7,c
  6514  001920  EF96  F00C         	goto	i2u171_40
  6515  001924  EF94  F00C         	goto	i2u171_41
  6516  001928                     i2u171_41:
  6517  001928  EFA8  F00C         	goto	i2l2344
  6518  00192C                     i2u171_40:
  6519  00192C  1E08               	comf	(i2___aomod@dividend+7)^0,f,c
  6520  00192E  1E07               	comf	(i2___aomod@dividend+6)^0,f,c
  6521  001930  1E06               	comf	(i2___aomod@dividend+5)^0,f,c
  6522  001932  1E05               	comf	(i2___aomod@dividend+4)^0,f,c
  6523  001934  1E04               	comf	(i2___aomod@dividend+3)^0,f,c
  6524  001936  1E03               	comf	(i2___aomod@dividend+2)^0,f,c
  6525  001938  1E02               	comf	(i2___aomod@dividend+1)^0,f,c
  6526  00193A  6C01               	negf	i2___aomod@dividend^0,c
  6527  00193C  0E00               	movlw	0
  6528  00193E  2202               	addwfc	(i2___aomod@dividend+1)^0,f,c
  6529  001940  2203               	addwfc	(i2___aomod@dividend+2)^0,f,c
  6530  001942  2204               	addwfc	(i2___aomod@dividend+3)^0,f,c
  6531  001944  2205               	addwfc	(i2___aomod@dividend+4)^0,f,c
  6532  001946  2206               	addwfc	(i2___aomod@dividend+5)^0,f,c
  6533  001948  2207               	addwfc	(i2___aomod@dividend+6)^0,f,c
  6534  00194A  2208               	addwfc	(i2___aomod@dividend+7)^0,f,c
  6535  00194C  0E01               	movlw	1
  6536  00194E  6E12               	movwf	i2___aomod@sign^0,c
  6537  001950                     i2l2344:
  6538  001950  BE10               	btfsc	(i2___aomod@divisor+7)^0,7,c
  6539  001952  EFAF  F00C         	goto	i2u172_40
  6540  001956  EFAD  F00C         	goto	i2u172_41
  6541  00195A                     i2u172_41:
  6542  00195A  EFBF  F00C         	goto	i2l2348
  6543  00195E                     i2u172_40:
  6544  00195E  1E10               	comf	(i2___aomod@divisor+7)^0,f,c
  6545  001960  1E0F               	comf	(i2___aomod@divisor+6)^0,f,c
  6546  001962  1E0E               	comf	(i2___aomod@divisor+5)^0,f,c
  6547  001964  1E0D               	comf	(i2___aomod@divisor+4)^0,f,c
  6548  001966  1E0C               	comf	(i2___aomod@divisor+3)^0,f,c
  6549  001968  1E0B               	comf	(i2___aomod@divisor+2)^0,f,c
  6550  00196A  1E0A               	comf	(i2___aomod@divisor+1)^0,f,c
  6551  00196C  6C09               	negf	i2___aomod@divisor^0,c
  6552  00196E  0E00               	movlw	0
  6553  001970  220A               	addwfc	(i2___aomod@divisor+1)^0,f,c
  6554  001972  220B               	addwfc	(i2___aomod@divisor+2)^0,f,c
  6555  001974  220C               	addwfc	(i2___aomod@divisor+3)^0,f,c
  6556  001976  220D               	addwfc	(i2___aomod@divisor+4)^0,f,c
  6557  001978  220E               	addwfc	(i2___aomod@divisor+5)^0,f,c
  6558  00197A  220F               	addwfc	(i2___aomod@divisor+6)^0,f,c
  6559  00197C  2210               	addwfc	(i2___aomod@divisor+7)^0,f,c
  6560  00197E                     i2l2348:
  6561  00197E  5009               	movf	i2___aomod@divisor^0,w,c
  6562  001980  100A               	iorwf	(i2___aomod@divisor+1)^0,w,c
  6563  001982  100B               	iorwf	(i2___aomod@divisor+2)^0,w,c
  6564  001984  100C               	iorwf	(i2___aomod@divisor+3)^0,w,c
  6565  001986  100D               	iorwf	(i2___aomod@divisor+4)^0,w,c
  6566  001988  100E               	iorwf	(i2___aomod@divisor+5)^0,w,c
  6567  00198A  100F               	iorwf	(i2___aomod@divisor+6)^0,w,c
  6568  00198C  1010               	iorwf	(i2___aomod@divisor+7)^0,w,c
  6569  00198E  B4D8               	btfsc	status,2,c
  6570  001990  EFCC  F00C         	goto	i2u173_41
  6571  001994  EFCE  F00C         	goto	i2u173_40
  6572  001998                     i2u173_41:
  6573  001998  EF16  F00D         	goto	i2l2364
  6574  00199C                     i2u173_40:
  6575  00199C  0E01               	movlw	1
  6576  00199E  6E11               	movwf	i2___aomod@counter^0,c
  6577  0019A0  EFDC  F00C         	goto	i2l2354
  6578  0019A4                     i2l2352:
  6579  0019A4  90D8               	bcf	status,0,c
  6580  0019A6  3609               	rlcf	i2___aomod@divisor^0,f,c
  6581  0019A8  360A               	rlcf	(i2___aomod@divisor+1)^0,f,c
  6582  0019AA  360B               	rlcf	(i2___aomod@divisor+2)^0,f,c
  6583  0019AC  360C               	rlcf	(i2___aomod@divisor+3)^0,f,c
  6584  0019AE  360D               	rlcf	(i2___aomod@divisor+4)^0,f,c
  6585  0019B0  360E               	rlcf	(i2___aomod@divisor+5)^0,f,c
  6586  0019B2  360F               	rlcf	(i2___aomod@divisor+6)^0,f,c
  6587  0019B4  3610               	rlcf	(i2___aomod@divisor+7)^0,f,c
  6588  0019B6  2A11               	incf	i2___aomod@counter^0,f,c
  6589  0019B8                     i2l2354:
  6590  0019B8  AE10               	btfss	(i2___aomod@divisor+7)^0,7,c
  6591  0019BA  EFE1  F00C         	goto	i2u174_41
  6592  0019BE  EFE3  F00C         	goto	i2u174_40
  6593  0019C2                     i2u174_41:
  6594  0019C2  EFD2  F00C         	goto	i2l2352
  6595  0019C6                     i2u174_40:
  6596  0019C6                     i2l2356:
  6597  0019C6  5009               	movf	i2___aomod@divisor^0,w,c
  6598  0019C8  5C01               	subwf	i2___aomod@dividend^0,w,c
  6599  0019CA  500A               	movf	(i2___aomod@divisor+1)^0,w,c
  6600  0019CC  5802               	subwfb	(i2___aomod@dividend+1)^0,w,c
  6601  0019CE  500B               	movf	(i2___aomod@divisor+2)^0,w,c
  6602  0019D0  5803               	subwfb	(i2___aomod@dividend+2)^0,w,c
  6603  0019D2  500C               	movf	(i2___aomod@divisor+3)^0,w,c
  6604  0019D4  5804               	subwfb	(i2___aomod@dividend+3)^0,w,c
  6605  0019D6  500D               	movf	(i2___aomod@divisor+4)^0,w,c
  6606  0019D8  5805               	subwfb	(i2___aomod@dividend+4)^0,w,c
  6607  0019DA  500E               	movf	(i2___aomod@divisor+5)^0,w,c
  6608  0019DC  5806               	subwfb	(i2___aomod@dividend+5)^0,w,c
  6609  0019DE  500F               	movf	(i2___aomod@divisor+6)^0,w,c
  6610  0019E0  5807               	subwfb	(i2___aomod@dividend+6)^0,w,c
  6611  0019E2  5010               	movf	(i2___aomod@divisor+7)^0,w,c
  6612  0019E4  5808               	subwfb	(i2___aomod@dividend+7)^0,w,c
  6613  0019E6  A0D8               	btfss	status,0,c
  6614  0019E8  EFF8  F00C         	goto	i2u175_41
  6615  0019EC  EFFA  F00C         	goto	i2u175_40
  6616  0019F0                     i2u175_41:
  6617  0019F0  EF0A  F00D         	goto	i2l2360
  6618  0019F4                     i2u175_40:
  6619  0019F4  5009               	movf	i2___aomod@divisor^0,w,c
  6620  0019F6  5E01               	subwf	i2___aomod@dividend^0,f,c
  6621  0019F8  500A               	movf	(i2___aomod@divisor+1)^0,w,c
  6622  0019FA  5A02               	subwfb	(i2___aomod@dividend+1)^0,f,c
  6623  0019FC  500B               	movf	(i2___aomod@divisor+2)^0,w,c
  6624  0019FE  5A03               	subwfb	(i2___aomod@dividend+2)^0,f,c
  6625  001A00  500C               	movf	(i2___aomod@divisor+3)^0,w,c
  6626  001A02  5A04               	subwfb	(i2___aomod@dividend+3)^0,f,c
  6627  001A04  500D               	movf	(i2___aomod@divisor+4)^0,w,c
  6628  001A06  5A05               	subwfb	(i2___aomod@dividend+4)^0,f,c
  6629  001A08  500E               	movf	(i2___aomod@divisor+5)^0,w,c
  6630  001A0A  5A06               	subwfb	(i2___aomod@dividend+5)^0,f,c
  6631  001A0C  500F               	movf	(i2___aomod@divisor+6)^0,w,c
  6632  001A0E  5A07               	subwfb	(i2___aomod@dividend+6)^0,f,c
  6633  001A10  5010               	movf	(i2___aomod@divisor+7)^0,w,c
  6634  001A12  5A08               	subwfb	(i2___aomod@dividend+7)^0,f,c
  6635  001A14                     i2l2360:
  6636  001A14  90D8               	bcf	status,0,c
  6637  001A16  3210               	rrcf	(i2___aomod@divisor+7)^0,f,c
  6638  001A18  320F               	rrcf	(i2___aomod@divisor+6)^0,f,c
  6639  001A1A  320E               	rrcf	(i2___aomod@divisor+5)^0,f,c
  6640  001A1C  320D               	rrcf	(i2___aomod@divisor+4)^0,f,c
  6641  001A1E  320C               	rrcf	(i2___aomod@divisor+3)^0,f,c
  6642  001A20  320B               	rrcf	(i2___aomod@divisor+2)^0,f,c
  6643  001A22  320A               	rrcf	(i2___aomod@divisor+1)^0,f,c
  6644  001A24  3209               	rrcf	i2___aomod@divisor^0,f,c
  6645  001A26  2E11               	decfsz	i2___aomod@counter^0,f,c
  6646  001A28  EFE3  F00C         	goto	i2l2356
  6647  001A2C                     i2l2364:
  6648  001A2C  5012               	movf	i2___aomod@sign^0,w,c
  6649  001A2E  B4D8               	btfsc	status,2,c
  6650  001A30  EF1C  F00D         	goto	i2u176_41
  6651  001A34  EF1E  F00D         	goto	i2u176_40
  6652  001A38                     i2u176_41:
  6653  001A38  EF2E  F00D         	goto	i2l2368
  6654  001A3C                     i2u176_40:
  6655  001A3C  1E08               	comf	(i2___aomod@dividend+7)^0,f,c
  6656  001A3E  1E07               	comf	(i2___aomod@dividend+6)^0,f,c
  6657  001A40  1E06               	comf	(i2___aomod@dividend+5)^0,f,c
  6658  001A42  1E05               	comf	(i2___aomod@dividend+4)^0,f,c
  6659  001A44  1E04               	comf	(i2___aomod@dividend+3)^0,f,c
  6660  001A46  1E03               	comf	(i2___aomod@dividend+2)^0,f,c
  6661  001A48  1E02               	comf	(i2___aomod@dividend+1)^0,f,c
  6662  001A4A  6C01               	negf	i2___aomod@dividend^0,c
  6663  001A4C  0E00               	movlw	0
  6664  001A4E  2202               	addwfc	(i2___aomod@dividend+1)^0,f,c
  6665  001A50  2203               	addwfc	(i2___aomod@dividend+2)^0,f,c
  6666  001A52  2204               	addwfc	(i2___aomod@dividend+3)^0,f,c
  6667  001A54  2205               	addwfc	(i2___aomod@dividend+4)^0,f,c
  6668  001A56  2206               	addwfc	(i2___aomod@dividend+5)^0,f,c
  6669  001A58  2207               	addwfc	(i2___aomod@dividend+6)^0,f,c
  6670  001A5A  2208               	addwfc	(i2___aomod@dividend+7)^0,f,c
  6671  001A5C                     i2l2368:
  6672  001A5C  C001  F001         	movff	i2___aomod@dividend,?i2___aomod
  6673  001A60  C002  F002         	movff	i2___aomod@dividend+1,?i2___aomod+1
  6674  001A64  C003  F003         	movff	i2___aomod@dividend+2,?i2___aomod+2
  6675  001A68  C004  F004         	movff	i2___aomod@dividend+3,?i2___aomod+3
  6676  001A6C  C005  F005         	movff	i2___aomod@dividend+4,?i2___aomod+4
  6677  001A70  C006  F006         	movff	i2___aomod@dividend+5,?i2___aomod+5
  6678  001A74  C007  F007         	movff	i2___aomod@dividend+6,?i2___aomod+6
  6679  001A78  C008  F008         	movff	i2___aomod@dividend+7,?i2___aomod+7
  6680  001A7C  0012               	return		;funcret
  6681  001A7E                     __end_ofi2___aomod:
  6682                           	callstack 0
  6683                           
  6684 ;; *************** function i2___aodiv *****************
  6685 ;; Defined at:
  6686 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aodiv.c"
  6687 ;; Parameters:    Size  Location     Type
  6688 ;;  dividend        8    0[COMRAM] long long 
  6689 ;;  divisor         8    8[COMRAM] long long 
  6690 ;; Auto vars:     Size  Location     Type
  6691 ;;  quotient        8   18[COMRAM] long long 
  6692 ;;  sign            1   17[COMRAM] unsigned char 
  6693 ;;  counter         1   16[COMRAM] unsigned char 
  6694 ;; Return value:  Size  Location     Type
  6695 ;;                  8    0[COMRAM] long long 
  6696 ;; Registers used:
  6697 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6698 ;; Tracked objects:
  6699 ;;		On entry : 0/0
  6700 ;;		On exit  : 0/0
  6701 ;;		Unchanged: 0/0
  6702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6703 ;;      Params:        16       0       0       0       0       0       0       0       0
  6704 ;;      Locals:        10       0       0       0       0       0       0       0       0
  6705 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6706 ;;      Totals:        26       0       0       0       0       0       0       0       0
  6707 ;;Total ram usage:       26 bytes
  6708 ;; Hardware stack levels used: 1
  6709 ;; This function calls:
  6710 ;;		Nothing
  6711 ;; This function is called by:
  6712 ;;		i2_dtoa
  6713 ;; This function uses a non-reentrant model
  6714 ;;
  6715                           
  6716                           	psect	text39
  6717  00162C                     __ptext39:
  6718                           	callstack 0
  6719  00162C                     i2___aodiv:
  6720                           	callstack 17
  6721  00162C  0E00               	movlw	0
  6722  00162E  6E12               	movwf	i2___aodiv@sign^0,c
  6723  001630  BE10               	btfsc	(i2___aodiv@divisor+7)^0,7,c
  6724  001632  EF1F  F00B         	goto	i2u164_40
  6725  001636  EF1D  F00B         	goto	i2u164_41
  6726  00163A                     i2u164_41:
  6727  00163A  EF31  F00B         	goto	i2l2300
  6728  00163E                     i2u164_40:
  6729  00163E  1E10               	comf	(i2___aodiv@divisor+7)^0,f,c
  6730  001640  1E0F               	comf	(i2___aodiv@divisor+6)^0,f,c
  6731  001642  1E0E               	comf	(i2___aodiv@divisor+5)^0,f,c
  6732  001644  1E0D               	comf	(i2___aodiv@divisor+4)^0,f,c
  6733  001646  1E0C               	comf	(i2___aodiv@divisor+3)^0,f,c
  6734  001648  1E0B               	comf	(i2___aodiv@divisor+2)^0,f,c
  6735  00164A  1E0A               	comf	(i2___aodiv@divisor+1)^0,f,c
  6736  00164C  6C09               	negf	i2___aodiv@divisor^0,c
  6737  00164E  0E00               	movlw	0
  6738  001650  220A               	addwfc	(i2___aodiv@divisor+1)^0,f,c
  6739  001652  220B               	addwfc	(i2___aodiv@divisor+2)^0,f,c
  6740  001654  220C               	addwfc	(i2___aodiv@divisor+3)^0,f,c
  6741  001656  220D               	addwfc	(i2___aodiv@divisor+4)^0,f,c
  6742  001658  220E               	addwfc	(i2___aodiv@divisor+5)^0,f,c
  6743  00165A  220F               	addwfc	(i2___aodiv@divisor+6)^0,f,c
  6744  00165C  2210               	addwfc	(i2___aodiv@divisor+7)^0,f,c
  6745  00165E  0E01               	movlw	1
  6746  001660  6E12               	movwf	i2___aodiv@sign^0,c
  6747  001662                     i2l2300:
  6748  001662  BE08               	btfsc	(i2___aodiv@dividend+7)^0,7,c
  6749  001664  EF38  F00B         	goto	i2u165_40
  6750  001668  EF36  F00B         	goto	i2u165_41
  6751  00166C                     i2u165_41:
  6752  00166C  EF4A  F00B         	goto	i2l2306
  6753  001670                     i2u165_40:
  6754  001670  1E08               	comf	(i2___aodiv@dividend+7)^0,f,c
  6755  001672  1E07               	comf	(i2___aodiv@dividend+6)^0,f,c
  6756  001674  1E06               	comf	(i2___aodiv@dividend+5)^0,f,c
  6757  001676  1E05               	comf	(i2___aodiv@dividend+4)^0,f,c
  6758  001678  1E04               	comf	(i2___aodiv@dividend+3)^0,f,c
  6759  00167A  1E03               	comf	(i2___aodiv@dividend+2)^0,f,c
  6760  00167C  1E02               	comf	(i2___aodiv@dividend+1)^0,f,c
  6761  00167E  6C01               	negf	i2___aodiv@dividend^0,c
  6762  001680  0E00               	movlw	0
  6763  001682  2202               	addwfc	(i2___aodiv@dividend+1)^0,f,c
  6764  001684  2203               	addwfc	(i2___aodiv@dividend+2)^0,f,c
  6765  001686  2204               	addwfc	(i2___aodiv@dividend+3)^0,f,c
  6766  001688  2205               	addwfc	(i2___aodiv@dividend+4)^0,f,c
  6767  00168A  2206               	addwfc	(i2___aodiv@dividend+5)^0,f,c
  6768  00168C  2207               	addwfc	(i2___aodiv@dividend+6)^0,f,c
  6769  00168E  2208               	addwfc	(i2___aodiv@dividend+7)^0,f,c
  6770  001690  0E01               	movlw	1
  6771  001692  1A12               	xorwf	i2___aodiv@sign^0,f,c
  6772  001694                     i2l2306:
  6773  001694  EE20  F013         	lfsr	2,i2___aodiv@quotient
  6774  001698  0E07               	movlw	7
  6775  00169A                     i2u166_41:
  6776  00169A  6ADE               	clrf	postinc2,c
  6777  00169C  06E8               	decf	wreg,f,c
  6778  00169E  E2FD               	bc	i2u166_41
  6779  0016A0  5009               	movf	i2___aodiv@divisor^0,w,c
  6780  0016A2  100A               	iorwf	(i2___aodiv@divisor+1)^0,w,c
  6781  0016A4  100B               	iorwf	(i2___aodiv@divisor+2)^0,w,c
  6782  0016A6  100C               	iorwf	(i2___aodiv@divisor+3)^0,w,c
  6783  0016A8  100D               	iorwf	(i2___aodiv@divisor+4)^0,w,c
  6784  0016AA  100E               	iorwf	(i2___aodiv@divisor+5)^0,w,c
  6785  0016AC  100F               	iorwf	(i2___aodiv@divisor+6)^0,w,c
  6786  0016AE  1010               	iorwf	(i2___aodiv@divisor+7)^0,w,c
  6787  0016B0  B4D8               	btfsc	status,2,c
  6788  0016B2  EF5D  F00B         	goto	i2u167_41
  6789  0016B6  EF5F  F00B         	goto	i2u167_40
  6790  0016BA                     i2u167_41:
  6791  0016BA  EFB1  F00B         	goto	i2l2328
  6792  0016BE                     i2u167_40:
  6793  0016BE  0E01               	movlw	1
  6794  0016C0  6E11               	movwf	i2___aodiv@counter^0,c
  6795  0016C2  EF6D  F00B         	goto	i2l2314
  6796  0016C6                     i2l2312:
  6797  0016C6  90D8               	bcf	status,0,c
  6798  0016C8  3609               	rlcf	i2___aodiv@divisor^0,f,c
  6799  0016CA  360A               	rlcf	(i2___aodiv@divisor+1)^0,f,c
  6800  0016CC  360B               	rlcf	(i2___aodiv@divisor+2)^0,f,c
  6801  0016CE  360C               	rlcf	(i2___aodiv@divisor+3)^0,f,c
  6802  0016D0  360D               	rlcf	(i2___aodiv@divisor+4)^0,f,c
  6803  0016D2  360E               	rlcf	(i2___aodiv@divisor+5)^0,f,c
  6804  0016D4  360F               	rlcf	(i2___aodiv@divisor+6)^0,f,c
  6805  0016D6  3610               	rlcf	(i2___aodiv@divisor+7)^0,f,c
  6806  0016D8  2A11               	incf	i2___aodiv@counter^0,f,c
  6807  0016DA                     i2l2314:
  6808  0016DA  AE10               	btfss	(i2___aodiv@divisor+7)^0,7,c
  6809  0016DC  EF72  F00B         	goto	i2u168_41
  6810  0016E0  EF74  F00B         	goto	i2u168_40
  6811  0016E4                     i2u168_41:
  6812  0016E4  EF63  F00B         	goto	i2l2312
  6813  0016E8                     i2u168_40:
  6814  0016E8                     i2l2316:
  6815  0016E8  90D8               	bcf	status,0,c
  6816  0016EA  3613               	rlcf	i2___aodiv@quotient^0,f,c
  6817  0016EC  3614               	rlcf	(i2___aodiv@quotient+1)^0,f,c
  6818  0016EE  3615               	rlcf	(i2___aodiv@quotient+2)^0,f,c
  6819  0016F0  3616               	rlcf	(i2___aodiv@quotient+3)^0,f,c
  6820  0016F2  3617               	rlcf	(i2___aodiv@quotient+4)^0,f,c
  6821  0016F4  3618               	rlcf	(i2___aodiv@quotient+5)^0,f,c
  6822  0016F6  3619               	rlcf	(i2___aodiv@quotient+6)^0,f,c
  6823  0016F8  361A               	rlcf	(i2___aodiv@quotient+7)^0,f,c
  6824  0016FA  5009               	movf	i2___aodiv@divisor^0,w,c
  6825  0016FC  5C01               	subwf	i2___aodiv@dividend^0,w,c
  6826  0016FE  500A               	movf	(i2___aodiv@divisor+1)^0,w,c
  6827  001700  5802               	subwfb	(i2___aodiv@dividend+1)^0,w,c
  6828  001702  500B               	movf	(i2___aodiv@divisor+2)^0,w,c
  6829  001704  5803               	subwfb	(i2___aodiv@dividend+2)^0,w,c
  6830  001706  500C               	movf	(i2___aodiv@divisor+3)^0,w,c
  6831  001708  5804               	subwfb	(i2___aodiv@dividend+3)^0,w,c
  6832  00170A  500D               	movf	(i2___aodiv@divisor+4)^0,w,c
  6833  00170C  5805               	subwfb	(i2___aodiv@dividend+4)^0,w,c
  6834  00170E  500E               	movf	(i2___aodiv@divisor+5)^0,w,c
  6835  001710  5806               	subwfb	(i2___aodiv@dividend+5)^0,w,c
  6836  001712  500F               	movf	(i2___aodiv@divisor+6)^0,w,c
  6837  001714  5807               	subwfb	(i2___aodiv@dividend+6)^0,w,c
  6838  001716  5010               	movf	(i2___aodiv@divisor+7)^0,w,c
  6839  001718  5808               	subwfb	(i2___aodiv@dividend+7)^0,w,c
  6840  00171A  A0D8               	btfss	status,0,c
  6841  00171C  EF92  F00B         	goto	i2u169_41
  6842  001720  EF94  F00B         	goto	i2u169_40
  6843  001724                     i2u169_41:
  6844  001724  EFA5  F00B         	goto	i2l2324
  6845  001728                     i2u169_40:
  6846  001728  5009               	movf	i2___aodiv@divisor^0,w,c
  6847  00172A  5E01               	subwf	i2___aodiv@dividend^0,f,c
  6848  00172C  500A               	movf	(i2___aodiv@divisor+1)^0,w,c
  6849  00172E  5A02               	subwfb	(i2___aodiv@dividend+1)^0,f,c
  6850  001730  500B               	movf	(i2___aodiv@divisor+2)^0,w,c
  6851  001732  5A03               	subwfb	(i2___aodiv@dividend+2)^0,f,c
  6852  001734  500C               	movf	(i2___aodiv@divisor+3)^0,w,c
  6853  001736  5A04               	subwfb	(i2___aodiv@dividend+3)^0,f,c
  6854  001738  500D               	movf	(i2___aodiv@divisor+4)^0,w,c
  6855  00173A  5A05               	subwfb	(i2___aodiv@dividend+4)^0,f,c
  6856  00173C  500E               	movf	(i2___aodiv@divisor+5)^0,w,c
  6857  00173E  5A06               	subwfb	(i2___aodiv@dividend+5)^0,f,c
  6858  001740  500F               	movf	(i2___aodiv@divisor+6)^0,w,c
  6859  001742  5A07               	subwfb	(i2___aodiv@dividend+6)^0,f,c
  6860  001744  5010               	movf	(i2___aodiv@divisor+7)^0,w,c
  6861  001746  5A08               	subwfb	(i2___aodiv@dividend+7)^0,f,c
  6862  001748  8013               	bsf	i2___aodiv@quotient^0,0,c
  6863  00174A                     i2l2324:
  6864  00174A  90D8               	bcf	status,0,c
  6865  00174C  3210               	rrcf	(i2___aodiv@divisor+7)^0,f,c
  6866  00174E  320F               	rrcf	(i2___aodiv@divisor+6)^0,f,c
  6867  001750  320E               	rrcf	(i2___aodiv@divisor+5)^0,f,c
  6868  001752  320D               	rrcf	(i2___aodiv@divisor+4)^0,f,c
  6869  001754  320C               	rrcf	(i2___aodiv@divisor+3)^0,f,c
  6870  001756  320B               	rrcf	(i2___aodiv@divisor+2)^0,f,c
  6871  001758  320A               	rrcf	(i2___aodiv@divisor+1)^0,f,c
  6872  00175A  3209               	rrcf	i2___aodiv@divisor^0,f,c
  6873  00175C  2E11               	decfsz	i2___aodiv@counter^0,f,c
  6874  00175E  EF74  F00B         	goto	i2l2316
  6875  001762                     i2l2328:
  6876  001762  5012               	movf	i2___aodiv@sign^0,w,c
  6877  001764  B4D8               	btfsc	status,2,c
  6878  001766  EFB7  F00B         	goto	i2u170_41
  6879  00176A  EFB9  F00B         	goto	i2u170_40
  6880  00176E                     i2u170_41:
  6881  00176E  EFC9  F00B         	goto	i2l2332
  6882  001772                     i2u170_40:
  6883  001772  1E1A               	comf	(i2___aodiv@quotient+7)^0,f,c
  6884  001774  1E19               	comf	(i2___aodiv@quotient+6)^0,f,c
  6885  001776  1E18               	comf	(i2___aodiv@quotient+5)^0,f,c
  6886  001778  1E17               	comf	(i2___aodiv@quotient+4)^0,f,c
  6887  00177A  1E16               	comf	(i2___aodiv@quotient+3)^0,f,c
  6888  00177C  1E15               	comf	(i2___aodiv@quotient+2)^0,f,c
  6889  00177E  1E14               	comf	(i2___aodiv@quotient+1)^0,f,c
  6890  001780  6C13               	negf	i2___aodiv@quotient^0,c
  6891  001782  0E00               	movlw	0
  6892  001784  2214               	addwfc	(i2___aodiv@quotient+1)^0,f,c
  6893  001786  2215               	addwfc	(i2___aodiv@quotient+2)^0,f,c
  6894  001788  2216               	addwfc	(i2___aodiv@quotient+3)^0,f,c
  6895  00178A  2217               	addwfc	(i2___aodiv@quotient+4)^0,f,c
  6896  00178C  2218               	addwfc	(i2___aodiv@quotient+5)^0,f,c
  6897  00178E  2219               	addwfc	(i2___aodiv@quotient+6)^0,f,c
  6898  001790  221A               	addwfc	(i2___aodiv@quotient+7)^0,f,c
  6899  001792                     i2l2332:
  6900  001792  C013  F001         	movff	i2___aodiv@quotient,?i2___aodiv
  6901  001796  C014  F002         	movff	i2___aodiv@quotient+1,?i2___aodiv+1
  6902  00179A  C015  F003         	movff	i2___aodiv@quotient+2,?i2___aodiv+2
  6903  00179E  C016  F004         	movff	i2___aodiv@quotient+3,?i2___aodiv+3
  6904  0017A2  C017  F005         	movff	i2___aodiv@quotient+4,?i2___aodiv+4
  6905  0017A6  C018  F006         	movff	i2___aodiv@quotient+5,?i2___aodiv+5
  6906  0017AA  C019  F007         	movff	i2___aodiv@quotient+6,?i2___aodiv+6
  6907  0017AE  C01A  F008         	movff	i2___aodiv@quotient+7,?i2___aodiv+7
  6908  0017B2  0012               	return		;funcret
  6909  0017B4                     __end_ofi2___aodiv:
  6910                           	callstack 0
  6911                           
  6912 ;; *************** function i2_atoi *****************
  6913 ;; Defined at:
  6914 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\atoi.c"
  6915 ;; Parameters:    Size  Location     Type
  6916 ;;  s               2    6[COMRAM] PTR const unsigned char 
  6917 ;;		 -> STR_4(14), STR_3(11), STR_2(14), STR_1(11), 
  6918 ;; Auto vars:     Size  Location     Type
  6919 ;;  n               2   14[COMRAM] int 
  6920 ;;  neg             2   12[COMRAM] int 
  6921 ;; Return value:  Size  Location     Type
  6922 ;;                  2    6[COMRAM] int 
  6923 ;; Registers used:
  6924 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6925 ;; Tracked objects:
  6926 ;;		On entry : 0/0
  6927 ;;		On exit  : 0/0
  6928 ;;		Unchanged: 0/0
  6929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6930 ;;      Params:         2       0       0       0       0       0       0       0       0
  6931 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6932 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6933 ;;      Totals:        10       0       0       0       0       0       0       0       0
  6934 ;;Total ram usage:       10 bytes
  6935 ;; Hardware stack levels used: 1
  6936 ;; Hardware stack levels required when called: 1
  6937 ;; This function calls:
  6938 ;;		i2___wmul
  6939 ;;		i2_isdigit
  6940 ;;		i2_isspace
  6941 ;; This function is called by:
  6942 ;;		i2_vfpfcnvrt
  6943 ;; This function uses a non-reentrant model
  6944 ;;
  6945                           
  6946                           	psect	text40
  6947  001BD8                     __ptext40:
  6948                           	callstack 0
  6949  001BD8                     i2_atoi:
  6950                           	callstack 17
  6951  001BD8  0E00               	movlw	0
  6952  001BDA  6E10               	movwf	(i2atoi@n+1)^0,c
  6953  001BDC  0E00               	movlw	0
  6954  001BDE  6E0F               	movwf	i2atoi@n^0,c
  6955  001BE0  0E00               	movlw	0
  6956  001BE2  6E0E               	movwf	(i2atoi@neg+1)^0,c
  6957  001BE4  0E00               	movlw	0
  6958  001BE6  6E0D               	movwf	i2atoi@neg^0,c
  6959  001BE8  EFF8  F00D         	goto	i2l2572
  6960  001BEC                     i2l2568:
  6961  001BEC  4A07               	infsnz	i2atoi@s^0,f,c
  6962  001BEE  2A08               	incf	(i2atoi@s+1)^0,f,c
  6963  001BF0                     i2l2572:
  6964  001BF0  C007  FFF6         	movff	i2atoi@s,tblptrl
  6965  001BF4  C008  FFF7         	movff	i2atoi@s+1,tblptrh
  6966  001BF8                     	if	0	;tblptru may be non-zero
  6967  001BF8                     	endif
  6968  001BF8                     	if	0	;tblptru may be non-zero
  6969  001BF8                     	endif
  6970  001BF8  0008               	tblrd		*
  6971  001BFA  50F5               	movf	tablat,w,c
  6972  001BFC  0A20               	xorlw	32
  6973  001BFE  B4D8               	btfsc	status,2,c
  6974  001C00  EF04  F00E         	goto	i2u218_41
  6975  001C04  EF06  F00E         	goto	i2u218_40
  6976  001C08                     i2u218_41:
  6977  001C08  EFF6  F00D         	goto	i2l2568
  6978  001C0C                     i2u218_40:
  6979  001C0C  0EF7               	movlw	247
  6980  001C0E  6E09               	movwf	??i2_atoi^0,c
  6981  001C10  0EFF               	movlw	255
  6982  001C12  6E0A               	movwf	(??i2_atoi+1)^0,c
  6983  001C14  C007  FFF6         	movff	i2atoi@s,tblptrl
  6984  001C18  C008  FFF7         	movff	i2atoi@s+1,tblptrh
  6985  001C1C                     	if	0	;tblptru may be non-zero
  6986  001C1C                     	endif
  6987  001C1C                     	if	0	;tblptru may be non-zero
  6988  001C1C                     	endif
  6989  001C1C  0008               	tblrd		*
  6990  001C1E  50F5               	movf	tablat,w,c
  6991  001C20  6E0B               	movwf	(??i2_atoi+2)^0,c
  6992  001C22  6A0C               	clrf	(??i2_atoi+3)^0,c
  6993  001C24  5009               	movf	??i2_atoi^0,w,c
  6994  001C26  260B               	addwf	(??i2_atoi+2)^0,f,c
  6995  001C28  500A               	movf	(??i2_atoi+1)^0,w,c
  6996  001C2A  220C               	addwfc	(??i2_atoi+3)^0,f,c
  6997  001C2C  500C               	movf	(??i2_atoi+3)^0,w,c
  6998  001C2E  E109               	bnz	i2u219_40
  6999  001C30  0E05               	movlw	5
  7000  001C32  5C0B               	subwf	(??i2_atoi+2)^0,w,c
  7001  001C34  A0D8               	btfss	status,0,c
  7002  001C36  EF1F  F00E         	goto	i2u219_41
  7003  001C3A  EF21  F00E         	goto	i2u219_40
  7004  001C3E                     i2u219_41:
  7005  001C3E  EFF6  F00D         	goto	i2l2568
  7006  001C42                     i2u219_40:
  7007  001C42  EF2B  F00E         	goto	i2l2580
  7008  001C46                     i2l2576:
  7009  001C46  0E00               	movlw	0
  7010  001C48  6E0E               	movwf	(i2atoi@neg+1)^0,c
  7011  001C4A  0E01               	movlw	1
  7012  001C4C  6E0D               	movwf	i2atoi@neg^0,c
  7013  001C4E                     i2l2578:
  7014  001C4E  4A07               	infsnz	i2atoi@s^0,f,c
  7015  001C50  2A08               	incf	(i2atoi@s+1)^0,f,c
  7016  001C52  EF60  F00E         	goto	i2l2588
  7017  001C56                     i2l2580:
  7018  001C56  C007  FFF6         	movff	i2atoi@s,tblptrl
  7019  001C5A  C008  FFF7         	movff	i2atoi@s+1,tblptrh
  7020  001C5E                     	if	0	;tblptru may be non-zero
  7021  001C5E                     	endif
  7022  001C5E                     	if	0	;tblptru may be non-zero
  7023  001C5E                     	endif
  7024  001C5E  0008               	tblrd		*
  7025  001C60  50F5               	movf	tablat,w,c
  7026  001C62  6E09               	movwf	??i2_atoi^0,c
  7027  001C64  6A0A               	clrf	(??i2_atoi+1)^0,c
  7028                           
  7029                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7030                           ; Switch size 1, requested type "simple"
  7031                           ; Number of cases is 1, Range of values is 0 to 0
  7032                           ; switch strategies available:
  7033                           ; Name         Instructions Cycles
  7034                           ; simple_byte            4     3 (average)
  7035                           ;	Chosen strategy is simple_byte
  7036  001C66  500A               	movf	(??i2_atoi+1)^0,w,c
  7037  001C68  0A00               	xorlw	0	; case 0
  7038  001C6A  B4D8               	btfsc	status,2,c
  7039  001C6C  EF3A  F00E         	goto	i2l3708
  7040  001C70  EF60  F00E         	goto	i2l2588
  7041  001C74                     i2l3708:
  7042                           
  7043                           ; Switch size 1, requested type "simple"
  7044                           ; Number of cases is 2, Range of values is 43 to 45
  7045                           ; switch strategies available:
  7046                           ; Name         Instructions Cycles
  7047                           ; simple_byte            7     4 (average)
  7048                           ;	Chosen strategy is simple_byte
  7049  001C74  5009               	movf	??i2_atoi^0,w,c
  7050  001C76  0A2B               	xorlw	43	; case 43
  7051  001C78  B4D8               	btfsc	status,2,c
  7052  001C7A  EF27  F00E         	goto	i2l2578
  7053  001C7E  0A06               	xorlw	6	; case 45
  7054  001C80  B4D8               	btfsc	status,2,c
  7055  001C82  EF23  F00E         	goto	i2l2576
  7056  001C86  EF60  F00E         	goto	i2l2588
  7057  001C8A                     i2l2582:
  7058  001C8A  C00F  F001         	movff	i2atoi@n,i2___wmul@multiplier
  7059  001C8E  C010  F002         	movff	i2atoi@n+1,i2___wmul@multiplier+1
  7060  001C92  0E00               	movlw	0
  7061  001C94  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  7062  001C96  0E0A               	movlw	10
  7063  001C98  6E03               	movwf	i2___wmul@multiplicand^0,c
  7064  001C9A  EC5F  F014         	call	i2___wmul	;wreg free
  7065  001C9E  C007  FFF6         	movff	i2atoi@s,tblptrl
  7066  001CA2  C008  FFF7         	movff	i2atoi@s+1,tblptrh
  7067  001CA6                     	if	0	;tblptru may be non-zero
  7068  001CA6                     	endif
  7069  001CA6                     	if	0	;tblptru may be non-zero
  7070  001CA6                     	endif
  7071  001CA6  0008               	tblrd		*
  7072  001CA8  50F5               	movf	tablat,w,c
  7073  001CAA  5E01               	subwf	?i2___wmul^0,f,c
  7074  001CAC  0E00               	movlw	0
  7075  001CAE  5A02               	subwfb	(?i2___wmul+1)^0,f,c
  7076  001CB0  0E30               	movlw	48
  7077  001CB2  2401               	addwf	?i2___wmul^0,w,c
  7078  001CB4  6E0F               	movwf	i2atoi@n^0,c
  7079  001CB6  0E00               	movlw	0
  7080  001CB8  2002               	addwfc	(?i2___wmul+1)^0,w,c
  7081  001CBA  6E10               	movwf	(i2atoi@n+1)^0,c
  7082  001CBC  EF27  F00E         	goto	i2l2578
  7083  001CC0                     i2l2588:
  7084  001CC0  0ED0               	movlw	208
  7085  001CC2  6E09               	movwf	??i2_atoi^0,c
  7086  001CC4  0EFF               	movlw	255
  7087  001CC6  6E0A               	movwf	(??i2_atoi+1)^0,c
  7088  001CC8  C007  FFF6         	movff	i2atoi@s,tblptrl
  7089  001CCC  C008  FFF7         	movff	i2atoi@s+1,tblptrh
  7090  001CD0                     	if	0	;tblptru may be non-zero
  7091  001CD0                     	endif
  7092  001CD0                     	if	0	;tblptru may be non-zero
  7093  001CD0                     	endif
  7094  001CD0  0008               	tblrd		*
  7095  001CD2  50F5               	movf	tablat,w,c
  7096  001CD4  6E0B               	movwf	(??i2_atoi+2)^0,c
  7097  001CD6  6A0C               	clrf	(??i2_atoi+3)^0,c
  7098  001CD8  5009               	movf	??i2_atoi^0,w,c
  7099  001CDA  260B               	addwf	(??i2_atoi+2)^0,f,c
  7100  001CDC  500A               	movf	(??i2_atoi+1)^0,w,c
  7101  001CDE  220C               	addwfc	(??i2_atoi+3)^0,f,c
  7102  001CE0  500C               	movf	(??i2_atoi+3)^0,w,c
  7103  001CE2  E109               	bnz	i2u220_40
  7104  001CE4  0E0A               	movlw	10
  7105  001CE6  5C0B               	subwf	(??i2_atoi+2)^0,w,c
  7106  001CE8  A0D8               	btfss	status,0,c
  7107  001CEA  EF79  F00E         	goto	i2u220_41
  7108  001CEE  EF7B  F00E         	goto	i2u220_40
  7109  001CF2                     i2u220_41:
  7110  001CF2  EF45  F00E         	goto	i2l2582
  7111  001CF6                     i2u220_40:
  7112  001CF6  500D               	movf	i2atoi@neg^0,w,c
  7113  001CF8  100E               	iorwf	(i2atoi@neg+1)^0,w,c
  7114  001CFA  A4D8               	btfss	status,2,c
  7115  001CFC  EF82  F00E         	goto	i2u221_41
  7116  001D00  EF84  F00E         	goto	i2u221_40
  7117  001D04                     i2u221_41:
  7118  001D04  EF92  F00E         	goto	i2l938
  7119  001D08                     i2u221_40:
  7120  001D08  C00F  F009         	movff	i2atoi@n,??i2_atoi
  7121  001D0C  C010  F00A         	movff	i2atoi@n+1,??i2_atoi+1
  7122  001D10  1E09               	comf	??i2_atoi^0,f,c
  7123  001D12  1E0A               	comf	(??i2_atoi+1)^0,f,c
  7124  001D14  4A09               	infsnz	??i2_atoi^0,f,c
  7125  001D16  2A0A               	incf	(??i2_atoi+1)^0,f,c
  7126  001D18  C009  F007         	movff	??i2_atoi,?i2_atoi
  7127  001D1C  C00A  F008         	movff	??i2_atoi+1,?i2_atoi+1
  7128  001D20  EF96  F00E         	goto	i2l941
  7129  001D24                     i2l938:
  7130  001D24  C00F  F007         	movff	i2atoi@n,?i2_atoi
  7131  001D28  C010  F008         	movff	i2atoi@n+1,?i2_atoi+1
  7132  001D2C                     i2l941:
  7133  001D2C  0012               	return		;funcret
  7134  001D2E                     __end_ofi2_atoi:
  7135                           	callstack 0
  7136                           
  7137 ;; *************** function i2_isspace *****************
  7138 ;; Defined at:
  7139 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isspace.c"
  7140 ;; Parameters:    Size  Location     Type
  7141 ;;  c               2    0[COMRAM] int 
  7142 ;; Auto vars:     Size  Location     Type
  7143 ;;		None
  7144 ;; Return value:  Size  Location     Type
  7145 ;;                  2    0[COMRAM] int 
  7146 ;; Registers used:
  7147 ;;		wreg, status,2, status,0
  7148 ;; Tracked objects:
  7149 ;;		On entry : 0/0
  7150 ;;		On exit  : 0/0
  7151 ;;		Unchanged: 0/0
  7152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7153 ;;      Params:         2       0       0       0       0       0       0       0       0
  7154 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7155 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7156 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7157 ;;Total ram usage:        6 bytes
  7158 ;; Hardware stack levels used: 1
  7159 ;; This function calls:
  7160 ;;		Nothing
  7161 ;; This function is called by:
  7162 ;;		i2_atoi
  7163 ;; This function uses a non-reentrant model
  7164 ;;
  7165                           
  7166                           	psect	text41
  7167  0025E8                     __ptext41:
  7168                           	callstack 0
  7169  0025E8                     i2_isspace:
  7170                           	callstack 17
  7171  0025E8  0E20               	movlw	32
  7172  0025EA  1801               	xorwf	i2isspace@c^0,w,c
  7173  0025EC  1002               	iorwf	(i2isspace@c+1)^0,w,c
  7174  0025EE  B4D8               	btfsc	status,2,c
  7175  0025F0  EFFC  F012         	goto	i2u182_41
  7176  0025F4  EFFE  F012         	goto	i2u182_40
  7177  0025F8                     i2u182_41:
  7178  0025F8  EF15  F013         	goto	i2l952
  7179  0025FC                     i2u182_40:
  7180  0025FC  0EF7               	movlw	247
  7181  0025FE  6E03               	movwf	??i2_isspace^0,c
  7182  002600  0EFF               	movlw	255
  7183  002602  6E04               	movwf	(??i2_isspace+1)^0,c
  7184  002604  C001  F005         	movff	i2isspace@c,??i2_isspace+2
  7185  002608  C002  F006         	movff	i2isspace@c+1,??i2_isspace+3
  7186  00260C  5003               	movf	??i2_isspace^0,w,c
  7187  00260E  2605               	addwf	(??i2_isspace+2)^0,f,c
  7188  002610  5004               	movf	(??i2_isspace+1)^0,w,c
  7189  002612  2206               	addwfc	(??i2_isspace+3)^0,f,c
  7190  002614  5006               	movf	(??i2_isspace+3)^0,w,c
  7191  002616  E109               	bnz	i2u183_40
  7192  002618  0E05               	movlw	5
  7193  00261A  5C05               	subwf	(??i2_isspace+2)^0,w,c
  7194  00261C  A0D8               	btfss	status,0,c
  7195  00261E  EF13  F013         	goto	i2u183_41
  7196  002622  EF15  F013         	goto	i2u183_40
  7197  002626                     i2u183_41:
  7198  002626  EF15  F013         	goto	i2l952
  7199  00262A                     i2u183_40:
  7200  00262A                     i2l952:
  7201  00262A  0012               	return		;funcret
  7202  00262C                     __end_ofi2_isspace:
  7203                           	callstack 0
  7204                           
  7205 ;; *************** function i2_isdigit *****************
  7206 ;; Defined at:
  7207 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isdigit.c"
  7208 ;; Parameters:    Size  Location     Type
  7209 ;;  c               2    0[COMRAM] int 
  7210 ;; Auto vars:     Size  Location     Type
  7211 ;;		None
  7212 ;; Return value:  Size  Location     Type
  7213 ;;                  2    0[COMRAM] int 
  7214 ;; Registers used:
  7215 ;;		None
  7216 ;; Tracked objects:
  7217 ;;		On entry : 0/0
  7218 ;;		On exit  : 0/0
  7219 ;;		Unchanged: 0/0
  7220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7221 ;;      Params:         2       0       0       0       0       0       0       0       0
  7222 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7223 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7224 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7225 ;;Total ram usage:        2 bytes
  7226 ;; Hardware stack levels used: 1
  7227 ;; This function calls:
  7228 ;;		Nothing
  7229 ;; This function is called by:
  7230 ;;		i2_vfpfcnvrt
  7231 ;;		i2_atoi
  7232 ;; This function uses a non-reentrant model
  7233 ;;
  7234                           
  7235                           	psect	text42
  7236  00293C                     __ptext42:
  7237                           	callstack 0
  7238  00293C                     i2_isdigit:
  7239                           	callstack 18
  7240  00293C  0012               	return		;funcret
  7241  00293E                     __end_ofi2_isdigit:
  7242                           	callstack 0
  7243                           
  7244 ;; *************** function i2___wmul *****************
  7245 ;; Defined at:
  7246 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
  7247 ;; Parameters:    Size  Location     Type
  7248 ;;  multiplier      2    0[COMRAM] unsigned int 
  7249 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7250 ;; Auto vars:     Size  Location     Type
  7251 ;;  product         2    4[COMRAM] unsigned int 
  7252 ;; Return value:  Size  Location     Type
  7253 ;;                  2    0[COMRAM] unsigned int 
  7254 ;; Registers used:
  7255 ;;		wreg, status,2, status,0, prodl, prodh
  7256 ;; Tracked objects:
  7257 ;;		On entry : 0/0
  7258 ;;		On exit  : 0/0
  7259 ;;		Unchanged: 0/0
  7260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7261 ;;      Params:         4       0       0       0       0       0       0       0       0
  7262 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7263 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7264 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7265 ;;Total ram usage:        6 bytes
  7266 ;; Hardware stack levels used: 1
  7267 ;; This function calls:
  7268 ;;		Nothing
  7269 ;; This function is called by:
  7270 ;;		i2_atoi
  7271 ;; This function uses a non-reentrant model
  7272 ;;
  7273                           
  7274                           	psect	text43
  7275  0028BE                     __ptext43:
  7276                           	callstack 0
  7277  0028BE                     i2___wmul:
  7278                           	callstack 17
  7279  0028BE  5001               	movf	i2___wmul@multiplier^0,w,c
  7280  0028C0  0203               	mulwf	i2___wmul@multiplicand^0,c
  7281  0028C2  CFF3 F005          	movff	prodl,i2___wmul@product
  7282  0028C6  CFF4 F006          	movff	prodh,i2___wmul@product+1
  7283  0028CA  5001               	movf	i2___wmul@multiplier^0,w,c
  7284  0028CC  0204               	mulwf	(i2___wmul@multiplicand+1)^0,c
  7285  0028CE  50F3               	movf	243,w,c
  7286  0028D0  2606               	addwf	(i2___wmul@product+1)^0,f,c
  7287  0028D2  5002               	movf	(i2___wmul@multiplier+1)^0,w,c
  7288  0028D4  0203               	mulwf	i2___wmul@multiplicand^0,c
  7289  0028D6  50F3               	movf	243,w,c
  7290  0028D8  2606               	addwf	(i2___wmul@product+1)^0,f,c
  7291  0028DA  C005  F001         	movff	i2___wmul@product,?i2___wmul
  7292  0028DE  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
  7293  0028E2  0012               	return		;funcret
  7294  0028E4                     __end_ofi2___wmul:
  7295                           	callstack 0
  7296                           
  7297 ;; *************** function i2_Lcd_Write_String *****************
  7298 ;; Defined at:
  7299 ;;		line 97 in file "lcd.c"
  7300 ;; Parameters:    Size  Location     Type
  7301 ;;  a               2    4[COMRAM] PTR unsigned char 
  7302 ;;		 -> str_personas(16), str_autos(16), 
  7303 ;; Auto vars:     Size  Location     Type
  7304 ;;  i               2    6[COMRAM] int 
  7305 ;; Return value:  Size  Location     Type
  7306 ;;                  1    wreg      void 
  7307 ;; Registers used:
  7308 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7309 ;; Tracked objects:
  7310 ;;		On entry : 0/0
  7311 ;;		On exit  : 0/0
  7312 ;;		Unchanged: 0/0
  7313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7314 ;;      Params:         2       0       0       0       0       0       0       0       0
  7315 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7316 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7317 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7318 ;;Total ram usage:        4 bytes
  7319 ;; Hardware stack levels used: 1
  7320 ;; Hardware stack levels required when called: 2
  7321 ;; This function calls:
  7322 ;;		i2_Lcd_Write_Char
  7323 ;; This function is called by:
  7324 ;;		_ISR_INT0
  7325 ;; This function uses a non-reentrant model
  7326 ;;
  7327                           
  7328                           	psect	text44
  7329  0026AE                     __ptext44:
  7330                           	callstack 0
  7331  0026AE                     i2_Lcd_Write_String:
  7332                           	callstack 19
  7333  0026AE                     
  7334                           ;lcd.c: 97: void Lcd_Write_String(unsigned char *a);lcd.c: 98: {;lcd.c: 99:  int i;;lcd.
      +                          c: 100:  for(i=0;a[i]!='\0';i++)
  7335  0026AE  0E00               	movlw	0
  7336  0026B0  6E08               	movwf	(i2Lcd_Write_String@i+1)^0,c
  7337  0026B2  0E00               	movlw	0
  7338  0026B4  6E07               	movwf	i2Lcd_Write_String@i^0,c
  7339  0026B6  EF68  F013         	goto	i2l3024
  7340  0026BA                     i2l3020:
  7341                           
  7342                           ;lcd.c: 101:     Lcd_Write_Char(a[i]);
  7343  0026BA  5007               	movf	i2Lcd_Write_String@i^0,w,c
  7344  0026BC  2405               	addwf	i2Lcd_Write_String@a^0,w,c
  7345  0026BE  6ED9               	movwf	fsr2l,c
  7346  0026C0  5008               	movf	(i2Lcd_Write_String@i+1)^0,w,c
  7347  0026C2  2006               	addwfc	(i2Lcd_Write_String@a+1)^0,w,c
  7348  0026C4  6EDA               	movwf	fsr2h,c
  7349  0026C6  50DF               	movf	indf2,w,c
  7350  0026C8  ECEE  F013         	call	i2_Lcd_Write_Char
  7351  0026CC  4A07               	infsnz	i2Lcd_Write_String@i^0,f,c
  7352  0026CE  2A08               	incf	(i2Lcd_Write_String@i+1)^0,f,c
  7353  0026D0                     i2l3024:
  7354  0026D0  5007               	movf	i2Lcd_Write_String@i^0,w,c
  7355  0026D2  2405               	addwf	i2Lcd_Write_String@a^0,w,c
  7356  0026D4  6ED9               	movwf	fsr2l,c
  7357  0026D6  5008               	movf	(i2Lcd_Write_String@i+1)^0,w,c
  7358  0026D8  2006               	addwfc	(i2Lcd_Write_String@a+1)^0,w,c
  7359  0026DA  6EDA               	movwf	fsr2h,c
  7360  0026DC  50DF               	movf	indf2,w,c
  7361  0026DE  A4D8               	btfss	status,2,c
  7362  0026E0  EF74  F013         	goto	i2u255_41
  7363  0026E4  EF76  F013         	goto	i2u255_40
  7364  0026E8                     i2u255_41:
  7365  0026E8  EF5D  F013         	goto	i2l3020
  7366  0026EC                     i2u255_40:
  7367  0026EC  0012               	return		;funcret
  7368  0026EE                     __end_ofi2_Lcd_Write_String:
  7369                           	callstack 0
  7370                           
  7371 ;; *************** function i2_Lcd_Write_Char *****************
  7372 ;; Defined at:
  7373 ;;		line 81 in file "lcd.c"
  7374 ;; Parameters:    Size  Location     Type
  7375 ;;  a               1    wreg     unsigned char 
  7376 ;; Auto vars:     Size  Location     Type
  7377 ;;  a               1    3[COMRAM] unsigned char 
  7378 ;;  y               1    2[COMRAM] unsigned char 
  7379 ;;  temp            1    1[COMRAM] unsigned char 
  7380 ;; Return value:  Size  Location     Type
  7381 ;;                  1    wreg      void 
  7382 ;; Registers used:
  7383 ;;		wreg, status,2, status,0, cstack
  7384 ;; Tracked objects:
  7385 ;;		On entry : 0/0
  7386 ;;		On exit  : 0/0
  7387 ;;		Unchanged: 0/0
  7388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7389 ;;      Params:         0       0       0       0       0       0       0       0       0
  7390 ;;      Locals:         3       0       0       0       0       0       0       0       0
  7391 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7392 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7393 ;;Total ram usage:        3 bytes
  7394 ;; Hardware stack levels used: 1
  7395 ;; Hardware stack levels required when called: 1
  7396 ;; This function calls:
  7397 ;;		i2_Lcd_Port
  7398 ;; This function is called by:
  7399 ;;		i2_Lcd_Write_String
  7400 ;; This function uses a non-reentrant model
  7401 ;;
  7402                           
  7403                           	psect	text45
  7404  0027DC                     __ptext45:
  7405                           	callstack 0
  7406  0027DC                     i2_Lcd_Write_Char:
  7407                           	callstack 19
  7408                           
  7409                           ;incstack = 0
  7410                           ;i2Lcd_Write_Char@a stored from wreg
  7411  0027DC  6E04               	movwf	i2Lcd_Write_Char@a^0,c
  7412  0027DE                     
  7413                           ;lcd.c: 81: void Lcd_Write_Char(unsigned char a);lcd.c: 82: {;lcd.c: 83:    char temp,y;
      +                          ;lcd.c: 84:    temp = a&0x0F;
  7414  0027DE  5004               	movf	i2Lcd_Write_Char@a^0,w,c
  7415  0027E0  0B0F               	andlw	15
  7416  0027E2  6E02               	movwf	i2Lcd_Write_Char@temp^0,c
  7417                           
  7418                           ;lcd.c: 85:    y = a&0xF0;
  7419  0027E4  5004               	movf	i2Lcd_Write_Char@a^0,w,c
  7420  0027E6  0BF0               	andlw	240
  7421  0027E8  6E03               	movwf	i2Lcd_Write_Char@y^0,c
  7422  0027EA                     
  7423                           ;lcd.c: 86:    LATDbits.LATD2 = 1;
  7424  0027EA  848C               	bsf	140,2,c	;volatile
  7425  0027EC                     
  7426                           ;lcd.c: 87:    Lcd_Port(y>>4);
  7427  0027EC  3803               	swapf	i2Lcd_Write_Char@y^0,w,c
  7428  0027EE  0B0F               	andlw	15
  7429  0027F0  ECE2  F011         	call	i2_Lcd_Port
  7430  0027F4                     
  7431                           ;lcd.c: 88:    LATDbits.LATD3 = 1;
  7432  0027F4  868C               	bsf	140,3,c	;volatile
  7433  0027F6                     
  7434                           ;lcd.c: 89:    _delay((unsigned long)((40)*(16000000UL/4000000.0)));
  7435  0027F6  0E35               	movlw	53
  7436  0027F8                     i2u326_47:
  7437  0027F8  2EE8               	decfsz	wreg,f,c
  7438  0027FA  D7FE               	bra	i2u326_47
  7439  0027FC  F000               	nop	
  7440  0027FE                     
  7441                           ;lcd.c: 90:    LATDbits.LATD3 = 0;
  7442  0027FE  968C               	bcf	140,3,c	;volatile
  7443  002800                     
  7444                           ;lcd.c: 91:    Lcd_Port(temp);
  7445  002800  5002               	movf	i2Lcd_Write_Char@temp^0,w,c
  7446  002802  ECE2  F011         	call	i2_Lcd_Port
  7447  002806                     
  7448                           ;lcd.c: 92:    LATDbits.LATD3 = 1;
  7449  002806  868C               	bsf	140,3,c	;volatile
  7450  002808                     
  7451                           ;lcd.c: 93:    _delay((unsigned long)((40)*(16000000UL/4000000.0)));
  7452  002808  0E35               	movlw	53
  7453  00280A                     i2u327_47:
  7454  00280A  2EE8               	decfsz	wreg,f,c
  7455  00280C  D7FE               	bra	i2u327_47
  7456  00280E  F000               	nop	
  7457  002810                     
  7458                           ;lcd.c: 94:    LATDbits.LATD3 = 0;
  7459  002810  968C               	bcf	140,3,c	;volatile
  7460  002812  0012               	return		;funcret
  7461  002814                     __end_ofi2_Lcd_Write_Char:
  7462                           	callstack 0
  7463                           
  7464 ;; *************** function i2_Lcd_Set_Cursor *****************
  7465 ;; Defined at:
  7466 ;;		line 41 in file "lcd.c"
  7467 ;; Parameters:    Size  Location     Type
  7468 ;;  a               1    wreg     unsigned char 
  7469 ;;  b               1    3[COMRAM] unsigned char 
  7470 ;; Auto vars:     Size  Location     Type
  7471 ;;  a               1    4[COMRAM] unsigned char 
  7472 ;;  temp            1    7[COMRAM] unsigned char 
  7473 ;;  y               1    6[COMRAM] unsigned char 
  7474 ;;  z               1    5[COMRAM] unsigned char 
  7475 ;; Return value:  Size  Location     Type
  7476 ;;                  1    wreg      void 
  7477 ;; Registers used:
  7478 ;;		wreg, status,2, status,0, cstack
  7479 ;; Tracked objects:
  7480 ;;		On entry : 0/0
  7481 ;;		On exit  : 0/0
  7482 ;;		Unchanged: 0/0
  7483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7484 ;;      Params:         1       0       0       0       0       0       0       0       0
  7485 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7486 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7487 ;;      Totals:         5       0       0       0       0       0       0       0       0
  7488 ;;Total ram usage:        5 bytes
  7489 ;; Hardware stack levels used: 1
  7490 ;; Hardware stack levels required when called: 2
  7491 ;; This function calls:
  7492 ;;		i2_Lcd_Cmd
  7493 ;; This function is called by:
  7494 ;;		_ISR_INT0
  7495 ;; This function uses a non-reentrant model
  7496 ;;
  7497                           
  7498                           	psect	text46
  7499  00223A                     __ptext46:
  7500                           	callstack 0
  7501  00223A                     i2_Lcd_Set_Cursor:
  7502                           	callstack 19
  7503                           
  7504                           ;incstack = 0
  7505                           ;i2Lcd_Set_Cursor@a stored from wreg
  7506  00223A  6E05               	movwf	i2Lcd_Set_Cursor@a^0,c
  7507  00223C                     
  7508                           ;lcd.c: 41: void Lcd_Set_Cursor(unsigned char a, unsigned char b);lcd.c: 42: {;lcd.c: 43
      +                          :  char temp,z,y;;lcd.c: 44:  if(a == 1)
  7509  00223C  0405               	decf	i2Lcd_Set_Cursor@a^0,w,c
  7510  00223E  A4D8               	btfss	status,2,c
  7511  002240  EF24  F011         	goto	i2u253_41
  7512  002244  EF26  F011         	goto	i2u253_40
  7513  002248                     i2u253_41:
  7514  002248  EF37  F011         	goto	i2l3010
  7515  00224C                     i2u253_40:
  7516  00224C                     
  7517                           ;lcd.c: 45:  {;lcd.c: 46:    temp = 0x80 + b - 1;
  7518  00224C  5004               	movf	i2Lcd_Set_Cursor@b^0,w,c
  7519  00224E  0F7F               	addlw	127
  7520  002250  6E08               	movwf	i2Lcd_Set_Cursor@temp^0,c
  7521                           
  7522                           ;lcd.c: 47:   z = temp>>4;
  7523  002252  3808               	swapf	i2Lcd_Set_Cursor@temp^0,w,c
  7524  002254  0B0F               	andlw	15
  7525  002256  6E06               	movwf	i2Lcd_Set_Cursor@z^0,c
  7526                           
  7527                           ;lcd.c: 48:   y = temp & 0x0F;
  7528  002258  5008               	movf	i2Lcd_Set_Cursor@temp^0,w,c
  7529  00225A  0B0F               	andlw	15
  7530  00225C  6E07               	movwf	i2Lcd_Set_Cursor@y^0,c
  7531  00225E                     
  7532                           ;lcd.c: 49:   Lcd_Cmd(z);
  7533  00225E  5006               	movf	i2Lcd_Set_Cursor@z^0,w,c
  7534  002260  EC72  F014         	call	i2_Lcd_Cmd
  7535  002264                     
  7536                           ;lcd.c: 50:   Lcd_Cmd(y);
  7537  002264  5007               	movf	i2Lcd_Set_Cursor@y^0,w,c
  7538  002266  EC72  F014         	call	i2_Lcd_Cmd
  7539                           
  7540                           ;lcd.c: 51:  }
  7541  00226A  EF4F  F011         	goto	i2l27
  7542  00226E                     i2l3010:
  7543  00226E  0E02               	movlw	2
  7544  002270  1805               	xorwf	i2Lcd_Set_Cursor@a^0,w,c
  7545  002272  A4D8               	btfss	status,2,c
  7546  002274  EF3E  F011         	goto	i2u254_41
  7547  002278  EF40  F011         	goto	i2u254_40
  7548  00227C                     i2u254_41:
  7549  00227C  EF4F  F011         	goto	i2l27
  7550  002280                     i2u254_40:
  7551  002280                     
  7552                           ;lcd.c: 53:  {;lcd.c: 54:   temp = 0xC0 + b - 1;
  7553  002280  5004               	movf	i2Lcd_Set_Cursor@b^0,w,c
  7554  002282  0FBF               	addlw	191
  7555  002284  6E08               	movwf	i2Lcd_Set_Cursor@temp^0,c
  7556                           
  7557                           ;lcd.c: 55:   z = temp>>4;
  7558  002286  3808               	swapf	i2Lcd_Set_Cursor@temp^0,w,c
  7559  002288  0B0F               	andlw	15
  7560  00228A  6E06               	movwf	i2Lcd_Set_Cursor@z^0,c
  7561                           
  7562                           ;lcd.c: 56:   y = temp & 0x0F;
  7563  00228C  5008               	movf	i2Lcd_Set_Cursor@temp^0,w,c
  7564  00228E  0B0F               	andlw	15
  7565  002290  6E07               	movwf	i2Lcd_Set_Cursor@y^0,c
  7566  002292                     
  7567                           ;lcd.c: 57:   Lcd_Cmd(z);
  7568  002292  5006               	movf	i2Lcd_Set_Cursor@z^0,w,c
  7569  002294  EC72  F014         	call	i2_Lcd_Cmd
  7570  002298                     
  7571                           ;lcd.c: 58:   Lcd_Cmd(y);
  7572  002298  5007               	movf	i2Lcd_Set_Cursor@y^0,w,c
  7573  00229A  EC72  F014         	call	i2_Lcd_Cmd
  7574  00229E                     i2l27:
  7575  00229E  0012               	return		;funcret
  7576  0022A0                     __end_ofi2_Lcd_Set_Cursor:
  7577                           	callstack 0
  7578                           
  7579 ;; *************** function i2_Lcd_Cmd *****************
  7580 ;; Defined at:
  7581 ;;		line 26 in file "lcd.c"
  7582 ;; Parameters:    Size  Location     Type
  7583 ;;  a               1    wreg     unsigned char 
  7584 ;; Auto vars:     Size  Location     Type
  7585 ;;  a               1    2[COMRAM] unsigned char 
  7586 ;; Return value:  Size  Location     Type
  7587 ;;                  1    wreg      void 
  7588 ;; Registers used:
  7589 ;;		wreg, status,2, cstack
  7590 ;; Tracked objects:
  7591 ;;		On entry : 0/0
  7592 ;;		On exit  : 0/0
  7593 ;;		Unchanged: 0/0
  7594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7595 ;;      Params:         0       0       0       0       0       0       0       0       0
  7596 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7597 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7598 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7599 ;;Total ram usage:        2 bytes
  7600 ;; Hardware stack levels used: 1
  7601 ;; Hardware stack levels required when called: 1
  7602 ;; This function calls:
  7603 ;;		i2_Lcd_Port
  7604 ;; This function is called by:
  7605 ;;		i2_Lcd_Set_Cursor
  7606 ;; This function uses a non-reentrant model
  7607 ;;
  7608                           
  7609                           	psect	text47
  7610  0028E4                     __ptext47:
  7611                           	callstack 0
  7612  0028E4                     i2_Lcd_Cmd:
  7613                           	callstack 19
  7614                           
  7615                           ;incstack = 0
  7616                           ;i2Lcd_Cmd@a stored from wreg
  7617  0028E4  6E03               	movwf	i2Lcd_Cmd@a^0,c
  7618  0028E6                     
  7619                           ;lcd.c: 26: void Lcd_Cmd(unsigned char a);lcd.c: 27: {;lcd.c: 28:  LATDbits.LATD2 = 0;
  7620  0028E6  948C               	bcf	140,2,c	;volatile
  7621  0028E8                     
  7622                           ;lcd.c: 29:  Lcd_Port(a);
  7623  0028E8  5003               	movf	i2Lcd_Cmd@a^0,w,c
  7624  0028EA  ECE2  F011         	call	i2_Lcd_Port
  7625  0028EE                     
  7626                           ;lcd.c: 30:  LATDbits.LATD3 = 1;
  7627  0028EE  868C               	bsf	140,3,c	;volatile
  7628  0028F0                     
  7629                           ;lcd.c: 31:         _delay((unsigned long)((4)*(16000000UL/4000.0)));
  7630  0028F0  0E15               	movlw	21
  7631  0028F2  6E02               	movwf	??i2_Lcd_Cmd^0,c
  7632  0028F4  0EC6               	movlw	198
  7633  0028F6                     i2u328_47:
  7634  0028F6  2EE8               	decfsz	wreg,f,c
  7635  0028F8  D7FE               	bra	i2u328_47
  7636  0028FA  2E02               	decfsz	??i2_Lcd_Cmd^0,f,c
  7637  0028FC  D7FC               	bra	i2u328_47
  7638  0028FE  D000               	nop2	
  7639  002900                     
  7640                           ;lcd.c: 32:         LATDbits.LATD3 = 0;
  7641  002900  968C               	bcf	140,3,c	;volatile
  7642  002902  0012               	return		;funcret
  7643  002904                     __end_ofi2_Lcd_Cmd:
  7644                           	callstack 0
  7645                           
  7646 ;; *************** function i2_Lcd_Port *****************
  7647 ;; Defined at:
  7648 ;;		line 3 in file "lcd.c"
  7649 ;; Parameters:    Size  Location     Type
  7650 ;;  a               1    wreg     unsigned char 
  7651 ;; Auto vars:     Size  Location     Type
  7652 ;;  a               1    0[COMRAM] unsigned char 
  7653 ;; Return value:  Size  Location     Type
  7654 ;;                  1    wreg      void 
  7655 ;; Registers used:
  7656 ;;		wreg
  7657 ;; Tracked objects:
  7658 ;;		On entry : 0/0
  7659 ;;		On exit  : 0/0
  7660 ;;		Unchanged: 0/0
  7661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7662 ;;      Params:         0       0       0       0       0       0       0       0       0
  7663 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7664 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7665 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7666 ;;Total ram usage:        1 bytes
  7667 ;; Hardware stack levels used: 1
  7668 ;; This function calls:
  7669 ;;		Nothing
  7670 ;; This function is called by:
  7671 ;;		i2_Lcd_Cmd
  7672 ;;		i2_Lcd_Write_Char
  7673 ;; This function uses a non-reentrant model
  7674 ;;
  7675                           
  7676                           	psect	text48
  7677  0023C4                     __ptext48:
  7678                           	callstack 0
  7679  0023C4                     i2_Lcd_Port:
  7680                           	callstack 19
  7681                           
  7682                           ;incstack = 0
  7683                           ;i2Lcd_Port@a stored from wreg
  7684  0023C4  6E01               	movwf	i2Lcd_Port@a^0,c
  7685  0023C6                     
  7686                           ;lcd.c: 3: void Lcd_Port(unsigned char a);lcd.c: 4: {;lcd.c: 5:  if(a & 1)
  7687  0023C6  A001               	btfss	i2Lcd_Port@a^0,0,c
  7688  0023C8  EFE8  F011         	goto	i2u235_41
  7689  0023CC  EFEA  F011         	goto	i2u235_40
  7690  0023D0                     i2u235_41:
  7691  0023D0  EFED  F011         	goto	i2l7
  7692  0023D4                     i2u235_40:
  7693  0023D4                     
  7694                           ;lcd.c: 6:   LATDbits.LATD4 = 1;
  7695  0023D4  888C               	bsf	140,4,c	;volatile
  7696  0023D6  EFEE  F011         	goto	i2l2714
  7697  0023DA                     i2l7:
  7698                           
  7699                           ;lcd.c: 8:   LATDbits.LATD4 = 0;
  7700  0023DA  988C               	bcf	140,4,c	;volatile
  7701  0023DC                     i2l2714:
  7702                           
  7703                           ;lcd.c: 10:  if(a & 2)
  7704  0023DC  A201               	btfss	i2Lcd_Port@a^0,1,c
  7705  0023DE  EFF3  F011         	goto	i2u236_41
  7706  0023E2  EFF5  F011         	goto	i2u236_40
  7707  0023E6                     i2u236_41:
  7708  0023E6  EFF8  F011         	goto	i2l9
  7709  0023EA                     i2u236_40:
  7710  0023EA                     
  7711                           ;lcd.c: 11:   LATDbits.LATD5 = 1;
  7712  0023EA  8A8C               	bsf	140,5,c	;volatile
  7713  0023EC  EFF9  F011         	goto	i2l2718
  7714  0023F0                     i2l9:
  7715                           
  7716                           ;lcd.c: 13:   LATDbits.LATD5 = 0;
  7717  0023F0  9A8C               	bcf	140,5,c	;volatile
  7718  0023F2                     i2l2718:
  7719                           
  7720                           ;lcd.c: 15:  if(a & 4)
  7721  0023F2  A401               	btfss	i2Lcd_Port@a^0,2,c
  7722  0023F4  EFFE  F011         	goto	i2u237_41
  7723  0023F8  EF00  F012         	goto	i2u237_40
  7724  0023FC                     i2u237_41:
  7725  0023FC  EF03  F012         	goto	i2l11
  7726  002400                     i2u237_40:
  7727  002400                     
  7728                           ;lcd.c: 16:   LATDbits.LATD6 = 1;
  7729  002400  8C8C               	bsf	140,6,c	;volatile
  7730  002402  EF04  F012         	goto	i2l2722
  7731  002406                     i2l11:
  7732                           
  7733                           ;lcd.c: 18:   LATDbits.LATD6 = 0;
  7734  002406  9C8C               	bcf	140,6,c	;volatile
  7735  002408                     i2l2722:
  7736                           
  7737                           ;lcd.c: 20:  if(a & 8)
  7738  002408  A601               	btfss	i2Lcd_Port@a^0,3,c
  7739  00240A  EF09  F012         	goto	i2u238_41
  7740  00240E  EF0B  F012         	goto	i2u238_40
  7741  002412                     i2u238_41:
  7742  002412  EF0E  F012         	goto	i2l13
  7743  002416                     i2u238_40:
  7744  002416                     
  7745                           ;lcd.c: 21:   LATDbits.LATD7 = 1;
  7746  002416  8E8C               	bsf	140,7,c	;volatile
  7747  002418  EF0F  F012         	goto	i2l15
  7748  00241C                     i2l13:
  7749                           
  7750                           ;lcd.c: 23:   LATDbits.LATD7 = 0;
  7751  00241C  9E8C               	bcf	140,7,c	;volatile
  7752  00241E                     i2l15:
  7753  00241E  0012               	return		;funcret
  7754  002420                     __end_ofi2_Lcd_Port:
  7755                           	callstack 0
  7756                           
  7757                           	psect	rparam
  7758  0000                     
  7759                           	psect	temp
  7760  00005C                     btemp:
  7761                           	callstack 0
  7762  00005C                     	ds	1
  7763  0000                     int$flags	set	btemp
  7764  0000                     wtemp8	set	btemp+1
  7765  0000                     ttemp5	set	btemp+1
  7766  0000                     ttemp6	set	btemp+4
  7767  0000                     ttemp7	set	btemp+8
  7768                           
  7769                           	psect	idloc
  7770                           
  7771                           ;Config register IDLOC0 @ 0x200000
  7772                           ;	unspecified, using default values
  7773  200000                     	org	2097152
  7774  200000  FF                 	db	255
  7775                           
  7776                           ;Config register IDLOC1 @ 0x200001
  7777                           ;	unspecified, using default values
  7778  200001                     	org	2097153
  7779  200001  FF                 	db	255
  7780                           
  7781                           ;Config register IDLOC2 @ 0x200002
  7782                           ;	unspecified, using default values
  7783  200002                     	org	2097154
  7784  200002  FF                 	db	255
  7785                           
  7786                           ;Config register IDLOC3 @ 0x200003
  7787                           ;	unspecified, using default values
  7788  200003                     	org	2097155
  7789  200003  FF                 	db	255
  7790                           
  7791                           ;Config register IDLOC4 @ 0x200004
  7792                           ;	unspecified, using default values
  7793  200004                     	org	2097156
  7794  200004  FF                 	db	255
  7795                           
  7796                           ;Config register IDLOC5 @ 0x200005
  7797                           ;	unspecified, using default values
  7798  200005                     	org	2097157
  7799  200005  FF                 	db	255
  7800                           
  7801                           ;Config register IDLOC6 @ 0x200006
  7802                           ;	unspecified, using default values
  7803  200006                     	org	2097158
  7804  200006  FF                 	db	255
  7805                           
  7806                           ;Config register IDLOC7 @ 0x200007
  7807                           ;	unspecified, using default values
  7808  200007                     	org	2097159
  7809  200007  FF                 	db	255
  7810                           
  7811                           	psect	config
  7812                           
  7813                           ;Config register CONFIG1L @ 0x300000
  7814                           ;	PLL Selection
  7815                           ;	PLLSEL = PLL4X, 4x clock multiplier
  7816                           ;	PLL Enable Configuration bit
  7817                           ;	CFGPLLEN = OFF, PLL Disabled (firmware controlled)
  7818                           ;	CPU System Clock Postscaler
  7819                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
  7820                           ;	Low Speed USB mode with 48 MHz system clock
  7821                           ;	LS48MHZ = SYS24X4, System clock at 24 MHz, USB clock divider is set to 4
  7822  300000                     	org	3145728
  7823  300000  00                 	db	0
  7824                           
  7825                           ;Config register CONFIG1H @ 0x300001
  7826                           ;	Oscillator Selection
  7827                           ;	FOSC = INTOSCIO, Internal oscillator
  7828                           ;	Primary Oscillator Shutdown
  7829                           ;	PCLKEN = ON, Primary oscillator enabled
  7830                           ;	Fail-Safe Clock Monitor
  7831                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  7832                           ;	Internal/External Oscillator Switchover
  7833                           ;	IESO = OFF, Oscillator Switchover mode disabled
  7834  300001                     	org	3145729
  7835  300001  28                 	db	40
  7836                           
  7837                           ;Config register CONFIG2L @ 0x300002
  7838                           ;	Power-up Timer Enable
  7839                           ;	nPWRTEN = ON, Power up timer enabled
  7840                           ;	Brown-out Reset Enable
  7841                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
  7842                           ;	Brown-out Reset Voltage
  7843                           ;	BORV = 190, BOR set to 1.9V nominal
  7844                           ;	Low-Power Brown-out Reset
  7845                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  7846  300002                     	org	3145730
  7847  300002  5E                 	db	94
  7848                           
  7849                           ;Config register CONFIG2H @ 0x300003
  7850                           ;	Watchdog Timer Enable bits
  7851                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  7852                           ;	Watchdog Timer Postscaler
  7853                           ;	WDTPS = 32768, 1:32768
  7854  300003                     	org	3145731
  7855  300003  3C                 	db	60
  7856                           
  7857                           ; Padding undefined space
  7858  300004                     	org	3145732
  7859  300004  FF                 	db	255
  7860                           
  7861                           ;Config register CONFIG3H @ 0x300005
  7862                           ;	CCP2 MUX bit
  7863                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  7864                           ;	PORTB A/D Enable bit
  7865                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  7866                           ;	Timer3 Clock Input MUX bit
  7867                           ;	T3CMX = RC0, T3CKI function is on RC0
  7868                           ;	SDO Output MUX bit
  7869                           ;	SDOMX = RB3, SDO function is on RB3
  7870                           ;	Master Clear Reset Pin Enable
  7871                           ;	MCLRE = OFF, RE3 input pin enabled; external MCLR disabled
  7872  300005                     	org	3145733
  7873  300005  53                 	db	83
  7874                           
  7875                           ;Config register CONFIG4L @ 0x300006
  7876                           ;	Stack Full/Underflow Reset
  7877                           ;	STVREN = ON, Stack full/underflow will cause Reset
  7878                           ;	Single-Supply ICSP Enable bit
  7879                           ;	LVP = OFF, Single-Supply ICSP disabled
  7880                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  7881                           ;	ICPRT = OFF, ICPORT disabled
  7882                           ;	Extended Instruction Set Enable bit
  7883                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  7884                           ;	Background Debugger Enable bit
  7885                           ;	DEBUG = 0x1, unprogrammed default
  7886  300006                     	org	3145734
  7887  300006  81                 	db	129
  7888                           
  7889                           ; Padding undefined space
  7890  300007                     	org	3145735
  7891  300007  FF                 	db	255
  7892                           
  7893                           ;Config register CONFIG5L @ 0x300008
  7894                           ;	Block 0 Code Protect
  7895                           ;	CP0 = OFF, Block 0 is not code-protected
  7896                           ;	Block 1 Code Protect
  7897                           ;	CP1 = OFF, Block 1 is not code-protected
  7898                           ;	Block 2 Code Protect
  7899                           ;	CP2 = OFF, Block 2 is not code-protected
  7900                           ;	Block 3 Code Protect
  7901                           ;	CP3 = OFF, Block 3 is not code-protected
  7902  300008                     	org	3145736
  7903  300008  0F                 	db	15
  7904                           
  7905                           ;Config register CONFIG5H @ 0x300009
  7906                           ;	Boot Block Code Protect
  7907                           ;	CPB = OFF, Boot block is not code-protected
  7908                           ;	Data EEPROM Code Protect
  7909                           ;	CPD = OFF, Data EEPROM is not code-protected
  7910  300009                     	org	3145737
  7911  300009  C0                 	db	192
  7912                           
  7913                           ;Config register CONFIG6L @ 0x30000A
  7914                           ;	Block 0 Write Protect
  7915                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
  7916                           ;	Block 1 Write Protect
  7917                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
  7918                           ;	Block 2 Write Protect
  7919                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
  7920                           ;	Block 3 Write Protect
  7921                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
  7922  30000A                     	org	3145738
  7923  30000A  0F                 	db	15
  7924                           
  7925                           ;Config register CONFIG6H @ 0x30000B
  7926                           ;	Configuration Registers Write Protect
  7927                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  7928                           ;	Boot Block Write Protect
  7929                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
  7930                           ;	Data EEPROM Write Protect
  7931                           ;	WRTD = OFF, Data EEPROM is not write-protected
  7932  30000B                     	org	3145739
  7933  30000B  E0                 	db	224
  7934                           
  7935                           ;Config register CONFIG7L @ 0x30000C
  7936                           ;	Block 0 Table Read Protect
  7937                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
  7938                           ;	Block 1 Table Read Protect
  7939                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
  7940                           ;	Block 2 Table Read Protect
  7941                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
  7942                           ;	Block 3 Table Read Protect
  7943                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
  7944  30000C                     	org	3145740
  7945  30000C  0F                 	db	15
  7946                           
  7947                           ;Config register CONFIG7H @ 0x30000D
  7948                           ;	Boot Block Table Read Protect
  7949                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
  7950  30000D                     	org	3145741
  7951  30000D  40                 	db	64
  7952                           tosu	equ	0xFFF
  7953                           tosh	equ	0xFFE
  7954                           tosl	equ	0xFFD
  7955                           stkptr	equ	0xFFC
  7956                           pclatu	equ	0xFFB
  7957                           pclath	equ	0xFFA
  7958                           pcl	equ	0xFF9
  7959                           tblptru	equ	0xFF8
  7960                           tblptrh	equ	0xFF7
  7961                           tblptrl	equ	0xFF6
  7962                           tablat	equ	0xFF5
  7963                           prodh	equ	0xFF4
  7964                           prodl	equ	0xFF3
  7965                           indf0	equ	0xFEF
  7966                           postinc0	equ	0xFEE
  7967                           postdec0	equ	0xFED
  7968                           preinc0	equ	0xFEC
  7969                           plusw0	equ	0xFEB
  7970                           fsr0h	equ	0xFEA
  7971                           fsr0l	equ	0xFE9
  7972                           wreg	equ	0xFE8
  7973                           indf1	equ	0xFE7
  7974                           postinc1	equ	0xFE6
  7975                           postdec1	equ	0xFE5
  7976                           preinc1	equ	0xFE4
  7977                           plusw1	equ	0xFE3
  7978                           fsr1h	equ	0xFE2
  7979                           fsr1l	equ	0xFE1
  7980                           bsr	equ	0xFE0
  7981                           indf2	equ	0xFDF
  7982                           postinc2	equ	0xFDE
  7983                           postdec2	equ	0xFDD
  7984                           preinc2	equ	0xFDC
  7985                           plusw2	equ	0xFDB
  7986                           fsr2h	equ	0xFDA
  7987                           fsr2l	equ	0xFD9
  7988                           status	equ	0xFD8

Data Sizes:
    Strings     25
    Constant    0
    Data        0
    BSS         74
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     91      91
    BANK0           160    104     130
    BANK1           256     37      85
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    i2sprintf@f...source	PTR const unsigned char  size(2) Largest target is 0

    i2sprintf@f...buffer	PTR unsigned char  size(2) Largest target is 0

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_4(CODE[14]), STR_3(CODE[11]), STR_2(CODE[14]), STR_1(CODE[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_4(CODE[14]), STR_3(CODE[11]), STR_2(CODE[14]), STR_1(CODE[11]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
		 -> STR_4(CODE[14]), STR_3(CODE[11]), STR_2(CODE[14]), STR_1(CODE[11]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_4(CODE[14]), STR_3(CODE[11]), STR_2(CODE[14]), STR_1(CODE[11]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> str_personas(BANK1[16]), str_autos(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S973$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S973$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 16
		 -> str_personas(BANK1[16]), str_autos(BANK0[16]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_INT0 in COMRAM

    i2_sprintf->i2_vfprintf
    i2_vfprintf->i2_vfpfcnvrt
    i2_vfpfcnvrt->i2_dtoa
    i2_dtoa->i2_pad
    i2_pad->i2_fputs
    i2_fputs->i2_fputc
    i2_abs->i2___aomod
    i2_atoi->i2___wmul
    i2_atoi->i2_isspace
    i2_Lcd_Write_String->i2_Lcd_Write_Char
    i2_Lcd_Write_Char->i2_Lcd_Port
    i2_Lcd_Set_Cursor->i2_Lcd_Cmd
    i2_Lcd_Cmd->i2_Lcd_Port

Critical Paths under _main in BANK0

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR_INT0 in BANK0

    _ISR_INT0->i2_sprintf

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _ISR_INT0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_INT0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_INT0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_INT0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_INT0 in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_INT0 in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_INT0 in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   12700
                                             35 BANK1      2     2      0
                       _Config_Clock
                   _Config_Interrupt
                        _Config_Port
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    15      6   11240
                                             16 BANK1     19    13      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   10315
                                            102 BANK0      2     2      0
                                             10 BANK1      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           44    38      6    9683
                                             92 BANK0     10     4      6
                                              0 BANK1     10    10      0
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    5683
                                             56 BANK0     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3417
                                             45 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1537
                                             38 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1037
                                             29 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             47 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                             29 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                             29 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                10     8      2    1504
                                             36 BANK0     10     8      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                             29 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                             29 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     512
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     4     2      2     520
                                             33 BANK0      4     2      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       3     3      0     178
                                             30 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       5     4      1     632
                                             32 BANK0      5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     198
                                             32 BANK0      1     1      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     2      0     110
                                             30 BANK0      2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Config_Port                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Config_Interrupt                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Config_Clock                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_INT0                                            10    10      0    5921
                                             19 BANK0     10    10      0
                   i2_Lcd_Set_Cursor
                 i2_Lcd_Write_String
                          i2_sprintf
 ---------------------------------------------------------------------------------
 (10) i2_sprintf                                          21    15      6    5169
                                              0 BANK0     19    13      6
                         i2_vfprintf
 ---------------------------------------------------------------------------------
 (11) i2_vfprintf                                          8     2      6    4864
                                             83 COMRAM     8     2      6
                        i2_vfpfcnvrt
 ---------------------------------------------------------------------------------
 (12) i2_vfpfcnvrt                                        44    38      6    4641
                                             63 COMRAM    20    14      6
                             i2_atoi
                             i2_dtoa
                            i2_fputc
                          i2_isdigit
 ---------------------------------------------------------------------------------
 (13) i2_dtoa                                             36    26     10    2808
                                             27 COMRAM    36    26     10
                          i2___aodiv
                          i2___aomod
                              i2_abs
                              i2_pad
 ---------------------------------------------------------------------------------
 (14) i2_pad                                              11     5      6    1509
                                             16 COMRAM    11     5      6
                            i2_fputc
                            i2_fputs
                           i2_strlen
 ---------------------------------------------------------------------------------
 (15) i2_strlen                                            4     2      2     116
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (15) i2_fputs                                             7     3      4     635
                                              9 COMRAM     7     3      4
                            i2_fputc
 ---------------------------------------------------------------------------------
 (13) i2_fputc                                             9     5      4     434
                                              0 COMRAM     9     5      4
                            i2_putch
 ---------------------------------------------------------------------------------
 (14) i2_putch                                             1     1      0       0
 ---------------------------------------------------------------------------------
 (14) i2_abs                                               4     2      2      92
                                             18 COMRAM     4     2      2
                          i2___aomod (ARG)
 ---------------------------------------------------------------------------------
 (14) i2___aomod                                          18     2     16     348
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (14) i2___aodiv                                          26    10     16     352
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (13) i2_atoi                                             10     8      2     622
                                              6 COMRAM    10     8      2
                           i2___wmul
                          i2_isdigit
                          i2_isspace
 ---------------------------------------------------------------------------------
 (14) i2_isspace                                           7     5      2      78
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (13) i2_isdigit                                           2     0      2      58
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (14) i2___wmul                                            6     2      4     211
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (10) i2_Lcd_Write_String                                  4     2      2     320
                                              4 COMRAM     4     2      2
                   i2_Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (11) i2_Lcd_Write_Char                                    3     3      0     178
                                              1 COMRAM     3     3      0
                         i2_Lcd_Port
 ---------------------------------------------------------------------------------
 (10) i2_Lcd_Set_Cursor                                    5     4      1     432
                                              3 COMRAM     5     4      1
                          i2_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (11) i2_Lcd_Cmd                                           2     2      0     110
                                              1 COMRAM     2     2      0
                         i2_Lcd_Port
 ---------------------------------------------------------------------------------
 (12) i2_Lcd_Port                                          1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Config_Clock
   _Config_Interrupt
   _Config_Port
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
         _fputc
         _isdigit

 _ISR_INT0 (ROOT)
   i2_Lcd_Set_Cursor
     i2_Lcd_Cmd
       i2_Lcd_Port
   i2_Lcd_Write_String
     i2_Lcd_Write_Char
       i2_Lcd_Port
   i2_sprintf
     i2_vfprintf
       i2_vfpfcnvrt
         i2_atoi
           i2___wmul
           i2_isdigit
           i2_isspace
         i2_dtoa
           i2___aodiv
           i2___aomod
           i2_abs
             i2___aomod (ARG)
           i2_pad
             i2_fputc
               i2_putch
             i2_fputs
               i2_fputc
             i2_strlen
         i2_fputc
         i2_isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      32        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     25      55       7       33.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     68      82       5       81.2%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5B      5B       1       96.8%
BITBIGSFRhlhh       3C      0       0      22        0.0%
BITBIGSFRhhl        1C      0       0      21        0.0%
BITBIGSFRlllhh      1A      0       0      28        0.0%
BITBIGSFRhhh         D      0       0      20        0.0%
BITBIGSFRllhl        A      0       0      27        0.0%
BITBIGSFRllll        8      0       0      30        0.0%
BITBIGSFRhll         4      0       0      24        0.0%
BITBIGSFRllhh        3      0       0      26        0.0%
BITBIGSFRlh          2      0       0      25        0.0%
BITBIGSFRhlhl        1      0       0      23        0.0%
BITBIGSFRlllhl       1      0       0      29        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     132      31        0.0%
DATA                 0      0     132       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Jun 28 14:45:40 2022

                         l7 237E                           l9 2394                          l11 23AA  
                        l13 23C0                          l21 2928                          l30 21CA  
                        l15 23C2                          l33 272A                          l18 28BC  
                        l27 2238                          l39 25A2         ___wmul@multiplicand 007F  
                       l112 1DAE                         l121 2766                         l124 291A  
                       l118 2936                         l135 2870                         l262 1918  
                       l249 162A                         l813 24C4                         l902 0B7C  
                       l913 2664                         l916 266C                         l844 1F42  
                       l908 22F8                         l941 1BD6                         l909 2300  
                       l847 1F86                         l855 0F7A                         l944 27DA  
                       l952 2472                         l849 1FC2                         l857 0F82  
                       l938 1BCE                         l875 11BC                         l967 1EF8  
                       l975 255E                         l984 27A0                         l889 0916  
                       l978 2938                         i2l7 23DA                         i2l9 23F0  
        i2___aodiv@quotient 0013                         _abs 262C                         _pad 1EFA  
                       wreg 000FE8         __end_ofi2_vfpfcnvrt 0EDA                        ?_abs 008F  
                      l3210 1E7C                        l3202 1E2E                        l3300 1840  
                      l3212 1EB2                        l3204 1E42                        l3220 2538  
                      l3310 18C2                        l3302 1854                        l3206 1E54  
                      l3222 253E                        l3230 2792                        l2600 2378  
                      l3240 14A2                        l3304 1862                        l3312 18C8  
                      l3208 1E5E                        l3216 2518                        l3224 2768  
                      l3320 1EFA                        l3400 10F6                        l2610 23AC  
                      l2602 2380                        l3234 284A                        l3250 14E8  
                      l3242 14A8                        l3314 18D8                        l3306 1890  
                      l3218 2526                        l3226 2774                        l3330 1F4E  
                      l3322 1F0A                        l3410 1158                        l3402 1110  
                      l2612 23BA                        l2604 238E                        l3236 2868  
                      l3260 153E                        l3252 1508                        l3244 14B6  
                      l3316 18F8                        l3308 18B0                        l3228 277A  
                      l3332 1F62                        l3324 1F1E                        l3412 115E  
                      l3420 1194                        l3404 112A                        l3500 0982  
                      l2606 2396                        l3350 2420                        l3430 1A98  
                      l3270 15C0                        l3262 1552                        l3254 150C  
                      l3246 14D6                        l3342 262C                        l3334 1F68  
                      l3326 1F2E                        l3414 1170                        l3406 1138  
                      l3510 09CC                        l3502 0990                        l2608 23A4  
                      l3352 2426                        l3440 1B32                        l3432 1AB4  
                      l3424 1A7E                        l3280 160A                        l3272 15C2  
                      l3264 1560                        l3256 1518                        l3248 14DA  
                      l3344 2648                        l3336 1F94                        l3328 1F3A  
                      l3416 117C                        l3408 114A                        l3512 0A0C  
                      l3504 099E                        l3600 1E0C                        l3346 27A2  
                      l3354 243A                        l3450 1BB2                        l3434 1AEE  
                      l3426 1A94                        l3274 15D4                        l3266 1572  
                      l3258 1536                        l3290 17E8                        l3338 1FA8  
                      l3418 1184                        l3370 0F52                        l3362 0EDA  
                      l3522 0AD6                        l3514 0A30                        l3506 09BE  
                      l2900 21D0                        l3356 2468                        l3436 1AF6  
                      l3268 15A0                        l3276 15DA                        l3292 17EC  
                      l3284 17B4                        l3380 0FAA                        l3372 0F54  
                      l3364 0EFA                        l3540 0B6A                        l3524 0AFA  
                      l3532 0B2A                        l3516 0A54                        l3460 084E  
                      l2830 28BA                        l2822 289C                        l2910 2218  
                      l2902 21E2                        l3358 246C                        l3446 1B6A  
                      l3438 1AFE                        l3278 15EA                        l3294 17FA  
                      l3286 17BA                        l3390 104C                        l3382 0FB0  
                      l3374 0F6E                        l3366 0F24                        l3534 0B38  
                      l3526 0B08                        l3518 0A9E                        l3702 08D4  
                      l3470 0886                        l3462 0860                        l2824 289E  
                      l2920 216C                        l2912 222A                        l2904 21F4  
                      l2840 270C                        l2832 26F2                        l3448 1BA0  
                      l3704 1B1C                        l3296 181A                        l3288 17C8  
                      l3392 1052                        l3384 0FB8                        l3376 0F8A  
                      l3368 0F44                        l3528 0B1C                        l3464 0864  
                      l3456 081C                        l3552 22A0                        l3560 2474  
                      l2826 28A6                        l2930 21A0                        l2922 2172  
                      l2914 2230                        l2906 21FA                        l2850 2728  
                      l2842 2714                        l2834 2700                        l3298 1838  
                      l3394 1058                        l3386 0FC2                        l3378 0F9C  
                      l3490 08AC                        l3482 0898                        l3474 088C  
                      l3466 0872                        l3458 0840                        l3538 0B44  
                      l3554 22A8                        l3562 2486                        l2828 28A8  
                      l2940 21BE                        l2932 21A6                        l2924 2184  
                      l2916 2154                        l2908 2206                        l2844 2716  
                      l2836 2702                        l3388 0FC8                        l3396 10BC  
                      l3468 0874                        l3492 0902                        l3556 22B6  
                      l3564 248E                        l3580 1D42                        l3572 1D2E  
                      l2598 2368                        l2942 21C4                        l2934 21AC  
                      l2926 218A                        l2918 215A                        l2846 271E  
                      l2838 270A                        l2950 2586                        l3398 10D8  
                      l3494 0926                        l3486 089E                        l3478 0892  
                      l3558 22DC                        l3566 2496                        l3590 1DA0  
                      l3582 1D5E                        l3574 1D36                        ?_pad 008D  
                      l2952 292A                        l2960 273E                        l2936 21B2  
                      l2928 219A                        l2848 2720                        l2944 2560  
                      l3496 0928                        l3568 24B2                        l3592 1DB2  
                      l3584 1D7A                        l3576 1D3A                        l2970 2748  
                      l2962 2740                        l2954 272C                        l2938 21B8  
                      l2946 256E                        l3498 094C                        l3594 1DCC  
                      l3586 1D86                        l3578 1D3E                        l2980 275E  
                      l2972 274A                        l2964 2742                        l2956 2734  
                      l2948 2580                        l3596 1DEA                        l3588 1D94  
                      l2982 2760                        l2974 2758                        l2966 2744  
                      l2958 273A                        l3598 1DEE                        l2984 2762  
                      l2976 275A                        l2968 2746                        l2986 2764  
                      l2978 275C                        l2898 291C                        l2988 2904  
                      STR_1 080F                        STR_2 0801                        STR_3 080F  
                      STR_4 0801                        u3000 1158                        u3001 1154  
                      u3010 1170                        u3011 116C                        u2220 2378  
                      u3020 1AB4                        u3100 0990                        u2221 2374  
                      u3021 1AB0                        u3101 098C                        _LATA 000F89  
                      u2230 238E                        u3030 1AEA                        u3110 0A0C  
                      u2231 238A                        u3031 1AE6                        u3111 0A08  
                      u2240 23A4                        u3040 1BA0                        u3120 0A30  
                      _LATD 000F8C                        u2241 23A0                        u3041 1B9C  
                      u3121 0A2C                        _LATE 000F8D                        u2250 23BA  
                      u3050 1BB2                        u3130 0A54                        u2251 23B6  
                      u3051 1BAE                        u3131 0A50                        u2500 21E2  
                      u3140 0AFA                        u3060 0840                        u2501 21DE  
                      u3141 0AF6                        u3061 083C                        u2510 2218  
                      u3070 0916                        u3150 22F8                        u2511 2214  
                      u3207 270E                        u3071 0912                        u3151 22F4  
                      u2520 25A2                        u2600 1E54                        u3080 0926  
                      u3217 2722                        u2521 259E                        u2601 1E50  
                      u3081 0922                        u2610 1E7C                        u3090 094C  
                      u3227 2162                        u2611 1E78                        u3091 0948  
                      u2700 15A0                        u2620 1EB2                        u3237 217A  
                      u2701 159C                        u2621 1EAE                        u2710 15EA  
                      u2630 255E                        u3247 2192                        u2711 15E6  
                      u2631 255A                        u3167 1DBE                        u2720 17C8  
                      u2640 2792                        u2800 1F86                        u3257 28B0  
                      u2721 17C4                        u2641 278E                        u2801 1F82  
                      u3177 1DDC                        u2650 14B6                        u2730 17FA  
                      u2810 1F94                        u2651 14B2                        u2731 17F6  
                      u2811 1F90                        u3187 1DFA                        u2660 14E8  
                      u2740 1838                        u2820 2648                        u2900 0F52  
                      u2661 14E4                        u2741 1834                        u2821 2644  
                      u2901 0F4E                        u3197 1E18                        u2830 27D4  
                      u2750 1862                        u2590 1E42                        u2910 0F6E  
                      u2831 27CE                        u2671 1512                        u2751 185E  
                      u2591 1E3E                        u2911 0F6A                        u2840 27D6  
                      u2680 1536                        u2760 1890                        u2920 0F9C  
                      u2681 1532                        u2761 188C                        u2921 0F98  
                      u2850 243A                        u2690 1560                        u2770 18D8  
                      u2930 0FAA                        u2851 2436                        u2691 155C  
                      u2771 18D4                        u2931 0FA6                        u2860 2468  
                      u2780 1F0A                        u2940 10D8                        u2861 2464  
                      u2781 1F06                        u2941 10D4                        u2790 1F2E  
                      u2950 10F6                        u2870 0F0C                        u2791 1F2A  
                      u2951 10F2                        u2871 0F06                        u2960 1110  
                      u2880 0F0E                        u2961 110C                        u2970 112A  
                      u2890 0F24                        i2l11 2406                        u2971 1126  
                      u2891 0F20                        u2980 1138                        i2l13 241C  
                      u2981 1134                        u2990 114A                        i2l15 241E  
                      u2991 1146                        i2l33 2812                        i2l18 2902  
                      i2l27 229E                        i2l39 26EC                        abs@a 008F  
         ?_Lcd_Write_String 0081                        _dbuf 0100                        _atoi 1A7E  
                      _main 1D2E                        _dtoa 0EDA                        _prec 00CC  
                      _nout 00C8                        pad@i 0094                        pad@p 0091  
                      fsr1h 000FE2                        fsr2h 000FDA                        indf2 000FDF  
                      fsr1l 000FE1                        pad@w 0096                        fsr2l 000FD9  
                      btemp 005C                        prodh 000FF4                        prodl 000FF3  
                      start 00FE          ??_Lcd_Write_String 0083             __end_ofi2_fputc 208E  
           __end_ofi2_fputs 25E8             __end_of_Lcd_Cmd 28BE             __end_ofi2_putch 293C  
               i2_dtoa$1065 002E                ___param_bank 000000         __end_of_Config_Port 2768  
                     ??_abs 0091                       ??_pad 0093                  i2_vfprintf 2302  
           __end_of___aodiv 162C                       ?_atoi 0084                       ?_main 0001  
                     ?_dtoa 0098             __end_of___aomod 191A                       i2l132 00D2  
                     i2l135 28E2                       i2l262 1A7C                       i2l249 17B2  
                     i2l813 2516                       i2l902 0ED8                       i2l913 26A4  
                     i2l916 26AC                       i2l844 20D4                       i2l908 235A  
                     i2l941 1D2C                       i2l909 2362                       i2l847 2116  
                     i2l855 125E                       i2l944 293C                       i2l952 262A  
                     i2l849 2152                       i2l857 1266                       i2l938 1D24  
                     i2l875 14A0                       i2l967 208C                       i2l975 25E6  
                     i2l984 2848                       i2l889 0C7A                       i2l978 293A  
              vfpfcnvrt@fmt 00BE            __end_of_ISR_INT0 00FE                       _TRISA 000F92  
                     _TRISD 000F95                       i2_abs 266E                       i2_pad 208E  
                i2isdigit@c 0001                 ?i2_Lcd_Port 0001                       _flags 00CE  
                     _autos 00D1                       _fputc 1E2E                       _fputs 2518  
           __end_of_isdigit 27DC                       atoi@n 008C                       pad@fp 008D  
                     atoi@s 0084                       _width 00CA                       _putch 2938  
                     dtoa@d 009A                       dtoa@i 00BA                       dtoa@n 00B2  
                     dtoa@p 00AC                       dtoa@s 00B0                       dtoa@w 00AE  
           __end_of_isspace 2474                       tablat 000FF5            __end_ofi2___wmul 28E4  
                     ttemp5 005D                       ttemp6 0060                       ttemp7 0064  
                     status 000FD8                _str_personas 0120                  i2isspace@c 0001  
                     wtemp8 005D             __end_of_sprintf 24C6            i2_Lcd_Set_Cursor 223A  
          __end_of_Lcd_Init 21CC            __end_of_Lcd_Port 23C4            __end_ofi2_strlen 284A  
           __initialization 2872        __end_of_Config_Clock 2938                __end_of_atoi 1BD8  
              __end_of_main 1E2E                __end_of_dtoa 11BE                 i2_vfpfcnvrt 0B7E  
             i2vfpfcnvrt@ap 0044               i2vfpfcnvrt@fp 0040               i2vfpfcnvrt@ll 004A  
                    ??_atoi 0086                      ??_main 0153                      ??_dtoa 00A2  
             __activetblptr 000002                  i2sprintf@f 0068                  i2sprintf@s 0060  
                    ?i2_abs 0013                      ?i2_pad 0011                      ?_fputc 007D  
                    ?_fputs 0086                      ?_putch 0001                      _ANSELD 000F5E  
                    i2l2110 1FD6                      i2l2112 1FE8                      i2l3010 226E  
                    i2l3002 223C                      i2l2114 1FF2                      i2l3012 2280  
                    i2l3004 224C                      i2l3020 26BA                      i2l2300 1662  
                    i2l2116 2010                      i2l2108 1FC4                      i2l2140 25A4  
                    i2l3100 00C6                      i2l3014 2292                      i2l3006 225E  
                    i2l3022 26CC                      i2l2310 16BE                      i2l2302 1670  
                    i2l2118 2046                      i2l2142 25B0                      i2l2150 2820  
                    i2l3030 24E0                      i2l3016 2298                      i2l3008 2264  
                    i2l3024 26D0                      i2l2400 25E8                      i2l2320 1728  
                    i2l2312 16C6                      i2l2304 1690                      i2l2144 25C2  
                    i2l2152 2824                      i2l3032 24E8                      i2l3018 26AE  
                    i2l2402 25E8                      i2l2330 1772                      i2l2322 1748  
                    i2l2314 16DA                      i2l2306 1694                      i2l2146 25C6  
                    i2l2154 283C                      i2l3034 2504                      i2l3026 24C6  
                    i2l2404 25FC                      i2l2332 1792                      i2l2324 174A  
                    i2l2316 16E8                      i2l2308 16A0                      i2l2340 192C  
                    i2l2148 2814                      i2l3028 24D8                      i2l2406 262A  
                    i2l2326 175C                      i2l2318 16FA                      i2l2350 199C  
                    i2l2342 194C                      i2l2510 1226                      i2l2328 1762  
                    i2l2360 1A14                      i2l2352 19A4                      i2l2344 1950  
                    i2l2336 191A                      i2l2520 1280                      i2l2512 1236  
                    i2l2504 11BE                      i2l3080 0054                      i2l3072 0032  
                    i2l2362 1A26                      i2l2354 19B8                      i2l2346 195E  
                    i2l2338 191E                      i2l2530 12AC                      i2l2522 128E  
                    i2l2514 1238                      i2l2506 11DE                      i2l3090 006E  
                    i2l3082 0058                      i2l3074 0040                      i2l2292 162C  
                    i2l2356 19C6                      i2l2364 1A2C                      i2l2348 197E  
                    i2l2380 20CC                      i2l2372 208E                      i2l2540 13B8  
                    i2l2532 132E                      i2l2524 1294                      i2l2516 1252  
                    i2l2508 1206                      i2l3092 008A                      i2l3084 005A  
                    i2l3076 0044                      i2l2710 23C6                      i2l2286 28BE  
                    i2l2294 1630                      i2l2366 1A3C                      i2l2358 19F4  
                    i2l2390 213A                      i2l2382 20E0                      i2l2374 209E  
                    i2l2550 142C                      i2l2542 13D6                      i2l2534 1334  
                    i2l2526 129C                      i2l2518 126E                      i2l3094 00A6  
                    i2l3086 0068                      i2l3078 0046                      i2l2720 2400  
                    i2l2712 23D4                      i2l2288 28DA                      i2l2296 163E  
                    i2l2368 1A5C                      i2l2384 20F4                      i2l2376 20B2  
                    i2l2560 1468                      i2l2552 143C                      i2l2544 13F0  
                    i2l2536 133A                      i2l2528 12A6                      i2l3096 00B0  
                    i2l3088 006C                      i2l2722 2408                      i2l2714 23DC  
                    i2l2298 165E                      i2l2394 266E                      i2l2386 20F8  
                    i2l2378 20C0                      i2l2554 1442                      i2l2562 1478  
                    i2l2546 140A                      i2l2538 139E                      i2l2810 0EC6  
                    i2l2802 0E88                      i2l2730 0BB0                      i2l3098 00BC  
                    i2l2724 2416                      i2l2716 23EA                      i2l2580 1C56  
                    i2l2572 1BF0                      i2l2396 2688                      i2l2388 2126  
                    i2l2556 1454                      i2l2548 141A                      i2l2804 0E96  
                    i2l2740 0BE8                      i2l2732 0BC2                      i2l2718 23F2  
                    i2l2398 293C                      i2l2590 1CF6                      i2l2582 1C8A  
                    i2l2574 1C0C                      i2l2566 1BD8                      i2l2558 1460  
                    i2l2734 0BC6                      i2l2726 0B7E                      i2l2592 1D08  
                    i2l2576 1C46                      i2l2568 1BEC                      i2l2760 0C14  
                    i2l2752 0C00                      i2l2744 0BF0                      i2l2736 0BD2  
                    i2l2728 0BA2                      i2l2808 0EA2                      i2l2578 1C4E  
                    i2l2770 0CE6                      i2l3706 0C3A                      i2l2738 0BD6  
                    i2l2762 0C68                      i2l2860 28E6                      i2l3708 1C74  
                    i2l2588 1CC0                      i2l2780 0D30                      i2l2772 0CF4  
                    i2l2764 0C8A                      i2l2756 0C08                      i2l2748 0BF8  
                    i2l2862 28E8                      i2l2870 27DE                      i2l2782 0D6E  
                    i2l2774 0D02                      i2l2766 0C8C                      i2l2864 28EE  
                    i2l2880 27FE                      i2l2872 27EA                      i2l2792 0E36  
                    i2l2784 0D92                      i2l2776 0D22                      i2l2768 0CB0  
                    i2l2866 28F0                      i2l2882 2800                      i2l2874 27EC  
                    i2l2794 0E5A                      i2l2786 0DB6                      i2l2890 2302  
                    i2l2868 2900                      i2l2884 2806                      i2l2876 27F4  
                    i2l2796 0E68                      i2l2788 0DFE                      i2l2892 230A  
                    i2l2886 2808                      i2l2878 27F6                      i2l2798 0E7C  
                    i2l2894 2318                      i2l2888 2810                      i2l2896 233E  
                 ??i2_fputc 0005                   ??i2_fputs 000E                   ??_Lcd_Cmd 007E  
             vfpfcnvrt@done 0138                   ??i2_putch 0001                      _SLRCON 000F7A  
               _Config_Port 272C              i2___aodiv@sign 0012                      i2abs@a 0013  
                    i2_atoi 1BD8                      i2_dtoa 11BE                      i2pad@i 0018  
                    i2pad@p 0015                      i2pad@w 001A    __end_of_Config_Interrupt 291C  
              vfprintf@cfmt 00C6              i2___aomod@sign 0012           __end_ofi2_Lcd_Cmd 2904  
                 ??___aodiv 008D               i2vfprintf@fmt 0056                   ??___aomod 008D  
                    ___wmul 284A                 ?i2_vfprintf 0054         i2Lcd_Write_String@a 0005  
       i2Lcd_Write_String@i 0007                      clear_0 2878                      clear_1 2884  
                    isa$std 000001                      pad@buf 008F                      dtoa@fp 0098  
          i2_Lcd_Write_Char 27DC                      _strlen 2768                      fputc@c 007D  
                    fputs@c 008A                      fputs@i 008B           __end_ofi2___aodiv 17B4  
                    fputs@s 0086                   ??_isdigit 007F           __end_ofi2___aomod 1A7E  
              __mediumconst 0000                   ??_isspace 007F                      tblptrh 000FF7  
                    tblptrl 000FF6                      tblptru 000FF8                      putch@c 0001  
        i2___aomod@dividend 0001            __end_of_vfprintf 2302                   ??_sprintf 00C8  
           Lcd_Set_Cursor@a 0081             Lcd_Set_Cursor@b 0080             Lcd_Set_Cursor@y 0083  
           Lcd_Set_Cursor@z 0082           __end_ofi2_isdigit 293E                  __accesstop 0060  
   __end_of__initialization 288A           __end_ofi2_isspace 262C           __end_of_Lcd_Clear 292A  
             ___rparam_used 000001           __end_ofi2_sprintf 2518               __end_ofi2_abs 26AE  
             __end_ofi2_pad 2154                   ?_ISR_INT0 0001              __pcstackCOMRAM 0001  
             __end_of_fputc 1EFA               __end_of_fputs 2560               __end_of_putch 293A  
         i2Lcd_Write_Char@a 0004           i2Lcd_Write_Char@y 0003                   ?i2___wmul 0001  
            _Lcd_Set_Cursor 21CC                     ??i2_abs 0015                     ??i2_pad 0017  
            i2vfpfcnvrt@fmt 0042                   ?_Lcd_Init 0001                   ?_Lcd_Port 0001  
                 ?i2_strlen 0001                     ??_fputc 0081                     ??_fputs 008A  
      i2Lcd_Write_Char@temp 0002                     ??_putch 007D                  __pbssBANK0 00C8  
                __pbssBANK1 0100                 i2sprintf@ap 0066                     ?i2_atoi 0007  
                   ?i2_dtoa 001C                  ??_ISR_INT0 0073                     ?___wmul 007D  
      i2Lcd_Set_Cursor@temp 0008      __end_of_Lcd_Set_Cursor 223A                     ?_strlen 007D  
                ??i2___wmul 0005    __end_ofi2_Lcd_Set_Cursor 22A0                  ??_Lcd_Init 0080  
              _Config_Clock 292A                ??i2_Lcd_Port 0001                  ??_Lcd_Port 007D  
                ??i2_strlen 0003                     i2_fputc 1FC4                     i2_fputs 25A4  
            _Lcd_Write_Char 26EE                     _Lcd_Cmd 2898                     i2atoi@n 000F  
                   i2pad@fp 0011                     i2atoi@s 0007                     i2_putch 293A  
                   i2dtoa@d 001E                     i2dtoa@i 003E                     i2dtoa@n 0036  
                   i2dtoa@p 0030                     i2dtoa@s 0034                     i2dtoa@w 0032  
                   __Hparam 0000                     __Lparam 0000                     ___aodiv 14A2  
                   ___aomod 17B4                   ?_vfprintf 013A              i2vfprintf@cfmt 005A  
              __psmallconst 0800          __end_ofi2_Lcd_Port 2420                ?i2_vfpfcnvrt 0040  
                   __pcinit 2872                     __ramtop 0800             ?_Lcd_Set_Cursor 0080  
                   __ptext0 1D2E                     __ptext1 2474                     __ptext2 22A0  
                   __ptext3 081C                     __ptext4 0EDA                     __ptext5 1EFA  
                   __ptext6 2768                     __ptext7 2518                     __ptext8 1E2E  
                   __ptext9 2938                     _isdigit 27A2                     _isspace 2420  
                   atoi@neg 008A                     _sprintf 2474      __end_of_Lcd_Write_Char 272C  
      end_of_initialization 288A                     fputc@fp 007F               __Lmediumconst 0000  
              ?_Config_Port 0001                     fputs@fp 0088         i2___wmul@multiplier 0001  
  __end_ofi2_Lcd_Write_Char 2814           ?_Config_Interrupt 0001           __end_of_vfpfcnvrt 0B7E  
        ??_Config_Interrupt 007D                     postdec2 000FDD                     postinc0 000FEE  
                   postinc1 000FE6                     postinc2 000FDE                   Lcd_Port@a 007D  
              ??i2_vfprintf 005A                  ??_vfprintf 00C6                     strlen@a 007F  
                   strlen@s 007D                   i2_Lcd_Cmd 28E4           i2___aodiv@divisor 0009  
         i2___aodiv@counter 0011                   _TRISBbits 000F93                   _TRISEbits 000F96  
                 i2___aodiv 162C                   i2___aomod 191A             ?_Lcd_Write_Char 0001  
         Lcd_Write_String@a 0081           Lcd_Write_String@i 0083          __end_ofi2_vfprintf 2364  
                 i2_isdigit 293C              __end_ofi2_atoi 1D2E              __end_ofi2_dtoa 14A2  
                 i2_isspace 25E8                   _Lcd_Clear 291C                   i2atoi@neg 000D  
                 i2_sprintf 24C6                 vfpfcnvrt@ap 00C0                 vfpfcnvrt@fp 00BC  
               vfpfcnvrt@ll 0130              __end_of___wmul 2872            _Lcd_Write_String 2560  
                ?i2_Lcd_Cmd 0001                   i2fputc@fp 0003                   i2fputs@fp 000C  
          i2___wmul@product 0005              __end_of_strlen 27A2         start_initialization 2872  
               __end_of_abs 266E                 __end_of_pad 1FC4                  ?i2___aodiv 0001  
                ?i2___aomod 0001                   i2strlen@a 0003                   i2strlen@s 0001  
                  ??i2_atoi 0009                    ??i2_dtoa 0026                  ?i2_isdigit 0001  
                ?i2_isspace 0001                 vfprintf@fmt 013C                i2vfprintf@ap 0058  
           i2vfpfcnvrt@done 0052                i2vfprintf@fp 0054                  ?_Lcd_Clear 0001  
__end_ofi2_Lcd_Write_String 26EE                    ??___wmul 0081                  ?i2_sprintf 0060  
           Lcd_Write_Char@a 0080             Lcd_Write_Char@y 007F           i2___aomod@divisor 0009  
                  ??_strlen 007F           i2___aomod@counter 0011                i2sprintf@fmt 0062  
             __pcstackBANK0 0060               __pcstackBANK1 0130           ?i2_Lcd_Set_Cursor 0004  
          ___aodiv@dividend 007D          ??i2_Lcd_Set_Cursor 0005                    ?i2_fputc 0001  
                  ?i2_fputs 000A                    ?_Lcd_Cmd 0001                    ?i2_putch 0001  
                 _dtoa$1065 00AA            ??_Lcd_Set_Cursor 0081                   __pintcode 0008  
                  ?___aodiv 007D                    ?___aomod 007D            ___aodiv@quotient 008F  
               ??i2_Lcd_Cmd 0002                 __smallconst 0800                    ?_isdigit 007D  
                  ?_isspace 007D                 ??i2___aodiv 0011                 ??i2___aomod 0011  
                  ?_sprintf 0140              ___wmul@product 0081                    _LATDbits 000F8C  
                  _LATEbits 000F8D           ?i2_Lcd_Write_Char 0001                 ??i2_isdigit 0003  
                  i2u210_40 13B8                    i2u210_41 13B4                    i2u211_40 13D6  
                  i2u203_40 11EE                    i2u211_41 13D2                    i2u203_41 11E8  
                  i2u220_40 1CF6                    i2u140_40 25E6                    i2u212_40 13F0  
                  i2u204_40 11F0                    i2u220_41 1CF2                    i2u140_41 25E2  
                  i2u212_41 13EC                    i2u221_40 1D08                    i2u141_40 283C  
                  i2u213_40 140A                    i2u205_40 1206                    i2u221_41 1D04  
                  i2u141_41 2838                    i2u213_41 1406                    i2u205_41 1202  
                  i2u134_40 1FD6                    i2u214_40 141A                    i2u206_40 1236  
                  i2u134_41 1FD2                    i2u214_41 1416                    i2u206_41 1232  
               ??i2_isspace 0003                    i2u135_40 1FE8                    i2u215_40 142C  
                  i2u207_40 1252                    i2u135_41 1FE4                    i2u215_41 1428  
                  i2u207_41 124E                    i2u136_40 2010                    i2u216_40 143C  
                  i2u208_40 1280                    i2u240_40 0C7A                    i2u136_41 200C  
                  i2u216_41 1438                    i2u208_41 127C                    i2u240_41 0C76  
                  i2u137_40 2046                    i2u217_40 1454                    i2u209_40 128E  
                  i2u241_40 0C8A                    i2u137_41 2042                    i2u217_41 1450  
                  i2u209_41 128A                    i2u241_41 0C86                    i2u218_40 1C0C  
                  i2u170_40 1772                    i2u242_40 0CB0                    i2u218_41 1C08  
                  i2u170_41 176E                    i2u242_41 0CAC                    Lcd_Cmd@a 007F  
                  i2u235_40 23D4                    i2u219_40 1C42                    i2u171_40 192C  
                  i2u243_40 0CF4                    i2u235_41 23D0                    i2u219_41 1C3E  
                  i2u171_41 1928                    i2u243_41 0CF0                    i2u236_40 23EA  
                  i2u164_40 163E                    i2u172_40 195E                    i2u180_40 2126  
                  i2u244_40 0D6E                    i2u236_41 23E6                    i2u164_41 163A  
                  i2u172_41 195A                    i2u180_41 2122                    i2u244_41 0D6A  
                  i2u237_40 2400                    i2u253_40 224C                    i2u165_40 1670  
                  i2u173_40 199C                    i2u181_40 2688                    i2u245_40 0D92  
                  i2u237_41 23FC                    i2u253_41 2248                    i2u165_41 166C  
                  i2u173_41 1998                    i2u181_41 2684                    i2u245_41 0D8E  
                  i2u238_40 2416                    i2u254_40 2280                    i2u182_40 25FC  
                  i2u174_40 19C6                    i2u246_40 0DB6                    i2u238_41 2412  
                  i2u254_41 227C                    i2u182_41 25F8                    i2u166_41 169A  
                  i2u174_41 19C2                    i2u246_41 0DB2                    i2u326_47 27F8  
                  i2u255_40 26EC                    i2u183_40 262A                    i2u167_40 16BE  
                  i2u175_40 19F4                    i2u247_40 0E5A                    i2u239_40 0BA2  
                  i2u255_41 26E8                    i2u183_41 2626                    i2u167_41 16BA  
                  i2u175_41 19F0                    i2u247_41 0E56                    i2u239_41 0B9E  
                  i2u327_47 280A                    i2u168_40 16E8                    i2u176_40 1A3C  
                  i2u256_40 0040                    i2u168_41 16E4                    i2u176_41 1A38  
                  i2u256_41 003C                    i2u328_47 28F6                    i2u169_40 1728  
                  i2u177_40 209E                    i2u249_40 235A                    i2u257_40 0054  
                  i2u169_41 1724                    i2u177_41 209A                    i2u249_41 2356  
                  i2u257_41 0050                    i2u178_40 20C0                    i2u258_40 0068  
                  i2u178_41 20BC                    i2u258_41 0064                    i2u179_40 2116  
                  i2u179_41 2112                    _ISR_INT0 0008          ??i2_Lcd_Write_Char 0002  
               ??_Lcd_Clear 0080                 ??i2_sprintf 005C                   _vfpfcnvrt 081C  
         ___wmul@multiplier 007D                    i2___wmul 28BE                    _WPUBbits 000F85  
          ??_Lcd_Write_Char 007E                   _str_autos 00D2                _isspace$1114 0083  
                  i2pad@buf 0013                    _Lcd_Init 2154                    i2dtoa@fp 001C  
                  _Lcd_Port 2364                    i2_strlen 2814                 _INTCON2bits 000FF1  
               _INTCON3bits 000FF0                    i2fputc@c 0001                    i2fputs@c 000E  
                  i2fputs@i 000F                    i2fputs@s 000A    __end_of_Lcd_Write_String 25A4  
                  __Hrparam 0000                  vfprintf@ap 013E                    __Lrparam 0000  
                vfprintf@fp 013A       i2___wmul@multiplicand 0003                  ?_vfpfcnvrt 00BC  
           ___aodiv@divisor 0085             ___aodiv@counter 008D                  _ANSELAbits 000F5B  
                _ANSELBbits 000F5C                  _ANSELEbits 000F5F                  sprintf@fmt 0142  
                  __ptext10 262C                    __ptext11 17B4                    __ptext20 2154  
                  __ptext12 14A2                    __ptext21 291C                    __ptext13 1A7E  
                  __ptext30 0B7E                    __ptext22 2898                    __ptext14 2420  
                  __ptext31 11BE                    __ptext23 2364                    __ptext15 27A2  
                  __ptext40 1BD8                    __ptext32 208E                    __ptext24 272C  
                  __ptext16 284A                    __ptext41 25E8                    __ptext33 2814  
                  __ptext25 2904                    __ptext17 2560                    __ptext42 293C  
                  __ptext34 25A4                    __ptext26 292A                    __ptext18 26EE  
                  __ptext43 28BE                    __ptext35 1FC4                    __ptext19 21CC  
                  __ptext44 26AE                    __ptext36 293A                    __ptext28 24C6  
                  __ptext45 27DC                    __ptext37 266E                    __ptext29 2302  
                  __ptext46 223A                    __ptext38 191A                    __ptext47 28E4  
                  __ptext39 162C                    __ptext48 23C4                    _personas 00D0  
                  isa$xinst 000000                    int$flags 005C                 i2Lcd_Port@a 0001  
                  _vfprintf 22A0            ___aomod@dividend 007D                  _INTCONbits 000FF2  
        i2_Lcd_Write_String 26AE               ?_Config_Clock 0001                    isdigit@c 007D  
        Lcd_Write_Char@temp 007E                    intlevel2 0000                   sprintf@ap 0146  
       ?i2_Lcd_Write_String 0005           i2Lcd_Set_Cursor@a 0005           i2Lcd_Set_Cursor@b 0004  
         i2Lcd_Set_Cursor@y 0007           i2Lcd_Set_Cursor@z 0006                    isspace@c 007D  
                _OSCCONbits 000FD3                  i2Lcd_Cmd@a 0003             ___aomod@divisor 0085  
      ??i2_Lcd_Write_String 0007               ??i2_vfpfcnvrt 0046                 ??_vfpfcnvrt 00C2  
           ___aomod@counter 008D          Lcd_Set_Cursor@temp 0084                    sprintf@f 0148  
                  sprintf@s 0140            _Config_Interrupt 2904              ??_Config_Clock 007D  
                i2_Lcd_Port 23C4                ___aodiv@sign 008E          i2___aodiv@dividend 0001  
             ??_Config_Port 007D                ___aomod@sign 008E  
