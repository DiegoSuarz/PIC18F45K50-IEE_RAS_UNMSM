

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri Jul 08 14:33:35 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    23                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    25  0000                     
    26                           ; Version 2.35
    27                           ; Generated 05/05/2021 GMT
    28                           ; 
    29                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution. Publication is not required when
    43                           ;        this file is used in an embedded application.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC18F45K50 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     
    62                           	psect	idataCOMRAM
    63  000268                     __pidataCOMRAM:
    64                           	callstack 0
    65                           
    66                           ;initializer for _Display7segDecoded
    67  000268  00                 	db	0
    68  000269  01                 	db	1
    69  00026A  02                 	db	2
    70  00026B  03                 	db	3
    71  00026C  04                 	db	4
    72  00026D  05                 	db	5
    73  00026E  06                 	db	6
    74  00026F  07                 	db	7
    75  000270  08                 	db	8
    76  000271  09                 	db	9
    77  0000                     _INTCON2bits	set	4081
    78  0000                     _LATC	set	3979
    79  0000                     _LATD	set	3980
    80  0000                     _ANSELA	set	3931
    81  0000                     _SLRCON	set	3962
    82  0000                     _LATA	set	3977
    83  0000                     _LATDbits	set	3980
    84  0000                     _TRISA	set	3986
    85  0000                     _OSCCONbits	set	4051
    86  0000                     _INTCON3bits	set	4080
    87  0000                     _INTCONbits	set	4082
    88  0000                     _LATCbits	set	3979
    89  0000                     _ANSELBbits	set	3932
    90  0000                     _ANSELD	set	3934
    91  0000                     _TRISCbits	set	3988
    92  0000                     _TRISD	set	3989
    93  0000                     _RCON	set	4048
    94                           
    95                           ; #config settings
    96                           
    97                           	psect	cinit
    98  0001D2                     __pcinit:
    99                           	callstack 0
   100  0001D2                     start_initialization:
   101                           	callstack 0
   102  0001D2                     __initialization:
   103                           	callstack 0
   104                           
   105                           ; Initialize objects allocated to COMRAM (10 bytes)
   106                           ; load TBLPTR registers with __pidataCOMRAM
   107  0001D2  0E68               	movlw	low __pidataCOMRAM
   108  0001D4  6EF6               	movwf	tblptrl,c
   109  0001D6  0E02               	movlw	high __pidataCOMRAM
   110  0001D8  6EF7               	movwf	tblptrh,c
   111  0001DA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   112  0001DC  6EF8               	movwf	tblptru,c
   113  0001DE  EE00  F016         	lfsr	0,__pdataCOMRAM
   114  0001E2  EE10 F00A          	lfsr	1,10
   115  0001E6                     copy_data0:
   116  0001E6  0009               	tblrd		*+
   117  0001E8  CFF5 FFEE          	movff	tablat,postinc0
   118  0001EC  50E5               	movf	postdec1,w,c
   119  0001EE  50E1               	movf	fsr1l,w,c
   120  0001F0  E1FA               	bnz	copy_data0
   121                           
   122                           ; Clear objects allocated to COMRAM (1 bytes)
   123  0001F2  6A20               	clrf	__pbssCOMRAM& (0+255),c
   124  0001F4                     end_of_initialization:
   125                           	callstack 0
   126  0001F4                     __end_of__initialization:
   127                           	callstack 0
   128  0001F4  9021               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   129  0001F6  9221               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   130  0001F8  0100               	movlb	0
   131  0001FA  EF23  F001         	goto	_main	;jump to C main() function
   132                           
   133                           	psect	bssCOMRAM
   134  000020                     __pbssCOMRAM:
   135                           	callstack 0
   136  000020                     _flag:
   137                           	callstack 0
   138  000020                     	ds	1
   139                           
   140                           	psect	dataCOMRAM
   141  000016                     __pdataCOMRAM:
   142                           	callstack 0
   143  000016                     _Display7segDecoded:
   144                           	callstack 0
   145  000016                     	ds	10
   146                           
   147                           	psect	cstackCOMRAM
   148  000001                     __pcstackCOMRAM:
   149                           	callstack 0
   150  000001                     toogle_led@interacciones:
   151                           	callstack 0
   152  000001                     MostrarDisplay01@array:
   153                           	callstack 0
   154                           
   155                           ; 2 bytes @ 0x0
   156  000001                     	ds	1
   157  000002                     ??_toogle_led:
   158                           
   159                           ; 1 bytes @ 0x1
   160  000002                     	ds	1
   161  000003                     MostrarDisplay01@size_array:
   162                           	callstack 0
   163                           
   164                           ; 1 bytes @ 0x2
   165  000003                     	ds	1
   166  000004                     ??_MostrarDisplay01:
   167                           
   168                           ; 1 bytes @ 0x3
   169  000004                     	ds	1
   170  000005                     toogle_led@pin:
   171                           	callstack 0
   172                           
   173                           ; 1 bytes @ 0x4
   174  000005                     	ds	1
   175  000006                     MostrarDisplay01@i:
   176                           	callstack 0
   177  000006                     toogle_led@i:
   178                           	callstack 0
   179                           
   180                           ; 1 bytes @ 0x5
   181  000006                     	ds	1
   182  000007                     ??_ISR1:
   183                           
   184                           ; 1 bytes @ 0x6
   185  000007                     	ds	4
   186  00000B                     MostrarDisplay02@array:
   187                           	callstack 0
   188                           
   189                           ; 2 bytes @ 0xA
   190  00000B                     	ds	2
   191  00000D                     MostrarDisplay02@size_array:
   192                           	callstack 0
   193                           
   194                           ; 1 bytes @ 0xC
   195  00000D                     	ds	1
   196  00000E                     ??_MostrarDisplay02:
   197                           
   198                           ; 1 bytes @ 0xD
   199  00000E                     	ds	2
   200  000010                     MostrarDisplay02@i:
   201                           	callstack 0
   202                           
   203                           ; 1 bytes @ 0xF
   204  000010                     	ds	1
   205  000011                     ??_ISR2:
   206                           
   207                           ; 1 bytes @ 0x10
   208  000011                     	ds	5
   209  000016                     
   210                           ; 1 bytes @ 0x15
   211 ;;
   212 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   213 ;;
   214 ;; *************** function _main *****************
   215 ;; Defined at:
   216 ;;		line 32 in file "main.c"
   217 ;; Parameters:    Size  Location     Type
   218 ;;		None
   219 ;; Auto vars:     Size  Location     Type
   220 ;;		None
   221 ;; Return value:  Size  Location     Type
   222 ;;                  1    wreg      void 
   223 ;; Registers used:
   224 ;;		wreg, status,2, status,0, cstack
   225 ;; Tracked objects:
   226 ;;		On entry : 0/0
   227 ;;		On exit  : 0/0
   228 ;;		Unchanged: 0/0
   229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   230 ;;      Params:         0       0       0       0       0       0       0       0       0
   231 ;;      Locals:         0       0       0       0       0       0       0       0       0
   232 ;;      Temps:          0       0       0       0       0       0       0       0       0
   233 ;;      Totals:         0       0       0       0       0       0       0       0       0
   234 ;;Total ram usage:        0 bytes
   235 ;; Hardware stack levels required when called: 5
   236 ;; This function calls:
   237 ;;		_Config_Clock
   238 ;;		_Config_Interrupt_priority
   239 ;;		_Config_Port
   240 ;; This function is called by:
   241 ;;		Startup code after reset
   242 ;; This function uses a non-reentrant model
   243 ;;
   244                           
   245                           	psect	text0
   246  000246                     __ptext0:
   247                           	callstack 0
   248  000246                     _main:
   249                           	callstack 26
   250  000246                     
   251                           ;main.c: 33:     Config_Clock();
   252  000246  EC2D  F001         	call	_Config_Clock	;wreg free
   253                           
   254                           ;main.c: 34:     Config_Port();
   255  00024A  ECFF  F000         	call	_Config_Port	;wreg free
   256  00024E                     
   257                           ;main.c: 35:     Config_Interrupt_priority();
   258  00024E  EC14  F001         	call	_Config_Interrupt_priority	;wreg free
   259  000252                     l94:
   260  000252  EF29  F001         	goto	l94
   261  000256  EF33  F000         	goto	start
   262  00025A                     __end_of_main:
   263                           	callstack 0
   264                           
   265 ;; *************** function _Config_Port *****************
   266 ;; Defined at:
   267 ;;		line 48 in file "main.c"
   268 ;; Parameters:    Size  Location     Type
   269 ;;		None
   270 ;; Auto vars:     Size  Location     Type
   271 ;;		None
   272 ;; Return value:  Size  Location     Type
   273 ;;                  1    wreg      void 
   274 ;; Registers used:
   275 ;;		wreg, status,2
   276 ;; Tracked objects:
   277 ;;		On entry : 0/0
   278 ;;		On exit  : 0/0
   279 ;;		Unchanged: 0/0
   280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   281 ;;      Params:         0       0       0       0       0       0       0       0       0
   282 ;;      Locals:         0       0       0       0       0       0       0       0       0
   283 ;;      Temps:          0       0       0       0       0       0       0       0       0
   284 ;;      Totals:         0       0       0       0       0       0       0       0       0
   285 ;;Total ram usage:        0 bytes
   286 ;; Hardware stack levels used: 1
   287 ;; Hardware stack levels required when called: 4
   288 ;; This function calls:
   289 ;;		Nothing
   290 ;; This function is called by:
   291 ;;		_main
   292 ;; This function uses a non-reentrant model
   293 ;;
   294                           
   295                           	psect	text1
   296  0001FE                     __ptext1:
   297                           	callstack 0
   298  0001FE                     _Config_Port:
   299                           	callstack 26
   300  0001FE                     
   301                           ;main.c: 51:     LATA=0;
   302  0001FE  0E00               	movlw	0
   303  000200  6E89               	movwf	137,c	;volatile
   304                           
   305                           ;main.c: 52:     LATD=0;
   306  000202  0E00               	movlw	0
   307  000204  6E8C               	movwf	140,c	;volatile
   308  000206                     
   309                           ;main.c: 53:     LATCbits.LATC0=0;
   310  000206  908B               	bcf	139,0,c	;volatile
   311                           
   312                           ;main.c: 56:     SLRCON=0b00000000;
   313  000208  0E00               	movlw	0
   314  00020A  6E7A               	movwf	122,c	;volatile
   315                           
   316                           ;main.c: 59:     ANSELA = 0;
   317  00020C  0E00               	movlw	0
   318  00020E  010F               	movlb	15	; () banked
   319  000210  6F5B               	movwf	91,b	;volatile
   320                           
   321                           ;main.c: 60:     ANSELD = 0;
   322  000212  0E00               	movlw	0
   323  000214  6F5E               	movwf	94,b	;volatile
   324  000216                     
   325                           ; BSR set to: 15
   326                           ;main.c: 61:     ANSELBbits.ANSB0=0;
   327  000216  915C               	bcf	92,0,b	;volatile
   328  000218                     
   329                           ; BSR set to: 15
   330                           ;main.c: 62:     ANSELBbits.ANSB1=0;
   331  000218  935C               	bcf	92,1,b	;volatile
   332  00021A                     
   333                           ; BSR set to: 15
   334                           ;main.c: 63:     ANSELBbits.ANSB2=0;
   335  00021A  955C               	bcf	92,2,b	;volatile
   336                           
   337                           ;main.c: 65:     TRISA=0;
   338  00021C  0E00               	movlw	0
   339  00021E  6E92               	movwf	146,c	;volatile
   340                           
   341                           ;main.c: 66:     TRISD=0;
   342  000220  0E00               	movlw	0
   343  000222  6E95               	movwf	149,c	;volatile
   344  000224                     
   345                           ; BSR set to: 15
   346                           ;main.c: 67:     TRISCbits.TRISC0=0;
   347  000224  9094               	bcf	148,0,c	;volatile
   348  000226                     
   349                           ; BSR set to: 15
   350  000226  0012               	return		;funcret
   351  000228                     __end_of_Config_Port:
   352                           	callstack 0
   353                           
   354 ;; *************** function _Config_Interrupt_priority *****************
   355 ;; Defined at:
   356 ;;		line 75 in file "main.c"
   357 ;; Parameters:    Size  Location     Type
   358 ;;		None
   359 ;; Auto vars:     Size  Location     Type
   360 ;;		None
   361 ;; Return value:  Size  Location     Type
   362 ;;                  1    wreg      void 
   363 ;; Registers used:
   364 ;;		status,2, status,0
   365 ;; Tracked objects:
   366 ;;		On entry : 0/0
   367 ;;		On exit  : 0/0
   368 ;;		Unchanged: 0/0
   369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   370 ;;      Params:         0       0       0       0       0       0       0       0       0
   371 ;;      Locals:         0       0       0       0       0       0       0       0       0
   372 ;;      Temps:          0       0       0       0       0       0       0       0       0
   373 ;;      Totals:         0       0       0       0       0       0       0       0       0
   374 ;;Total ram usage:        0 bytes
   375 ;; Hardware stack levels used: 1
   376 ;; Hardware stack levels required when called: 4
   377 ;; This function calls:
   378 ;;		Nothing
   379 ;; This function is called by:
   380 ;;		_main
   381 ;; This function uses a non-reentrant model
   382 ;;
   383                           
   384                           	psect	text2
   385  000228                     __ptext2:
   386                           	callstack 0
   387  000228                     _Config_Interrupt_priority:
   388                           	callstack 26
   389  000228                     
   390                           ;main.c: 77:     RCON|=(1<<7);
   391  000228  8ED0               	bsf	208,7,c	;volatile
   392  00022A                     
   393                           ;main.c: 78:     INTCONbits.GIEH = 1;
   394  00022A  8EF2               	bsf	242,7,c	;volatile
   395  00022C                     
   396                           ;main.c: 79:     INTCONbits.GIEL = 1;
   397  00022C  8CF2               	bsf	242,6,c	;volatile
   398  00022E                     
   399                           ;main.c: 83:     INTCON3bits.INT1IP = 0;
   400  00022E  9CF0               	bcf	240,6,c	;volatile
   401  000230                     
   402                           ;main.c: 84:     INTCON3bits.INT2IP = 1;
   403  000230  8EF0               	bsf	240,7,c	;volatile
   404  000232                     
   405                           ;main.c: 87:     INTCONbits.INT0E=1;
   406  000232  88F2               	bsf	242,4,c	;volatile
   407  000234                     
   408                           ;main.c: 88:     INTCONbits.INT0F=0;
   409  000234  92F2               	bcf	242,1,c	;volatile
   410  000236                     
   411                           ;main.c: 89:     INTCON2bits.INTEDG0=1;
   412  000236  8CF1               	bsf	241,6,c	;volatile
   413  000238                     
   414                           ;main.c: 92:     INTCON3bits.INT1E=1;
   415  000238  86F0               	bsf	240,3,c	;volatile
   416  00023A                     
   417                           ;main.c: 93:     INTCON3bits.INT1F=0;
   418  00023A  90F0               	bcf	240,0,c	;volatile
   419  00023C                     
   420                           ;main.c: 94:     INTCON2bits.INTEDG1=1;
   421  00023C  8AF1               	bsf	241,5,c	;volatile
   422  00023E                     
   423                           ;main.c: 97:     INTCON3bits.INT2E=1;
   424  00023E  88F0               	bsf	240,4,c	;volatile
   425  000240                     
   426                           ;main.c: 98:     INTCON3bits.INT2F=0;
   427  000240  92F0               	bcf	240,1,c	;volatile
   428  000242                     
   429                           ;main.c: 99:     INTCON2bits.INTEDG2=1;
   430  000242  88F1               	bsf	241,4,c	;volatile
   431  000244  0012               	return		;funcret
   432  000246                     __end_of_Config_Interrupt_priority:
   433                           	callstack 0
   434                           
   435 ;; *************** function _Config_Clock *****************
   436 ;; Defined at:
   437 ;;		line 43 in file "main.c"
   438 ;; Parameters:    Size  Location     Type
   439 ;;		None
   440 ;; Auto vars:     Size  Location     Type
   441 ;;		None
   442 ;; Return value:  Size  Location     Type
   443 ;;                  1    wreg      void 
   444 ;; Registers used:
   445 ;;		wreg, status,2
   446 ;; Tracked objects:
   447 ;;		On entry : 0/0
   448 ;;		On exit  : 0/0
   449 ;;		Unchanged: 0/0
   450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   451 ;;      Params:         0       0       0       0       0       0       0       0       0
   452 ;;      Locals:         0       0       0       0       0       0       0       0       0
   453 ;;      Temps:          0       0       0       0       0       0       0       0       0
   454 ;;      Totals:         0       0       0       0       0       0       0       0       0
   455 ;;Total ram usage:        0 bytes
   456 ;; Hardware stack levels used: 1
   457 ;; Hardware stack levels required when called: 4
   458 ;; This function calls:
   459 ;;		Nothing
   460 ;; This function is called by:
   461 ;;		_main
   462 ;; This function uses a non-reentrant model
   463 ;;
   464                           
   465                           	psect	text3
   466  00025A                     __ptext3:
   467                           	callstack 0
   468  00025A                     _Config_Clock:
   469                           	callstack 26
   470  00025A                     
   471                           ;main.c: 44:     OSCCONbits.IRCF=0b111;
   472  00025A  0E70               	movlw	112
   473  00025C  12D3               	iorwf	211,f,c	;volatile
   474                           
   475                           ;main.c: 45:     OSCCONbits.SCS=0b10;
   476  00025E  50D3               	movf	211,w,c	;volatile
   477  000260  0BFC               	andlw	-4
   478  000262  0902               	iorlw	2
   479  000264  6ED3               	movwf	211,c	;volatile
   480  000266  0012               	return		;funcret
   481  000268                     __end_of_Config_Clock:
   482                           	callstack 0
   483                           
   484 ;; *************** function _ISR2 *****************
   485 ;; Defined at:
   486 ;;		line 138 in file "main.c"
   487 ;; Parameters:    Size  Location     Type
   488 ;;		None
   489 ;; Auto vars:     Size  Location     Type
   490 ;;		None
   491 ;; Return value:  Size  Location     Type
   492 ;;                  1    wreg      void 
   493 ;; Registers used:
   494 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   495 ;; Tracked objects:
   496 ;;		On entry : 0/0
   497 ;;		On exit  : 0/0
   498 ;;		Unchanged: 0/0
   499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   500 ;;      Params:         0       0       0       0       0       0       0       0       0
   501 ;;      Locals:         0       0       0       0       0       0       0       0       0
   502 ;;      Temps:          5       0       0       0       0       0       0       0       0
   503 ;;      Totals:         5       0       0       0       0       0       0       0       0
   504 ;;Total ram usage:        5 bytes
   505 ;; Hardware stack levels used: 1
   506 ;; Hardware stack levels required when called: 3
   507 ;; This function calls:
   508 ;;		_MostrarDisplay02
   509 ;; This function is called by:
   510 ;;		Interrupt level 1
   511 ;; This function uses a non-reentrant model
   512 ;;
   513                           
   514                           	psect	intcodelo
   515  000018                     __pintcodelo:
   516                           	callstack 0
   517  000018                     _ISR2:
   518                           	callstack 26
   519                           
   520                           ;incstack = 0
   521  000018  8021               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   522  00001A  CFD8 F011          	movff	status,??_ISR2
   523  00001E  CFE8 F012          	movff	wreg,??_ISR2+1
   524  000022  CFE0 F013          	movff	bsr,??_ISR2+2
   525  000026  CFD9 F014          	movff	fsr2l,??_ISR2+3
   526  00002A  CFDA F015          	movff	fsr2h,??_ISR2+4
   527  00002E                     
   528                           ;main.c: 139:     if(INTCON3bits.INT1F){
   529  00002E  A0F0               	btfss	240,0,c	;volatile
   530  000030  EF1C  F000         	goto	i1u21_21
   531  000034  EF1E  F000         	goto	i1u21_20
   532  000038                     i1u21_21:
   533  000038  EF27  F000         	goto	i1l137
   534  00003C                     i1u21_20:
   535  00003C                     
   536                           ;main.c: 140:         INTCON3bits.INT1F=0;
   537  00003C  90F0               	bcf	240,0,c	;volatile
   538  00003E                     
   539                           ;main.c: 141:         MostrarDisplay02(Display7segDecoded,sizeof(Display7segDecoded)/siz
      +                          eof(Display7segDecoded[0]));
   540  00003E  0E16               	movlw	low _Display7segDecoded
   541  000040  6E0B               	movwf	MostrarDisplay02@array^0,c
   542  000042  0E00               	movlw	high _Display7segDecoded
   543  000044  6E0C               	movwf	(MostrarDisplay02@array+1)^0,c
   544  000046  0E0A               	movlw	10
   545  000048  6E0D               	movwf	MostrarDisplay02@size_array^0,c
   546  00004A  EC99  F000         	call	_MostrarDisplay02	;wreg free
   547  00004E                     i1l137:
   548  00004E  C015  FFDA         	movff	??_ISR2+4,fsr2h
   549  000052  C014  FFD9         	movff	??_ISR2+3,fsr2l
   550  000056  C013  FFE0         	movff	??_ISR2+2,bsr
   551  00005A  C012  FFE8         	movff	??_ISR2+1,wreg
   552  00005E  C011  FFD8         	movff	??_ISR2,status
   553  000062  9021               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   554  000064  0010               	retfie	
   555  000066                     __end_of_ISR2:
   556                           	callstack 0
   557                           
   558 ;; *************** function _MostrarDisplay02 *****************
   559 ;; Defined at:
   560 ;;		line 111 in file "main.c"
   561 ;; Parameters:    Size  Location     Type
   562 ;;  array           2   10[COMRAM] PTR unsigned char 
   563 ;;		 -> Display7segDecoded(10), 
   564 ;;  size_array      1   12[COMRAM] unsigned char 
   565 ;; Auto vars:     Size  Location     Type
   566 ;;  i               1   15[COMRAM] unsigned char 
   567 ;; Return value:  Size  Location     Type
   568 ;;                  1    wreg      void 
   569 ;; Registers used:
   570 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   571 ;; Tracked objects:
   572 ;;		On entry : 0/0
   573 ;;		On exit  : 0/0
   574 ;;		Unchanged: 0/0
   575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   576 ;;      Params:         3       0       0       0       0       0       0       0       0
   577 ;;      Locals:         1       0       0       0       0       0       0       0       0
   578 ;;      Temps:          2       0       0       0       0       0       0       0       0
   579 ;;      Totals:         6       0       0       0       0       0       0       0       0
   580 ;;Total ram usage:        6 bytes
   581 ;; Hardware stack levels used: 1
   582 ;; Hardware stack levels required when called: 2
   583 ;; This function calls:
   584 ;;		Nothing
   585 ;; This function is called by:
   586 ;;		_ISR2
   587 ;; This function uses a non-reentrant model
   588 ;;
   589                           
   590                           	psect	text5
   591  000132                     __ptext5:
   592                           	callstack 0
   593  000132                     _MostrarDisplay02:
   594                           	callstack 26
   595  000132                     
   596                           ;main.c: 112:     for(uint8_t i=0;i<size_array;i++){
   597  000132  0E00               	movlw	0
   598  000134  6E10               	movwf	MostrarDisplay02@i^0,c
   599  000136  EFB1  F000         	goto	i1l1033
   600  00013A                     i1l1027:
   601                           
   602                           ;main.c: 113:         LATD = array[i];
   603  00013A  5010               	movf	MostrarDisplay02@i^0,w,c
   604  00013C  240B               	addwf	MostrarDisplay02@array^0,w,c
   605  00013E  6ED9               	movwf	fsr2l,c
   606  000140  0E00               	movlw	0
   607  000142  200C               	addwfc	(MostrarDisplay02@array+1)^0,w,c
   608  000144  6EDA               	movwf	fsr2h,c
   609  000146  50DF               	movf	indf2,w,c
   610  000148  6E8C               	movwf	140,c	;volatile
   611  00014A                     
   612                           ;main.c: 114:         _delay((unsigned long)((500)*(16000000UL/4000.0)));
   613  00014A  0E0B               	movlw	11
   614  00014C  6E0F               	movwf	(??_MostrarDisplay02+1)^0,c
   615  00014E  0E26               	movlw	38
   616  000150  6E0E               	movwf	??_MostrarDisplay02^0,c
   617  000152  0E5E               	movlw	94
   618  000154                     i1u22_27:
   619  000154  2EE8               	decfsz	wreg,f,c
   620  000156  D7FE               	bra	i1u22_27
   621  000158  2E0E               	decfsz	??_MostrarDisplay02^0,f,c
   622  00015A  D7FC               	bra	i1u22_27
   623  00015C  2E0F               	decfsz	(??_MostrarDisplay02+1)^0,f,c
   624  00015E  D7FA               	bra	i1u22_27
   625  000160                     
   626                           ;main.c: 115:     }
   627  000160  2A10               	incf	MostrarDisplay02@i^0,f,c
   628  000162                     i1l1033:
   629  000162  500D               	movf	MostrarDisplay02@size_array^0,w,c
   630  000164  5C10               	subwf	MostrarDisplay02@i^0,w,c
   631  000166  A0D8               	btfss	status,0,c
   632  000168  EFB8  F000         	goto	i1u16_21
   633  00016C  EFBA  F000         	goto	i1u16_20
   634  000170                     i1u16_21:
   635  000170  EF9D  F000         	goto	i1l1027
   636  000174                     i1u16_20:
   637  000174                     
   638                           ;main.c: 116:     LATD = array[0];
   639  000174  C00B  FFD9         	movff	MostrarDisplay02@array,fsr2l
   640  000178  C00C  FFDA         	movff	MostrarDisplay02@array+1,fsr2h
   641  00017C  50DF               	movf	indf2,w,c
   642  00017E  6E8C               	movwf	140,c	;volatile
   643  000180  0012               	return		;funcret
   644  000182                     __end_of_MostrarDisplay02:
   645                           	callstack 0
   646                           
   647 ;; *************** function _ISR1 *****************
   648 ;; Defined at:
   649 ;;		line 126 in file "main.c"
   650 ;; Parameters:    Size  Location     Type
   651 ;;		None
   652 ;; Auto vars:     Size  Location     Type
   653 ;;		None
   654 ;; Return value:  Size  Location     Type
   655 ;;                  1    wreg      void 
   656 ;; Registers used:
   657 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   658 ;; Tracked objects:
   659 ;;		On entry : 0/0
   660 ;;		On exit  : 0/0
   661 ;;		Unchanged: 0/0
   662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   663 ;;      Params:         0       0       0       0       0       0       0       0       0
   664 ;;      Locals:         0       0       0       0       0       0       0       0       0
   665 ;;      Temps:          4       0       0       0       0       0       0       0       0
   666 ;;      Totals:         4       0       0       0       0       0       0       0       0
   667 ;;Total ram usage:        4 bytes
   668 ;; Hardware stack levels used: 1
   669 ;; Hardware stack levels required when called: 1
   670 ;; This function calls:
   671 ;;		_MostrarDisplay01
   672 ;;		_toogle_led
   673 ;; This function is called by:
   674 ;;		Interrupt level 2
   675 ;; This function uses a non-reentrant model
   676 ;;
   677                           
   678                           	psect	intcode
   679  000008                     __pintcode:
   680                           	callstack 0
   681  000008                     _ISR1:
   682                           	callstack 26
   683                           
   684                           ;incstack = 0
   685  000008  8221               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   686  00000A  EF6A  F000         	goto	int_func
   687                           
   688                           	psect	intcode_body
   689  0000D4                     __pintcode_body:
   690                           	callstack 26
   691  0000D4                     int_func:
   692                           	callstack 26
   693  0000D4  CFD9 F007          	movff	fsr2l,??_ISR1
   694  0000D8  CFDA F008          	movff	fsr2h,??_ISR1+1
   695  0000DC  CFF3 F009          	movff	prodl,??_ISR1+2
   696  0000E0  CFF4 F00A          	movff	prodh,??_ISR1+3
   697  0000E4                     
   698                           ;main.c: 127:     if(INTCONbits.INT0F==1 ){
   699  0000E4  A2F2               	btfss	242,1,c	;volatile
   700  0000E6  EF77  F000         	goto	i2u19_41
   701  0000EA  EF79  F000         	goto	i2u19_40
   702  0000EE                     i2u19_41:
   703  0000EE  EF82  F000         	goto	i2l1051
   704  0000F2                     i2u19_40:
   705  0000F2                     
   706                           ;main.c: 128:         INTCONbits.INT0F=0;
   707  0000F2  92F2               	bcf	242,1,c	;volatile
   708  0000F4                     
   709                           ;main.c: 129:         MostrarDisplay01(Display7segDecoded,sizeof(Display7segDecoded)/siz
      +                          eof(Display7segDecoded[0]));
   710  0000F4  0E16               	movlw	low _Display7segDecoded
   711  0000F6  6E01               	movwf	MostrarDisplay01@array^0,c
   712  0000F8  0E00               	movlw	high _Display7segDecoded
   713  0000FA  6E02               	movwf	(MostrarDisplay01@array+1)^0,c
   714  0000FC  0E0A               	movlw	10
   715  0000FE  6E03               	movwf	MostrarDisplay01@size_array^0,c
   716  000100  ECC1  F000         	call	_MostrarDisplay01	;wreg free
   717  000104                     i2l1051:
   718                           
   719                           ;main.c: 132:     if(INTCON3bits.INT2F==1 ){
   720  000104  A2F0               	btfss	240,1,c	;volatile
   721  000106  EF87  F000         	goto	i2u20_41
   722  00010A  EF89  F000         	goto	i2u20_40
   723  00010E                     i2u20_41:
   724  00010E  EF8F  F000         	goto	i2l131
   725  000112                     i2u20_40:
   726  000112                     
   727                           ;main.c: 133:         INTCON3bits.INT2F=0;
   728  000112  92F0               	bcf	240,1,c	;volatile
   729  000114                     
   730                           ;main.c: 134:         toogle_led(0,3);
   731  000114  0E03               	movlw	3
   732  000116  6E01               	movwf	toogle_led@interacciones^0,c
   733  000118  0E00               	movlw	0
   734  00011A  EC35  F000         	call	_toogle_led
   735  00011E                     i2l131:
   736  00011E  C00A  FFF4         	movff	??_ISR1+3,prodh
   737  000122  C009  FFF3         	movff	??_ISR1+2,prodl
   738  000126  C008  FFDA         	movff	??_ISR1+1,fsr2h
   739  00012A  C007  FFD9         	movff	??_ISR1,fsr2l
   740  00012E  9221               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   741  000130  0011               	retfie		f
   742  000132                     __end_of_ISR1:
   743                           	callstack 0
   744                           
   745 ;; *************** function _toogle_led *****************
   746 ;; Defined at:
   747 ;;		line 119 in file "main.c"
   748 ;; Parameters:    Size  Location     Type
   749 ;;  pin             1    wreg     unsigned char 
   750 ;;  interaccione    1    0[COMRAM] unsigned char 
   751 ;; Auto vars:     Size  Location     Type
   752 ;;  pin             1    4[COMRAM] unsigned char 
   753 ;;  i               1    5[COMRAM] unsigned char 
   754 ;; Return value:  Size  Location     Type
   755 ;;                  1    wreg      void 
   756 ;; Registers used:
   757 ;;		wreg, status,2, status,0, prodl, prodh
   758 ;; Tracked objects:
   759 ;;		On entry : 0/0
   760 ;;		On exit  : 0/0
   761 ;;		Unchanged: 0/0
   762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   763 ;;      Params:         1       0       0       0       0       0       0       0       0
   764 ;;      Locals:         2       0       0       0       0       0       0       0       0
   765 ;;      Temps:          3       0       0       0       0       0       0       0       0
   766 ;;      Totals:         6       0       0       0       0       0       0       0       0
   767 ;;Total ram usage:        6 bytes
   768 ;; Hardware stack levels used: 1
   769 ;; This function calls:
   770 ;;		Nothing
   771 ;; This function is called by:
   772 ;;		_ISR1
   773 ;; This function uses a non-reentrant model
   774 ;;
   775                           
   776                           	psect	text7
   777  00006A                     __ptext7:
   778                           	callstack 0
   779  00006A                     _toogle_led:
   780                           	callstack 26
   781                           
   782                           ;incstack = 0
   783                           ;toogle_led@pin stored from wreg
   784  00006A  6E05               	movwf	toogle_led@pin^0,c
   785  00006C                     
   786                           ;main.c: 120:     for(uint8_t i=0;i<(interacciones*2);i++){
   787  00006C  0E00               	movlw	0
   788  00006E  6E06               	movwf	toogle_led@i^0,c
   789  000070  EF55  F000         	goto	i2l1043
   790  000074                     i2l1039:
   791                           
   792                           ;main.c: 121:         LATC^=(1<<pin);
   793  000074  C005  F002         	movff	toogle_led@pin,??_toogle_led
   794  000078  0E01               	movlw	1
   795  00007A  6E03               	movwf	(??_toogle_led+1)^0,c
   796  00007C  2A02               	incf	??_toogle_led^0,f,c
   797  00007E  EF43  F000         	goto	i2u17_44
   798  000082                     i2u17_45:
   799  000082  90D8               	bcf	status,0,c
   800  000084  3603               	rlcf	(??_toogle_led+1)^0,f,c
   801  000086                     i2u17_44:
   802  000086  2E02               	decfsz	??_toogle_led^0,f,c
   803  000088  EF41  F000         	goto	i2u17_45
   804  00008C  5003               	movf	(??_toogle_led+1)^0,w,c
   805  00008E  1A8B               	xorwf	139,f,c	;volatile
   806  000090                     
   807                           ;main.c: 122:         _delay((unsigned long)((200)*(16000000UL/4000.0)));
   808  000090  0E05               	movlw	5
   809  000092  6E03               	movwf	(??_toogle_led+1)^0,c
   810  000094  0E0F               	movlw	15
   811  000096  6E02               	movwf	??_toogle_led^0,c
   812  000098  0EF1               	movlw	241
   813  00009A                     i2u23_47:
   814  00009A  2EE8               	decfsz	wreg,f,c
   815  00009C  D7FE               	bra	i2u23_47
   816  00009E  2E02               	decfsz	??_toogle_led^0,f,c
   817  0000A0  D7FC               	bra	i2u23_47
   818  0000A2  2E03               	decfsz	(??_toogle_led+1)^0,f,c
   819  0000A4  D7FA               	bra	i2u23_47
   820  0000A6  F000               	nop	
   821                           
   822                           ;main.c: 123:     }
   823  0000A8  2A06               	incf	toogle_led@i^0,f,c
   824  0000AA                     i2l1043:
   825  0000AA  5001               	movf	toogle_led@interacciones^0,w,c
   826  0000AC  0D02               	mullw	2
   827  0000AE  5006               	movf	toogle_led@i^0,w,c
   828  0000B0  6E02               	movwf	??_toogle_led^0,c
   829  0000B2  6A03               	clrf	(??_toogle_led+1)^0,c
   830  0000B4  50F3               	movf	243,w,c
   831  0000B6  5C02               	subwf	??_toogle_led^0,w,c
   832  0000B8  5003               	movf	(??_toogle_led+1)^0,w,c
   833  0000BA  0A80               	xorlw	128
   834  0000BC  6E04               	movwf	(??_toogle_led+2)^0,c
   835  0000BE  50F4               	movf	244,w,c
   836  0000C0  0A80               	xorlw	128
   837  0000C2  5804               	subwfb	(??_toogle_led+2)^0,w,c
   838  0000C4  A0D8               	btfss	status,0,c
   839  0000C6  EF67  F000         	goto	i2u18_41
   840  0000CA  EF69  F000         	goto	i2u18_40
   841  0000CE                     i2u18_41:
   842  0000CE  EF3A  F000         	goto	i2l1039
   843  0000D2                     i2u18_40:
   844  0000D2  0012               	return		;funcret
   845  0000D4                     __end_of_toogle_led:
   846                           	callstack 0
   847                           
   848 ;; *************** function _MostrarDisplay01 *****************
   849 ;; Defined at:
   850 ;;		line 103 in file "main.c"
   851 ;; Parameters:    Size  Location     Type
   852 ;;  array           2    0[COMRAM] PTR unsigned char 
   853 ;;		 -> Display7segDecoded(10), 
   854 ;;  size_array      1    2[COMRAM] unsigned char 
   855 ;; Auto vars:     Size  Location     Type
   856 ;;  i               1    5[COMRAM] unsigned char 
   857 ;; Return value:  Size  Location     Type
   858 ;;                  1    wreg      void 
   859 ;; Registers used:
   860 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   861 ;; Tracked objects:
   862 ;;		On entry : 0/0
   863 ;;		On exit  : 0/0
   864 ;;		Unchanged: 0/0
   865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   866 ;;      Params:         3       0       0       0       0       0       0       0       0
   867 ;;      Locals:         1       0       0       0       0       0       0       0       0
   868 ;;      Temps:          2       0       0       0       0       0       0       0       0
   869 ;;      Totals:         6       0       0       0       0       0       0       0       0
   870 ;;Total ram usage:        6 bytes
   871 ;; Hardware stack levels used: 1
   872 ;; This function calls:
   873 ;;		Nothing
   874 ;; This function is called by:
   875 ;;		_ISR1
   876 ;; This function uses a non-reentrant model
   877 ;;
   878                           
   879                           	psect	text8
   880  000182                     __ptext8:
   881                           	callstack 0
   882  000182                     _MostrarDisplay01:
   883                           	callstack 26
   884  000182                     
   885                           ;main.c: 104:     for(uint8_t i=0;i<size_array;i++){
   886  000182  0E00               	movlw	0
   887  000184  6E06               	movwf	MostrarDisplay01@i^0,c
   888  000186  EFD9  F000         	goto	i2l1021
   889  00018A                     i2l1015:
   890                           
   891                           ;main.c: 105:         LATA = array[i];
   892  00018A  5006               	movf	MostrarDisplay01@i^0,w,c
   893  00018C  2401               	addwf	MostrarDisplay01@array^0,w,c
   894  00018E  6ED9               	movwf	fsr2l,c
   895  000190  0E00               	movlw	0
   896  000192  2002               	addwfc	(MostrarDisplay01@array+1)^0,w,c
   897  000194  6EDA               	movwf	fsr2h,c
   898  000196  50DF               	movf	indf2,w,c
   899  000198  6E89               	movwf	137,c	;volatile
   900  00019A                     
   901                           ;main.c: 106:         _delay((unsigned long)((500)*(16000000UL/4000.0)));
   902  00019A  0E0B               	movlw	11
   903  00019C  6E05               	movwf	(??_MostrarDisplay01+1)^0,c
   904  00019E  0E26               	movlw	38
   905  0001A0  6E04               	movwf	??_MostrarDisplay01^0,c
   906  0001A2  0E5E               	movlw	94
   907  0001A4                     i2u24_47:
   908  0001A4  2EE8               	decfsz	wreg,f,c
   909  0001A6  D7FE               	bra	i2u24_47
   910  0001A8  2E04               	decfsz	??_MostrarDisplay01^0,f,c
   911  0001AA  D7FC               	bra	i2u24_47
   912  0001AC  2E05               	decfsz	(??_MostrarDisplay01+1)^0,f,c
   913  0001AE  D7FA               	bra	i2u24_47
   914  0001B0                     
   915                           ;main.c: 107:     }
   916  0001B0  2A06               	incf	MostrarDisplay01@i^0,f,c
   917  0001B2                     i2l1021:
   918  0001B2  5003               	movf	MostrarDisplay01@size_array^0,w,c
   919  0001B4  5C06               	subwf	MostrarDisplay01@i^0,w,c
   920  0001B6  A0D8               	btfss	status,0,c
   921  0001B8  EFE0  F000         	goto	i2u15_41
   922  0001BC  EFE2  F000         	goto	i2u15_40
   923  0001C0                     i2u15_41:
   924  0001C0  EFC5  F000         	goto	i2l1015
   925  0001C4                     i2u15_40:
   926  0001C4                     
   927                           ;main.c: 108:     LATA = array[0];
   928  0001C4  C001  FFD9         	movff	MostrarDisplay01@array,fsr2l
   929  0001C8  C002  FFDA         	movff	MostrarDisplay01@array+1,fsr2h
   930  0001CC  50DF               	movf	indf2,w,c
   931  0001CE  6E89               	movwf	137,c	;volatile
   932  0001D0  0012               	return		;funcret
   933  0001D2                     __end_of_MostrarDisplay01:
   934                           	callstack 0
   935  0000                     
   936                           	psect	rparam
   937  0000                     
   938                           	psect	temp
   939  000021                     btemp:
   940                           	callstack 0
   941  000021                     	ds	1
   942  0000                     int$flags	set	btemp
   943  0000                     wtemp8	set	btemp+1
   944  0000                     ttemp5	set	btemp+1
   945  0000                     ttemp6	set	btemp+4
   946  0000                     ttemp7	set	btemp+8
   947                           
   948                           	psect	idloc
   949                           
   950                           ;Config register IDLOC0 @ 0x200000
   951                           ;	unspecified, using default values
   952  200000                     	org	2097152
   953  200000  FF                 	db	255
   954                           
   955                           ;Config register IDLOC1 @ 0x200001
   956                           ;	unspecified, using default values
   957  200001                     	org	2097153
   958  200001  FF                 	db	255
   959                           
   960                           ;Config register IDLOC2 @ 0x200002
   961                           ;	unspecified, using default values
   962  200002                     	org	2097154
   963  200002  FF                 	db	255
   964                           
   965                           ;Config register IDLOC3 @ 0x200003
   966                           ;	unspecified, using default values
   967  200003                     	org	2097155
   968  200003  FF                 	db	255
   969                           
   970                           ;Config register IDLOC4 @ 0x200004
   971                           ;	unspecified, using default values
   972  200004                     	org	2097156
   973  200004  FF                 	db	255
   974                           
   975                           ;Config register IDLOC5 @ 0x200005
   976                           ;	unspecified, using default values
   977  200005                     	org	2097157
   978  200005  FF                 	db	255
   979                           
   980                           ;Config register IDLOC6 @ 0x200006
   981                           ;	unspecified, using default values
   982  200006                     	org	2097158
   983  200006  FF                 	db	255
   984                           
   985                           ;Config register IDLOC7 @ 0x200007
   986                           ;	unspecified, using default values
   987  200007                     	org	2097159
   988  200007  FF                 	db	255
   989                           
   990                           	psect	config
   991                           
   992                           ;Config register CONFIG1L @ 0x300000
   993                           ;	PLL Selection
   994                           ;	PLLSEL = PLL4X, 4x clock multiplier
   995                           ;	PLL Enable Configuration bit
   996                           ;	CFGPLLEN = OFF, PLL Disabled (firmware controlled)
   997                           ;	CPU System Clock Postscaler
   998                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
   999                           ;	Low Speed USB mode with 48 MHz system clock
  1000                           ;	LS48MHZ = SYS24X4, System clock at 24 MHz, USB clock divider is set to 4
  1001  300000                     	org	3145728
  1002  300000  00                 	db	0
  1003                           
  1004                           ;Config register CONFIG1H @ 0x300001
  1005                           ;	Oscillator Selection
  1006                           ;	FOSC = INTOSCIO, Internal oscillator
  1007                           ;	Primary Oscillator Shutdown
  1008                           ;	PCLKEN = ON, Primary oscillator enabled
  1009                           ;	Fail-Safe Clock Monitor
  1010                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1011                           ;	Internal/External Oscillator Switchover
  1012                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1013  300001                     	org	3145729
  1014  300001  28                 	db	40
  1015                           
  1016                           ;Config register CONFIG2L @ 0x300002
  1017                           ;	Power-up Timer Enable
  1018                           ;	nPWRTEN = ON, Power up timer enabled
  1019                           ;	Brown-out Reset Enable
  1020                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
  1021                           ;	Brown-out Reset Voltage
  1022                           ;	BORV = 190, BOR set to 1.9V nominal
  1023                           ;	Low-Power Brown-out Reset
  1024                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  1025  300002                     	org	3145730
  1026  300002  5E                 	db	94
  1027                           
  1028                           ;Config register CONFIG2H @ 0x300003
  1029                           ;	Watchdog Timer Enable bits
  1030                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  1031                           ;	Watchdog Timer Postscaler
  1032                           ;	WDTPS = 32768, 1:32768
  1033  300003                     	org	3145731
  1034  300003  3C                 	db	60
  1035                           
  1036                           ; Padding undefined space
  1037  300004                     	org	3145732
  1038  300004  FF                 	db	255
  1039                           
  1040                           ;Config register CONFIG3H @ 0x300005
  1041                           ;	CCP2 MUX bit
  1042                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  1043                           ;	PORTB A/D Enable bit
  1044                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  1045                           ;	Timer3 Clock Input MUX bit
  1046                           ;	T3CMX = RC0, T3CKI function is on RC0
  1047                           ;	SDO Output MUX bit
  1048                           ;	SDOMX = RB3, SDO function is on RB3
  1049                           ;	Master Clear Reset Pin Enable
  1050                           ;	MCLRE = OFF, RE3 input pin enabled; external MCLR disabled
  1051  300005                     	org	3145733
  1052  300005  53                 	db	83
  1053                           
  1054                           ;Config register CONFIG4L @ 0x300006
  1055                           ;	Stack Full/Underflow Reset
  1056                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1057                           ;	Single-Supply ICSP Enable bit
  1058                           ;	LVP = OFF, Single-Supply ICSP disabled
  1059                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  1060                           ;	ICPRT = OFF, ICPORT disabled
  1061                           ;	Extended Instruction Set Enable bit
  1062                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  1063                           ;	Background Debugger Enable bit
  1064                           ;	DEBUG = 0x1, unprogrammed default
  1065  300006                     	org	3145734
  1066  300006  81                 	db	129
  1067                           
  1068                           ; Padding undefined space
  1069  300007                     	org	3145735
  1070  300007  FF                 	db	255
  1071                           
  1072                           ;Config register CONFIG5L @ 0x300008
  1073                           ;	Block 0 Code Protect
  1074                           ;	CP0 = OFF, Block 0 is not code-protected
  1075                           ;	Block 1 Code Protect
  1076                           ;	CP1 = OFF, Block 1 is not code-protected
  1077                           ;	Block 2 Code Protect
  1078                           ;	CP2 = OFF, Block 2 is not code-protected
  1079                           ;	Block 3 Code Protect
  1080                           ;	CP3 = OFF, Block 3 is not code-protected
  1081  300008                     	org	3145736
  1082  300008  0F                 	db	15
  1083                           
  1084                           ;Config register CONFIG5H @ 0x300009
  1085                           ;	Boot Block Code Protect
  1086                           ;	CPB = OFF, Boot block is not code-protected
  1087                           ;	Data EEPROM Code Protect
  1088                           ;	CPD = OFF, Data EEPROM is not code-protected
  1089  300009                     	org	3145737
  1090  300009  C0                 	db	192
  1091                           
  1092                           ;Config register CONFIG6L @ 0x30000A
  1093                           ;	Block 0 Write Protect
  1094                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
  1095                           ;	Block 1 Write Protect
  1096                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
  1097                           ;	Block 2 Write Protect
  1098                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
  1099                           ;	Block 3 Write Protect
  1100                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
  1101  30000A                     	org	3145738
  1102  30000A  0F                 	db	15
  1103                           
  1104                           ;Config register CONFIG6H @ 0x30000B
  1105                           ;	Configuration Registers Write Protect
  1106                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1107                           ;	Boot Block Write Protect
  1108                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
  1109                           ;	Data EEPROM Write Protect
  1110                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1111  30000B                     	org	3145739
  1112  30000B  E0                 	db	224
  1113                           
  1114                           ;Config register CONFIG7L @ 0x30000C
  1115                           ;	Block 0 Table Read Protect
  1116                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
  1117                           ;	Block 1 Table Read Protect
  1118                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
  1119                           ;	Block 2 Table Read Protect
  1120                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
  1121                           ;	Block 3 Table Read Protect
  1122                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
  1123  30000C                     	org	3145740
  1124  30000C  0F                 	db	15
  1125                           
  1126                           ;Config register CONFIG7H @ 0x30000D
  1127                           ;	Boot Block Table Read Protect
  1128                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
  1129  30000D                     	org	3145741
  1130  30000D  40                 	db	64
  1131                           tosu	equ	0xFFF
  1132                           tosh	equ	0xFFE
  1133                           tosl	equ	0xFFD
  1134                           stkptr	equ	0xFFC
  1135                           pclatu	equ	0xFFB
  1136                           pclath	equ	0xFFA
  1137                           pcl	equ	0xFF9
  1138                           tblptru	equ	0xFF8
  1139                           tblptrh	equ	0xFF7
  1140                           tblptrl	equ	0xFF6
  1141                           tablat	equ	0xFF5
  1142                           prodh	equ	0xFF4
  1143                           prodl	equ	0xFF3
  1144                           indf0	equ	0xFEF
  1145                           postinc0	equ	0xFEE
  1146                           postdec0	equ	0xFED
  1147                           preinc0	equ	0xFEC
  1148                           plusw0	equ	0xFEB
  1149                           fsr0h	equ	0xFEA
  1150                           fsr0l	equ	0xFE9
  1151                           wreg	equ	0xFE8
  1152                           indf1	equ	0xFE7
  1153                           postinc1	equ	0xFE6
  1154                           postdec1	equ	0xFE5
  1155                           preinc1	equ	0xFE4
  1156                           plusw1	equ	0xFE3
  1157                           fsr1h	equ	0xFE2
  1158                           fsr1l	equ	0xFE1
  1159                           bsr	equ	0xFE0
  1160                           indf2	equ	0xFDF
  1161                           postinc2	equ	0xFDE
  1162                           postdec2	equ	0xFDD
  1163                           preinc2	equ	0xFDC
  1164                           plusw2	equ	0xFDB
  1165                           fsr2h	equ	0xFDA
  1166                           fsr2l	equ	0xFD9
  1167                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     21      32
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    MostrarDisplay02@array	PTR unsigned char  size(2) Largest target is 10
		 -> Display7segDecoded(COMRAM[10]), 

    MostrarDisplay01@array	PTR unsigned char  size(2) Largest target is 10
		 -> Display7segDecoded(COMRAM[10]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR2 in COMRAM

    _ISR2->_MostrarDisplay02

Critical Paths under _ISR1 in COMRAM

    _ISR1->_MostrarDisplay01
    _ISR1->_toogle_led

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR2 in BANK0

    None.

Critical Paths under _ISR1 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR2 in BANK1

    None.

Critical Paths under _ISR1 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR2 in BANK2

    None.

Critical Paths under _ISR1 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR2 in BANK3

    None.

Critical Paths under _ISR1 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR2 in BANK4

    None.

Critical Paths under _ISR1 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR2 in BANK5

    None.

Critical Paths under _ISR1 in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR2 in BANK6

    None.

Critical Paths under _ISR1 in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR2 in BANK7

    None.

Critical Paths under _ISR1 in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                       _Config_Clock
          _Config_Interrupt_priority
                        _Config_Port
 ---------------------------------------------------------------------------------
 (1) _Config_Port                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Config_Interrupt_priority                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Config_Clock                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR2                                                 5     5      0     264
                                             16 COMRAM     5     5      0
                   _MostrarDisplay02
 ---------------------------------------------------------------------------------
 (3) _MostrarDisplay02                                     6     3      3     264
                                             10 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR1                                                 4     4      0     408
                                              6 COMRAM     4     4      0
                   _MostrarDisplay01
                         _toogle_led
 ---------------------------------------------------------------------------------
 (5) _toogle_led                                           6     5      1     144
                                              0 COMRAM     6     5      1
 ---------------------------------------------------------------------------------
 (5) _MostrarDisplay01                                     6     3      3     264
                                              0 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Config_Clock
   _Config_Interrupt_priority
   _Config_Port

 _ISR2 (ROOT)
   _MostrarDisplay02

 _ISR1 (ROOT)
   _MostrarDisplay01
   _toogle_led

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      32        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     15      20       1       34.0%
BITBIGSFRhlhhl      3A      0       0      23        0.0%
BITBIGSFRhhll       1C      0       0      21        0.0%
BITBIGSFRlllhh      1B      0       0      28        0.0%
BITBIGSFRllh         E      0       0      27        0.0%
BITBIGSFRhhh         D      0       0      20        0.0%
BITBIGSFRllll        8      0       0      30        0.0%
BITBIGSFRhll         5      0       0      25        0.0%
BITBIGSFRhlhhh       2      0       0      22        0.0%
BITBIGSFRhlhl        1      0       0      24        0.0%
BITBIGSFRlllhl       1      0       0      29        0.0%
BITBIGSFRlh          1      0       0      26        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      20      31        0.0%
DATA                 0      0      20       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri Jul 08 14:33:35 2022

                               l94 0252                                 l95 0252  
                               bsr 000FE0                                l100 0266  
                              l103 0226                                l106 0244  
                              l861 01FE                                l871 0224  
                              l863 0206                                l881 0230  
                              l873 0228                                l865 0216  
                              l859 025A                                l891 023A  
                              l883 0232                                l875 022A  
                              l867 0218                                l893 023C  
                              l885 0234                                l877 022C  
                              l869 021A                                l895 023E  
                              l887 0236                                l879 022E  
                              l991 0246                                l897 0240  
                              l889 0238                                l993 024E  
                              l899 0242                                wreg 000FE8  
                             _LATA 000F89                               _LATC 000F8B  
                             _LATD 000F8C                               _ISR1 0008  
                             _ISR2 0018                               _RCON 000FD0  
                             _flag 0020                               _main 0246  
                             fsr2h 000FDA                               indf2 000FDF  
                             fsr1l 000FE1                               fsr2l 000FD9  
                             btemp 0021                               prodh 000FF4  
                             prodl 000FF3                               start 0066  
                     ___param_bank 000000                __end_of_Config_Port 0228  
                            ?_ISR1 0001                              ?_ISR2 0001  
                            ?_main 0001                              i1l118 0180  
                            i1l137 004E                              i2l112 01D0  
                            i2l131 011E                              i2l124 00D2  
          toogle_led@interacciones 0001                              _TRISA 000F92  
                            _TRISD 000F95                              tablat 000FF5  
                            ttemp5 0022                              ttemp6 0025  
                            ttemp7 0029                              status 000FD8  
                            wtemp8 0022                       __end_of_ISR1 0132  
                     __end_of_ISR2 0066                    __initialization 01D2  
             __end_of_Config_Clock 0268                       __end_of_main 025A  
                           ??_ISR1 0007                             ??_ISR2 0011  
                           ??_main 0016                      __activetblptr 000000  
                           _ANSELA 000F5B                             _ANSELD 000F5E  
                           i1l1031 0160                             i1l1033 0162  
                           i1l1025 0132                             i1l1035 0174  
                           i1l1027 013A                             i1l1029 014A  
                           i1l1061 003E                             i1l1057 002E  
                           i1l1059 003C                             i2l1021 01B2  
                           i2l1013 0182                             i2l1023 01C4  
                           i2l1015 018A                             i2l1017 019A  
                           i2l1041 0090                             i2l1019 01B0  
                           i2l1043 00AA                             i2l1051 0104  
                           i2l1037 006C                             i2l1053 0112  
                           i2l1045 00E4                             i2l1039 0074  
                           i2l1055 0114                             i2l1047 00F2  
                           i2l1049 00F4         MostrarDisplay01@size_array 0003  
                           _SLRCON 000F7A                        _Config_Port 01FE  
                           isa$std 000001         MostrarDisplay02@size_array 000D  
                     __pdataCOMRAM 0016                             tblptrh 000FF7  
                           tblptrl 000FF6                             tblptru 000FF8  
       ?_Config_Interrupt_priority 0001                         __accesstop 0060  
          __end_of__initialization 01F4                      ___rparam_used 000001  
                   __pcstackCOMRAM 0001              MostrarDisplay01@array 0001  
            MostrarDisplay02@array 000B  __end_of_Config_Interrupt_priority 0246  
                 _MostrarDisplay01 0182                   _MostrarDisplay02 0132  
                          i1u21_20 003C                            i1u21_21 0038  
                          i1u22_27 0154                            i1u16_20 0174  
                          i1u16_21 0170                            i2u20_40 0112  
                          i2u20_41 010E                            i2u15_40 01C4  
                          i2u15_41 01C0                            i2u23_47 009A  
                          i2u24_47 01A4                            i2u17_44 0086  
                          i2u17_45 0082                            i2u18_40 00D2  
                          i2u18_41 00CE                            i2u19_40 00F2  
                          i2u19_41 00EE                       _Config_Clock 025A  
                          __Hparam 0000                            __Lparam 0000  
                          __pcinit 01D2                 _Display7segDecoded 0016  
                          __ramtop 0800                            __ptext0 0246  
                          __ptext1 01FE                            __ptext2 0228  
                          __ptext3 025A                            __ptext5 0132  
                          __ptext7 006A                            __ptext8 0182  
                   __pintcode_body 00D4               end_of_initialization 01F4  
                     ?_Config_Port 0001                            int_func 00D4  
                          postdec1 000FE5                            postinc0 000FEE  
                    toogle_led@pin 0005                          _TRISCbits 000F94  
      ??_Config_Interrupt_priority 0016                         _toogle_led 006A  
                    __pidataCOMRAM 0268                start_initialization 01D2  
         __end_of_MostrarDisplay01 01D2           __end_of_MostrarDisplay02 0182  
        _Config_Interrupt_priority 0228                        toogle_led@i 0006  
                      __pbssCOMRAM 0020                  MostrarDisplay01@i 0006  
                MostrarDisplay02@i 0010                        ?_toogle_led 0001  
                        __pintcode 0008                        __pintcodelo 0018  
                         _LATCbits 000F8B                           _LATDbits 000F8C  
                      _INTCON2bits 000FF1                        _INTCON3bits 000FF0  
                        copy_data0 01E6                           __Hrparam 0000  
                         __Lrparam 0000                         _ANSELBbits 000F5C  
                ?_MostrarDisplay01 0001                  ?_MostrarDisplay02 000B  
               ??_MostrarDisplay01 0004                 ??_MostrarDisplay02 000E  
                         isa$xinst 000000                           int$flags 0021  
                       _INTCONbits 000FF2                      ?_Config_Clock 0001  
                         intlevel1 0000                           intlevel2 0000  
                     ??_toogle_led 0002                         _OSCCONbits 000FD3  
               __end_of_toogle_led 00D4                     ??_Config_Clock 0016  
                    ??_Config_Port 0016  
