

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Aug 11 21:34:00 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    50                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    51                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    52                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    53   000000                     
    54                           ; Version 2.35
    55                           ; Generated 05/05/2021 GMT
    56                           ; 
    57                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution. Publication is not required when
    71                           ;        this file is used in an embedded application.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC18F45K50 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89   000000                     _ADRESL	set	4035
    90   000000                     _ADRESH	set	4036
    91   000000                     _ADCON0bits	set	4034
    92   000000                     _LATDbits	set	3980
    93   000000                     _ANSELBbits	set	3932
    94   000000                     _SLRCON	set	3962
    95   000000                     _LATD	set	3980
    96   000000                     _ADCON2bits	set	4032
    97   000000                     _ADCON1bits	set	4033
    98   000000                     _OSCCONbits	set	4051
    99   000000                     _TRISBbits	set	3987
   100   000000                     _TRISD	set	3989
   101   000000                     _ANSELD	set	3934
   102                           
   103                           	psect	smallconst
   104   000800                     __psmallconst:
   105                           	callstack 0
   106   000800  00                 	db	0
   107   000801                     STR_2:
   108   000801  4D                 	db	77	;'M'
   109   000802  43                 	db	67	;'C'
   110   000803  50                 	db	80	;'P'
   111   000804  3A                 	db	58	;':'
   112   000805  25                 	db	37
   113   000806  2E                 	db	46
   114   000807  31                 	db	49	;'1'
   115   000808  66                 	db	102	;'f'
   116   000809  00                 	db	0
   117   00080A                     STR_3:
   118   00080A  4C                 	db	76	;'L'
   119   00080B  44                 	db	68	;'D'
   120   00080C  52                 	db	82	;'R'
   121   00080D  3A                 	db	58	;':'
   122   00080E  25                 	db	37
   123   00080F  2E                 	db	46
   124   000810  31                 	db	49	;'1'
   125   000811  66                 	db	102	;'f'
   126   000812  00                 	db	0
   127   000813                     STR_1:
   128   000813  4C                 	db	76	;'L'
   129   000814  4D                 	db	77	;'M'
   130   000815  3A                 	db	58	;':'
   131   000816  25                 	db	37
   132   000817  2E                 	db	46
   133   000818  31                 	db	49	;'1'
   134   000819  66                 	db	102	;'f'
   135   00081A  00                 	db	0
   136   00081B                     STR_4:
   137   00081B  69                 	db	105	;'i'
   138   00081C  6E                 	db	110	;'n'
   139   00081D  66                 	db	102	;'f'
   140   00081E  00                 	db	0
   141   00081F                     STR_7:
   142   00081F  6E                 	db	110	;'n'
   143   000820  61                 	db	97	;'a'
   144   000821  6E                 	db	110	;'n'
   145   000822  00                 	db	0
   146   000823  00                 	db	0	; dummy byte at the end
   147   000000                     
   148                           ; #config settings
   149                           
   150                           	psect	cinit
   151   0032E4                     __pcinit:
   152                           	callstack 0
   153   0032E4                     start_initialization:
   154                           	callstack 0
   155   0032E4                     __initialization:
   156                           	callstack 0
   157                           
   158                           ; Clear objects allocated to BANK1 (80 bytes)
   159   0032E4  EE01  F000         	lfsr	0,__pbssBANK1
   160   0032E8  0E50               	movlw	80
   161   0032EA                     clear_0:
   162   0032EA  6AEE               	clrf	postinc0,c
   163   0032EC  06E8               	decf	wreg,f,c
   164   0032EE  E1FD               	bnz	clear_0
   165                           
   166                           ; Clear objects allocated to BANK0 (45 bytes)
   167   0032F0  EE00  F0B0         	lfsr	0,__pbssBANK0
   168   0032F4  0E2D               	movlw	45
   169   0032F6                     clear_1:
   170   0032F6  6AEE               	clrf	postinc0,c
   171   0032F8  06E8               	decf	wreg,f,c
   172   0032FA  E1FD               	bnz	clear_1
   173   0032FC                     end_of_initialization:
   174                           	callstack 0
   175   0032FC                     __end_of__initialization:
   176                           	callstack 0
   177   0032FC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   178   0032FE  6EF8               	movwf	tblptru,c
   179   003300  0100               	movlb	0
   180   003302  EFDD  F010         	goto	_main	;jump to C main() function
   181                           
   182                           	psect	bssBANK0
   183   0000B0                     __pbssBANK0:
   184                           	callstack 0
   185   0000B0                     floorf@F526:
   186                           	callstack 0
   187   0000B0                     	ds	4
   188   0000B4                     ___fpclassifyf@F465:
   189                           	callstack 0
   190   0000B4                     	ds	4
   191   0000B8                     _LDR:
   192                           	callstack 0
   193   0000B8                     	ds	4
   194   0000BC                     _MCP9700A:
   195                           	callstack 0
   196   0000BC                     	ds	4
   197   0000C0                     _LM35:
   198                           	callstack 0
   199   0000C0                     	ds	4
   200   0000C4                     _width:
   201                           	callstack 0
   202   0000C4                     	ds	2
   203   0000C6                     _prec:
   204                           	callstack 0
   205   0000C6                     	ds	2
   206   0000C8                     _flags:
   207                           	callstack 0
   208   0000C8                     	ds	1
   209   0000C9                     _str_buffeLcd:
   210                           	callstack 0
   211   0000C9                     	ds	20
   212                           
   213                           	psect	bssBANK1
   214   000100                     __pbssBANK1:
   215                           	callstack 0
   216   000100                     _dbuf:
   217                           	callstack 0
   218   000100                     	ds	80
   219                           
   220                           	psect	cstackBANK0
   221   000060                     __pcstackBANK0:
   222                           	callstack 0
   223   000060                     efgtoa@ne:
   224                           	callstack 0
   225                           
   226                           ; 2 bytes @ 0x0
   227   000060                     	ds	2
   228   000062                     efgtoa@p:
   229                           	callstack 0
   230                           
   231                           ; 2 bytes @ 0x2
   232   000062                     	ds	2
   233   000064                     efgtoa@t:
   234                           	callstack 0
   235                           
   236                           ; 2 bytes @ 0x4
   237   000064                     	ds	2
   238   000066                     _efgtoa$1029:
   239                           	callstack 0
   240                           
   241                           ; 2 bytes @ 0x6
   242   000066                     	ds	2
   243   000068                     efgtoa@pp:
   244                           	callstack 0
   245                           
   246                           ; 1 bytes @ 0x8
   247   000068                     	ds	1
   248   000069                     efgtoa@mode:
   249                           	callstack 0
   250                           
   251                           ; 1 bytes @ 0x9
   252   000069                     	ds	1
   253   00006A                     efgtoa@nmode:
   254                           	callstack 0
   255                           
   256                           ; 1 bytes @ 0xA
   257   00006A                     	ds	1
   258   00006B                     efgtoa@d:
   259                           	callstack 0
   260                           
   261                           ; 2 bytes @ 0xB
   262   00006B                     	ds	2
   263   00006D                     efgtoa@m:
   264                           	callstack 0
   265                           
   266                           ; 2 bytes @ 0xD
   267   00006D                     	ds	2
   268   00006F                     efgtoa@e:
   269                           	callstack 0
   270                           
   271                           ; 2 bytes @ 0xF
   272   00006F                     	ds	2
   273   000071                     efgtoa@w:
   274                           	callstack 0
   275                           
   276                           ; 2 bytes @ 0x11
   277   000071                     	ds	2
   278   000073                     efgtoa@ou:
   279                           	callstack 0
   280                           
   281                           ; 4 bytes @ 0x13
   282   000073                     	ds	4
   283   000077                     efgtoa@i:
   284                           	callstack 0
   285                           
   286                           ; 2 bytes @ 0x17
   287   000077                     	ds	2
   288   000079                     efgtoa@h:
   289                           	callstack 0
   290                           
   291                           ; 4 bytes @ 0x19
   292   000079                     	ds	4
   293   00007D                     efgtoa@l:
   294                           	callstack 0
   295                           
   296                           ; 4 bytes @ 0x1D
   297   00007D                     	ds	4
   298   000081                     efgtoa@sign:
   299                           	callstack 0
   300                           
   301                           ; 1 bytes @ 0x21
   302   000081                     	ds	1
   303   000082                     efgtoa@n:
   304                           	callstack 0
   305                           
   306                           ; 2 bytes @ 0x22
   307   000082                     	ds	2
   308   000084                     efgtoa@g:
   309                           	callstack 0
   310                           
   311                           ; 4 bytes @ 0x24
   312   000084                     	ds	4
   313   000088                     efgtoa@u:
   314                           	callstack 0
   315                           
   316                           ; 4 bytes @ 0x28
   317   000088                     	ds	4
   318   00008C                     vfpfcnvrt@convarg:
   319                           	callstack 0
   320                           
   321                           ; 8 bytes @ 0x2C
   322   00008C                     	ds	8
   323   000094                     vfpfcnvrt@c:
   324                           	callstack 0
   325                           
   326                           ; 1 bytes @ 0x34
   327   000094                     	ds	1
   328   000095                     vfpfcnvrt@cp:
   329                           	callstack 0
   330                           
   331                           ; 2 bytes @ 0x35
   332   000095                     	ds	2
   333   000097                     ?_sprintf:
   334                           	callstack 0
   335   000097                     sprintf@s:
   336                           	callstack 0
   337                           
   338                           ; 2 bytes @ 0x37
   339   000097                     	ds	2
   340   000099                     sprintf@fmt:
   341                           	callstack 0
   342                           
   343                           ; 2 bytes @ 0x39
   344   000099                     	ds	6
   345   00009F                     sprintf@ap:
   346                           	callstack 0
   347                           
   348                           ; 2 bytes @ 0x3F
   349   00009F                     	ds	2
   350   0000A1                     sprintf@f:
   351                           	callstack 0
   352                           
   353                           ; 11 bytes @ 0x41
   354   0000A1                     	ds	11
   355   0000AC                     _main$1366:
   356                           	callstack 0
   357                           
   358                           ; 4 bytes @ 0x4C
   359   0000AC                     	ds	4
   360                           
   361                           	psect	cstackCOMRAM
   362   000001                     __pcstackCOMRAM:
   363                           	callstack 0
   364   000001                     ?___fpclassifyf:
   365                           	callstack 0
   366   000001                     ?_isdigit:
   367                           	callstack 0
   368   000001                     ?_isspace:
   369                           	callstack 0
   370   000001                     ?_ADC_Read:
   371                           	callstack 0
   372   000001                     ?___wmul:
   373                           	callstack 0
   374   000001                     ?___fldiv:
   375                           	callstack 0
   376   000001                     ?_labs:
   377                           	callstack 0
   378   000001                     ?___flneg:
   379                           	callstack 0
   380   000001                     ?___fltol:
   381                           	callstack 0
   382   000001                     Lcd_Port@a:
   383                           	callstack 0
   384   000001                     ___wmul@multiplier:
   385                           	callstack 0
   386   000001                     isdigit@c:
   387                           	callstack 0
   388   000001                     isspace@c:
   389                           	callstack 0
   390   000001                     memcpy@d1:
   391                           	callstack 0
   392   000001                     fputc@c:
   393                           	callstack 0
   394   000001                     strcpy@dest:
   395                           	callstack 0
   396   000001                     ___fleq@ff1:
   397                           	callstack 0
   398   000001                     ___flneg@f1:
   399                           	callstack 0
   400   000001                     ___fltol@f1:
   401                           	callstack 0
   402   000001                     ___fldiv@b:
   403                           	callstack 0
   404   000001                     ___fpclassifyf@x:
   405                           	callstack 0
   406   000001                     labs@a:
   407                           	callstack 0
   408                           
   409                           ; 4 bytes @ 0x0
   410   000001                     	ds	1
   411   000002                     ??_Lcd_Cmd:
   412   000002                     Lcd_Write_Char@temp:
   413                           	callstack 0
   414                           
   415                           ; 1 bytes @ 0x1
   416   000002                     	ds	1
   417   000003                     ??_isdigit:
   418   000003                     ??_isspace:
   419   000003                     ??_ADC_Read:
   420   000003                     Lcd_Cmd@a:
   421                           	callstack 0
   422   000003                     Lcd_Write_Char@y:
   423                           	callstack 0
   424   000003                     ___wmul@multiplicand:
   425                           	callstack 0
   426   000003                     memcpy@s1:
   427                           	callstack 0
   428   000003                     fputc@fp:
   429                           	callstack 0
   430   000003                     strcpy@src:
   431                           	callstack 0
   432                           
   433                           ; 2 bytes @ 0x2
   434   000003                     	ds	1
   435   000004                     ??_Lcd_Init:
   436   000004                     Lcd_Set_Cursor@b:
   437                           	callstack 0
   438   000004                     Lcd_Write_Char@a:
   439                           	callstack 0
   440                           
   441                           ; 1 bytes @ 0x3
   442   000004                     	ds	1
   443   000005                     ??_fputc:
   444   000005                     ??___fpclassifyf:
   445   000005                     ??_labs:
   446   000005                     ??___fltol:
   447   000005                     ADC_Read@channel:
   448                           	callstack 0
   449   000005                     Lcd_Set_Cursor@a:
   450                           	callstack 0
   451   000005                     _isspace$1107:
   452                           	callstack 0
   453   000005                     Lcd_Write_String@a:
   454                           	callstack 0
   455   000005                     ___wmul@product:
   456                           	callstack 0
   457   000005                     memcpy@n:
   458                           	callstack 0
   459   000005                     strcpy@s:
   460                           	callstack 0
   461   000005                     ___fleq@ff2:
   462                           	callstack 0
   463   000005                     ___fldiv@a:
   464                           	callstack 0
   465                           
   466                           ; 4 bytes @ 0x4
   467   000005                     	ds	1
   468   000006                     ?___xxtofl:
   469                           	callstack 0
   470   000006                     Lcd_Set_Cursor@z:
   471                           	callstack 0
   472   000006                     ___xxtofl@val:
   473                           	callstack 0
   474                           
   475                           ; 4 bytes @ 0x5
   476   000006                     	ds	1
   477   000007                     ?_atoi:
   478                           	callstack 0
   479   000007                     Lcd_Set_Cursor@y:
   480                           	callstack 0
   481   000007                     Lcd_Write_String@i:
   482                           	callstack 0
   483   000007                     atoi@s:
   484                           	callstack 0
   485   000007                     memcpy@d:
   486                           	callstack 0
   487   000007                     strcpy@d:
   488                           	callstack 0
   489                           
   490                           ; 2 bytes @ 0x6
   491   000007                     	ds	1
   492   000008                     Lcd_Set_Cursor@temp:
   493                           	callstack 0
   494                           
   495                           ; 1 bytes @ 0x7
   496   000008                     	ds	1
   497   000009                     ??___fldiv:
   498   000009                     ??_atoi:
   499   000009                     ??___fleq:
   500   000009                     ___fltol@sign1:
   501                           	callstack 0
   502   000009                     ___fpclassifyf@e:
   503                           	callstack 0
   504   000009                     memcpy@s:
   505                           	callstack 0
   506                           
   507                           ; 2 bytes @ 0x8
   508   000009                     	ds	1
   509   00000A                     ??___xxtofl:
   510   00000A                     ___fltol@exp1:
   511                           	callstack 0
   512   00000A                     fputs@s:
   513                           	callstack 0
   514                           
   515                           ; 2 bytes @ 0x9
   516   00000A                     	ds	1
   517   00000B                     memcpy@tmp:
   518                           	callstack 0
   519   00000B                     ___fpclassifyf@u:
   520                           	callstack 0
   521                           
   522                           ; 4 bytes @ 0xA
   523   00000B                     	ds	1
   524   00000C                     atoi@neg:
   525                           	callstack 0
   526   00000C                     fputs@fp:
   527                           	callstack 0
   528                           
   529                           ; 2 bytes @ 0xB
   530   00000C                     	ds	1
   531   00000D                     ___fldiv@rem:
   532                           	callstack 0
   533                           
   534                           ; 4 bytes @ 0xC
   535   00000D                     	ds	1
   536   00000E                     ___xxtofl@sign:
   537                           	callstack 0
   538   00000E                     fputs@c:
   539                           	callstack 0
   540   00000E                     atoi@n:
   541                           	callstack 0
   542                           
   543                           ; 2 bytes @ 0xD
   544   00000E                     	ds	1
   545   00000F                     ___xxtofl@exp:
   546                           	callstack 0
   547   00000F                     fputs@i:
   548                           	callstack 0
   549                           
   550                           ; 2 bytes @ 0xE
   551   00000F                     	ds	1
   552   000010                     ___xxtofl@arg:
   553                           	callstack 0
   554                           
   555                           ; 4 bytes @ 0xF
   556   000010                     	ds	1
   557   000011                     ___fldiv@sign:
   558                           	callstack 0
   559   000011                     pad@fp:
   560                           	callstack 0
   561                           
   562                           ; 2 bytes @ 0x10
   563   000011                     	ds	1
   564   000012                     ___fldiv@new_exp:
   565                           	callstack 0
   566                           
   567                           ; 2 bytes @ 0x11
   568   000012                     	ds	1
   569   000013                     pad@buf:
   570                           	callstack 0
   571                           
   572                           ; 2 bytes @ 0x12
   573   000013                     	ds	1
   574   000014                     ?___flmul:
   575                           	callstack 0
   576   000014                     ___fldiv@grs:
   577                           	callstack 0
   578   000014                     ___flmul@b:
   579                           	callstack 0
   580                           
   581                           ; 4 bytes @ 0x13
   582   000014                     	ds	1
   583   000015                     pad@p:
   584                           	callstack 0
   585                           
   586                           ; 2 bytes @ 0x14
   587   000015                     	ds	2
   588   000017                     ??_pad:
   589                           
   590                           ; 1 bytes @ 0x16
   591   000017                     	ds	1
   592   000018                     ___fldiv@bexp:
   593                           	callstack 0
   594   000018                     pad@i:
   595                           	callstack 0
   596   000018                     ___flmul@a:
   597                           	callstack 0
   598                           
   599                           ; 4 bytes @ 0x17
   600   000018                     	ds	1
   601   000019                     ___fldiv@aexp:
   602                           	callstack 0
   603                           
   604                           ; 1 bytes @ 0x18
   605   000019                     	ds	1
   606   00001A                     ?_floorf:
   607                           	callstack 0
   608   00001A                     pad@w:
   609                           	callstack 0
   610   00001A                     floorf@x:
   611                           	callstack 0
   612                           
   613                           ; 4 bytes @ 0x19
   614   00001A                     	ds	2
   615   00001C                     ??___flmul:
   616                           
   617                           ; 1 bytes @ 0x1B
   618   00001C                     	ds	2
   619   00001E                     ??_floorf:
   620                           
   621                           ; 1 bytes @ 0x1D
   622   00001E                     	ds	2
   623   000020                     ___flmul@sign:
   624                           	callstack 0
   625                           
   626                           ; 1 bytes @ 0x1F
   627   000020                     	ds	1
   628   000021                     ___flmul@grs:
   629                           	callstack 0
   630                           
   631                           ; 4 bytes @ 0x20
   632   000021                     	ds	3
   633   000024                     floorf@m:
   634                           	callstack 0
   635                           
   636                           ; 4 bytes @ 0x23
   637   000024                     	ds	1
   638   000025                     ___flmul@aexp:
   639                           	callstack 0
   640                           
   641                           ; 1 bytes @ 0x24
   642   000025                     	ds	1
   643   000026                     ___flmul@bexp:
   644                           	callstack 0
   645                           
   646                           ; 1 bytes @ 0x25
   647   000026                     	ds	1
   648   000027                     ___flmul@prod:
   649                           	callstack 0
   650                           
   651                           ; 4 bytes @ 0x26
   652   000027                     	ds	1
   653   000028                     floorf@e:
   654                           	callstack 0
   655                           
   656                           ; 2 bytes @ 0x27
   657   000028                     	ds	2
   658   00002A                     floorf@u:
   659                           	callstack 0
   660                           
   661                           ; 4 bytes @ 0x29
   662   00002A                     	ds	1
   663   00002B                     ___flmul@temp:
   664                           	callstack 0
   665                           
   666                           ; 2 bytes @ 0x2A
   667   00002B                     	ds	2
   668   00002D                     ?___fladd:
   669                           	callstack 0
   670   00002D                     ___flge@ff1:
   671                           	callstack 0
   672   00002D                     ___fladd@b:
   673                           	callstack 0
   674                           
   675                           ; 4 bytes @ 0x2C
   676   00002D                     	ds	4
   677   000031                     ___flge@ff2:
   678                           	callstack 0
   679   000031                     ___fladd@a:
   680                           	callstack 0
   681                           
   682                           ; 4 bytes @ 0x30
   683   000031                     	ds	4
   684   000035                     ??___fladd:
   685   000035                     ??___flge:
   686                           
   687                           ; 1 bytes @ 0x34
   688   000035                     	ds	4
   689   000039                     ___fladd@signs:
   690                           	callstack 0
   691                           
   692                           ; 1 bytes @ 0x38
   693   000039                     	ds	1
   694   00003A                     ___fladd@aexp:
   695                           	callstack 0
   696                           
   697                           ; 1 bytes @ 0x39
   698   00003A                     	ds	1
   699   00003B                     ___fladd@bexp:
   700                           	callstack 0
   701                           
   702                           ; 1 bytes @ 0x3A
   703   00003B                     	ds	1
   704   00003C                     ___fladd@grs:
   705                           	callstack 0
   706                           
   707                           ; 1 bytes @ 0x3B
   708   00003C                     	ds	1
   709   00003D                     ?___flsub:
   710                           	callstack 0
   711   00003D                     ___flsub@b:
   712                           	callstack 0
   713                           
   714                           ; 4 bytes @ 0x3C
   715   00003D                     	ds	4
   716   000041                     ___flsub@a:
   717                           	callstack 0
   718                           
   719                           ; 4 bytes @ 0x40
   720   000041                     	ds	4
   721   000045                     efgtoa@fp:
   722                           	callstack 0
   723                           
   724                           ; 2 bytes @ 0x44
   725   000045                     	ds	2
   726   000047                     efgtoa@f:
   727                           	callstack 0
   728                           
   729                           ; 4 bytes @ 0x46
   730   000047                     	ds	4
   731   00004B                     efgtoa@c:
   732                           	callstack 0
   733                           
   734                           ; 1 bytes @ 0x4A
   735   00004B                     	ds	1
   736   00004C                     ??_efgtoa:
   737                           
   738                           ; 1 bytes @ 0x4B
   739   00004C                     	ds	2
   740   00004E                     vfpfcnvrt@fp:
   741                           	callstack 0
   742                           
   743                           ; 2 bytes @ 0x4D
   744   00004E                     	ds	2
   745   000050                     vfpfcnvrt@fmt:
   746                           	callstack 0
   747                           
   748                           ; 2 bytes @ 0x4F
   749   000050                     	ds	2
   750   000052                     vfpfcnvrt@ap:
   751                           	callstack 0
   752                           
   753                           ; 2 bytes @ 0x51
   754   000052                     	ds	2
   755   000054                     ??_vfpfcnvrt:
   756                           
   757                           ; 1 bytes @ 0x53
   758   000054                     	ds	3
   759   000057                     ?_vfprintf:
   760                           	callstack 0
   761   000057                     vfprintf@fp:
   762                           	callstack 0
   763                           
   764                           ; 2 bytes @ 0x56
   765   000057                     	ds	2
   766   000059                     vfprintf@fmt:
   767                           	callstack 0
   768                           
   769                           ; 2 bytes @ 0x58
   770   000059                     	ds	2
   771   00005B                     vfprintf@ap:
   772                           	callstack 0
   773                           
   774                           ; 2 bytes @ 0x5A
   775   00005B                     	ds	2
   776   00005D                     vfprintf@cfmt:
   777                           	callstack 0
   778                           
   779                           ; 2 bytes @ 0x5C
   780   00005D                     	ds	2
   781   00005F                     ??_main:
   782                           
   783                           ; 1 bytes @ 0x5E
   784   00005F                     	ds	1
   785                           
   786 ;;
   787 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   788 ;;
   789 ;; *************** function _main *****************
   790 ;; Defined at:
   791 ;;		line 24 in file "main.c"
   792 ;; Parameters:    Size  Location     Type
   793 ;;		None
   794 ;; Auto vars:     Size  Location     Type
   795 ;;		None
   796 ;; Return value:  Size  Location     Type
   797 ;;                  1    wreg      void 
   798 ;; Registers used:
   799 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   800 ;; Tracked objects:
   801 ;;		On entry : 0/0
   802 ;;		On exit  : 0/0
   803 ;;		Unchanged: 0/0
   804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   805 ;;      Params:         0       0       0       0       0       0       0       0       0
   806 ;;      Locals:         0       4       0       0       0       0       0       0       0
   807 ;;      Temps:          1       0       0       0       0       0       0       0       0
   808 ;;      Totals:         1       4       0       0       0       0       0       0       0
   809 ;;Total ram usage:        5 bytes
   810 ;; Hardware stack levels required when called: 8
   811 ;; This function calls:
   812 ;;		_ADC_Init
   813 ;;		_ADC_Read
   814 ;;		_Config_Clock
   815 ;;		_Config_Port
   816 ;;		_Lcd_Clear
   817 ;;		_Lcd_Init
   818 ;;		_Lcd_Set_Cursor
   819 ;;		_Lcd_Write_String
   820 ;;		___fladd
   821 ;;		___flmul
   822 ;;		___xxtofl
   823 ;;		_sprintf
   824 ;; This function is called by:
   825 ;;		Startup code after reset
   826 ;; This function uses a non-reentrant model
   827 ;;
   828                           
   829                           	psect	text0
   830   0021BA                     __ptext0:
   831                           	callstack 0
   832   0021BA                     _main:
   833                           	callstack 23
   834   0021BA                     
   835                           ;main.c: 25:     Config_Clock();
   836   0021BA  ECB9  F019         	call	_Config_Clock	;wreg free
   837                           
   838                           ;main.c: 26:     Config_Port();
   839   0021BE  EC93  F019         	call	_Config_Port	;wreg free
   840                           
   841                           ;main.c: 27:     Lcd_Init();
   842   0021C2  EC07  F017         	call	_Lcd_Init	;wreg free
   843                           
   844                           ;main.c: 28:     Lcd_Clear();
   845   0021C6  ECB2  F019         	call	_Lcd_Clear	;wreg free
   846                           
   847                           ;main.c: 29:     ADC_Init();
   848   0021CA  ECA3  F019         	call	_ADC_Init	;wreg free
   849   0021CE                     l3612:
   850                           
   851                           ;main.c: 32:         LM35=(ADC_Read(_ADC_12)*(5.0/1024)*100);
   852   0021CE  0E00               	movlw	0
   853   0021D0  6E18               	movwf	___flmul@a^0,c
   854   0021D2  0E00               	movlw	0
   855   0021D4  6E19               	movwf	(___flmul@a+1)^0,c
   856   0021D6  0EA0               	movlw	160
   857   0021D8  6E1A               	movwf	(___flmul@a+2)^0,c
   858   0021DA  0E3B               	movlw	59
   859   0021DC  6E1B               	movwf	(___flmul@a+3)^0,c
   860   0021DE  0E0C               	movlw	12
   861   0021E0  EC2D  F019         	call	_ADC_Read
   862   0021E4  C001  F006         	movff	?_ADC_Read,___xxtofl@val
   863   0021E8  C002  F007         	movff	?_ADC_Read+1,___xxtofl@val+1
   864   0021EC  6A08               	clrf	(___xxtofl@val+2)^0,c
   865   0021EE  6A09               	clrf	(___xxtofl@val+3)^0,c
   866   0021F0  0E00               	movlw	0
   867   0021F2  EC0D  F013         	call	___xxtofl
   868   0021F6  C006  F014         	movff	?___xxtofl,___flmul@b
   869   0021FA  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
   870   0021FE  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
   871   002202  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
   872   002206  EC6F  F00B         	call	___flmul	;wreg free
   873   00220A  C014  F0AC         	movff	?___flmul,_main$1366
   874   00220E  C015  F0AD         	movff	?___flmul+1,_main$1366+1
   875   002212  C016  F0AE         	movff	?___flmul+2,_main$1366+2
   876   002216  C017  F0AF         	movff	?___flmul+3,_main$1366+3
   877   00221A                     
   878                           ;main.c: 32:         LM35=(ADC_Read(_ADC_12)*(5.0/1024)*100);
   879   00221A  C0AC  F014         	movff	_main$1366,___flmul@b
   880   00221E  C0AD  F015         	movff	_main$1366+1,___flmul@b+1
   881   002222  C0AE  F016         	movff	_main$1366+2,___flmul@b+2
   882   002226  C0AF  F017         	movff	_main$1366+3,___flmul@b+3
   883   00222A  0E00               	movlw	0
   884   00222C  6E18               	movwf	___flmul@a^0,c
   885   00222E  0E00               	movlw	0
   886   002230  6E19               	movwf	(___flmul@a+1)^0,c
   887   002232  0EC8               	movlw	200
   888   002234  6E1A               	movwf	(___flmul@a+2)^0,c
   889   002236  0E42               	movlw	66
   890   002238  6E1B               	movwf	(___flmul@a+3)^0,c
   891   00223A  EC6F  F00B         	call	___flmul	;wreg free
   892   00223E  C014  F0C0         	movff	?___flmul,_LM35
   893   002242  C015  F0C1         	movff	?___flmul+1,_LM35+1
   894   002246  C016  F0C2         	movff	?___flmul+2,_LM35+2
   895   00224A  C017  F0C3         	movff	?___flmul+3,_LM35+3
   896   00224E                     
   897                           ;main.c: 33:         MCP9700A=((ADC_Read(_ADC_10)*(5.0/1024)-0.5)*100);
   898   00224E  0E00               	movlw	0
   899   002250  6E31               	movwf	___fladd@a^0,c
   900   002252  0E00               	movlw	0
   901   002254  6E32               	movwf	(___fladd@a+1)^0,c
   902   002256  0E00               	movlw	0
   903   002258  6E33               	movwf	(___fladd@a+2)^0,c
   904   00225A  0EBF               	movlw	191
   905   00225C  6E34               	movwf	(___fladd@a+3)^0,c
   906   00225E  0E00               	movlw	0
   907   002260  6E18               	movwf	___flmul@a^0,c
   908   002262  0E00               	movlw	0
   909   002264  6E19               	movwf	(___flmul@a+1)^0,c
   910   002266  0EA0               	movlw	160
   911   002268  6E1A               	movwf	(___flmul@a+2)^0,c
   912   00226A  0E3B               	movlw	59
   913   00226C  6E1B               	movwf	(___flmul@a+3)^0,c
   914   00226E  0E0A               	movlw	10
   915   002270  EC2D  F019         	call	_ADC_Read
   916   002274  C001  F006         	movff	?_ADC_Read,___xxtofl@val
   917   002278  C002  F007         	movff	?_ADC_Read+1,___xxtofl@val+1
   918   00227C  6A08               	clrf	(___xxtofl@val+2)^0,c
   919   00227E  6A09               	clrf	(___xxtofl@val+3)^0,c
   920   002280  0E00               	movlw	0
   921   002282  EC0D  F013         	call	___xxtofl
   922   002286  C006  F014         	movff	?___xxtofl,___flmul@b
   923   00228A  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
   924   00228E  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
   925   002292  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
   926   002296  EC6F  F00B         	call	___flmul	;wreg free
   927   00229A  C014  F02D         	movff	?___flmul,___fladd@b
   928   00229E  C015  F02E         	movff	?___flmul+1,___fladd@b+1
   929   0022A2  C016  F02F         	movff	?___flmul+2,___fladd@b+2
   930   0022A6  C017  F030         	movff	?___flmul+3,___fladd@b+3
   931   0022AA  EC0F  F009         	call	___fladd	;wreg free
   932   0022AE  C02D  F0AC         	movff	?___fladd,_main$1366
   933   0022B2  C02E  F0AD         	movff	?___fladd+1,_main$1366+1
   934   0022B6  C02F  F0AE         	movff	?___fladd+2,_main$1366+2
   935   0022BA  C030  F0AF         	movff	?___fladd+3,_main$1366+3
   936   0022BE                     
   937                           ;main.c: 33:         MCP9700A=((ADC_Read(_ADC_10)*(5.0/1024)-0.5)*100);
   938   0022BE  C0AC  F014         	movff	_main$1366,___flmul@b
   939   0022C2  C0AD  F015         	movff	_main$1366+1,___flmul@b+1
   940   0022C6  C0AE  F016         	movff	_main$1366+2,___flmul@b+2
   941   0022CA  C0AF  F017         	movff	_main$1366+3,___flmul@b+3
   942   0022CE  0E00               	movlw	0
   943   0022D0  6E18               	movwf	___flmul@a^0,c
   944   0022D2  0E00               	movlw	0
   945   0022D4  6E19               	movwf	(___flmul@a+1)^0,c
   946   0022D6  0EC8               	movlw	200
   947   0022D8  6E1A               	movwf	(___flmul@a+2)^0,c
   948   0022DA  0E42               	movlw	66
   949   0022DC  6E1B               	movwf	(___flmul@a+3)^0,c
   950   0022DE  EC6F  F00B         	call	___flmul	;wreg free
   951   0022E2  C014  F0BC         	movff	?___flmul,_MCP9700A
   952   0022E6  C015  F0BD         	movff	?___flmul+1,_MCP9700A+1
   953   0022EA  C016  F0BE         	movff	?___flmul+2,_MCP9700A+2
   954   0022EE  C017  F0BF         	movff	?___flmul+3,_MCP9700A+3
   955   0022F2                     
   956                           ;main.c: 34:         LDR=ADC_Read(_ADC_8)*(5.0/1024);
   957   0022F2  0E08               	movlw	8
   958   0022F4  EC2D  F019         	call	_ADC_Read
   959   0022F8  C001  F006         	movff	?_ADC_Read,___xxtofl@val
   960   0022FC  C002  F007         	movff	?_ADC_Read+1,___xxtofl@val+1
   961   002300  6A08               	clrf	(___xxtofl@val+2)^0,c
   962   002302  6A09               	clrf	(___xxtofl@val+3)^0,c
   963   002304  0E00               	movlw	0
   964   002306  EC0D  F013         	call	___xxtofl
   965   00230A  C006  F014         	movff	?___xxtofl,___flmul@b
   966   00230E  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
   967   002312  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
   968   002316  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
   969   00231A  0E00               	movlw	0
   970   00231C  6E18               	movwf	___flmul@a^0,c
   971   00231E  0E00               	movlw	0
   972   002320  6E19               	movwf	(___flmul@a+1)^0,c
   973   002322  0EA0               	movlw	160
   974   002324  6E1A               	movwf	(___flmul@a+2)^0,c
   975   002326  0E3B               	movlw	59
   976   002328  6E1B               	movwf	(___flmul@a+3)^0,c
   977   00232A  EC6F  F00B         	call	___flmul	;wreg free
   978   00232E  C014  F0B8         	movff	?___flmul,_LDR
   979   002332  C015  F0B9         	movff	?___flmul+1,_LDR+1
   980   002336  C016  F0BA         	movff	?___flmul+2,_LDR+2
   981   00233A  C017  F0BB         	movff	?___flmul+3,_LDR+3
   982   00233E                     
   983                           ;main.c: 37:         sprintf(str_buffeLcd,"LM:%.1f",LM35);
   984   00233E  0EC9               	movlw	low _str_buffeLcd
   985   002340  0100               	movlb	0	; () banked
   986   002342  6F97               	movwf	sprintf@s& (0+255),b
   987   002344  0E00               	movlw	high _str_buffeLcd
   988   002346  6F98               	movwf	(sprintf@s+1)& (0+255),b
   989   002348  0E13               	movlw	low STR_1
   990   00234A  6F99               	movwf	sprintf@fmt& (0+255),b
   991   00234C  0E08               	movlw	high STR_1
   992   00234E  6F9A               	movwf	(sprintf@fmt+1)& (0+255),b
   993   002350  C0C0  F09B         	movff	_LM35,?_sprintf+4
   994   002354  C0C1  F09C         	movff	_LM35+1,?_sprintf+5
   995   002358  C0C2  F09D         	movff	_LM35+2,?_sprintf+6
   996   00235C  C0C3  F09E         	movff	_LM35+3,?_sprintf+7
   997   002360  ECD5  F017         	call	_sprintf	;wreg free
   998   002364                     
   999                           ;main.c: 38:         Lcd_Set_Cursor(1,1);
  1000   002364  0E01               	movlw	1
  1001   002366  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1002   002368  0E01               	movlw	1
  1003   00236A  EC74  F017         	call	_Lcd_Set_Cursor
  1004   00236E                     
  1005                           ;main.c: 39:         Lcd_Write_String(str_buffeLcd);
  1006   00236E  0EC9               	movlw	low _str_buffeLcd
  1007   002370  6E05               	movwf	Lcd_Write_String@a^0,c
  1008   002372  0E00               	movlw	high _str_buffeLcd
  1009   002374  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  1010   002376  ECD5  F018         	call	_Lcd_Write_String	;wreg free
  1011   00237A                     
  1012                           ;main.c: 41:         sprintf(str_buffeLcd,"MCP:%.1f",MCP9700A);
  1013   00237A  0EC9               	movlw	low _str_buffeLcd
  1014   00237C  0100               	movlb	0	; () banked
  1015   00237E  6F97               	movwf	sprintf@s& (0+255),b
  1016   002380  0E00               	movlw	high _str_buffeLcd
  1017   002382  6F98               	movwf	(sprintf@s+1)& (0+255),b
  1018   002384  0E01               	movlw	low STR_2
  1019   002386  6F99               	movwf	sprintf@fmt& (0+255),b
  1020   002388  0E08               	movlw	high STR_2
  1021   00238A  6F9A               	movwf	(sprintf@fmt+1)& (0+255),b
  1022   00238C  C0BC  F09B         	movff	_MCP9700A,?_sprintf+4
  1023   002390  C0BD  F09C         	movff	_MCP9700A+1,?_sprintf+5
  1024   002394  C0BE  F09D         	movff	_MCP9700A+2,?_sprintf+6
  1025   002398  C0BF  F09E         	movff	_MCP9700A+3,?_sprintf+7
  1026   00239C  ECD5  F017         	call	_sprintf	;wreg free
  1027   0023A0                     
  1028                           ;main.c: 42:         Lcd_Set_Cursor(1,9);
  1029   0023A0  0E09               	movlw	9
  1030   0023A2  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1031   0023A4  0E01               	movlw	1
  1032   0023A6  EC74  F017         	call	_Lcd_Set_Cursor
  1033   0023AA                     
  1034                           ;main.c: 43:         Lcd_Write_String(str_buffeLcd);
  1035   0023AA  0EC9               	movlw	low _str_buffeLcd
  1036   0023AC  6E05               	movwf	Lcd_Write_String@a^0,c
  1037   0023AE  0E00               	movlw	high _str_buffeLcd
  1038   0023B0  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  1039   0023B2  ECD5  F018         	call	_Lcd_Write_String	;wreg free
  1040   0023B6                     
  1041                           ;main.c: 45:         sprintf(str_buffeLcd,"LDR:%.1f",LDR);
  1042   0023B6  0EC9               	movlw	low _str_buffeLcd
  1043   0023B8  0100               	movlb	0	; () banked
  1044   0023BA  6F97               	movwf	sprintf@s& (0+255),b
  1045   0023BC  0E00               	movlw	high _str_buffeLcd
  1046   0023BE  6F98               	movwf	(sprintf@s+1)& (0+255),b
  1047   0023C0  0E0A               	movlw	low STR_3
  1048   0023C2  6F99               	movwf	sprintf@fmt& (0+255),b
  1049   0023C4  0E08               	movlw	high STR_3
  1050   0023C6  6F9A               	movwf	(sprintf@fmt+1)& (0+255),b
  1051   0023C8  C0B8  F09B         	movff	_LDR,?_sprintf+4
  1052   0023CC  C0B9  F09C         	movff	_LDR+1,?_sprintf+5
  1053   0023D0  C0BA  F09D         	movff	_LDR+2,?_sprintf+6
  1054   0023D4  C0BB  F09E         	movff	_LDR+3,?_sprintf+7
  1055   0023D8  ECD5  F017         	call	_sprintf	;wreg free
  1056   0023DC                     
  1057                           ;main.c: 46:         Lcd_Set_Cursor(2,1);
  1058   0023DC  0E01               	movlw	1
  1059   0023DE  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1060   0023E0  0E02               	movlw	2
  1061   0023E2  EC74  F017         	call	_Lcd_Set_Cursor
  1062   0023E6                     
  1063                           ;main.c: 47:         Lcd_Write_String(str_buffeLcd);
  1064   0023E6  0EC9               	movlw	low _str_buffeLcd
  1065   0023E8  6E05               	movwf	Lcd_Write_String@a^0,c
  1066   0023EA  0E00               	movlw	high _str_buffeLcd
  1067   0023EC  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  1068   0023EE  ECD5  F018         	call	_Lcd_Write_String	;wreg free
  1069   0023F2                     
  1070                           ;main.c: 48:         _delay((unsigned long)((10)*(16000000UL/4000.0)));
  1071   0023F2  0E34               	movlw	52
  1072   0023F4  6E5F               	movwf	??_main^0,c
  1073   0023F6  0EF2               	movlw	242
  1074   0023F8                     u3777:
  1075   0023F8  2EE8               	decfsz	wreg,f,c
  1076   0023FA  D7FE               	bra	u3777
  1077   0023FC  2E5F               	decfsz	??_main^0,f,c
  1078   0023FE  D7FC               	bra	u3777
  1079   002400  EFE7  F010         	goto	l3612
  1080   002404  EF00  F000         	goto	start
  1081   002408                     __end_of_main:
  1082                           	callstack 0
  1083                           
  1084 ;; *************** function _sprintf *****************
  1085 ;; Defined at:
  1086 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  1087 ;; Parameters:    Size  Location     Type
  1088 ;;  s               2   55[BANK0 ] PTR unsigned char 
  1089 ;;		 -> str_buffeLcd(20), 
  1090 ;;  fmt             2   57[BANK0 ] PTR const unsigned char 
  1091 ;;		 -> STR_3(9), STR_2(9), STR_1(8), 
  1092 ;; Auto vars:     Size  Location     Type
  1093 ;;  f              11   65[BANK0 ] struct _IO_FILE
  1094 ;;  ap              2   63[BANK0 ] PTR void [1]
  1095 ;;		 -> ?_sprintf(2), 
  1096 ;;  ret             2    0        int 
  1097 ;; Return value:  Size  Location     Type
  1098 ;;                  2   55[BANK0 ] int 
  1099 ;; Registers used:
  1100 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1101 ;; Tracked objects:
  1102 ;;		On entry : 0/0
  1103 ;;		On exit  : 0/0
  1104 ;;		Unchanged: 0/0
  1105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1106 ;;      Params:         0       8       0       0       0       0       0       0       0
  1107 ;;      Locals:         0      13       0       0       0       0       0       0       0
  1108 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1109 ;;      Totals:         0      21       0       0       0       0       0       0       0
  1110 ;;Total ram usage:       21 bytes
  1111 ;; Hardware stack levels used: 1
  1112 ;; Hardware stack levels required when called: 7
  1113 ;; This function calls:
  1114 ;;		_vfprintf
  1115 ;; This function is called by:
  1116 ;;		_main
  1117 ;; This function uses a non-reentrant model
  1118 ;;
  1119                           
  1120                           	psect	text1
  1121   002FAA                     __ptext1:
  1122                           	callstack 0
  1123   002FAA                     _sprintf:
  1124                           	callstack 23
  1125   002FAA  0E9B               	movlw	low (?_sprintf+4)
  1126   002FAC  0100               	movlb	0	; () banked
  1127   002FAE  6F9F               	movwf	sprintf@ap& (0+255),b
  1128   002FB0  0E00               	movlw	high (?_sprintf+4)
  1129   002FB2  6FA0               	movwf	(sprintf@ap+1)& (0+255),b
  1130   002FB4  C097  F0A1         	movff	sprintf@s,sprintf@f
  1131   002FB8  C098  F0A2         	movff	sprintf@s+1,sprintf@f+1
  1132   002FBC                     
  1133                           ; BSR set to: 0
  1134   002FBC  0E00               	movlw	0
  1135   002FBE  6FA5               	movwf	(sprintf@f+4)& (0+255),b
  1136   002FC0  0E00               	movlw	0
  1137   002FC2  6FA4               	movwf	(sprintf@f+3)& (0+255),b
  1138   002FC4                     
  1139                           ; BSR set to: 0
  1140   002FC4  0E00               	movlw	0
  1141   002FC6  6FAB               	movwf	(sprintf@f+10)& (0+255),b
  1142   002FC8  0E00               	movlw	0
  1143   002FCA  6FAA               	movwf	(sprintf@f+9)& (0+255),b
  1144   002FCC                     
  1145                           ; BSR set to: 0
  1146   002FCC  0EA1               	movlw	low sprintf@f
  1147   002FCE  6E57               	movwf	vfprintf@fp^0,c
  1148   002FD0  0E00               	movlw	high sprintf@f
  1149   002FD2  6E58               	movwf	(vfprintf@fp+1)^0,c
  1150   002FD4  C099  F059         	movff	sprintf@fmt,vfprintf@fmt
  1151   002FD8  C09A  F05A         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1152   002FDC  0E9F               	movlw	low sprintf@ap
  1153   002FDE  6E5B               	movwf	vfprintf@ap^0,c
  1154   002FE0  0E00               	movlw	high sprintf@ap
  1155   002FE2  6E5C               	movwf	(vfprintf@ap+1)^0,c
  1156   002FE4  EC26  F018         	call	_vfprintf	;wreg free
  1157   002FE8  0100               	movlb	0	; () banked
  1158   002FEA  51A4               	movf	(sprintf@f+3)& (0+255),w,b
  1159   002FEC  2597               	addwf	sprintf@s& (0+255),w,b
  1160   002FEE  6ED9               	movwf	fsr2l,c
  1161   002FF0  51A5               	movf	(sprintf@f+4)& (0+255),w,b
  1162   002FF2  2198               	addwfc	(sprintf@s+1)& (0+255),w,b
  1163   002FF4  6EDA               	movwf	fsr2h,c
  1164   002FF6  0E00               	movlw	0
  1165   002FF8  6EDF               	movwf	indf2,c
  1166   002FFA                     
  1167                           ; BSR set to: 0
  1168   002FFA  0012               	return		;funcret
  1169   002FFC                     __end_of_sprintf:
  1170                           	callstack 0
  1171                           
  1172 ;; *************** function _vfprintf *****************
  1173 ;; Defined at:
  1174 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1175 ;; Parameters:    Size  Location     Type
  1176 ;;  fp              2   86[COMRAM] PTR struct _IO_FILE
  1177 ;;		 -> sprintf@f(11), 
  1178 ;;  fmt             2   88[COMRAM] PTR const unsigned char 
  1179 ;;		 -> STR_3(9), STR_2(9), STR_1(8), 
  1180 ;;  ap              2   90[COMRAM] PTR PTR void 
  1181 ;;		 -> sprintf@ap(2), 
  1182 ;; Auto vars:     Size  Location     Type
  1183 ;;  cfmt            2   92[COMRAM] PTR unsigned char 
  1184 ;;		 -> STR_3(9), STR_2(9), STR_1(8), 
  1185 ;; Return value:  Size  Location     Type
  1186 ;;                  2   86[COMRAM] int 
  1187 ;; Registers used:
  1188 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1189 ;; Tracked objects:
  1190 ;;		On entry : 0/0
  1191 ;;		On exit  : 0/0
  1192 ;;		Unchanged: 0/0
  1193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1194 ;;      Params:         6       0       0       0       0       0       0       0       0
  1195 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1196 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1197 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1198 ;;Total ram usage:        8 bytes
  1199 ;; Hardware stack levels used: 1
  1200 ;; Hardware stack levels required when called: 6
  1201 ;; This function calls:
  1202 ;;		_vfpfcnvrt
  1203 ;; This function is called by:
  1204 ;;		_sprintf
  1205 ;; This function uses a non-reentrant model
  1206 ;;
  1207                           
  1208                           	psect	text2
  1209   00304C                     __ptext2:
  1210                           	callstack 0
  1211   00304C                     _vfprintf:
  1212                           	callstack 23
  1213   00304C                     
  1214                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1215   00304C  C059  F05D         	movff	vfprintf@fmt,vfprintf@cfmt
  1216   003050  C05A  F05E         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1217                           
  1218                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1219   003054  EF3A  F018         	goto	l3462
  1220   003058                     l3460:
  1221                           
  1222                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1223   003058  C057  F04E         	movff	vfprintf@fp,vfpfcnvrt@fp
  1224   00305C  C058  F04F         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1225   003060  0E5D               	movlw	low vfprintf@cfmt
  1226   003062  6E50               	movwf	vfpfcnvrt@fmt^0,c
  1227   003064  0E00               	movlw	high vfprintf@cfmt
  1228   003066  6E51               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1229   003068  C05B  F052         	movff	vfprintf@ap,vfpfcnvrt@ap
  1230   00306C  C05C  F053         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1231   003070  EC51  F00F         	call	_vfpfcnvrt	;wreg free
  1232   003074                     l3462:
  1233                           
  1234                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1235   003074  C05D  FFF6         	movff	vfprintf@cfmt,tblptrl
  1236   003078  C05E  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1237   00307C                     	if	0	;tblptru may be non-zero
  1238   00307C                     	endif
  1239   00307C                     	if	0	;tblptru may be non-zero
  1240   00307C                     	endif
  1241   00307C  0008               	tblrd		*
  1242   00307E  50F5               	movf	tablat,w,c
  1243   003080  0900               	iorlw	0
  1244   003082  A4D8               	btfss	status,2,c
  1245   003084  EF46  F018         	goto	u3621
  1246   003088  EF48  F018         	goto	u3620
  1247   00308C                     u3621:
  1248   00308C  EF2C  F018         	goto	l3460
  1249   003090                     u3620:
  1250   003090                     
  1251                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1252   003090  0E00               	movlw	0
  1253   003092  6E58               	movwf	(?_vfprintf+1)^0,c
  1254   003094  0E00               	movlw	0
  1255   003096  6E57               	movwf	?_vfprintf^0,c
  1256   003098  0012               	return		;funcret
  1257   00309A                     __end_of_vfprintf:
  1258                           	callstack 0
  1259                           
  1260 ;; *************** function _vfpfcnvrt *****************
  1261 ;; Defined at:
  1262 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1263 ;; Parameters:    Size  Location     Type
  1264 ;;  fp              2   77[COMRAM] PTR struct _IO_FILE
  1265 ;;		 -> sprintf@f(11), 
  1266 ;;  fmt             2   79[COMRAM] PTR PTR unsigned char 
  1267 ;;		 -> vfprintf@cfmt(2), 
  1268 ;;  ap              2   81[COMRAM] PTR PTR void 
  1269 ;;		 -> sprintf@ap(2), 
  1270 ;; Auto vars:     Size  Location     Type
  1271 ;;  convarg         8   44[BANK0 ] struct .
  1272 ;;  cp              2   53[BANK0 ] PTR unsigned char 
  1273 ;;		 -> STR_3(9), STR_2(9), STR_1(8), 
  1274 ;;  i               2    0        int 
  1275 ;;  done            2    0        int 
  1276 ;;  c               1   52[BANK0 ] unsigned char 
  1277 ;; Return value:  Size  Location     Type
  1278 ;;                  1    wreg      void 
  1279 ;; Registers used:
  1280 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1281 ;; Tracked objects:
  1282 ;;		On entry : 0/0
  1283 ;;		On exit  : 0/0
  1284 ;;		Unchanged: 0/0
  1285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1286 ;;      Params:         6       0       0       0       0       0       0       0       0
  1287 ;;      Locals:         0      11       0       0       0       0       0       0       0
  1288 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1289 ;;      Totals:         9      11       0       0       0       0       0       0       0
  1290 ;;Total ram usage:       20 bytes
  1291 ;; Hardware stack levels used: 1
  1292 ;; Hardware stack levels required when called: 5
  1293 ;; This function calls:
  1294 ;;		_atoi
  1295 ;;		_efgtoa
  1296 ;;		_fputc
  1297 ;;		_isdigit
  1298 ;; This function is called by:
  1299 ;;		_vfprintf
  1300 ;; This function uses a non-reentrant model
  1301 ;;
  1302                           
  1303                           	psect	text3
  1304   001EA2                     __ptext3:
  1305                           	callstack 0
  1306   001EA2                     _vfpfcnvrt:
  1307                           	callstack 23
  1308   001EA2                     
  1309                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1310   001EA2  C050  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1311   001EA6  C051  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1312   001EAA  CFDE FFF6          	movff	postinc2,tblptrl
  1313   001EAE  CFDD FFF7          	movff	postdec2,tblptrh
  1314   001EB2                     	if	0	;tblptru may be non-zero
  1315   001EB2                     	endif
  1316   001EB2                     	if	0	;tblptru may be non-zero
  1317   001EB2                     	endif
  1318   001EB2  0008               	tblrd		*
  1319   001EB4  50F5               	movf	tablat,w,c
  1320   001EB6  0A25               	xorlw	37
  1321   001EB8  A4D8               	btfss	status,2,c
  1322   001EBA  EF61  F00F         	goto	u3571
  1323   001EBE  EF63  F00F         	goto	u3570
  1324   001EC2                     u3571:
  1325   001EC2  EFC8  F010         	goto	l3404
  1326   001EC6                     u3570:
  1327   001EC6                     
  1328                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1329   001EC6  C050  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1330   001ECA  C051  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1331   001ECE  2ADE               	incf	postinc2,f,c
  1332   001ED0  0E00               	movlw	0
  1333   001ED2  22DD               	addwfc	postdec2,f,c
  1334   001ED4                     
  1335                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1336   001ED4  0E00               	movlw	0
  1337   001ED6  0100               	movlb	0	; () banked
  1338   001ED8  6FC5               	movwf	(_width+1)& (0+255),b
  1339   001EDA  0E00               	movlw	0
  1340   001EDC  6FC4               	movwf	_width& (0+255),b
  1341   001EDE  C0C4  F0C8         	movff	_width,_flags
  1342   001EE2                     
  1343                           ; BSR set to: 0
  1344                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1345   001EE2  69C6               	setf	_prec& (0+255),b
  1346   001EE4  69C7               	setf	(_prec+1)& (0+255),b
  1347   001EE6                     
  1348                           ; BSR set to: 0
  1349                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1091:         if 
      +                          ((*fmt)[0] == '.') {
  1350   001EE6  C050  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1351   001EEA  C051  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1352   001EEE  CFDE FFF6          	movff	postinc2,tblptrl
  1353   001EF2  CFDD FFF7          	movff	postdec2,tblptrh
  1354   001EF6                     	if	0	;tblptru may be non-zero
  1355   001EF6                     	endif
  1356   001EF6                     	if	0	;tblptru may be non-zero
  1357   001EF6                     	endif
  1358   001EF6  0008               	tblrd		*
  1359   001EF8  50F5               	movf	tablat,w,c
  1360   001EFA  0A2E               	xorlw	46
  1361   001EFC  A4D8               	btfss	status,2,c
  1362   001EFE  EF83  F00F         	goto	u3581
  1363   001F02  EF85  F00F         	goto	u3580
  1364   001F06                     u3581:
  1365   001F06  EFF2  F00F         	goto	l3366
  1366   001F0A                     u3580:
  1367   001F0A                     
  1368                           ; BSR set to: 0
  1369                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1092:            
      +                           prec = 0;
  1370   001F0A  0E00               	movlw	0
  1371   001F0C  6FC7               	movwf	(_prec+1)& (0+255),b
  1372   001F0E  0E00               	movlw	0
  1373   001F10  6FC6               	movwf	_prec& (0+255),b
  1374   001F12                     
  1375                           ; BSR set to: 0
  1376                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1093:            
      +                           ++*fmt;
  1377   001F12  C050  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1378   001F16  C051  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1379   001F1A  2ADE               	incf	postinc2,f,c
  1380   001F1C  0E00               	movlw	0
  1381   001F1E  22DD               	addwfc	postdec2,f,c
  1382   001F20                     
  1383                           ; BSR set to: 0
  1384                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1094:            
      +                           if ((*fmt)[0] == '*') {
  1385   001F20  C050  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1386   001F24  C051  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1387   001F28  CFDE FFF6          	movff	postinc2,tblptrl
  1388   001F2C  CFDD FFF7          	movff	postdec2,tblptrh
  1389   001F30                     	if	0	;tblptru may be non-zero
  1390   001F30                     	endif
  1391   001F30                     	if	0	;tblptru may be non-zero
  1392   001F30                     	endif
  1393   001F30  0008               	tblrd		*
  1394   001F32  50F5               	movf	tablat,w,c
  1395   001F34  0A2A               	xorlw	42
  1396   001F36  A4D8               	btfss	status,2,c
  1397   001F38  EFA0  F00F         	goto	u3591
  1398   001F3C  EFA2  F00F         	goto	u3590
  1399   001F40                     u3591:
  1400   001F40  EFBF  F00F         	goto	l3358
  1401   001F44                     u3590:
  1402   001F44                     
  1403                           ; BSR set to: 0
  1404                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1095:            
      +                               ++*fmt;
  1405   001F44  C050  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1406   001F48  C051  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1407   001F4C  2ADE               	incf	postinc2,f,c
  1408   001F4E  0E00               	movlw	0
  1409   001F50  22DD               	addwfc	postdec2,f,c
  1410                           
  1411                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1096:            
      +                               prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1412   001F52  C052  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1413   001F56  C053  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1414   001F5A  CFDF F054          	movff	indf2,??_vfpfcnvrt
  1415   001F5E  0E02               	movlw	2
  1416   001F60  26DE               	addwf	postinc2,f,c
  1417   001F62  CFDF F055          	movff	indf2,??_vfpfcnvrt+1
  1418   001F66  0E00               	movlw	0
  1419   001F68  22DD               	addwfc	postdec2,f,c
  1420   001F6A  C054  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1421   001F6E  C055  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1422   001F72  CFDE F0C6          	movff	postinc2,_prec
  1423   001F76  CFDD F0C7          	movff	postdec2,_prec+1
  1424                           
  1425                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1097:            
      +                           } else {
  1426   001F7A  EFF2  F00F         	goto	l3366
  1427   001F7E                     l3358:
  1428                           
  1429                           ; BSR set to: 0
  1430                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1098:            
      +                               prec = atoi(*fmt);
  1431   001F7E  C050  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1432   001F82  C051  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1433   001F86  CFDE F007          	movff	postinc2,atoi@s
  1434   001F8A  CFDD F008          	movff	postdec2,atoi@s+1
  1435   001F8E  ECE7  F013         	call	_atoi	;wreg free
  1436   001F92  C007  F0C6         	movff	?_atoi,_prec
  1437   001F96  C008  F0C7         	movff	?_atoi+1,_prec+1
  1438                           
  1439                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1099:            
      +                               while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  1440   001F9A  EFD6  F00F         	goto	l3364
  1441   001F9E                     l3360:
  1442                           
  1443                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1100:            
      +                                   ++*fmt;
  1444   001F9E  C050  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1445   001FA2  C051  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1446   001FA6  2ADE               	incf	postinc2,f,c
  1447   001FA8  0E00               	movlw	0
  1448   001FAA  22DD               	addwfc	postdec2,f,c
  1449   001FAC                     l3364:
  1450   001FAC  C050  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1451   001FB0  C051  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1452   001FB4  CFDE FFF6          	movff	postinc2,tblptrl
  1453   001FB8  CFDD FFF7          	movff	postdec2,tblptrh
  1454   001FBC                     	if	0	;tblptru may be non-zero
  1455   001FBC                     	endif
  1456   001FBC                     	if	0	;tblptru may be non-zero
  1457   001FBC                     	endif
  1458   001FBC  0008               	tblrd		*
  1459   001FBE  CFF5 F054          	movff	tablat,??_vfpfcnvrt
  1460   001FC2  0ED0               	movlw	208
  1461   001FC4  2454               	addwf	??_vfpfcnvrt^0,w,c
  1462   001FC6  6E55               	movwf	(??_vfpfcnvrt+1)^0,c
  1463   001FC8  6A56               	clrf	(??_vfpfcnvrt+2)^0,c
  1464   001FCA  0EFF               	movlw	255
  1465   001FCC  2256               	addwfc	(??_vfpfcnvrt+2)^0,f,c
  1466   001FCE  5056               	movf	(??_vfpfcnvrt+2)^0,w,c
  1467   001FD0  E109               	bnz	u3600
  1468   001FD2  0E0A               	movlw	10
  1469   001FD4  5C55               	subwf	(??_vfpfcnvrt+1)^0,w,c
  1470   001FD6  A0D8               	btfss	status,0,c
  1471   001FD8  EFF0  F00F         	goto	u3601
  1472   001FDC  EFF2  F00F         	goto	u3600
  1473   001FE0                     u3601:
  1474   001FE0  EFCF  F00F         	goto	l3360
  1475   001FE4                     u3600:
  1476   001FE4                     l3366:
  1477                           
  1478                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1392:   cp = *fmt
      +                          ;
  1479   001FE4  C050  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1480   001FE8  C051  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1481   001FEC  CFDE F095          	movff	postinc2,vfpfcnvrt@cp
  1482   001FF0  CFDD F096          	movff	postdec2,vfpfcnvrt@cp+1
  1483   001FF4                     
  1484                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1393:   c = *cp;
  1485   001FF4  C095  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1486   001FF8  C096  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1487   001FFC                     	if	0	;tblptru may be non-zero
  1488   001FFC                     	endif
  1489   001FFC                     	if	0	;tblptru may be non-zero
  1490   001FFC                     	endif
  1491   001FFC  0008               	tblrd		*
  1492   001FFE  CFF5 F094          	movff	tablat,vfpfcnvrt@c
  1493                           
  1494                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1394:   switch(c)
      +                           {
  1495   002002  EF0F  F010         	goto	l3378
  1496   002006                     l3370:
  1497                           
  1498                           ; BSR set to: 0
  1499                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1398:     cp++;
  1500   002006  4B95               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  1501   002008  2B96               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  1502                           
  1503                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1399:     break;
  1504   00200A  EF29  F010         	goto	l3380
  1505   00200E                     l3372:
  1506                           
  1507                           ; BSR set to: 0
  1508                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1424:     c = 'l'
      +                          ;
  1509   00200E  0E6C               	movlw	108
  1510   002010  6F94               	movwf	vfpfcnvrt@c& (0+255),b
  1511                           
  1512                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1425:     break;
  1513   002012  EF29  F010         	goto	l3380
  1514   002016                     l3374:
  1515                           
  1516                           ; BSR set to: 0
  1517                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1427:     c = 0;
  1518   002016  0E00               	movlw	0
  1519   002018  6F94               	movwf	vfpfcnvrt@c& (0+255),b
  1520                           
  1521                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1428:     break;
  1522   00201A  EF29  F010         	goto	l3380
  1523   00201E                     l3378:
  1524   00201E  0100               	movlb	0	; () banked
  1525   002020  5194               	movf	vfpfcnvrt@c& (0+255),w,b
  1526   002022  6E54               	movwf	??_vfpfcnvrt^0,c
  1527   002024  6A55               	clrf	(??_vfpfcnvrt+1)^0,c
  1528                           
  1529                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1530                           ; Switch size 1, requested type "simple"
  1531                           ; Number of cases is 1, Range of values is 0 to 0
  1532                           ; switch strategies available:
  1533                           ; Name         Instructions Cycles
  1534                           ; simple_byte            4     3 (average)
  1535                           ;	Chosen strategy is simple_byte
  1536   002026  5055               	movf	(??_vfpfcnvrt+1)^0,w,c
  1537   002028  0A00               	xorlw	0	; case 0
  1538   00202A  B4D8               	btfsc	status,2,c
  1539   00202C  EF1A  F010         	goto	l3756
  1540   002030  EF0B  F010         	goto	l3374
  1541   002034                     l3756:
  1542                           
  1543                           ; BSR set to: 0
  1544                           ; Switch size 1, requested type "simple"
  1545                           ; Number of cases is 3, Range of values is 76 to 108
  1546                           ; switch strategies available:
  1547                           ; Name         Instructions Cycles
  1548                           ; simple_byte           10     6 (average)
  1549                           ;	Chosen strategy is simple_byte
  1550   002034  5054               	movf	??_vfpfcnvrt^0,w,c
  1551   002036  0A4C               	xorlw	76	; case 76
  1552   002038  B4D8               	btfsc	status,2,c
  1553   00203A  EF03  F010         	goto	l3370
  1554   00203E  0A2A               	xorlw	42	; case 102
  1555   002040  B4D8               	btfsc	status,2,c
  1556   002042  EF07  F010         	goto	l3372
  1557   002046  0A0A               	xorlw	10	; case 108
  1558   002048  B4D8               	btfsc	status,2,c
  1559   00204A  EF03  F010         	goto	l3370
  1560   00204E  EF0B  F010         	goto	l3374
  1561   002052                     l3380:
  1562                           
  1563                           ; BSR set to: 0
  1564   002052  C095  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1565   002056  C096  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1566   00205A                     	if	0	;tblptru may be non-zero
  1567   00205A                     	endif
  1568   00205A                     	if	0	;tblptru may be non-zero
  1569   00205A                     	endif
  1570   00205A  0008               	tblrd		*
  1571   00205C  50F5               	movf	tablat,w,c
  1572   00205E  0A66               	xorlw	102
  1573   002060  A4D8               	btfss	status,2,c
  1574   002062  EF35  F010         	goto	u3611
  1575   002066  EF37  F010         	goto	u3610
  1576   00206A                     u3611:
  1577   00206A  EFBF  F010         	goto	l3400
  1578   00206E                     u3610:
  1579   00206E  EF6D  F010         	goto	l3388
  1580   002072                     l3382:
  1581                           
  1582                           ; BSR set to: 0
  1583                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1459:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1584   002072  C052  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1585   002076  C053  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1586   00207A  CFDF F054          	movff	indf2,??_vfpfcnvrt
  1587   00207E  0E04               	movlw	4
  1588   002080  26DE               	addwf	postinc2,f,c
  1589   002082  CFDF F055          	movff	indf2,??_vfpfcnvrt+1
  1590   002086  0E00               	movlw	0
  1591   002088  22DD               	addwfc	postdec2,f,c
  1592   00208A  C054  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1593   00208E  C055  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1594   002092  CFDE F08C          	movff	postinc2,vfpfcnvrt@convarg
  1595   002096  CFDE F08D          	movff	postinc2,vfpfcnvrt@convarg+1
  1596   00209A  CFDE F08E          	movff	postinc2,vfpfcnvrt@convarg+2
  1597   00209E  CFDE F08F          	movff	postinc2,vfpfcnvrt@convarg+3
  1598                           
  1599                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1460:      break;
  1600   0020A2  EF82  F010         	goto	l3390
  1601   0020A6                     l3384:
  1602                           
  1603                           ; BSR set to: 0
  1604                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1462:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  1605   0020A6  C052  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1606   0020AA  C053  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1607   0020AE  CFDF F054          	movff	indf2,??_vfpfcnvrt
  1608   0020B2  0E04               	movlw	4
  1609   0020B4  26DE               	addwf	postinc2,f,c
  1610   0020B6  CFDF F055          	movff	indf2,??_vfpfcnvrt+1
  1611   0020BA  0E00               	movlw	0
  1612   0020BC  22DD               	addwfc	postdec2,f,c
  1613   0020BE  C054  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1614   0020C2  C055  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1615   0020C6  CFDE F08C          	movff	postinc2,vfpfcnvrt@convarg
  1616   0020CA  CFDE F08D          	movff	postinc2,vfpfcnvrt@convarg+1
  1617   0020CE  CFDE F08E          	movff	postinc2,vfpfcnvrt@convarg+2
  1618   0020D2  CFDE F08F          	movff	postinc2,vfpfcnvrt@convarg+3
  1619                           
  1620                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1463:      break;
  1621   0020D6  EF82  F010         	goto	l3390
  1622   0020DA                     l3388:
  1623                           
  1624                           ; BSR set to: 0
  1625   0020DA  5194               	movf	vfpfcnvrt@c& (0+255),w,b
  1626   0020DC  6E54               	movwf	??_vfpfcnvrt^0,c
  1627   0020DE  6A55               	clrf	(??_vfpfcnvrt+1)^0,c
  1628                           
  1629                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1630                           ; Switch size 1, requested type "simple"
  1631                           ; Number of cases is 1, Range of values is 0 to 0
  1632                           ; switch strategies available:
  1633                           ; Name         Instructions Cycles
  1634                           ; simple_byte            4     3 (average)
  1635                           ;	Chosen strategy is simple_byte
  1636   0020E0  5055               	movf	(??_vfpfcnvrt+1)^0,w,c
  1637   0020E2  0A00               	xorlw	0	; case 0
  1638   0020E4  B4D8               	btfsc	status,2,c
  1639   0020E6  EF77  F010         	goto	l3758
  1640   0020EA  EF82  F010         	goto	l3390
  1641   0020EE                     l3758:
  1642                           
  1643                           ; BSR set to: 0
  1644                           ; Switch size 1, requested type "simple"
  1645                           ; Number of cases is 2, Range of values is 76 to 108
  1646                           ; switch strategies available:
  1647                           ; Name         Instructions Cycles
  1648                           ; simple_byte            7     4 (average)
  1649                           ;	Chosen strategy is simple_byte
  1650   0020EE  5054               	movf	??_vfpfcnvrt^0,w,c
  1651   0020F0  0A4C               	xorlw	76	; case 76
  1652   0020F2  B4D8               	btfsc	status,2,c
  1653   0020F4  EF53  F010         	goto	l3384
  1654   0020F8  0A20               	xorlw	32	; case 108
  1655   0020FA  B4D8               	btfsc	status,2,c
  1656   0020FC  EF39  F010         	goto	l3382
  1657   002100  EF82  F010         	goto	l3390
  1658   002104                     l3390:
  1659                           
  1660                           ; BSR set to: 0
  1661                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1465:    *fmt = c
      +                          p+1;
  1662   002104  0E01               	movlw	1
  1663   002106  2595               	addwf	vfpfcnvrt@cp& (0+255),w,b
  1664   002108  6E54               	movwf	??_vfpfcnvrt^0,c
  1665   00210A  0E00               	movlw	0
  1666   00210C  2196               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  1667   00210E  6E55               	movwf	(??_vfpfcnvrt+1)^0,c
  1668   002110  C050  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1669   002114  C051  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1670   002118  C054  FFDE         	movff	??_vfpfcnvrt,postinc2
  1671   00211C  C055  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1672                           
  1673                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1466:    switch (
      +                          *cp) {
  1674   002120  EFA9  F010         	goto	l3398
  1675   002124                     l3392:
  1676                           
  1677                           ; BSR set to: 0
  1678                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1493:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  1679   002124  C04E  F045         	movff	vfpfcnvrt@fp,efgtoa@fp
  1680   002128  C04F  F046         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  1681   00212C  C08C  F047         	movff	vfpfcnvrt@convarg,efgtoa@f
  1682   002130  C08D  F048         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  1683   002134  C08E  F049         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  1684   002138  C08F  F04A         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  1685   00213C  C095  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1686   002140  C096  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1687   002144                     	if	0	;tblptru may be non-zero
  1688   002144                     	endif
  1689   002144                     	if	0	;tblptru may be non-zero
  1690   002144                     	endif
  1691   002144  0008               	tblrd		*
  1692   002146  CFF5 F04B          	movff	tablat,efgtoa@c
  1693   00214A  EC12  F004         	call	_efgtoa	;wreg free
  1694   00214E  EFDC  F010         	goto	l918
  1695   002152                     l3398:
  1696                           
  1697                           ; BSR set to: 0
  1698   002152  C095  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1699   002156  C096  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1700   00215A                     	if	0	;tblptru may be non-zero
  1701   00215A                     	endif
  1702   00215A                     	if	0	;tblptru may be non-zero
  1703   00215A                     	endif
  1704   00215A  0008               	tblrd		*
  1705   00215C  50F5               	movf	tablat,w,c
  1706   00215E  6E54               	movwf	??_vfpfcnvrt^0,c
  1707   002160  6A55               	clrf	(??_vfpfcnvrt+1)^0,c
  1708                           
  1709                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1710                           ; Switch size 1, requested type "simple"
  1711                           ; Number of cases is 1, Range of values is 0 to 0
  1712                           ; switch strategies available:
  1713                           ; Name         Instructions Cycles
  1714                           ; simple_byte            4     3 (average)
  1715                           ;	Chosen strategy is simple_byte
  1716   002162  5055               	movf	(??_vfpfcnvrt+1)^0,w,c
  1717   002164  0A00               	xorlw	0	; case 0
  1718   002166  B4D8               	btfsc	status,2,c
  1719   002168  EFB8  F010         	goto	l3760
  1720   00216C  EFBF  F010         	goto	l3400
  1721   002170                     l3760:
  1722                           
  1723                           ; BSR set to: 0
  1724                           ; Switch size 1, requested type "simple"
  1725                           ; Number of cases is 1, Range of values is 102 to 102
  1726                           ; switch strategies available:
  1727                           ; Name         Instructions Cycles
  1728                           ; simple_byte            4     3 (average)
  1729                           ;	Chosen strategy is simple_byte
  1730   002170  5054               	movf	??_vfpfcnvrt^0,w,c
  1731   002172  0A66               	xorlw	102	; case 102
  1732   002174  B4D8               	btfsc	status,2,c
  1733   002176  EF92  F010         	goto	l3392
  1734   00217A  EFBF  F010         	goto	l3400
  1735   00217E                     l3400:
  1736                           
  1737                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1738   00217E  C050  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1739   002182  C051  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1740   002186  2ADE               	incf	postinc2,f,c
  1741   002188  0E00               	movlw	0
  1742   00218A  22DD               	addwfc	postdec2,f,c
  1743   00218C  EFDC  F010         	goto	l918
  1744   002190                     l3404:
  1745                           
  1746                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1747   002190  C050  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1748   002194  C051  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1749   002198  CFDE FFF6          	movff	postinc2,tblptrl
  1750   00219C  CFDD FFF7          	movff	postdec2,tblptrh
  1751   0021A0                     	if	0	;tblptru may be non-zero
  1752   0021A0                     	endif
  1753   0021A0                     	if	0	;tblptru may be non-zero
  1754   0021A0                     	endif
  1755   0021A0  0008               	tblrd		*
  1756   0021A2  50F5               	movf	tablat,w,c
  1757   0021A4  6E01               	movwf	fputc@c^0,c
  1758   0021A6  6A02               	clrf	(fputc@c+1)^0,c
  1759   0021A8  C04E  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1760   0021AC  C04F  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1761   0021B0  EC10  F016         	call	_fputc	;wreg free
  1762   0021B4  EFBF  F010         	goto	l3400
  1763   0021B8                     l918:
  1764   0021B8  0012               	return		;funcret
  1765   0021BA                     __end_of_vfpfcnvrt:
  1766                           	callstack 0
  1767                           
  1768 ;; *************** function _efgtoa *****************
  1769 ;; Defined at:
  1770 ;;		line 506 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1771 ;; Parameters:    Size  Location     Type
  1772 ;;  fp              2   68[COMRAM] PTR struct _IO_FILE
  1773 ;;		 -> sprintf@f(11), 
  1774 ;;  f               4   70[COMRAM] PTR struct _IO_FILE
  1775 ;;  c               1   74[COMRAM] unsigned char 
  1776 ;; Auto vars:     Size  Location     Type
  1777 ;;  u               4   40[BANK0 ] struct flui
  1778 ;;  g               4   36[BANK0 ] struct flui
  1779 ;;  l               4   29[BANK0 ] struct flui
  1780 ;;  h               4   25[BANK0 ] struct flui
  1781 ;;  ou              4   19[BANK0 ] struct flui
  1782 ;;  n               2   34[BANK0 ] int 
  1783 ;;  i               2   23[BANK0 ] int 
  1784 ;;  w               2   17[BANK0 ] int 
  1785 ;;  e               2   15[BANK0 ] int 
  1786 ;;  m               2   13[BANK0 ] int 
  1787 ;;  d               2   11[BANK0 ] int 
  1788 ;;  t               2    4[BANK0 ] int 
  1789 ;;  p               2    2[BANK0 ] int 
  1790 ;;  ne              2    0[BANK0 ] int 
  1791 ;;  sign            1   33[BANK0 ] unsigned char 
  1792 ;;  nmode           1   10[BANK0 ] unsigned char 
  1793 ;;  mode            1    9[BANK0 ] unsigned char 
  1794 ;;  pp              1    8[BANK0 ] unsigned char 
  1795 ;;  esign           1    0        unsigned char 
  1796 ;; Return value:  Size  Location     Type
  1797 ;;                  1    wreg      void 
  1798 ;; Registers used:
  1799 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1800 ;; Tracked objects:
  1801 ;;		On entry : 0/0
  1802 ;;		On exit  : 0/0
  1803 ;;		Unchanged: 0/0
  1804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1805 ;;      Params:         7       0       0       0       0       0       0       0       0
  1806 ;;      Locals:         0      44       0       0       0       0       0       0       0
  1807 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1808 ;;      Totals:         9      44       0       0       0       0       0       0       0
  1809 ;;Total ram usage:       53 bytes
  1810 ;; Hardware stack levels used: 1
  1811 ;; Hardware stack levels required when called: 4
  1812 ;; This function calls:
  1813 ;;		___fladd
  1814 ;;		___fldiv
  1815 ;;		___fleq
  1816 ;;		___flge
  1817 ;;		___flmul
  1818 ;;		___flneg
  1819 ;;		___flsub
  1820 ;;		___fltol
  1821 ;;		___fpclassifyf
  1822 ;;		_floorf
  1823 ;;		_labs
  1824 ;;		_memcpy
  1825 ;;		_pad
  1826 ;;		_strcpy
  1827 ;; This function is called by:
  1828 ;;		_vfpfcnvrt
  1829 ;; This function uses a non-reentrant model
  1830 ;;
  1831                           
  1832                           	psect	text4
  1833   000824                     __ptext4:
  1834                           	callstack 0
  1835   000824                     _efgtoa:
  1836                           	callstack 23
  1837   000824                     
  1838                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 506: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources
      +                          \c99\common\doprnt.c: 507: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 508:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .40\pic\sources\c99\common\doprnt.c: 509:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 510:     long double h, l;
  1839   000824  0E00               	movlw	0
  1840   000826  0100               	movlb	0	; () banked
  1841   000828  6F81               	movwf	efgtoa@sign& (0+255),b
  1842   00082A                     
  1843                           ; BSR set to: 0
  1844                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 515:     g.f = f;
  1845   00082A  C047  F084         	movff	efgtoa@f,efgtoa@g
  1846   00082E  C048  F085         	movff	efgtoa@f+1,efgtoa@g+1
  1847   000832  C049  F086         	movff	efgtoa@f+2,efgtoa@g+2
  1848   000836  C04A  F087         	movff	efgtoa@f+3,efgtoa@g+3
  1849   00083A                     
  1850                           ; BSR set to: 0
  1851                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 516:     if (g.f 
      +                          < 0.0) {
  1852   00083A  BF87               	btfsc	(efgtoa@g+3)& (0+255),7,b
  1853   00083C  EF24  F004         	goto	u3170
  1854   000840  EF22  F004         	goto	u3171
  1855   000844                     u3171:
  1856   000844  EF38  F004         	goto	l3080
  1857   000848                     u3170:
  1858   000848                     
  1859                           ; BSR set to: 0
  1860                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 517:         sign
      +                           = 1;
  1861   000848  0E01               	movlw	1
  1862   00084A  6F81               	movwf	efgtoa@sign& (0+255),b
  1863   00084C                     
  1864                           ; BSR set to: 0
  1865                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 518:         g.f 
      +                          = -g.f;
  1866   00084C  C084  F001         	movff	efgtoa@g,___flneg@f1
  1867   000850  C085  F002         	movff	efgtoa@g+1,___flneg@f1+1
  1868   000854  C086  F003         	movff	efgtoa@g+2,___flneg@f1+2
  1869   000858  C087  F004         	movff	efgtoa@g+3,___flneg@f1+3
  1870   00085C  ECF5  F018         	call	___flneg	;wreg free
  1871   000860  C001  F084         	movff	?___flneg,efgtoa@g
  1872   000864  C002  F085         	movff	?___flneg+1,efgtoa@g+1
  1873   000868  C003  F086         	movff	?___flneg+2,efgtoa@g+2
  1874   00086C  C004  F087         	movff	?___flneg+3,efgtoa@g+3
  1875   000870                     l3080:
  1876                           
  1877                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 522:     n = 0;
  1878   000870  0E00               	movlw	0
  1879   000872  0100               	movlb	0	; () banked
  1880   000874  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  1881   000876  0E00               	movlw	0
  1882   000878  6F82               	movwf	efgtoa@n& (0+255),b
  1883   00087A                     
  1884                           ; BSR set to: 0
  1885                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 523:     w = widt
      +                          h;
  1886   00087A  C0C4  F071         	movff	_width,efgtoa@w
  1887   00087E  C0C5  F072         	movff	_width+1,efgtoa@w+1
  1888   000882                     
  1889                           ; BSR set to: 0
  1890                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 524:     if (sign
  1891   000882  5181               	movf	efgtoa@sign& (0+255),w,b
  1892   000884  B4D8               	btfsc	status,2,c
  1893   000886  EF47  F004         	goto	u3181
  1894   00088A  EF49  F004         	goto	u3180
  1895   00088E                     u3181:
  1896   00088E  EF5D  F004         	goto	l3094
  1897   000892                     u3180:
  1898   000892                     
  1899                           ; BSR set to: 0
  1900                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 528:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 529:   sign = sign ? '-
      +                          ' : '+';
  1901   000892  5181               	movf	efgtoa@sign& (0+255),w,b
  1902   000894  A4D8               	btfss	status,2,c
  1903   000896  EF4F  F004         	goto	u3191
  1904   00089A  EF51  F004         	goto	u3190
  1905   00089E                     u3191:
  1906   00089E  EF57  F004         	goto	l3090
  1907   0008A2                     u3190:
  1908   0008A2                     
  1909                           ; BSR set to: 0
  1910   0008A2  0E00               	movlw	0
  1911   0008A4  6F67               	movwf	(_efgtoa$1029+1)& (0+255),b
  1912   0008A6  0E2B               	movlw	43
  1913   0008A8  6F66               	movwf	_efgtoa$1029& (0+255),b
  1914   0008AA  EF5B  F004         	goto	l3092
  1915   0008AE                     l3090:
  1916                           
  1917                           ; BSR set to: 0
  1918   0008AE  0E00               	movlw	0
  1919   0008B0  6F67               	movwf	(_efgtoa$1029+1)& (0+255),b
  1920   0008B2  0E2D               	movlw	45
  1921   0008B4  6F66               	movwf	_efgtoa$1029& (0+255),b
  1922   0008B6                     l3092:
  1923                           
  1924                           ; BSR set to: 0
  1925   0008B6  C066  F081         	movff	_efgtoa$1029,efgtoa@sign
  1926   0008BA                     l3094:
  1927                           
  1928                           ; BSR set to: 0
  1929                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 538:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  1930   0008BA  C084  F001         	movff	efgtoa@g,___fpclassifyf@x
  1931   0008BE  C085  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  1932   0008C2  C086  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  1933   0008C6  C087  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  1934   0008CA  EC91  F015         	call	___fpclassifyf	;wreg free
  1935   0008CE  0401               	decf	?___fpclassifyf^0,w,c
  1936   0008D0  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  1937   0008D2  A4D8               	btfss	status,2,c
  1938   0008D4  EF6E  F004         	goto	u3201
  1939   0008D8  EF70  F004         	goto	u3200
  1940   0008DC                     u3201:
  1941   0008DC  EFA3  F004         	goto	l3112
  1942   0008E0                     u3200:
  1943   0008E0                     
  1944                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 539:   if (sign) 
      +                          {
  1945   0008E0  0100               	movlb	0	; () banked
  1946   0008E2  5181               	movf	efgtoa@sign& (0+255),w,b
  1947   0008E4  B4D8               	btfsc	status,2,c
  1948   0008E6  EF77  F004         	goto	u3211
  1949   0008EA  EF79  F004         	goto	u3210
  1950   0008EE                     u3211:
  1951   0008EE  EF82  F004         	goto	l3104
  1952   0008F2                     u3210:
  1953   0008F2                     
  1954                           ; BSR set to: 0
  1955                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 540:    dbuf[0] =
      +                           sign;
  1956   0008F2  C081  F100         	movff	efgtoa@sign,_dbuf
  1957   0008F6                     
  1958                           ; BSR set to: 0
  1959                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 541:    w--;
  1960   0008F6  0771               	decf	efgtoa@w& (0+255),f,b
  1961   0008F8  A0D8               	btfss	status,0,c
  1962   0008FA  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  1963   0008FC                     
  1964                           ; BSR set to: 0
  1965                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 542:    n = 1;
  1966   0008FC  0E00               	movlw	0
  1967   0008FE  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  1968   000900  0E01               	movlw	1
  1969   000902  6F82               	movwf	efgtoa@n& (0+255),b
  1970   000904                     l3104:
  1971                           
  1972                           ; BSR set to: 0
  1973                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 550:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 551:             strcpy(&d
      +                          buf[n], "inf");
  1974   000904  0E00               	movlw	low _dbuf
  1975   000906  2582               	addwf	efgtoa@n& (0+255),w,b
  1976   000908  6E01               	movwf	strcpy@dest^0,c
  1977   00090A  0E01               	movlw	high _dbuf
  1978   00090C  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  1979   00090E  6E02               	movwf	(strcpy@dest+1)^0,c
  1980   000910  0E1B               	movlw	low STR_4
  1981   000912  6E03               	movwf	strcpy@src^0,c
  1982   000914  0E08               	movlw	high STR_4
  1983   000916  6E04               	movwf	(strcpy@src+1)^0,c
  1984   000918  ECB5  F018         	call	_strcpy	;wreg free
  1985   00091C                     l3106:
  1986                           
  1987                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 552:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 553:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  1988   00091C  0100               	movlb	0	; () banked
  1989   00091E  0EFD               	movlw	253
  1990   000920  2771               	addwf	efgtoa@w& (0+255),f,b
  1991   000922  0EFF               	movlw	255
  1992   000924  2372               	addwfc	(efgtoa@w+1)& (0+255),f,b
  1993   000926                     
  1994                           ; BSR set to: 0
  1995                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 554:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  1996   000926  C045  F011         	movff	efgtoa@fp,pad@fp
  1997   00092A  C046  F012         	movff	efgtoa@fp+1,pad@fp+1
  1998   00092E  0E00               	movlw	low _dbuf
  1999   000930  6E13               	movwf	pad@buf^0,c
  2000   000932  0E01               	movlw	high _dbuf
  2001   000934  6E14               	movwf	(pad@buf+1)^0,c
  2002   000936  C071  F015         	movff	efgtoa@w,pad@p
  2003   00093A  C072  F016         	movff	efgtoa@w+1,pad@p+1
  2004   00093E  ECCA  F016         	call	_pad	;wreg free
  2005   000942  EF0E  F009         	goto	l850
  2006   000946                     l3112:
  2007                           
  2008                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 556:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  2009   000946  C084  F001         	movff	efgtoa@g,___fpclassifyf@x
  2010   00094A  C085  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2011   00094E  C086  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2012   000952  C087  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2013   000956  EC91  F015         	call	___fpclassifyf	;wreg free
  2014   00095A  5001               	movf	?___fpclassifyf^0,w,c
  2015   00095C  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2016   00095E  A4D8               	btfss	status,2,c
  2017   000960  EFB4  F004         	goto	u3221
  2018   000964  EFB6  F004         	goto	u3220
  2019   000968                     u3221:
  2020   000968  EFD6  F004         	goto	l3130
  2021   00096C                     u3220:
  2022   00096C                     
  2023                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 557:   if (sign) 
      +                          {
  2024   00096C  0100               	movlb	0	; () banked
  2025   00096E  5181               	movf	efgtoa@sign& (0+255),w,b
  2026   000970  B4D8               	btfsc	status,2,c
  2027   000972  EFBD  F004         	goto	u3231
  2028   000976  EFBF  F004         	goto	u3230
  2029   00097A                     u3231:
  2030   00097A  EFC8  F004         	goto	l3122
  2031   00097E                     u3230:
  2032   00097E                     
  2033                           ; BSR set to: 0
  2034                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 558:    dbuf[0] =
      +                           sign;
  2035   00097E  C081  F100         	movff	efgtoa@sign,_dbuf
  2036   000982                     
  2037                           ; BSR set to: 0
  2038                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 559:    w--;
  2039   000982  0771               	decf	efgtoa@w& (0+255),f,b
  2040   000984  A0D8               	btfss	status,0,c
  2041   000986  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2042   000988                     
  2043                           ; BSR set to: 0
  2044                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 560:    n = 1;
  2045   000988  0E00               	movlw	0
  2046   00098A  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  2047   00098C  0E01               	movlw	1
  2048   00098E  6F82               	movwf	efgtoa@n& (0+255),b
  2049   000990                     l3122:
  2050                           
  2051                           ; BSR set to: 0
  2052                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 568:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 569:             strcpy(&d
      +                          buf[n], "nan");
  2053   000990  0E00               	movlw	low _dbuf
  2054   000992  2582               	addwf	efgtoa@n& (0+255),w,b
  2055   000994  6E01               	movwf	strcpy@dest^0,c
  2056   000996  0E01               	movlw	high _dbuf
  2057   000998  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2058   00099A  6E02               	movwf	(strcpy@dest+1)^0,c
  2059   00099C  0E1F               	movlw	low STR_7
  2060   00099E  6E03               	movwf	strcpy@src^0,c
  2061   0009A0  0E08               	movlw	high STR_7
  2062   0009A2  6E04               	movwf	(strcpy@src+1)^0,c
  2063   0009A4  ECB5  F018         	call	_strcpy	;wreg free
  2064   0009A8  EF8E  F004         	goto	l3106
  2065   0009AC                     l3130:
  2066                           
  2067                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 576:     u.f = 1.
      +                          0;
  2068   0009AC  0E00               	movlw	0
  2069   0009AE  0100               	movlb	0	; () banked
  2070   0009B0  6F88               	movwf	efgtoa@u& (0+255),b
  2071   0009B2  0E00               	movlw	0
  2072   0009B4  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  2073   0009B6  0E80               	movlw	128
  2074   0009B8  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  2075   0009BA  0E3F               	movlw	63
  2076   0009BC  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  2077                           
  2078                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 577:     e = 0;
  2079   0009BE  0E00               	movlw	0
  2080   0009C0  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  2081   0009C2  0E00               	movlw	0
  2082   0009C4  6F6F               	movwf	efgtoa@e& (0+255),b
  2083   0009C6                     
  2084                           ; BSR set to: 0
  2085                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 578:  if (!(g.f =
      +                          = 0.0)) {
  2086   0009C6  C084  F001         	movff	efgtoa@g,___fleq@ff1
  2087   0009CA  C085  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  2088   0009CE  C086  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  2089   0009D2  C087  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  2090   0009D6  0E00               	movlw	0
  2091   0009D8  6E05               	movwf	___fleq@ff2^0,c
  2092   0009DA  0E00               	movlw	0
  2093   0009DC  6E06               	movwf	(___fleq@ff2+1)^0,c
  2094   0009DE  0E00               	movlw	0
  2095   0009E0  6E07               	movwf	(___fleq@ff2+2)^0,c
  2096   0009E2  0E00               	movlw	0
  2097   0009E4  6E08               	movwf	(___fleq@ff2+3)^0,c
  2098   0009E6  EC75  F016         	call	___fleq	;wreg free
  2099   0009EA  B0D8               	btfsc	status,0,c
  2100   0009EC  EFFA  F004         	goto	u3241
  2101   0009F0  EFFC  F004         	goto	u3240
  2102   0009F4                     u3241:
  2103   0009F4  EFDB  F005         	goto	l853
  2104   0009F8                     u3240:
  2105   0009F8  EF09  F005         	goto	l3138
  2106   0009FC                     l855:
  2107                           
  2108                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 580:    u = ou;
  2109   0009FC  C073  F088         	movff	efgtoa@ou,efgtoa@u
  2110   000A00  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  2111   000A04  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  2112   000A08  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  2113   000A0C                     
  2114                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 581:    ++e;
  2115   000A0C  0100               	movlb	0	; () banked
  2116   000A0E  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  2117   000A10  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  2118   000A12                     l3138:
  2119                           
  2120                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 579:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  2121   000A12  C088  F014         	movff	efgtoa@u,___flmul@b
  2122   000A16  C089  F015         	movff	efgtoa@u+1,___flmul@b+1
  2123   000A1A  C08A  F016         	movff	efgtoa@u+2,___flmul@b+2
  2124   000A1E  C08B  F017         	movff	efgtoa@u+3,___flmul@b+3
  2125   000A22  0E00               	movlw	0
  2126   000A24  6E18               	movwf	___flmul@a^0,c
  2127   000A26  0E00               	movlw	0
  2128   000A28  6E19               	movwf	(___flmul@a+1)^0,c
  2129   000A2A  0E20               	movlw	32
  2130   000A2C  6E1A               	movwf	(___flmul@a+2)^0,c
  2131   000A2E  0E41               	movlw	65
  2132   000A30  6E1B               	movwf	(___flmul@a+3)^0,c
  2133   000A32  EC6F  F00B         	call	___flmul	;wreg free
  2134   000A36  C014  F073         	movff	?___flmul,efgtoa@ou
  2135   000A3A  C015  F074         	movff	?___flmul+1,efgtoa@ou+1
  2136   000A3E  C016  F075         	movff	?___flmul+2,efgtoa@ou+2
  2137   000A42  C017  F076         	movff	?___flmul+3,efgtoa@ou+3
  2138   000A46  0100               	movlb	0	; () banked
  2139   000A48  5173               	movf	efgtoa@ou& (0+255),w,b
  2140   000A4A  5D84               	subwf	efgtoa@g& (0+255),w,b
  2141   000A4C  6E01               	movwf	labs@a^0,c
  2142   000A4E  5174               	movf	(efgtoa@ou+1)& (0+255),w,b
  2143   000A50  5985               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2144   000A52  6E02               	movwf	(labs@a+1)^0,c
  2145   000A54  5175               	movf	(efgtoa@ou+2)& (0+255),w,b
  2146   000A56  5986               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2147   000A58  6E03               	movwf	(labs@a+2)^0,c
  2148   000A5A  5176               	movf	(efgtoa@ou+3)& (0+255),w,b
  2149   000A5C  5987               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2150   000A5E  6E04               	movwf	(labs@a+3)^0,c
  2151   000A60  EC41  F017         	call	_labs	;wreg free
  2152   000A64  BE04               	btfsc	(?_labs+3)^0,7,c
  2153   000A66  EF40  F005         	goto	u3251
  2154   000A6A  5004               	movf	(?_labs+3)^0,w,c
  2155   000A6C  1003               	iorwf	(?_labs+2)^0,w,c
  2156   000A6E  1002               	iorwf	(?_labs+1)^0,w,c
  2157   000A70  E109               	bnz	u3250
  2158   000A72  0E02               	movlw	2
  2159   000A74  5C01               	subwf	?_labs^0,w,c
  2160   000A76  A0D8               	btfss	status,0,c
  2161   000A78  EF40  F005         	goto	u3251
  2162   000A7C  EF42  F005         	goto	u3250
  2163   000A80                     u3251:
  2164   000A80  EFFE  F004         	goto	l855
  2165   000A84                     u3250:
  2166   000A84  C073  F02D         	movff	efgtoa@ou,___flge@ff1
  2167   000A88  C074  F02E         	movff	efgtoa@ou+1,___flge@ff1+1
  2168   000A8C  C075  F02F         	movff	efgtoa@ou+2,___flge@ff1+2
  2169   000A90  C076  F030         	movff	efgtoa@ou+3,___flge@ff1+3
  2170   000A94  C084  F031         	movff	efgtoa@g,___flge@ff2
  2171   000A98  C085  F032         	movff	efgtoa@g+1,___flge@ff2+1
  2172   000A9C  C086  F033         	movff	efgtoa@g+2,___flge@ff2+2
  2173   000AA0  C087  F034         	movff	efgtoa@g+3,___flge@ff2+3
  2174   000AA4  EC0F  F015         	call	___flge	;wreg free
  2175   000AA8  A0D8               	btfss	status,0,c
  2176   000AAA  EF59  F005         	goto	u3261
  2177   000AAE  EF5B  F005         	goto	u3260
  2178   000AB2                     u3261:
  2179   000AB2  EFFE  F004         	goto	l855
  2180   000AB6                     u3260:
  2181   000AB6                     
  2182                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 583:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  2183   000AB6  0100               	movlb	0	; () banked
  2184   000AB8  5188               	movf	efgtoa@u& (0+255),w,b
  2185   000ABA  5D84               	subwf	efgtoa@g& (0+255),w,b
  2186   000ABC  6E01               	movwf	labs@a^0,c
  2187   000ABE  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  2188   000AC0  5985               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2189   000AC2  6E02               	movwf	(labs@a+1)^0,c
  2190   000AC4  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  2191   000AC6  5986               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2192   000AC8  6E03               	movwf	(labs@a+2)^0,c
  2193   000ACA  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  2194   000ACC  5987               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2195   000ACE  6E04               	movwf	(labs@a+3)^0,c
  2196   000AD0  EC41  F017         	call	_labs	;wreg free
  2197   000AD4  BE04               	btfsc	(?_labs+3)^0,7,c
  2198   000AD6  EF7A  F005         	goto	u3270
  2199   000ADA  5004               	movf	(?_labs+3)^0,w,c
  2200   000ADC  1003               	iorwf	(?_labs+2)^0,w,c
  2201   000ADE  1002               	iorwf	(?_labs+1)^0,w,c
  2202   000AE0  E107               	bnz	u3271
  2203   000AE2  0E02               	movlw	2
  2204   000AE4  5C01               	subwf	?_labs^0,w,c
  2205   000AE6  B0D8               	btfsc	status,0,c
  2206   000AE8  EF78  F005         	goto	u3271
  2207   000AEC  EF7A  F005         	goto	u3270
  2208   000AF0                     u3271:
  2209   000AF0  EFC2  F005         	goto	l3156
  2210   000AF4                     u3270:
  2211   000AF4                     l3146:
  2212                           
  2213                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 584:    g = u;
  2214   000AF4  C088  F084         	movff	efgtoa@u,efgtoa@g
  2215   000AF8  C089  F085         	movff	efgtoa@u+1,efgtoa@g+1
  2216   000AFC  C08A  F086         	movff	efgtoa@u+2,efgtoa@g+2
  2217   000B00  C08B  F087         	movff	efgtoa@u+3,efgtoa@g+3
  2218                           
  2219                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 585:   }
  2220   000B04  EFDB  F005         	goto	l853
  2221   000B08                     l3148:
  2222                           
  2223                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 588:     u.f = u.
      +                          f/10.0;
  2224   000B08  C088  F001         	movff	efgtoa@u,___fldiv@b
  2225   000B0C  C089  F002         	movff	efgtoa@u+1,___fldiv@b+1
  2226   000B10  C08A  F003         	movff	efgtoa@u+2,___fldiv@b+2
  2227   000B14  C08B  F004         	movff	efgtoa@u+3,___fldiv@b+3
  2228   000B18  0E00               	movlw	0
  2229   000B1A  6E05               	movwf	___fldiv@a^0,c
  2230   000B1C  0E00               	movlw	0
  2231   000B1E  6E06               	movwf	(___fldiv@a+1)^0,c
  2232   000B20  0E20               	movlw	32
  2233   000B22  6E07               	movwf	(___fldiv@a+2)^0,c
  2234   000B24  0E41               	movlw	65
  2235   000B26  6E08               	movwf	(___fldiv@a+3)^0,c
  2236   000B28  EC84  F00D         	call	___fldiv	;wreg free
  2237   000B2C  C001  F088         	movff	?___fldiv,efgtoa@u
  2238   000B30  C002  F089         	movff	?___fldiv+1,efgtoa@u+1
  2239   000B34  C003  F08A         	movff	?___fldiv+2,efgtoa@u+2
  2240   000B38  C004  F08B         	movff	?___fldiv+3,efgtoa@u+3
  2241   000B3C                     
  2242                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 589:     --e;
  2243   000B3C  0100               	movlb	0	; () banked
  2244   000B3E  076F               	decf	efgtoa@e& (0+255),f,b
  2245   000B40  A0D8               	btfss	status,0,c
  2246   000B42  0770               	decf	(efgtoa@e+1)& (0+255),f,b
  2247   000B44                     
  2248                           ; BSR set to: 0
  2249                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 590:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  2250   000B44  5188               	movf	efgtoa@u& (0+255),w,b
  2251   000B46  5D84               	subwf	efgtoa@g& (0+255),w,b
  2252   000B48  6E01               	movwf	labs@a^0,c
  2253   000B4A  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  2254   000B4C  5985               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2255   000B4E  6E02               	movwf	(labs@a+1)^0,c
  2256   000B50  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  2257   000B52  5986               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2258   000B54  6E03               	movwf	(labs@a+2)^0,c
  2259   000B56  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  2260   000B58  5987               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2261   000B5A  6E04               	movwf	(labs@a+3)^0,c
  2262   000B5C  EC41  F017         	call	_labs	;wreg free
  2263   000B60  BE04               	btfsc	(?_labs+3)^0,7,c
  2264   000B62  EFC0  F005         	goto	u3280
  2265   000B66  5004               	movf	(?_labs+3)^0,w,c
  2266   000B68  1003               	iorwf	(?_labs+2)^0,w,c
  2267   000B6A  1002               	iorwf	(?_labs+1)^0,w,c
  2268   000B6C  E107               	bnz	u3281
  2269   000B6E  0E02               	movlw	2
  2270   000B70  5C01               	subwf	?_labs^0,w,c
  2271   000B72  B0D8               	btfsc	status,0,c
  2272   000B74  EFBE  F005         	goto	u3281
  2273   000B78  EFC0  F005         	goto	u3280
  2274   000B7C                     u3281:
  2275   000B7C  EFC2  F005         	goto	l3156
  2276   000B80                     u3280:
  2277   000B80  EF7A  F005         	goto	l3146
  2278   000B84                     l3156:
  2279                           
  2280                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 587:    while (g.
      +                          f < u.f) {
  2281   000B84  C084  F02D         	movff	efgtoa@g,___flge@ff1
  2282   000B88  C085  F02E         	movff	efgtoa@g+1,___flge@ff1+1
  2283   000B8C  C086  F02F         	movff	efgtoa@g+2,___flge@ff1+2
  2284   000B90  C087  F030         	movff	efgtoa@g+3,___flge@ff1+3
  2285   000B94  C088  F031         	movff	efgtoa@u,___flge@ff2
  2286   000B98  C089  F032         	movff	efgtoa@u+1,___flge@ff2+1
  2287   000B9C  C08A  F033         	movff	efgtoa@u+2,___flge@ff2+2
  2288   000BA0  C08B  F034         	movff	efgtoa@u+3,___flge@ff2+3
  2289   000BA4  EC0F  F015         	call	___flge	;wreg free
  2290   000BA8  A0D8               	btfss	status,0,c
  2291   000BAA  EFD9  F005         	goto	u3291
  2292   000BAE  EFDB  F005         	goto	u3290
  2293   000BB2                     u3291:
  2294   000BB2  EF84  F005         	goto	l3148
  2295   000BB6                     u3290:
  2296   000BB6                     l853:
  2297                           
  2298                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 602:  mode = c;
  2299   000BB6  C04B  F069         	movff	efgtoa@c,efgtoa@mode
  2300                           
  2301                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 604:     nmode = 
      +                          mode;
  2302   000BBA  C069  F06A         	movff	efgtoa@mode,efgtoa@nmode
  2303   000BBE                     
  2304                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 614:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 615:         p = (prec < 0)
      +                           ? 6 : prec;
  2305   000BBE  0100               	movlb	0	; () banked
  2306   000BC0  BFC7               	btfsc	(_prec+1)& (0+255),7,b
  2307   000BC2  EFE5  F005         	goto	u3301
  2308   000BC6  EFE7  F005         	goto	u3300
  2309   000BCA                     u3301:
  2310   000BCA  EFED  F005         	goto	l3162
  2311   000BCE                     u3300:
  2312   000BCE                     
  2313                           ; BSR set to: 0
  2314   000BCE  C0C6  F062         	movff	_prec,efgtoa@p
  2315   000BD2  C0C7  F063         	movff	_prec+1,efgtoa@p+1
  2316   000BD6  EFF1  F005         	goto	l3164
  2317   000BDA                     l3162:
  2318                           
  2319                           ; BSR set to: 0
  2320   000BDA  0E00               	movlw	0
  2321   000BDC  6F63               	movwf	(efgtoa@p+1)& (0+255),b
  2322   000BDE  0E06               	movlw	6
  2323   000BE0  6F62               	movwf	efgtoa@p& (0+255),b
  2324   000BE2                     l3164:
  2325                           
  2326                           ; BSR set to: 0
  2327                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 616:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 630:     m = p;
  2328   000BE2  C062  F06D         	movff	efgtoa@p,efgtoa@m
  2329   000BE6  C063  F06E         	movff	efgtoa@p+1,efgtoa@m+1
  2330   000BEA                     
  2331                           ; BSR set to: 0
  2332                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 634:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 635:         ++m;
  2333   000BEA  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  2334   000BEC  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  2335   000BEE                     
  2336                           ; BSR set to: 0
  2337                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 636:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 640:     if (nmode == 'f
      +                          ') {
  2338   000BEE  0E66               	movlw	102
  2339   000BF0  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  2340   000BF2  A4D8               	btfss	status,2,c
  2341   000BF4  EFFE  F005         	goto	u3311
  2342   000BF8  EF00  F006         	goto	u3310
  2343   000BFC                     u3311:
  2344   000BFC  EF20  F006         	goto	l3178
  2345   000C00                     u3310:
  2346   000C00                     
  2347                           ; BSR set to: 0
  2348                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 641:         if (
      +                          e < 0) {
  2349   000C00  BF70               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2350   000C02  EF07  F006         	goto	u3320
  2351   000C06  EF05  F006         	goto	u3321
  2352   000C0A                     u3321:
  2353   000C0A  EF13  F006         	goto	l3174
  2354   000C0E                     u3320:
  2355   000C0E                     
  2356                           ; BSR set to: 0
  2357                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 642:             
      +                          u.f = 1.0;
  2358   000C0E  0E00               	movlw	0
  2359   000C10  6F88               	movwf	efgtoa@u& (0+255),b
  2360   000C12  0E00               	movlw	0
  2361   000C14  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  2362   000C16  0E80               	movlw	128
  2363   000C18  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  2364   000C1A  0E3F               	movlw	63
  2365   000C1C  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  2366                           
  2367                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 643:             
      +                          e = 0;
  2368   000C1E  0E00               	movlw	0
  2369   000C20  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  2370   000C22  0E00               	movlw	0
  2371   000C24  6F6F               	movwf	efgtoa@e& (0+255),b
  2372   000C26                     l3174:
  2373                           
  2374                           ; BSR set to: 0
  2375                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 645:         if (
      +                          !(mode == 'g')) {
  2376   000C26  0E67               	movlw	103
  2377   000C28  1969               	xorwf	efgtoa@mode& (0+255),w,b
  2378   000C2A  B4D8               	btfsc	status,2,c
  2379   000C2C  EF1A  F006         	goto	u3331
  2380   000C30  EF1C  F006         	goto	u3330
  2381   000C34                     u3331:
  2382   000C34  EF20  F006         	goto	l3178
  2383   000C38                     u3330:
  2384   000C38                     
  2385                           ; BSR set to: 0
  2386                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 646:             
      +                          m += e;
  2387   000C38  516F               	movf	efgtoa@e& (0+255),w,b
  2388   000C3A  276D               	addwf	efgtoa@m& (0+255),f,b
  2389   000C3C  5170               	movf	(efgtoa@e+1)& (0+255),w,b
  2390   000C3E  236E               	addwfc	(efgtoa@m+1)& (0+255),f,b
  2391   000C40                     l3178:
  2392                           
  2393                           ; BSR set to: 0
  2394                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 652:     i = 0;
  2395   000C40  0E00               	movlw	0
  2396   000C42  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  2397   000C44  0E00               	movlw	0
  2398   000C46  6F77               	movwf	efgtoa@i& (0+255),b
  2399   000C48                     
  2400                           ; BSR set to: 0
  2401                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 653:     h = g.f;
  2402   000C48  C084  F079         	movff	efgtoa@g,efgtoa@h
  2403   000C4C  C085  F07A         	movff	efgtoa@g+1,efgtoa@h+1
  2404   000C50  C086  F07B         	movff	efgtoa@g+2,efgtoa@h+2
  2405   000C54  C087  F07C         	movff	efgtoa@g+3,efgtoa@h+3
  2406   000C58                     
  2407                           ; BSR set to: 0
  2408                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 654:     ou = u;
  2409   000C58  C088  F073         	movff	efgtoa@u,efgtoa@ou
  2410   000C5C  C089  F074         	movff	efgtoa@u+1,efgtoa@ou+1
  2411   000C60  C08A  F075         	movff	efgtoa@u+2,efgtoa@ou+2
  2412   000C64  C08B  F076         	movff	efgtoa@u+3,efgtoa@ou+3
  2413                           
  2414                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  2415   000C68  EFB1  F006         	goto	l3192
  2416   000C6C                     l3184:
  2417                           
  2418                           ; BSR set to: 0
  2419                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 656:         l = 
      +                          floorf(h/u.f);
  2420   000C6C  C079  F001         	movff	efgtoa@h,___fldiv@b
  2421   000C70  C07A  F002         	movff	efgtoa@h+1,___fldiv@b+1
  2422   000C74  C07B  F003         	movff	efgtoa@h+2,___fldiv@b+2
  2423   000C78  C07C  F004         	movff	efgtoa@h+3,___fldiv@b+3
  2424   000C7C  C088  F005         	movff	efgtoa@u,___fldiv@a
  2425   000C80  C089  F006         	movff	efgtoa@u+1,___fldiv@a+1
  2426   000C84  C08A  F007         	movff	efgtoa@u+2,___fldiv@a+2
  2427   000C88  C08B  F008         	movff	efgtoa@u+3,___fldiv@a+3
  2428   000C8C  EC84  F00D         	call	___fldiv	;wreg free
  2429   000C90  C001  F01A         	movff	?___fldiv,floorf@x
  2430   000C94  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  2431   000C98  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  2432   000C9C  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  2433   000CA0  EC04  F012         	call	_floorf	;wreg free
  2434   000CA4  C01A  F07D         	movff	?_floorf,efgtoa@l
  2435   000CA8  C01B  F07E         	movff	?_floorf+1,efgtoa@l+1
  2436   000CAC  C01C  F07F         	movff	?_floorf+2,efgtoa@l+2
  2437   000CB0  C01D  F080         	movff	?_floorf+3,efgtoa@l+3
  2438                           
  2439                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 657:         d = 
      +                          (int)l;
  2440   000CB4  C07D  F001         	movff	efgtoa@l,___fltol@f1
  2441   000CB8  C07E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2442   000CBC  C07F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2443   000CC0  C080  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2444   000CC4  EC8C  F014         	call	___fltol	;wreg free
  2445   000CC8  C001  F06B         	movff	?___fltol,efgtoa@d
  2446   000CCC  C002  F06C         	movff	?___fltol+1,efgtoa@d+1
  2447   000CD0                     
  2448                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 658:         h -=
      +                           l*u.f;
  2449   000CD0  C079  F03D         	movff	efgtoa@h,___flsub@b
  2450   000CD4  C07A  F03E         	movff	efgtoa@h+1,___flsub@b+1
  2451   000CD8  C07B  F03F         	movff	efgtoa@h+2,___flsub@b+2
  2452   000CDC  C07C  F040         	movff	efgtoa@h+3,___flsub@b+3
  2453   000CE0  C07D  F018         	movff	efgtoa@l,___flmul@a
  2454   000CE4  C07E  F019         	movff	efgtoa@l+1,___flmul@a+1
  2455   000CE8  C07F  F01A         	movff	efgtoa@l+2,___flmul@a+2
  2456   000CEC  C080  F01B         	movff	efgtoa@l+3,___flmul@a+3
  2457   000CF0  C088  F014         	movff	efgtoa@u,___flmul@b
  2458   000CF4  C089  F015         	movff	efgtoa@u+1,___flmul@b+1
  2459   000CF8  C08A  F016         	movff	efgtoa@u+2,___flmul@b+2
  2460   000CFC  C08B  F017         	movff	efgtoa@u+3,___flmul@b+3
  2461   000D00  EC6F  F00B         	call	___flmul	;wreg free
  2462   000D04  C014  F041         	movff	?___flmul,___flsub@a
  2463   000D08  C015  F042         	movff	?___flmul+1,___flsub@a+1
  2464   000D0C  C016  F043         	movff	?___flmul+2,___flsub@a+2
  2465   000D10  C017  F044         	movff	?___flmul+3,___flsub@a+3
  2466   000D14  EC4D  F018         	call	___flsub	;wreg free
  2467   000D18  C03D  F079         	movff	?___flsub,efgtoa@h
  2468   000D1C  C03E  F07A         	movff	?___flsub+1,efgtoa@h+1
  2469   000D20  C03F  F07B         	movff	?___flsub+2,efgtoa@h+2
  2470   000D24  C040  F07C         	movff	?___flsub+3,efgtoa@h+3
  2471   000D28                     
  2472                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 659:         u.f 
      +                          = u.f/10.0;
  2473   000D28  C088  F001         	movff	efgtoa@u,___fldiv@b
  2474   000D2C  C089  F002         	movff	efgtoa@u+1,___fldiv@b+1
  2475   000D30  C08A  F003         	movff	efgtoa@u+2,___fldiv@b+2
  2476   000D34  C08B  F004         	movff	efgtoa@u+3,___fldiv@b+3
  2477   000D38  0E00               	movlw	0
  2478   000D3A  6E05               	movwf	___fldiv@a^0,c
  2479   000D3C  0E00               	movlw	0
  2480   000D3E  6E06               	movwf	(___fldiv@a+1)^0,c
  2481   000D40  0E20               	movlw	32
  2482   000D42  6E07               	movwf	(___fldiv@a+2)^0,c
  2483   000D44  0E41               	movlw	65
  2484   000D46  6E08               	movwf	(___fldiv@a+3)^0,c
  2485   000D48  EC84  F00D         	call	___fldiv	;wreg free
  2486   000D4C  C001  F088         	movff	?___fldiv,efgtoa@u
  2487   000D50  C002  F089         	movff	?___fldiv+1,efgtoa@u+1
  2488   000D54  C003  F08A         	movff	?___fldiv+2,efgtoa@u+2
  2489   000D58  C004  F08B         	movff	?___fldiv+3,efgtoa@u+3
  2490   000D5C                     
  2491                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 660:         ++i;
  2492   000D5C  0100               	movlb	0	; () banked
  2493   000D5E  4B77               	infsnz	efgtoa@i& (0+255),f,b
  2494   000D60  2B78               	incf	(efgtoa@i+1)& (0+255),f,b
  2495   000D62                     l3192:
  2496                           
  2497                           ; BSR set to: 0
  2498                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  2499   000D62  516D               	movf	efgtoa@m& (0+255),w,b
  2500   000D64  5D77               	subwf	efgtoa@i& (0+255),w,b
  2501   000D66  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  2502   000D68  0A80               	xorlw	128
  2503   000D6A  6E4C               	movwf	??_efgtoa^0,c
  2504   000D6C  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  2505   000D6E  0A80               	xorlw	128
  2506   000D70  584C               	subwfb	??_efgtoa^0,w,c
  2507   000D72  A0D8               	btfss	status,0,c
  2508   000D74  EFBE  F006         	goto	u3341
  2509   000D78  EFC0  F006         	goto	u3340
  2510   000D7C                     u3341:
  2511   000D7C  EF36  F006         	goto	l3184
  2512   000D80                     u3340:
  2513   000D80                     
  2514                           ; BSR set to: 0
  2515                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 664:     l = u.f*
      +                          5.0;
  2516   000D80  C088  F014         	movff	efgtoa@u,___flmul@b
  2517   000D84  C089  F015         	movff	efgtoa@u+1,___flmul@b+1
  2518   000D88  C08A  F016         	movff	efgtoa@u+2,___flmul@b+2
  2519   000D8C  C08B  F017         	movff	efgtoa@u+3,___flmul@b+3
  2520   000D90  0E00               	movlw	0
  2521   000D92  6E18               	movwf	___flmul@a^0,c
  2522   000D94  0E00               	movlw	0
  2523   000D96  6E19               	movwf	(___flmul@a+1)^0,c
  2524   000D98  0EA0               	movlw	160
  2525   000D9A  6E1A               	movwf	(___flmul@a+2)^0,c
  2526   000D9C  0E40               	movlw	64
  2527   000D9E  6E1B               	movwf	(___flmul@a+3)^0,c
  2528   000DA0  EC6F  F00B         	call	___flmul	;wreg free
  2529   000DA4  C014  F07D         	movff	?___flmul,efgtoa@l
  2530   000DA8  C015  F07E         	movff	?___flmul+1,efgtoa@l+1
  2531   000DAC  C016  F07F         	movff	?___flmul+2,efgtoa@l+2
  2532   000DB0  C017  F080         	movff	?___flmul+3,efgtoa@l+3
  2533   000DB4                     
  2534                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 665:     if (h < 
      +                          l) {
  2535   000DB4  C079  F02D         	movff	efgtoa@h,___flge@ff1
  2536   000DB8  C07A  F02E         	movff	efgtoa@h+1,___flge@ff1+1
  2537   000DBC  C07B  F02F         	movff	efgtoa@h+2,___flge@ff1+2
  2538   000DC0  C07C  F030         	movff	efgtoa@h+3,___flge@ff1+3
  2539   000DC4  C07D  F031         	movff	efgtoa@l,___flge@ff2
  2540   000DC8  C07E  F032         	movff	efgtoa@l+1,___flge@ff2+1
  2541   000DCC  C07F  F033         	movff	efgtoa@l+2,___flge@ff2+2
  2542   000DD0  C080  F034         	movff	efgtoa@l+3,___flge@ff2+3
  2543   000DD4  EC0F  F015         	call	___flge	;wreg free
  2544   000DD8  B0D8               	btfsc	status,0,c
  2545   000DDA  EFF1  F006         	goto	u3351
  2546   000DDE  EFF3  F006         	goto	u3350
  2547   000DE2                     u3351:
  2548   000DE2  EFFE  F006         	goto	l3200
  2549   000DE6                     u3350:
  2550   000DE6                     
  2551                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 666:         l = 
      +                          0.0;
  2552   000DE6  0E00               	movlw	0
  2553   000DE8  0100               	movlb	0	; () banked
  2554   000DEA  6F7D               	movwf	efgtoa@l& (0+255),b
  2555   000DEC  0E00               	movlw	0
  2556   000DEE  6F7E               	movwf	(efgtoa@l+1)& (0+255),b
  2557   000DF0  0E00               	movlw	0
  2558   000DF2  6F7F               	movwf	(efgtoa@l+2)& (0+255),b
  2559   000DF4  0E00               	movlw	0
  2560   000DF6  6F80               	movwf	(efgtoa@l+3)& (0+255),b
  2561                           
  2562                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 667:     } else {
  2563   000DF8  EF27  F007         	goto	l3206
  2564   000DFC                     l3200:
  2565                           
  2566                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 669:         if (
      +                          (h == l) && !(d % 2)) {
  2567   000DFC  C079  F001         	movff	efgtoa@h,___fleq@ff1
  2568   000E00  C07A  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  2569   000E04  C07B  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  2570   000E08  C07C  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  2571   000E0C  C07D  F005         	movff	efgtoa@l,___fleq@ff2
  2572   000E10  C07E  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  2573   000E14  C07F  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  2574   000E18  C080  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  2575   000E1C  EC75  F016         	call	___fleq	;wreg free
  2576   000E20  A0D8               	btfss	status,0,c
  2577   000E22  EF15  F007         	goto	u3361
  2578   000E26  EF17  F007         	goto	u3360
  2579   000E2A                     u3361:
  2580   000E2A  EF27  F007         	goto	l3206
  2581   000E2E                     u3360:
  2582   000E2E  0100               	movlb	0	; () banked
  2583   000E30  B16B               	btfsc	efgtoa@d& (0+255),0,b
  2584   000E32  EF1D  F007         	goto	u3371
  2585   000E36  EF1F  F007         	goto	u3370
  2586   000E3A                     u3371:
  2587   000E3A  EF27  F007         	goto	l3206
  2588   000E3E                     u3370:
  2589   000E3E                     
  2590                           ; BSR set to: 0
  2591                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 670:             
      +                          l = 0.0;
  2592   000E3E  0E00               	movlw	0
  2593   000E40  6F7D               	movwf	efgtoa@l& (0+255),b
  2594   000E42  0E00               	movlw	0
  2595   000E44  6F7E               	movwf	(efgtoa@l+1)& (0+255),b
  2596   000E46  0E00               	movlw	0
  2597   000E48  6F7F               	movwf	(efgtoa@l+2)& (0+255),b
  2598   000E4A  0E00               	movlw	0
  2599   000E4C  6F80               	movwf	(efgtoa@l+3)& (0+255),b
  2600   000E4E                     l3206:
  2601                           
  2602                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 675:     h = g.f 
      +                          + l;
  2603   000E4E  C084  F02D         	movff	efgtoa@g,___fladd@b
  2604   000E52  C085  F02E         	movff	efgtoa@g+1,___fladd@b+1
  2605   000E56  C086  F02F         	movff	efgtoa@g+2,___fladd@b+2
  2606   000E5A  C087  F030         	movff	efgtoa@g+3,___fladd@b+3
  2607   000E5E  C07D  F031         	movff	efgtoa@l,___fladd@a
  2608   000E62  C07E  F032         	movff	efgtoa@l+1,___fladd@a+1
  2609   000E66  C07F  F033         	movff	efgtoa@l+2,___fladd@a+2
  2610   000E6A  C080  F034         	movff	efgtoa@l+3,___fladd@a+3
  2611   000E6E  EC0F  F009         	call	___fladd	;wreg free
  2612   000E72  C02D  F079         	movff	?___fladd,efgtoa@h
  2613   000E76  C02E  F07A         	movff	?___fladd+1,efgtoa@h+1
  2614   000E7A  C02F  F07B         	movff	?___fladd+2,efgtoa@h+2
  2615   000E7E  C030  F07C         	movff	?___fladd+3,efgtoa@h+3
  2616   000E82                     
  2617                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 677:  if (h >= (o
      +                          u.f*10.0)) {
  2618   000E82  C079  F02D         	movff	efgtoa@h,___flge@ff1
  2619   000E86  C07A  F02E         	movff	efgtoa@h+1,___flge@ff1+1
  2620   000E8A  C07B  F02F         	movff	efgtoa@h+2,___flge@ff1+2
  2621   000E8E  C07C  F030         	movff	efgtoa@h+3,___flge@ff1+3
  2622   000E92  0E00               	movlw	0
  2623   000E94  6E18               	movwf	___flmul@a^0,c
  2624   000E96  0E00               	movlw	0
  2625   000E98  6E19               	movwf	(___flmul@a+1)^0,c
  2626   000E9A  0E20               	movlw	32
  2627   000E9C  6E1A               	movwf	(___flmul@a+2)^0,c
  2628   000E9E  0E41               	movlw	65
  2629   000EA0  6E1B               	movwf	(___flmul@a+3)^0,c
  2630   000EA2  C073  F014         	movff	efgtoa@ou,___flmul@b
  2631   000EA6  C074  F015         	movff	efgtoa@ou+1,___flmul@b+1
  2632   000EAA  C075  F016         	movff	efgtoa@ou+2,___flmul@b+2
  2633   000EAE  C076  F017         	movff	efgtoa@ou+3,___flmul@b+3
  2634   000EB2  EC6F  F00B         	call	___flmul	;wreg free
  2635   000EB6  C014  F031         	movff	?___flmul,___flge@ff2
  2636   000EBA  C015  F032         	movff	?___flmul+1,___flge@ff2+1
  2637   000EBE  C016  F033         	movff	?___flmul+2,___flge@ff2+2
  2638   000EC2  C017  F034         	movff	?___flmul+3,___flge@ff2+3
  2639   000EC6  EC0F  F015         	call	___flge	;wreg free
  2640   000ECA  A0D8               	btfss	status,0,c
  2641   000ECC  EF6A  F007         	goto	u3381
  2642   000ED0  EF6C  F007         	goto	u3380
  2643   000ED4                     u3381:
  2644   000ED4  EF95  F007         	goto	l3218
  2645   000ED8                     u3380:
  2646   000ED8                     
  2647                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 678:   e++;
  2648   000ED8  0100               	movlb	0	; () banked
  2649   000EDA  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  2650   000EDC  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  2651   000EDE                     
  2652                           ; BSR set to: 0
  2653                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 679:   ou.f *= 10
      +                          .0;
  2654   000EDE  C073  F014         	movff	efgtoa@ou,___flmul@b
  2655   000EE2  C074  F015         	movff	efgtoa@ou+1,___flmul@b+1
  2656   000EE6  C075  F016         	movff	efgtoa@ou+2,___flmul@b+2
  2657   000EEA  C076  F017         	movff	efgtoa@ou+3,___flmul@b+3
  2658   000EEE  0E00               	movlw	0
  2659   000EF0  6E18               	movwf	___flmul@a^0,c
  2660   000EF2  0E00               	movlw	0
  2661   000EF4  6E19               	movwf	(___flmul@a+1)^0,c
  2662   000EF6  0E20               	movlw	32
  2663   000EF8  6E1A               	movwf	(___flmul@a+2)^0,c
  2664   000EFA  0E41               	movlw	65
  2665   000EFC  6E1B               	movwf	(___flmul@a+3)^0,c
  2666   000EFE  EC6F  F00B         	call	___flmul	;wreg free
  2667   000F02  C014  F073         	movff	?___flmul,efgtoa@ou
  2668   000F06  C015  F074         	movff	?___flmul+1,efgtoa@ou+1
  2669   000F0A  C016  F075         	movff	?___flmul+2,efgtoa@ou+2
  2670   000F0E  C017  F076         	movff	?___flmul+3,efgtoa@ou+3
  2671   000F12                     
  2672                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 681:   if (nmode 
      +                          == 'f') {
  2673   000F12  0E66               	movlw	102
  2674   000F14  0100               	movlb	0	; () banked
  2675   000F16  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  2676   000F18  A4D8               	btfss	status,2,c
  2677   000F1A  EF91  F007         	goto	u3391
  2678   000F1E  EF93  F007         	goto	u3390
  2679   000F22                     u3391:
  2680   000F22  EF95  F007         	goto	l3218
  2681   000F26                     u3390:
  2682   000F26                     
  2683                           ; BSR set to: 0
  2684                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 683:    m++;
  2685   000F26  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  2686   000F28  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  2687   000F2A                     l3218:
  2688                           
  2689                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 689:     u = ou;
  2690   000F2A  C073  F088         	movff	efgtoa@ou,efgtoa@u
  2691   000F2E  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  2692   000F32  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  2693   000F36  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  2694   000F3A                     
  2695                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 693:  ne = e;
  2696   000F3A  C06F  F060         	movff	efgtoa@e,efgtoa@ne
  2697   000F3E  C070  F061         	movff	efgtoa@e+1,efgtoa@ne+1
  2698   000F42                     
  2699                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 695:     pp = 0;
  2700   000F42  0E00               	movlw	0
  2701   000F44  0100               	movlb	0	; () banked
  2702   000F46  6F68               	movwf	efgtoa@pp& (0+255),b
  2703   000F48                     
  2704                           ; BSR set to: 0
  2705                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 696:     t = 0;
  2706   000F48  0E00               	movlw	0
  2707   000F4A  6F65               	movwf	(efgtoa@t+1)& (0+255),b
  2708   000F4C  0E00               	movlw	0
  2709   000F4E  6F64               	movwf	efgtoa@t& (0+255),b
  2710   000F50                     
  2711                           ; BSR set to: 0
  2712                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 697:     i = 0;
  2713   000F50  0E00               	movlw	0
  2714   000F52  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  2715   000F54  0E00               	movlw	0
  2716   000F56  6F77               	movwf	efgtoa@i& (0+255),b
  2717                           
  2718                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  2719   000F58  EF93  F008         	goto	l3268
  2720   000F5C                     l3228:
  2721                           
  2722                           ; BSR set to: 0
  2723                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 699:         l = 
      +                          floorf(h/u.f);
  2724   000F5C  C079  F001         	movff	efgtoa@h,___fldiv@b
  2725   000F60  C07A  F002         	movff	efgtoa@h+1,___fldiv@b+1
  2726   000F64  C07B  F003         	movff	efgtoa@h+2,___fldiv@b+2
  2727   000F68  C07C  F004         	movff	efgtoa@h+3,___fldiv@b+3
  2728   000F6C  C088  F005         	movff	efgtoa@u,___fldiv@a
  2729   000F70  C089  F006         	movff	efgtoa@u+1,___fldiv@a+1
  2730   000F74  C08A  F007         	movff	efgtoa@u+2,___fldiv@a+2
  2731   000F78  C08B  F008         	movff	efgtoa@u+3,___fldiv@a+3
  2732   000F7C  EC84  F00D         	call	___fldiv	;wreg free
  2733   000F80  C001  F01A         	movff	?___fldiv,floorf@x
  2734   000F84  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  2735   000F88  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  2736   000F8C  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  2737   000F90  EC04  F012         	call	_floorf	;wreg free
  2738   000F94  C01A  F07D         	movff	?_floorf,efgtoa@l
  2739   000F98  C01B  F07E         	movff	?_floorf+1,efgtoa@l+1
  2740   000F9C  C01C  F07F         	movff	?_floorf+2,efgtoa@l+2
  2741   000FA0  C01D  F080         	movff	?_floorf+3,efgtoa@l+3
  2742                           
  2743                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 700:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  2744   000FA4  C07D  F001         	movff	efgtoa@l,___fltol@f1
  2745   000FA8  C07E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2746   000FAC  C07F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2747   000FB0  C080  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2748   000FB4  EC8C  F014         	call	___fltol	;wreg free
  2749   000FB8  BE02               	btfsc	(?___fltol+1)^0,7,c
  2750   000FBA  EFEA  F007         	goto	u3400
  2751   000FBE  5002               	movf	(?___fltol+1)^0,w,c
  2752   000FC0  E107               	bnz	u3401
  2753   000FC2  0E0A               	movlw	10
  2754   000FC4  5C01               	subwf	?___fltol^0,w,c
  2755   000FC6  B0D8               	btfsc	status,0,c
  2756   000FC8  EFE8  F007         	goto	u3401
  2757   000FCC  EFEA  F007         	goto	u3400
  2758   000FD0                     u3401:
  2759   000FD0  EFFA  F007         	goto	l3232
  2760   000FD4                     u3400:
  2761   000FD4  C07D  F001         	movff	efgtoa@l,___fltol@f1
  2762   000FD8  C07E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2763   000FDC  C07F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2764   000FE0  C080  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2765   000FE4  EC8C  F014         	call	___fltol	;wreg free
  2766   000FE8  C001  F06B         	movff	?___fltol,efgtoa@d
  2767   000FEC  C002  F06C         	movff	?___fltol+1,efgtoa@d+1
  2768   000FF0  EFFF  F007         	goto	l883
  2769   000FF4                     l3232:
  2770   000FF4  0E00               	movlw	0
  2771   000FF6  0100               	movlb	0	; () banked
  2772   000FF8  6F6C               	movwf	(efgtoa@d+1)& (0+255),b
  2773   000FFA  0E09               	movlw	9
  2774   000FFC  6F6B               	movwf	efgtoa@d& (0+255),b
  2775   000FFE                     l883:
  2776                           
  2777                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 711:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 712:             if (!pp &
      +                          & (ne < 0)) {
  2778   000FFE  0100               	movlb	0	; () banked
  2779   001000  5168               	movf	efgtoa@pp& (0+255),w,b
  2780   001002  A4D8               	btfss	status,2,c
  2781   001004  EF06  F008         	goto	u3411
  2782   001008  EF08  F008         	goto	u3410
  2783   00100C                     u3411:
  2784   00100C  EF30  F008         	goto	l3252
  2785   001010                     u3410:
  2786   001010                     
  2787                           ; BSR set to: 0
  2788   001010  BF61               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  2789   001012  EF0F  F008         	goto	u3420
  2790   001016  EF0D  F008         	goto	u3421
  2791   00101A                     u3421:
  2792   00101A  EF30  F008         	goto	l3252
  2793   00101E                     u3420:
  2794   00101E                     
  2795                           ; BSR set to: 0
  2796                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 713:             
      +                              dbuf[n++] = '.';
  2797   00101E  0E00               	movlw	low _dbuf
  2798   001020  2582               	addwf	efgtoa@n& (0+255),w,b
  2799   001022  6ED9               	movwf	fsr2l,c
  2800   001024  0E01               	movlw	high _dbuf
  2801   001026  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2802   001028  6EDA               	movwf	fsr2h,c
  2803   00102A  0E2E               	movlw	46
  2804   00102C  6EDF               	movwf	indf2,c
  2805   00102E                     
  2806                           ; BSR set to: 0
  2807   00102E  4B82               	infsnz	efgtoa@n& (0+255),f,b
  2808   001030  2B83               	incf	(efgtoa@n+1)& (0+255),f,b
  2809   001032                     
  2810                           ; BSR set to: 0
  2811                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 714:             
      +                              --w;
  2812   001032  0771               	decf	efgtoa@w& (0+255),f,b
  2813   001034  A0D8               	btfss	status,0,c
  2814   001036  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2815   001038                     
  2816                           ; BSR set to: 0
  2817                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 715:             
      +                              pp = 1;
  2818   001038  0E01               	movlw	1
  2819   00103A  6F68               	movwf	efgtoa@pp& (0+255),b
  2820   00103C  EF30  F008         	goto	l3252
  2821   001040                     l3244:
  2822                           
  2823                           ; BSR set to: 0
  2824                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 718:             
      +                              dbuf[n++] = '0';
  2825   001040  0E00               	movlw	low _dbuf
  2826   001042  2582               	addwf	efgtoa@n& (0+255),w,b
  2827   001044  6ED9               	movwf	fsr2l,c
  2828   001046  0E01               	movlw	high _dbuf
  2829   001048  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2830   00104A  6EDA               	movwf	fsr2h,c
  2831   00104C  0E30               	movlw	48
  2832   00104E  6EDF               	movwf	indf2,c
  2833   001050                     
  2834                           ; BSR set to: 0
  2835   001050  4B82               	infsnz	efgtoa@n& (0+255),f,b
  2836   001052  2B83               	incf	(efgtoa@n+1)& (0+255),f,b
  2837   001054                     
  2838                           ; BSR set to: 0
  2839                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 719:             
      +                              --w;
  2840   001054  0771               	decf	efgtoa@w& (0+255),f,b
  2841   001056  A0D8               	btfss	status,0,c
  2842   001058  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2843   00105A                     
  2844                           ; BSR set to: 0
  2845                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 720:             
      +                              --t;
  2846   00105A  0764               	decf	efgtoa@t& (0+255),f,b
  2847   00105C  A0D8               	btfss	status,0,c
  2848   00105E  0765               	decf	(efgtoa@t+1)& (0+255),f,b
  2849   001060                     l3252:
  2850                           
  2851                           ; BSR set to: 0
  2852                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 717:             
      +                          while (t) {
  2853   001060  5164               	movf	efgtoa@t& (0+255),w,b
  2854   001062  1165               	iorwf	(efgtoa@t+1)& (0+255),w,b
  2855   001064  A4D8               	btfss	status,2,c
  2856   001066  EF37  F008         	goto	u3431
  2857   00106A  EF39  F008         	goto	u3430
  2858   00106E                     u3431:
  2859   00106E  EF20  F008         	goto	l3244
  2860   001072                     u3430:
  2861   001072                     
  2862                           ; BSR set to: 0
  2863                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 722:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  2864   001072  0E00               	movlw	low _dbuf
  2865   001074  2582               	addwf	efgtoa@n& (0+255),w,b
  2866   001076  6ED9               	movwf	fsr2l,c
  2867   001078  0E01               	movlw	high _dbuf
  2868   00107A  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2869   00107C  6EDA               	movwf	fsr2h,c
  2870   00107E  516B               	movf	efgtoa@d& (0+255),w,b
  2871   001080  0F30               	addlw	48
  2872   001082  6EDF               	movwf	indf2,c
  2873   001084                     
  2874                           ; BSR set to: 0
  2875   001084  4B82               	infsnz	efgtoa@n& (0+255),f,b
  2876   001086  2B83               	incf	(efgtoa@n+1)& (0+255),f,b
  2877   001088                     
  2878                           ; BSR set to: 0
  2879                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 723:             
      +                          --w;
  2880   001088  0771               	decf	efgtoa@w& (0+255),f,b
  2881   00108A  A0D8               	btfss	status,0,c
  2882   00108C  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2883   00108E                     
  2884                           ; BSR set to: 0
  2885                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 724:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 725:         h -= l*
      +                          u.f;
  2886   00108E  C079  F03D         	movff	efgtoa@h,___flsub@b
  2887   001092  C07A  F03E         	movff	efgtoa@h+1,___flsub@b+1
  2888   001096  C07B  F03F         	movff	efgtoa@h+2,___flsub@b+2
  2889   00109A  C07C  F040         	movff	efgtoa@h+3,___flsub@b+3
  2890   00109E  C07D  F018         	movff	efgtoa@l,___flmul@a
  2891   0010A2  C07E  F019         	movff	efgtoa@l+1,___flmul@a+1
  2892   0010A6  C07F  F01A         	movff	efgtoa@l+2,___flmul@a+2
  2893   0010AA  C080  F01B         	movff	efgtoa@l+3,___flmul@a+3
  2894   0010AE  C088  F014         	movff	efgtoa@u,___flmul@b
  2895   0010B2  C089  F015         	movff	efgtoa@u+1,___flmul@b+1
  2896   0010B6  C08A  F016         	movff	efgtoa@u+2,___flmul@b+2
  2897   0010BA  C08B  F017         	movff	efgtoa@u+3,___flmul@b+3
  2898   0010BE  EC6F  F00B         	call	___flmul	;wreg free
  2899   0010C2  C014  F041         	movff	?___flmul,___flsub@a
  2900   0010C6  C015  F042         	movff	?___flmul+1,___flsub@a+1
  2901   0010CA  C016  F043         	movff	?___flmul+2,___flsub@a+2
  2902   0010CE  C017  F044         	movff	?___flmul+3,___flsub@a+3
  2903   0010D2  EC4D  F018         	call	___flsub	;wreg free
  2904   0010D6  C03D  F079         	movff	?___flsub,efgtoa@h
  2905   0010DA  C03E  F07A         	movff	?___flsub+1,efgtoa@h+1
  2906   0010DE  C03F  F07B         	movff	?___flsub+2,efgtoa@h+2
  2907   0010E2  C040  F07C         	movff	?___flsub+3,efgtoa@h+3
  2908   0010E6                     
  2909                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 726:         u.f 
      +                          = u.f/10.0;
  2910   0010E6  C088  F001         	movff	efgtoa@u,___fldiv@b
  2911   0010EA  C089  F002         	movff	efgtoa@u+1,___fldiv@b+1
  2912   0010EE  C08A  F003         	movff	efgtoa@u+2,___fldiv@b+2
  2913   0010F2  C08B  F004         	movff	efgtoa@u+3,___fldiv@b+3
  2914   0010F6  0E00               	movlw	0
  2915   0010F8  6E05               	movwf	___fldiv@a^0,c
  2916   0010FA  0E00               	movlw	0
  2917   0010FC  6E06               	movwf	(___fldiv@a+1)^0,c
  2918   0010FE  0E20               	movlw	32
  2919   001100  6E07               	movwf	(___fldiv@a+2)^0,c
  2920   001102  0E41               	movlw	65
  2921   001104  6E08               	movwf	(___fldiv@a+3)^0,c
  2922   001106  EC84  F00D         	call	___fldiv	;wreg free
  2923   00110A  C001  F088         	movff	?___fldiv,efgtoa@u
  2924   00110E  C002  F089         	movff	?___fldiv+1,efgtoa@u+1
  2925   001112  C003  F08A         	movff	?___fldiv+2,efgtoa@u+2
  2926   001116  C004  F08B         	movff	?___fldiv+3,efgtoa@u+3
  2927   00111A                     
  2928                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 727:         --ne
      +                          ;
  2929   00111A  0100               	movlb	0	; () banked
  2930   00111C  0760               	decf	efgtoa@ne& (0+255),f,b
  2931   00111E  A0D8               	btfss	status,0,c
  2932   001120  0761               	decf	(efgtoa@ne+1)& (0+255),f,b
  2933   001122                     
  2934                           ; BSR set to: 0
  2935                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 728:         ++i;
  2936   001122  4B77               	infsnz	efgtoa@i& (0+255),f,b
  2937   001124  2B78               	incf	(efgtoa@i+1)& (0+255),f,b
  2938   001126                     l3268:
  2939                           
  2940                           ; BSR set to: 0
  2941                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  2942   001126  516D               	movf	efgtoa@m& (0+255),w,b
  2943   001128  5D77               	subwf	efgtoa@i& (0+255),w,b
  2944   00112A  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  2945   00112C  0A80               	xorlw	128
  2946   00112E  6E4C               	movwf	??_efgtoa^0,c
  2947   001130  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  2948   001132  0A80               	xorlw	128
  2949   001134  584C               	subwfb	??_efgtoa^0,w,c
  2950   001136  B0D8               	btfsc	status,0,c
  2951   001138  EFA0  F008         	goto	u3441
  2952   00113C  EFA2  F008         	goto	u3440
  2953   001140                     u3441:
  2954   001140  EFB0  F008         	goto	l3272
  2955   001144                     u3440:
  2956   001144                     
  2957                           ; BSR set to: 0
  2958   001144  BF83               	btfsc	(efgtoa@n+1)& (0+255),7,b
  2959   001146  EFAE  F008         	goto	u3451
  2960   00114A  5183               	movf	(efgtoa@n+1)& (0+255),w,b
  2961   00114C  E109               	bnz	u3450
  2962   00114E  0E4B               	movlw	75
  2963   001150  5D82               	subwf	efgtoa@n& (0+255),w,b
  2964   001152  A0D8               	btfss	status,0,c
  2965   001154  EFAE  F008         	goto	u3451
  2966   001158  EFB0  F008         	goto	u3450
  2967   00115C                     u3451:
  2968   00115C  EFAE  F007         	goto	l3228
  2969   001160                     u3450:
  2970   001160                     l3272:
  2971                           
  2972                           ; BSR set to: 0
  2973                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 735:  i = sizeof(
      +                          dbuf) - 1;
  2974   001160  0E00               	movlw	0
  2975   001162  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  2976   001164  0E4F               	movlw	79
  2977   001166  6F77               	movwf	efgtoa@i& (0+255),b
  2978   001168                     
  2979                           ; BSR set to: 0
  2980                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 736:     dbuf[i] 
      +                          = '\0';
  2981   001168  0E00               	movlw	low _dbuf
  2982   00116A  2577               	addwf	efgtoa@i& (0+255),w,b
  2983   00116C  6ED9               	movwf	fsr2l,c
  2984   00116E  0E01               	movlw	high _dbuf
  2985   001170  2178               	addwfc	(efgtoa@i+1)& (0+255),w,b
  2986   001172  6EDA               	movwf	fsr2h,c
  2987   001174  0E00               	movlw	0
  2988   001176  6EDF               	movwf	indf2,c
  2989   001178                     
  2990                           ; BSR set to: 0
  2991                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 767:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  2992   001178  0E00               	movlw	low _dbuf
  2993   00117A  6E4C               	movwf	??_efgtoa^0,c
  2994   00117C  0E01               	movlw	high _dbuf
  2995   00117E  6E4D               	movwf	(??_efgtoa+1)^0,c
  2996   001180  5182               	movf	efgtoa@n& (0+255),w,b
  2997   001182  5E4C               	subwf	??_efgtoa^0,f,c
  2998   001184  5183               	movf	(efgtoa@n+1)& (0+255),w,b
  2999   001186  5A4D               	subwfb	(??_efgtoa+1)^0,f,c
  3000   001188  5177               	movf	efgtoa@i& (0+255),w,b
  3001   00118A  244C               	addwf	??_efgtoa^0,w,c
  3002   00118C  6E01               	movwf	memcpy@d1^0,c
  3003   00118E  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  3004   001190  204D               	addwfc	(??_efgtoa+1)^0,w,c
  3005   001192  6E02               	movwf	(memcpy@d1+1)^0,c
  3006   001194  0E00               	movlw	low _dbuf
  3007   001196  6E03               	movwf	memcpy@s1^0,c
  3008   001198  0E01               	movlw	high _dbuf
  3009   00119A  6E04               	movwf	(memcpy@s1+1)^0,c
  3010   00119C  C082  F005         	movff	efgtoa@n,memcpy@n
  3011   0011A0  C083  F006         	movff	efgtoa@n+1,memcpy@n+1
  3012   0011A4  ECFE  F017         	call	_memcpy	;wreg free
  3013   0011A8                     
  3014                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 768:  n = i-n;
  3015   0011A8  0100               	movlb	0	; () banked
  3016   0011AA  5182               	movf	efgtoa@n& (0+255),w,b
  3017   0011AC  5D77               	subwf	efgtoa@i& (0+255),w,b
  3018   0011AE  6F82               	movwf	efgtoa@n& (0+255),b
  3019   0011B0  5183               	movf	(efgtoa@n+1)& (0+255),w,b
  3020   0011B2  5978               	subwfb	(efgtoa@i+1)& (0+255),w,b
  3021   0011B4  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  3022   0011B6                     
  3023                           ; BSR set to: 0
  3024                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 769:  i = sign ==
      +                           0 ? 0 : 1;
  3025   0011B6  5181               	movf	efgtoa@sign& (0+255),w,b
  3026   0011B8  A4D8               	btfss	status,2,c
  3027   0011BA  EFE1  F008         	goto	u3461
  3028   0011BE  EFE4  F008         	goto	u3460
  3029   0011C2                     u3461:
  3030   0011C2  0E01               	movlw	1
  3031   0011C4  EFE5  F008         	goto	u3470
  3032   0011C8                     u3460:
  3033   0011C8  0E00               	movlw	0
  3034   0011CA                     u3470:
  3035   0011CA  6F77               	movwf	efgtoa@i& (0+255),b
  3036   0011CC  6B78               	clrf	(efgtoa@i+1)& (0+255),b
  3037   0011CE                     
  3038                           ; BSR set to: 0
  3039                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 780:  if (sign) {
  3040   0011CE  5181               	movf	efgtoa@sign& (0+255),w,b
  3041   0011D0  B4D8               	btfsc	status,2,c
  3042   0011D2  EFED  F008         	goto	u3481
  3043   0011D6  EFEF  F008         	goto	u3480
  3044   0011DA                     u3481:
  3045   0011DA  EFFA  F008         	goto	l3286
  3046   0011DE                     u3480:
  3047   0011DE                     
  3048                           ; BSR set to: 0
  3049                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 781:   dbuf[--n] 
      +                          = sign;
  3050   0011DE  0782               	decf	efgtoa@n& (0+255),f,b
  3051   0011E0  A0D8               	btfss	status,0,c
  3052   0011E2  0783               	decf	(efgtoa@n+1)& (0+255),f,b
  3053   0011E4  0E00               	movlw	low _dbuf
  3054   0011E6  2582               	addwf	efgtoa@n& (0+255),w,b
  3055   0011E8  6ED9               	movwf	fsr2l,c
  3056   0011EA  0E01               	movlw	high _dbuf
  3057   0011EC  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3058   0011EE  6EDA               	movwf	fsr2h,c
  3059   0011F0  C081  FFDF         	movff	efgtoa@sign,indf2
  3060   0011F4                     l3286:
  3061                           
  3062                           ; BSR set to: 0
  3063                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 783:  w -= i;
  3064   0011F4  5177               	movf	efgtoa@i& (0+255),w,b
  3065   0011F6  5F71               	subwf	efgtoa@w& (0+255),f,b
  3066   0011F8  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  3067   0011FA  5B72               	subwfb	(efgtoa@w+1)& (0+255),f,b
  3068   0011FC                     
  3069                           ; BSR set to: 0
  3070                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 786:     return (
      +                          void) pad(fp, &dbuf[n], w);
  3071   0011FC  C045  F011         	movff	efgtoa@fp,pad@fp
  3072   001200  C046  F012         	movff	efgtoa@fp+1,pad@fp+1
  3073   001204  0E00               	movlw	low _dbuf
  3074   001206  2582               	addwf	efgtoa@n& (0+255),w,b
  3075   001208  6E13               	movwf	pad@buf^0,c
  3076   00120A  0E01               	movlw	high _dbuf
  3077   00120C  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3078   00120E  6E14               	movwf	(pad@buf+1)^0,c
  3079   001210  C071  F015         	movff	efgtoa@w,pad@p
  3080   001214  C072  F016         	movff	efgtoa@w+1,pad@p+1
  3081   001218  ECCA  F016         	call	_pad	;wreg free
  3082   00121C                     l850:
  3083   00121C  0012               	return		;funcret
  3084   00121E                     __end_of_efgtoa:
  3085                           	callstack 0
  3086                           
  3087 ;; *************** function _strcpy *****************
  3088 ;; Defined at:
  3089 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  3090 ;; Parameters:    Size  Location     Type
  3091 ;;  dest            2    0[COMRAM] PTR unsigned char 
  3092 ;;		 -> dbuf(80), 
  3093 ;;  src             2    2[COMRAM] PTR const unsigned char 
  3094 ;;		 -> STR_7(4), STR_4(4), 
  3095 ;; Auto vars:     Size  Location     Type
  3096 ;;  d               2    6[COMRAM] PTR unsigned char 
  3097 ;;		 -> dbuf(80), 
  3098 ;;  s               2    4[COMRAM] PTR const unsigned char 
  3099 ;;		 -> STR_7(4), STR_4(4), 
  3100 ;; Return value:  Size  Location     Type
  3101 ;;                  2    0[COMRAM] PTR unsigned char 
  3102 ;; Registers used:
  3103 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3104 ;; Tracked objects:
  3105 ;;		On entry : 0/0
  3106 ;;		On exit  : 0/0
  3107 ;;		Unchanged: 0/0
  3108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3109 ;;      Params:         4       0       0       0       0       0       0       0       0
  3110 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3111 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3112 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3113 ;;Total ram usage:        8 bytes
  3114 ;; Hardware stack levels used: 1
  3115 ;; This function calls:
  3116 ;;		Nothing
  3117 ;; This function is called by:
  3118 ;;		_efgtoa
  3119 ;; This function uses a non-reentrant model
  3120 ;;
  3121                           
  3122                           	psect	text5
  3123   00316A                     __ptext5:
  3124                           	callstack 0
  3125   00316A                     _strcpy:
  3126                           	callstack 26
  3127   00316A  C003  F005         	movff	strcpy@src,strcpy@s
  3128   00316E  C004  F006         	movff	strcpy@src+1,strcpy@s+1
  3129   003172  C001  F007         	movff	strcpy@dest,strcpy@d
  3130   003176  C002  F008         	movff	strcpy@dest+1,strcpy@d+1
  3131   00317A                     l3008:
  3132   00317A  C005  FFF6         	movff	strcpy@s,tblptrl
  3133   00317E  C006  FFF7         	movff	strcpy@s+1,tblptrh
  3134   003182  4A05               	infsnz	strcpy@s^0,f,c
  3135   003184  2A06               	incf	(strcpy@s+1)^0,f,c
  3136   003186                     	if	0	;tblptru may be non-zero
  3137   003186                     	endif
  3138   003186                     	if	0	;tblptru may be non-zero
  3139   003186                     	endif
  3140   003186  C007  FFD9         	movff	strcpy@d,fsr2l
  3141   00318A  C008  FFDA         	movff	strcpy@d+1,fsr2h
  3142   00318E  4A07               	infsnz	strcpy@d^0,f,c
  3143   003190  2A08               	incf	(strcpy@d+1)^0,f,c
  3144   003192  0008               	tblrd		*
  3145   003194  CFF5 FFDF          	movff	tablat,indf2
  3146   003198  50DF               	movf	indf2,w,c
  3147   00319A  A4D8               	btfss	status,2,c
  3148   00319C  EFD2  F018         	goto	u3001
  3149   0031A0  EFD4  F018         	goto	u3000
  3150   0031A4                     u3001:
  3151   0031A4  EFBD  F018         	goto	l3008
  3152   0031A8                     u3000:
  3153   0031A8  0012               	return		;funcret
  3154   0031AA                     __end_of_strcpy:
  3155                           	callstack 0
  3156                           
  3157 ;; *************** function _pad *****************
  3158 ;; Defined at:
  3159 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3160 ;; Parameters:    Size  Location     Type
  3161 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  3162 ;;		 -> sprintf@f(11), 
  3163 ;;  buf             2   18[COMRAM] PTR unsigned char 
  3164 ;;		 -> dbuf(80), 
  3165 ;;  p               2   20[COMRAM] int 
  3166 ;; Auto vars:     Size  Location     Type
  3167 ;;  w               2   25[COMRAM] int 
  3168 ;;  i               2   23[COMRAM] int 
  3169 ;; Return value:  Size  Location     Type
  3170 ;;                  1    wreg      void 
  3171 ;; Registers used:
  3172 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3173 ;; Tracked objects:
  3174 ;;		On entry : 0/0
  3175 ;;		On exit  : 0/0
  3176 ;;		Unchanged: 0/0
  3177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3178 ;;      Params:         6       0       0       0       0       0       0       0       0
  3179 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3180 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3181 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3182 ;;Total ram usage:       11 bytes
  3183 ;; Hardware stack levels used: 1
  3184 ;; Hardware stack levels required when called: 3
  3185 ;; This function calls:
  3186 ;;		_fputc
  3187 ;;		_fputs
  3188 ;; This function is called by:
  3189 ;;		_efgtoa
  3190 ;; This function uses a non-reentrant model
  3191 ;;
  3192                           
  3193                           	psect	text6
  3194   002D94                     __ptext6:
  3195                           	callstack 0
  3196   002D94                     _pad:
  3197                           	callstack 23
  3198   002D94                     
  3199                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  3200   002D94  BE16               	btfsc	(pad@p+1)^0,7,c
  3201   002D96  EFCF  F016         	goto	u2911
  3202   002D9A  EFD1  F016         	goto	u2910
  3203   002D9E                     u2911:
  3204   002D9E  EFD7  F016         	goto	l2974
  3205   002DA2                     u2910:
  3206   002DA2  C015  F01A         	movff	pad@p,pad@w
  3207   002DA6  C016  F01B         	movff	pad@p+1,pad@w+1
  3208   002DAA  EFDB  F016         	goto	l835
  3209   002DAE                     l2974:
  3210   002DAE  0E00               	movlw	0
  3211   002DB0  6E1B               	movwf	(pad@w+1)^0,c
  3212   002DB2  0E00               	movlw	0
  3213   002DB4  6E1A               	movwf	pad@w^0,c
  3214   002DB6                     l835:
  3215                           
  3216                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  3217   002DB6  0E00               	movlw	0
  3218   002DB8  6E19               	movwf	(pad@i+1)^0,c
  3219   002DBA  0E00               	movlw	0
  3220   002DBC  6E18               	movwf	pad@i^0,c
  3221                           
  3222                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  3223   002DBE  EFED  F016         	goto	l2980
  3224   002DC2                     l2976:
  3225                           
  3226                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  3227   002DC2  0E00               	movlw	0
  3228   002DC4  6E02               	movwf	(fputc@c+1)^0,c
  3229   002DC6  0E20               	movlw	32
  3230   002DC8  6E01               	movwf	fputc@c^0,c
  3231   002DCA  C011  F003         	movff	pad@fp,fputc@fp
  3232   002DCE  C012  F004         	movff	pad@fp+1,fputc@fp+1
  3233   002DD2  EC10  F016         	call	_fputc	;wreg free
  3234   002DD6                     
  3235                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  3236   002DD6  4A18               	infsnz	pad@i^0,f,c
  3237   002DD8  2A19               	incf	(pad@i+1)^0,f,c
  3238   002DDA                     l2980:
  3239                           
  3240                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  3241   002DDA  501A               	movf	pad@w^0,w,c
  3242   002DDC  5C18               	subwf	pad@i^0,w,c
  3243   002DDE  5019               	movf	(pad@i+1)^0,w,c
  3244   002DE0  0A80               	xorlw	128
  3245   002DE2  6E17               	movwf	??_pad^0,c
  3246   002DE4  501B               	movf	(pad@w+1)^0,w,c
  3247   002DE6  0A80               	xorlw	128
  3248   002DE8  5817               	subwfb	??_pad^0,w,c
  3249   002DEA  A0D8               	btfss	status,0,c
  3250   002DEC  EFFA  F016         	goto	u2921
  3251   002DF0  EFFC  F016         	goto	u2920
  3252   002DF4                     u2921:
  3253   002DF4  EFE1  F016         	goto	l2976
  3254   002DF8                     u2920:
  3255   002DF8                     
  3256                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  3257   002DF8  C013  F00A         	movff	pad@buf,fputs@s
  3258   002DFC  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3259   002E00  C011  F00C         	movff	pad@fp,fputs@fp
  3260   002E04  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3261   002E08  EC93  F018         	call	_fputs	;wreg free
  3262   002E0C  0012               	return		;funcret
  3263   002E0E                     __end_of_pad:
  3264                           	callstack 0
  3265                           
  3266 ;; *************** function _fputs *****************
  3267 ;; Defined at:
  3268 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  3269 ;; Parameters:    Size  Location     Type
  3270 ;;  s               2    9[COMRAM] PTR const unsigned char 
  3271 ;;		 -> dbuf(80), 
  3272 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  3273 ;;		 -> sprintf@f(11), 
  3274 ;; Auto vars:     Size  Location     Type
  3275 ;;  i               2   14[COMRAM] int 
  3276 ;;  c               1   13[COMRAM] unsigned char 
  3277 ;; Return value:  Size  Location     Type
  3278 ;;                  2    9[COMRAM] int 
  3279 ;; Registers used:
  3280 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3281 ;; Tracked objects:
  3282 ;;		On entry : 0/0
  3283 ;;		On exit  : 0/0
  3284 ;;		Unchanged: 0/0
  3285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3286 ;;      Params:         4       0       0       0       0       0       0       0       0
  3287 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3288 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3289 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3290 ;;Total ram usage:        7 bytes
  3291 ;; Hardware stack levels used: 1
  3292 ;; Hardware stack levels required when called: 2
  3293 ;; This function calls:
  3294 ;;		_fputc
  3295 ;; This function is called by:
  3296 ;;		_pad
  3297 ;; This function uses a non-reentrant model
  3298 ;;
  3299                           
  3300                           	psect	text7
  3301   003126                     __ptext7:
  3302                           	callstack 0
  3303   003126                     _fputs:
  3304                           	callstack 23
  3305   003126  0E00               	movlw	0
  3306   003128  6E10               	movwf	(fputs@i+1)^0,c
  3307   00312A  0E00               	movlw	0
  3308   00312C  6E0F               	movwf	fputs@i^0,c
  3309   00312E  EFA4  F018         	goto	l2598
  3310   003132                     l2594:
  3311   003132  C00E  F001         	movff	fputs@c,fputc@c
  3312   003136  6A02               	clrf	(fputc@c+1)^0,c
  3313   003138  C00C  F003         	movff	fputs@fp,fputc@fp
  3314   00313C  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  3315   003140  EC10  F016         	call	_fputc	;wreg free
  3316   003144  4A0F               	infsnz	fputs@i^0,f,c
  3317   003146  2A10               	incf	(fputs@i+1)^0,f,c
  3318   003148                     l2598:
  3319   003148  500F               	movf	fputs@i^0,w,c
  3320   00314A  240A               	addwf	fputs@s^0,w,c
  3321   00314C  6ED9               	movwf	fsr2l,c
  3322   00314E  5010               	movf	(fputs@i+1)^0,w,c
  3323   003150  200B               	addwfc	(fputs@s+1)^0,w,c
  3324   003152  6EDA               	movwf	fsr2h,c
  3325   003154  50DF               	movf	indf2,w,c
  3326   003156  6E0E               	movwf	fputs@c^0,c
  3327   003158  500E               	movf	fputs@c^0,w,c
  3328   00315A  A4D8               	btfss	status,2,c
  3329   00315C  EFB2  F018         	goto	u2321
  3330   003160  EFB4  F018         	goto	u2320
  3331   003164                     u2321:
  3332   003164  EF99  F018         	goto	l2594
  3333   003168                     u2320:
  3334   003168  0012               	return		;funcret
  3335   00316A                     __end_of_fputs:
  3336                           	callstack 0
  3337                           
  3338 ;; *************** function _fputc *****************
  3339 ;; Defined at:
  3340 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  3341 ;; Parameters:    Size  Location     Type
  3342 ;;  c               2    0[COMRAM] int 
  3343 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  3344 ;;		 -> sprintf@f(11), 
  3345 ;; Auto vars:     Size  Location     Type
  3346 ;;		None
  3347 ;; Return value:  Size  Location     Type
  3348 ;;                  2    0[COMRAM] int 
  3349 ;; Registers used:
  3350 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3351 ;; Tracked objects:
  3352 ;;		On entry : 0/0
  3353 ;;		On exit  : 0/0
  3354 ;;		Unchanged: 0/0
  3355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3356 ;;      Params:         4       0       0       0       0       0       0       0       0
  3357 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3358 ;;      Temps:          5       0       0       0       0       0       0       0       0
  3359 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3360 ;;Total ram usage:        9 bytes
  3361 ;; Hardware stack levels used: 1
  3362 ;; Hardware stack levels required when called: 1
  3363 ;; This function calls:
  3364 ;;		_putch
  3365 ;; This function is called by:
  3366 ;;		_pad
  3367 ;;		_vfpfcnvrt
  3368 ;;		_fputs
  3369 ;; This function uses a non-reentrant model
  3370 ;;
  3371                           
  3372                           	psect	text8
  3373   002C20                     __ptext8:
  3374                           	callstack 0
  3375   002C20                     _fputc:
  3376                           	callstack 26
  3377   002C20  5003               	movf	fputc@fp^0,w,c
  3378   002C22  1004               	iorwf	(fputc@fp+1)^0,w,c
  3379   002C24  B4D8               	btfsc	status,2,c
  3380   002C26  EF17  F016         	goto	u1891
  3381   002C2A  EF19  F016         	goto	u1890
  3382   002C2E                     u1891:
  3383   002C2E  EF22  F016         	goto	l2380
  3384   002C32                     u1890:
  3385   002C32  5003               	movf	fputc@fp^0,w,c
  3386   002C34  1004               	iorwf	(fputc@fp+1)^0,w,c
  3387   002C36  A4D8               	btfss	status,2,c
  3388   002C38  EF20  F016         	goto	u1901
  3389   002C3C  EF22  F016         	goto	u1900
  3390   002C40                     u1901:
  3391   002C40  EF27  F016         	goto	l2382
  3392   002C44                     u1900:
  3393   002C44                     l2380:
  3394   002C44  5001               	movf	fputc@c^0,w,c
  3395   002C46  ECC0  F019         	call	_putch
  3396   002C4A  EF74  F016         	goto	l1013
  3397   002C4E                     l2382:
  3398   002C4E  EE20 F009          	lfsr	2,9
  3399   002C52  5003               	movf	fputc@fp^0,w,c
  3400   002C54  26D9               	addwf	fsr2l,f,c
  3401   002C56  5004               	movf	(fputc@fp+1)^0,w,c
  3402   002C58  22DA               	addwfc	fsr2h,f,c
  3403   002C5A  50DE               	movf	postinc2,w,c
  3404   002C5C  10DE               	iorwf	postinc2,w,c
  3405   002C5E  B4D8               	btfsc	status,2,c
  3406   002C60  EF34  F016         	goto	u1911
  3407   002C64  EF36  F016         	goto	u1910
  3408   002C68                     u1911:
  3409   002C68  EF51  F016         	goto	l2386
  3410   002C6C                     u1910:
  3411   002C6C  EE20 F009          	lfsr	2,9
  3412   002C70  5003               	movf	fputc@fp^0,w,c
  3413   002C72  26D9               	addwf	fsr2l,f,c
  3414   002C74  5004               	movf	(fputc@fp+1)^0,w,c
  3415   002C76  22DA               	addwfc	fsr2h,f,c
  3416   002C78  EE10 F003          	lfsr	1,3
  3417   002C7C  5003               	movf	fputc@fp^0,w,c
  3418   002C7E  26E1               	addwf	fsr1l,f,c
  3419   002C80  5004               	movf	(fputc@fp+1)^0,w,c
  3420   002C82  22E2               	addwfc	fsr1h,f,c
  3421   002C84  50DE               	movf	postinc2,w,c
  3422   002C86  5CE6               	subwf	postinc1,w,c
  3423   002C88  50E6               	movf	postinc1,w,c
  3424   002C8A  0A80               	xorlw	128
  3425   002C8C  6E09               	movwf	(??_fputc+4)^0,c
  3426   002C8E  50DE               	movf	postinc2,w,c
  3427   002C90  0A80               	xorlw	128
  3428   002C92  5809               	subwfb	(??_fputc+4)^0,w,c
  3429   002C94  B0D8               	btfsc	status,0,c
  3430   002C96  EF4F  F016         	goto	u1921
  3431   002C9A  EF51  F016         	goto	u1920
  3432   002C9E                     u1921:
  3433   002C9E  EF74  F016         	goto	l1013
  3434   002CA2                     u1920:
  3435   002CA2                     l2386:
  3436   002CA2  EE20 F003          	lfsr	2,3
  3437   002CA6  5003               	movf	fputc@fp^0,w,c
  3438   002CA8  26D9               	addwf	fsr2l,f,c
  3439   002CAA  5004               	movf	(fputc@fp+1)^0,w,c
  3440   002CAC  22DA               	addwfc	fsr2h,f,c
  3441   002CAE  CFDE F005          	movff	postinc2,??_fputc
  3442   002CB2  CFDD F006          	movff	postdec2,??_fputc+1
  3443   002CB6  C003  FFD9         	movff	fputc@fp,fsr2l
  3444   002CBA  C004  FFDA         	movff	fputc@fp+1,fsr2h
  3445   002CBE  CFDE F007          	movff	postinc2,??_fputc+2
  3446   002CC2  CFDD F008          	movff	postdec2,??_fputc+3
  3447   002CC6  5005               	movf	??_fputc^0,w,c
  3448   002CC8  2407               	addwf	(??_fputc+2)^0,w,c
  3449   002CCA  6ED9               	movwf	fsr2l,c
  3450   002CCC  5006               	movf	(??_fputc+1)^0,w,c
  3451   002CCE  2008               	addwfc	(??_fputc+3)^0,w,c
  3452   002CD0  6EDA               	movwf	fsr2h,c
  3453   002CD2  C001  FFDF         	movff	fputc@c,indf2
  3454   002CD6  EE20 F003          	lfsr	2,3
  3455   002CDA  5003               	movf	fputc@fp^0,w,c
  3456   002CDC  26D9               	addwf	fsr2l,f,c
  3457   002CDE  5004               	movf	(fputc@fp+1)^0,w,c
  3458   002CE0  22DA               	addwfc	fsr2h,f,c
  3459   002CE2  2ADE               	incf	postinc2,f,c
  3460   002CE4  0E00               	movlw	0
  3461   002CE6  22DD               	addwfc	postdec2,f,c
  3462   002CE8                     l1013:
  3463   002CE8  0012               	return		;funcret
  3464   002CEA                     __end_of_fputc:
  3465                           	callstack 0
  3466                           
  3467 ;; *************** function _putch *****************
  3468 ;; Defined at:
  3469 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  3470 ;; Parameters:    Size  Location     Type
  3471 ;;  c               1    wreg     unsigned char 
  3472 ;; Auto vars:     Size  Location     Type
  3473 ;;  c               1    0[COMRAM] unsigned char 
  3474 ;; Return value:  Size  Location     Type
  3475 ;;                  1    wreg      void 
  3476 ;; Registers used:
  3477 ;;		wreg
  3478 ;; Tracked objects:
  3479 ;;		On entry : 0/0
  3480 ;;		On exit  : 0/0
  3481 ;;		Unchanged: 0/0
  3482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3483 ;;      Params:         0       0       0       0       0       0       0       0       0
  3484 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3485 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3486 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3487 ;;Total ram usage:        0 bytes
  3488 ;; Hardware stack levels used: 1
  3489 ;; This function calls:
  3490 ;;		Nothing
  3491 ;; This function is called by:
  3492 ;;		_fputc
  3493 ;; This function uses a non-reentrant model
  3494 ;;
  3495                           
  3496                           	psect	text9
  3497   003380                     __ptext9:
  3498                           	callstack 0
  3499   003380                     _putch:
  3500                           	callstack 26
  3501   003380  0012               	return		;funcret
  3502   003382                     __end_of_putch:
  3503                           	callstack 0
  3504                           
  3505 ;; *************** function _memcpy *****************
  3506 ;; Defined at:
  3507 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
  3508 ;; Parameters:    Size  Location     Type
  3509 ;;  d1              2    0[COMRAM] PTR void 
  3510 ;;		 -> dbuf(80), 
  3511 ;;  s1              2    2[COMRAM] PTR const void 
  3512 ;;		 -> dbuf(80), 
  3513 ;;  n               2    4[COMRAM] unsigned int 
  3514 ;; Auto vars:     Size  Location     Type
  3515 ;;  s               2    8[COMRAM] PTR const unsigned char 
  3516 ;;		 -> dbuf(80), 
  3517 ;;  d               2    6[COMRAM] PTR unsigned char 
  3518 ;;		 -> dbuf(80), 
  3519 ;;  tmp             1   10[COMRAM] unsigned char 
  3520 ;; Return value:  Size  Location     Type
  3521 ;;                  2    0[COMRAM] PTR void 
  3522 ;; Registers used:
  3523 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3524 ;; Tracked objects:
  3525 ;;		On entry : 0/0
  3526 ;;		On exit  : 0/0
  3527 ;;		Unchanged: 0/0
  3528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3529 ;;      Params:         6       0       0       0       0       0       0       0       0
  3530 ;;      Locals:         5       0       0       0       0       0       0       0       0
  3531 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3532 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3533 ;;Total ram usage:       11 bytes
  3534 ;; Hardware stack levels used: 1
  3535 ;; This function calls:
  3536 ;;		Nothing
  3537 ;; This function is called by:
  3538 ;;		_efgtoa
  3539 ;; This function uses a non-reentrant model
  3540 ;;
  3541                           
  3542                           	psect	text10
  3543   002FFC                     __ptext10:
  3544                           	callstack 0
  3545   002FFC                     _memcpy:
  3546                           	callstack 26
  3547   002FFC  C003  F009         	movff	memcpy@s1,memcpy@s
  3548   003000  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
  3549   003004  C001  F007         	movff	memcpy@d1,memcpy@d
  3550   003008  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
  3551   00300C  EF18  F018         	goto	l3052
  3552   003010                     l3044:
  3553   003010  C009  FFD9         	movff	memcpy@s,fsr2l
  3554   003014  C00A  FFDA         	movff	memcpy@s+1,fsr2h
  3555   003018  50DF               	movf	indf2,w,c
  3556   00301A  6E0B               	movwf	memcpy@tmp^0,c
  3557   00301C  4A09               	infsnz	memcpy@s^0,f,c
  3558   00301E  2A0A               	incf	(memcpy@s+1)^0,f,c
  3559   003020  C007  FFD9         	movff	memcpy@d,fsr2l
  3560   003024  C008  FFDA         	movff	memcpy@d+1,fsr2h
  3561   003028  C00B  FFDF         	movff	memcpy@tmp,indf2
  3562   00302C  4A07               	infsnz	memcpy@d^0,f,c
  3563   00302E  2A08               	incf	(memcpy@d+1)^0,f,c
  3564   003030                     l3052:
  3565   003030  0605               	decf	memcpy@n^0,f,c
  3566   003032  A0D8               	btfss	status,0,c
  3567   003034  0606               	decf	(memcpy@n+1)^0,f,c
  3568   003036  2805               	incf	memcpy@n^0,w,c
  3569   003038  E106               	bnz	u3121
  3570   00303A  2806               	incf	(memcpy@n+1)^0,w,c
  3571   00303C  A4D8               	btfss	status,2,c
  3572   00303E  EF23  F018         	goto	u3121
  3573   003042  EF25  F018         	goto	u3120
  3574   003046                     u3121:
  3575   003046  EF08  F018         	goto	l3044
  3576   00304A                     u3120:
  3577   00304A  0012               	return		;funcret
  3578   00304C                     __end_of_memcpy:
  3579                           	callstack 0
  3580                           
  3581 ;; *************** function _labs *****************
  3582 ;; Defined at:
  3583 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\labs.c"
  3584 ;; Parameters:    Size  Location     Type
  3585 ;;  a               4    0[COMRAM] long 
  3586 ;; Auto vars:     Size  Location     Type
  3587 ;;		None
  3588 ;; Return value:  Size  Location     Type
  3589 ;;                  4    0[COMRAM] long 
  3590 ;; Registers used:
  3591 ;;		wreg, status,2, status,0
  3592 ;; Tracked objects:
  3593 ;;		On entry : 0/0
  3594 ;;		On exit  : 0/0
  3595 ;;		Unchanged: 0/0
  3596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3597 ;;      Params:         4       0       0       0       0       0       0       0       0
  3598 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3599 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3600 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3601 ;;Total ram usage:        8 bytes
  3602 ;; Hardware stack levels used: 1
  3603 ;; This function calls:
  3604 ;;		Nothing
  3605 ;; This function is called by:
  3606 ;;		_efgtoa
  3607 ;; This function uses a non-reentrant model
  3608 ;;
  3609                           
  3610                           	psect	text11
  3611   002E82                     __ptext11:
  3612                           	callstack 0
  3613   002E82                     _labs:
  3614                           	callstack 26
  3615   002E82  BE04               	btfsc	(labs@a+3)^0,7,c
  3616   002E84  EF50  F017         	goto	u3010
  3617   002E88  5004               	movf	(labs@a+3)^0,w,c
  3618   002E8A  1003               	iorwf	(labs@a+2)^0,w,c
  3619   002E8C  1002               	iorwf	(labs@a+1)^0,w,c
  3620   002E8E  E106               	bnz	u3011
  3621   002E90  0401               	decf	labs@a^0,w,c
  3622   002E92  B0D8               	btfsc	status,0,c
  3623   002E94  EF4E  F017         	goto	u3011
  3624   002E98  EF50  F017         	goto	u3010
  3625   002E9C                     u3011:
  3626   002E9C  EF6B  F017         	goto	l992
  3627   002EA0                     u3010:
  3628   002EA0  C001  F005         	movff	labs@a,??_labs
  3629   002EA4  C002  F006         	movff	labs@a+1,??_labs+1
  3630   002EA8  C003  F007         	movff	labs@a+2,??_labs+2
  3631   002EAC  C004  F008         	movff	labs@a+3,??_labs+3
  3632   002EB0  1E05               	comf	??_labs^0,f,c
  3633   002EB2  1E06               	comf	(??_labs+1)^0,f,c
  3634   002EB4  1E07               	comf	(??_labs+2)^0,f,c
  3635   002EB6  1E08               	comf	(??_labs+3)^0,f,c
  3636   002EB8  2A05               	incf	??_labs^0,f,c
  3637   002EBA  0E00               	movlw	0
  3638   002EBC  2206               	addwfc	(??_labs+1)^0,f,c
  3639   002EBE  2207               	addwfc	(??_labs+2)^0,f,c
  3640   002EC0  2208               	addwfc	(??_labs+3)^0,f,c
  3641   002EC2  C005  F001         	movff	??_labs,?_labs
  3642   002EC6  C006  F002         	movff	??_labs+1,?_labs+1
  3643   002ECA  C007  F003         	movff	??_labs+2,?_labs+2
  3644   002ECE  C008  F004         	movff	??_labs+3,?_labs+3
  3645   002ED2  EF73  F017         	goto	l995
  3646   002ED6                     l992:
  3647   002ED6  C001  F001         	movff	labs@a,?_labs
  3648   002EDA  C002  F002         	movff	labs@a+1,?_labs+1
  3649   002EDE  C003  F003         	movff	labs@a+2,?_labs+2
  3650   002EE2  C004  F004         	movff	labs@a+3,?_labs+3
  3651   002EE6                     l995:
  3652   002EE6  0012               	return		;funcret
  3653   002EE8                     __end_of_labs:
  3654                           	callstack 0
  3655                           
  3656 ;; *************** function _floorf *****************
  3657 ;; Defined at:
  3658 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\floorf.c"
  3659 ;; Parameters:    Size  Location     Type
  3660 ;;  x               4   25[COMRAM] float 
  3661 ;; Auto vars:     Size  Location     Type
  3662 ;;  u               4   41[COMRAM] struct .
  3663 ;;  m               4   35[COMRAM] unsigned long 
  3664 ;;  e               2   39[COMRAM] int 
  3665 ;; Return value:  Size  Location     Type
  3666 ;;                  4   25[COMRAM] float 
  3667 ;; Registers used:
  3668 ;;		wreg, status,2, status,0
  3669 ;; Tracked objects:
  3670 ;;		On entry : 0/0
  3671 ;;		On exit  : 0/0
  3672 ;;		Unchanged: 0/0
  3673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3674 ;;      Params:         4       0       0       0       0       0       0       0       0
  3675 ;;      Locals:        10       0       0       0       0       0       0       0       0
  3676 ;;      Temps:          6       0       0       0       0       0       0       0       0
  3677 ;;      Totals:        20       0       0       0       0       0       0       0       0
  3678 ;;Total ram usage:       20 bytes
  3679 ;; Hardware stack levels used: 1
  3680 ;; This function calls:
  3681 ;;		Nothing
  3682 ;; This function is called by:
  3683 ;;		_efgtoa
  3684 ;; This function uses a non-reentrant model
  3685 ;;
  3686                           
  3687                           	psect	text12
  3688   002408                     __ptext12:
  3689                           	callstack 0
  3690   002408                     _floorf:
  3691                           	callstack 26
  3692   002408  C0B0  F02A         	movff	floorf@F526,floorf@u
  3693   00240C  C0B1  F02B         	movff	floorf@F526+1,floorf@u+1
  3694   002410  C0B2  F02C         	movff	floorf@F526+2,floorf@u+2
  3695   002414  C0B3  F02D         	movff	floorf@F526+3,floorf@u+3
  3696   002418  C01A  F02A         	movff	floorf@x,floorf@u
  3697   00241C  C01B  F02B         	movff	floorf@x+1,floorf@u+1
  3698   002420  C01C  F02C         	movff	floorf@x+2,floorf@u+2
  3699   002424  C01D  F02D         	movff	floorf@x+3,floorf@u+3
  3700   002428  0E81               	movlw	129
  3701   00242A  6E1E               	movwf	??_floorf^0,c
  3702   00242C  0EFF               	movlw	255
  3703   00242E  6E1F               	movwf	(??_floorf+1)^0,c
  3704   002430  C02A  F020         	movff	floorf@u,??_floorf+2
  3705   002434  C02B  F021         	movff	floorf@u+1,??_floorf+3
  3706   002438  C02C  F022         	movff	floorf@u+2,??_floorf+4
  3707   00243C  C02D  F023         	movff	floorf@u+3,??_floorf+5
  3708   002440  0E18               	movlw	24
  3709   002442  EF28  F012         	goto	u3020
  3710   002446                     u3025:
  3711   002446  90D8               	bcf	status,0,c
  3712   002448  3223               	rrcf	(??_floorf+5)^0,f,c
  3713   00244A  3222               	rrcf	(??_floorf+4)^0,f,c
  3714   00244C  3221               	rrcf	(??_floorf+3)^0,f,c
  3715   00244E  3220               	rrcf	(??_floorf+2)^0,f,c
  3716   002450                     u3020:
  3717   002450  2EE8               	decfsz	wreg,f,c
  3718   002452  EF23  F012         	goto	u3025
  3719   002456  5020               	movf	(??_floorf+2)^0,w,c
  3720   002458  241E               	addwf	??_floorf^0,w,c
  3721   00245A  6E28               	movwf	floorf@e^0,c
  3722   00245C  0E00               	movlw	0
  3723   00245E  201F               	addwfc	(??_floorf+1)^0,w,c
  3724   002460  6E29               	movwf	(floorf@e+1)^0,c
  3725   002462  BE29               	btfsc	(floorf@e+1)^0,7,c
  3726   002464  EF3D  F012         	goto	u3031
  3727   002468  5029               	movf	(floorf@e+1)^0,w,c
  3728   00246A  E109               	bnz	u3030
  3729   00246C  0E17               	movlw	23
  3730   00246E  5C28               	subwf	floorf@e^0,w,c
  3731   002470  A0D8               	btfss	status,0,c
  3732   002472  EF3D  F012         	goto	u3031
  3733   002476  EF3F  F012         	goto	u3030
  3734   00247A                     u3031:
  3735   00247A  EF49  F012         	goto	l3020
  3736   00247E                     u3030:
  3737   00247E                     l3018:
  3738   00247E  C01A  F01A         	movff	floorf@x,?_floorf
  3739   002482  C01B  F01B         	movff	floorf@x+1,?_floorf+1
  3740   002486  C01C  F01C         	movff	floorf@x+2,?_floorf+2
  3741   00248A  C01D  F01D         	movff	floorf@x+3,?_floorf+3
  3742   00248E  EF0C  F013         	goto	l967
  3743   002492                     l3020:
  3744   002492  BE29               	btfsc	(floorf@e+1)^0,7,c
  3745   002494  EF4E  F012         	goto	u3041
  3746   002498  EF50  F012         	goto	u3040
  3747   00249C                     u3041:
  3748   00249C  EFC0  F012         	goto	l3030
  3749   0024A0                     u3040:
  3750   0024A0  C028  F01E         	movff	floorf@e,??_floorf
  3751   0024A4  0EFF               	movlw	255
  3752   0024A6  6E1F               	movwf	(??_floorf+1)^0,c
  3753   0024A8  0EFF               	movlw	255
  3754   0024AA  6E20               	movwf	(??_floorf+2)^0,c
  3755   0024AC  0E7F               	movlw	127
  3756   0024AE  6E21               	movwf	(??_floorf+3)^0,c
  3757   0024B0  0E00               	movlw	0
  3758   0024B2  6E22               	movwf	(??_floorf+4)^0,c
  3759   0024B4                     u3055:
  3760   0024B4  661E               	tstfsz	??_floorf^0,c
  3761   0024B6  EF5F  F012         	goto	u3056
  3762   0024BA  EF67  F012         	goto	u3057
  3763   0024BE                     u3056:
  3764   0024BE  3422               	rlcf	(??_floorf+4)^0,w,c
  3765   0024C0  3222               	rrcf	(??_floorf+4)^0,f,c
  3766   0024C2  3221               	rrcf	(??_floorf+3)^0,f,c
  3767   0024C4  3220               	rrcf	(??_floorf+2)^0,f,c
  3768   0024C6  321F               	rrcf	(??_floorf+1)^0,f,c
  3769   0024C8  2E1E               	decfsz	??_floorf^0,f,c
  3770   0024CA  EF5A  F012         	goto	u3055
  3771   0024CE                     u3057:
  3772   0024CE  C01F  F024         	movff	??_floorf+1,floorf@m
  3773   0024D2  C020  F025         	movff	??_floorf+2,floorf@m+1
  3774   0024D6  C021  F026         	movff	??_floorf+3,floorf@m+2
  3775   0024DA  C022  F027         	movff	??_floorf+4,floorf@m+3
  3776   0024DE  5024               	movf	floorf@m^0,w,c
  3777   0024E0  142A               	andwf	floorf@u^0,w,c
  3778   0024E2  6E1E               	movwf	??_floorf^0,c
  3779   0024E4  5025               	movf	(floorf@m+1)^0,w,c
  3780   0024E6  142B               	andwf	(floorf@u+1)^0,w,c
  3781   0024E8  6E1F               	movwf	(??_floorf+1)^0,c
  3782   0024EA  5026               	movf	(floorf@m+2)^0,w,c
  3783   0024EC  142C               	andwf	(floorf@u+2)^0,w,c
  3784   0024EE  6E20               	movwf	(??_floorf+2)^0,c
  3785   0024F0  5027               	movf	(floorf@m+3)^0,w,c
  3786   0024F2  142D               	andwf	(floorf@u+3)^0,w,c
  3787   0024F4  6E21               	movwf	(??_floorf+3)^0,c
  3788   0024F6  501E               	movf	??_floorf^0,w,c
  3789   0024F8  101F               	iorwf	(??_floorf+1)^0,w,c
  3790   0024FA  1020               	iorwf	(??_floorf+2)^0,w,c
  3791   0024FC  1021               	iorwf	(??_floorf+3)^0,w,c
  3792   0024FE  A4D8               	btfss	status,2,c
  3793   002500  EF84  F012         	goto	u3061
  3794   002504  EF86  F012         	goto	u3060
  3795   002508                     u3061:
  3796   002508  EF88  F012         	goto	l3026
  3797   00250C                     u3060:
  3798   00250C  EF3F  F012         	goto	l3018
  3799   002510                     l3026:
  3800   002510  C02A  F01E         	movff	floorf@u,??_floorf
  3801   002514  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  3802   002518  C02C  F020         	movff	floorf@u+2,??_floorf+2
  3803   00251C  C02D  F021         	movff	floorf@u+3,??_floorf+3
  3804   002520  0E20               	movlw	32
  3805   002522  EF98  F012         	goto	u3070
  3806   002526                     u3075:
  3807   002526  90D8               	bcf	status,0,c
  3808   002528  3221               	rrcf	(??_floorf+3)^0,f,c
  3809   00252A  3220               	rrcf	(??_floorf+2)^0,f,c
  3810   00252C  321F               	rrcf	(??_floorf+1)^0,f,c
  3811   00252E  321E               	rrcf	??_floorf^0,f,c
  3812   002530                     u3070:
  3813   002530  2EE8               	decfsz	wreg,f,c
  3814   002532  EF93  F012         	goto	u3075
  3815   002536  501E               	movf	??_floorf^0,w,c
  3816   002538  101F               	iorwf	(??_floorf+1)^0,w,c
  3817   00253A  1020               	iorwf	(??_floorf+2)^0,w,c
  3818   00253C  1021               	iorwf	(??_floorf+3)^0,w,c
  3819   00253E  B4D8               	btfsc	status,2,c
  3820   002540  EFA4  F012         	goto	u3081
  3821   002544  EFA6  F012         	goto	u3080
  3822   002548                     u3081:
  3823   002548  EFAE  F012         	goto	l970
  3824   00254C                     u3080:
  3825   00254C  5024               	movf	floorf@m^0,w,c
  3826   00254E  262A               	addwf	floorf@u^0,f,c
  3827   002550  5025               	movf	(floorf@m+1)^0,w,c
  3828   002552  222B               	addwfc	(floorf@u+1)^0,f,c
  3829   002554  5026               	movf	(floorf@m+2)^0,w,c
  3830   002556  222C               	addwfc	(floorf@u+2)^0,f,c
  3831   002558  5027               	movf	(floorf@m+3)^0,w,c
  3832   00255A  222D               	addwfc	(floorf@u+3)^0,f,c
  3833   00255C                     l970:
  3834   00255C  1C24               	comf	floorf@m^0,w,c
  3835   00255E  6E1E               	movwf	??_floorf^0,c
  3836   002560  1C25               	comf	(floorf@m+1)^0,w,c
  3837   002562  6E1F               	movwf	(??_floorf+1)^0,c
  3838   002564  1C26               	comf	(floorf@m+2)^0,w,c
  3839   002566  6E20               	movwf	(??_floorf+2)^0,c
  3840   002568  1C27               	comf	(floorf@m+3)^0,w,c
  3841   00256A  6E21               	movwf	(??_floorf+3)^0,c
  3842   00256C  501E               	movf	??_floorf^0,w,c
  3843   00256E  162A               	andwf	floorf@u^0,f,c
  3844   002570  501F               	movf	(??_floorf+1)^0,w,c
  3845   002572  162B               	andwf	(floorf@u+1)^0,f,c
  3846   002574  5020               	movf	(??_floorf+2)^0,w,c
  3847   002576  162C               	andwf	(floorf@u+2)^0,f,c
  3848   002578  5021               	movf	(??_floorf+3)^0,w,c
  3849   00257A  162D               	andwf	(floorf@u+3)^0,f,c
  3850   00257C  EF04  F013         	goto	l3038
  3851   002580                     l3030:
  3852   002580  C02A  F01E         	movff	floorf@u,??_floorf
  3853   002584  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  3854   002588  C02C  F020         	movff	floorf@u+2,??_floorf+2
  3855   00258C  C02D  F021         	movff	floorf@u+3,??_floorf+3
  3856   002590  0E20               	movlw	32
  3857   002592  EFD0  F012         	goto	u3090
  3858   002596                     u3095:
  3859   002596  90D8               	bcf	status,0,c
  3860   002598  3221               	rrcf	(??_floorf+3)^0,f,c
  3861   00259A  3220               	rrcf	(??_floorf+2)^0,f,c
  3862   00259C  321F               	rrcf	(??_floorf+1)^0,f,c
  3863   00259E  321E               	rrcf	??_floorf^0,f,c
  3864   0025A0                     u3090:
  3865   0025A0  2EE8               	decfsz	wreg,f,c
  3866   0025A2  EFCB  F012         	goto	u3095
  3867   0025A6  501E               	movf	??_floorf^0,w,c
  3868   0025A8  101F               	iorwf	(??_floorf+1)^0,w,c
  3869   0025AA  1020               	iorwf	(??_floorf+2)^0,w,c
  3870   0025AC  1021               	iorwf	(??_floorf+3)^0,w,c
  3871   0025AE  A4D8               	btfss	status,2,c
  3872   0025B0  EFDC  F012         	goto	u3101
  3873   0025B4  EFDE  F012         	goto	u3100
  3874   0025B8                     u3101:
  3875   0025B8  EFE8  F012         	goto	l3034
  3876   0025BC                     u3100:
  3877   0025BC  0E00               	movlw	0
  3878   0025BE  6E2A               	movwf	floorf@u^0,c
  3879   0025C0  0E00               	movlw	0
  3880   0025C2  6E2B               	movwf	(floorf@u+1)^0,c
  3881   0025C4  0E00               	movlw	0
  3882   0025C6  6E2C               	movwf	(floorf@u+2)^0,c
  3883   0025C8  0E00               	movlw	0
  3884   0025CA  6E2D               	movwf	(floorf@u+3)^0,c
  3885   0025CC  EF04  F013         	goto	l3038
  3886   0025D0                     l3034:
  3887   0025D0  90D8               	bcf	status,0,c
  3888   0025D2  342A               	rlcf	floorf@u^0,w,c
  3889   0025D4  6E1E               	movwf	??_floorf^0,c
  3890   0025D6  342B               	rlcf	(floorf@u+1)^0,w,c
  3891   0025D8  6E1F               	movwf	(??_floorf+1)^0,c
  3892   0025DA  342C               	rlcf	(floorf@u+2)^0,w,c
  3893   0025DC  6E20               	movwf	(??_floorf+2)^0,c
  3894   0025DE  342D               	rlcf	(floorf@u+3)^0,w,c
  3895   0025E0  6E21               	movwf	(??_floorf+3)^0,c
  3896   0025E2  501E               	movf	??_floorf^0,w,c
  3897   0025E4  101F               	iorwf	(??_floorf+1)^0,w,c
  3898   0025E6  1020               	iorwf	(??_floorf+2)^0,w,c
  3899   0025E8  1021               	iorwf	(??_floorf+3)^0,w,c
  3900   0025EA  B4D8               	btfsc	status,2,c
  3901   0025EC  EFFA  F012         	goto	u3111
  3902   0025F0  EFFC  F012         	goto	u3110
  3903   0025F4                     u3111:
  3904   0025F4  EF04  F013         	goto	l3038
  3905   0025F8                     u3110:
  3906   0025F8  0E00               	movlw	0
  3907   0025FA  6E2A               	movwf	floorf@u^0,c
  3908   0025FC  0E00               	movlw	0
  3909   0025FE  6E2B               	movwf	(floorf@u+1)^0,c
  3910   002600  0E80               	movlw	128
  3911   002602  6E2C               	movwf	(floorf@u+2)^0,c
  3912   002604  0EBF               	movlw	191
  3913   002606  6E2D               	movwf	(floorf@u+3)^0,c
  3914   002608                     l3038:
  3915   002608  C02A  F01A         	movff	floorf@u,?_floorf
  3916   00260C  C02B  F01B         	movff	floorf@u+1,?_floorf+1
  3917   002610  C02C  F01C         	movff	floorf@u+2,?_floorf+2
  3918   002614  C02D  F01D         	movff	floorf@u+3,?_floorf+3
  3919   002618                     l967:
  3920   002618  0012               	return		;funcret
  3921   00261A                     __end_of_floorf:
  3922                           	callstack 0
  3923                           
  3924 ;; *************** function ___fpclassifyf *****************
  3925 ;; Defined at:
  3926 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__fpclassifyf.c"
  3927 ;; Parameters:    Size  Location     Type
  3928 ;;  x               4    0[COMRAM] float 
  3929 ;; Auto vars:     Size  Location     Type
  3930 ;;  u               4   10[COMRAM] struct .
  3931 ;;  e               2    8[COMRAM] int 
  3932 ;; Return value:  Size  Location     Type
  3933 ;;                  2    0[COMRAM] int 
  3934 ;; Registers used:
  3935 ;;		wreg, status,2, status,0
  3936 ;; Tracked objects:
  3937 ;;		On entry : 0/0
  3938 ;;		On exit  : 0/0
  3939 ;;		Unchanged: 0/0
  3940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3941 ;;      Params:         4       0       0       0       0       0       0       0       0
  3942 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3943 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3944 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3945 ;;Total ram usage:       14 bytes
  3946 ;; Hardware stack levels used: 1
  3947 ;; This function calls:
  3948 ;;		Nothing
  3949 ;; This function is called by:
  3950 ;;		_efgtoa
  3951 ;; This function uses a non-reentrant model
  3952 ;;
  3953                           
  3954                           	psect	text13
  3955   002B22                     __ptext13:
  3956                           	callstack 0
  3957   002B22                     ___fpclassifyf:
  3958                           	callstack 26
  3959   002B22  C0B4  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  3960   002B26  C0B5  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  3961   002B2A  C0B6  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  3962   002B2E  C0B7  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  3963   002B32  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  3964   002B36  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  3965   002B3A  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  3966   002B3E  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  3967   002B42  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  3968   002B46  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  3969   002B4A  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  3970   002B4E  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  3971   002B52  0E18               	movlw	24
  3972   002B54  EFB1  F015         	goto	u2930
  3973   002B58                     u2935:
  3974   002B58  90D8               	bcf	status,0,c
  3975   002B5A  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  3976   002B5C  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  3977   002B5E  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  3978   002B60  3205               	rrcf	??___fpclassifyf^0,f,c
  3979   002B62                     u2930:
  3980   002B62  2EE8               	decfsz	wreg,f,c
  3981   002B64  EFAC  F015         	goto	u2935
  3982   002B68  5005               	movf	??___fpclassifyf^0,w,c
  3983   002B6A  6E09               	movwf	___fpclassifyf@e^0,c
  3984   002B6C  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  3985   002B6E  5009               	movf	___fpclassifyf@e^0,w,c
  3986   002B70  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  3987   002B72  A4D8               	btfss	status,2,c
  3988   002B74  EFBE  F015         	goto	u2941
  3989   002B78  EFC0  F015         	goto	u2940
  3990   002B7C                     u2941:
  3991   002B7C  EFE0  F015         	goto	l2996
  3992   002B80                     u2940:
  3993   002B80  90D8               	bcf	status,0,c
  3994   002B82  340B               	rlcf	___fpclassifyf@u^0,w,c
  3995   002B84  6E05               	movwf	??___fpclassifyf^0,c
  3996   002B86  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  3997   002B88  6E06               	movwf	(??___fpclassifyf+1)^0,c
  3998   002B8A  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  3999   002B8C  6E07               	movwf	(??___fpclassifyf+2)^0,c
  4000   002B8E  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4001   002B90  6E08               	movwf	(??___fpclassifyf+3)^0,c
  4002   002B92  5005               	movf	??___fpclassifyf^0,w,c
  4003   002B94  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4004   002B96  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4005   002B98  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4006   002B9A  A4D8               	btfss	status,2,c
  4007   002B9C  EFD2  F015         	goto	u2951
  4008   002BA0  EFD4  F015         	goto	u2950
  4009   002BA4                     u2951:
  4010   002BA4  EFDA  F015         	goto	l2992
  4011   002BA8                     u2950:
  4012   002BA8  0E00               	movlw	0
  4013   002BAA  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4014   002BAC  0E02               	movlw	2
  4015   002BAE  6E01               	movwf	?___fpclassifyf^0,c
  4016   002BB0  EF0F  F016         	goto	l935
  4017   002BB4                     l2992:
  4018   002BB4  0E00               	movlw	0
  4019   002BB6  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4020   002BB8  0E03               	movlw	3
  4021   002BBA  6E01               	movwf	?___fpclassifyf^0,c
  4022   002BBC  EF0F  F016         	goto	l935
  4023   002BC0                     l2996:
  4024   002BC0  2809               	incf	___fpclassifyf@e^0,w,c
  4025   002BC2  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4026   002BC4  A4D8               	btfss	status,2,c
  4027   002BC6  EFE7  F015         	goto	u2961
  4028   002BCA  EFE9  F015         	goto	u2960
  4029   002BCE                     u2961:
  4030   002BCE  EF0B  F016         	goto	l3002
  4031   002BD2                     u2960:
  4032   002BD2  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4033   002BD6  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4034   002BDA  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4035   002BDE  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4036   002BE2  0E09               	movlw	9
  4037   002BE4                     u2975:
  4038   002BE4  90D8               	bcf	status,0,c
  4039   002BE6  3605               	rlcf	??___fpclassifyf^0,f,c
  4040   002BE8  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  4041   002BEA  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  4042   002BEC  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  4043   002BEE  2EE8               	decfsz	wreg,f,c
  4044   002BF0  EFF2  F015         	goto	u2975
  4045   002BF4  5005               	movf	??___fpclassifyf^0,w,c
  4046   002BF6  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4047   002BF8  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4048   002BFA  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4049   002BFC  B4D8               	btfsc	status,2,c
  4050   002BFE  EF03  F016         	goto	u2981
  4051   002C02  EF06  F016         	goto	u2980
  4052   002C06                     u2981:
  4053   002C06  0E01               	movlw	1
  4054   002C08  EF07  F016         	goto	u2990
  4055   002C0C                     u2980:
  4056   002C0C  0E00               	movlw	0
  4057   002C0E                     u2990:
  4058   002C0E  6E01               	movwf	?___fpclassifyf^0,c
  4059   002C10  6A02               	clrf	(?___fpclassifyf+1)^0,c
  4060   002C12  EF0F  F016         	goto	l935
  4061   002C16                     l3002:
  4062   002C16  0E00               	movlw	0
  4063   002C18  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4064   002C1A  0E04               	movlw	4
  4065   002C1C  6E01               	movwf	?___fpclassifyf^0,c
  4066   002C1E                     l935:
  4067   002C1E  0012               	return		;funcret
  4068   002C20                     __end_of___fpclassifyf:
  4069                           	callstack 0
  4070                           
  4071 ;; *************** function ___fltol *****************
  4072 ;; Defined at:
  4073 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  4074 ;; Parameters:    Size  Location     Type
  4075 ;;  f1              4    0[COMRAM] int 
  4076 ;; Auto vars:     Size  Location     Type
  4077 ;;  exp1            1    9[COMRAM] unsigned char 
  4078 ;;  sign1           1    8[COMRAM] unsigned char 
  4079 ;; Return value:  Size  Location     Type
  4080 ;;                  4    0[COMRAM] long 
  4081 ;; Registers used:
  4082 ;;		wreg, status,2, status,0
  4083 ;; Tracked objects:
  4084 ;;		On entry : 0/0
  4085 ;;		On exit  : 0/0
  4086 ;;		Unchanged: 0/0
  4087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4088 ;;      Params:         4       0       0       0       0       0       0       0       0
  4089 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4090 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4091 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4092 ;;Total ram usage:       10 bytes
  4093 ;; Hardware stack levels used: 1
  4094 ;; This function calls:
  4095 ;;		Nothing
  4096 ;; This function is called by:
  4097 ;;		_efgtoa
  4098 ;; This function uses a non-reentrant model
  4099 ;;
  4100                           
  4101                           	psect	text14
  4102   002918                     __ptext14:
  4103                           	callstack 0
  4104   002918                     ___fltol:
  4105                           	callstack 26
  4106   002918  3403               	rlcf	(___fltol@f1+2)^0,w,c
  4107   00291A  3404               	rlcf	(___fltol@f1+3)^0,w,c
  4108   00291C  6E0A               	movwf	___fltol@exp1^0,c
  4109   00291E  500A               	movf	___fltol@exp1^0,w,c
  4110   002920  A4D8               	btfss	status,2,c
  4111   002922  EF95  F014         	goto	u2841
  4112   002926  EF97  F014         	goto	u2840
  4113   00292A                     u2841:
  4114   00292A  EFA1  F014         	goto	l2932
  4115   00292E                     u2840:
  4116   00292E                     l2928:
  4117   00292E  0E00               	movlw	0
  4118   002930  6E01               	movwf	?___fltol^0,c
  4119   002932  0E00               	movlw	0
  4120   002934  6E02               	movwf	(?___fltol+1)^0,c
  4121   002936  0E00               	movlw	0
  4122   002938  6E03               	movwf	(?___fltol+2)^0,c
  4123   00293A  0E00               	movlw	0
  4124   00293C  6E04               	movwf	(?___fltol+3)^0,c
  4125   00293E  EF0E  F015         	goto	l420
  4126   002942                     l2932:
  4127   002942  C001  F005         	movff	___fltol@f1,??___fltol
  4128   002946  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  4129   00294A  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  4130   00294E  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  4131   002952  0E20               	movlw	32
  4132   002954  EFB1  F014         	goto	u2850
  4133   002958                     u2855:
  4134   002958  90D8               	bcf	status,0,c
  4135   00295A  3208               	rrcf	(??___fltol+3)^0,f,c
  4136   00295C  3207               	rrcf	(??___fltol+2)^0,f,c
  4137   00295E  3206               	rrcf	(??___fltol+1)^0,f,c
  4138   002960  3205               	rrcf	??___fltol^0,f,c
  4139   002962                     u2850:
  4140   002962  2EE8               	decfsz	wreg,f,c
  4141   002964  EFAC  F014         	goto	u2855
  4142   002968  5005               	movf	??___fltol^0,w,c
  4143   00296A  6E09               	movwf	___fltol@sign1^0,c
  4144   00296C  8E03               	bsf	(___fltol@f1+2)^0,7,c
  4145   00296E  0EFF               	movlw	255
  4146   002970  1601               	andwf	___fltol@f1^0,f,c
  4147   002972  0EFF               	movlw	255
  4148   002974  1602               	andwf	(___fltol@f1+1)^0,f,c
  4149   002976  0EFF               	movlw	255
  4150   002978  1603               	andwf	(___fltol@f1+2)^0,f,c
  4151   00297A  0E00               	movlw	0
  4152   00297C  1604               	andwf	(___fltol@f1+3)^0,f,c
  4153   00297E  0E96               	movlw	150
  4154   002980  5E0A               	subwf	___fltol@exp1^0,f,c
  4155   002982  BE0A               	btfsc	___fltol@exp1^0,7,c
  4156   002984  EFC8  F014         	goto	u2860
  4157   002988  EFC6  F014         	goto	u2861
  4158   00298C                     u2861:
  4159   00298C  EFDE  F014         	goto	l2952
  4160   002990                     u2860:
  4161   002990  500A               	movf	___fltol@exp1^0,w,c
  4162   002992  0A80               	xorlw	128
  4163   002994  0F97               	addlw	151
  4164   002996  B0D8               	btfsc	status,0,c
  4165   002998  EFD0  F014         	goto	u2871
  4166   00299C  EFD2  F014         	goto	u2870
  4167   0029A0                     u2871:
  4168   0029A0  EFD4  F014         	goto	l2948
  4169   0029A4                     u2870:
  4170   0029A4  EF97  F014         	goto	l2928
  4171   0029A8                     l2948:
  4172   0029A8  90D8               	bcf	status,0,c
  4173   0029AA  3204               	rrcf	(___fltol@f1+3)^0,f,c
  4174   0029AC  3203               	rrcf	(___fltol@f1+2)^0,f,c
  4175   0029AE  3202               	rrcf	(___fltol@f1+1)^0,f,c
  4176   0029B0  3201               	rrcf	___fltol@f1^0,f,c
  4177   0029B2  3E0A               	incfsz	___fltol@exp1^0,f,c
  4178   0029B4  EFD4  F014         	goto	l2948
  4179   0029B8  EFF6  F014         	goto	l2962
  4180   0029BC                     l2952:
  4181   0029BC  0E1F               	movlw	31
  4182   0029BE  640A               	cpfsgt	___fltol@exp1^0,c
  4183   0029C0  EFE4  F014         	goto	u2881
  4184   0029C4  EFE6  F014         	goto	u2880
  4185   0029C8                     u2881:
  4186   0029C8  EFEE  F014         	goto	l2960
  4187   0029CC                     u2880:
  4188   0029CC  EF97  F014         	goto	l2928
  4189   0029D0                     l2958:
  4190   0029D0  90D8               	bcf	status,0,c
  4191   0029D2  3601               	rlcf	___fltol@f1^0,f,c
  4192   0029D4  3602               	rlcf	(___fltol@f1+1)^0,f,c
  4193   0029D6  3603               	rlcf	(___fltol@f1+2)^0,f,c
  4194   0029D8  3604               	rlcf	(___fltol@f1+3)^0,f,c
  4195   0029DA  060A               	decf	___fltol@exp1^0,f,c
  4196   0029DC                     l2960:
  4197   0029DC  500A               	movf	___fltol@exp1^0,w,c
  4198   0029DE  A4D8               	btfss	status,2,c
  4199   0029E0  EFF4  F014         	goto	u2891
  4200   0029E4  EFF6  F014         	goto	u2890
  4201   0029E8                     u2891:
  4202   0029E8  EFE8  F014         	goto	l2958
  4203   0029EC                     u2890:
  4204   0029EC                     l2962:
  4205   0029EC  5009               	movf	___fltol@sign1^0,w,c
  4206   0029EE  B4D8               	btfsc	status,2,c
  4207   0029F0  EFFC  F014         	goto	u2901
  4208   0029F4  EFFE  F014         	goto	u2900
  4209   0029F8                     u2901:
  4210   0029F8  EF06  F015         	goto	l2966
  4211   0029FC                     u2900:
  4212   0029FC  1E04               	comf	(___fltol@f1+3)^0,f,c
  4213   0029FE  1E03               	comf	(___fltol@f1+2)^0,f,c
  4214   002A00  1E02               	comf	(___fltol@f1+1)^0,f,c
  4215   002A02  6C01               	negf	___fltol@f1^0,c
  4216   002A04  0E00               	movlw	0
  4217   002A06  2202               	addwfc	(___fltol@f1+1)^0,f,c
  4218   002A08  2203               	addwfc	(___fltol@f1+2)^0,f,c
  4219   002A0A  2204               	addwfc	(___fltol@f1+3)^0,f,c
  4220   002A0C                     l2966:
  4221   002A0C  C001  F001         	movff	___fltol@f1,?___fltol
  4222   002A10  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  4223   002A14  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  4224   002A18  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  4225   002A1C                     l420:
  4226   002A1C  0012               	return		;funcret
  4227   002A1E                     __end_of___fltol:
  4228                           	callstack 0
  4229                           
  4230 ;; *************** function ___flsub *****************
  4231 ;; Defined at:
  4232 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  4233 ;; Parameters:    Size  Location     Type
  4234 ;;  b               4   60[COMRAM] long 
  4235 ;;  a               4   64[COMRAM] long 
  4236 ;; Auto vars:     Size  Location     Type
  4237 ;;		None
  4238 ;; Return value:  Size  Location     Type
  4239 ;;                  4   60[COMRAM] long 
  4240 ;; Registers used:
  4241 ;;		wreg, status,2, status,0, cstack
  4242 ;; Tracked objects:
  4243 ;;		On entry : 0/0
  4244 ;;		On exit  : 0/0
  4245 ;;		Unchanged: 0/0
  4246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4247 ;;      Params:         8       0       0       0       0       0       0       0       0
  4248 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4249 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4250 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4251 ;;Total ram usage:        8 bytes
  4252 ;; Hardware stack levels used: 1
  4253 ;; Hardware stack levels required when called: 1
  4254 ;; This function calls:
  4255 ;;		___fladd
  4256 ;; This function is called by:
  4257 ;;		_efgtoa
  4258 ;; This function uses a non-reentrant model
  4259 ;;
  4260                           
  4261                           	psect	text15
  4262   00309A                     __ptext15:
  4263                           	callstack 0
  4264   00309A                     ___flsub:
  4265                           	callstack 25
  4266   00309A  0E00               	movlw	0
  4267   00309C  1A41               	xorwf	___flsub@a^0,f,c
  4268   00309E  0E00               	movlw	0
  4269   0030A0  1A42               	xorwf	(___flsub@a+1)^0,f,c
  4270   0030A2  0E00               	movlw	0
  4271   0030A4  1A43               	xorwf	(___flsub@a+2)^0,f,c
  4272   0030A6  0E80               	movlw	128
  4273   0030A8  1A44               	xorwf	(___flsub@a+3)^0,f,c
  4274   0030AA  C03D  F02D         	movff	___flsub@b,___fladd@b
  4275   0030AE  C03E  F02E         	movff	___flsub@b+1,___fladd@b+1
  4276   0030B2  C03F  F02F         	movff	___flsub@b+2,___fladd@b+2
  4277   0030B6  C040  F030         	movff	___flsub@b+3,___fladd@b+3
  4278   0030BA  C041  F031         	movff	___flsub@a,___fladd@a
  4279   0030BE  C042  F032         	movff	___flsub@a+1,___fladd@a+1
  4280   0030C2  C043  F033         	movff	___flsub@a+2,___fladd@a+2
  4281   0030C6  C044  F034         	movff	___flsub@a+3,___fladd@a+3
  4282   0030CA  EC0F  F009         	call	___fladd	;wreg free
  4283   0030CE  C02D  F03D         	movff	?___fladd,?___flsub
  4284   0030D2  C02E  F03E         	movff	?___fladd+1,?___flsub+1
  4285   0030D6  C02F  F03F         	movff	?___fladd+2,?___flsub+2
  4286   0030DA  C030  F040         	movff	?___fladd+3,?___flsub+3
  4287   0030DE  0012               	return		;funcret
  4288   0030E0                     __end_of___flsub:
  4289                           	callstack 0
  4290                           
  4291 ;; *************** function ___fladd *****************
  4292 ;; Defined at:
  4293 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  4294 ;; Parameters:    Size  Location     Type
  4295 ;;  b               4   44[COMRAM] long 
  4296 ;;  a               4   48[COMRAM] long 
  4297 ;; Auto vars:     Size  Location     Type
  4298 ;;  grs             1   59[COMRAM] unsigned char 
  4299 ;;  bexp            1   58[COMRAM] unsigned char 
  4300 ;;  aexp            1   57[COMRAM] unsigned char 
  4301 ;;  signs           1   56[COMRAM] unsigned char 
  4302 ;; Return value:  Size  Location     Type
  4303 ;;                  4   44[COMRAM] unsigned char 
  4304 ;; Registers used:
  4305 ;;		wreg, status,2, status,0
  4306 ;; Tracked objects:
  4307 ;;		On entry : 0/0
  4308 ;;		On exit  : 0/0
  4309 ;;		Unchanged: 0/0
  4310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4311 ;;      Params:         8       0       0       0       0       0       0       0       0
  4312 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4313 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4314 ;;      Totals:        16       0       0       0       0       0       0       0       0
  4315 ;;Total ram usage:       16 bytes
  4316 ;; Hardware stack levels used: 1
  4317 ;; This function calls:
  4318 ;;		Nothing
  4319 ;; This function is called by:
  4320 ;;		_main
  4321 ;;		___flsub
  4322 ;;		_efgtoa
  4323 ;; This function uses a non-reentrant model
  4324 ;;
  4325                           
  4326                           	psect	text16
  4327   00121E                     __ptext16:
  4328                           	callstack 0
  4329   00121E                     ___fladd:
  4330                           	callstack 25
  4331   00121E  5030               	movf	(___fladd@b+3)^0,w,c
  4332   001220  0B80               	andlw	128
  4333   001222  6E39               	movwf	___fladd@signs^0,c
  4334   001224  5030               	movf	(___fladd@b+3)^0,w,c
  4335   001226  2430               	addwf	(___fladd@b+3)^0,w,c
  4336   001228  6E3B               	movwf	___fladd@bexp^0,c
  4337   00122A  AE2F               	btfss	(___fladd@b+2)^0,7,c
  4338   00122C  EF1A  F009         	goto	u1931
  4339   001230  EF1C  F009         	goto	u1930
  4340   001234                     u1931:
  4341   001234  EF1D  F009         	goto	l2396
  4342   001238                     u1930:
  4343   001238  803B               	bsf	___fladd@bexp^0,0,c
  4344   00123A                     l2396:
  4345   00123A  503B               	movf	___fladd@bexp^0,w,c
  4346   00123C  B4D8               	btfsc	status,2,c
  4347   00123E  EF23  F009         	goto	u1941
  4348   001242  EF25  F009         	goto	u1940
  4349   001246                     u1941:
  4350   001246  EF3A  F009         	goto	l2406
  4351   00124A                     u1940:
  4352   00124A  283B               	incf	___fladd@bexp^0,w,c
  4353   00124C  A4D8               	btfss	status,2,c
  4354   00124E  EF2B  F009         	goto	u1951
  4355   001252  EF2D  F009         	goto	u1950
  4356   001256                     u1951:
  4357   001256  EF35  F009         	goto	l2402
  4358   00125A                     u1950:
  4359   00125A  0E00               	movlw	0
  4360   00125C  6E2D               	movwf	___fladd@b^0,c
  4361   00125E  0E00               	movlw	0
  4362   001260  6E2E               	movwf	(___fladd@b+1)^0,c
  4363   001262  0E00               	movlw	0
  4364   001264  6E2F               	movwf	(___fladd@b+2)^0,c
  4365   001266  0E00               	movlw	0
  4366   001268  6E30               	movwf	(___fladd@b+3)^0,c
  4367   00126A                     l2402:
  4368   00126A  8E2F               	bsf	(___fladd@b+2)^0,7,c
  4369   00126C  0E00               	movlw	0
  4370   00126E  6E30               	movwf	(___fladd@b+3)^0,c
  4371   001270  EF42  F009         	goto	l2408
  4372   001274                     l2406:
  4373   001274  0E00               	movlw	0
  4374   001276  6E2D               	movwf	___fladd@b^0,c
  4375   001278  0E00               	movlw	0
  4376   00127A  6E2E               	movwf	(___fladd@b+1)^0,c
  4377   00127C  0E00               	movlw	0
  4378   00127E  6E2F               	movwf	(___fladd@b+2)^0,c
  4379   001280  0E00               	movlw	0
  4380   001282  6E30               	movwf	(___fladd@b+3)^0,c
  4381   001284                     l2408:
  4382   001284  5034               	movf	(___fladd@a+3)^0,w,c
  4383   001286  0B80               	andlw	128
  4384   001288  6E3A               	movwf	___fladd@aexp^0,c
  4385   00128A  5039               	movf	___fladd@signs^0,w,c
  4386   00128C  183A               	xorwf	___fladd@aexp^0,w,c
  4387   00128E  B4D8               	btfsc	status,2,c
  4388   001290  EF4C  F009         	goto	u1961
  4389   001294  EF4E  F009         	goto	u1960
  4390   001298                     u1961:
  4391   001298  EF4F  F009         	goto	l2414
  4392   00129C                     u1960:
  4393   00129C  8C39               	bsf	___fladd@signs^0,6,c
  4394   00129E                     l2414:
  4395   00129E  5034               	movf	(___fladd@a+3)^0,w,c
  4396   0012A0  2434               	addwf	(___fladd@a+3)^0,w,c
  4397   0012A2  6E3A               	movwf	___fladd@aexp^0,c
  4398   0012A4  AE33               	btfss	(___fladd@a+2)^0,7,c
  4399   0012A6  EF57  F009         	goto	u1971
  4400   0012AA  EF59  F009         	goto	u1970
  4401   0012AE                     u1971:
  4402   0012AE  EF5A  F009         	goto	l2420
  4403   0012B2                     u1970:
  4404   0012B2  803A               	bsf	___fladd@aexp^0,0,c
  4405   0012B4                     l2420:
  4406   0012B4  503A               	movf	___fladd@aexp^0,w,c
  4407   0012B6  B4D8               	btfsc	status,2,c
  4408   0012B8  EF60  F009         	goto	u1981
  4409   0012BC  EF62  F009         	goto	u1980
  4410   0012C0                     u1981:
  4411   0012C0  EF77  F009         	goto	l2430
  4412   0012C4                     u1980:
  4413   0012C4  283A               	incf	___fladd@aexp^0,w,c
  4414   0012C6  A4D8               	btfss	status,2,c
  4415   0012C8  EF68  F009         	goto	u1991
  4416   0012CC  EF6A  F009         	goto	u1990
  4417   0012D0                     u1991:
  4418   0012D0  EF72  F009         	goto	l2426
  4419   0012D4                     u1990:
  4420   0012D4  0E00               	movlw	0
  4421   0012D6  6E31               	movwf	___fladd@a^0,c
  4422   0012D8  0E00               	movlw	0
  4423   0012DA  6E32               	movwf	(___fladd@a+1)^0,c
  4424   0012DC  0E00               	movlw	0
  4425   0012DE  6E33               	movwf	(___fladd@a+2)^0,c
  4426   0012E0  0E00               	movlw	0
  4427   0012E2  6E34               	movwf	(___fladd@a+3)^0,c
  4428   0012E4                     l2426:
  4429   0012E4  8E33               	bsf	(___fladd@a+2)^0,7,c
  4430   0012E6  0E00               	movlw	0
  4431   0012E8  6E34               	movwf	(___fladd@a+3)^0,c
  4432   0012EA  EF7F  F009         	goto	l2432
  4433   0012EE                     l2430:
  4434   0012EE  0E00               	movlw	0
  4435   0012F0  6E31               	movwf	___fladd@a^0,c
  4436   0012F2  0E00               	movlw	0
  4437   0012F4  6E32               	movwf	(___fladd@a+1)^0,c
  4438   0012F6  0E00               	movlw	0
  4439   0012F8  6E33               	movwf	(___fladd@a+2)^0,c
  4440   0012FA  0E00               	movlw	0
  4441   0012FC  6E34               	movwf	(___fladd@a+3)^0,c
  4442   0012FE                     l2432:
  4443   0012FE  503B               	movf	___fladd@bexp^0,w,c
  4444   001300  5C3A               	subwf	___fladd@aexp^0,w,c
  4445   001302  B0D8               	btfsc	status,0,c
  4446   001304  EF86  F009         	goto	u2001
  4447   001308  EF88  F009         	goto	u2000
  4448   00130C                     u2001:
  4449   00130C  EFAF  F009         	goto	l2468
  4450   001310                     u2000:
  4451   001310  AC39               	btfss	___fladd@signs^0,6,c
  4452   001312  EF8D  F009         	goto	u2011
  4453   001316  EF8F  F009         	goto	u2010
  4454   00131A                     u2011:
  4455   00131A  EF91  F009         	goto	l2438
  4456   00131E                     u2010:
  4457   00131E  0E80               	movlw	128
  4458   001320  1A39               	xorwf	___fladd@signs^0,f,c
  4459   001322                     l2438:
  4460   001322  C03B  F03C         	movff	___fladd@bexp,___fladd@grs
  4461   001326  C03A  F03B         	movff	___fladd@aexp,___fladd@bexp
  4462   00132A  C03C  F03A         	movff	___fladd@grs,___fladd@aexp
  4463   00132E  C02D  F03C         	movff	___fladd@b,___fladd@grs
  4464   001332  C031  F02D         	movff	___fladd@a,___fladd@b
  4465   001336  C03C  F031         	movff	___fladd@grs,___fladd@a
  4466   00133A  C02E  F03C         	movff	___fladd@b+1,___fladd@grs
  4467   00133E  C032  F02E         	movff	___fladd@a+1,___fladd@b+1
  4468   001342  C03C  F032         	movff	___fladd@grs,___fladd@a+1
  4469   001346  C02F  F03C         	movff	___fladd@b+2,___fladd@grs
  4470   00134A  C033  F02F         	movff	___fladd@a+2,___fladd@b+2
  4471   00134E  C03C  F033         	movff	___fladd@grs,___fladd@a+2
  4472   001352  C030  F03C         	movff	___fladd@b+3,___fladd@grs
  4473   001356  C034  F030         	movff	___fladd@a+3,___fladd@b+3
  4474   00135A  C03C  F034         	movff	___fladd@grs,___fladd@a+3
  4475   00135E                     l2468:
  4476   00135E  0E00               	movlw	0
  4477   001360  6E3C               	movwf	___fladd@grs^0,c
  4478   001362  503B               	movf	___fladd@bexp^0,w,c
  4479   001364  C03A  F035         	movff	___fladd@aexp,??___fladd
  4480   001368  6A36               	clrf	(??___fladd+1)^0,c
  4481   00136A  5E35               	subwf	??___fladd^0,f,c
  4482   00136C  0E00               	movlw	0
  4483   00136E  5A36               	subwfb	(??___fladd+1)^0,f,c
  4484   001370  BE36               	btfsc	(??___fladd+1)^0,7,c
  4485   001372  EFC4  F009         	goto	u2021
  4486   001376  5036               	movf	(??___fladd+1)^0,w,c
  4487   001378  E109               	bnz	u2020
  4488   00137A  0E1A               	movlw	26
  4489   00137C  5C35               	subwf	??___fladd^0,w,c
  4490   00137E  A0D8               	btfss	status,0,c
  4491   001380  EFC4  F009         	goto	u2021
  4492   001384  EFC6  F009         	goto	u2020
  4493   001388                     u2021:
  4494   001388  EFFD  F009         	goto	l652
  4495   00138C                     u2020:
  4496   00138C  502D               	movf	___fladd@b^0,w,c
  4497   00138E  102E               	iorwf	(___fladd@b+1)^0,w,c
  4498   001390  102F               	iorwf	(___fladd@b+2)^0,w,c
  4499   001392  1030               	iorwf	(___fladd@b+3)^0,w,c
  4500   001394  A4D8               	btfss	status,2,c
  4501   001396  EFCF  F009         	goto	u2031
  4502   00139A  EFD2  F009         	goto	u2030
  4503   00139E                     u2031:
  4504   00139E  0E01               	movlw	1
  4505   0013A0  EFD3  F009         	goto	u2040
  4506   0013A4                     u2030:
  4507   0013A4  0E00               	movlw	0
  4508   0013A6                     u2040:
  4509   0013A6  6E3C               	movwf	___fladd@grs^0,c
  4510   0013A8  0E00               	movlw	0
  4511   0013AA  6E2D               	movwf	___fladd@b^0,c
  4512   0013AC  0E00               	movlw	0
  4513   0013AE  6E2E               	movwf	(___fladd@b+1)^0,c
  4514   0013B0  0E00               	movlw	0
  4515   0013B2  6E2F               	movwf	(___fladd@b+2)^0,c
  4516   0013B4  0E00               	movlw	0
  4517   0013B6  6E30               	movwf	(___fladd@b+3)^0,c
  4518   0013B8  C03A  F03B         	movff	___fladd@aexp,___fladd@bexp
  4519   0013BC  EF06  F00A         	goto	l651
  4520   0013C0                     l653:
  4521   0013C0  A03C               	btfss	___fladd@grs^0,0,c
  4522   0013C2  EFE5  F009         	goto	u2051
  4523   0013C6  EFE7  F009         	goto	u2050
  4524   0013CA                     u2051:
  4525   0013CA  EFED  F009         	goto	l2480
  4526   0013CE                     u2050:
  4527   0013CE  90D8               	bcf	status,0,c
  4528   0013D0  303C               	rrcf	___fladd@grs^0,w,c
  4529   0013D2  0901               	iorlw	1
  4530   0013D4  6E3C               	movwf	___fladd@grs^0,c
  4531   0013D6  EFEF  F009         	goto	l2482
  4532   0013DA                     l2480:
  4533   0013DA  90D8               	bcf	status,0,c
  4534   0013DC  323C               	rrcf	___fladd@grs^0,f,c
  4535   0013DE                     l2482:
  4536   0013DE  A02D               	btfss	___fladd@b^0,0,c
  4537   0013E0  EFF4  F009         	goto	u2061
  4538   0013E4  EFF6  F009         	goto	u2060
  4539   0013E8                     u2061:
  4540   0013E8  EFF7  F009         	goto	l2486
  4541   0013EC                     u2060:
  4542   0013EC  8E3C               	bsf	___fladd@grs^0,7,c
  4543   0013EE                     l2486:
  4544   0013EE  3430               	rlcf	(___fladd@b+3)^0,w,c
  4545   0013F0  3230               	rrcf	(___fladd@b+3)^0,f,c
  4546   0013F2  322F               	rrcf	(___fladd@b+2)^0,f,c
  4547   0013F4  322E               	rrcf	(___fladd@b+1)^0,f,c
  4548   0013F6  322D               	rrcf	___fladd@b^0,f,c
  4549   0013F8  2A3B               	incf	___fladd@bexp^0,f,c
  4550   0013FA                     l652:
  4551   0013FA  503A               	movf	___fladd@aexp^0,w,c
  4552   0013FC  5C3B               	subwf	___fladd@bexp^0,w,c
  4553   0013FE  A0D8               	btfss	status,0,c
  4554   001400  EF04  F00A         	goto	u2071
  4555   001404  EF06  F00A         	goto	u2070
  4556   001408                     u2071:
  4557   001408  EFE0  F009         	goto	l653
  4558   00140C                     u2070:
  4559   00140C                     l651:
  4560   00140C  BC39               	btfsc	___fladd@signs^0,6,c
  4561   00140E  EF0B  F00A         	goto	u2081
  4562   001412  EF0D  F00A         	goto	u2080
  4563   001416                     u2081:
  4564   001416  EF4D  F00A         	goto	l2514
  4565   00141A                     u2080:
  4566   00141A  503B               	movf	___fladd@bexp^0,w,c
  4567   00141C  A4D8               	btfss	status,2,c
  4568   00141E  EF13  F00A         	goto	u2091
  4569   001422  EF15  F00A         	goto	u2090
  4570   001426                     u2091:
  4571   001426  EF1F  F00A         	goto	l2496
  4572   00142A                     u2090:
  4573   00142A  0E00               	movlw	0
  4574   00142C  6E2D               	movwf	?___fladd^0,c
  4575   00142E  0E00               	movlw	0
  4576   001430  6E2E               	movwf	(?___fladd+1)^0,c
  4577   001432  0E00               	movlw	0
  4578   001434  6E2F               	movwf	(?___fladd+2)^0,c
  4579   001436  0E00               	movlw	0
  4580   001438  6E30               	movwf	(?___fladd+3)^0,c
  4581   00143A  EF6E  F00B         	goto	l660
  4582   00143E                     l2496:
  4583   00143E  5031               	movf	___fladd@a^0,w,c
  4584   001440  262D               	addwf	___fladd@b^0,f,c
  4585   001442  5032               	movf	(___fladd@a+1)^0,w,c
  4586   001444  222E               	addwfc	(___fladd@b+1)^0,f,c
  4587   001446  5033               	movf	(___fladd@a+2)^0,w,c
  4588   001448  222F               	addwfc	(___fladd@b+2)^0,f,c
  4589   00144A  5034               	movf	(___fladd@a+3)^0,w,c
  4590   00144C  2230               	addwfc	(___fladd@b+3)^0,f,c
  4591   00144E  A030               	btfss	(___fladd@b+3)^0,0,c
  4592   001450  EF2C  F00A         	goto	u2101
  4593   001454  EF2E  F00A         	goto	u2100
  4594   001458                     u2101:
  4595   001458  EFDA  F00A         	goto	l2550
  4596   00145C                     u2100:
  4597   00145C  A03C               	btfss	___fladd@grs^0,0,c
  4598   00145E  EF33  F00A         	goto	u2111
  4599   001462  EF35  F00A         	goto	u2110
  4600   001466                     u2111:
  4601   001466  EF3B  F00A         	goto	l2504
  4602   00146A                     u2110:
  4603   00146A  90D8               	bcf	status,0,c
  4604   00146C  303C               	rrcf	___fladd@grs^0,w,c
  4605   00146E  0901               	iorlw	1
  4606   001470  6E3C               	movwf	___fladd@grs^0,c
  4607   001472  EF3D  F00A         	goto	l2506
  4608   001476                     l2504:
  4609   001476  90D8               	bcf	status,0,c
  4610   001478  323C               	rrcf	___fladd@grs^0,f,c
  4611   00147A                     l2506:
  4612   00147A  A02D               	btfss	___fladd@b^0,0,c
  4613   00147C  EF42  F00A         	goto	u2121
  4614   001480  EF44  F00A         	goto	u2120
  4615   001484                     u2121:
  4616   001484  EF45  F00A         	goto	l2510
  4617   001488                     u2120:
  4618   001488  8E3C               	bsf	___fladd@grs^0,7,c
  4619   00148A                     l2510:
  4620   00148A  3430               	rlcf	(___fladd@b+3)^0,w,c
  4621   00148C  3230               	rrcf	(___fladd@b+3)^0,f,c
  4622   00148E  322F               	rrcf	(___fladd@b+2)^0,f,c
  4623   001490  322E               	rrcf	(___fladd@b+1)^0,f,c
  4624   001492  322D               	rrcf	___fladd@b^0,f,c
  4625   001494  2A3B               	incf	___fladd@bexp^0,f,c
  4626   001496  EFDA  F00A         	goto	l2550
  4627   00149A                     l2514:
  4628   00149A  5031               	movf	___fladd@a^0,w,c
  4629   00149C  5C2D               	subwf	___fladd@b^0,w,c
  4630   00149E  5032               	movf	(___fladd@a+1)^0,w,c
  4631   0014A0  582E               	subwfb	(___fladd@b+1)^0,w,c
  4632   0014A2  5033               	movf	(___fladd@a+2)^0,w,c
  4633   0014A4  582F               	subwfb	(___fladd@b+2)^0,w,c
  4634   0014A6  5030               	movf	(___fladd@b+3)^0,w,c
  4635   0014A8  0A80               	xorlw	128
  4636   0014AA  6E35               	movwf	??___fladd^0,c
  4637   0014AC  5034               	movf	(___fladd@a+3)^0,w,c
  4638   0014AE  0A80               	xorlw	128
  4639   0014B0  5835               	subwfb	??___fladd^0,w,c
  4640   0014B2  B0D8               	btfsc	status,0,c
  4641   0014B4  EF5E  F00A         	goto	u2131
  4642   0014B8  EF60  F00A         	goto	u2130
  4643   0014BC                     u2131:
  4644   0014BC  EF8B  F00A         	goto	l2524
  4645   0014C0                     u2130:
  4646   0014C0  502D               	movf	___fladd@b^0,w,c
  4647   0014C2  5C31               	subwf	___fladd@a^0,w,c
  4648   0014C4  6E35               	movwf	??___fladd^0,c
  4649   0014C6  502E               	movf	(___fladd@b+1)^0,w,c
  4650   0014C8  5832               	subwfb	(___fladd@a+1)^0,w,c
  4651   0014CA  6E36               	movwf	(??___fladd+1)^0,c
  4652   0014CC  502F               	movf	(___fladd@b+2)^0,w,c
  4653   0014CE  5833               	subwfb	(___fladd@a+2)^0,w,c
  4654   0014D0  6E37               	movwf	(??___fladd+2)^0,c
  4655   0014D2  5030               	movf	(___fladd@b+3)^0,w,c
  4656   0014D4  5834               	subwfb	(___fladd@a+3)^0,w,c
  4657   0014D6  6E38               	movwf	(??___fladd+3)^0,c
  4658   0014D8  0EFF               	movlw	255
  4659   0014DA  2435               	addwf	??___fladd^0,w,c
  4660   0014DC  6E2D               	movwf	___fladd@b^0,c
  4661   0014DE  0EFF               	movlw	255
  4662   0014E0  2036               	addwfc	(??___fladd+1)^0,w,c
  4663   0014E2  6E2E               	movwf	(___fladd@b+1)^0,c
  4664   0014E4  0EFF               	movlw	255
  4665   0014E6  2037               	addwfc	(??___fladd+2)^0,w,c
  4666   0014E8  6E2F               	movwf	(___fladd@b+2)^0,c
  4667   0014EA  0EFF               	movlw	255
  4668   0014EC  2038               	addwfc	(??___fladd+3)^0,w,c
  4669   0014EE  6E30               	movwf	(___fladd@b+3)^0,c
  4670   0014F0  0E80               	movlw	128
  4671   0014F2  1A39               	xorwf	___fladd@signs^0,f,c
  4672   0014F4  6C3C               	negf	___fladd@grs^0,c
  4673   0014F6  503C               	movf	___fladd@grs^0,w,c
  4674   0014F8  A4D8               	btfss	status,2,c
  4675   0014FA  EF81  F00A         	goto	u2141
  4676   0014FE  EF83  F00A         	goto	u2140
  4677   001502                     u2141:
  4678   001502  EF93  F00A         	goto	l668
  4679   001506                     u2140:
  4680   001506  0E01               	movlw	1
  4681   001508  262D               	addwf	___fladd@b^0,f,c
  4682   00150A  0E00               	movlw	0
  4683   00150C  222E               	addwfc	(___fladd@b+1)^0,f,c
  4684   00150E  222F               	addwfc	(___fladd@b+2)^0,f,c
  4685   001510  2230               	addwfc	(___fladd@b+3)^0,f,c
  4686   001512  EF93  F00A         	goto	l668
  4687   001516                     l2524:
  4688   001516  5031               	movf	___fladd@a^0,w,c
  4689   001518  5E2D               	subwf	___fladd@b^0,f,c
  4690   00151A  5032               	movf	(___fladd@a+1)^0,w,c
  4691   00151C  5A2E               	subwfb	(___fladd@b+1)^0,f,c
  4692   00151E  5033               	movf	(___fladd@a+2)^0,w,c
  4693   001520  5A2F               	subwfb	(___fladd@b+2)^0,f,c
  4694   001522  5034               	movf	(___fladd@a+3)^0,w,c
  4695   001524  5A30               	subwfb	(___fladd@b+3)^0,f,c
  4696   001526                     l668:
  4697   001526  502D               	movf	___fladd@b^0,w,c
  4698   001528  102E               	iorwf	(___fladd@b+1)^0,w,c
  4699   00152A  102F               	iorwf	(___fladd@b+2)^0,w,c
  4700   00152C  1030               	iorwf	(___fladd@b+3)^0,w,c
  4701   00152E  A4D8               	btfss	status,2,c
  4702   001530  EF9C  F00A         	goto	u2151
  4703   001534  EF9E  F00A         	goto	u2150
  4704   001538                     u2151:
  4705   001538  EFD3  F00A         	goto	l2548
  4706   00153C                     u2150:
  4707   00153C  503C               	movf	___fladd@grs^0,w,c
  4708   00153E  A4D8               	btfss	status,2,c
  4709   001540  EFA4  F00A         	goto	u2161
  4710   001544  EFA6  F00A         	goto	u2160
  4711   001548                     u2161:
  4712   001548  EFD3  F00A         	goto	l2548
  4713   00154C                     u2160:
  4714   00154C  0E00               	movlw	0
  4715   00154E  6E2D               	movwf	?___fladd^0,c
  4716   001550  0E00               	movlw	0
  4717   001552  6E2E               	movwf	(?___fladd+1)^0,c
  4718   001554  0E00               	movlw	0
  4719   001556  6E2F               	movwf	(?___fladd+2)^0,c
  4720   001558  0E00               	movlw	0
  4721   00155A  6E30               	movwf	(?___fladd+3)^0,c
  4722   00155C  EF6E  F00B         	goto	l660
  4723   001560                     l2532:
  4724   001560  90D8               	bcf	status,0,c
  4725   001562  362D               	rlcf	___fladd@b^0,f,c
  4726   001564  362E               	rlcf	(___fladd@b+1)^0,f,c
  4727   001566  362F               	rlcf	(___fladd@b+2)^0,f,c
  4728   001568  3630               	rlcf	(___fladd@b+3)^0,f,c
  4729   00156A  AE3C               	btfss	___fladd@grs^0,7,c
  4730   00156C  EFBA  F00A         	goto	u2171
  4731   001570  EFBC  F00A         	goto	u2170
  4732   001574                     u2171:
  4733   001574  EFBD  F00A         	goto	l2538
  4734   001578                     u2170:
  4735   001578  802D               	bsf	___fladd@b^0,0,c
  4736   00157A                     l2538:
  4737   00157A  A03C               	btfss	___fladd@grs^0,0,c
  4738   00157C  EFC2  F00A         	goto	u2181
  4739   001580  EFC4  F00A         	goto	u2180
  4740   001584                     u2181:
  4741   001584  EFC8  F00A         	goto	l2542
  4742   001588                     u2180:
  4743   001588  80D8               	bsf	status,0,c
  4744   00158A  363C               	rlcf	___fladd@grs^0,f,c
  4745   00158C  EFCA  F00A         	goto	l2544
  4746   001590                     l2542:
  4747   001590  90D8               	bcf	status,0,c
  4748   001592  363C               	rlcf	___fladd@grs^0,f,c
  4749   001594                     l2544:
  4750   001594  503B               	movf	___fladd@bexp^0,w,c
  4751   001596  B4D8               	btfsc	status,2,c
  4752   001598  EFD0  F00A         	goto	u2191
  4753   00159C  EFD2  F00A         	goto	u2190
  4754   0015A0                     u2191:
  4755   0015A0  EFD3  F00A         	goto	l2548
  4756   0015A4                     u2190:
  4757   0015A4  063B               	decf	___fladd@bexp^0,f,c
  4758   0015A6                     l2548:
  4759   0015A6  AE2F               	btfss	(___fladd@b+2)^0,7,c
  4760   0015A8  EFD8  F00A         	goto	u2201
  4761   0015AC  EFDA  F00A         	goto	u2200
  4762   0015B0                     u2201:
  4763   0015B0  EFB0  F00A         	goto	l2532
  4764   0015B4                     u2200:
  4765   0015B4                     l2550:
  4766   0015B4  0E00               	movlw	0
  4767   0015B6  6E3A               	movwf	___fladd@aexp^0,c
  4768   0015B8  AE3C               	btfss	___fladd@grs^0,7,c
  4769   0015BA  EFE1  F00A         	goto	u2211
  4770   0015BE  EFE3  F00A         	goto	u2210
  4771   0015C2                     u2211:
  4772   0015C2  EFFB  F00A         	goto	l677
  4773   0015C6                     u2210:
  4774   0015C6  C03C  F035         	movff	___fladd@grs,??___fladd
  4775   0015CA  0E7F               	movlw	127
  4776   0015CC  1635               	andwf	??___fladd^0,f,c
  4777   0015CE  B4D8               	btfsc	status,2,c
  4778   0015D0  EFEC  F00A         	goto	u2221
  4779   0015D4  EFEE  F00A         	goto	u2220
  4780   0015D8                     u2221:
  4781   0015D8  EFF2  F00A         	goto	l678
  4782   0015DC                     u2220:
  4783   0015DC                     l2556:
  4784   0015DC  0E01               	movlw	1
  4785   0015DE  6E3A               	movwf	___fladd@aexp^0,c
  4786   0015E0  EFFB  F00A         	goto	l677
  4787   0015E4                     l678:
  4788   0015E4  A02D               	btfss	___fladd@b^0,0,c
  4789   0015E6  EFF7  F00A         	goto	u2231
  4790   0015EA  EFF9  F00A         	goto	u2230
  4791   0015EE                     u2231:
  4792   0015EE  EFFB  F00A         	goto	l677
  4793   0015F2                     u2230:
  4794   0015F2  EFEE  F00A         	goto	l2556
  4795   0015F6                     l677:
  4796   0015F6  503A               	movf	___fladd@aexp^0,w,c
  4797   0015F8  B4D8               	btfsc	status,2,c
  4798   0015FA  EF01  F00B         	goto	u2241
  4799   0015FE  EF03  F00B         	goto	u2240
  4800   001602                     u2241:
  4801   001602  EF2E  F00B         	goto	l2568
  4802   001606                     u2240:
  4803   001606  0E01               	movlw	1
  4804   001608  262D               	addwf	___fladd@b^0,f,c
  4805   00160A  0E00               	movlw	0
  4806   00160C  222E               	addwfc	(___fladd@b+1)^0,f,c
  4807   00160E  222F               	addwfc	(___fladd@b+2)^0,f,c
  4808   001610  2230               	addwfc	(___fladd@b+3)^0,f,c
  4809   001612  A030               	btfss	(___fladd@b+3)^0,0,c
  4810   001614  EF0E  F00B         	goto	u2251
  4811   001618  EF10  F00B         	goto	u2250
  4812   00161C                     u2251:
  4813   00161C  EF2E  F00B         	goto	l2568
  4814   001620                     u2250:
  4815   001620  C02D  F035         	movff	___fladd@b,??___fladd
  4816   001624  C02E  F036         	movff	___fladd@b+1,??___fladd+1
  4817   001628  C02F  F037         	movff	___fladd@b+2,??___fladd+2
  4818   00162C  C030  F038         	movff	___fladd@b+3,??___fladd+3
  4819   001630  3438               	rlcf	(??___fladd+3)^0,w,c
  4820   001632  3238               	rrcf	(??___fladd+3)^0,f,c
  4821   001634  3237               	rrcf	(??___fladd+2)^0,f,c
  4822   001636  3236               	rrcf	(??___fladd+1)^0,f,c
  4823   001638  3235               	rrcf	??___fladd^0,f,c
  4824   00163A  C035  F02D         	movff	??___fladd,___fladd@b
  4825   00163E  C036  F02E         	movff	??___fladd+1,___fladd@b+1
  4826   001642  C037  F02F         	movff	??___fladd+2,___fladd@b+2
  4827   001646  C038  F030         	movff	??___fladd+3,___fladd@b+3
  4828   00164A  283B               	incf	___fladd@bexp^0,w,c
  4829   00164C  B4D8               	btfsc	status,2,c
  4830   00164E  EF2B  F00B         	goto	u2261
  4831   001652  EF2D  F00B         	goto	u2260
  4832   001656                     u2261:
  4833   001656  EF2E  F00B         	goto	l2568
  4834   00165A                     u2260:
  4835   00165A  2A3B               	incf	___fladd@bexp^0,f,c
  4836   00165C                     l2568:
  4837   00165C  283B               	incf	___fladd@bexp^0,w,c
  4838   00165E  B4D8               	btfsc	status,2,c
  4839   001660  EF34  F00B         	goto	u2271
  4840   001664  EF36  F00B         	goto	u2270
  4841   001668                     u2271:
  4842   001668  EF3E  F00B         	goto	l2572
  4843   00166C                     u2270:
  4844   00166C  503B               	movf	___fladd@bexp^0,w,c
  4845   00166E  A4D8               	btfss	status,2,c
  4846   001670  EF3C  F00B         	goto	u2281
  4847   001674  EF3E  F00B         	goto	u2280
  4848   001678                     u2281:
  4849   001678  EF50  F00B         	goto	l2576
  4850   00167C                     u2280:
  4851   00167C                     l2572:
  4852   00167C  0E00               	movlw	0
  4853   00167E  6E2D               	movwf	___fladd@b^0,c
  4854   001680  0E00               	movlw	0
  4855   001682  6E2E               	movwf	(___fladd@b+1)^0,c
  4856   001684  0E00               	movlw	0
  4857   001686  6E2F               	movwf	(___fladd@b+2)^0,c
  4858   001688  0E00               	movlw	0
  4859   00168A  6E30               	movwf	(___fladd@b+3)^0,c
  4860   00168C  503B               	movf	___fladd@bexp^0,w,c
  4861   00168E  A4D8               	btfss	status,2,c
  4862   001690  EF4C  F00B         	goto	u2291
  4863   001694  EF4E  F00B         	goto	u2290
  4864   001698                     u2291:
  4865   001698  EF50  F00B         	goto	l2576
  4866   00169C                     u2290:
  4867   00169C  0E00               	movlw	0
  4868   00169E  6E39               	movwf	___fladd@signs^0,c
  4869   0016A0                     l2576:
  4870   0016A0  A03B               	btfss	___fladd@bexp^0,0,c
  4871   0016A2  EF55  F00B         	goto	u2301
  4872   0016A6  EF57  F00B         	goto	u2300
  4873   0016AA                     u2301:
  4874   0016AA  EF5A  F00B         	goto	l2580
  4875   0016AE                     u2300:
  4876   0016AE  8E2F               	bsf	(___fladd@b+2)^0,7,c
  4877   0016B0  EF5B  F00B         	goto	l2582
  4878   0016B4                     l2580:
  4879   0016B4  9E2F               	bcf	(___fladd@b+2)^0,7,c
  4880   0016B6                     l2582:
  4881   0016B6  90D8               	bcf	status,0,c
  4882   0016B8  303B               	rrcf	___fladd@bexp^0,w,c
  4883   0016BA  6E30               	movwf	(___fladd@b+3)^0,c
  4884   0016BC  AE39               	btfss	___fladd@signs^0,7,c
  4885   0016BE  EF63  F00B         	goto	u2311
  4886   0016C2  EF65  F00B         	goto	u2310
  4887   0016C6                     u2311:
  4888   0016C6  EF66  F00B         	goto	l2588
  4889   0016CA                     u2310:
  4890   0016CA  8E30               	bsf	(___fladd@b+3)^0,7,c
  4891   0016CC                     l2588:
  4892   0016CC  C02D  F02D         	movff	___fladd@b,?___fladd
  4893   0016D0  C02E  F02E         	movff	___fladd@b+1,?___fladd+1
  4894   0016D4  C02F  F02F         	movff	___fladd@b+2,?___fladd+2
  4895   0016D8  C030  F030         	movff	___fladd@b+3,?___fladd+3
  4896   0016DC                     l660:
  4897   0016DC  0012               	return		;funcret
  4898   0016DE                     __end_of___fladd:
  4899                           	callstack 0
  4900                           
  4901 ;; *************** function ___flneg *****************
  4902 ;; Defined at:
  4903 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flneg.c"
  4904 ;; Parameters:    Size  Location     Type
  4905 ;;  f1              4    0[COMRAM] unsigned char 
  4906 ;; Auto vars:     Size  Location     Type
  4907 ;;		None
  4908 ;; Return value:  Size  Location     Type
  4909 ;;                  4    0[COMRAM] unsigned char 
  4910 ;; Registers used:
  4911 ;;		wreg, status,2, status,0
  4912 ;; Tracked objects:
  4913 ;;		On entry : 0/0
  4914 ;;		On exit  : 0/0
  4915 ;;		Unchanged: 0/0
  4916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4917 ;;      Params:         4       0       0       0       0       0       0       0       0
  4918 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4919 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4920 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4921 ;;Total ram usage:        4 bytes
  4922 ;; Hardware stack levels used: 1
  4923 ;; This function calls:
  4924 ;;		Nothing
  4925 ;; This function is called by:
  4926 ;;		_efgtoa
  4927 ;; This function uses a non-reentrant model
  4928 ;;
  4929                           
  4930                           	psect	text17
  4931   0031EA                     __ptext17:
  4932                           	callstack 0
  4933   0031EA                     ___flneg:
  4934                           	callstack 26
  4935   0031EA  5001               	movf	___flneg@f1^0,w,c
  4936   0031EC  1002               	iorwf	(___flneg@f1+1)^0,w,c
  4937   0031EE  1003               	iorwf	(___flneg@f1+2)^0,w,c
  4938   0031F0  1004               	iorwf	(___flneg@f1+3)^0,w,c
  4939   0031F2  B4D8               	btfsc	status,2,c
  4940   0031F4  EFFE  F018         	goto	u2831
  4941   0031F8  EF00  F019         	goto	u2830
  4942   0031FC                     u2831:
  4943   0031FC  EF08  F019         	goto	l2922
  4944   003200                     u2830:
  4945   003200  0E00               	movlw	0
  4946   003202  1A01               	xorwf	___flneg@f1^0,f,c
  4947   003204  0E00               	movlw	0
  4948   003206  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  4949   003208  0E00               	movlw	0
  4950   00320A  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  4951   00320C  0E80               	movlw	128
  4952   00320E  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  4953   003210                     l2922:
  4954   003210  C001  F001         	movff	___flneg@f1,?___flneg
  4955   003214  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  4956   003218  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  4957   00321C  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  4958   003220  0012               	return		;funcret
  4959   003222                     __end_of___flneg:
  4960                           	callstack 0
  4961                           
  4962 ;; *************** function ___flmul *****************
  4963 ;; Defined at:
  4964 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  4965 ;; Parameters:    Size  Location     Type
  4966 ;;  b               4   19[COMRAM] unsigned char 
  4967 ;;  a               4   23[COMRAM] unsigned char 
  4968 ;; Auto vars:     Size  Location     Type
  4969 ;;  prod            4   38[COMRAM] struct .
  4970 ;;  grs             4   32[COMRAM] unsigned long 
  4971 ;;  temp            2   42[COMRAM] struct .
  4972 ;;  bexp            1   37[COMRAM] unsigned char 
  4973 ;;  aexp            1   36[COMRAM] unsigned char 
  4974 ;;  sign            1   31[COMRAM] unsigned char 
  4975 ;; Return value:  Size  Location     Type
  4976 ;;                  4   19[COMRAM] unsigned char 
  4977 ;; Registers used:
  4978 ;;		wreg, status,2, status,0, prodl, prodh
  4979 ;; Tracked objects:
  4980 ;;		On entry : 0/0
  4981 ;;		On exit  : 0/0
  4982 ;;		Unchanged: 0/0
  4983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4984 ;;      Params:         8       0       0       0       0       0       0       0       0
  4985 ;;      Locals:        13       0       0       0       0       0       0       0       0
  4986 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4987 ;;      Totals:        25       0       0       0       0       0       0       0       0
  4988 ;;Total ram usage:       25 bytes
  4989 ;; Hardware stack levels used: 1
  4990 ;; This function calls:
  4991 ;;		Nothing
  4992 ;; This function is called by:
  4993 ;;		_main
  4994 ;;		_efgtoa
  4995 ;; This function uses a non-reentrant model
  4996 ;;
  4997                           
  4998                           	psect	text18
  4999   0016DE                     __ptext18:
  5000                           	callstack 0
  5001   0016DE                     ___flmul:
  5002                           	callstack 26
  5003   0016DE  5017               	movf	(___flmul@b+3)^0,w,c
  5004   0016E0  0B80               	andlw	128
  5005   0016E2  6E20               	movwf	___flmul@sign^0,c
  5006   0016E4  5017               	movf	(___flmul@b+3)^0,w,c
  5007   0016E6  2417               	addwf	(___flmul@b+3)^0,w,c
  5008   0016E8  6E26               	movwf	___flmul@bexp^0,c
  5009   0016EA  AE16               	btfss	(___flmul@b+2)^0,7,c
  5010   0016EC  EF7A  F00B         	goto	u2561
  5011   0016F0  EF7C  F00B         	goto	u2560
  5012   0016F4                     u2561:
  5013   0016F4  EF7D  F00B         	goto	l2750
  5014   0016F8                     u2560:
  5015   0016F8  8026               	bsf	___flmul@bexp^0,0,c
  5016   0016FA                     l2750:
  5017   0016FA  5026               	movf	___flmul@bexp^0,w,c
  5018   0016FC  B4D8               	btfsc	status,2,c
  5019   0016FE  EF83  F00B         	goto	u2571
  5020   001702  EF85  F00B         	goto	u2570
  5021   001706                     u2571:
  5022   001706  EF98  F00B         	goto	l2758
  5023   00170A                     u2570:
  5024   00170A  2826               	incf	___flmul@bexp^0,w,c
  5025   00170C  A4D8               	btfss	status,2,c
  5026   00170E  EF8B  F00B         	goto	u2581
  5027   001712  EF8D  F00B         	goto	u2580
  5028   001716                     u2581:
  5029   001716  EF95  F00B         	goto	l2756
  5030   00171A                     u2580:
  5031   00171A  0E00               	movlw	0
  5032   00171C  6E14               	movwf	___flmul@b^0,c
  5033   00171E  0E00               	movlw	0
  5034   001720  6E15               	movwf	(___flmul@b+1)^0,c
  5035   001722  0E00               	movlw	0
  5036   001724  6E16               	movwf	(___flmul@b+2)^0,c
  5037   001726  0E00               	movlw	0
  5038   001728  6E17               	movwf	(___flmul@b+3)^0,c
  5039   00172A                     l2756:
  5040   00172A  8E16               	bsf	(___flmul@b+2)^0,7,c
  5041   00172C  EFA0  F00B         	goto	l2760
  5042   001730                     l2758:
  5043   001730  0E00               	movlw	0
  5044   001732  6E14               	movwf	___flmul@b^0,c
  5045   001734  0E00               	movlw	0
  5046   001736  6E15               	movwf	(___flmul@b+1)^0,c
  5047   001738  0E00               	movlw	0
  5048   00173A  6E16               	movwf	(___flmul@b+2)^0,c
  5049   00173C  0E00               	movlw	0
  5050   00173E  6E17               	movwf	(___flmul@b+3)^0,c
  5051   001740                     l2760:
  5052   001740  501B               	movf	(___flmul@a+3)^0,w,c
  5053   001742  0B80               	andlw	128
  5054   001744  1A20               	xorwf	___flmul@sign^0,f,c
  5055   001746  501B               	movf	(___flmul@a+3)^0,w,c
  5056   001748  241B               	addwf	(___flmul@a+3)^0,w,c
  5057   00174A  6E25               	movwf	___flmul@aexp^0,c
  5058   00174C  AE1A               	btfss	(___flmul@a+2)^0,7,c
  5059   00174E  EFAB  F00B         	goto	u2591
  5060   001752  EFAD  F00B         	goto	u2590
  5061   001756                     u2591:
  5062   001756  EFAE  F00B         	goto	l2768
  5063   00175A                     u2590:
  5064   00175A  8025               	bsf	___flmul@aexp^0,0,c
  5065   00175C                     l2768:
  5066   00175C  5025               	movf	___flmul@aexp^0,w,c
  5067   00175E  B4D8               	btfsc	status,2,c
  5068   001760  EFB4  F00B         	goto	u2601
  5069   001764  EFB6  F00B         	goto	u2600
  5070   001768                     u2601:
  5071   001768  EFC9  F00B         	goto	l2776
  5072   00176C                     u2600:
  5073   00176C  2825               	incf	___flmul@aexp^0,w,c
  5074   00176E  A4D8               	btfss	status,2,c
  5075   001770  EFBC  F00B         	goto	u2611
  5076   001774  EFBE  F00B         	goto	u2610
  5077   001778                     u2611:
  5078   001778  EFC6  F00B         	goto	l2774
  5079   00177C                     u2610:
  5080   00177C  0E00               	movlw	0
  5081   00177E  6E18               	movwf	___flmul@a^0,c
  5082   001780  0E00               	movlw	0
  5083   001782  6E19               	movwf	(___flmul@a+1)^0,c
  5084   001784  0E00               	movlw	0
  5085   001786  6E1A               	movwf	(___flmul@a+2)^0,c
  5086   001788  0E00               	movlw	0
  5087   00178A  6E1B               	movwf	(___flmul@a+3)^0,c
  5088   00178C                     l2774:
  5089   00178C  8E1A               	bsf	(___flmul@a+2)^0,7,c
  5090   00178E  EFD1  F00B         	goto	l737
  5091   001792                     l2776:
  5092   001792  0E00               	movlw	0
  5093   001794  6E18               	movwf	___flmul@a^0,c
  5094   001796  0E00               	movlw	0
  5095   001798  6E19               	movwf	(___flmul@a+1)^0,c
  5096   00179A  0E00               	movlw	0
  5097   00179C  6E1A               	movwf	(___flmul@a+2)^0,c
  5098   00179E  0E00               	movlw	0
  5099   0017A0  6E1B               	movwf	(___flmul@a+3)^0,c
  5100   0017A2                     l737:
  5101   0017A2  5025               	movf	___flmul@aexp^0,w,c
  5102   0017A4  B4D8               	btfsc	status,2,c
  5103   0017A6  EFD7  F00B         	goto	u2621
  5104   0017AA  EFD9  F00B         	goto	u2620
  5105   0017AE                     u2621:
  5106   0017AE  EFE1  F00B         	goto	l2780
  5107   0017B2                     u2620:
  5108   0017B2  5026               	movf	___flmul@bexp^0,w,c
  5109   0017B4  A4D8               	btfss	status,2,c
  5110   0017B6  EFDF  F00B         	goto	u2631
  5111   0017BA  EFE1  F00B         	goto	u2630
  5112   0017BE                     u2631:
  5113   0017BE  EFEB  F00B         	goto	l2784
  5114   0017C2                     u2630:
  5115   0017C2                     l2780:
  5116   0017C2  0E00               	movlw	0
  5117   0017C4  6E14               	movwf	?___flmul^0,c
  5118   0017C6  0E00               	movlw	0
  5119   0017C8  6E15               	movwf	(?___flmul+1)^0,c
  5120   0017CA  0E00               	movlw	0
  5121   0017CC  6E16               	movwf	(?___flmul+2)^0,c
  5122   0017CE  0E00               	movlw	0
  5123   0017D0  6E17               	movwf	(?___flmul+3)^0,c
  5124   0017D2  EF83  F00D         	goto	l741
  5125   0017D6                     l2784:
  5126   0017D6  501A               	movf	(___flmul@a+2)^0,w,c
  5127   0017D8  0214               	mulwf	___flmul@b^0,c
  5128   0017DA  CFF3 F02B          	movff	prodl,___flmul@temp
  5129   0017DE  CFF4 F02C          	movff	prodh,___flmul@temp+1
  5130   0017E2  502B               	movf	___flmul@temp^0,w,c
  5131   0017E4  6E21               	movwf	___flmul@grs^0,c
  5132   0017E6  6A22               	clrf	(___flmul@grs+1)^0,c
  5133   0017E8  6A23               	clrf	(___flmul@grs+2)^0,c
  5134   0017EA  6A24               	clrf	(___flmul@grs+3)^0,c
  5135   0017EC  502C               	movf	(___flmul@temp+1)^0,w,c
  5136   0017EE  6E27               	movwf	___flmul@prod^0,c
  5137   0017F0  6A28               	clrf	(___flmul@prod+1)^0,c
  5138   0017F2  6A29               	clrf	(___flmul@prod+2)^0,c
  5139   0017F4  6A2A               	clrf	(___flmul@prod+3)^0,c
  5140   0017F6  5019               	movf	(___flmul@a+1)^0,w,c
  5141   0017F8  0215               	mulwf	(___flmul@b+1)^0,c
  5142   0017FA  CFF3 F02B          	movff	prodl,___flmul@temp
  5143   0017FE  CFF4 F02C          	movff	prodh,___flmul@temp+1
  5144   001802  502B               	movf	___flmul@temp^0,w,c
  5145   001804  2621               	addwf	___flmul@grs^0,f,c
  5146   001806  0E00               	movlw	0
  5147   001808  2222               	addwfc	(___flmul@grs+1)^0,f,c
  5148   00180A  2223               	addwfc	(___flmul@grs+2)^0,f,c
  5149   00180C  2224               	addwfc	(___flmul@grs+3)^0,f,c
  5150   00180E  502C               	movf	(___flmul@temp+1)^0,w,c
  5151   001810  2627               	addwf	___flmul@prod^0,f,c
  5152   001812  0E00               	movlw	0
  5153   001814  2228               	addwfc	(___flmul@prod+1)^0,f,c
  5154   001816  2229               	addwfc	(___flmul@prod+2)^0,f,c
  5155   001818  222A               	addwfc	(___flmul@prod+3)^0,f,c
  5156   00181A  5018               	movf	___flmul@a^0,w,c
  5157   00181C  0216               	mulwf	(___flmul@b+2)^0,c
  5158   00181E  CFF3 F02B          	movff	prodl,___flmul@temp
  5159   001822  CFF4 F02C          	movff	prodh,___flmul@temp+1
  5160   001826  502B               	movf	___flmul@temp^0,w,c
  5161   001828  2621               	addwf	___flmul@grs^0,f,c
  5162   00182A  0E00               	movlw	0
  5163   00182C  2222               	addwfc	(___flmul@grs+1)^0,f,c
  5164   00182E  2223               	addwfc	(___flmul@grs+2)^0,f,c
  5165   001830  2224               	addwfc	(___flmul@grs+3)^0,f,c
  5166   001832  502C               	movf	(___flmul@temp+1)^0,w,c
  5167   001834  2627               	addwf	___flmul@prod^0,f,c
  5168   001836  0E00               	movlw	0
  5169   001838  2228               	addwfc	(___flmul@prod+1)^0,f,c
  5170   00183A  2229               	addwfc	(___flmul@prod+2)^0,f,c
  5171   00183C  222A               	addwfc	(___flmul@prod+3)^0,f,c
  5172   00183E  C023  F024         	movff	___flmul@grs+2,___flmul@grs+3
  5173   001842  C022  F023         	movff	___flmul@grs+1,___flmul@grs+2
  5174   001846  C021  F022         	movff	___flmul@grs,___flmul@grs+1
  5175   00184A  6A21               	clrf	___flmul@grs^0,c
  5176   00184C  5018               	movf	___flmul@a^0,w,c
  5177   00184E  0215               	mulwf	(___flmul@b+1)^0,c
  5178   001850  CFF3 F02B          	movff	prodl,___flmul@temp
  5179   001854  CFF4 F02C          	movff	prodh,___flmul@temp+1
  5180   001858  502B               	movf	___flmul@temp^0,w,c
  5181   00185A  2621               	addwf	___flmul@grs^0,f,c
  5182   00185C  502C               	movf	(___flmul@temp+1)^0,w,c
  5183   00185E  2222               	addwfc	(___flmul@grs+1)^0,f,c
  5184   001860  0E00               	movlw	0
  5185   001862  2223               	addwfc	(___flmul@grs+2)^0,f,c
  5186   001864  0E00               	movlw	0
  5187   001866  2224               	addwfc	(___flmul@grs+3)^0,f,c
  5188   001868  5019               	movf	(___flmul@a+1)^0,w,c
  5189   00186A  0214               	mulwf	___flmul@b^0,c
  5190   00186C  CFF3 F02B          	movff	prodl,___flmul@temp
  5191   001870  CFF4 F02C          	movff	prodh,___flmul@temp+1
  5192   001874  502B               	movf	___flmul@temp^0,w,c
  5193   001876  2621               	addwf	___flmul@grs^0,f,c
  5194   001878  502C               	movf	(___flmul@temp+1)^0,w,c
  5195   00187A  2222               	addwfc	(___flmul@grs+1)^0,f,c
  5196   00187C  0E00               	movlw	0
  5197   00187E  2223               	addwfc	(___flmul@grs+2)^0,f,c
  5198   001880  0E00               	movlw	0
  5199   001882  2224               	addwfc	(___flmul@grs+3)^0,f,c
  5200   001884  C023  F024         	movff	___flmul@grs+2,___flmul@grs+3
  5201   001888  C022  F023         	movff	___flmul@grs+1,___flmul@grs+2
  5202   00188C  C021  F022         	movff	___flmul@grs,___flmul@grs+1
  5203   001890  6A21               	clrf	___flmul@grs^0,c
  5204   001892  5018               	movf	___flmul@a^0,w,c
  5205   001894  0214               	mulwf	___flmul@b^0,c
  5206   001896  CFF3 F02B          	movff	prodl,___flmul@temp
  5207   00189A  CFF4 F02C          	movff	prodh,___flmul@temp+1
  5208   00189E  502B               	movf	___flmul@temp^0,w,c
  5209   0018A0  2621               	addwf	___flmul@grs^0,f,c
  5210   0018A2  502C               	movf	(___flmul@temp+1)^0,w,c
  5211   0018A4  2222               	addwfc	(___flmul@grs+1)^0,f,c
  5212   0018A6  0E00               	movlw	0
  5213   0018A8  2223               	addwfc	(___flmul@grs+2)^0,f,c
  5214   0018AA  0E00               	movlw	0
  5215   0018AC  2224               	addwfc	(___flmul@grs+3)^0,f,c
  5216   0018AE  501A               	movf	(___flmul@a+2)^0,w,c
  5217   0018B0  0215               	mulwf	(___flmul@b+1)^0,c
  5218   0018B2  CFF3 F02B          	movff	prodl,___flmul@temp
  5219   0018B6  CFF4 F02C          	movff	prodh,___flmul@temp+1
  5220   0018BA  502B               	movf	___flmul@temp^0,w,c
  5221   0018BC  2627               	addwf	___flmul@prod^0,f,c
  5222   0018BE  502C               	movf	(___flmul@temp+1)^0,w,c
  5223   0018C0  2228               	addwfc	(___flmul@prod+1)^0,f,c
  5224   0018C2  0E00               	movlw	0
  5225   0018C4  2229               	addwfc	(___flmul@prod+2)^0,f,c
  5226   0018C6  0E00               	movlw	0
  5227   0018C8  222A               	addwfc	(___flmul@prod+3)^0,f,c
  5228   0018CA  5019               	movf	(___flmul@a+1)^0,w,c
  5229   0018CC  0216               	mulwf	(___flmul@b+2)^0,c
  5230   0018CE  CFF3 F02B          	movff	prodl,___flmul@temp
  5231   0018D2  CFF4 F02C          	movff	prodh,___flmul@temp+1
  5232   0018D6  502B               	movf	___flmul@temp^0,w,c
  5233   0018D8  2627               	addwf	___flmul@prod^0,f,c
  5234   0018DA  502C               	movf	(___flmul@temp+1)^0,w,c
  5235   0018DC  2228               	addwfc	(___flmul@prod+1)^0,f,c
  5236   0018DE  0E00               	movlw	0
  5237   0018E0  2229               	addwfc	(___flmul@prod+2)^0,f,c
  5238   0018E2  0E00               	movlw	0
  5239   0018E4  222A               	addwfc	(___flmul@prod+3)^0,f,c
  5240   0018E6  501A               	movf	(___flmul@a+2)^0,w,c
  5241   0018E8  0216               	mulwf	(___flmul@b+2)^0,c
  5242   0018EA  CFF3 F02B          	movff	prodl,___flmul@temp
  5243   0018EE  CFF4 F02C          	movff	prodh,___flmul@temp+1
  5244   0018F2  502B               	movf	___flmul@temp^0,w,c
  5245   0018F4  6E1C               	movwf	??___flmul^0,c
  5246   0018F6  502C               	movf	(___flmul@temp+1)^0,w,c
  5247   0018F8  6E1D               	movwf	(??___flmul+1)^0,c
  5248   0018FA  6A1E               	clrf	(??___flmul+2)^0,c
  5249   0018FC  6A1F               	clrf	(??___flmul+3)^0,c
  5250   0018FE  C01E  F01F         	movff	??___flmul+2,??___flmul+3
  5251   001902  C01D  F01E         	movff	??___flmul+1,??___flmul+2
  5252   001906  C01C  F01D         	movff	??___flmul,??___flmul+1
  5253   00190A  6A1C               	clrf	??___flmul^0,c
  5254   00190C  501C               	movf	??___flmul^0,w,c
  5255   00190E  2627               	addwf	___flmul@prod^0,f,c
  5256   001910  501D               	movf	(??___flmul+1)^0,w,c
  5257   001912  2228               	addwfc	(___flmul@prod+1)^0,f,c
  5258   001914  501E               	movf	(??___flmul+2)^0,w,c
  5259   001916  2229               	addwfc	(___flmul@prod+2)^0,f,c
  5260   001918  501F               	movf	(??___flmul+3)^0,w,c
  5261   00191A  222A               	addwfc	(___flmul@prod+3)^0,f,c
  5262   00191C  C021  F01C         	movff	___flmul@grs,??___flmul
  5263   001920  C022  F01D         	movff	___flmul@grs+1,??___flmul+1
  5264   001924  C023  F01E         	movff	___flmul@grs+2,??___flmul+2
  5265   001928  C024  F01F         	movff	___flmul@grs+3,??___flmul+3
  5266   00192C  0E19               	movlw	25
  5267   00192E  EF9E  F00C         	goto	u2640
  5268   001932                     u2645:
  5269   001932  90D8               	bcf	status,0,c
  5270   001934  321F               	rrcf	(??___flmul+3)^0,f,c
  5271   001936  321E               	rrcf	(??___flmul+2)^0,f,c
  5272   001938  321D               	rrcf	(??___flmul+1)^0,f,c
  5273   00193A  321C               	rrcf	??___flmul^0,f,c
  5274   00193C                     u2640:
  5275   00193C  2EE8               	decfsz	wreg,f,c
  5276   00193E  EF99  F00C         	goto	u2645
  5277   001942  501C               	movf	??___flmul^0,w,c
  5278   001944  2627               	addwf	___flmul@prod^0,f,c
  5279   001946  501D               	movf	(??___flmul+1)^0,w,c
  5280   001948  2228               	addwfc	(___flmul@prod+1)^0,f,c
  5281   00194A  501E               	movf	(??___flmul+2)^0,w,c
  5282   00194C  2229               	addwfc	(___flmul@prod+2)^0,f,c
  5283   00194E  501F               	movf	(??___flmul+3)^0,w,c
  5284   001950  222A               	addwfc	(___flmul@prod+3)^0,f,c
  5285   001952  C023  F024         	movff	___flmul@grs+2,___flmul@grs+3
  5286   001956  C022  F023         	movff	___flmul@grs+1,___flmul@grs+2
  5287   00195A  C021  F022         	movff	___flmul@grs,___flmul@grs+1
  5288   00195E  6A21               	clrf	___flmul@grs^0,c
  5289   001960  5025               	movf	___flmul@aexp^0,w,c
  5290   001962  C026  F01C         	movff	___flmul@bexp,??___flmul
  5291   001966  6A1D               	clrf	(??___flmul+1)^0,c
  5292   001968  261C               	addwf	??___flmul^0,f,c
  5293   00196A  0E00               	movlw	0
  5294   00196C  221D               	addwfc	(??___flmul+1)^0,f,c
  5295   00196E  0E82               	movlw	130
  5296   001970  241C               	addwf	??___flmul^0,w,c
  5297   001972  6E2B               	movwf	___flmul@temp^0,c
  5298   001974  0EFF               	movlw	255
  5299   001976  201D               	addwfc	(??___flmul+1)^0,w,c
  5300   001978  6E2C               	movwf	(___flmul@temp+1)^0,c
  5301   00197A  EFD4  F00C         	goto	l2832
  5302   00197E                     l2826:
  5303   00197E  90D8               	bcf	status,0,c
  5304   001980  3627               	rlcf	___flmul@prod^0,f,c
  5305   001982  3628               	rlcf	(___flmul@prod+1)^0,f,c
  5306   001984  3629               	rlcf	(___flmul@prod+2)^0,f,c
  5307   001986  362A               	rlcf	(___flmul@prod+3)^0,f,c
  5308   001988  AE24               	btfss	(___flmul@grs+3)^0,7,c
  5309   00198A  EFC9  F00C         	goto	u2651
  5310   00198E  EFCB  F00C         	goto	u2650
  5311   001992                     u2651:
  5312   001992  EFCC  F00C         	goto	l744
  5313   001996                     u2650:
  5314   001996  8027               	bsf	___flmul@prod^0,0,c
  5315   001998                     l744:
  5316   001998  90D8               	bcf	status,0,c
  5317   00199A  3621               	rlcf	___flmul@grs^0,f,c
  5318   00199C  3622               	rlcf	(___flmul@grs+1)^0,f,c
  5319   00199E  3623               	rlcf	(___flmul@grs+2)^0,f,c
  5320   0019A0  3624               	rlcf	(___flmul@grs+3)^0,f,c
  5321   0019A2  062B               	decf	___flmul@temp^0,f,c
  5322   0019A4  A0D8               	btfss	status,0,c
  5323   0019A6  062C               	decf	(___flmul@temp+1)^0,f,c
  5324   0019A8                     l2832:
  5325   0019A8  AE29               	btfss	(___flmul@prod+2)^0,7,c
  5326   0019AA  EFD9  F00C         	goto	u2661
  5327   0019AE  EFDB  F00C         	goto	u2660
  5328   0019B2                     u2661:
  5329   0019B2  EFBF  F00C         	goto	l2826
  5330   0019B6                     u2660:
  5331   0019B6  0E00               	movlw	0
  5332   0019B8  6E25               	movwf	___flmul@aexp^0,c
  5333   0019BA  AE24               	btfss	(___flmul@grs+3)^0,7,c
  5334   0019BC  EFE2  F00C         	goto	u2671
  5335   0019C0  EFE4  F00C         	goto	u2670
  5336   0019C4                     u2671:
  5337   0019C4  EF08  F00D         	goto	l746
  5338   0019C8                     u2670:
  5339   0019C8  0EFF               	movlw	255
  5340   0019CA  1421               	andwf	___flmul@grs^0,w,c
  5341   0019CC  6E1C               	movwf	??___flmul^0,c
  5342   0019CE  0EFF               	movlw	255
  5343   0019D0  1422               	andwf	(___flmul@grs+1)^0,w,c
  5344   0019D2  6E1D               	movwf	(??___flmul+1)^0,c
  5345   0019D4  0EFF               	movlw	255
  5346   0019D6  1423               	andwf	(___flmul@grs+2)^0,w,c
  5347   0019D8  6E1E               	movwf	(??___flmul+2)^0,c
  5348   0019DA  0E7F               	movlw	127
  5349   0019DC  1424               	andwf	(___flmul@grs+3)^0,w,c
  5350   0019DE  6E1F               	movwf	(??___flmul+3)^0,c
  5351   0019E0  501C               	movf	??___flmul^0,w,c
  5352   0019E2  101D               	iorwf	(??___flmul+1)^0,w,c
  5353   0019E4  101E               	iorwf	(??___flmul+2)^0,w,c
  5354   0019E6  101F               	iorwf	(??___flmul+3)^0,w,c
  5355   0019E8  B4D8               	btfsc	status,2,c
  5356   0019EA  EFF9  F00C         	goto	u2681
  5357   0019EE  EFFB  F00C         	goto	u2680
  5358   0019F2                     u2681:
  5359   0019F2  EFFF  F00C         	goto	l747
  5360   0019F6                     u2680:
  5361   0019F6                     l2840:
  5362   0019F6  0E01               	movlw	1
  5363   0019F8  6E25               	movwf	___flmul@aexp^0,c
  5364   0019FA  EF08  F00D         	goto	l746
  5365   0019FE                     l747:
  5366   0019FE  A027               	btfss	___flmul@prod^0,0,c
  5367   001A00  EF04  F00D         	goto	u2691
  5368   001A04  EF06  F00D         	goto	u2690
  5369   001A08                     u2691:
  5370   001A08  EF08  F00D         	goto	l746
  5371   001A0C                     u2690:
  5372   001A0C  EFFB  F00C         	goto	l2840
  5373   001A10                     l746:
  5374   001A10  5025               	movf	___flmul@aexp^0,w,c
  5375   001A12  B4D8               	btfsc	status,2,c
  5376   001A14  EF0E  F00D         	goto	u2701
  5377   001A18  EF10  F00D         	goto	u2700
  5378   001A1C                     u2701:
  5379   001A1C  EF34  F00D         	goto	l2852
  5380   001A20                     u2700:
  5381   001A20  0E01               	movlw	1
  5382   001A22  2627               	addwf	___flmul@prod^0,f,c
  5383   001A24  0E00               	movlw	0
  5384   001A26  2228               	addwfc	(___flmul@prod+1)^0,f,c
  5385   001A28  2229               	addwfc	(___flmul@prod+2)^0,f,c
  5386   001A2A  222A               	addwfc	(___flmul@prod+3)^0,f,c
  5387   001A2C  A02A               	btfss	(___flmul@prod+3)^0,0,c
  5388   001A2E  EF1B  F00D         	goto	u2711
  5389   001A32  EF1D  F00D         	goto	u2710
  5390   001A36                     u2711:
  5391   001A36  EF34  F00D         	goto	l2852
  5392   001A3A                     u2710:
  5393   001A3A  C027  F01C         	movff	___flmul@prod,??___flmul
  5394   001A3E  C028  F01D         	movff	___flmul@prod+1,??___flmul+1
  5395   001A42  C029  F01E         	movff	___flmul@prod+2,??___flmul+2
  5396   001A46  C02A  F01F         	movff	___flmul@prod+3,??___flmul+3
  5397   001A4A  341F               	rlcf	(??___flmul+3)^0,w,c
  5398   001A4C  321F               	rrcf	(??___flmul+3)^0,f,c
  5399   001A4E  321E               	rrcf	(??___flmul+2)^0,f,c
  5400   001A50  321D               	rrcf	(??___flmul+1)^0,f,c
  5401   001A52  321C               	rrcf	??___flmul^0,f,c
  5402   001A54  C01C  F027         	movff	??___flmul,___flmul@prod
  5403   001A58  C01D  F028         	movff	??___flmul+1,___flmul@prod+1
  5404   001A5C  C01E  F029         	movff	??___flmul+2,___flmul@prod+2
  5405   001A60  C01F  F02A         	movff	??___flmul+3,___flmul@prod+3
  5406   001A64  4A2B               	infsnz	___flmul@temp^0,f,c
  5407   001A66  2A2C               	incf	(___flmul@temp+1)^0,f,c
  5408   001A68                     l2852:
  5409   001A68  BE2C               	btfsc	(___flmul@temp+1)^0,7,c
  5410   001A6A  EF3F  F00D         	goto	u2721
  5411   001A6E  502C               	movf	(___flmul@temp+1)^0,w,c
  5412   001A70  E108               	bnz	u2720
  5413   001A72  282B               	incf	___flmul@temp^0,w,c
  5414   001A74  A0D8               	btfss	status,0,c
  5415   001A76  EF3F  F00D         	goto	u2721
  5416   001A7A  EF41  F00D         	goto	u2720
  5417   001A7E                     u2721:
  5418   001A7E  EF4B  F00D         	goto	l2856
  5419   001A82                     u2720:
  5420   001A82  0E00               	movlw	0
  5421   001A84  6E27               	movwf	___flmul@prod^0,c
  5422   001A86  0E00               	movlw	0
  5423   001A88  6E28               	movwf	(___flmul@prod+1)^0,c
  5424   001A8A  0E80               	movlw	128
  5425   001A8C  6E29               	movwf	(___flmul@prod+2)^0,c
  5426   001A8E  0E7F               	movlw	127
  5427   001A90  6E2A               	movwf	(___flmul@prod+3)^0,c
  5428   001A92  EF79  F00D         	goto	l2868
  5429   001A96                     l2856:
  5430   001A96  BE2C               	btfsc	(___flmul@temp+1)^0,7,c
  5431   001A98  EF58  F00D         	goto	u2730
  5432   001A9C  502C               	movf	(___flmul@temp+1)^0,w,c
  5433   001A9E  E106               	bnz	u2731
  5434   001AA0  042B               	decf	___flmul@temp^0,w,c
  5435   001AA2  B0D8               	btfsc	status,0,c
  5436   001AA4  EF56  F00D         	goto	u2731
  5437   001AA8  EF58  F00D         	goto	u2730
  5438   001AAC                     u2731:
  5439   001AAC  EF64  F00D         	goto	l754
  5440   001AB0                     u2730:
  5441   001AB0  0E00               	movlw	0
  5442   001AB2  6E27               	movwf	___flmul@prod^0,c
  5443   001AB4  0E00               	movlw	0
  5444   001AB6  6E28               	movwf	(___flmul@prod+1)^0,c
  5445   001AB8  0E00               	movlw	0
  5446   001ABA  6E29               	movwf	(___flmul@prod+2)^0,c
  5447   001ABC  0E00               	movlw	0
  5448   001ABE  6E2A               	movwf	(___flmul@prod+3)^0,c
  5449   001AC0  0E00               	movlw	0
  5450   001AC2  6E20               	movwf	___flmul@sign^0,c
  5451   001AC4  EF79  F00D         	goto	l2868
  5452   001AC8                     l754:
  5453   001AC8  C02B  F026         	movff	___flmul@temp,___flmul@bexp
  5454   001ACC  0EFF               	movlw	255
  5455   001ACE  1627               	andwf	___flmul@prod^0,f,c
  5456   001AD0  0EFF               	movlw	255
  5457   001AD2  1628               	andwf	(___flmul@prod+1)^0,f,c
  5458   001AD4  0E7F               	movlw	127
  5459   001AD6  1629               	andwf	(___flmul@prod+2)^0,f,c
  5460   001AD8  0E00               	movlw	0
  5461   001ADA  162A               	andwf	(___flmul@prod+3)^0,f,c
  5462   001ADC  A026               	btfss	___flmul@bexp^0,0,c
  5463   001ADE  EF73  F00D         	goto	u2741
  5464   001AE2  EF75  F00D         	goto	u2740
  5465   001AE6                     u2741:
  5466   001AE6  EF76  F00D         	goto	l2866
  5467   001AEA                     u2740:
  5468   001AEA  8E29               	bsf	(___flmul@prod+2)^0,7,c
  5469   001AEC                     l2866:
  5470   001AEC  90D8               	bcf	status,0,c
  5471   001AEE  3026               	rrcf	___flmul@bexp^0,w,c
  5472   001AF0  6E2A               	movwf	(___flmul@prod+3)^0,c
  5473   001AF2                     l2868:
  5474   001AF2  5020               	movf	___flmul@sign^0,w,c
  5475   001AF4  122A               	iorwf	(___flmul@prod+3)^0,f,c
  5476   001AF6  C027  F014         	movff	___flmul@prod,?___flmul
  5477   001AFA  C028  F015         	movff	___flmul@prod+1,?___flmul+1
  5478   001AFE  C029  F016         	movff	___flmul@prod+2,?___flmul+2
  5479   001B02  C02A  F017         	movff	___flmul@prod+3,?___flmul+3
  5480   001B06                     l741:
  5481   001B06  0012               	return		;funcret
  5482   001B08                     __end_of___flmul:
  5483                           	callstack 0
  5484                           
  5485 ;; *************** function ___flge *****************
  5486 ;; Defined at:
  5487 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  5488 ;; Parameters:    Size  Location     Type
  5489 ;;  ff1             4   44[COMRAM] unsigned char 
  5490 ;;  ff2             4   48[COMRAM] unsigned char 
  5491 ;; Auto vars:     Size  Location     Type
  5492 ;;		None
  5493 ;; Return value:  Size  Location     Type
  5494 ;;		None               void
  5495 ;; Registers used:
  5496 ;;		wreg, status,2, status,0
  5497 ;; Tracked objects:
  5498 ;;		On entry : 0/0
  5499 ;;		On exit  : 0/0
  5500 ;;		Unchanged: 0/0
  5501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5502 ;;      Params:         8       0       0       0       0       0       0       0       0
  5503 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5504 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5505 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5506 ;;Total ram usage:       12 bytes
  5507 ;; Hardware stack levels used: 1
  5508 ;; This function calls:
  5509 ;;		Nothing
  5510 ;; This function is called by:
  5511 ;;		_efgtoa
  5512 ;; This function uses a non-reentrant model
  5513 ;;
  5514                           
  5515                           	psect	text19
  5516   002A1E                     __ptext19:
  5517                           	callstack 0
  5518   002A1E                     ___flge:
  5519                           	callstack 26
  5520   002A1E  0E00               	movlw	0
  5521   002A20  142D               	andwf	___flge@ff1^0,w,c
  5522   002A22  6E35               	movwf	??___flge^0,c
  5523   002A24  0E00               	movlw	0
  5524   002A26  142E               	andwf	(___flge@ff1+1)^0,w,c
  5525   002A28  6E36               	movwf	(??___flge+1)^0,c
  5526   002A2A  0E80               	movlw	128
  5527   002A2C  142F               	andwf	(___flge@ff1+2)^0,w,c
  5528   002A2E  6E37               	movwf	(??___flge+2)^0,c
  5529   002A30  0E7F               	movlw	127
  5530   002A32  1430               	andwf	(___flge@ff1+3)^0,w,c
  5531   002A34  6E38               	movwf	(??___flge+3)^0,c
  5532   002A36  5035               	movf	??___flge^0,w,c
  5533   002A38  1036               	iorwf	(??___flge+1)^0,w,c
  5534   002A3A  1037               	iorwf	(??___flge+2)^0,w,c
  5535   002A3C  1038               	iorwf	(??___flge+3)^0,w,c
  5536   002A3E  A4D8               	btfss	status,2,c
  5537   002A40  EF24  F015         	goto	u2781
  5538   002A44  EF26  F015         	goto	u2780
  5539   002A48                     u2781:
  5540   002A48  EF2E  F015         	goto	l2900
  5541   002A4C                     u2780:
  5542   002A4C  0E00               	movlw	0
  5543   002A4E  6E2D               	movwf	___flge@ff1^0,c
  5544   002A50  0E00               	movlw	0
  5545   002A52  6E2E               	movwf	(___flge@ff1+1)^0,c
  5546   002A54  0E00               	movlw	0
  5547   002A56  6E2F               	movwf	(___flge@ff1+2)^0,c
  5548   002A58  0E00               	movlw	0
  5549   002A5A  6E30               	movwf	(___flge@ff1+3)^0,c
  5550   002A5C                     l2900:
  5551   002A5C  0E00               	movlw	0
  5552   002A5E  1431               	andwf	___flge@ff2^0,w,c
  5553   002A60  6E35               	movwf	??___flge^0,c
  5554   002A62  0E00               	movlw	0
  5555   002A64  1432               	andwf	(___flge@ff2+1)^0,w,c
  5556   002A66  6E36               	movwf	(??___flge+1)^0,c
  5557   002A68  0E80               	movlw	128
  5558   002A6A  1433               	andwf	(___flge@ff2+2)^0,w,c
  5559   002A6C  6E37               	movwf	(??___flge+2)^0,c
  5560   002A6E  0E7F               	movlw	127
  5561   002A70  1434               	andwf	(___flge@ff2+3)^0,w,c
  5562   002A72  6E38               	movwf	(??___flge+3)^0,c
  5563   002A74  5035               	movf	??___flge^0,w,c
  5564   002A76  1036               	iorwf	(??___flge+1)^0,w,c
  5565   002A78  1037               	iorwf	(??___flge+2)^0,w,c
  5566   002A7A  1038               	iorwf	(??___flge+3)^0,w,c
  5567   002A7C  A4D8               	btfss	status,2,c
  5568   002A7E  EF43  F015         	goto	u2791
  5569   002A82  EF45  F015         	goto	u2790
  5570   002A86                     u2791:
  5571   002A86  EF4D  F015         	goto	l2904
  5572   002A8A                     u2790:
  5573   002A8A  0E00               	movlw	0
  5574   002A8C  6E31               	movwf	___flge@ff2^0,c
  5575   002A8E  0E00               	movlw	0
  5576   002A90  6E32               	movwf	(___flge@ff2+1)^0,c
  5577   002A92  0E00               	movlw	0
  5578   002A94  6E33               	movwf	(___flge@ff2+2)^0,c
  5579   002A96  0E00               	movlw	0
  5580   002A98  6E34               	movwf	(___flge@ff2+3)^0,c
  5581   002A9A                     l2904:
  5582   002A9A  AE30               	btfss	(___flge@ff1+3)^0,7,c
  5583   002A9C  EF52  F015         	goto	u2801
  5584   002AA0  EF54  F015         	goto	u2800
  5585   002AA4                     u2801:
  5586   002AA4  EF5D  F015         	goto	l2908
  5587   002AA8                     u2800:
  5588   002AA8  6C2D               	negf	___flge@ff1^0,c
  5589   002AAA  1E2E               	comf	(___flge@ff1+1)^0,f,c
  5590   002AAC  B0D8               	btfsc	status,0,c
  5591   002AAE  2A2E               	incf	(___flge@ff1+1)^0,f,c
  5592   002AB0  1E2F               	comf	(___flge@ff1+2)^0,f,c
  5593   002AB2  B0D8               	btfsc	status,0,c
  5594   002AB4  2A2F               	incf	(___flge@ff1+2)^0,f,c
  5595   002AB6  0E80               	movlw	128
  5596   002AB8  5630               	subfwb	(___flge@ff1+3)^0,f,c
  5597   002ABA                     l2908:
  5598   002ABA  AE34               	btfss	(___flge@ff2+3)^0,7,c
  5599   002ABC  EF62  F015         	goto	u2811
  5600   002AC0  EF64  F015         	goto	u2810
  5601   002AC4                     u2811:
  5602   002AC4  EF6D  F015         	goto	l388
  5603   002AC8                     u2810:
  5604   002AC8  6C31               	negf	___flge@ff2^0,c
  5605   002ACA  1E32               	comf	(___flge@ff2+1)^0,f,c
  5606   002ACC  B0D8               	btfsc	status,0,c
  5607   002ACE  2A32               	incf	(___flge@ff2+1)^0,f,c
  5608   002AD0  1E33               	comf	(___flge@ff2+2)^0,f,c
  5609   002AD2  B0D8               	btfsc	status,0,c
  5610   002AD4  2A33               	incf	(___flge@ff2+2)^0,f,c
  5611   002AD6  0E80               	movlw	128
  5612   002AD8  5634               	subfwb	(___flge@ff2+3)^0,f,c
  5613   002ADA                     l388:
  5614   002ADA  0E00               	movlw	0
  5615   002ADC  1A2D               	xorwf	___flge@ff1^0,f,c
  5616   002ADE  0E00               	movlw	0
  5617   002AE0  1A2E               	xorwf	(___flge@ff1+1)^0,f,c
  5618   002AE2  0E00               	movlw	0
  5619   002AE4  1A2F               	xorwf	(___flge@ff1+2)^0,f,c
  5620   002AE6  0E80               	movlw	128
  5621   002AE8  1A30               	xorwf	(___flge@ff1+3)^0,f,c
  5622   002AEA  0E00               	movlw	0
  5623   002AEC  1A31               	xorwf	___flge@ff2^0,f,c
  5624   002AEE  0E00               	movlw	0
  5625   002AF0  1A32               	xorwf	(___flge@ff2+1)^0,f,c
  5626   002AF2  0E00               	movlw	0
  5627   002AF4  1A33               	xorwf	(___flge@ff2+2)^0,f,c
  5628   002AF6  0E80               	movlw	128
  5629   002AF8  1A34               	xorwf	(___flge@ff2+3)^0,f,c
  5630   002AFA  5031               	movf	___flge@ff2^0,w,c
  5631   002AFC  5C2D               	subwf	___flge@ff1^0,w,c
  5632   002AFE  5032               	movf	(___flge@ff2+1)^0,w,c
  5633   002B00  582E               	subwfb	(___flge@ff1+1)^0,w,c
  5634   002B02  5033               	movf	(___flge@ff2+2)^0,w,c
  5635   002B04  582F               	subwfb	(___flge@ff1+2)^0,w,c
  5636   002B06  5034               	movf	(___flge@ff2+3)^0,w,c
  5637   002B08  5830               	subwfb	(___flge@ff1+3)^0,w,c
  5638   002B0A  B0D8               	btfsc	status,0,c
  5639   002B0C  EF8A  F015         	goto	u2821
  5640   002B10  EF8C  F015         	goto	u2820
  5641   002B14                     u2821:
  5642   002B14  EF8F  F015         	goto	l2914
  5643   002B18                     u2820:
  5644   002B18  90D8               	bcf	status,0,c
  5645   002B1A  EF90  F015         	goto	l393
  5646   002B1E                     l2914:
  5647   002B1E  80D8               	bsf	status,0,c
  5648   002B20                     l393:
  5649   002B20  0012               	return		;funcret
  5650   002B22                     __end_of___flge:
  5651                           	callstack 0
  5652                           
  5653 ;; *************** function ___fleq *****************
  5654 ;; Defined at:
  5655 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
  5656 ;; Parameters:    Size  Location     Type
  5657 ;;  ff1             4    0[COMRAM] unsigned char 
  5658 ;;  ff2             4    4[COMRAM] unsigned char 
  5659 ;; Auto vars:     Size  Location     Type
  5660 ;;		None
  5661 ;; Return value:  Size  Location     Type
  5662 ;;		None               void
  5663 ;; Registers used:
  5664 ;;		wreg, status,2, status,0
  5665 ;; Tracked objects:
  5666 ;;		On entry : 0/0
  5667 ;;		On exit  : 0/0
  5668 ;;		Unchanged: 0/0
  5669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5670 ;;      Params:         8       0       0       0       0       0       0       0       0
  5671 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5672 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5673 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5674 ;;Total ram usage:       12 bytes
  5675 ;; Hardware stack levels used: 1
  5676 ;; This function calls:
  5677 ;;		Nothing
  5678 ;; This function is called by:
  5679 ;;		_efgtoa
  5680 ;; This function uses a non-reentrant model
  5681 ;;
  5682                           
  5683                           	psect	text20
  5684   002CEA                     __ptext20:
  5685                           	callstack 0
  5686   002CEA                     ___fleq:
  5687                           	callstack 26
  5688   002CEA  0E00               	movlw	0
  5689   002CEC  1401               	andwf	___fleq@ff1^0,w,c
  5690   002CEE  6E09               	movwf	??___fleq^0,c
  5691   002CF0  0E00               	movlw	0
  5692   002CF2  1402               	andwf	(___fleq@ff1+1)^0,w,c
  5693   002CF4  6E0A               	movwf	(??___fleq+1)^0,c
  5694   002CF6  0E80               	movlw	128
  5695   002CF8  1403               	andwf	(___fleq@ff1+2)^0,w,c
  5696   002CFA  6E0B               	movwf	(??___fleq+2)^0,c
  5697   002CFC  0E7F               	movlw	127
  5698   002CFE  1404               	andwf	(___fleq@ff1+3)^0,w,c
  5699   002D00  6E0C               	movwf	(??___fleq+3)^0,c
  5700   002D02  5009               	movf	??___fleq^0,w,c
  5701   002D04  100A               	iorwf	(??___fleq+1)^0,w,c
  5702   002D06  100B               	iorwf	(??___fleq+2)^0,w,c
  5703   002D08  100C               	iorwf	(??___fleq+3)^0,w,c
  5704   002D0A  A4D8               	btfss	status,2,c
  5705   002D0C  EF8A  F016         	goto	u2751
  5706   002D10  EF8C  F016         	goto	u2750
  5707   002D14                     u2751:
  5708   002D14  EF94  F016         	goto	l2884
  5709   002D18                     u2750:
  5710   002D18  0E00               	movlw	0
  5711   002D1A  6E01               	movwf	___fleq@ff1^0,c
  5712   002D1C  0E00               	movlw	0
  5713   002D1E  6E02               	movwf	(___fleq@ff1+1)^0,c
  5714   002D20  0E00               	movlw	0
  5715   002D22  6E03               	movwf	(___fleq@ff1+2)^0,c
  5716   002D24  0E00               	movlw	0
  5717   002D26  6E04               	movwf	(___fleq@ff1+3)^0,c
  5718   002D28                     l2884:
  5719   002D28  0E00               	movlw	0
  5720   002D2A  1405               	andwf	___fleq@ff2^0,w,c
  5721   002D2C  6E09               	movwf	??___fleq^0,c
  5722   002D2E  0E00               	movlw	0
  5723   002D30  1406               	andwf	(___fleq@ff2+1)^0,w,c
  5724   002D32  6E0A               	movwf	(??___fleq+1)^0,c
  5725   002D34  0E80               	movlw	128
  5726   002D36  1407               	andwf	(___fleq@ff2+2)^0,w,c
  5727   002D38  6E0B               	movwf	(??___fleq+2)^0,c
  5728   002D3A  0E7F               	movlw	127
  5729   002D3C  1408               	andwf	(___fleq@ff2+3)^0,w,c
  5730   002D3E  6E0C               	movwf	(??___fleq+3)^0,c
  5731   002D40  5009               	movf	??___fleq^0,w,c
  5732   002D42  100A               	iorwf	(??___fleq+1)^0,w,c
  5733   002D44  100B               	iorwf	(??___fleq+2)^0,w,c
  5734   002D46  100C               	iorwf	(??___fleq+3)^0,w,c
  5735   002D48  A4D8               	btfss	status,2,c
  5736   002D4A  EFA9  F016         	goto	u2761
  5737   002D4E  EFAB  F016         	goto	u2760
  5738   002D52                     u2761:
  5739   002D52  EFB3  F016         	goto	l2888
  5740   002D56                     u2760:
  5741   002D56  0E00               	movlw	0
  5742   002D58  6E05               	movwf	___fleq@ff2^0,c
  5743   002D5A  0E00               	movlw	0
  5744   002D5C  6E06               	movwf	(___fleq@ff2+1)^0,c
  5745   002D5E  0E00               	movlw	0
  5746   002D60  6E07               	movwf	(___fleq@ff2+2)^0,c
  5747   002D62  0E00               	movlw	0
  5748   002D64  6E08               	movwf	(___fleq@ff2+3)^0,c
  5749   002D66                     l2888:
  5750   002D66  5005               	movf	___fleq@ff2^0,w,c
  5751   002D68  1801               	xorwf	___fleq@ff1^0,w,c
  5752   002D6A  E10F               	bnz	u2770
  5753   002D6C  5006               	movf	(___fleq@ff2+1)^0,w,c
  5754   002D6E  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  5755   002D70  E10C               	bnz	u2770
  5756   002D72  5007               	movf	(___fleq@ff2+2)^0,w,c
  5757   002D74  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  5758   002D76  E109               	bnz	u2770
  5759   002D78  5008               	movf	(___fleq@ff2+3)^0,w,c
  5760   002D7A  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  5761   002D7C  B4D8               	btfsc	status,2,c
  5762   002D7E  EFC3  F016         	goto	u2771
  5763   002D82  EFC5  F016         	goto	u2770
  5764   002D86                     u2771:
  5765   002D86  EFC8  F016         	goto	l2892
  5766   002D8A                     u2770:
  5767   002D8A  90D8               	bcf	status,0,c
  5768   002D8C  EFC9  F016         	goto	l382
  5769   002D90                     l2892:
  5770   002D90  80D8               	bsf	status,0,c
  5771   002D92                     l382:
  5772   002D92  0012               	return		;funcret
  5773   002D94                     __end_of___fleq:
  5774                           	callstack 0
  5775                           
  5776 ;; *************** function ___fldiv *****************
  5777 ;; Defined at:
  5778 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  5779 ;; Parameters:    Size  Location     Type
  5780 ;;  b               4    0[COMRAM] unsigned char 
  5781 ;;  a               4    4[COMRAM] unsigned char 
  5782 ;; Auto vars:     Size  Location     Type
  5783 ;;  grs             4   19[COMRAM] unsigned long 
  5784 ;;  rem             4   12[COMRAM] unsigned long 
  5785 ;;  new_exp         2   17[COMRAM] short 
  5786 ;;  aexp            1   24[COMRAM] unsigned char 
  5787 ;;  bexp            1   23[COMRAM] unsigned char 
  5788 ;;  sign            1   16[COMRAM] unsigned char 
  5789 ;; Return value:  Size  Location     Type
  5790 ;;                  4    0[COMRAM] unsigned char 
  5791 ;; Registers used:
  5792 ;;		wreg, status,2, status,0
  5793 ;; Tracked objects:
  5794 ;;		On entry : 0/0
  5795 ;;		On exit  : 0/0
  5796 ;;		Unchanged: 0/0
  5797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5798 ;;      Params:         8       0       0       0       0       0       0       0       0
  5799 ;;      Locals:        13       0       0       0       0       0       0       0       0
  5800 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5801 ;;      Totals:        25       0       0       0       0       0       0       0       0
  5802 ;;Total ram usage:       25 bytes
  5803 ;; Hardware stack levels used: 1
  5804 ;; This function calls:
  5805 ;;		Nothing
  5806 ;; This function is called by:
  5807 ;;		_efgtoa
  5808 ;; This function uses a non-reentrant model
  5809 ;;
  5810                           
  5811                           	psect	text21
  5812   001B08                     __ptext21:
  5813                           	callstack 0
  5814   001B08                     ___fldiv:
  5815                           	callstack 26
  5816   001B08  5004               	movf	(___fldiv@b+3)^0,w,c
  5817   001B0A  0B80               	andlw	128
  5818   001B0C  6E11               	movwf	___fldiv@sign^0,c
  5819   001B0E  5004               	movf	(___fldiv@b+3)^0,w,c
  5820   001B10  2404               	addwf	(___fldiv@b+3)^0,w,c
  5821   001B12  6E18               	movwf	___fldiv@bexp^0,c
  5822   001B14  AE03               	btfss	(___fldiv@b+2)^0,7,c
  5823   001B16  EF8F  F00D         	goto	u2331
  5824   001B1A  EF91  F00D         	goto	u2330
  5825   001B1E                     u2331:
  5826   001B1E  EF92  F00D         	goto	l2612
  5827   001B22                     u2330:
  5828   001B22  8018               	bsf	___fldiv@bexp^0,0,c
  5829   001B24                     l2612:
  5830   001B24  5018               	movf	___fldiv@bexp^0,w,c
  5831   001B26  B4D8               	btfsc	status,2,c
  5832   001B28  EF98  F00D         	goto	u2341
  5833   001B2C  EF9A  F00D         	goto	u2340
  5834   001B30                     u2341:
  5835   001B30  EFAF  F00D         	goto	l2622
  5836   001B34                     u2340:
  5837   001B34  2818               	incf	___fldiv@bexp^0,w,c
  5838   001B36  A4D8               	btfss	status,2,c
  5839   001B38  EFA0  F00D         	goto	u2351
  5840   001B3C  EFA2  F00D         	goto	u2350
  5841   001B40                     u2351:
  5842   001B40  EFAA  F00D         	goto	l2618
  5843   001B44                     u2350:
  5844   001B44  0E00               	movlw	0
  5845   001B46  6E01               	movwf	___fldiv@b^0,c
  5846   001B48  0E00               	movlw	0
  5847   001B4A  6E02               	movwf	(___fldiv@b+1)^0,c
  5848   001B4C  0E00               	movlw	0
  5849   001B4E  6E03               	movwf	(___fldiv@b+2)^0,c
  5850   001B50  0E00               	movlw	0
  5851   001B52  6E04               	movwf	(___fldiv@b+3)^0,c
  5852   001B54                     l2618:
  5853   001B54  8E03               	bsf	(___fldiv@b+2)^0,7,c
  5854   001B56  0E00               	movlw	0
  5855   001B58  6E04               	movwf	(___fldiv@b+3)^0,c
  5856   001B5A  EFB7  F00D         	goto	l2624
  5857   001B5E                     l2622:
  5858   001B5E  0E00               	movlw	0
  5859   001B60  6E01               	movwf	___fldiv@b^0,c
  5860   001B62  0E00               	movlw	0
  5861   001B64  6E02               	movwf	(___fldiv@b+1)^0,c
  5862   001B66  0E00               	movlw	0
  5863   001B68  6E03               	movwf	(___fldiv@b+2)^0,c
  5864   001B6A  0E00               	movlw	0
  5865   001B6C  6E04               	movwf	(___fldiv@b+3)^0,c
  5866   001B6E                     l2624:
  5867   001B6E  5008               	movf	(___fldiv@a+3)^0,w,c
  5868   001B70  0B80               	andlw	128
  5869   001B72  1A11               	xorwf	___fldiv@sign^0,f,c
  5870   001B74  5008               	movf	(___fldiv@a+3)^0,w,c
  5871   001B76  2408               	addwf	(___fldiv@a+3)^0,w,c
  5872   001B78  6E19               	movwf	___fldiv@aexp^0,c
  5873   001B7A  AE07               	btfss	(___fldiv@a+2)^0,7,c
  5874   001B7C  EFC2  F00D         	goto	u2361
  5875   001B80  EFC4  F00D         	goto	u2360
  5876   001B84                     u2361:
  5877   001B84  EFC5  F00D         	goto	l2632
  5878   001B88                     u2360:
  5879   001B88  8019               	bsf	___fldiv@aexp^0,0,c
  5880   001B8A                     l2632:
  5881   001B8A  5019               	movf	___fldiv@aexp^0,w,c
  5882   001B8C  B4D8               	btfsc	status,2,c
  5883   001B8E  EFCB  F00D         	goto	u2371
  5884   001B92  EFCD  F00D         	goto	u2370
  5885   001B96                     u2371:
  5886   001B96  EFE2  F00D         	goto	l2642
  5887   001B9A                     u2370:
  5888   001B9A  2819               	incf	___fldiv@aexp^0,w,c
  5889   001B9C  A4D8               	btfss	status,2,c
  5890   001B9E  EFD3  F00D         	goto	u2381
  5891   001BA2  EFD5  F00D         	goto	u2380
  5892   001BA6                     u2381:
  5893   001BA6  EFDD  F00D         	goto	l2638
  5894   001BAA                     u2380:
  5895   001BAA  0E00               	movlw	0
  5896   001BAC  6E05               	movwf	___fldiv@a^0,c
  5897   001BAE  0E00               	movlw	0
  5898   001BB0  6E06               	movwf	(___fldiv@a+1)^0,c
  5899   001BB2  0E00               	movlw	0
  5900   001BB4  6E07               	movwf	(___fldiv@a+2)^0,c
  5901   001BB6  0E00               	movlw	0
  5902   001BB8  6E08               	movwf	(___fldiv@a+3)^0,c
  5903   001BBA                     l2638:
  5904   001BBA  8E07               	bsf	(___fldiv@a+2)^0,7,c
  5905   001BBC  0E00               	movlw	0
  5906   001BBE  6E08               	movwf	(___fldiv@a+3)^0,c
  5907   001BC0  EFEA  F00D         	goto	l2644
  5908   001BC4                     l2642:
  5909   001BC4  0E00               	movlw	0
  5910   001BC6  6E05               	movwf	___fldiv@a^0,c
  5911   001BC8  0E00               	movlw	0
  5912   001BCA  6E06               	movwf	(___fldiv@a+1)^0,c
  5913   001BCC  0E00               	movlw	0
  5914   001BCE  6E07               	movwf	(___fldiv@a+2)^0,c
  5915   001BD0  0E00               	movlw	0
  5916   001BD2  6E08               	movwf	(___fldiv@a+3)^0,c
  5917   001BD4                     l2644:
  5918   001BD4  5005               	movf	___fldiv@a^0,w,c
  5919   001BD6  1006               	iorwf	(___fldiv@a+1)^0,w,c
  5920   001BD8  1007               	iorwf	(___fldiv@a+2)^0,w,c
  5921   001BDA  1008               	iorwf	(___fldiv@a+3)^0,w,c
  5922   001BDC  A4D8               	btfss	status,2,c
  5923   001BDE  EFF3  F00D         	goto	u2391
  5924   001BE2  EFF5  F00D         	goto	u2390
  5925   001BE6                     u2391:
  5926   001BE6  EF0D  F00E         	goto	l2656
  5927   001BEA                     u2390:
  5928   001BEA  0E00               	movlw	0
  5929   001BEC  6E01               	movwf	___fldiv@b^0,c
  5930   001BEE  0E00               	movlw	0
  5931   001BF0  6E02               	movwf	(___fldiv@b+1)^0,c
  5932   001BF2  0E00               	movlw	0
  5933   001BF4  6E03               	movwf	(___fldiv@b+2)^0,c
  5934   001BF6  0E00               	movlw	0
  5935   001BF8  6E04               	movwf	(___fldiv@b+3)^0,c
  5936   001BFA  0E80               	movlw	128
  5937   001BFC  1203               	iorwf	(___fldiv@b+2)^0,f,c
  5938   001BFE  0E7F               	movlw	127
  5939   001C00  1204               	iorwf	(___fldiv@b+3)^0,f,c
  5940   001C02                     l2650:
  5941   001C02  5011               	movf	___fldiv@sign^0,w,c
  5942   001C04  1204               	iorwf	(___fldiv@b+3)^0,f,c
  5943   001C06  C001  F001         	movff	___fldiv@b,?___fldiv
  5944   001C0A  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  5945   001C0E  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  5946   001C12  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  5947   001C16  EF50  F00F         	goto	l705
  5948   001C1A                     l2656:
  5949   001C1A  5018               	movf	___fldiv@bexp^0,w,c
  5950   001C1C  A4D8               	btfss	status,2,c
  5951   001C1E  EF13  F00E         	goto	u2401
  5952   001C22  EF15  F00E         	goto	u2400
  5953   001C26                     u2401:
  5954   001C26  EF1F  F00E         	goto	l2664
  5955   001C2A                     u2400:
  5956   001C2A  0E00               	movlw	0
  5957   001C2C  6E01               	movwf	?___fldiv^0,c
  5958   001C2E  0E00               	movlw	0
  5959   001C30  6E02               	movwf	(?___fldiv+1)^0,c
  5960   001C32  0E00               	movlw	0
  5961   001C34  6E03               	movwf	(?___fldiv+2)^0,c
  5962   001C36  0E00               	movlw	0
  5963   001C38  6E04               	movwf	(?___fldiv+3)^0,c
  5964   001C3A  EF50  F00F         	goto	l705
  5965   001C3E                     l2664:
  5966   001C3E  5019               	movf	___fldiv@aexp^0,w,c
  5967   001C40  C018  F009         	movff	___fldiv@bexp,??___fldiv
  5968   001C44  6A0A               	clrf	(??___fldiv+1)^0,c
  5969   001C46  5E09               	subwf	??___fldiv^0,f,c
  5970   001C48  0E00               	movlw	0
  5971   001C4A  5A0A               	subwfb	(??___fldiv+1)^0,f,c
  5972   001C4C  0E7F               	movlw	127
  5973   001C4E  2409               	addwf	??___fldiv^0,w,c
  5974   001C50  6E12               	movwf	___fldiv@new_exp^0,c
  5975   001C52  0E00               	movlw	0
  5976   001C54  200A               	addwfc	(??___fldiv+1)^0,w,c
  5977   001C56  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  5978   001C58  C001  F00D         	movff	___fldiv@b,___fldiv@rem
  5979   001C5C  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
  5980   001C60  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
  5981   001C64  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
  5982   001C68  0E00               	movlw	0
  5983   001C6A  6E01               	movwf	___fldiv@b^0,c
  5984   001C6C  0E00               	movlw	0
  5985   001C6E  6E02               	movwf	(___fldiv@b+1)^0,c
  5986   001C70  0E00               	movlw	0
  5987   001C72  6E03               	movwf	(___fldiv@b+2)^0,c
  5988   001C74  0E00               	movlw	0
  5989   001C76  6E04               	movwf	(___fldiv@b+3)^0,c
  5990   001C78  0E00               	movlw	0
  5991   001C7A  6E14               	movwf	___fldiv@grs^0,c
  5992   001C7C  0E00               	movlw	0
  5993   001C7E  6E15               	movwf	(___fldiv@grs+1)^0,c
  5994   001C80  0E00               	movlw	0
  5995   001C82  6E16               	movwf	(___fldiv@grs+2)^0,c
  5996   001C84  0E00               	movlw	0
  5997   001C86  6E17               	movwf	(___fldiv@grs+3)^0,c
  5998   001C88  0E00               	movlw	0
  5999   001C8A  6E19               	movwf	___fldiv@aexp^0,c
  6000   001C8C  EF80  F00E         	goto	l707
  6001   001C90                     l2674:
  6002   001C90  5019               	movf	___fldiv@aexp^0,w,c
  6003   001C92  B4D8               	btfsc	status,2,c
  6004   001C94  EF4E  F00E         	goto	u2411
  6005   001C98  EF50  F00E         	goto	u2410
  6006   001C9C                     u2411:
  6007   001C9C  EF67  F00E         	goto	l2682
  6008   001CA0                     u2410:
  6009   001CA0  90D8               	bcf	status,0,c
  6010   001CA2  360D               	rlcf	___fldiv@rem^0,f,c
  6011   001CA4  360E               	rlcf	(___fldiv@rem+1)^0,f,c
  6012   001CA6  360F               	rlcf	(___fldiv@rem+2)^0,f,c
  6013   001CA8  3610               	rlcf	(___fldiv@rem+3)^0,f,c
  6014   001CAA  90D8               	bcf	status,0,c
  6015   001CAC  3601               	rlcf	___fldiv@b^0,f,c
  6016   001CAE  3602               	rlcf	(___fldiv@b+1)^0,f,c
  6017   001CB0  3603               	rlcf	(___fldiv@b+2)^0,f,c
  6018   001CB2  3604               	rlcf	(___fldiv@b+3)^0,f,c
  6019   001CB4  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  6020   001CB6  EF5F  F00E         	goto	u2421
  6021   001CBA  EF61  F00E         	goto	u2420
  6022   001CBE                     u2421:
  6023   001CBE  EF62  F00E         	goto	l710
  6024   001CC2                     u2420:
  6025   001CC2  8001               	bsf	___fldiv@b^0,0,c
  6026   001CC4                     l710:
  6027   001CC4  90D8               	bcf	status,0,c
  6028   001CC6  3614               	rlcf	___fldiv@grs^0,f,c
  6029   001CC8  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  6030   001CCA  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  6031   001CCC  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  6032   001CCE                     l2682:
  6033   001CCE  5005               	movf	___fldiv@a^0,w,c
  6034   001CD0  5C0D               	subwf	___fldiv@rem^0,w,c
  6035   001CD2  5006               	movf	(___fldiv@a+1)^0,w,c
  6036   001CD4  580E               	subwfb	(___fldiv@rem+1)^0,w,c
  6037   001CD6  5007               	movf	(___fldiv@a+2)^0,w,c
  6038   001CD8  580F               	subwfb	(___fldiv@rem+2)^0,w,c
  6039   001CDA  5008               	movf	(___fldiv@a+3)^0,w,c
  6040   001CDC  5810               	subwfb	(___fldiv@rem+3)^0,w,c
  6041   001CDE  A0D8               	btfss	status,0,c
  6042   001CE0  EF74  F00E         	goto	u2431
  6043   001CE4  EF76  F00E         	goto	u2430
  6044   001CE8                     u2431:
  6045   001CE8  EF7F  F00E         	goto	l2688
  6046   001CEC                     u2430:
  6047   001CEC  8C17               	bsf	(___fldiv@grs+3)^0,6,c
  6048   001CEE  5005               	movf	___fldiv@a^0,w,c
  6049   001CF0  5E0D               	subwf	___fldiv@rem^0,f,c
  6050   001CF2  5006               	movf	(___fldiv@a+1)^0,w,c
  6051   001CF4  5A0E               	subwfb	(___fldiv@rem+1)^0,f,c
  6052   001CF6  5007               	movf	(___fldiv@a+2)^0,w,c
  6053   001CF8  5A0F               	subwfb	(___fldiv@rem+2)^0,f,c
  6054   001CFA  5008               	movf	(___fldiv@a+3)^0,w,c
  6055   001CFC  5A10               	subwfb	(___fldiv@rem+3)^0,f,c
  6056   001CFE                     l2688:
  6057   001CFE  2A19               	incf	___fldiv@aexp^0,f,c
  6058   001D00                     l707:
  6059   001D00  0E19               	movlw	25
  6060   001D02  6419               	cpfsgt	___fldiv@aexp^0,c
  6061   001D04  EF86  F00E         	goto	u2441
  6062   001D08  EF88  F00E         	goto	u2440
  6063   001D0C                     u2441:
  6064   001D0C  EF48  F00E         	goto	l2674
  6065   001D10                     u2440:
  6066   001D10  500D               	movf	___fldiv@rem^0,w,c
  6067   001D12  100E               	iorwf	(___fldiv@rem+1)^0,w,c
  6068   001D14  100F               	iorwf	(___fldiv@rem+2)^0,w,c
  6069   001D16  1010               	iorwf	(___fldiv@rem+3)^0,w,c
  6070   001D18  B4D8               	btfsc	status,2,c
  6071   001D1A  EF91  F00E         	goto	u2451
  6072   001D1E  EF93  F00E         	goto	u2450
  6073   001D22                     u2451:
  6074   001D22  EFAB  F00E         	goto	l2700
  6075   001D26                     u2450:
  6076   001D26  8014               	bsf	___fldiv@grs^0,0,c
  6077   001D28  EFAB  F00E         	goto	l2700
  6078   001D2C                     l2694:
  6079   001D2C  90D8               	bcf	status,0,c
  6080   001D2E  3601               	rlcf	___fldiv@b^0,f,c
  6081   001D30  3602               	rlcf	(___fldiv@b+1)^0,f,c
  6082   001D32  3603               	rlcf	(___fldiv@b+2)^0,f,c
  6083   001D34  3604               	rlcf	(___fldiv@b+3)^0,f,c
  6084   001D36  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  6085   001D38  EFA0  F00E         	goto	u2461
  6086   001D3C  EFA2  F00E         	goto	u2460
  6087   001D40                     u2461:
  6088   001D40  EFA3  F00E         	goto	l716
  6089   001D44                     u2460:
  6090   001D44  8001               	bsf	___fldiv@b^0,0,c
  6091   001D46                     l716:
  6092   001D46  90D8               	bcf	status,0,c
  6093   001D48  3614               	rlcf	___fldiv@grs^0,f,c
  6094   001D4A  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  6095   001D4C  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  6096   001D4E  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  6097   001D50  0612               	decf	___fldiv@new_exp^0,f,c
  6098   001D52  A0D8               	btfss	status,0,c
  6099   001D54  0613               	decf	(___fldiv@new_exp+1)^0,f,c
  6100   001D56                     l2700:
  6101   001D56  AE03               	btfss	(___fldiv@b+2)^0,7,c
  6102   001D58  EFB0  F00E         	goto	u2471
  6103   001D5C  EFB2  F00E         	goto	u2470
  6104   001D60                     u2471:
  6105   001D60  EF96  F00E         	goto	l2694
  6106   001D64                     u2470:
  6107   001D64  0E00               	movlw	0
  6108   001D66  6E19               	movwf	___fldiv@aexp^0,c
  6109   001D68  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  6110   001D6A  EFB9  F00E         	goto	u2481
  6111   001D6E  EFBB  F00E         	goto	u2480
  6112   001D72                     u2481:
  6113   001D72  EFDF  F00E         	goto	l718
  6114   001D76                     u2480:
  6115   001D76  0EFF               	movlw	255
  6116   001D78  1414               	andwf	___fldiv@grs^0,w,c
  6117   001D7A  6E09               	movwf	??___fldiv^0,c
  6118   001D7C  0EFF               	movlw	255
  6119   001D7E  1415               	andwf	(___fldiv@grs+1)^0,w,c
  6120   001D80  6E0A               	movwf	(??___fldiv+1)^0,c
  6121   001D82  0EFF               	movlw	255
  6122   001D84  1416               	andwf	(___fldiv@grs+2)^0,w,c
  6123   001D86  6E0B               	movwf	(??___fldiv+2)^0,c
  6124   001D88  0E7F               	movlw	127
  6125   001D8A  1417               	andwf	(___fldiv@grs+3)^0,w,c
  6126   001D8C  6E0C               	movwf	(??___fldiv+3)^0,c
  6127   001D8E  5009               	movf	??___fldiv^0,w,c
  6128   001D90  100A               	iorwf	(??___fldiv+1)^0,w,c
  6129   001D92  100B               	iorwf	(??___fldiv+2)^0,w,c
  6130   001D94  100C               	iorwf	(??___fldiv+3)^0,w,c
  6131   001D96  B4D8               	btfsc	status,2,c
  6132   001D98  EFD0  F00E         	goto	u2491
  6133   001D9C  EFD2  F00E         	goto	u2490
  6134   001DA0                     u2491:
  6135   001DA0  EFD6  F00E         	goto	l719
  6136   001DA4                     u2490:
  6137   001DA4                     l2708:
  6138   001DA4  0E01               	movlw	1
  6139   001DA6  6E19               	movwf	___fldiv@aexp^0,c
  6140   001DA8  EFDF  F00E         	goto	l718
  6141   001DAC                     l719:
  6142   001DAC  A001               	btfss	___fldiv@b^0,0,c
  6143   001DAE  EFDB  F00E         	goto	u2501
  6144   001DB2  EFDD  F00E         	goto	u2500
  6145   001DB6                     u2501:
  6146   001DB6  EFDF  F00E         	goto	l718
  6147   001DBA                     u2500:
  6148   001DBA  EFD2  F00E         	goto	l2708
  6149   001DBE                     l718:
  6150   001DBE  5019               	movf	___fldiv@aexp^0,w,c
  6151   001DC0  B4D8               	btfsc	status,2,c
  6152   001DC2  EFE5  F00E         	goto	u2511
  6153   001DC6  EFE7  F00E         	goto	u2510
  6154   001DCA                     u2511:
  6155   001DCA  EF0B  F00F         	goto	l2720
  6156   001DCE                     u2510:
  6157   001DCE  0E01               	movlw	1
  6158   001DD0  2601               	addwf	___fldiv@b^0,f,c
  6159   001DD2  0E00               	movlw	0
  6160   001DD4  2202               	addwfc	(___fldiv@b+1)^0,f,c
  6161   001DD6  2203               	addwfc	(___fldiv@b+2)^0,f,c
  6162   001DD8  2204               	addwfc	(___fldiv@b+3)^0,f,c
  6163   001DDA  A004               	btfss	(___fldiv@b+3)^0,0,c
  6164   001DDC  EFF2  F00E         	goto	u2521
  6165   001DE0  EFF4  F00E         	goto	u2520
  6166   001DE4                     u2521:
  6167   001DE4  EF0B  F00F         	goto	l2720
  6168   001DE8                     u2520:
  6169   001DE8  C001  F009         	movff	___fldiv@b,??___fldiv
  6170   001DEC  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
  6171   001DF0  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
  6172   001DF4  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
  6173   001DF8  340C               	rlcf	(??___fldiv+3)^0,w,c
  6174   001DFA  320C               	rrcf	(??___fldiv+3)^0,f,c
  6175   001DFC  320B               	rrcf	(??___fldiv+2)^0,f,c
  6176   001DFE  320A               	rrcf	(??___fldiv+1)^0,f,c
  6177   001E00  3209               	rrcf	??___fldiv^0,f,c
  6178   001E02  C009  F001         	movff	??___fldiv,___fldiv@b
  6179   001E06  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
  6180   001E0A  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
  6181   001E0E  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
  6182   001E12  4A12               	infsnz	___fldiv@new_exp^0,f,c
  6183   001E14  2A13               	incf	(___fldiv@new_exp+1)^0,f,c
  6184   001E16                     l2720:
  6185   001E16  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6186   001E18  EF16  F00F         	goto	u2531
  6187   001E1C  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  6188   001E1E  E108               	bnz	u2530
  6189   001E20  2812               	incf	___fldiv@new_exp^0,w,c
  6190   001E22  A0D8               	btfss	status,0,c
  6191   001E24  EF16  F00F         	goto	u2531
  6192   001E28  EF18  F00F         	goto	u2530
  6193   001E2C                     u2531:
  6194   001E2C  EF23  F00F         	goto	l2724
  6195   001E30                     u2530:
  6196   001E30  0E00               	movlw	0
  6197   001E32  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  6198   001E34  6812               	setf	___fldiv@new_exp^0,c
  6199   001E36  0E00               	movlw	0
  6200   001E38  6E01               	movwf	___fldiv@b^0,c
  6201   001E3A  0E00               	movlw	0
  6202   001E3C  6E02               	movwf	(___fldiv@b+1)^0,c
  6203   001E3E  0E00               	movlw	0
  6204   001E40  6E03               	movwf	(___fldiv@b+2)^0,c
  6205   001E42  0E00               	movlw	0
  6206   001E44  6E04               	movwf	(___fldiv@b+3)^0,c
  6207   001E46                     l2724:
  6208   001E46  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6209   001E48  EF30  F00F         	goto	u2540
  6210   001E4C  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  6211   001E4E  E106               	bnz	u2541
  6212   001E50  0412               	decf	___fldiv@new_exp^0,w,c
  6213   001E52  B0D8               	btfsc	status,0,c
  6214   001E54  EF2E  F00F         	goto	u2541
  6215   001E58  EF30  F00F         	goto	u2540
  6216   001E5C                     u2541:
  6217   001E5C  EF3E  F00F         	goto	l2728
  6218   001E60                     u2540:
  6219   001E60  0E00               	movlw	0
  6220   001E62  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  6221   001E64  0E00               	movlw	0
  6222   001E66  6E12               	movwf	___fldiv@new_exp^0,c
  6223   001E68  0E00               	movlw	0
  6224   001E6A  6E01               	movwf	___fldiv@b^0,c
  6225   001E6C  0E00               	movlw	0
  6226   001E6E  6E02               	movwf	(___fldiv@b+1)^0,c
  6227   001E70  0E00               	movlw	0
  6228   001E72  6E03               	movwf	(___fldiv@b+2)^0,c
  6229   001E74  0E00               	movlw	0
  6230   001E76  6E04               	movwf	(___fldiv@b+3)^0,c
  6231   001E78  0E00               	movlw	0
  6232   001E7A  6E11               	movwf	___fldiv@sign^0,c
  6233   001E7C                     l2728:
  6234   001E7C  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
  6235   001E80  A018               	btfss	___fldiv@bexp^0,0,c
  6236   001E82  EF45  F00F         	goto	u2551
  6237   001E86  EF47  F00F         	goto	u2550
  6238   001E8A                     u2551:
  6239   001E8A  EF4A  F00F         	goto	l2734
  6240   001E8E                     u2550:
  6241   001E8E  8E03               	bsf	(___fldiv@b+2)^0,7,c
  6242   001E90  EF4B  F00F         	goto	l2736
  6243   001E94                     l2734:
  6244   001E94  9E03               	bcf	(___fldiv@b+2)^0,7,c
  6245   001E96                     l2736:
  6246   001E96  90D8               	bcf	status,0,c
  6247   001E98  3018               	rrcf	___fldiv@bexp^0,w,c
  6248   001E9A  6E04               	movwf	(___fldiv@b+3)^0,c
  6249   001E9C  EF01  F00E         	goto	l2650
  6250   001EA0                     l705:
  6251   001EA0  0012               	return		;funcret
  6252   001EA2                     __end_of___fldiv:
  6253                           	callstack 0
  6254                           
  6255 ;; *************** function _atoi *****************
  6256 ;; Defined at:
  6257 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\atoi.c"
  6258 ;; Parameters:    Size  Location     Type
  6259 ;;  s               2    6[COMRAM] PTR const unsigned char 
  6260 ;;		 -> STR_3(9), STR_2(9), STR_1(8), 
  6261 ;; Auto vars:     Size  Location     Type
  6262 ;;  n               2   13[COMRAM] int 
  6263 ;;  neg             2   11[COMRAM] int 
  6264 ;; Return value:  Size  Location     Type
  6265 ;;                  2    6[COMRAM] int 
  6266 ;; Registers used:
  6267 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6268 ;; Tracked objects:
  6269 ;;		On entry : 0/0
  6270 ;;		On exit  : 0/0
  6271 ;;		Unchanged: 0/0
  6272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6273 ;;      Params:         2       0       0       0       0       0       0       0       0
  6274 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6275 ;;      Temps:          3       0       0       0       0       0       0       0       0
  6276 ;;      Totals:         9       0       0       0       0       0       0       0       0
  6277 ;;Total ram usage:        9 bytes
  6278 ;; Hardware stack levels used: 1
  6279 ;; Hardware stack levels required when called: 1
  6280 ;; This function calls:
  6281 ;;		___wmul
  6282 ;;		_isdigit
  6283 ;;		_isspace
  6284 ;; This function is called by:
  6285 ;;		_vfpfcnvrt
  6286 ;; This function uses a non-reentrant model
  6287 ;;
  6288                           
  6289                           	psect	text22
  6290   0027CE                     __ptext22:
  6291                           	callstack 0
  6292   0027CE                     _atoi:
  6293                           	callstack 26
  6294   0027CE  0E00               	movlw	0
  6295   0027D0  6E0F               	movwf	(atoi@n+1)^0,c
  6296   0027D2  0E00               	movlw	0
  6297   0027D4  6E0E               	movwf	atoi@n^0,c
  6298   0027D6  0E00               	movlw	0
  6299   0027D8  6E0D               	movwf	(atoi@neg+1)^0,c
  6300   0027DA  0E00               	movlw	0
  6301   0027DC  6E0C               	movwf	atoi@neg^0,c
  6302   0027DE  EFF3  F013         	goto	l3298
  6303   0027E2                     l3294:
  6304   0027E2  4A07               	infsnz	atoi@s^0,f,c
  6305   0027E4  2A08               	incf	(atoi@s+1)^0,f,c
  6306   0027E6                     l3298:
  6307   0027E6  C007  FFF6         	movff	atoi@s,tblptrl
  6308   0027EA  C008  FFF7         	movff	atoi@s+1,tblptrh
  6309   0027EE                     	if	0	;tblptru may be non-zero
  6310   0027EE                     	endif
  6311   0027EE                     	if	0	;tblptru may be non-zero
  6312   0027EE                     	endif
  6313   0027EE  0008               	tblrd		*
  6314   0027F0  50F5               	movf	tablat,w,c
  6315   0027F2  0A20               	xorlw	32
  6316   0027F4  B4D8               	btfsc	status,2,c
  6317   0027F6  EFFF  F013         	goto	u3491
  6318   0027FA  EF01  F014         	goto	u3490
  6319   0027FE                     u3491:
  6320   0027FE  EFF1  F013         	goto	l3294
  6321   002802                     u3490:
  6322   002802  C007  FFF6         	movff	atoi@s,tblptrl
  6323   002806  C008  FFF7         	movff	atoi@s+1,tblptrh
  6324   00280A                     	if	0	;tblptru may be non-zero
  6325   00280A                     	endif
  6326   00280A                     	if	0	;tblptru may be non-zero
  6327   00280A                     	endif
  6328   00280A  0008               	tblrd		*
  6329   00280C  CFF5 F009          	movff	tablat,??_atoi
  6330   002810  0EF7               	movlw	247
  6331   002812  2409               	addwf	??_atoi^0,w,c
  6332   002814  6E0A               	movwf	(??_atoi+1)^0,c
  6333   002816  6A0B               	clrf	(??_atoi+2)^0,c
  6334   002818  0EFF               	movlw	255
  6335   00281A  220B               	addwfc	(??_atoi+2)^0,f,c
  6336   00281C  500B               	movf	(??_atoi+2)^0,w,c
  6337   00281E  E109               	bnz	u3500
  6338   002820  0E05               	movlw	5
  6339   002822  5C0A               	subwf	(??_atoi+1)^0,w,c
  6340   002824  A0D8               	btfss	status,0,c
  6341   002826  EF17  F014         	goto	u3501
  6342   00282A  EF19  F014         	goto	u3500
  6343   00282E                     u3501:
  6344   00282E  EFF1  F013         	goto	l3294
  6345   002832                     u3500:
  6346   002832  EF23  F014         	goto	l3306
  6347   002836                     l3302:
  6348   002836  0E00               	movlw	0
  6349   002838  6E0D               	movwf	(atoi@neg+1)^0,c
  6350   00283A  0E01               	movlw	1
  6351   00283C  6E0C               	movwf	atoi@neg^0,c
  6352   00283E                     l3304:
  6353   00283E  4A07               	infsnz	atoi@s^0,f,c
  6354   002840  2A08               	incf	(atoi@s+1)^0,f,c
  6355   002842  EF58  F014         	goto	l3314
  6356   002846                     l3306:
  6357   002846  C007  FFF6         	movff	atoi@s,tblptrl
  6358   00284A  C008  FFF7         	movff	atoi@s+1,tblptrh
  6359   00284E                     	if	0	;tblptru may be non-zero
  6360   00284E                     	endif
  6361   00284E                     	if	0	;tblptru may be non-zero
  6362   00284E                     	endif
  6363   00284E  0008               	tblrd		*
  6364   002850  50F5               	movf	tablat,w,c
  6365   002852  6E09               	movwf	??_atoi^0,c
  6366   002854  6A0A               	clrf	(??_atoi+1)^0,c
  6367                           
  6368                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6369                           ; Switch size 1, requested type "simple"
  6370                           ; Number of cases is 1, Range of values is 0 to 0
  6371                           ; switch strategies available:
  6372                           ; Name         Instructions Cycles
  6373                           ; simple_byte            4     3 (average)
  6374                           ;	Chosen strategy is simple_byte
  6375   002856  500A               	movf	(??_atoi+1)^0,w,c
  6376   002858  0A00               	xorlw	0	; case 0
  6377   00285A  B4D8               	btfsc	status,2,c
  6378   00285C  EF32  F014         	goto	l3762
  6379   002860  EF58  F014         	goto	l3314
  6380   002864                     l3762:
  6381                           
  6382                           ; Switch size 1, requested type "simple"
  6383                           ; Number of cases is 2, Range of values is 43 to 45
  6384                           ; switch strategies available:
  6385                           ; Name         Instructions Cycles
  6386                           ; simple_byte            7     4 (average)
  6387                           ;	Chosen strategy is simple_byte
  6388   002864  5009               	movf	??_atoi^0,w,c
  6389   002866  0A2B               	xorlw	43	; case 43
  6390   002868  B4D8               	btfsc	status,2,c
  6391   00286A  EF1F  F014         	goto	l3304
  6392   00286E  0A06               	xorlw	6	; case 45
  6393   002870  B4D8               	btfsc	status,2,c
  6394   002872  EF1B  F014         	goto	l3302
  6395   002876  EF58  F014         	goto	l3314
  6396   00287A                     l3308:
  6397   00287A  C00E  F001         	movff	atoi@n,___wmul@multiplier
  6398   00287E  C00F  F002         	movff	atoi@n+1,___wmul@multiplier+1
  6399   002882  0E00               	movlw	0
  6400   002884  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6401   002886  0E0A               	movlw	10
  6402   002888  6E03               	movwf	___wmul@multiplicand^0,c
  6403   00288A  EC5F  F019         	call	___wmul	;wreg free
  6404   00288E  C007  FFF6         	movff	atoi@s,tblptrl
  6405   002892  C008  FFF7         	movff	atoi@s+1,tblptrh
  6406   002896                     	if	0	;tblptru may be non-zero
  6407   002896                     	endif
  6408   002896                     	if	0	;tblptru may be non-zero
  6409   002896                     	endif
  6410   002896  0008               	tblrd		*
  6411   002898  50F5               	movf	tablat,w,c
  6412   00289A  5E01               	subwf	?___wmul^0,f,c
  6413   00289C  0E00               	movlw	0
  6414   00289E  5A02               	subwfb	(?___wmul+1)^0,f,c
  6415   0028A0  0E30               	movlw	48
  6416   0028A2  2401               	addwf	?___wmul^0,w,c
  6417   0028A4  6E0E               	movwf	atoi@n^0,c
  6418   0028A6  0E00               	movlw	0
  6419   0028A8  2002               	addwfc	(?___wmul+1)^0,w,c
  6420   0028AA  6E0F               	movwf	(atoi@n+1)^0,c
  6421   0028AC  EF1F  F014         	goto	l3304
  6422   0028B0                     l3314:
  6423   0028B0  C007  FFF6         	movff	atoi@s,tblptrl
  6424   0028B4  C008  FFF7         	movff	atoi@s+1,tblptrh
  6425   0028B8                     	if	0	;tblptru may be non-zero
  6426   0028B8                     	endif
  6427   0028B8                     	if	0	;tblptru may be non-zero
  6428   0028B8                     	endif
  6429   0028B8  0008               	tblrd		*
  6430   0028BA  CFF5 F009          	movff	tablat,??_atoi
  6431   0028BE  0ED0               	movlw	208
  6432   0028C0  2409               	addwf	??_atoi^0,w,c
  6433   0028C2  6E0A               	movwf	(??_atoi+1)^0,c
  6434   0028C4  6A0B               	clrf	(??_atoi+2)^0,c
  6435   0028C6  0EFF               	movlw	255
  6436   0028C8  220B               	addwfc	(??_atoi+2)^0,f,c
  6437   0028CA  500B               	movf	(??_atoi+2)^0,w,c
  6438   0028CC  E109               	bnz	u3510
  6439   0028CE  0E0A               	movlw	10
  6440   0028D0  5C0A               	subwf	(??_atoi+1)^0,w,c
  6441   0028D2  A0D8               	btfss	status,0,c
  6442   0028D4  EF6E  F014         	goto	u3511
  6443   0028D8  EF70  F014         	goto	u3510
  6444   0028DC                     u3511:
  6445   0028DC  EF3D  F014         	goto	l3308
  6446   0028E0                     u3510:
  6447   0028E0  500C               	movf	atoi@neg^0,w,c
  6448   0028E2  100D               	iorwf	(atoi@neg+1)^0,w,c
  6449   0028E4  A4D8               	btfss	status,2,c
  6450   0028E6  EF77  F014         	goto	u3521
  6451   0028EA  EF79  F014         	goto	u3520
  6452   0028EE                     u3521:
  6453   0028EE  EF87  F014         	goto	l958
  6454   0028F2                     u3520:
  6455   0028F2  C00E  F009         	movff	atoi@n,??_atoi
  6456   0028F6  C00F  F00A         	movff	atoi@n+1,??_atoi+1
  6457   0028FA  1E09               	comf	??_atoi^0,f,c
  6458   0028FC  1E0A               	comf	(??_atoi+1)^0,f,c
  6459   0028FE  4A09               	infsnz	??_atoi^0,f,c
  6460   002900  2A0A               	incf	(??_atoi+1)^0,f,c
  6461   002902  C009  F007         	movff	??_atoi,?_atoi
  6462   002906  C00A  F008         	movff	??_atoi+1,?_atoi+1
  6463   00290A  EF8B  F014         	goto	l961
  6464   00290E                     l958:
  6465   00290E  C00E  F007         	movff	atoi@n,?_atoi
  6466   002912  C00F  F008         	movff	atoi@n+1,?_atoi+1
  6467   002916                     l961:
  6468   002916  0012               	return		;funcret
  6469   002918                     __end_of_atoi:
  6470                           	callstack 0
  6471                           
  6472 ;; *************** function _isspace *****************
  6473 ;; Defined at:
  6474 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isspace.c"
  6475 ;; Parameters:    Size  Location     Type
  6476 ;;  c               2    0[COMRAM] int 
  6477 ;; Auto vars:     Size  Location     Type
  6478 ;;		None
  6479 ;; Return value:  Size  Location     Type
  6480 ;;                  2    0[COMRAM] int 
  6481 ;; Registers used:
  6482 ;;		wreg, status,2, status,0
  6483 ;; Tracked objects:
  6484 ;;		On entry : 0/0
  6485 ;;		On exit  : 0/0
  6486 ;;		Unchanged: 0/0
  6487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6488 ;;      Params:         2       0       0       0       0       0       0       0       0
  6489 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6490 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6491 ;;      Totals:         5       0       0       0       0       0       0       0       0
  6492 ;;Total ram usage:        5 bytes
  6493 ;; Hardware stack levels used: 1
  6494 ;; This function calls:
  6495 ;;		Nothing
  6496 ;; This function is called by:
  6497 ;;		_atoi
  6498 ;; This function uses a non-reentrant model
  6499 ;;
  6500                           
  6501                           	psect	text23
  6502   0030E0                     __ptext23:
  6503                           	callstack 0
  6504   0030E0                     _isspace:
  6505                           	callstack 26
  6506   0030E0  0E01               	movlw	1
  6507   0030E2  6E05               	movwf	_isspace$1107^0,c
  6508   0030E4  0E20               	movlw	32
  6509   0030E6  1801               	xorwf	isspace@c^0,w,c
  6510   0030E8  1002               	iorwf	(isspace@c+1)^0,w,c
  6511   0030EA  B4D8               	btfsc	status,2,c
  6512   0030EC  EF7A  F018         	goto	u3151
  6513   0030F0  EF7C  F018         	goto	u3150
  6514   0030F4                     u3151:
  6515   0030F4  EF8F  F018         	goto	l3066
  6516   0030F8                     u3150:
  6517   0030F8  0EF7               	movlw	247
  6518   0030FA  2401               	addwf	isspace@c^0,w,c
  6519   0030FC  6E03               	movwf	??_isspace^0,c
  6520   0030FE  0EFF               	movlw	255
  6521   003100  2002               	addwfc	(isspace@c+1)^0,w,c
  6522   003102  6E04               	movwf	(??_isspace+1)^0,c
  6523   003104  5004               	movf	(??_isspace+1)^0,w,c
  6524   003106  E109               	bnz	u3160
  6525   003108  0E05               	movlw	5
  6526   00310A  5C03               	subwf	??_isspace^0,w,c
  6527   00310C  A0D8               	btfss	status,0,c
  6528   00310E  EF8B  F018         	goto	u3161
  6529   003112  EF8D  F018         	goto	u3160
  6530   003116                     u3161:
  6531   003116  EF8F  F018         	goto	l3066
  6532   00311A                     u3160:
  6533   00311A  0E00               	movlw	0
  6534   00311C  6E05               	movwf	_isspace$1107^0,c
  6535   00311E                     l3066:
  6536   00311E  C005  F001         	movff	_isspace$1107,?_isspace
  6537   003122  6A02               	clrf	(?_isspace+1)^0,c
  6538   003124  0012               	return		;funcret
  6539   003126                     __end_of_isspace:
  6540                           	callstack 0
  6541                           
  6542 ;; *************** function _isdigit *****************
  6543 ;; Defined at:
  6544 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isdigit.c"
  6545 ;; Parameters:    Size  Location     Type
  6546 ;;  c               2    0[COMRAM] int 
  6547 ;; Auto vars:     Size  Location     Type
  6548 ;;		None
  6549 ;; Return value:  Size  Location     Type
  6550 ;;                  2    0[COMRAM] int 
  6551 ;; Registers used:
  6552 ;;		wreg, status,2, status,0
  6553 ;; Tracked objects:
  6554 ;;		On entry : 0/0
  6555 ;;		On exit  : 0/0
  6556 ;;		Unchanged: 0/0
  6557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6558 ;;      Params:         2       0       0       0       0       0       0       0       0
  6559 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6560 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6561 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6562 ;;Total ram usage:        4 bytes
  6563 ;; Hardware stack levels used: 1
  6564 ;; This function calls:
  6565 ;;		Nothing
  6566 ;; This function is called by:
  6567 ;;		_vfpfcnvrt
  6568 ;;		_atoi
  6569 ;; This function uses a non-reentrant model
  6570 ;;
  6571                           
  6572                           	psect	text24
  6573   003292                     __ptext24:
  6574                           	callstack 0
  6575   003292                     _isdigit:
  6576                           	callstack 27
  6577   003292  0ED0               	movlw	208
  6578   003294  2401               	addwf	isdigit@c^0,w,c
  6579   003296  6E03               	movwf	??_isdigit^0,c
  6580   003298  0EFF               	movlw	255
  6581   00329A  2002               	addwfc	(isdigit@c+1)^0,w,c
  6582   00329C  6E04               	movwf	(??_isdigit+1)^0,c
  6583   00329E  5004               	movf	(??_isdigit+1)^0,w,c
  6584   0032A0  E10A               	bnz	u3130
  6585   0032A2  0E0A               	movlw	10
  6586   0032A4  5C03               	subwf	??_isdigit^0,w,c
  6587   0032A6  A0D8               	btfss	status,0,c
  6588   0032A8  EF58  F019         	goto	u3131
  6589   0032AC  EF5B  F019         	goto	u3130
  6590   0032B0                     u3131:
  6591   0032B0  0E01               	movlw	1
  6592   0032B2  EF5C  F019         	goto	u3140
  6593   0032B6                     u3130:
  6594   0032B6  0E00               	movlw	0
  6595   0032B8                     u3140:
  6596   0032B8  6E01               	movwf	?_isdigit^0,c
  6597   0032BA  6A02               	clrf	(?_isdigit+1)^0,c
  6598   0032BC  0012               	return		;funcret
  6599   0032BE                     __end_of_isdigit:
  6600                           	callstack 0
  6601                           
  6602 ;; *************** function ___wmul *****************
  6603 ;; Defined at:
  6604 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  6605 ;; Parameters:    Size  Location     Type
  6606 ;;  multiplier      2    0[COMRAM] unsigned int 
  6607 ;;  multiplicand    2    2[COMRAM] unsigned int 
  6608 ;; Auto vars:     Size  Location     Type
  6609 ;;  product         2    4[COMRAM] unsigned int 
  6610 ;; Return value:  Size  Location     Type
  6611 ;;                  2    0[COMRAM] unsigned int 
  6612 ;; Registers used:
  6613 ;;		wreg, status,2, status,0, prodl, prodh
  6614 ;; Tracked objects:
  6615 ;;		On entry : 0/0
  6616 ;;		On exit  : 0/0
  6617 ;;		Unchanged: 0/0
  6618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6619 ;;      Params:         4       0       0       0       0       0       0       0       0
  6620 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6621 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6622 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6623 ;;Total ram usage:        6 bytes
  6624 ;; Hardware stack levels used: 1
  6625 ;; This function calls:
  6626 ;;		Nothing
  6627 ;; This function is called by:
  6628 ;;		_atoi
  6629 ;; This function uses a non-reentrant model
  6630 ;;
  6631                           
  6632                           	psect	text25
  6633   0032BE                     __ptext25:
  6634                           	callstack 0
  6635   0032BE                     ___wmul:
  6636                           	callstack 26
  6637   0032BE  5001               	movf	___wmul@multiplier^0,w,c
  6638   0032C0  0203               	mulwf	___wmul@multiplicand^0,c
  6639   0032C2  CFF3 F005          	movff	prodl,___wmul@product
  6640   0032C6  CFF4 F006          	movff	prodh,___wmul@product+1
  6641   0032CA  5001               	movf	___wmul@multiplier^0,w,c
  6642   0032CC  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  6643   0032CE  50F3               	movf	243,w,c
  6644   0032D0  2606               	addwf	(___wmul@product+1)^0,f,c
  6645   0032D2  5002               	movf	(___wmul@multiplier+1)^0,w,c
  6646   0032D4  0203               	mulwf	___wmul@multiplicand^0,c
  6647   0032D6  50F3               	movf	243,w,c
  6648   0032D8  2606               	addwf	(___wmul@product+1)^0,f,c
  6649   0032DA  C005  F001         	movff	___wmul@product,?___wmul
  6650   0032DE  C006  F002         	movff	___wmul@product+1,?___wmul+1
  6651   0032E2  0012               	return		;funcret
  6652   0032E4                     __end_of___wmul:
  6653                           	callstack 0
  6654                           
  6655 ;; *************** function ___xxtofl *****************
  6656 ;; Defined at:
  6657 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  6658 ;; Parameters:    Size  Location     Type
  6659 ;;  sign            1    wreg     unsigned char 
  6660 ;;  val             4    5[COMRAM] long 
  6661 ;; Auto vars:     Size  Location     Type
  6662 ;;  sign            1   13[COMRAM] unsigned char 
  6663 ;;  arg             4   15[COMRAM] unsigned long 
  6664 ;;  exp             1   14[COMRAM] unsigned char 
  6665 ;; Return value:  Size  Location     Type
  6666 ;;                  4    5[COMRAM] unsigned char 
  6667 ;; Registers used:
  6668 ;;		wreg, status,2, status,0
  6669 ;; Tracked objects:
  6670 ;;		On entry : 0/0
  6671 ;;		On exit  : 0/0
  6672 ;;		Unchanged: 0/0
  6673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6674 ;;      Params:         4       0       0       0       0       0       0       0       0
  6675 ;;      Locals:         6       0       0       0       0       0       0       0       0
  6676 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6677 ;;      Totals:        14       0       0       0       0       0       0       0       0
  6678 ;;Total ram usage:       14 bytes
  6679 ;; Hardware stack levels used: 1
  6680 ;; This function calls:
  6681 ;;		Nothing
  6682 ;; This function is called by:
  6683 ;;		_main
  6684 ;; This function uses a non-reentrant model
  6685 ;;
  6686                           
  6687                           	psect	text26
  6688   00261A                     __ptext26:
  6689                           	callstack 0
  6690   00261A                     ___xxtofl:
  6691                           	callstack 30
  6692                           
  6693                           ;incstack = 0
  6694                           ;___xxtofl@sign stored from wreg
  6695   00261A  6E0E               	movwf	___xxtofl@sign^0,c
  6696   00261C  500E               	movf	___xxtofl@sign^0,w,c
  6697   00261E  B4D8               	btfsc	status,2,c
  6698   002620  EF14  F013         	goto	u3671
  6699   002624  EF16  F013         	goto	u3670
  6700   002628                     u3671:
  6701   002628  EF38  F013         	goto	l778
  6702   00262C                     u3670:
  6703   00262C  BE09               	btfsc	(___xxtofl@val+3)^0,7,c
  6704   00262E  EF1D  F013         	goto	u3680
  6705   002632  EF1B  F013         	goto	u3681
  6706   002636                     u3681:
  6707   002636  EF38  F013         	goto	l778
  6708   00263A                     u3680:
  6709   00263A  C006  F00A         	movff	___xxtofl@val,??___xxtofl
  6710   00263E  C007  F00B         	movff	___xxtofl@val+1,??___xxtofl+1
  6711   002642  C008  F00C         	movff	___xxtofl@val+2,??___xxtofl+2
  6712   002646  C009  F00D         	movff	___xxtofl@val+3,??___xxtofl+3
  6713   00264A  1E0A               	comf	??___xxtofl^0,f,c
  6714   00264C  1E0B               	comf	(??___xxtofl+1)^0,f,c
  6715   00264E  1E0C               	comf	(??___xxtofl+2)^0,f,c
  6716   002650  1E0D               	comf	(??___xxtofl+3)^0,f,c
  6717   002652  2A0A               	incf	??___xxtofl^0,f,c
  6718   002654  0E00               	movlw	0
  6719   002656  220B               	addwfc	(??___xxtofl+1)^0,f,c
  6720   002658  220C               	addwfc	(??___xxtofl+2)^0,f,c
  6721   00265A  220D               	addwfc	(??___xxtofl+3)^0,f,c
  6722   00265C  C00A  F010         	movff	??___xxtofl,___xxtofl@arg
  6723   002660  C00B  F011         	movff	??___xxtofl+1,___xxtofl@arg+1
  6724   002664  C00C  F012         	movff	??___xxtofl+2,___xxtofl@arg+2
  6725   002668  C00D  F013         	movff	??___xxtofl+3,___xxtofl@arg+3
  6726   00266C  EF40  F013         	goto	l3570
  6727   002670                     l778:
  6728   002670  C006  F010         	movff	___xxtofl@val,___xxtofl@arg
  6729   002674  C007  F011         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6730   002678  C008  F012         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6731   00267C  C009  F013         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6732   002680                     l3570:
  6733   002680  5006               	movf	___xxtofl@val^0,w,c
  6734   002682  1007               	iorwf	(___xxtofl@val+1)^0,w,c
  6735   002684  1008               	iorwf	(___xxtofl@val+2)^0,w,c
  6736   002686  1009               	iorwf	(___xxtofl@val+3)^0,w,c
  6737   002688  A4D8               	btfss	status,2,c
  6738   00268A  EF49  F013         	goto	u3691
  6739   00268E  EF4B  F013         	goto	u3690
  6740   002692                     u3691:
  6741   002692  EF55  F013         	goto	l3576
  6742   002696                     u3690:
  6743   002696  0E00               	movlw	0
  6744   002698  6E06               	movwf	?___xxtofl^0,c
  6745   00269A  0E00               	movlw	0
  6746   00269C  6E07               	movwf	(?___xxtofl+1)^0,c
  6747   00269E  0E00               	movlw	0
  6748   0026A0  6E08               	movwf	(?___xxtofl+2)^0,c
  6749   0026A2  0E00               	movlw	0
  6750   0026A4  6E09               	movwf	(?___xxtofl+3)^0,c
  6751   0026A6  EFE6  F013         	goto	l781
  6752   0026AA                     l3576:
  6753   0026AA  0E96               	movlw	150
  6754   0026AC  6E0F               	movwf	___xxtofl@exp^0,c
  6755   0026AE  EF5F  F013         	goto	l3580
  6756   0026B2                     l3578:
  6757   0026B2  2A0F               	incf	___xxtofl@exp^0,f,c
  6758   0026B4  90D8               	bcf	status,0,c
  6759   0026B6  3213               	rrcf	(___xxtofl@arg+3)^0,f,c
  6760   0026B8  3212               	rrcf	(___xxtofl@arg+2)^0,f,c
  6761   0026BA  3211               	rrcf	(___xxtofl@arg+1)^0,f,c
  6762   0026BC  3210               	rrcf	___xxtofl@arg^0,f,c
  6763   0026BE                     l3580:
  6764   0026BE  0E00               	movlw	0
  6765   0026C0  1410               	andwf	___xxtofl@arg^0,w,c
  6766   0026C2  6E0A               	movwf	??___xxtofl^0,c
  6767   0026C4  0E00               	movlw	0
  6768   0026C6  1411               	andwf	(___xxtofl@arg+1)^0,w,c
  6769   0026C8  6E0B               	movwf	(??___xxtofl+1)^0,c
  6770   0026CA  0E00               	movlw	0
  6771   0026CC  1412               	andwf	(___xxtofl@arg+2)^0,w,c
  6772   0026CE  6E0C               	movwf	(??___xxtofl+2)^0,c
  6773   0026D0  0EFE               	movlw	254
  6774   0026D2  1413               	andwf	(___xxtofl@arg+3)^0,w,c
  6775   0026D4  6E0D               	movwf	(??___xxtofl+3)^0,c
  6776   0026D6  500A               	movf	??___xxtofl^0,w,c
  6777   0026D8  100B               	iorwf	(??___xxtofl+1)^0,w,c
  6778   0026DA  100C               	iorwf	(??___xxtofl+2)^0,w,c
  6779   0026DC  100D               	iorwf	(??___xxtofl+3)^0,w,c
  6780   0026DE  A4D8               	btfss	status,2,c
  6781   0026E0  EF74  F013         	goto	u3701
  6782   0026E4  EF76  F013         	goto	u3700
  6783   0026E8                     u3701:
  6784   0026E8  EF59  F013         	goto	l3578
  6785   0026EC                     u3700:
  6786   0026EC  EF84  F013         	goto	l785
  6787   0026F0                     l3582:
  6788   0026F0  2A0F               	incf	___xxtofl@exp^0,f,c
  6789   0026F2  0E01               	movlw	1
  6790   0026F4  2610               	addwf	___xxtofl@arg^0,f,c
  6791   0026F6  0E00               	movlw	0
  6792   0026F8  2211               	addwfc	(___xxtofl@arg+1)^0,f,c
  6793   0026FA  2212               	addwfc	(___xxtofl@arg+2)^0,f,c
  6794   0026FC  2213               	addwfc	(___xxtofl@arg+3)^0,f,c
  6795   0026FE  90D8               	bcf	status,0,c
  6796   002700  3213               	rrcf	(___xxtofl@arg+3)^0,f,c
  6797   002702  3212               	rrcf	(___xxtofl@arg+2)^0,f,c
  6798   002704  3211               	rrcf	(___xxtofl@arg+1)^0,f,c
  6799   002706  3210               	rrcf	___xxtofl@arg^0,f,c
  6800   002708                     l785:
  6801   002708  0E00               	movlw	0
  6802   00270A  1410               	andwf	___xxtofl@arg^0,w,c
  6803   00270C  6E0A               	movwf	??___xxtofl^0,c
  6804   00270E  0E00               	movlw	0
  6805   002710  1411               	andwf	(___xxtofl@arg+1)^0,w,c
  6806   002712  6E0B               	movwf	(??___xxtofl+1)^0,c
  6807   002714  0E00               	movlw	0
  6808   002716  1412               	andwf	(___xxtofl@arg+2)^0,w,c
  6809   002718  6E0C               	movwf	(??___xxtofl+2)^0,c
  6810   00271A  0EFF               	movlw	255
  6811   00271C  1413               	andwf	(___xxtofl@arg+3)^0,w,c
  6812   00271E  6E0D               	movwf	(??___xxtofl+3)^0,c
  6813   002720  500A               	movf	??___xxtofl^0,w,c
  6814   002722  100B               	iorwf	(??___xxtofl+1)^0,w,c
  6815   002724  100C               	iorwf	(??___xxtofl+2)^0,w,c
  6816   002726  100D               	iorwf	(??___xxtofl+3)^0,w,c
  6817   002728  A4D8               	btfss	status,2,c
  6818   00272A  EF99  F013         	goto	u3711
  6819   00272E  EF9B  F013         	goto	u3710
  6820   002732                     u3711:
  6821   002732  EF78  F013         	goto	l3582
  6822   002736                     u3710:
  6823   002736  EFA3  F013         	goto	l3590
  6824   00273A                     l3588:
  6825   00273A  060F               	decf	___xxtofl@exp^0,f,c
  6826   00273C  90D8               	bcf	status,0,c
  6827   00273E  3610               	rlcf	___xxtofl@arg^0,f,c
  6828   002740  3611               	rlcf	(___xxtofl@arg+1)^0,f,c
  6829   002742  3612               	rlcf	(___xxtofl@arg+2)^0,f,c
  6830   002744  3613               	rlcf	(___xxtofl@arg+3)^0,f,c
  6831   002746                     l3590:
  6832   002746  BE12               	btfsc	(___xxtofl@arg+2)^0,7,c
  6833   002748  EFA8  F013         	goto	u3721
  6834   00274C  EFAA  F013         	goto	u3720
  6835   002750                     u3721:
  6836   002750  EFB2  F013         	goto	l792
  6837   002754                     u3720:
  6838   002754  0E02               	movlw	2
  6839   002756  600F               	cpfslt	___xxtofl@exp^0,c
  6840   002758  EFB0  F013         	goto	u3731
  6841   00275C  EFB2  F013         	goto	u3730
  6842   002760                     u3731:
  6843   002760  EF9D  F013         	goto	l3588
  6844   002764                     u3730:
  6845   002764                     l792:
  6846   002764  B00F               	btfsc	___xxtofl@exp^0,0,c
  6847   002766  EFB7  F013         	goto	u3741
  6848   00276A  EFB9  F013         	goto	u3740
  6849   00276E                     u3741:
  6850   00276E  EFBA  F013         	goto	l3596
  6851   002772                     u3740:
  6852   002772  9E12               	bcf	(___xxtofl@arg+2)^0,7,c
  6853   002774                     l3596:
  6854   002774  90D8               	bcf	status,0,c
  6855   002776  320F               	rrcf	___xxtofl@exp^0,f,c
  6856   002778  C00F  F00A         	movff	___xxtofl@exp,??___xxtofl
  6857   00277C  6A0B               	clrf	(??___xxtofl+1)^0,c
  6858   00277E  6A0C               	clrf	(??___xxtofl+2)^0,c
  6859   002780  6A0D               	clrf	(??___xxtofl+3)^0,c
  6860   002782  C00A  F00D         	movff	??___xxtofl,??___xxtofl+3
  6861   002786  6A0C               	clrf	(??___xxtofl+2)^0,c
  6862   002788  6A0B               	clrf	(??___xxtofl+1)^0,c
  6863   00278A  6A0A               	clrf	??___xxtofl^0,c
  6864   00278C  500A               	movf	??___xxtofl^0,w,c
  6865   00278E  1210               	iorwf	___xxtofl@arg^0,f,c
  6866   002790  500B               	movf	(??___xxtofl+1)^0,w,c
  6867   002792  1211               	iorwf	(___xxtofl@arg+1)^0,f,c
  6868   002794  500C               	movf	(??___xxtofl+2)^0,w,c
  6869   002796  1212               	iorwf	(___xxtofl@arg+2)^0,f,c
  6870   002798  500D               	movf	(??___xxtofl+3)^0,w,c
  6871   00279A  1213               	iorwf	(___xxtofl@arg+3)^0,f,c
  6872   00279C  500E               	movf	___xxtofl@sign^0,w,c
  6873   00279E  B4D8               	btfsc	status,2,c
  6874   0027A0  EFD4  F013         	goto	u3751
  6875   0027A4  EFD6  F013         	goto	u3750
  6876   0027A8                     u3751:
  6877   0027A8  EFDE  F013         	goto	l3606
  6878   0027AC                     u3750:
  6879   0027AC  BE09               	btfsc	(___xxtofl@val+3)^0,7,c
  6880   0027AE  EFDD  F013         	goto	u3760
  6881   0027B2  EFDB  F013         	goto	u3761
  6882   0027B6                     u3761:
  6883   0027B6  EFDE  F013         	goto	l3606
  6884   0027BA                     u3760:
  6885   0027BA  8E13               	bsf	(___xxtofl@arg+3)^0,7,c
  6886   0027BC                     l3606:
  6887   0027BC  C010  F006         	movff	___xxtofl@arg,?___xxtofl
  6888   0027C0  C011  F007         	movff	___xxtofl@arg+1,?___xxtofl+1
  6889   0027C4  C012  F008         	movff	___xxtofl@arg+2,?___xxtofl+2
  6890   0027C8  C013  F009         	movff	___xxtofl@arg+3,?___xxtofl+3
  6891   0027CC                     l781:
  6892   0027CC  0012               	return		;funcret
  6893   0027CE                     __end_of___xxtofl:
  6894                           	callstack 0
  6895                           
  6896 ;; *************** function _Lcd_Write_String *****************
  6897 ;; Defined at:
  6898 ;;		line 97 in file "lcd.c"
  6899 ;; Parameters:    Size  Location     Type
  6900 ;;  a               2    4[COMRAM] PTR unsigned char 
  6901 ;;		 -> str_buffeLcd(20), 
  6902 ;; Auto vars:     Size  Location     Type
  6903 ;;  i               2    6[COMRAM] int 
  6904 ;; Return value:  Size  Location     Type
  6905 ;;                  1    wreg      void 
  6906 ;; Registers used:
  6907 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6908 ;; Tracked objects:
  6909 ;;		On entry : 0/0
  6910 ;;		On exit  : 0/0
  6911 ;;		Unchanged: 0/0
  6912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6913 ;;      Params:         2       0       0       0       0       0       0       0       0
  6914 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6915 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6916 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6917 ;;Total ram usage:        4 bytes
  6918 ;; Hardware stack levels used: 1
  6919 ;; Hardware stack levels required when called: 2
  6920 ;; This function calls:
  6921 ;;		_Lcd_Write_Char
  6922 ;; This function is called by:
  6923 ;;		_main
  6924 ;; This function uses a non-reentrant model
  6925 ;;
  6926                           
  6927                           	psect	text27
  6928   0031AA                     __ptext27:
  6929                           	callstack 0
  6930   0031AA                     _Lcd_Write_String:
  6931                           	callstack 28
  6932   0031AA                     
  6933                           ;lcd.c: 97: void Lcd_Write_String(unsigned char *a);lcd.c: 98: {;lcd.c: 99:  int i;;lcd.
      +                          c: 100:  for(i=0;a[i]!='\0';i++)
  6934   0031AA  0E00               	movlw	0
  6935   0031AC  6E08               	movwf	(Lcd_Write_String@i+1)^0,c
  6936   0031AE  0E00               	movlw	0
  6937   0031B0  6E07               	movwf	Lcd_Write_String@i^0,c
  6938   0031B2  EFE6  F018         	goto	l3562
  6939   0031B6                     l3558:
  6940                           
  6941                           ;lcd.c: 101:     Lcd_Write_Char(a[i]);
  6942   0031B6  5007               	movf	Lcd_Write_String@i^0,w,c
  6943   0031B8  2405               	addwf	Lcd_Write_String@a^0,w,c
  6944   0031BA  6ED9               	movwf	fsr2l,c
  6945   0031BC  5008               	movf	(Lcd_Write_String@i+1)^0,w,c
  6946   0031BE  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
  6947   0031C0  6EDA               	movwf	fsr2h,c
  6948   0031C2  50DF               	movf	indf2,w,c
  6949   0031C4  EC11  F019         	call	_Lcd_Write_Char
  6950   0031C8  4A07               	infsnz	Lcd_Write_String@i^0,f,c
  6951   0031CA  2A08               	incf	(Lcd_Write_String@i+1)^0,f,c
  6952   0031CC                     l3562:
  6953   0031CC  5007               	movf	Lcd_Write_String@i^0,w,c
  6954   0031CE  2405               	addwf	Lcd_Write_String@a^0,w,c
  6955   0031D0  6ED9               	movwf	fsr2l,c
  6956   0031D2  5008               	movf	(Lcd_Write_String@i+1)^0,w,c
  6957   0031D4  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
  6958   0031D6  6EDA               	movwf	fsr2h,c
  6959   0031D8  50DF               	movf	indf2,w,c
  6960   0031DA  A4D8               	btfss	status,2,c
  6961   0031DC  EFF2  F018         	goto	u3661
  6962   0031E0  EFF4  F018         	goto	u3660
  6963   0031E4                     u3661:
  6964   0031E4  EFDB  F018         	goto	l3558
  6965   0031E8                     u3660:
  6966   0031E8  0012               	return		;funcret
  6967   0031EA                     __end_of_Lcd_Write_String:
  6968                           	callstack 0
  6969                           
  6970 ;; *************** function _Lcd_Write_Char *****************
  6971 ;; Defined at:
  6972 ;;		line 81 in file "lcd.c"
  6973 ;; Parameters:    Size  Location     Type
  6974 ;;  a               1    wreg     unsigned char 
  6975 ;; Auto vars:     Size  Location     Type
  6976 ;;  a               1    3[COMRAM] unsigned char 
  6977 ;;  y               1    2[COMRAM] unsigned char 
  6978 ;;  temp            1    1[COMRAM] unsigned char 
  6979 ;; Return value:  Size  Location     Type
  6980 ;;                  1    wreg      void 
  6981 ;; Registers used:
  6982 ;;		wreg, status,2, status,0, cstack
  6983 ;; Tracked objects:
  6984 ;;		On entry : 0/0
  6985 ;;		On exit  : 0/0
  6986 ;;		Unchanged: 0/0
  6987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6988 ;;      Params:         0       0       0       0       0       0       0       0       0
  6989 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6990 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6991 ;;      Totals:         3       0       0       0       0       0       0       0       0
  6992 ;;Total ram usage:        3 bytes
  6993 ;; Hardware stack levels used: 1
  6994 ;; Hardware stack levels required when called: 1
  6995 ;; This function calls:
  6996 ;;		_Lcd_Port
  6997 ;; This function is called by:
  6998 ;;		_Lcd_Write_String
  6999 ;; This function uses a non-reentrant model
  7000 ;;
  7001                           
  7002                           	psect	text28
  7003   003222                     __ptext28:
  7004                           	callstack 0
  7005   003222                     _Lcd_Write_Char:
  7006                           	callstack 28
  7007                           
  7008                           ;incstack = 0
  7009                           ;Lcd_Write_Char@a stored from wreg
  7010   003222  6E04               	movwf	Lcd_Write_Char@a^0,c
  7011   003224                     
  7012                           ;lcd.c: 81: void Lcd_Write_Char(unsigned char a);lcd.c: 82: {;lcd.c: 83:    char temp,y;
      +                          ;lcd.c: 84:    temp = a&0x0F;
  7013   003224  5004               	movf	Lcd_Write_Char@a^0,w,c
  7014   003226  0B0F               	andlw	15
  7015   003228  6E02               	movwf	Lcd_Write_Char@temp^0,c
  7016                           
  7017                           ;lcd.c: 85:    y = a&0xF0;
  7018   00322A  5004               	movf	Lcd_Write_Char@a^0,w,c
  7019   00322C  0BF0               	andlw	240
  7020   00322E  6E03               	movwf	Lcd_Write_Char@y^0,c
  7021   003230                     
  7022                           ;lcd.c: 86:    LATDbits.LATD2 = 1;
  7023   003230  848C               	bsf	140,2,c	;volatile
  7024   003232                     
  7025                           ;lcd.c: 87:    Lcd_Port(y>>4);
  7026   003232  3803               	swapf	Lcd_Write_Char@y^0,w,c
  7027   003234  0B0F               	andlw	15
  7028   003236  ECA7  F017         	call	_Lcd_Port
  7029   00323A                     
  7030                           ;lcd.c: 88:    LATDbits.LATD3 = 1;
  7031   00323A  868C               	bsf	140,3,c	;volatile
  7032   00323C                     
  7033                           ;lcd.c: 89:    _delay((unsigned long)((40)*(16000000/4000000.0)));
  7034   00323C  0E35               	movlw	53
  7035   00323E                     u3787:
  7036   00323E  2EE8               	decfsz	wreg,f,c
  7037   003240  D7FE               	bra	u3787
  7038   003242  F000               	nop	
  7039   003244                     
  7040                           ;lcd.c: 90:    LATDbits.LATD3 = 0;
  7041   003244  968C               	bcf	140,3,c	;volatile
  7042   003246                     
  7043                           ;lcd.c: 91:    Lcd_Port(temp);
  7044   003246  5002               	movf	Lcd_Write_Char@temp^0,w,c
  7045   003248  ECA7  F017         	call	_Lcd_Port
  7046   00324C                     
  7047                           ;lcd.c: 92:    LATDbits.LATD3 = 1;
  7048   00324C  868C               	bsf	140,3,c	;volatile
  7049   00324E                     
  7050                           ;lcd.c: 93:    _delay((unsigned long)((40)*(16000000/4000000.0)));
  7051   00324E  0E35               	movlw	53
  7052   003250                     u3797:
  7053   003250  2EE8               	decfsz	wreg,f,c
  7054   003252  D7FE               	bra	u3797
  7055   003254  F000               	nop	
  7056   003256                     
  7057                           ;lcd.c: 94:    LATDbits.LATD3 = 0;
  7058   003256  968C               	bcf	140,3,c	;volatile
  7059   003258  0012               	return		;funcret
  7060   00325A                     __end_of_Lcd_Write_Char:
  7061                           	callstack 0
  7062                           
  7063 ;; *************** function _Lcd_Set_Cursor *****************
  7064 ;; Defined at:
  7065 ;;		line 41 in file "lcd.c"
  7066 ;; Parameters:    Size  Location     Type
  7067 ;;  a               1    wreg     unsigned char 
  7068 ;;  b               1    3[COMRAM] unsigned char 
  7069 ;; Auto vars:     Size  Location     Type
  7070 ;;  a               1    4[COMRAM] unsigned char 
  7071 ;;  temp            1    7[COMRAM] unsigned char 
  7072 ;;  y               1    6[COMRAM] unsigned char 
  7073 ;;  z               1    5[COMRAM] unsigned char 
  7074 ;; Return value:  Size  Location     Type
  7075 ;;                  1    wreg      void 
  7076 ;; Registers used:
  7077 ;;		wreg, status,2, status,0, cstack
  7078 ;; Tracked objects:
  7079 ;;		On entry : 0/0
  7080 ;;		On exit  : 0/0
  7081 ;;		Unchanged: 0/0
  7082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7083 ;;      Params:         1       0       0       0       0       0       0       0       0
  7084 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7085 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7086 ;;      Totals:         5       0       0       0       0       0       0       0       0
  7087 ;;Total ram usage:        5 bytes
  7088 ;; Hardware stack levels used: 1
  7089 ;; Hardware stack levels required when called: 2
  7090 ;; This function calls:
  7091 ;;		_Lcd_Cmd
  7092 ;; This function is called by:
  7093 ;;		_main
  7094 ;; This function uses a non-reentrant model
  7095 ;;
  7096                           
  7097                           	psect	text29
  7098   002EE8                     __ptext29:
  7099                           	callstack 0
  7100   002EE8                     _Lcd_Set_Cursor:
  7101                           	callstack 28
  7102                           
  7103                           ;incstack = 0
  7104                           ;Lcd_Set_Cursor@a stored from wreg
  7105   002EE8  6E05               	movwf	Lcd_Set_Cursor@a^0,c
  7106   002EEA                     
  7107                           ;lcd.c: 41: void Lcd_Set_Cursor(unsigned char a, unsigned char b);lcd.c: 42: {;lcd.c: 43
      +                          :  char temp,z,y;;lcd.c: 44:  if(a == 1)
  7108   002EEA  0405               	decf	Lcd_Set_Cursor@a^0,w,c
  7109   002EEC  A4D8               	btfss	status,2,c
  7110   002EEE  EF7B  F017         	goto	u3641
  7111   002EF2  EF7D  F017         	goto	u3640
  7112   002EF6                     u3641:
  7113   002EF6  EF8E  F017         	goto	l3548
  7114   002EFA                     u3640:
  7115   002EFA                     
  7116                           ;lcd.c: 45:  {;lcd.c: 46:    temp = 0x80 + b - 1;
  7117   002EFA  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  7118   002EFC  0F7F               	addlw	127
  7119   002EFE  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  7120                           
  7121                           ;lcd.c: 47:   z = temp>>4;
  7122   002F00  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  7123   002F02  0B0F               	andlw	15
  7124   002F04  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  7125                           
  7126                           ;lcd.c: 48:   y = temp & 0x0F;
  7127   002F06  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  7128   002F08  0B0F               	andlw	15
  7129   002F0A  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  7130   002F0C                     
  7131                           ;lcd.c: 49:   Lcd_Cmd(z);
  7132   002F0C  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  7133   002F0E  EC83  F019         	call	_Lcd_Cmd
  7134   002F12                     
  7135                           ;lcd.c: 50:   Lcd_Cmd(y);
  7136   002F12  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  7137   002F14  EC83  F019         	call	_Lcd_Cmd
  7138                           
  7139                           ;lcd.c: 51:  }
  7140   002F18  EFA6  F017         	goto	l102
  7141   002F1C                     l3548:
  7142   002F1C  0E02               	movlw	2
  7143   002F1E  1805               	xorwf	Lcd_Set_Cursor@a^0,w,c
  7144   002F20  A4D8               	btfss	status,2,c
  7145   002F22  EF95  F017         	goto	u3651
  7146   002F26  EF97  F017         	goto	u3650
  7147   002F2A                     u3651:
  7148   002F2A  EFA6  F017         	goto	l102
  7149   002F2E                     u3650:
  7150   002F2E                     
  7151                           ;lcd.c: 53:  {;lcd.c: 54:   temp = 0xC0 + b - 1;
  7152   002F2E  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  7153   002F30  0FBF               	addlw	191
  7154   002F32  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  7155                           
  7156                           ;lcd.c: 55:   z = temp>>4;
  7157   002F34  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  7158   002F36  0B0F               	andlw	15
  7159   002F38  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  7160                           
  7161                           ;lcd.c: 56:   y = temp & 0x0F;
  7162   002F3A  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  7163   002F3C  0B0F               	andlw	15
  7164   002F3E  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  7165   002F40                     
  7166                           ;lcd.c: 57:   Lcd_Cmd(z);
  7167   002F40  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  7168   002F42  EC83  F019         	call	_Lcd_Cmd
  7169   002F46                     
  7170                           ;lcd.c: 58:   Lcd_Cmd(y);
  7171   002F46  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  7172   002F48  EC83  F019         	call	_Lcd_Cmd
  7173   002F4C                     l102:
  7174   002F4C  0012               	return		;funcret
  7175   002F4E                     __end_of_Lcd_Set_Cursor:
  7176                           	callstack 0
  7177                           
  7178 ;; *************** function _Lcd_Init *****************
  7179 ;; Defined at:
  7180 ;;		line 62 in file "lcd.c"
  7181 ;; Parameters:    Size  Location     Type
  7182 ;;		None
  7183 ;; Auto vars:     Size  Location     Type
  7184 ;;		None
  7185 ;; Return value:  Size  Location     Type
  7186 ;;                  1    wreg      void 
  7187 ;; Registers used:
  7188 ;;		wreg, status,2, cstack
  7189 ;; Tracked objects:
  7190 ;;		On entry : 0/0
  7191 ;;		On exit  : 0/0
  7192 ;;		Unchanged: 0/0
  7193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7194 ;;      Params:         0       0       0       0       0       0       0       0       0
  7195 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7196 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7197 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7198 ;;Total ram usage:        1 bytes
  7199 ;; Hardware stack levels used: 1
  7200 ;; Hardware stack levels required when called: 2
  7201 ;; This function calls:
  7202 ;;		_Lcd_Cmd
  7203 ;;		_Lcd_Port
  7204 ;; This function is called by:
  7205 ;;		_main
  7206 ;; This function uses a non-reentrant model
  7207 ;;
  7208                           
  7209                           	psect	text30
  7210   002E0E                     __ptext30:
  7211                           	callstack 0
  7212   002E0E                     _Lcd_Init:
  7213                           	callstack 28
  7214   002E0E                     
  7215                           ;lcd.c: 64:   Lcd_Port(0x00);
  7216   002E0E  0E00               	movlw	0
  7217   002E10  ECA7  F017         	call	_Lcd_Port
  7218   002E14                     
  7219                           ;lcd.c: 65:    _delay((unsigned long)((20)*(16000000/4000.0)));
  7220   002E14  0E68               	movlw	104
  7221   002E16  6E04               	movwf	??_Lcd_Init^0,c
  7222   002E18  0EE4               	movlw	228
  7223   002E1A                     u3807:
  7224   002E1A  2EE8               	decfsz	wreg,f,c
  7225   002E1C  D7FE               	bra	u3807
  7226   002E1E  2E04               	decfsz	??_Lcd_Init^0,f,c
  7227   002E20  D7FC               	bra	u3807
  7228   002E22  D000               	nop2	
  7229   002E24                     
  7230                           ;lcd.c: 66:   Lcd_Cmd(0x03);
  7231   002E24  0E03               	movlw	3
  7232   002E26  EC83  F019         	call	_Lcd_Cmd
  7233   002E2A                     
  7234                           ;lcd.c: 67:  _delay((unsigned long)((5)*(16000000/4000.0)));
  7235   002E2A  0E1A               	movlw	26
  7236   002E2C  6E04               	movwf	??_Lcd_Init^0,c
  7237   002E2E  0EF8               	movlw	248
  7238   002E30                     u3817:
  7239   002E30  2EE8               	decfsz	wreg,f,c
  7240   002E32  D7FE               	bra	u3817
  7241   002E34  2E04               	decfsz	??_Lcd_Init^0,f,c
  7242   002E36  D7FC               	bra	u3817
  7243   002E38  D000               	nop2	
  7244   002E3A                     
  7245                           ;lcd.c: 68:   Lcd_Cmd(0x03);
  7246   002E3A  0E03               	movlw	3
  7247   002E3C  EC83  F019         	call	_Lcd_Cmd
  7248   002E40                     
  7249                           ;lcd.c: 69:  _delay((unsigned long)((11)*(16000000/4000.0)));
  7250   002E40  0E3A               	movlw	58
  7251   002E42  6E04               	movwf	??_Lcd_Init^0,c
  7252   002E44  0E23               	movlw	35
  7253   002E46                     u3827:
  7254   002E46  2EE8               	decfsz	wreg,f,c
  7255   002E48  D7FE               	bra	u3827
  7256   002E4A  2E04               	decfsz	??_Lcd_Init^0,f,c
  7257   002E4C  D7FC               	bra	u3827
  7258   002E4E  F000               	nop	
  7259   002E50                     
  7260                           ;lcd.c: 70:   Lcd_Cmd(0x03);
  7261   002E50  0E03               	movlw	3
  7262   002E52  EC83  F019         	call	_Lcd_Cmd
  7263   002E56                     
  7264                           ;lcd.c: 72:   Lcd_Cmd(0x02);
  7265   002E56  0E02               	movlw	2
  7266   002E58  EC83  F019         	call	_Lcd_Cmd
  7267   002E5C                     
  7268                           ;lcd.c: 73:   Lcd_Cmd(0x02);
  7269   002E5C  0E02               	movlw	2
  7270   002E5E  EC83  F019         	call	_Lcd_Cmd
  7271   002E62                     
  7272                           ;lcd.c: 74:   Lcd_Cmd(0x08);
  7273   002E62  0E08               	movlw	8
  7274   002E64  EC83  F019         	call	_Lcd_Cmd
  7275   002E68                     
  7276                           ;lcd.c: 75:   Lcd_Cmd(0x00);
  7277   002E68  0E00               	movlw	0
  7278   002E6A  EC83  F019         	call	_Lcd_Cmd
  7279   002E6E                     
  7280                           ;lcd.c: 76:   Lcd_Cmd(0x0C);
  7281   002E6E  0E0C               	movlw	12
  7282   002E70  EC83  F019         	call	_Lcd_Cmd
  7283   002E74                     
  7284                           ;lcd.c: 77:   Lcd_Cmd(0x00);
  7285   002E74  0E00               	movlw	0
  7286   002E76  EC83  F019         	call	_Lcd_Cmd
  7287   002E7A                     
  7288                           ;lcd.c: 78:   Lcd_Cmd(0x06);
  7289   002E7A  0E06               	movlw	6
  7290   002E7C  EC83  F019         	call	_Lcd_Cmd
  7291   002E80  0012               	return		;funcret
  7292   002E82                     __end_of_Lcd_Init:
  7293                           	callstack 0
  7294                           
  7295 ;; *************** function _Lcd_Clear *****************
  7296 ;; Defined at:
  7297 ;;		line 35 in file "lcd.c"
  7298 ;; Parameters:    Size  Location     Type
  7299 ;;		None
  7300 ;; Auto vars:     Size  Location     Type
  7301 ;;		None
  7302 ;; Return value:  Size  Location     Type
  7303 ;;                  1    wreg      void 
  7304 ;; Registers used:
  7305 ;;		wreg, status,2, cstack
  7306 ;; Tracked objects:
  7307 ;;		On entry : 0/0
  7308 ;;		On exit  : 0/0
  7309 ;;		Unchanged: 0/0
  7310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7311 ;;      Params:         0       0       0       0       0       0       0       0       0
  7312 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7313 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7314 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7315 ;;Total ram usage:        0 bytes
  7316 ;; Hardware stack levels used: 1
  7317 ;; Hardware stack levels required when called: 2
  7318 ;; This function calls:
  7319 ;;		_Lcd_Cmd
  7320 ;; This function is called by:
  7321 ;;		_main
  7322 ;; This function uses a non-reentrant model
  7323 ;;
  7324                           
  7325                           	psect	text31
  7326   003364                     __ptext31:
  7327                           	callstack 0
  7328   003364                     _Lcd_Clear:
  7329                           	callstack 28
  7330   003364                     
  7331                           ;lcd.c: 37:  Lcd_Cmd(0);
  7332   003364  0E00               	movlw	0
  7333   003366  EC83  F019         	call	_Lcd_Cmd
  7334                           
  7335                           ;lcd.c: 38:  Lcd_Cmd(1);
  7336   00336A  0E01               	movlw	1
  7337   00336C  EC83  F019         	call	_Lcd_Cmd
  7338   003370  0012               	return		;funcret
  7339   003372                     __end_of_Lcd_Clear:
  7340                           	callstack 0
  7341                           
  7342 ;; *************** function _Lcd_Cmd *****************
  7343 ;; Defined at:
  7344 ;;		line 26 in file "lcd.c"
  7345 ;; Parameters:    Size  Location     Type
  7346 ;;  a               1    wreg     unsigned char 
  7347 ;; Auto vars:     Size  Location     Type
  7348 ;;  a               1    2[COMRAM] unsigned char 
  7349 ;; Return value:  Size  Location     Type
  7350 ;;                  1    wreg      void 
  7351 ;; Registers used:
  7352 ;;		wreg, status,2, cstack
  7353 ;; Tracked objects:
  7354 ;;		On entry : 0/0
  7355 ;;		On exit  : 0/0
  7356 ;;		Unchanged: 0/0
  7357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7358 ;;      Params:         0       0       0       0       0       0       0       0       0
  7359 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7360 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7361 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7362 ;;Total ram usage:        2 bytes
  7363 ;; Hardware stack levels used: 1
  7364 ;; Hardware stack levels required when called: 1
  7365 ;; This function calls:
  7366 ;;		_Lcd_Port
  7367 ;; This function is called by:
  7368 ;;		_Lcd_Clear
  7369 ;;		_Lcd_Set_Cursor
  7370 ;;		_Lcd_Init
  7371 ;;		_Lcd_Shift_Right
  7372 ;;		_Lcd_Shift_Left
  7373 ;; This function uses a non-reentrant model
  7374 ;;
  7375                           
  7376                           	psect	text32
  7377   003306                     __ptext32:
  7378                           	callstack 0
  7379   003306                     _Lcd_Cmd:
  7380                           	callstack 28
  7381                           
  7382                           ;incstack = 0
  7383                           ;Lcd_Cmd@a stored from wreg
  7384   003306  6E03               	movwf	Lcd_Cmd@a^0,c
  7385   003308                     
  7386                           ;lcd.c: 26: void Lcd_Cmd(unsigned char a);lcd.c: 27: {;lcd.c: 28:  LATDbits.LATD2 = 0;
  7387   003308  948C               	bcf	140,2,c	;volatile
  7388   00330A                     
  7389                           ;lcd.c: 29:  Lcd_Port(a);
  7390   00330A  5003               	movf	Lcd_Cmd@a^0,w,c
  7391   00330C  ECA7  F017         	call	_Lcd_Port
  7392   003310                     
  7393                           ;lcd.c: 30:  LATDbits.LATD3 = 1;
  7394   003310  868C               	bsf	140,3,c	;volatile
  7395   003312                     
  7396                           ;lcd.c: 31:         _delay((unsigned long)((4)*(16000000/4000.0)));
  7397   003312  0E15               	movlw	21
  7398   003314  6E02               	movwf	??_Lcd_Cmd^0,c
  7399   003316  0EC6               	movlw	198
  7400   003318                     u3837:
  7401   003318  2EE8               	decfsz	wreg,f,c
  7402   00331A  D7FE               	bra	u3837
  7403   00331C  2E02               	decfsz	??_Lcd_Cmd^0,f,c
  7404   00331E  D7FC               	bra	u3837
  7405   003320  D000               	nop2	
  7406   003322                     
  7407                           ;lcd.c: 32:         LATDbits.LATD3 = 0;
  7408   003322  968C               	bcf	140,3,c	;volatile
  7409   003324  0012               	return		;funcret
  7410   003326                     __end_of_Lcd_Cmd:
  7411                           	callstack 0
  7412                           
  7413 ;; *************** function _Lcd_Port *****************
  7414 ;; Defined at:
  7415 ;;		line 3 in file "lcd.c"
  7416 ;; Parameters:    Size  Location     Type
  7417 ;;  a               1    wreg     unsigned char 
  7418 ;; Auto vars:     Size  Location     Type
  7419 ;;  a               1    0[COMRAM] unsigned char 
  7420 ;; Return value:  Size  Location     Type
  7421 ;;                  1    wreg      void 
  7422 ;; Registers used:
  7423 ;;		wreg
  7424 ;; Tracked objects:
  7425 ;;		On entry : 0/0
  7426 ;;		On exit  : 0/0
  7427 ;;		Unchanged: 0/0
  7428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7429 ;;      Params:         0       0       0       0       0       0       0       0       0
  7430 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7431 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7432 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7433 ;;Total ram usage:        1 bytes
  7434 ;; Hardware stack levels used: 1
  7435 ;; This function calls:
  7436 ;;		Nothing
  7437 ;; This function is called by:
  7438 ;;		_Lcd_Cmd
  7439 ;;		_Lcd_Init
  7440 ;;		_Lcd_Write_Char
  7441 ;; This function uses a non-reentrant model
  7442 ;;
  7443                           
  7444                           	psect	text33
  7445   002F4E                     __ptext33:
  7446                           	callstack 0
  7447   002F4E                     _Lcd_Port:
  7448                           	callstack 28
  7449                           
  7450                           ;incstack = 0
  7451                           ;Lcd_Port@a stored from wreg
  7452   002F4E  6E01               	movwf	Lcd_Port@a^0,c
  7453   002F50                     
  7454                           ;lcd.c: 3: void Lcd_Port(unsigned char a);lcd.c: 4: {;lcd.c: 5:  if(a & 1)
  7455   002F50  A001               	btfss	Lcd_Port@a^0,0,c
  7456   002F52  EFAD  F017         	goto	u3531
  7457   002F56  EFAF  F017         	goto	u3530
  7458   002F5A                     u3531:
  7459   002F5A  EFB2  F017         	goto	l82
  7460   002F5E                     u3530:
  7461   002F5E                     
  7462                           ;lcd.c: 6:   LATDbits.LATD4 = 1;
  7463   002F5E  888C               	bsf	140,4,c	;volatile
  7464   002F60  EFB3  F017         	goto	l3328
  7465   002F64                     l82:
  7466                           
  7467                           ;lcd.c: 8:   LATDbits.LATD4 = 0;
  7468   002F64  988C               	bcf	140,4,c	;volatile
  7469   002F66                     l3328:
  7470                           
  7471                           ;lcd.c: 10:  if(a & 2)
  7472   002F66  A201               	btfss	Lcd_Port@a^0,1,c
  7473   002F68  EFB8  F017         	goto	u3541
  7474   002F6C  EFBA  F017         	goto	u3540
  7475   002F70                     u3541:
  7476   002F70  EFBD  F017         	goto	l84
  7477   002F74                     u3540:
  7478   002F74                     
  7479                           ;lcd.c: 11:   LATDbits.LATD5 = 1;
  7480   002F74  8A8C               	bsf	140,5,c	;volatile
  7481   002F76  EFBE  F017         	goto	l3332
  7482   002F7A                     l84:
  7483                           
  7484                           ;lcd.c: 13:   LATDbits.LATD5 = 0;
  7485   002F7A  9A8C               	bcf	140,5,c	;volatile
  7486   002F7C                     l3332:
  7487                           
  7488                           ;lcd.c: 15:  if(a & 4)
  7489   002F7C  A401               	btfss	Lcd_Port@a^0,2,c
  7490   002F7E  EFC3  F017         	goto	u3551
  7491   002F82  EFC5  F017         	goto	u3550
  7492   002F86                     u3551:
  7493   002F86  EFC8  F017         	goto	l86
  7494   002F8A                     u3550:
  7495   002F8A                     
  7496                           ;lcd.c: 16:   LATDbits.LATD6 = 1;
  7497   002F8A  8C8C               	bsf	140,6,c	;volatile
  7498   002F8C  EFC9  F017         	goto	l3336
  7499   002F90                     l86:
  7500                           
  7501                           ;lcd.c: 18:   LATDbits.LATD6 = 0;
  7502   002F90  9C8C               	bcf	140,6,c	;volatile
  7503   002F92                     l3336:
  7504                           
  7505                           ;lcd.c: 20:  if(a & 8)
  7506   002F92  A601               	btfss	Lcd_Port@a^0,3,c
  7507   002F94  EFCE  F017         	goto	u3561
  7508   002F98  EFD0  F017         	goto	u3560
  7509   002F9C                     u3561:
  7510   002F9C  EFD3  F017         	goto	l88
  7511   002FA0                     u3560:
  7512   002FA0                     
  7513                           ;lcd.c: 21:   LATDbits.LATD7 = 1;
  7514   002FA0  8E8C               	bsf	140,7,c	;volatile
  7515   002FA2  EFD4  F017         	goto	l90
  7516   002FA6                     l88:
  7517                           
  7518                           ;lcd.c: 23:   LATDbits.LATD7 = 0;
  7519   002FA6  9E8C               	bcf	140,7,c	;volatile
  7520   002FA8                     l90:
  7521   002FA8  0012               	return		;funcret
  7522   002FAA                     __end_of_Lcd_Port:
  7523                           	callstack 0
  7524                           
  7525 ;; *************** function _Config_Port *****************
  7526 ;; Defined at:
  7527 ;;		line 60 in file "main.c"
  7528 ;; Parameters:    Size  Location     Type
  7529 ;;		None
  7530 ;; Auto vars:     Size  Location     Type
  7531 ;;		None
  7532 ;; Return value:  Size  Location     Type
  7533 ;;                  1    wreg      void 
  7534 ;; Registers used:
  7535 ;;		wreg, status,2
  7536 ;; Tracked objects:
  7537 ;;		On entry : 0/0
  7538 ;;		On exit  : 0/0
  7539 ;;		Unchanged: 0/0
  7540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7541 ;;      Params:         0       0       0       0       0       0       0       0       0
  7542 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7543 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7544 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7545 ;;Total ram usage:        0 bytes
  7546 ;; Hardware stack levels used: 1
  7547 ;; This function calls:
  7548 ;;		Nothing
  7549 ;; This function is called by:
  7550 ;;		_main
  7551 ;; This function uses a non-reentrant model
  7552 ;;
  7553                           
  7554                           	psect	text34
  7555   003326                     __ptext34:
  7556                           	callstack 0
  7557   003326                     _Config_Port:
  7558                           	callstack 30
  7559   003326                     
  7560                           ;main.c: 62:     LATD=0x00;
  7561   003326  0E00               	movlw	0
  7562   003328  6E8C               	movwf	140,c	;volatile
  7563                           
  7564                           ;main.c: 65:     SLRCON=0b00000000;
  7565   00332A  0E00               	movlw	0
  7566   00332C  6E7A               	movwf	122,c	;volatile
  7567   00332E                     
  7568                           ;main.c: 68:     ANSELBbits.ANSB0=1;
  7569   00332E  010F               	movlb	15	; () banked
  7570   003330  815C               	bsf	92,0,b	;volatile
  7571   003332                     
  7572                           ; BSR set to: 15
  7573                           ;main.c: 69:     ANSELBbits.ANSB1=1;
  7574   003332  835C               	bsf	92,1,b	;volatile
  7575   003334                     
  7576                           ; BSR set to: 15
  7577                           ;main.c: 70:     ANSELBbits.ANSB2=1;
  7578   003334  855C               	bsf	92,2,b	;volatile
  7579                           
  7580                           ;main.c: 72:     ANSELD = 0x00;
  7581   003336  0E00               	movlw	0
  7582   003338  6F5E               	movwf	94,b	;volatile
  7583                           
  7584                           ;main.c: 75:     TRISD=0x00;
  7585   00333A  0E00               	movlw	0
  7586   00333C  6E95               	movwf	149,c	;volatile
  7587   00333E                     
  7588                           ; BSR set to: 15
  7589                           ;main.c: 77:     TRISBbits.TRISB0 = 1;
  7590   00333E  8093               	bsf	147,0,c	;volatile
  7591   003340                     
  7592                           ; BSR set to: 15
  7593                           ;main.c: 78:     TRISBbits.TRISB1 = 1;
  7594   003340  8293               	bsf	147,1,c	;volatile
  7595   003342                     
  7596                           ; BSR set to: 15
  7597                           ;main.c: 79:     TRISBbits.TRISB2 = 1;
  7598   003342  8493               	bsf	147,2,c	;volatile
  7599   003344                     
  7600                           ; BSR set to: 15
  7601   003344  0012               	return		;funcret
  7602   003346                     __end_of_Config_Port:
  7603                           	callstack 0
  7604                           
  7605 ;; *************** function _Config_Clock *****************
  7606 ;; Defined at:
  7607 ;;		line 55 in file "main.c"
  7608 ;; Parameters:    Size  Location     Type
  7609 ;;		None
  7610 ;; Auto vars:     Size  Location     Type
  7611 ;;		None
  7612 ;; Return value:  Size  Location     Type
  7613 ;;                  1    wreg      void 
  7614 ;; Registers used:
  7615 ;;		wreg, status,2
  7616 ;; Tracked objects:
  7617 ;;		On entry : 0/0
  7618 ;;		On exit  : 0/0
  7619 ;;		Unchanged: 0/0
  7620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7621 ;;      Params:         0       0       0       0       0       0       0       0       0
  7622 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7623 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7624 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7625 ;;Total ram usage:        0 bytes
  7626 ;; Hardware stack levels used: 1
  7627 ;; This function calls:
  7628 ;;		Nothing
  7629 ;; This function is called by:
  7630 ;;		_main
  7631 ;; This function uses a non-reentrant model
  7632 ;;
  7633                           
  7634                           	psect	text35
  7635   003372                     __ptext35:
  7636                           	callstack 0
  7637   003372                     _Config_Clock:
  7638                           	callstack 30
  7639   003372                     
  7640                           ;main.c: 56:     OSCCONbits.IRCF=0b111;
  7641   003372  0E70               	movlw	112
  7642   003374  12D3               	iorwf	211,f,c	;volatile
  7643                           
  7644                           ;main.c: 57:     OSCCONbits.SCS=0b10;
  7645   003376  50D3               	movf	211,w,c	;volatile
  7646   003378  0BFC               	andlw	-4
  7647   00337A  0902               	iorlw	2
  7648   00337C  6ED3               	movwf	211,c	;volatile
  7649   00337E  0012               	return		;funcret
  7650   003380                     __end_of_Config_Clock:
  7651                           	callstack 0
  7652                           
  7653 ;; *************** function _ADC_Read *****************
  7654 ;; Defined at:
  7655 ;;		line 15 in file "ADC_libreria.c"
  7656 ;; Parameters:    Size  Location     Type
  7657 ;;  channel         1    wreg     enum E4854
  7658 ;; Auto vars:     Size  Location     Type
  7659 ;;  channel         1    4[COMRAM] enum E4854
  7660 ;; Return value:  Size  Location     Type
  7661 ;;                  2    0[COMRAM] unsigned short 
  7662 ;; Registers used:
  7663 ;;		wreg, status,2, status,0
  7664 ;; Tracked objects:
  7665 ;;		On entry : 0/0
  7666 ;;		On exit  : 0/0
  7667 ;;		Unchanged: 0/0
  7668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7669 ;;      Params:         2       0       0       0       0       0       0       0       0
  7670 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7671 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7672 ;;      Totals:         5       0       0       0       0       0       0       0       0
  7673 ;;Total ram usage:        5 bytes
  7674 ;; Hardware stack levels used: 1
  7675 ;; This function calls:
  7676 ;;		Nothing
  7677 ;; This function is called by:
  7678 ;;		_main
  7679 ;; This function uses a non-reentrant model
  7680 ;;
  7681                           
  7682                           	psect	text36
  7683   00325A                     __ptext36:
  7684                           	callstack 0
  7685   00325A                     _ADC_Read:
  7686                           	callstack 30
  7687                           
  7688                           ;incstack = 0
  7689                           ;ADC_Read@channel stored from wreg
  7690   00325A  6E05               	movwf	ADC_Read@channel^0,c
  7691   00325C                     
  7692                           ;ADC_libreria.c: 17:     ADCON0bits.CHS =channel;
  7693   00325C  C005  F003         	movff	ADC_Read@channel,??_ADC_Read
  7694   003260  4603               	rlncf	??_ADC_Read^0,f,c
  7695   003262  4603               	rlncf	??_ADC_Read^0,f,c
  7696   003264  50C2               	movf	194,w,c	;volatile
  7697   003266  1803               	xorwf	??_ADC_Read^0,w,c
  7698   003268  0B83               	andlw	-125
  7699   00326A  1803               	xorwf	??_ADC_Read^0,w,c
  7700   00326C  6EC2               	movwf	194,c	;volatile
  7701   00326E                     
  7702                           ;ADC_libreria.c: 18:     ADCON0bits.GO_DONE=1;
  7703   00326E  82C2               	bsf	194,1,c	;volatile
  7704   003270                     l16:
  7705   003270  B2C2               	btfsc	194,1,c	;volatile
  7706   003272  EF3D  F019         	goto	u3631
  7707   003276  EF3F  F019         	goto	u3630
  7708   00327A                     u3631:
  7709   00327A  EF38  F019         	goto	l16
  7710   00327E                     u3630:
  7711   00327E                     
  7712                           ;ADC_libreria.c: 20:     return (uint16_t)((ADRESH<<8)+(ADRESL));
  7713   00327E  50C4               	movf	196,w,c	;volatile
  7714   003280  6E04               	movwf	(??_ADC_Read+1)^0,c
  7715   003282  6A03               	clrf	??_ADC_Read^0,c
  7716   003284  50C3               	movf	195,w,c	;volatile
  7717   003286  2403               	addwf	??_ADC_Read^0,w,c
  7718   003288  6E01               	movwf	?_ADC_Read^0,c
  7719   00328A  0E00               	movlw	0
  7720   00328C  2004               	addwfc	(??_ADC_Read+1)^0,w,c
  7721   00328E  6E02               	movwf	(?_ADC_Read+1)^0,c
  7722   003290  0012               	return		;funcret
  7723   003292                     __end_of_ADC_Read:
  7724                           	callstack 0
  7725                           
  7726 ;; *************** function _ADC_Init *****************
  7727 ;; Defined at:
  7728 ;;		line 4 in file "ADC_libreria.c"
  7729 ;; Parameters:    Size  Location     Type
  7730 ;;		None
  7731 ;; Auto vars:     Size  Location     Type
  7732 ;;		None
  7733 ;; Return value:  Size  Location     Type
  7734 ;;                  1    wreg      void 
  7735 ;; Registers used:
  7736 ;;		wreg, status,2
  7737 ;; Tracked objects:
  7738 ;;		On entry : 0/0
  7739 ;;		On exit  : 0/0
  7740 ;;		Unchanged: 0/0
  7741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7742 ;;      Params:         0       0       0       0       0       0       0       0       0
  7743 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7744 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7745 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7746 ;;Total ram usage:        0 bytes
  7747 ;; Hardware stack levels used: 1
  7748 ;; This function calls:
  7749 ;;		Nothing
  7750 ;; This function is called by:
  7751 ;;		_main
  7752 ;; This function uses a non-reentrant model
  7753 ;;
  7754                           
  7755                           	psect	text37
  7756   003346                     __ptext37:
  7757                           	callstack 0
  7758   003346                     _ADC_Init:
  7759                           	callstack 30
  7760   003346                     
  7761                           ;ADC_libreria.c: 6:     ADCON1bits.PVCFG = 0b00;
  7762   003346  0EF3               	movlw	-13
  7763   003348  16C1               	andwf	193,f,c	;volatile
  7764                           
  7765                           ;ADC_libreria.c: 7:     ADCON1bits.NVCFG = 0b00;
  7766   00334A  0EFC               	movlw	-4
  7767   00334C  16C1               	andwf	193,f,c	;volatile
  7768   00334E                     
  7769                           ;ADC_libreria.c: 8:     ADCON2bits.ADFM = 1;
  7770   00334E  8EC0               	bsf	192,7,c	;volatile
  7771                           
  7772                           ;ADC_libreria.c: 9:     ADCON2bits.ACQT = 0b100;
  7773   003350  50C0               	movf	192,w,c	;volatile
  7774   003352  0BC7               	andlw	-57
  7775   003354  0920               	iorlw	32
  7776   003356  6EC0               	movwf	192,c	;volatile
  7777                           
  7778                           ;ADC_libreria.c: 10:     ADCON2bits.ADCS = 0b101;
  7779   003358  50C0               	movf	192,w,c	;volatile
  7780   00335A  0BF8               	andlw	-8
  7781   00335C  0905               	iorlw	5
  7782   00335E  6EC0               	movwf	192,c	;volatile
  7783   003360                     
  7784                           ;ADC_libreria.c: 11:     ADCON0bits.ADON = 1;
  7785   003360  80C2               	bsf	194,0,c	;volatile
  7786   003362  0012               	return		;funcret
  7787   003364                     __end_of_ADC_Init:
  7788                           	callstack 0
  7789                           
  7790                           	psect	rparam
  7791   000000                     
  7792                           	psect	idloc
  7793                           
  7794                           ;Config register IDLOC0 @ 0x200000
  7795                           ;	unspecified, using default values
  7796   200000                     	org	2097152
  7797   200000  FF                 	db	255
  7798                           
  7799                           ;Config register IDLOC1 @ 0x200001
  7800                           ;	unspecified, using default values
  7801   200001                     	org	2097153
  7802   200001  FF                 	db	255
  7803                           
  7804                           ;Config register IDLOC2 @ 0x200002
  7805                           ;	unspecified, using default values
  7806   200002                     	org	2097154
  7807   200002  FF                 	db	255
  7808                           
  7809                           ;Config register IDLOC3 @ 0x200003
  7810                           ;	unspecified, using default values
  7811   200003                     	org	2097155
  7812   200003  FF                 	db	255
  7813                           
  7814                           ;Config register IDLOC4 @ 0x200004
  7815                           ;	unspecified, using default values
  7816   200004                     	org	2097156
  7817   200004  FF                 	db	255
  7818                           
  7819                           ;Config register IDLOC5 @ 0x200005
  7820                           ;	unspecified, using default values
  7821   200005                     	org	2097157
  7822   200005  FF                 	db	255
  7823                           
  7824                           ;Config register IDLOC6 @ 0x200006
  7825                           ;	unspecified, using default values
  7826   200006                     	org	2097158
  7827   200006  FF                 	db	255
  7828                           
  7829                           ;Config register IDLOC7 @ 0x200007
  7830                           ;	unspecified, using default values
  7831   200007                     	org	2097159
  7832   200007  FF                 	db	255
  7833                           
  7834                           	psect	config
  7835                           
  7836                           ;Config register CONFIG1L @ 0x300000
  7837                           ;	PLL Selection
  7838                           ;	PLLSEL = PLL4X, 4x clock multiplier
  7839                           ;	PLL Enable Configuration bit
  7840                           ;	CFGPLLEN = OFF, PLL Disabled (firmware controlled)
  7841                           ;	CPU System Clock Postscaler
  7842                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
  7843                           ;	Low Speed USB mode with 48 MHz system clock
  7844                           ;	LS48MHZ = SYS24X4, System clock at 24 MHz, USB clock divider is set to 4
  7845   300000                     	org	3145728
  7846   300000  00                 	db	0
  7847                           
  7848                           ;Config register CONFIG1H @ 0x300001
  7849                           ;	Oscillator Selection
  7850                           ;	FOSC = INTOSCIO, Internal oscillator
  7851                           ;	Primary Oscillator Shutdown
  7852                           ;	PCLKEN = ON, Primary oscillator enabled
  7853                           ;	Fail-Safe Clock Monitor
  7854                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  7855                           ;	Internal/External Oscillator Switchover
  7856                           ;	IESO = OFF, Oscillator Switchover mode disabled
  7857   300001                     	org	3145729
  7858   300001  28                 	db	40
  7859                           
  7860                           ;Config register CONFIG2L @ 0x300002
  7861                           ;	Power-up Timer Enable
  7862                           ;	nPWRTEN = ON, Power up timer enabled
  7863                           ;	Brown-out Reset Enable
  7864                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
  7865                           ;	Brown-out Reset Voltage
  7866                           ;	BORV = 190, BOR set to 1.9V nominal
  7867                           ;	Low-Power Brown-out Reset
  7868                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  7869   300002                     	org	3145730
  7870   300002  5E                 	db	94
  7871                           
  7872                           ;Config register CONFIG2H @ 0x300003
  7873                           ;	Watchdog Timer Enable bits
  7874                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  7875                           ;	Watchdog Timer Postscaler
  7876                           ;	WDTPS = 32768, 1:32768
  7877   300003                     	org	3145731
  7878   300003  3C                 	db	60
  7879                           
  7880                           ; Padding undefined space
  7881   300004                     	org	3145732
  7882   300004  FF                 	db	255
  7883                           
  7884                           ;Config register CONFIG3H @ 0x300005
  7885                           ;	CCP2 MUX bit
  7886                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  7887                           ;	PORTB A/D Enable bit
  7888                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  7889                           ;	Timer3 Clock Input MUX bit
  7890                           ;	T3CMX = RC0, T3CKI function is on RC0
  7891                           ;	SDO Output MUX bit
  7892                           ;	SDOMX = RB3, SDO function is on RB3
  7893                           ;	Master Clear Reset Pin Enable
  7894                           ;	MCLRE = OFF, RE3 input pin enabled; external MCLR disabled
  7895   300005                     	org	3145733
  7896   300005  53                 	db	83
  7897                           
  7898                           ;Config register CONFIG4L @ 0x300006
  7899                           ;	Stack Full/Underflow Reset
  7900                           ;	STVREN = ON, Stack full/underflow will cause Reset
  7901                           ;	Single-Supply ICSP Enable bit
  7902                           ;	LVP = OFF, Single-Supply ICSP disabled
  7903                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  7904                           ;	ICPRT = OFF, ICPORT disabled
  7905                           ;	Extended Instruction Set Enable bit
  7906                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  7907                           ;	Background Debugger Enable bit
  7908                           ;	DEBUG = 0x1, unprogrammed default
  7909   300006                     	org	3145734
  7910   300006  81                 	db	129
  7911                           
  7912                           ; Padding undefined space
  7913   300007                     	org	3145735
  7914   300007  FF                 	db	255
  7915                           
  7916                           ;Config register CONFIG5L @ 0x300008
  7917                           ;	Block 0 Code Protect
  7918                           ;	CP0 = OFF, Block 0 is not code-protected
  7919                           ;	Block 1 Code Protect
  7920                           ;	CP1 = OFF, Block 1 is not code-protected
  7921                           ;	Block 2 Code Protect
  7922                           ;	CP2 = OFF, Block 2 is not code-protected
  7923                           ;	Block 3 Code Protect
  7924                           ;	CP3 = OFF, Block 3 is not code-protected
  7925   300008                     	org	3145736
  7926   300008  0F                 	db	15
  7927                           
  7928                           ;Config register CONFIG5H @ 0x300009
  7929                           ;	Boot Block Code Protect
  7930                           ;	CPB = OFF, Boot block is not code-protected
  7931                           ;	Data EEPROM Code Protect
  7932                           ;	CPD = OFF, Data EEPROM is not code-protected
  7933   300009                     	org	3145737
  7934   300009  C0                 	db	192
  7935                           
  7936                           ;Config register CONFIG6L @ 0x30000A
  7937                           ;	Block 0 Write Protect
  7938                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
  7939                           ;	Block 1 Write Protect
  7940                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
  7941                           ;	Block 2 Write Protect
  7942                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
  7943                           ;	Block 3 Write Protect
  7944                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
  7945   30000A                     	org	3145738
  7946   30000A  0F                 	db	15
  7947                           
  7948                           ;Config register CONFIG6H @ 0x30000B
  7949                           ;	Configuration Registers Write Protect
  7950                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  7951                           ;	Boot Block Write Protect
  7952                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
  7953                           ;	Data EEPROM Write Protect
  7954                           ;	WRTD = OFF, Data EEPROM is not write-protected
  7955   30000B                     	org	3145739
  7956   30000B  E0                 	db	224
  7957                           
  7958                           ;Config register CONFIG7L @ 0x30000C
  7959                           ;	Block 0 Table Read Protect
  7960                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
  7961                           ;	Block 1 Table Read Protect
  7962                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
  7963                           ;	Block 2 Table Read Protect
  7964                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
  7965                           ;	Block 3 Table Read Protect
  7966                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
  7967   30000C                     	org	3145740
  7968   30000C  0F                 	db	15
  7969                           
  7970                           ;Config register CONFIG7H @ 0x30000D
  7971                           ;	Boot Block Table Read Protect
  7972                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
  7973   30000D                     	org	3145741
  7974   30000D  40                 	db	64
  7975                           tosu	equ	0xFFF
  7976                           tosh	equ	0xFFE
  7977                           tosl	equ	0xFFD
  7978                           stkptr	equ	0xFFC
  7979                           pclatu	equ	0xFFB
  7980                           pclath	equ	0xFFA
  7981                           pcl	equ	0xFF9
  7982                           tblptru	equ	0xFF8
  7983                           tblptrh	equ	0xFF7
  7984                           tblptrl	equ	0xFF6
  7985                           tablat	equ	0xFF5
  7986                           prodh	equ	0xFF4
  7987                           prodl	equ	0xFF3
  7988                           indf0	equ	0xFEF
  7989                           postinc0	equ	0xFEE
  7990                           postdec0	equ	0xFED
  7991                           preinc0	equ	0xFEC
  7992                           plusw0	equ	0xFEB
  7993                           fsr0h	equ	0xFEA
  7994                           fsr0l	equ	0xFE9
  7995                           wreg	equ	0xFE8
  7996                           indf1	equ	0xFE7
  7997                           postinc1	equ	0xFE6
  7998                           postdec1	equ	0xFE5
  7999                           preinc1	equ	0xFE4
  8000                           plusw1	equ	0xFE3
  8001                           fsr1h	equ	0xFE2
  8002                           fsr1l	equ	0xFE1
  8003                           bsr	equ	0xFE0
  8004                           indf2	equ	0xFDF
  8005                           postinc2	equ	0xFDE
  8006                           postdec2	equ	0xFDD
  8007                           preinc2	equ	0xFDC
  8008                           plusw2	equ	0xFDB
  8009                           fsr2h	equ	0xFDA
  8010                           fsr2l	equ	0xFD9
  8011                           status	equ	0xFD8

Data Sizes:
    Strings     34
    Constant    0
    Data        0
    BSS         125
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     80     125
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_7(CODE[4]), STR_4(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_7(CODE[4]), STR_4(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_3(CODE[9]), STR_2(CODE[9]), STR_1(CODE[8]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_3(CODE[9]), STR_2(CODE[9]), STR_1(CODE[8]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 9
		 -> STR_3(CODE[9]), STR_2(CODE[9]), STR_1(CODE[8]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 9
		 -> STR_3(CODE[9]), STR_2(CODE[9]), STR_1(CODE[8]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S970$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_3(CODE[9]), STR_2(CODE[9]), STR_1(CODE[8]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> str_buffeLcd(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S891$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S891$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> str_buffeLcd(BANK0[20]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flsub
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___fladd
    ___fladd->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    _atoi->___wmul
    ___xxtofl->_ADC_Read
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_sprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   31375
                                             94 COMRAM     1     1      0
                                             76 BANK0      4     4      0
                           _ADC_Init
                           _ADC_Read
                       _Config_Clock
                        _Config_Port
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___fladd
                            ___flmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    15      8   23515
                                             55 BANK0     21    13      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   22856
                                             86 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           24    18      6   22495
                                             77 COMRAM     9     3      6
                                             44 BANK0     11    11      0
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              54    47      7   19645
                                             68 COMRAM     9     2      7
                                              0 BANK0     44    44      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     4      4     400
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2455
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     371
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     294
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             25 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     457
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    3041
                                             60 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2566
                                             44 COMRAM    16     8      8
                           _ADC_Read (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3264
                                             19 COMRAM    25    17      8
                           _ADC_Read (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     790
                                             44 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2007
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 9     7      2    1080
                                              6 COMRAM     9     7      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              5     3      2     207
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              4     2      2     237
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     550
                                              5 COMRAM    14    10      4
                           _ADC_Read (ARG)
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     4     2      2     496
                                              4 COMRAM     4     2      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       3     3      0     178
                                              1 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       5     4      1     608
                                              3 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     198
                                              3 COMRAM     1     1      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     2      0     110
                                              1 COMRAM     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Config_Port                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Config_Clock                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_Read
   _Config_Clock
   _Config_Port
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   ___fladd
     _ADC_Read (ARG)
     ___flmul (ARG)
       _ADC_Read (ARG)
       ___xxtofl (ARG)
         _ADC_Read (ARG)
     ___xxtofl (ARG)
   ___flmul
   ___xxtofl
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
             _fputc
               _putch
             _fputs
               _fputc
           _strcpy
         _fputc
         _isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      30        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     50      7D       5       78.1%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBIGSFRhhh        2C      0       0      20        0.0%
BITBIGSFRlhh        2A      0       0      22        0.0%
BITBIGSFRlllhh      1B      0       0      26        0.0%
BITBIGSFRllh        11      0       0      25        0.0%
BITBIGSFRhhl         E      0       0      21        0.0%
BITBIGSFRllll        9      0       0      28        0.0%
BITBIGSFRlhll        6      0       0      24        0.0%
BITBIGSFRlhlh        1      0       0      23        0.0%
BITBIGSFRlllhl       1      0       0      27        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     12C      29        0.0%
DATA                 0      0     12C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Aug 11 21:34:00 2022

            ___fldiv@aexp 0019              ___fldiv@bexp 0018              ___fldiv@sign 0011  
                      l13 3362                        l16 3270                        l19 3290  
                      l72 337E                        l90 2FA8                        l82 2F64  
                      l75 3344                        l84 2F7A                        l93 3324  
                      l86 2F90                        l88 2FA6                        l96 3370  
     ___wmul@multiplicand 0003                       l102 2F4C                       l105 2E80  
                     l114 31E8                       l123 32E2                       l108 3258  
                     l420 2A1C                       l710 1CC4                       l382 2D92  
                     l705 1EA0                       l393 2B20                       l801 2FFA  
                     l707 1D00                       l651 140C                       l716 1D46  
                     l388 2ADA                       l660 16DC                       l652 13FA  
                     l741 1B06                       l397 3220                       l653 13C0  
                     l718 1DBE                       l719 1DAC                       l744 1998  
                     l737 17A2                       l754 1AC8                       l746 1A10  
                     l850 121C                       l747 19FE                       l835 2DB6  
                     l668 1526                       l781 27CC                       l677 15F6  
                     l693 30DE                       l853 0BB6                       l925 3098  
                     l678 15E4                       l918 21B8                       l935 2C1E  
                     l839 2E0C                       l855 09FC                       l792 2764  
                     l785 2708                       l961 2916                       l778 2670  
                     l970 255C                       l883 0FFE                       l958 290E  
                     l967 2618                       l992 2ED6                       l977 32BC  
                     l985 3124                       l995 2EE6                       _LDR 00B8  
                     _pad 2D94                       wreg 000FE8              ___flmul@aexp 0025  
            ___flmul@bexp 0026              ___flmul@sign 0020              ___flmul@temp 002B  
            ___flmul@prod 0027              ___fltol@exp1 000A                      l1001 304A  
                    l1013 2CE8                      l1021 3168                      l1030 31A8  
                    l1024 3380                      l3002 2C16                      l3010 2E82  
                    l3020 2492                      l3012 2EA0                      l3100 08F6  
                    l3022 24A0                      l3030 2580                      l3014 2408  
                    l3006 316A                      l3102 08FC                      l2400 125A  
                    l3032 25BC                      l3016 2428                      l3008 317A  
                    l3200 0DFC                      l3120 0988                      l3104 0904  
                    l3112 0946                      l2410 128A                      l2402 126A  
                    l3034 25D0                      l3026 2510                      l3018 247E  
                    l3050 302C                      l3042 2FFC                      l3210 0ED8  
                    l3202 0E2E                      l3122 0990                      l3114 096C  
                    l3130 09AC                      l3106 091C                      l3060 30E4  
                    l3300 2802                      l2500 145C                      l2420 12B4  
                    l2412 129C                      l2404 126C                      l3036 25F8  
                    l3028 254C                      l3044 3010                      l3052 3030  
                    l3220 0F3A                      l3212 0EDE                      l3204 0E3E  
                    l3140 0A46                      l3132 09C6                      l3116 097E  
                    l3108 0926                      l3054 3292                      l3062 30F8  
                    l3302 2836                      l2510 148A                      l2502 146A  
                    l2422 12C4                      l2430 12EE                      l2414 129E  
                    l2406 1274                      l3038 2608                      l3046 301C  
                    l3230 0FD4                      l3222 0F42                      l3214 0F12  
                    l3206 0E4E                      l3150 0B3C                      l3142 0A84  
                    l3118 0982                      l3070 0824                      l2600 32BE  
                    l3064 311A                      l3304 283E                      l2520 14F6  
                    l2512 1494                      l2504 1476                      l2440 1326  
                    l2432 12FE                      l2424 12D4                      l2416 12A4  
                    l2408 1284                      l3048 3020                      l3240 1032  
                    l3232 0FF4                      l3224 0F48                      l3216 0F26  
                    l3208 0E82                      l3160 0BCE                      l3152 0B44  
                    l3144 0AB6                      l3136 0A0C                      l3080 0870  
                    l3072 082A                      l3400 217E                      l3330 2F74  
                    l2602 32DA                      l3066 311E                      l3058 30E0  
                    l3314 28B0                      l3306 2846                      l2610 1B22  
                    l2522 1506                      l2506 147A                      l2514 149A  
                    l2450 133A                      l2442 132A                      l2434 1310  
                    l2426 12E4                      l2418 12B2                      l3250 105A  
                    l3242 1038                      l3234 1010                      l3226 0F50  
                    l3218 0F2A                      l3170 0C00                      l3162 0BDA  
                    l3146 0AF4                      l3138 0A12                      l3090 08AE  
                    l3082 087A                      l3074 083A                      l3332 2F7C  
                    l3324 2F50                      l3500 2E14                      l3316 28E0  
                    l3308 287A                      l2700 1D56                      l2620 1B56  
                    l2612 1B24                      l2540 1588                      l2532 1560  
                    l2516 14C0                      l2524 1516                      l2508 1488  
                    l2460 134E                      l2452 133E                      l2444 132E  
                    l2436 131E                      l2428 12E6                      l2380 2C44  
                    l3260 108E                      l3244 1040                      l3236 101E  
                    l3252 1060                      l3228 0F5C                      l3180 0C48  
                    l3172 0C0E                      l3164 0BE2                      l3148 0B08  
                    l3156 0B84                      l3092 08B6                      l3084 0882  
                    l3076 0848                      l3404 2190                      l3340 1EA2  
                    l3334 2F8A                      l3326 2F5E                      l3430 330A  
                    l3510 2E50                      l3502 2E24                      l3318 28F2  
                    l2702 1D64                      l2630 1B88                      l2614 1B34  
                    l2622 1B5E                      l2606 1B08                      l2542 1590  
                    l2534 156A                      l2526 153C                      l2518 14F4  
                    l2550 15B4                      l2470 1362                      l2462 1352  
                    l2454 1342                      l2446 1332                      l2438 1322  
                    l2390 121E                      l2382 2C4E                      l3270 1144  
                    l3262 10E6                      l3254 1072                      l3246 1050  
                    l3238 102E                      l3190 0D5C                      l3182 0C58  
                    l3174 0C26                      l3166 0BEA                      l3158 0BBE  
                    l3086 0892                      l3094 08BA                      l3078 084C  
                    l3350 1F0A                      l3342 1EC6                      l3336 2F92  
                    l3328 2F66                      l3432 3310                      l3520 2E6E  
                    l3512 2E56                      l3504 2E2A                      l3440 3230  
                    l3600 279C                      l2712 1DCE                      l2720 1E16  
                    l2704 1D68                      l2640 1BBC                      l2632 1B8A  
                    l2624 1B6E                      l2616 1B44                      l2608 1B14  
                    l2800 184C                      l2560 1606                      l2552 15B8  
                    l2544 1594                      l2536 1578                      l2528 154C  
                    l2480 13DA                      l2472 138C                      l2464 1356  
                    l2456 1346                      l2448 1336                      l2392 122A  
                    l2384 2C6C                      l2376 2C20                      l3280 11B6  
                    l3272 1160                      l3264 111A                      l3256 1084  
                    l3248 1054                      l3184 0C6C                      l3192 0D62  
                    l3176 0C38                      l3168 0BEE                      l3096 08E0  
                    l3088 08A2                      l3360 1F9E                      l3352 1F12  
                    l3344 1ED4                      l3338 2FA0                      l3434 3312  
                    l3522 2E74                      l3514 2E5C                      l3506 2E3A  
                    l3450 3246                      l3442 3232                      l3602 27AC  
                    l2730 1E80                      l2722 1E30                      l2714 1DDA  
                    l2706 1D76                      l2650 1C02                      l2634 1B9A  
                    l2642 1BC4                      l2626 1B74                      l2618 1B54  
                    l2810 189E                      l2802 1858                      l2570 166C  
                    l2562 1612                      l2554 15C6                      l2546 15A4  
                    l2538 157A                      l2490 141A                      l2482 13DE  
                    l2474 13A8                      l2466 135A                      l2458 134A  
                    l2394 1238                      l2386 2CA2                      l2378 2C32  
                    l3282 11CE                      l3274 1168                      l3266 1122  
                    l3258 1088                      l3194 0D80                      l3186 0CD0  
                    l3178 0C40                      l3098 08F2                      l3370 2006  
                    l3354 1F20                      l3346 1EE2                      l3530 2FBC  
                    l3610 21BA                      l3436 3322                      l3428 3308  
                    l3524 2E7A                      l3516 2E62                      l3508 2E40  
                    l3540 2EEA                      l3452 324C                      l3444 323A  
                    l3604 27BA                      l3292 27CE                      l2732 1E8E  
                    l2724 1E46                      l2716 1DE8                      l2708 1DA4  
                    l2660 1C2A                      l2652 1C06                      l2644 1BD4  
                    l2636 1BAA                      l2628 1B7A                      l2900 2A5C  
                    l2820 191C                      l2812 18AE                      l2804 1868  
                    l2580 16B4                      l2572 167C                      l2564 1620  
                    l2556 15DC                      l2548 15A6                      l2492 142A  
                    l2484 13EC                      l2476 13B8                      l2468 135E  
                    l2396 123A                      l3284 11DE                      l3276 1178  
                    l3268 1126                      l3196 0DB4                      l3188 0D28  
                    l3372 200E                      l3380 2052                      l3364 1FAC  
                    l3356 1F44                      l3348 1EE6                      l3460 3058  
                    l3532 2FC4                      l3620 22F2                      l3612 21CE  
                    l3470 334E                      l3526 3364                      l3518 2E68  
                    l3550 2F2E                      l3542 2EFA                      l3454 324E  
                    l3446 323C                      l3438 3224                      l3606 27BC  
                    l3294 27E2                      l2734 1E94                      l2726 1E60  
                    l2718 1E12                      l2670 1C78                      l2646 1BEA  
                    l2638 1BBA                      l2910 2AC8                      l2902 2A8A  
                    l2830 1996                      l2822 1952                      l2814 18CA  
                    l2806 1874                      l2750 16FA                      l2582 16B6  
                    l2574 169C                      l2566 165A                      l2486 13EE  
                    l2478 13CE                      l2398 124A                      l3286 11F4  
                    l3278 11A8                      l3198 0DE6                      l3390 2104  
                    l3382 2072                      l3374 2016                      l3358 1F7E  
                    l3366 1FE4                      l3462 3074                      l3534 2FCC  
                    l3630 23A0                      l3622 233E                      l3614 221A  
                    l3472 3360                      l3552 2F40                      l3544 2F0C  
                    l3456 3256                      l3448 3244                      l3560 31C8  
                    l2736 1E96                      l2728 1E7C                      l2680 1CC2  
                    l2672 1C88                      l2664 1C3E                      l2648 1BFA  
                    l2656 1C1A                      l2912 2B18                      l2904 2A9A  
                    l2840 19F6                      l2832 19A8                      l2824 1960  
                    l2816 18D6                      l2808 1884                      l2760 1740  
                    l2752 170A                      l2744 16DE                      l2920 3200  
                    l2584 16BC                      l2576 16A0                      l2568 165C  
                    l2496 143E                      l2488 13F8                      l2592 3126  
                    l3288 11FC                      l3392 2124                      l3384 20A6  
                    l3368 1FF4                      l3464 3090                      l3536 2FE8  
                    l3528 2FAA                      l3640 23F2                      l3632 23AA  
                    l3624 2364                      l3616 224E                      l3474 325C  
                    l3482 3372                      l3490 3334                      l3554 2F46  
                    l3546 2F12                      l3562 31CC                      l3570 2680  
                    l3298 27E6                      l2690 1D10                      l2682 1CCE  
                    l2674 1C90                      l2666 1C58                      l2658 1C2A  
                    l2914 2B1E                      l2906 2AA8                      l2850 1A64  
                    l2834 19B6                      l2826 197E                      l2818 18F2  
                    l2770 176C                      l2762 1746                      l2754 171A  
                    l2746 16EA                      l2922 3210                      l2586 16CA  
                    l2578 16AE                      l2498 144E                      l2594 3132  
                    l3378 201E                      l3458 304C                      l3634 23B6  
                    l3626 236E                      l3618 22BE                      l3468 3346  
                    l3476 326E                      l3492 333E                      l3484 3326  
                    l3548 2F1C                      l3556 31AA                      l3580 26BE  
                    l3572 2696                      l3564 261C                      l2692 1D26  
                    l2684 1CEC                      l2676 1CA0                      l2668 1C68  
                    l2908 2ABA                      l2860 1ACC                      l2844 1A20  
                    l2852 1A68                      l2836 19BA                      l2828 1988  
                    l2780 17C2                      l2772 177C                      l2764 174C  
                    l2756 172A                      l2748 16F8                      l2588 16CC  
                    l2940 2982                      l2932 2942                      l2596 3144  
                    l3388 20DA                      l3636 23DC                      l3628 237A  
                    l3478 327E                      l3494 3340                      l3486 332E  
                    l3558 31B6                      l3590 2746                      l3582 26F0  
                    l3566 262C                      l2694 1D2C                      l2686 1CEE  
                    l2678 1CB4                      l2870 1AF6                      l2862 1ADC  
                    l2854 1A82                      l2846 1A2C                      l2838 19C8  
                    l2790 1802                      l2774 178C                      l2766 175A  
                    l2758 1730                      l2918 31EA                      l2950 29B2  
                    l2942 2990                      l2934 296C                      l2926 2918  
                    l2598 3148                      l3398 2152                      l3638 23E6  
                    ?_pad 0011                      l3496 3342                      l3488 3332  
                    l3592 2754                      l3584 26F2                      l3576 26AA  
                    l3568 263A                      l2696 1D36                      l2688 1CFE  
                    l2880 2CEA                      l2864 1AEA                      l2856 1A96  
                    l2848 1A3A                      l2792 180E                      l2784 17D6  
                    l2776 1792                      l2768 175C                      l2960 29DC  
                    l2952 29BC                      l2936 296E                      l2928 292E  
                    l3760 2170                      l3498 2E0E                      l3594 2772  
                    l3586 26FE                      l3578 26B2                      l3762 2864  
                    l2698 1D44                      l2890 2D8A                      l2882 2D18  
                    l2866 1AEC                      l2858 1AB0                      l2794 1826  
                    l2786 17E2                      l2778 17B2                      l2874 309A  
                    l2962 29EC                      l2938 297E                      l2970 2D94  
                    l3596 2774                      l3588 273A                      l2892 2D90  
                    l2884 2D28                      l2868 1AF2                      l2796 1832  
                    l2788 17EC                      l2876 30AA                      l2964 29FC  
                    l2948 29A8                      l2980 2DDA                      l2972 2DA2  
                    l3756 2034                      l3598 2778                      l2886 2D56  
                    l2798 183E                      l2966 2A0C                      l2958 29D0  
                    l2990 2BA8                      l2982 2DF8                      l2974 2DAE  
                    l3758 20EE                      l2888 2D66                      l2896 2A1E  
                    l2992 2BB4                      l2984 2B22                      l2976 2DC2  
                    l2898 2A4C                      l2986 2B42                      l2978 2DD6  
                    l2988 2B80                      l2996 2BC0                      l2998 2BD2  
                    STR_1 0813                      STR_2 0801                      STR_3 080A  
                    STR_4 081B                      STR_7 081F                      _LM35 00C0  
                    u2000 1310                      u2001 130C                      u2010 131E  
                    u2011 131A                      u2100 145C                      u2020 138C  
                    u2101 1458                      u2021 1388                      u2110 146A  
                    u2030 13A4                      u2111 1466                      u2031 139E  
                    u2200 15B4                      u2120 1488                      u2040 13A6  
                    u3000 31A8                      u2201 15B0                      u2121 1484  
                    u3001 31A4                      u2210 15C6                      u2130 14C0  
                    u2050 13CE                      u3010 2EA0                      u2211 15C2  
                    u2131 14BC                      u2051 13CA                      u3011 2E9C  
                    u2300 16AE                      u2220 15DC                      u2140 1506  
                    u2060 13EC                      u3100 25BC                      u3020 2450  
                    u2301 16AA                      u2221 15D8                      u2141 1502  
                    u2061 13E8                      u3101 25B8                      u2310 16CA  
                    u2230 15F2                      u2150 153C                      u2070 140C  
                    u3110 25F8                      u3030 247E                      u2311 16C6  
                    u2231 15EE                      u2151 1538                      u2071 1408  
                    u3111 25F4                      u3031 247A                      u2400 1C2A  
                    u2240 1606                      u2160 154C                      u2080 141A  
                    u3040 24A0                      u3120 304A                      u2320 3168  
                    u3200 08E0                      _LATD 000F8C                      u2401 1C26  
                    u2241 1602                      u2161 1548                      u2081 1416  
                    u3041 249C                      u3025 2446                      u3121 3046  
                    u2321 3164                      u3201 08DC                      u3130 32B6  
                    u2410 1CA0                      u2330 1B22                      u2250 1620  
                    u2170 1578                      u2090 142A                      u3210 08F2  
                    u3131 32B0                      u2411 1C9C                      u2331 1B1E  
                    u2251 161C                      u2171 1574                      u2091 1426  
                    u3211 08EE                      u3140 32B8                      u2500 1DBA  
                    u2420 1CC2                      u2340 1B34                      u2260 165A  
                    u2180 1588                      u3060 250C                      u3300 0BCE  
                    u3220 096C                      u2501 1DB6                      u2421 1CBE  
                    u2341 1B30                      u2261 1656                      u2181 1584  
                    u3061 2508                      u3301 0BCA                      u3221 0968  
                    u3150 30F8                      u2510 1DCE                      u2430 1CEC  
                    u2350 1B44                      u2270 166C                      u2190 15A4  
                    u3070 2530                      u3310 0C00                      u3230 097E  
                    u3151 30F4                      u2511 1DCA                      u2431 1CE8  
                    u2351 1B40                      u2271 1668                      u2191 15A0  
                    u3055 24B4                      u3311 0BFC                      u3231 097A  
                    u3160 311A                      u2520 1DE8                      u2440 1D10  
                    u2360 1B88                      u2600 176C                      u2280 167C  
                    u3080 254C                      u3056 24BE                      u3400 0FD4  
                    u3320 0C0E                      u3240 09F8                      u3161 3116  
                    u2521 1DE4                      u2441 1D0C                      u2361 1B84  
                    u2601 1768                      u2281 1678                      u3081 2548  
                    u3057 24CE                      u3401 0FD0                      u3321 0C0A  
                    u3241 09F4                      u2530 1E30                      u2450 1D26  
                    u2370 1B9A                      u2610 177C                      u2290 169C  
                    u3090 25A0                      u3410 1010                      u3330 0C38  
                    u3250 0A84                      u3170 0848                      u2531 1E2C  
                    u2451 1D22                      u2371 1B96                      u2611 1778  
                    u2291 1698                      u3075 2526                      u3411 100C  
                    u3331 0C34                      u3251 0A80                      u3171 0844  
                    u3500 2832                      u2540 1E60                      u2460 1D44  
                    u2380 1BAA                      u2700 1A20                      u2620 17B2  
                    u1900 2C44                      u3420 101E                      u3340 0D80  
                    u3260 0AB6                      u3180 0892                      u3501 282E  
                    u2541 1E5C                      u2461 1D40                      u2381 1BA6  
                    u2701 1A1C                      u2621 17AE                      u1901 2C40  
                    u3421 101A                      u3341 0D7C                      u3261 0AB2  
                    u3181 088E                      u3510 28E0                      u2550 1E8E  
                    u2470 1D64                      u2390 1BEA                      u2710 1A3A  
                    u2630 17C2                      u1910 2C6C                      u3430 1072  
                    u3350 0DE6                      u3270 0AF4                      u3190 08A2  
                    u3511 28DC                      u2551 1E8A                      u2471 1D60  
                    u2391 1BE6                      u2711 1A36                      u2631 17BE  
                    u3095 2596                      u1911 2C68                      u3431 106E  
                    u3351 0DE2                      u3271 0AF0                      u3191 089E  
                    u3520 28F2                      u2480 1D76                      u2800 2AA8  
                    u2720 1A82                      u2640 193C                      u2560 16F8  
                    u1920 2CA2                      u3440 1144                      u3360 0E2E  
                    u3280 0B80                      u3600 1FE4                      u3521 28EE  
                    u2481 1D72                      u2801 2AA4                      u2721 1A7E  
                    u2561 16F4                      u1921 2C9E                      u3441 1140  
                    u3361 0E2A                      u3281 0B7C                      u3601 1FE0  
                    u3530 2F5E                      u2490 1DA4                      u2810 2AC8  
                    u2730 1AB0                      u2650 1996                      u2570 170A  
                    u1930 1238                      u3450 1160                      u3370 0E3E  
                    u3290 0BB6                      u3610 206E                      u3531 2F5A  
                    u2491 1DA0                      u2811 2AC4                      u2731 1AAC  
                    u2651 1992                      u2571 1706                      u1931 1234  
                    u3451 115C                      u3371 0E3A                      u3291 0BB2  
                    u3611 206A                      u3540 2F74                      u3700 26EC  
                    u2820 2B18                      u2740 1AEA                      u2660 19B6  
                    u2580 171A                      u1940 124A                      u2900 29FC  
                    u3460 11C8                      u3380 0ED8                      u3620 3090  
                    u3541 2F70                      u3701 26E8                      u2821 2B14  
                    u2741 1AE6                      u2661 19B2                      u2645 1932  
                    u2581 1716                      u1941 1246                      u2901 29F8  
                    u3461 11C2                      u3381 0ED4                      u3621 308C  
                    u3630 327E                      u3550 2F8A                      u3710 2736  
                    u2750 2D18                      u2670 19C8                      u2590 175A  
                    u2830 3200                      u1950 125A                      u2910 2DA2  
                    u3470 11CA                      u3390 0F26                      u3631 327A  
                    u3551 2F86                      u3711 2732                      u2751 2D14  
                    u2671 19C4                      u2591 1756                      u2831 31FC  
                    u1951 1256                      u2911 2D9E                      u3391 0F22  
                    u3560 2FA0                      u3640 2EFA                      u3720 2754  
                    u2760 2D56                      u2680 19F6                      u1960 129C  
                    u2840 292E                      u2920 2DF8                      u3480 11DE  
                    u3561 2F9C                      u3641 2EF6                      u3721 2750  
                    u2761 2D52                      u2681 19F2                      u1961 1298  
                    u2841 292A                      u2921 2DF4                      u3481 11DA  
                    u3650 2F2E                      u3730 2764                      u3490 2802  
                    u2770 2D8A                      u2690 1A0C                      u1970 12B2  
                    u2850 2962                      u2930 2B62                      u1890 2C32  
                    u3570 1EC6                      u3651 2F2A                      u3731 2760  
                    u3491 27FE                      u2771 2D86                      u2691 1A08  
                    u1971 12AE                      u1891 2C2E                      u3571 1EC2  
                    u3660 31E8                      u3740 2772                      u2780 2A4C  
                    u1980 12C4                      u2860 2990                      u2940 2B80  
                    u3580 1F0A                      u3661 31E4                      u3741 276E  
                    u2781 2A48                      u1981 12C0                      u2861 298C  
                    u2941 2B7C                      u3581 1F06                      u3750 27AC  
                    u3670 262C                      u2790 2A8A                      u1990 12D4  
                    u2870 29A4                      u2950 2BA8                      u3590 1F44  
                    u3807 2E1A                      u3751 27A8                      u3671 2628  
                    u2791 2A86                      u1991 12D0                      u2871 29A0  
                    u2855 2958                      u2951 2BA4                      u2935 2B58  
                    u3591 1F40                      u3760 27BA                      u3680 263A  
                    u2880 29CC                      u2960 2BD2                      u3817 2E30  
                    u3761 27B6                      u3681 2636                      u2881 29C8  
                    u2961 2BCE                      u3690 2696                      u2890 29EC  
                    u3827 2E46                      u3691 2692                      u2891 29E8  
                    u2980 2C0C                      u3837 3318                      u2981 2C06  
                    u2990 2C0E                      u2975 2BE4                      u3777 23F8  
                    u3787 323E                      u3797 3250         ?_Lcd_Write_String 0005  
                    _dbuf 0100                      _labs 2E82                      _atoi 27CE  
                    _main 21BA                      _prec 00C6                      pad@i 0018  
                    pad@p 0015                      fsr1h 000FE2                      fsr2h 000FDA  
                    indf2 000FDF                      fsr1l 000FE1                      pad@w 001A  
                    fsr2l 000FD9          __end_of_ADC_Init 3364          __end_of_ADC_Read 3292  
           ___fpclassifyf 2B22                      prodh 000FF4                      prodl 000FF3  
                    start 0000        ??_Lcd_Write_String 0007           ___fldiv@new_exp 0012  
         __end_of_Lcd_Cmd 3326              ___param_bank 000000       __end_of_Config_Port 3346  
                   ??_pad 0017             ___fltol@sign1 0009                     ?_labs 0001  
                   ?_atoi 0007           __end_of___fladd 16DE                     ?_main 0001  
         __end_of___fldiv 1EA2           __end_of___flneg 3222           __end_of___flmul 1B08  
         __end_of___flsub 30E0           __end_of___fltol 2A1E              vfpfcnvrt@fmt 0050  
            _str_buffeLcd 00C9                     _TRISD 000F95                     _flags 00C8  
                   _fputc 2C20                     _fputs 3126           __end_of_isdigit 32BE  
                   labs@a 0001                     atoi@n 000E                     pad@fp 0011  
                   atoi@s 0007                     _width 00C4                     _putch 3380  
         __end_of_isspace 3126                     tablat 000FF5                     status 000FD8  
         __end_of_sprintf 2FFC            ?___fpclassifyf 0001          __end_of_Lcd_Init 2E82  
        __end_of_Lcd_Port 2FAA           __initialization 32E4      __end_of_Config_Clock 3380  
            __end_of_labs 2EE8              __end_of_atoi 2918              __end_of_main 2408  
                  ??_labs 0005                    ??_atoi 0009                    ??_main 005F  
           __activetblptr 000002                    ?_fputc 0001                    ?_fputs 000A  
                  _ADRESH 000FC4                    _ADRESL 000FC3                    ?_putch 0001  
                  _ANSELD 000F5E                 ??_Lcd_Cmd 0002                    _SLRCON 000F7A  
             _Config_Port 3326          __end_of___xxtofl 27CE              vfprintf@cfmt 005D  
                  ___flge 2A1E                    ___fleq 2CEA                 ??___fladd 0035  
                  ___wmul 32BE                 ??___fldiv 0009                 ??___flneg 0005  
               ??___flmul 001C                 ??___flsub 0045                 ??___fltol 0005  
                  _efgtoa 0824           ADC_Read@channel 0005                    _floorf 2408  
                  _memcpy 2FFC                    clear_0 32EA                    clear_1 32F6  
                  isa$std 000001                    pad@buf 0013                    _strcpy 316A  
                  fputc@c 0001                    fputs@c 000E                    fputs@i 000F  
                  fputs@s 000A                 ??_isdigit 0003           ___fpclassifyf@e 0009  
               ?_ADC_Init 0001           ___fpclassifyf@u 000B                 ?_ADC_Read 0001  
         ___fpclassifyf@x 0001              __mediumconst 0000                 ??_isspace 0003  
                  tblptrh 000FF7                    tblptrl 000FF6                    tblptru 000FF8  
                  putch@c 0001          __end_of_vfprintf 309A                 ??_sprintf 005F  
         Lcd_Set_Cursor@a 0005           Lcd_Set_Cursor@b 0004           Lcd_Set_Cursor@y 0007  
         Lcd_Set_Cursor@z 0006                ___flge@ff1 002D                ___flge@ff2 0031  
         ??___fpclassifyf 0005              ___xxtofl@arg 0010              ___xxtofl@exp 000F  
            ___xxtofl@val 0006                ___fleq@ff1 0001                ___fleq@ff2 0005  
              __accesstop 0060   __end_of__initialization 32FC                ___flneg@f1 0001  
       __end_of_Lcd_Clear 3372             ___rparam_used 000001                ___fltol@f1 0001  
          __pcstackCOMRAM 0001             __end_of_fputc 2CEA             __end_of_fputs 316A  
           __end_of_putch 3382            _Lcd_Set_Cursor 2EE8                ??_ADC_Init 0001  
              ??_ADC_Read 0003                 ?_Lcd_Init 0001                 ?_Lcd_Port 0001  
                 ??_fputc 0005                   ??_fputs 000E                   ??_putch 0001  
              __pbssBANK0 00B0                __pbssBANK1 0100                   ?___flge 002D  
                 ?___fleq 0001                   ?___wmul 0001                   ?_efgtoa 0045  
                 ?_floorf 001A                   ?_memcpy 0001    __end_of_Lcd_Set_Cursor 2F4E  
                 ?_strcpy 0001                 ?___xxtofl 0006                ??_Lcd_Init 0004  
            _Config_Clock 3372                ??_Lcd_Port 0001            _Lcd_Write_Char 3222  
                 _Lcd_Cmd 3306                   __Hparam 0000                   __Lparam 0000  
                 ___fladd 121E                   ___fldiv 1B08                   ___flneg 31EA  
                 ___flmul 16DE                   ___flsub 309A                   ___fltol 2918  
               ?_vfprintf 0057              __psmallconst 0800                   __pcinit 32E4  
                 __ramtop 0800           ?_Lcd_Set_Cursor 0004                   __ptext0 21BA  
                 __ptext1 2FAA                   __ptext2 304C                   __ptext3 1EA2  
                 __ptext4 0824                   __ptext5 316A                   __ptext6 2D94  
                 __ptext7 3126                   __ptext8 2C20                   __ptext9 3380  
                 _isdigit 3292                ??___xxtofl 000A                   _isspace 30E0  
                 efgtoa@c 004B                   efgtoa@d 006B                   efgtoa@e 006F  
                 efgtoa@f 0047                   efgtoa@g 0084                   efgtoa@h 0079  
                 efgtoa@i 0077                   efgtoa@l 007D                   efgtoa@m 006D  
                 efgtoa@n 0082                   efgtoa@p 0062                   efgtoa@t 0064  
                 efgtoa@u 0088                   efgtoa@w 0071                   atoi@neg 000C  
                 _sprintf 2FAA    __end_of_Lcd_Write_Char 325A      end_of_initialization 32FC  
                 floorf@e 0028                   floorf@m 0024                   floorf@u 002A  
                 floorf@x 001A                   memcpy@d 0007                   memcpy@n 0005  
                 memcpy@s 0009                   fputc@fp 0003             __Lmediumconst 0000  
            ?_Config_Port 0001                   fputs@fp 000C         __end_of_vfpfcnvrt 21BA  
              efgtoa@mode 0069                efgtoa@sign 0081                   postdec2 000FDD  
                 postinc0 000FEE                   postinc1 000FE6                   postinc2 000FDE  
        vfpfcnvrt@convarg 008C                 Lcd_Port@a 0001                ??_vfprintf 005D  
                 strcpy@d 0007                   strcpy@s 0005               ___fladd@grs 003C  
           ___xxtofl@sign 000E                 _TRISBbits 000F93               ___fldiv@grs 0014  
             ___fldiv@rem 000D           ?_Lcd_Write_Char 0001         Lcd_Write_String@a 0005  
       Lcd_Write_String@i 0007               ___flmul@grs 0021                 _Lcd_Clear 3364  
          __end_of___flge 2B22            __end_of___fleq 2D94               vfpfcnvrt@ap 0052  
             vfpfcnvrt@cp 0095               vfpfcnvrt@fp 004E            __end_of___wmul 32E4  
        _Lcd_Write_String 31AA            __end_of_efgtoa 121E            __end_of_floorf 261A  
          __end_of_memcpy 304C                floorf@F526 00B0            __end_of_strcpy 31AA  
     start_initialization 32E4               __end_of_pad 2E0E     __end_of___fpclassifyf 2C20  
             vfprintf@fmt 0059                ?_Lcd_Clear 0001                  ??___flge 0035  
                ??___fleq 0009                  ??___wmul 0005                  ??_efgtoa 004C  
                ??_floorf 001E                  ??_memcpy 0007           Lcd_Write_Char@a 0004  
         Lcd_Write_Char@y 0003                  ??_strcpy 0005                 ___fladd@a 0031  
               ___fladd@b 002D                 ___fldiv@a 0005                 ___fldiv@b 0001  
               ___flmul@a 0018                 ___flmul@b 0014                 ___flsub@a 0041  
               ___flsub@b 003D             __pcstackBANK0 0060                  ?_Lcd_Cmd 0001  
             _efgtoa$1029 0066                 _main$1366 00AC          ??_Lcd_Set_Cursor 0005  
                ?___fladd 002D                  ?___fldiv 0001                  ?___flneg 0001  
                ?___flmul 0014                  ?___flsub 003D                  ?___fltol 0001  
             __smallconst 0800                  ?_isdigit 0001                  _ADC_Init 3346  
                _ADC_Read 325A                  ?_isspace 0001                  ?_sprintf 0097  
                _MCP9700A 00BC            ___wmul@product 0005                  _LATDbits 000F8C  
                Lcd_Cmd@a 0003               ??_Lcd_Clear 0004                 _vfpfcnvrt 1EA2  
              _ADCON0bits 000FC2                _ADCON1bits 000FC1                _ADCON2bits 000FC0  
       ___wmul@multiplier 0001          ??_Lcd_Write_Char 0002              _isspace$1107 0005  
                _Lcd_Init 2E0E                  _Lcd_Port 2F4E                vfpfcnvrt@c 0094  
__end_of_Lcd_Write_String 31EA                  __Hrparam 0000                 memcpy@tmp 000B  
              vfprintf@ap 005B                  __Lrparam 0000                vfprintf@fp 0057  
              ?_vfpfcnvrt 004E                _ANSELBbits 000F5C        ___fpclassifyf@F465 00B4  
              sprintf@fmt 0099                  ___xxtofl 261A                  __ptext10 2FFC  
                __ptext11 2E82                  __ptext20 2CEA                  __ptext12 2408  
                __ptext21 1B08                  __ptext13 2B22                  __ptext30 2E0E  
                __ptext22 27CE                  __ptext14 2918                  __ptext31 3364  
                __ptext23 30E0                  __ptext15 309A                  __ptext32 3306  
                __ptext24 3292                  __ptext16 121E                  __ptext33 2F4E  
                __ptext25 32BE                  __ptext17 31EA                  __ptext34 3326  
                __ptext26 261A                  __ptext18 16DE                  __ptext35 3372  
                __ptext27 31AA                  __ptext19 2A1E                  __ptext36 325A  
                __ptext28 3222                  __ptext37 3346                  __ptext29 2EE8  
              strcpy@dest 0001                  efgtoa@fp 0045                  efgtoa@ne 0060  
                efgtoa@pp 0068                  efgtoa@ou 0073                  isa$xinst 000000  
                _vfprintf 304C                  memcpy@d1 0001                  memcpy@s1 0003  
           ?_Config_Clock 0001                  isdigit@c 0001        Lcd_Write_Char@temp 0002  
               sprintf@ap 009F                  isspace@c 0001                 strcpy@src 0003  
              _OSCCONbits 000FD3               efgtoa@nmode 006A               ??_vfpfcnvrt 0054  
      Lcd_Set_Cursor@temp 0008                  sprintf@f 00A1                  sprintf@s 0097  
          ??_Config_Clock 0001             ___fladd@signs 0039             ??_Config_Port 0001  
            ___fladd@aexp 003A              ___fladd@bexp 003B  
