

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Aug 11 22:13:34 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    50                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    51                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    52                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    53   000000                     
    54                           ; Version 2.35
    55                           ; Generated 05/05/2021 GMT
    56                           ; 
    57                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution. Publication is not required when
    71                           ;        this file is used in an embedded application.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC18F45K50 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89   000000                     _ADRESL	set	4035
    90   000000                     _ADRESH	set	4036
    91   000000                     _ADCON0bits	set	4034
    92   000000                     _LATDbits	set	3980
    93   000000                     _ANSELBbits	set	3932
    94   000000                     _SLRCON	set	3962
    95   000000                     _LATCbits	set	3979
    96   000000                     _ADCON2bits	set	4032
    97   000000                     _ADCON1bits	set	4033
    98   000000                     _OSCCONbits	set	4051
    99   000000                     _TRISAbits	set	3986
   100   000000                     _TRISCbits	set	3988
   101   000000                     _TRISD	set	3989
   102   000000                     _LATD	set	3980
   103   000000                     _ANSELD	set	3934
   104                           
   105                           	psect	smallconst
   106   000800                     __psmallconst:
   107                           	callstack 0
   108   000800  00                 	db	0
   109   000801                     STR_1:
   110   000801  56                 	db	86	;'V'
   111   000802  6F                 	db	111	;'o'
   112   000803  6C                 	db	108	;'l'
   113   000804  74                 	db	116	;'t'
   114   000805  3A                 	db	58	;':'
   115   000806  20                 	db	32
   116   000807  25                 	db	37
   117   000808  2E                 	db	46
   118   000809  32                 	db	50	;'2'
   119   00080A  66                 	db	102	;'f'
   120   00080B  00                 	db	0
   121   00080C                     STR_2:
   122   00080C  4C                 	db	76	;'L'
   123   00080D  44                 	db	68	;'D'
   124   00080E  52                 	db	82	;'R'
   125   00080F  3A                 	db	58	;':'
   126   000810  20                 	db	32
   127   000811  25                 	db	37
   128   000812  2E                 	db	46
   129   000813  32                 	db	50	;'2'
   130   000814  66                 	db	102	;'f'
   131   000815  00                 	db	0
   132   000816                     STR_3:
   133   000816  69                 	db	105	;'i'
   134   000817  6E                 	db	110	;'n'
   135   000818  66                 	db	102	;'f'
   136   000819  00                 	db	0
   137   00081A                     STR_6:
   138   00081A  6E                 	db	110	;'n'
   139   00081B  61                 	db	97	;'a'
   140   00081C  6E                 	db	110	;'n'
   141   00081D  00                 	db	0
   142   00081E  00                 	db	0	; dummy byte at the end
   143   000000                     
   144                           ; #config settings
   145                           
   146                           	psect	cinit
   147   003212                     __pcinit:
   148                           	callstack 0
   149   003212                     start_initialization:
   150                           	callstack 0
   151   003212                     __initialization:
   152                           	callstack 0
   153                           
   154                           ; Clear objects allocated to BANK1 (80 bytes)
   155   003212  EE01  F000         	lfsr	0,__pbssBANK1
   156   003216  0E50               	movlw	80
   157   003218                     clear_0:
   158   003218  6AEE               	clrf	postinc0,c
   159   00321A  06E8               	decf	wreg,f,c
   160   00321C  E1FD               	bnz	clear_0
   161                           
   162                           ; Clear objects allocated to BANK0 (41 bytes)
   163   00321E  EE00  F0A2         	lfsr	0,__pbssBANK0
   164   003222  0E29               	movlw	41
   165   003224                     clear_1:
   166   003224  6AEE               	clrf	postinc0,c
   167   003226  06E8               	decf	wreg,f,c
   168   003228  E1FD               	bnz	clear_1
   169   00322A                     end_of_initialization:
   170                           	callstack 0
   171   00322A                     __end_of__initialization:
   172                           	callstack 0
   173   00322A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   174   00322C  6EF8               	movwf	tblptru,c
   175   00322E  0100               	movlb	0
   176   003230  EFBD  F012         	goto	_main	;jump to C main() function
   177                           
   178                           	psect	bssBANK0
   179   0000A2                     __pbssBANK0:
   180                           	callstack 0
   181   0000A2                     floorf@F526:
   182                           	callstack 0
   183   0000A2                     	ds	4
   184   0000A6                     ___fpclassifyf@F465:
   185                           	callstack 0
   186   0000A6                     	ds	4
   187   0000AA                     _LDR:
   188                           	callstack 0
   189   0000AA                     	ds	4
   190   0000AE                     _voltaje:
   191                           	callstack 0
   192   0000AE                     	ds	4
   193   0000B2                     _width:
   194                           	callstack 0
   195   0000B2                     	ds	2
   196   0000B4                     _prec:
   197                           	callstack 0
   198   0000B4                     	ds	2
   199   0000B6                     _flags:
   200                           	callstack 0
   201   0000B6                     	ds	1
   202   0000B7                     _str_buffeLcd:
   203                           	callstack 0
   204   0000B7                     	ds	20
   205                           
   206                           	psect	bssBANK1
   207   000100                     __pbssBANK1:
   208                           	callstack 0
   209   000100                     _dbuf:
   210                           	callstack 0
   211   000100                     	ds	80
   212                           
   213                           	psect	cstackBANK0
   214   000060                     __pcstackBANK0:
   215                           	callstack 0
   216   000060                     efgtoa@ne:
   217                           	callstack 0
   218                           
   219                           ; 2 bytes @ 0x0
   220   000060                     	ds	2
   221   000062                     efgtoa@p:
   222                           	callstack 0
   223                           
   224                           ; 2 bytes @ 0x2
   225   000062                     	ds	2
   226   000064                     efgtoa@t:
   227                           	callstack 0
   228                           
   229                           ; 2 bytes @ 0x4
   230   000064                     	ds	2
   231   000066                     _efgtoa$1119:
   232                           	callstack 0
   233                           
   234                           ; 2 bytes @ 0x6
   235   000066                     	ds	2
   236   000068                     efgtoa@pp:
   237                           	callstack 0
   238                           
   239                           ; 1 bytes @ 0x8
   240   000068                     	ds	1
   241   000069                     efgtoa@mode:
   242                           	callstack 0
   243                           
   244                           ; 1 bytes @ 0x9
   245   000069                     	ds	1
   246   00006A                     efgtoa@nmode:
   247                           	callstack 0
   248                           
   249                           ; 1 bytes @ 0xA
   250   00006A                     	ds	1
   251   00006B                     efgtoa@d:
   252                           	callstack 0
   253                           
   254                           ; 2 bytes @ 0xB
   255   00006B                     	ds	2
   256   00006D                     efgtoa@m:
   257                           	callstack 0
   258                           
   259                           ; 2 bytes @ 0xD
   260   00006D                     	ds	2
   261   00006F                     efgtoa@e:
   262                           	callstack 0
   263                           
   264                           ; 2 bytes @ 0xF
   265   00006F                     	ds	2
   266   000071                     efgtoa@w:
   267                           	callstack 0
   268                           
   269                           ; 2 bytes @ 0x11
   270   000071                     	ds	2
   271   000073                     efgtoa@ou:
   272                           	callstack 0
   273                           
   274                           ; 4 bytes @ 0x13
   275   000073                     	ds	4
   276   000077                     efgtoa@i:
   277                           	callstack 0
   278                           
   279                           ; 2 bytes @ 0x17
   280   000077                     	ds	2
   281   000079                     efgtoa@h:
   282                           	callstack 0
   283                           
   284                           ; 4 bytes @ 0x19
   285   000079                     	ds	4
   286   00007D                     efgtoa@l:
   287                           	callstack 0
   288                           
   289                           ; 4 bytes @ 0x1D
   290   00007D                     	ds	4
   291   000081                     efgtoa@sign:
   292                           	callstack 0
   293                           
   294                           ; 1 bytes @ 0x21
   295   000081                     	ds	1
   296   000082                     efgtoa@n:
   297                           	callstack 0
   298                           
   299                           ; 2 bytes @ 0x22
   300   000082                     	ds	2
   301   000084                     efgtoa@g:
   302                           	callstack 0
   303                           
   304                           ; 4 bytes @ 0x24
   305   000084                     	ds	4
   306   000088                     efgtoa@u:
   307                           	callstack 0
   308                           
   309                           ; 4 bytes @ 0x28
   310   000088                     	ds	4
   311   00008C                     vfpfcnvrt@fp:
   312                           	callstack 0
   313                           
   314                           ; 2 bytes @ 0x2C
   315   00008C                     	ds	2
   316   00008E                     vfpfcnvrt@fmt:
   317                           	callstack 0
   318                           
   319                           ; 2 bytes @ 0x2E
   320   00008E                     	ds	2
   321   000090                     vfpfcnvrt@ap:
   322                           	callstack 0
   323                           
   324                           ; 2 bytes @ 0x30
   325   000090                     	ds	2
   326   000092                     ?_vfprintf:
   327                           	callstack 0
   328   000092                     vfprintf@fp:
   329                           	callstack 0
   330                           
   331                           ; 2 bytes @ 0x32
   332   000092                     	ds	2
   333   000094                     vfprintf@fmt:
   334                           	callstack 0
   335                           
   336                           ; 2 bytes @ 0x34
   337   000094                     	ds	2
   338   000096                     vfprintf@ap:
   339                           	callstack 0
   340                           
   341                           ; 2 bytes @ 0x36
   342   000096                     	ds	2
   343   000098                     ?_sprintf:
   344                           	callstack 0
   345   000098                     sprintf@s:
   346                           	callstack 0
   347                           
   348                           ; 2 bytes @ 0x38
   349   000098                     	ds	2
   350   00009A                     sprintf@fmt:
   351                           	callstack 0
   352                           
   353                           ; 2 bytes @ 0x3A
   354   00009A                     	ds	6
   355   0000A0                     ??_main:
   356                           
   357                           ; 1 bytes @ 0x40
   358   0000A0                     	ds	2
   359                           
   360                           	psect	cstackCOMRAM
   361   000001                     __pcstackCOMRAM:
   362                           	callstack 0
   363   000001                     ?___fpclassifyf:
   364                           	callstack 0
   365   000001                     ?_isdigit:
   366                           	callstack 0
   367   000001                     ?_isspace:
   368                           	callstack 0
   369   000001                     ?_ADC_Read:
   370                           	callstack 0
   371   000001                     ?___wmul:
   372                           	callstack 0
   373   000001                     ?___fladd:
   374                           	callstack 0
   375   000001                     ?___fldiv:
   376                           	callstack 0
   377   000001                     ?_labs:
   378                           	callstack 0
   379   000001                     ?___flneg:
   380                           	callstack 0
   381   000001                     ?___fltol:
   382                           	callstack 0
   383   000001                     Lcd_Port@a:
   384                           	callstack 0
   385   000001                     ___wmul@multiplier:
   386                           	callstack 0
   387   000001                     isdigit@c:
   388                           	callstack 0
   389   000001                     isspace@c:
   390                           	callstack 0
   391   000001                     memcpy@d1:
   392                           	callstack 0
   393   000001                     fputc@c:
   394                           	callstack 0
   395   000001                     strcpy@dest:
   396                           	callstack 0
   397   000001                     ___fleq@ff1:
   398                           	callstack 0
   399   000001                     ___flneg@f1:
   400                           	callstack 0
   401   000001                     ___fltol@f1:
   402                           	callstack 0
   403   000001                     ___fladd@b:
   404                           	callstack 0
   405   000001                     ___fldiv@b:
   406                           	callstack 0
   407   000001                     ___fpclassifyf@x:
   408                           	callstack 0
   409   000001                     labs@a:
   410                           	callstack 0
   411                           
   412                           ; 4 bytes @ 0x0
   413   000001                     	ds	1
   414   000002                     ??_Lcd_Cmd:
   415   000002                     Lcd_Write_Char@temp:
   416                           	callstack 0
   417                           
   418                           ; 1 bytes @ 0x1
   419   000002                     	ds	1
   420   000003                     ??_isdigit:
   421   000003                     ??_isspace:
   422   000003                     ??_ADC_Read:
   423   000003                     Lcd_Cmd@a:
   424                           	callstack 0
   425   000003                     Lcd_Write_Char@y:
   426                           	callstack 0
   427   000003                     ___wmul@multiplicand:
   428                           	callstack 0
   429   000003                     memcpy@s1:
   430                           	callstack 0
   431   000003                     fputc@fp:
   432                           	callstack 0
   433   000003                     strcpy@src:
   434                           	callstack 0
   435                           
   436                           ; 2 bytes @ 0x2
   437   000003                     	ds	1
   438   000004                     ??_Lcd_Init:
   439   000004                     Lcd_Set_Cursor@b:
   440                           	callstack 0
   441   000004                     Lcd_Write_Char@a:
   442                           	callstack 0
   443                           
   444                           ; 1 bytes @ 0x3
   445   000004                     	ds	1
   446   000005                     ??_fputc:
   447   000005                     ??___fpclassifyf:
   448   000005                     ??_labs:
   449   000005                     ??___fltol:
   450   000005                     ADC_Read@channel:
   451                           	callstack 0
   452   000005                     Lcd_Set_Cursor@a:
   453                           	callstack 0
   454   000005                     _isspace$1197:
   455                           	callstack 0
   456   000005                     Lcd_Write_String@a:
   457                           	callstack 0
   458   000005                     ___wmul@product:
   459                           	callstack 0
   460   000005                     memcpy@n:
   461                           	callstack 0
   462   000005                     strcpy@s:
   463                           	callstack 0
   464   000005                     ___fleq@ff2:
   465                           	callstack 0
   466   000005                     ___fladd@a:
   467                           	callstack 0
   468   000005                     ___fldiv@a:
   469                           	callstack 0
   470                           
   471                           ; 4 bytes @ 0x4
   472   000005                     	ds	1
   473   000006                     ?___xxtofl:
   474                           	callstack 0
   475   000006                     Lcd_Set_Cursor@z:
   476                           	callstack 0
   477   000006                     ___xxtofl@val:
   478                           	callstack 0
   479                           
   480                           ; 4 bytes @ 0x5
   481   000006                     	ds	1
   482   000007                     ?_atoi:
   483                           	callstack 0
   484   000007                     Lcd_Set_Cursor@y:
   485                           	callstack 0
   486   000007                     Lcd_Write_String@i:
   487                           	callstack 0
   488   000007                     atoi@s:
   489                           	callstack 0
   490   000007                     memcpy@d:
   491                           	callstack 0
   492   000007                     strcpy@d:
   493                           	callstack 0
   494                           
   495                           ; 2 bytes @ 0x6
   496   000007                     	ds	1
   497   000008                     Lcd_Set_Cursor@temp:
   498                           	callstack 0
   499                           
   500                           ; 1 bytes @ 0x7
   501   000008                     	ds	1
   502   000009                     ??___fladd:
   503   000009                     ??___fldiv:
   504   000009                     ??_atoi:
   505   000009                     ??___fleq:
   506   000009                     ___fltol@sign1:
   507                           	callstack 0
   508   000009                     ___fpclassifyf@e:
   509                           	callstack 0
   510   000009                     memcpy@s:
   511                           	callstack 0
   512                           
   513                           ; 2 bytes @ 0x8
   514   000009                     	ds	1
   515   00000A                     ??___xxtofl:
   516   00000A                     ___fltol@exp1:
   517                           	callstack 0
   518   00000A                     fputs@s:
   519                           	callstack 0
   520                           
   521                           ; 2 bytes @ 0x9
   522   00000A                     	ds	1
   523   00000B                     memcpy@tmp:
   524                           	callstack 0
   525   00000B                     ___fpclassifyf@u:
   526                           	callstack 0
   527                           
   528                           ; 4 bytes @ 0xA
   529   00000B                     	ds	1
   530   00000C                     atoi@neg:
   531                           	callstack 0
   532   00000C                     fputs@fp:
   533                           	callstack 0
   534                           
   535                           ; 2 bytes @ 0xB
   536   00000C                     	ds	1
   537   00000D                     ___fladd@signs:
   538                           	callstack 0
   539   00000D                     ___fldiv@rem:
   540                           	callstack 0
   541                           
   542                           ; 4 bytes @ 0xC
   543   00000D                     	ds	1
   544   00000E                     ___fladd@aexp:
   545                           	callstack 0
   546   00000E                     ___xxtofl@sign:
   547                           	callstack 0
   548   00000E                     fputs@c:
   549                           	callstack 0
   550   00000E                     atoi@n:
   551                           	callstack 0
   552                           
   553                           ; 2 bytes @ 0xD
   554   00000E                     	ds	1
   555   00000F                     ___fladd@bexp:
   556                           	callstack 0
   557   00000F                     ___xxtofl@exp:
   558                           	callstack 0
   559   00000F                     fputs@i:
   560                           	callstack 0
   561                           
   562                           ; 2 bytes @ 0xE
   563   00000F                     	ds	1
   564   000010                     ___fladd@grs:
   565                           	callstack 0
   566   000010                     ___xxtofl@arg:
   567                           	callstack 0
   568                           
   569                           ; 4 bytes @ 0xF
   570   000010                     	ds	1
   571   000011                     ___fldiv@sign:
   572                           	callstack 0
   573   000011                     pad@fp:
   574                           	callstack 0
   575                           
   576                           ; 2 bytes @ 0x10
   577   000011                     	ds	1
   578   000012                     ___fldiv@new_exp:
   579                           	callstack 0
   580                           
   581                           ; 2 bytes @ 0x11
   582   000012                     	ds	1
   583   000013                     pad@buf:
   584                           	callstack 0
   585                           
   586                           ; 2 bytes @ 0x12
   587   000013                     	ds	1
   588   000014                     ?___flmul:
   589                           	callstack 0
   590   000014                     ___fldiv@grs:
   591                           	callstack 0
   592   000014                     ___flmul@b:
   593                           	callstack 0
   594                           
   595                           ; 4 bytes @ 0x13
   596   000014                     	ds	1
   597   000015                     pad@p:
   598                           	callstack 0
   599                           
   600                           ; 2 bytes @ 0x14
   601   000015                     	ds	2
   602   000017                     ??_pad:
   603                           
   604                           ; 1 bytes @ 0x16
   605   000017                     	ds	1
   606   000018                     ___fldiv@bexp:
   607                           	callstack 0
   608   000018                     pad@i:
   609                           	callstack 0
   610   000018                     ___flmul@a:
   611                           	callstack 0
   612                           
   613                           ; 4 bytes @ 0x17
   614   000018                     	ds	1
   615   000019                     ___fldiv@aexp:
   616                           	callstack 0
   617                           
   618                           ; 1 bytes @ 0x18
   619   000019                     	ds	1
   620   00001A                     ?_floorf:
   621                           	callstack 0
   622   00001A                     pad@w:
   623                           	callstack 0
   624   00001A                     floorf@x:
   625                           	callstack 0
   626                           
   627                           ; 4 bytes @ 0x19
   628   00001A                     	ds	2
   629   00001C                     ??___flmul:
   630                           
   631                           ; 1 bytes @ 0x1B
   632   00001C                     	ds	2
   633   00001E                     ??_floorf:
   634                           
   635                           ; 1 bytes @ 0x1D
   636   00001E                     	ds	2
   637   000020                     ___flmul@sign:
   638                           	callstack 0
   639                           
   640                           ; 1 bytes @ 0x1F
   641   000020                     	ds	1
   642   000021                     ___flmul@grs:
   643                           	callstack 0
   644                           
   645                           ; 4 bytes @ 0x20
   646   000021                     	ds	3
   647   000024                     floorf@m:
   648                           	callstack 0
   649                           
   650                           ; 4 bytes @ 0x23
   651   000024                     	ds	1
   652   000025                     ___flmul@aexp:
   653                           	callstack 0
   654                           
   655                           ; 1 bytes @ 0x24
   656   000025                     	ds	1
   657   000026                     ___flmul@bexp:
   658                           	callstack 0
   659                           
   660                           ; 1 bytes @ 0x25
   661   000026                     	ds	1
   662   000027                     ___flmul@prod:
   663                           	callstack 0
   664                           
   665                           ; 4 bytes @ 0x26
   666   000027                     	ds	1
   667   000028                     floorf@e:
   668                           	callstack 0
   669                           
   670                           ; 2 bytes @ 0x27
   671   000028                     	ds	2
   672   00002A                     floorf@u:
   673                           	callstack 0
   674                           
   675                           ; 4 bytes @ 0x29
   676   00002A                     	ds	1
   677   00002B                     ___flmul@temp:
   678                           	callstack 0
   679                           
   680                           ; 2 bytes @ 0x2A
   681   00002B                     	ds	2
   682   00002D                     ?___flsub:
   683                           	callstack 0
   684   00002D                     ___flge@ff1:
   685                           	callstack 0
   686   00002D                     ___flsub@b:
   687                           	callstack 0
   688                           
   689                           ; 4 bytes @ 0x2C
   690   00002D                     	ds	4
   691   000031                     ___flge@ff2:
   692                           	callstack 0
   693   000031                     ___flsub@a:
   694                           	callstack 0
   695                           
   696                           ; 4 bytes @ 0x30
   697   000031                     	ds	4
   698   000035                     ??___flge:
   699                           
   700                           ; 1 bytes @ 0x34
   701   000035                     	ds	4
   702   000039                     efgtoa@fp:
   703                           	callstack 0
   704                           
   705                           ; 2 bytes @ 0x38
   706   000039                     	ds	2
   707   00003B                     efgtoa@f:
   708                           	callstack 0
   709                           
   710                           ; 4 bytes @ 0x3A
   711   00003B                     	ds	4
   712   00003F                     efgtoa@c:
   713                           	callstack 0
   714                           
   715                           ; 1 bytes @ 0x3E
   716   00003F                     	ds	1
   717   000040                     ??_efgtoa:
   718                           
   719                           ; 1 bytes @ 0x3F
   720   000040                     	ds	2
   721   000042                     ??_vfpfcnvrt:
   722                           
   723                           ; 1 bytes @ 0x41
   724   000042                     	ds	3
   725   000045                     vfpfcnvrt@convarg:
   726                           	callstack 0
   727                           
   728                           ; 8 bytes @ 0x44
   729   000045                     	ds	8
   730   00004D                     vfpfcnvrt@c:
   731                           	callstack 0
   732                           
   733                           ; 1 bytes @ 0x4C
   734   00004D                     	ds	1
   735   00004E                     vfpfcnvrt@cp:
   736                           	callstack 0
   737                           
   738                           ; 2 bytes @ 0x4D
   739   00004E                     	ds	2
   740   000050                     vfprintf@cfmt:
   741                           	callstack 0
   742                           
   743                           ; 2 bytes @ 0x4F
   744   000050                     	ds	2
   745   000052                     sprintf@ap:
   746                           	callstack 0
   747                           
   748                           ; 2 bytes @ 0x51
   749   000052                     	ds	2
   750   000054                     sprintf@f:
   751                           	callstack 0
   752                           
   753                           ; 11 bytes @ 0x53
   754   000054                     	ds	11
   755                           
   756 ;;
   757 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   758 ;;
   759 ;; *************** function _main *****************
   760 ;; Defined at:
   761 ;;		line 27 in file "main.c"
   762 ;; Parameters:    Size  Location     Type
   763 ;;		None
   764 ;; Auto vars:     Size  Location     Type
   765 ;;		None
   766 ;; Return value:  Size  Location     Type
   767 ;;                  1    wreg      void 
   768 ;; Registers used:
   769 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   770 ;; Tracked objects:
   771 ;;		On entry : 0/0
   772 ;;		On exit  : 0/0
   773 ;;		Unchanged: 0/0
   774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   775 ;;      Params:         0       0       0       0       0       0       0       0       0
   776 ;;      Locals:         0       0       0       0       0       0       0       0       0
   777 ;;      Temps:          0       2       0       0       0       0       0       0       0
   778 ;;      Totals:         0       2       0       0       0       0       0       0       0
   779 ;;Total ram usage:        2 bytes
   780 ;; Hardware stack levels required when called: 8
   781 ;; This function calls:
   782 ;;		_ADC_Init
   783 ;;		_ADC_Read
   784 ;;		_Config_Clock
   785 ;;		_Config_Port
   786 ;;		_Lcd_Clear
   787 ;;		_Lcd_Init
   788 ;;		_Lcd_Set_Cursor
   789 ;;		_Lcd_Write_String
   790 ;;		___flge
   791 ;;		___flmul
   792 ;;		___xxtofl
   793 ;;		_sprintf
   794 ;; This function is called by:
   795 ;;		Startup code after reset
   796 ;; This function uses a non-reentrant model
   797 ;;
   798                           
   799                           	psect	text0
   800   00257A                     __ptext0:
   801                           	callstack 0
   802   00257A                     _main:
   803                           	callstack 23
   804   00257A                     
   805                           ;main.c: 28:     Config_Clock();
   806   00257A  EC51  F019         	call	_Config_Clock	;wreg free
   807                           
   808                           ;main.c: 29:     Config_Port();
   809   00257E  EC1A  F019         	call	_Config_Port	;wreg free
   810                           
   811                           ;main.c: 30:     Lcd_Init();
   812   002582  EC9C  F016         	call	_Lcd_Init	;wreg free
   813                           
   814                           ;main.c: 31:     Lcd_Clear();
   815   002586  EC4A  F019         	call	_Lcd_Clear	;wreg free
   816                           
   817                           ;main.c: 32:     ADC_Init();
   818   00258A  EC3B  F019         	call	_ADC_Init	;wreg free
   819   00258E                     l3642:
   820                           
   821                           ;main.c: 34:         voltaje = ADC_Read(ADC_0)*(12.0/1024);
   822   00258E  0E00               	movlw	0
   823   002590  ECC4  F018         	call	_ADC_Read
   824   002594  C001  F006         	movff	?_ADC_Read,___xxtofl@val
   825   002598  C002  F007         	movff	?_ADC_Read+1,___xxtofl@val+1
   826   00259C  6A08               	clrf	(___xxtofl@val+2)^0,c
   827   00259E  6A09               	clrf	(___xxtofl@val+3)^0,c
   828   0025A0  0E00               	movlw	0
   829   0025A2  ECE3  F011         	call	___xxtofl
   830   0025A6  C006  F014         	movff	?___xxtofl,___flmul@b
   831   0025AA  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
   832   0025AE  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
   833   0025B2  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
   834   0025B6  0E00               	movlw	0
   835   0025B8  6E18               	movwf	___flmul@a^0,c
   836   0025BA  0E00               	movlw	0
   837   0025BC  6E19               	movwf	(___flmul@a+1)^0,c
   838   0025BE  0E40               	movlw	64
   839   0025C0  6E1A               	movwf	(___flmul@a+2)^0,c
   840   0025C2  0E3C               	movlw	60
   841   0025C4  6E1B               	movwf	(___flmul@a+3)^0,c
   842   0025C6  EC6D  F00B         	call	___flmul	;wreg free
   843   0025CA  C014  F0AE         	movff	?___flmul,_voltaje
   844   0025CE  C015  F0AF         	movff	?___flmul+1,_voltaje+1
   845   0025D2  C016  F0B0         	movff	?___flmul+2,_voltaje+2
   846   0025D6  C017  F0B1         	movff	?___flmul+3,_voltaje+3
   847   0025DA                     
   848                           ;main.c: 35:         sprintf(str_buffeLcd,"Volt: %.2f",voltaje);
   849   0025DA  0EB7               	movlw	low _str_buffeLcd
   850   0025DC  0100               	movlb	0	; () banked
   851   0025DE  6F98               	movwf	sprintf@s& (0+255),b
   852   0025E0  0E00               	movlw	high _str_buffeLcd
   853   0025E2  6F99               	movwf	(sprintf@s+1)& (0+255),b
   854   0025E4  0E01               	movlw	low STR_1
   855   0025E6  6F9A               	movwf	sprintf@fmt& (0+255),b
   856   0025E8  0E08               	movlw	high STR_1
   857   0025EA  6F9B               	movwf	(sprintf@fmt+1)& (0+255),b
   858   0025EC  C0AE  F09C         	movff	_voltaje,?_sprintf+4
   859   0025F0  C0AF  F09D         	movff	_voltaje+1,?_sprintf+5
   860   0025F4  C0B0  F09E         	movff	_voltaje+2,?_sprintf+6
   861   0025F8  C0B1  F09F         	movff	_voltaje+3,?_sprintf+7
   862   0025FC  EC6A  F017         	call	_sprintf	;wreg free
   863   002600                     
   864                           ;main.c: 36:         Lcd_Set_Cursor(1,1);
   865   002600  0E01               	movlw	1
   866   002602  6E04               	movwf	Lcd_Set_Cursor@b^0,c
   867   002604  0E01               	movlw	1
   868   002606  EC09  F017         	call	_Lcd_Set_Cursor
   869   00260A                     
   870                           ;main.c: 37:         Lcd_Write_String(str_buffeLcd);
   871   00260A  0EB7               	movlw	low _str_buffeLcd
   872   00260C  6E05               	movwf	Lcd_Write_String@a^0,c
   873   00260E  0E00               	movlw	high _str_buffeLcd
   874   002610  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
   875   002612  EC6C  F018         	call	_Lcd_Write_String	;wreg free
   876   002616                     
   877                           ;main.c: 39:         LDR = ADC_Read(ADC_1)*(5.0/1024);
   878   002616  0E01               	movlw	1
   879   002618  ECC4  F018         	call	_ADC_Read
   880   00261C  C001  F006         	movff	?_ADC_Read,___xxtofl@val
   881   002620  C002  F007         	movff	?_ADC_Read+1,___xxtofl@val+1
   882   002624  6A08               	clrf	(___xxtofl@val+2)^0,c
   883   002626  6A09               	clrf	(___xxtofl@val+3)^0,c
   884   002628  0E00               	movlw	0
   885   00262A  ECE3  F011         	call	___xxtofl
   886   00262E  C006  F014         	movff	?___xxtofl,___flmul@b
   887   002632  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
   888   002636  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
   889   00263A  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
   890   00263E  0E00               	movlw	0
   891   002640  6E18               	movwf	___flmul@a^0,c
   892   002642  0E00               	movlw	0
   893   002644  6E19               	movwf	(___flmul@a+1)^0,c
   894   002646  0EA0               	movlw	160
   895   002648  6E1A               	movwf	(___flmul@a+2)^0,c
   896   00264A  0E3B               	movlw	59
   897   00264C  6E1B               	movwf	(___flmul@a+3)^0,c
   898   00264E  EC6D  F00B         	call	___flmul	;wreg free
   899   002652  C014  F0AA         	movff	?___flmul,_LDR
   900   002656  C015  F0AB         	movff	?___flmul+1,_LDR+1
   901   00265A  C016  F0AC         	movff	?___flmul+2,_LDR+2
   902   00265E  C017  F0AD         	movff	?___flmul+3,_LDR+3
   903   002662                     
   904                           ;main.c: 40:         sprintf(str_buffeLcd,"LDR: %.2f",LDR);
   905   002662  0EB7               	movlw	low _str_buffeLcd
   906   002664  0100               	movlb	0	; () banked
   907   002666  6F98               	movwf	sprintf@s& (0+255),b
   908   002668  0E00               	movlw	high _str_buffeLcd
   909   00266A  6F99               	movwf	(sprintf@s+1)& (0+255),b
   910   00266C  0E0C               	movlw	low STR_2
   911   00266E  6F9A               	movwf	sprintf@fmt& (0+255),b
   912   002670  0E08               	movlw	high STR_2
   913   002672  6F9B               	movwf	(sprintf@fmt+1)& (0+255),b
   914   002674  C0AA  F09C         	movff	_LDR,?_sprintf+4
   915   002678  C0AB  F09D         	movff	_LDR+1,?_sprintf+5
   916   00267C  C0AC  F09E         	movff	_LDR+2,?_sprintf+6
   917   002680  C0AD  F09F         	movff	_LDR+3,?_sprintf+7
   918   002684  EC6A  F017         	call	_sprintf	;wreg free
   919   002688                     
   920                           ;main.c: 41:         Lcd_Set_Cursor(2,1);
   921   002688  0E01               	movlw	1
   922   00268A  6E04               	movwf	Lcd_Set_Cursor@b^0,c
   923   00268C  0E02               	movlw	2
   924   00268E  EC09  F017         	call	_Lcd_Set_Cursor
   925   002692                     
   926                           ;main.c: 42:         Lcd_Write_String(str_buffeLcd);
   927   002692  0EB7               	movlw	low _str_buffeLcd
   928   002694  6E05               	movwf	Lcd_Write_String@a^0,c
   929   002696  0E00               	movlw	high _str_buffeLcd
   930   002698  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
   931   00269A  EC6C  F018         	call	_Lcd_Write_String	;wreg free
   932   00269E                     
   933                           ;main.c: 44:         if(LDR > 3.0){
   934   00269E  0E00               	movlw	0
   935   0026A0  6E2D               	movwf	___flge@ff1^0,c
   936   0026A2  0E00               	movlw	0
   937   0026A4  6E2E               	movwf	(___flge@ff1+1)^0,c
   938   0026A6  0E40               	movlw	64
   939   0026A8  6E2F               	movwf	(___flge@ff1+2)^0,c
   940   0026AA  0E40               	movlw	64
   941   0026AC  6E30               	movwf	(___flge@ff1+3)^0,c
   942   0026AE  C0AA  F031         	movff	_LDR,___flge@ff2
   943   0026B2  C0AB  F032         	movff	_LDR+1,___flge@ff2+1
   944   0026B6  C0AC  F033         	movff	_LDR+2,___flge@ff2+2
   945   0026BA  C0AD  F034         	movff	_LDR+3,___flge@ff2+3
   946   0026BE  ECA4  F014         	call	___flge	;wreg free
   947   0026C2  B0D8               	btfsc	status,0,c
   948   0026C4  EF66  F013         	goto	u3781
   949   0026C8  EF68  F013         	goto	u3780
   950   0026CC                     u3781:
   951   0026CC  EF6B  F013         	goto	l69
   952   0026D0                     u3780:
   953   0026D0                     
   954                           ;main.c: 45:             LATCbits.LATC0 = 1;
   955   0026D0  808B               	bsf	139,0,c	;volatile
   956                           
   957                           ;main.c: 46:         }else{
   958   0026D2  EF6C  F013         	goto	l3662
   959   0026D6                     l69:
   960                           
   961                           ;main.c: 47:             LATCbits.LATC0 = 0;
   962   0026D6  908B               	bcf	139,0,c	;volatile
   963   0026D8                     l3662:
   964                           
   965                           ;main.c: 49:         _delay((unsigned long)((100)*(16000000UL/4000.0)));
   966   0026D8  0E03               	movlw	3
   967   0026DA  0100               	movlb	0	; () banked
   968   0026DC  6FA1               	movwf	(??_main+1)& (0+255),b
   969   0026DE  0E08               	movlw	8
   970   0026E0  6FA0               	movwf	??_main& (0+255),b
   971   0026E2  0E77               	movlw	119
   972   0026E4                     u3797:
   973   0026E4  2EE8               	decfsz	wreg,f,c
   974   0026E6  D7FE               	bra	u3797
   975   0026E8  2FA0               	decfsz	??_main& (0+255),f,b
   976   0026EA  D7FC               	bra	u3797
   977   0026EC  2FA1               	decfsz	(??_main+1)& (0+255),f,b
   978   0026EE  D7FA               	bra	u3797
   979   0026F0  EFC7  F012         	goto	l3642
   980   0026F4  EF00  F000         	goto	start
   981   0026F8                     __end_of_main:
   982                           	callstack 0
   983                           
   984 ;; *************** function _sprintf *****************
   985 ;; Defined at:
   986 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
   987 ;; Parameters:    Size  Location     Type
   988 ;;  s               2   56[BANK0 ] PTR unsigned char 
   989 ;;		 -> str_buffeLcd(20), 
   990 ;;  fmt             2   58[BANK0 ] PTR const unsigned char 
   991 ;;		 -> STR_2(10), STR_1(11), 
   992 ;; Auto vars:     Size  Location     Type
   993 ;;  f              11   83[COMRAM] struct _IO_FILE
   994 ;;  ap              2   81[COMRAM] PTR void [1]
   995 ;;		 -> ?_sprintf(2), 
   996 ;;  ret             2    0        int 
   997 ;; Return value:  Size  Location     Type
   998 ;;                  2   56[BANK0 ] int 
   999 ;; Registers used:
  1000 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1001 ;; Tracked objects:
  1002 ;;		On entry : 0/0
  1003 ;;		On exit  : 0/0
  1004 ;;		Unchanged: 0/0
  1005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1006 ;;      Params:         0       8       0       0       0       0       0       0       0
  1007 ;;      Locals:        13       0       0       0       0       0       0       0       0
  1008 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1009 ;;      Totals:        13       8       0       0       0       0       0       0       0
  1010 ;;Total ram usage:       21 bytes
  1011 ;; Hardware stack levels used: 1
  1012 ;; Hardware stack levels required when called: 7
  1013 ;; This function calls:
  1014 ;;		_vfprintf
  1015 ;; This function is called by:
  1016 ;;		_main
  1017 ;; This function uses a non-reentrant model
  1018 ;;
  1019                           
  1020                           	psect	text1
  1021   002ED4                     __ptext1:
  1022                           	callstack 0
  1023   002ED4                     _sprintf:
  1024                           	callstack 23
  1025   002ED4  0E9C               	movlw	low (?_sprintf+4)
  1026   002ED6  6E52               	movwf	sprintf@ap^0,c
  1027   002ED8  0E00               	movlw	high (?_sprintf+4)
  1028   002EDA  6E53               	movwf	(sprintf@ap+1)^0,c
  1029   002EDC  C098  F054         	movff	sprintf@s,sprintf@f
  1030   002EE0  C099  F055         	movff	sprintf@s+1,sprintf@f+1
  1031   002EE4  0E00               	movlw	0
  1032   002EE6  6E58               	movwf	(sprintf@f+4)^0,c
  1033   002EE8  0E00               	movlw	0
  1034   002EEA  6E57               	movwf	(sprintf@f+3)^0,c
  1035   002EEC  0E00               	movlw	0
  1036   002EEE  6E5E               	movwf	(sprintf@f+10)^0,c
  1037   002EF0  0E00               	movlw	0
  1038   002EF2  6E5D               	movwf	(sprintf@f+9)^0,c
  1039   002EF4  0E54               	movlw	low sprintf@f
  1040   002EF6  0100               	movlb	0	; () banked
  1041   002EF8  6F92               	movwf	vfprintf@fp& (0+255),b
  1042   002EFA  0E00               	movlw	high sprintf@f
  1043   002EFC  6F93               	movwf	(vfprintf@fp+1)& (0+255),b
  1044   002EFE  C09A  F094         	movff	sprintf@fmt,vfprintf@fmt
  1045   002F02  C09B  F095         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1046   002F06  0E52               	movlw	low sprintf@ap
  1047   002F08  6F96               	movwf	vfprintf@ap& (0+255),b
  1048   002F0A  0E00               	movlw	high sprintf@ap
  1049   002F0C  6F97               	movwf	(vfprintf@ap+1)& (0+255),b
  1050   002F0E  EC93  F017         	call	_vfprintf	;wreg free
  1051   002F12  5057               	movf	(sprintf@f+3)^0,w,c
  1052   002F14  0100               	movlb	0	; () banked
  1053   002F16  2598               	addwf	sprintf@s& (0+255),w,b
  1054   002F18  6ED9               	movwf	fsr2l,c
  1055   002F1A  5058               	movf	(sprintf@f+4)^0,w,c
  1056   002F1C  2199               	addwfc	(sprintf@s+1)& (0+255),w,b
  1057   002F1E  6EDA               	movwf	fsr2h,c
  1058   002F20  0E00               	movlw	0
  1059   002F22  6EDF               	movwf	indf2,c
  1060   002F24                     
  1061                           ; BSR set to: 0
  1062   002F24  0012               	return		;funcret
  1063   002F26                     __end_of_sprintf:
  1064                           	callstack 0
  1065                           
  1066 ;; *************** function _vfprintf *****************
  1067 ;; Defined at:
  1068 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1069 ;; Parameters:    Size  Location     Type
  1070 ;;  fp              2   50[BANK0 ] PTR struct _IO_FILE
  1071 ;;		 -> sprintf@f(11), 
  1072 ;;  fmt             2   52[BANK0 ] PTR const unsigned char 
  1073 ;;		 -> STR_2(10), STR_1(11), 
  1074 ;;  ap              2   54[BANK0 ] PTR PTR void 
  1075 ;;		 -> sprintf@ap(2), 
  1076 ;; Auto vars:     Size  Location     Type
  1077 ;;  cfmt            2   79[COMRAM] PTR unsigned char 
  1078 ;;		 -> STR_2(10), STR_1(11), 
  1079 ;; Return value:  Size  Location     Type
  1080 ;;                  2   50[BANK0 ] int 
  1081 ;; Registers used:
  1082 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1083 ;; Tracked objects:
  1084 ;;		On entry : 0/0
  1085 ;;		On exit  : 0/0
  1086 ;;		Unchanged: 0/0
  1087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1088 ;;      Params:         0       6       0       0       0       0       0       0       0
  1089 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1090 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1091 ;;      Totals:         2       6       0       0       0       0       0       0       0
  1092 ;;Total ram usage:        8 bytes
  1093 ;; Hardware stack levels used: 1
  1094 ;; Hardware stack levels required when called: 6
  1095 ;; This function calls:
  1096 ;;		_vfpfcnvrt
  1097 ;; This function is called by:
  1098 ;;		_sprintf
  1099 ;; This function uses a non-reentrant model
  1100 ;;
  1101                           
  1102                           	psect	text2
  1103   002F26                     __ptext2:
  1104                           	callstack 0
  1105   002F26                     _vfprintf:
  1106                           	callstack 23
  1107   002F26                     
  1108                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1109   002F26  C094  F050         	movff	vfprintf@fmt,vfprintf@cfmt
  1110   002F2A  C095  F051         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1111                           
  1112                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1113   002F2E  EFA8  F017         	goto	l3490
  1114   002F32                     l3488:
  1115                           
  1116                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1117   002F32  C092  F08C         	movff	vfprintf@fp,vfpfcnvrt@fp
  1118   002F36  C093  F08D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1119   002F3A  0E50               	movlw	low vfprintf@cfmt
  1120   002F3C  0100               	movlb	0	; () banked
  1121   002F3E  6F8E               	movwf	vfpfcnvrt@fmt& (0+255),b
  1122   002F40  0E00               	movlw	high vfprintf@cfmt
  1123   002F42  6F8F               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1124   002F44  C096  F090         	movff	vfprintf@ap,vfpfcnvrt@ap
  1125   002F48  C097  F091         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1126   002F4C  EC4F  F00F         	call	_vfpfcnvrt	;wreg free
  1127   002F50                     l3490:
  1128                           
  1129                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1130   002F50  C050  FFF6         	movff	vfprintf@cfmt,tblptrl
  1131   002F54  C051  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1132   002F58                     	if	0	;tblptru may be non-zero
  1133   002F58                     	endif
  1134   002F58                     	if	0	;tblptru may be non-zero
  1135   002F58                     	endif
  1136   002F58  0008               	tblrd		*
  1137   002F5A  50F5               	movf	tablat,w,c
  1138   002F5C  0900               	iorlw	0
  1139   002F5E  A4D8               	btfss	status,2,c
  1140   002F60  EFB4  F017         	goto	u3631
  1141   002F64  EFB6  F017         	goto	u3630
  1142   002F68                     u3631:
  1143   002F68  EF99  F017         	goto	l3488
  1144   002F6C                     u3630:
  1145   002F6C                     
  1146                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1147   002F6C  0E00               	movlw	0
  1148   002F6E  0100               	movlb	0	; () banked
  1149   002F70  6F93               	movwf	(?_vfprintf+1)& (0+255),b
  1150   002F72  0E00               	movlw	0
  1151   002F74  6F92               	movwf	?_vfprintf& (0+255),b
  1152   002F76                     
  1153                           ; BSR set to: 0
  1154   002F76  0012               	return		;funcret
  1155   002F78                     __end_of_vfprintf:
  1156                           	callstack 0
  1157                           
  1158 ;; *************** function _vfpfcnvrt *****************
  1159 ;; Defined at:
  1160 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1161 ;; Parameters:    Size  Location     Type
  1162 ;;  fp              2   44[BANK0 ] PTR struct _IO_FILE
  1163 ;;		 -> sprintf@f(11), 
  1164 ;;  fmt             2   46[BANK0 ] PTR PTR unsigned char 
  1165 ;;		 -> vfprintf@cfmt(2), 
  1166 ;;  ap              2   48[BANK0 ] PTR PTR void 
  1167 ;;		 -> sprintf@ap(2), 
  1168 ;; Auto vars:     Size  Location     Type
  1169 ;;  convarg         8   68[COMRAM] struct .
  1170 ;;  cp              2   77[COMRAM] PTR unsigned char 
  1171 ;;		 -> STR_2(10), STR_1(11), 
  1172 ;;  i               2    0        int 
  1173 ;;  done            2    0        int 
  1174 ;;  c               1   76[COMRAM] unsigned char 
  1175 ;; Return value:  Size  Location     Type
  1176 ;;                  1    wreg      void 
  1177 ;; Registers used:
  1178 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1179 ;; Tracked objects:
  1180 ;;		On entry : 0/0
  1181 ;;		On exit  : 0/0
  1182 ;;		Unchanged: 0/0
  1183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1184 ;;      Params:         0       6       0       0       0       0       0       0       0
  1185 ;;      Locals:        11       0       0       0       0       0       0       0       0
  1186 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1187 ;;      Totals:        14       6       0       0       0       0       0       0       0
  1188 ;;Total ram usage:       20 bytes
  1189 ;; Hardware stack levels used: 1
  1190 ;; Hardware stack levels required when called: 5
  1191 ;; This function calls:
  1192 ;;		_atoi
  1193 ;;		_efgtoa
  1194 ;;		_fputc
  1195 ;;		_isdigit
  1196 ;; This function is called by:
  1197 ;;		_vfprintf
  1198 ;; This function uses a non-reentrant model
  1199 ;;
  1200                           
  1201                           	psect	text3
  1202   001E9E                     __ptext3:
  1203                           	callstack 0
  1204   001E9E                     _vfpfcnvrt:
  1205                           	callstack 23
  1206   001E9E                     
  1207                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1208   001E9E  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1209   001EA2  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1210   001EA6  CFDE FFF6          	movff	postinc2,tblptrl
  1211   001EAA  CFDD FFF7          	movff	postdec2,tblptrh
  1212   001EAE                     	if	0	;tblptru may be non-zero
  1213   001EAE                     	endif
  1214   001EAE                     	if	0	;tblptru may be non-zero
  1215   001EAE                     	endif
  1216   001EAE  0008               	tblrd		*
  1217   001EB0  50F5               	movf	tablat,w,c
  1218   001EB2  0A25               	xorlw	37
  1219   001EB4  A4D8               	btfss	status,2,c
  1220   001EB6  EF5F  F00F         	goto	u3581
  1221   001EBA  EF61  F00F         	goto	u3580
  1222   001EBE                     u3581:
  1223   001EBE  EFC5  F010         	goto	l3438
  1224   001EC2                     u3580:
  1225   001EC2                     
  1226                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1227   001EC2  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1228   001EC6  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1229   001ECA  2ADE               	incf	postinc2,f,c
  1230   001ECC  0E00               	movlw	0
  1231   001ECE  22DD               	addwfc	postdec2,f,c
  1232   001ED0                     
  1233                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1234   001ED0  0E00               	movlw	0
  1235   001ED2  0100               	movlb	0	; () banked
  1236   001ED4  6FB3               	movwf	(_width+1)& (0+255),b
  1237   001ED6  0E00               	movlw	0
  1238   001ED8  6FB2               	movwf	_width& (0+255),b
  1239   001EDA  C0B2  F0B6         	movff	_width,_flags
  1240   001EDE                     
  1241                           ; BSR set to: 0
  1242                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1243   001EDE  69B4               	setf	_prec& (0+255),b
  1244   001EE0  69B5               	setf	(_prec+1)& (0+255),b
  1245   001EE2                     
  1246                           ; BSR set to: 0
  1247                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1091:         if 
      +                          ((*fmt)[0] == '.') {
  1248   001EE2  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1249   001EE6  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1250   001EEA  CFDE FFF6          	movff	postinc2,tblptrl
  1251   001EEE  CFDD FFF7          	movff	postdec2,tblptrh
  1252   001EF2                     	if	0	;tblptru may be non-zero
  1253   001EF2                     	endif
  1254   001EF2                     	if	0	;tblptru may be non-zero
  1255   001EF2                     	endif
  1256   001EF2  0008               	tblrd		*
  1257   001EF4  50F5               	movf	tablat,w,c
  1258   001EF6  0A2E               	xorlw	46
  1259   001EF8  A4D8               	btfss	status,2,c
  1260   001EFA  EF81  F00F         	goto	u3591
  1261   001EFE  EF83  F00F         	goto	u3590
  1262   001F02                     u3591:
  1263   001F02  EFF0  F00F         	goto	l3400
  1264   001F06                     u3590:
  1265   001F06                     
  1266                           ; BSR set to: 0
  1267                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1092:            
      +                           prec = 0;
  1268   001F06  0E00               	movlw	0
  1269   001F08  6FB5               	movwf	(_prec+1)& (0+255),b
  1270   001F0A  0E00               	movlw	0
  1271   001F0C  6FB4               	movwf	_prec& (0+255),b
  1272   001F0E                     
  1273                           ; BSR set to: 0
  1274                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1093:            
      +                           ++*fmt;
  1275   001F0E  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1276   001F12  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1277   001F16  2ADE               	incf	postinc2,f,c
  1278   001F18  0E00               	movlw	0
  1279   001F1A  22DD               	addwfc	postdec2,f,c
  1280   001F1C                     
  1281                           ; BSR set to: 0
  1282                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1094:            
      +                           if ((*fmt)[0] == '*') {
  1283   001F1C  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1284   001F20  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1285   001F24  CFDE FFF6          	movff	postinc2,tblptrl
  1286   001F28  CFDD FFF7          	movff	postdec2,tblptrh
  1287   001F2C                     	if	0	;tblptru may be non-zero
  1288   001F2C                     	endif
  1289   001F2C                     	if	0	;tblptru may be non-zero
  1290   001F2C                     	endif
  1291   001F2C  0008               	tblrd		*
  1292   001F2E  50F5               	movf	tablat,w,c
  1293   001F30  0A2A               	xorlw	42
  1294   001F32  A4D8               	btfss	status,2,c
  1295   001F34  EF9E  F00F         	goto	u3601
  1296   001F38  EFA0  F00F         	goto	u3600
  1297   001F3C                     u3601:
  1298   001F3C  EFBD  F00F         	goto	l3392
  1299   001F40                     u3600:
  1300   001F40                     
  1301                           ; BSR set to: 0
  1302                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1095:            
      +                               ++*fmt;
  1303   001F40  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1304   001F44  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1305   001F48  2ADE               	incf	postinc2,f,c
  1306   001F4A  0E00               	movlw	0
  1307   001F4C  22DD               	addwfc	postdec2,f,c
  1308                           
  1309                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1096:            
      +                               prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1310   001F4E  C090  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1311   001F52  C091  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1312   001F56  CFDF F042          	movff	indf2,??_vfpfcnvrt
  1313   001F5A  0E02               	movlw	2
  1314   001F5C  26DE               	addwf	postinc2,f,c
  1315   001F5E  CFDF F043          	movff	indf2,??_vfpfcnvrt+1
  1316   001F62  0E00               	movlw	0
  1317   001F64  22DD               	addwfc	postdec2,f,c
  1318   001F66  C042  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1319   001F6A  C043  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1320   001F6E  CFDE F0B4          	movff	postinc2,_prec
  1321   001F72  CFDD F0B5          	movff	postdec2,_prec+1
  1322                           
  1323                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1097:            
      +                           } else {
  1324   001F76  EFF0  F00F         	goto	l3400
  1325   001F7A                     l3392:
  1326                           
  1327                           ; BSR set to: 0
  1328                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1098:            
      +                               prec = atoi(*fmt);
  1329   001F7A  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1330   001F7E  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1331   001F82  CFDE F007          	movff	postinc2,atoi@s
  1332   001F86  CFDD F008          	movff	postdec2,atoi@s+1
  1333   001F8A  EC7C  F013         	call	_atoi	;wreg free
  1334   001F8E  C007  F0B4         	movff	?_atoi,_prec
  1335   001F92  C008  F0B5         	movff	?_atoi+1,_prec+1
  1336                           
  1337                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1099:            
      +                               while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  1338   001F96  EFD4  F00F         	goto	l3398
  1339   001F9A                     l3394:
  1340                           
  1341                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1100:            
      +                                   ++*fmt;
  1342   001F9A  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1343   001F9E  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1344   001FA2  2ADE               	incf	postinc2,f,c
  1345   001FA4  0E00               	movlw	0
  1346   001FA6  22DD               	addwfc	postdec2,f,c
  1347   001FA8                     l3398:
  1348   001FA8  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1349   001FAC  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1350   001FB0  CFDE FFF6          	movff	postinc2,tblptrl
  1351   001FB4  CFDD FFF7          	movff	postdec2,tblptrh
  1352   001FB8                     	if	0	;tblptru may be non-zero
  1353   001FB8                     	endif
  1354   001FB8                     	if	0	;tblptru may be non-zero
  1355   001FB8                     	endif
  1356   001FB8  0008               	tblrd		*
  1357   001FBA  CFF5 F042          	movff	tablat,??_vfpfcnvrt
  1358   001FBE  0ED0               	movlw	208
  1359   001FC0  2442               	addwf	??_vfpfcnvrt^0,w,c
  1360   001FC2  6E43               	movwf	(??_vfpfcnvrt+1)^0,c
  1361   001FC4  6A44               	clrf	(??_vfpfcnvrt+2)^0,c
  1362   001FC6  0EFF               	movlw	255
  1363   001FC8  2244               	addwfc	(??_vfpfcnvrt+2)^0,f,c
  1364   001FCA  5044               	movf	(??_vfpfcnvrt+2)^0,w,c
  1365   001FCC  E109               	bnz	u3610
  1366   001FCE  0E0A               	movlw	10
  1367   001FD0  5C43               	subwf	(??_vfpfcnvrt+1)^0,w,c
  1368   001FD2  A0D8               	btfss	status,0,c
  1369   001FD4  EFEE  F00F         	goto	u3611
  1370   001FD8  EFF0  F00F         	goto	u3610
  1371   001FDC                     u3611:
  1372   001FDC  EFCD  F00F         	goto	l3394
  1373   001FE0                     u3610:
  1374   001FE0                     l3400:
  1375                           
  1376                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1392:   cp = *fmt
      +                          ;
  1377   001FE0  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1378   001FE4  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1379   001FE8  CFDE F04E          	movff	postinc2,vfpfcnvrt@cp
  1380   001FEC  CFDD F04F          	movff	postdec2,vfpfcnvrt@cp+1
  1381   001FF0                     
  1382                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1393:   c = *cp;
  1383   001FF0  C04E  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1384   001FF4  C04F  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1385   001FF8                     	if	0	;tblptru may be non-zero
  1386   001FF8                     	endif
  1387   001FF8                     	if	0	;tblptru may be non-zero
  1388   001FF8                     	endif
  1389   001FF8  0008               	tblrd		*
  1390   001FFA  CFF5 F04D          	movff	tablat,vfpfcnvrt@c
  1391                           
  1392                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1394:   switch(c)
      +                           {
  1393   001FFE  EF0D  F010         	goto	l3412
  1394   002002                     l3404:
  1395                           
  1396                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1398:     cp++;
  1397   002002  4A4E               	infsnz	vfpfcnvrt@cp^0,f,c
  1398   002004  2A4F               	incf	(vfpfcnvrt@cp+1)^0,f,c
  1399                           
  1400                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1399:     break;
  1401   002006  EF26  F010         	goto	l3414
  1402   00200A                     l3406:
  1403                           
  1404                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1424:     c = 'l'
      +                          ;
  1405   00200A  0E6C               	movlw	108
  1406   00200C  6E4D               	movwf	vfpfcnvrt@c^0,c
  1407                           
  1408                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1425:     break;
  1409   00200E  EF26  F010         	goto	l3414
  1410   002012                     l3408:
  1411                           
  1412                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1427:     c = 0;
  1413   002012  0E00               	movlw	0
  1414   002014  6E4D               	movwf	vfpfcnvrt@c^0,c
  1415                           
  1416                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1428:     break;
  1417   002016  EF26  F010         	goto	l3414
  1418   00201A                     l3412:
  1419   00201A  504D               	movf	vfpfcnvrt@c^0,w,c
  1420   00201C  6E42               	movwf	??_vfpfcnvrt^0,c
  1421   00201E  6A43               	clrf	(??_vfpfcnvrt+1)^0,c
  1422                           
  1423                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1424                           ; Switch size 1, requested type "simple"
  1425                           ; Number of cases is 1, Range of values is 0 to 0
  1426                           ; switch strategies available:
  1427                           ; Name         Instructions Cycles
  1428                           ; simple_byte            4     3 (average)
  1429                           ;	Chosen strategy is simple_byte
  1430   002020  5043               	movf	(??_vfpfcnvrt+1)^0,w,c
  1431   002022  0A00               	xorlw	0	; case 0
  1432   002024  B4D8               	btfsc	status,2,c
  1433   002026  EF17  F010         	goto	l3748
  1434   00202A  EF09  F010         	goto	l3408
  1435   00202E                     l3748:
  1436                           
  1437                           ; Switch size 1, requested type "simple"
  1438                           ; Number of cases is 3, Range of values is 76 to 108
  1439                           ; switch strategies available:
  1440                           ; Name         Instructions Cycles
  1441                           ; simple_byte           10     6 (average)
  1442                           ;	Chosen strategy is simple_byte
  1443   00202E  5042               	movf	??_vfpfcnvrt^0,w,c
  1444   002030  0A4C               	xorlw	76	; case 76
  1445   002032  B4D8               	btfsc	status,2,c
  1446   002034  EF01  F010         	goto	l3404
  1447   002038  0A2A               	xorlw	42	; case 102
  1448   00203A  B4D8               	btfsc	status,2,c
  1449   00203C  EF05  F010         	goto	l3406
  1450   002040  0A0A               	xorlw	10	; case 108
  1451   002042  B4D8               	btfsc	status,2,c
  1452   002044  EF01  F010         	goto	l3404
  1453   002048  EF09  F010         	goto	l3408
  1454   00204C                     l3414:
  1455   00204C  C04E  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1456   002050  C04F  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1457   002054                     	if	0	;tblptru may be non-zero
  1458   002054                     	endif
  1459   002054                     	if	0	;tblptru may be non-zero
  1460   002054                     	endif
  1461   002054  0008               	tblrd		*
  1462   002056  50F5               	movf	tablat,w,c
  1463   002058  0A66               	xorlw	102
  1464   00205A  A4D8               	btfss	status,2,c
  1465   00205C  EF32  F010         	goto	u3621
  1466   002060  EF34  F010         	goto	u3620
  1467   002064                     u3621:
  1468   002064  EFBC  F010         	goto	l3434
  1469   002068                     u3620:
  1470   002068  EF6A  F010         	goto	l3422
  1471   00206C                     l3416:
  1472                           
  1473                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1459:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1474   00206C  C090  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1475   002070  C091  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1476   002074  CFDF F042          	movff	indf2,??_vfpfcnvrt
  1477   002078  0E04               	movlw	4
  1478   00207A  26DE               	addwf	postinc2,f,c
  1479   00207C  CFDF F043          	movff	indf2,??_vfpfcnvrt+1
  1480   002080  0E00               	movlw	0
  1481   002082  22DD               	addwfc	postdec2,f,c
  1482   002084  C042  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1483   002088  C043  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1484   00208C  CFDE F045          	movff	postinc2,vfpfcnvrt@convarg
  1485   002090  CFDE F046          	movff	postinc2,vfpfcnvrt@convarg+1
  1486   002094  CFDE F047          	movff	postinc2,vfpfcnvrt@convarg+2
  1487   002098  CFDE F048          	movff	postinc2,vfpfcnvrt@convarg+3
  1488                           
  1489                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1460:      break;
  1490   00209C  EF7F  F010         	goto	l3424
  1491   0020A0                     l3418:
  1492                           
  1493                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1462:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  1494   0020A0  C090  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1495   0020A4  C091  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1496   0020A8  CFDF F042          	movff	indf2,??_vfpfcnvrt
  1497   0020AC  0E04               	movlw	4
  1498   0020AE  26DE               	addwf	postinc2,f,c
  1499   0020B0  CFDF F043          	movff	indf2,??_vfpfcnvrt+1
  1500   0020B4  0E00               	movlw	0
  1501   0020B6  22DD               	addwfc	postdec2,f,c
  1502   0020B8  C042  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1503   0020BC  C043  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1504   0020C0  CFDE F045          	movff	postinc2,vfpfcnvrt@convarg
  1505   0020C4  CFDE F046          	movff	postinc2,vfpfcnvrt@convarg+1
  1506   0020C8  CFDE F047          	movff	postinc2,vfpfcnvrt@convarg+2
  1507   0020CC  CFDE F048          	movff	postinc2,vfpfcnvrt@convarg+3
  1508                           
  1509                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1463:      break;
  1510   0020D0  EF7F  F010         	goto	l3424
  1511   0020D4                     l3422:
  1512   0020D4  504D               	movf	vfpfcnvrt@c^0,w,c
  1513   0020D6  6E42               	movwf	??_vfpfcnvrt^0,c
  1514   0020D8  6A43               	clrf	(??_vfpfcnvrt+1)^0,c
  1515                           
  1516                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1517                           ; Switch size 1, requested type "simple"
  1518                           ; Number of cases is 1, Range of values is 0 to 0
  1519                           ; switch strategies available:
  1520                           ; Name         Instructions Cycles
  1521                           ; simple_byte            4     3 (average)
  1522                           ;	Chosen strategy is simple_byte
  1523   0020DA  5043               	movf	(??_vfpfcnvrt+1)^0,w,c
  1524   0020DC  0A00               	xorlw	0	; case 0
  1525   0020DE  B4D8               	btfsc	status,2,c
  1526   0020E0  EF74  F010         	goto	l3750
  1527   0020E4  EF7F  F010         	goto	l3424
  1528   0020E8                     l3750:
  1529                           
  1530                           ; Switch size 1, requested type "simple"
  1531                           ; Number of cases is 2, Range of values is 76 to 108
  1532                           ; switch strategies available:
  1533                           ; Name         Instructions Cycles
  1534                           ; simple_byte            7     4 (average)
  1535                           ;	Chosen strategy is simple_byte
  1536   0020E8  5042               	movf	??_vfpfcnvrt^0,w,c
  1537   0020EA  0A4C               	xorlw	76	; case 76
  1538   0020EC  B4D8               	btfsc	status,2,c
  1539   0020EE  EF50  F010         	goto	l3418
  1540   0020F2  0A20               	xorlw	32	; case 108
  1541   0020F4  B4D8               	btfsc	status,2,c
  1542   0020F6  EF36  F010         	goto	l3416
  1543   0020FA  EF7F  F010         	goto	l3424
  1544   0020FE                     l3424:
  1545                           
  1546                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1465:    *fmt = c
      +                          p+1;
  1547   0020FE  0E01               	movlw	1
  1548   002100  244E               	addwf	vfpfcnvrt@cp^0,w,c
  1549   002102  6E42               	movwf	??_vfpfcnvrt^0,c
  1550   002104  0E00               	movlw	0
  1551   002106  204F               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1552   002108  6E43               	movwf	(??_vfpfcnvrt+1)^0,c
  1553   00210A  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1554   00210E  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1555   002112  C042  FFDE         	movff	??_vfpfcnvrt,postinc2
  1556   002116  C043  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1557                           
  1558                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1466:    switch (
      +                          *cp) {
  1559   00211A  EFA6  F010         	goto	l3432
  1560   00211E                     l3426:
  1561                           
  1562                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1493:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  1563   00211E  C08C  F039         	movff	vfpfcnvrt@fp,efgtoa@fp
  1564   002122  C08D  F03A         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  1565   002126  C045  F03B         	movff	vfpfcnvrt@convarg,efgtoa@f
  1566   00212A  C046  F03C         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  1567   00212E  C047  F03D         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  1568   002132  C048  F03E         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  1569   002136  C04E  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1570   00213A  C04F  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1571   00213E                     	if	0	;tblptru may be non-zero
  1572   00213E                     	endif
  1573   00213E                     	if	0	;tblptru may be non-zero
  1574   00213E                     	endif
  1575   00213E  0008               	tblrd		*
  1576   002140  CFF5 F03F          	movff	tablat,efgtoa@c
  1577   002144  EC10  F004         	call	_efgtoa	;wreg free
  1578   002148  EFD9  F010         	goto	l922
  1579   00214C                     l3432:
  1580   00214C  C04E  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1581   002150  C04F  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1582   002154                     	if	0	;tblptru may be non-zero
  1583   002154                     	endif
  1584   002154                     	if	0	;tblptru may be non-zero
  1585   002154                     	endif
  1586   002154  0008               	tblrd		*
  1587   002156  50F5               	movf	tablat,w,c
  1588   002158  6E42               	movwf	??_vfpfcnvrt^0,c
  1589   00215A  6A43               	clrf	(??_vfpfcnvrt+1)^0,c
  1590                           
  1591                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1592                           ; Switch size 1, requested type "simple"
  1593                           ; Number of cases is 1, Range of values is 0 to 0
  1594                           ; switch strategies available:
  1595                           ; Name         Instructions Cycles
  1596                           ; simple_byte            4     3 (average)
  1597                           ;	Chosen strategy is simple_byte
  1598   00215C  5043               	movf	(??_vfpfcnvrt+1)^0,w,c
  1599   00215E  0A00               	xorlw	0	; case 0
  1600   002160  B4D8               	btfsc	status,2,c
  1601   002162  EFB5  F010         	goto	l3752
  1602   002166  EFBC  F010         	goto	l3434
  1603   00216A                     l3752:
  1604                           
  1605                           ; Switch size 1, requested type "simple"
  1606                           ; Number of cases is 1, Range of values is 102 to 102
  1607                           ; switch strategies available:
  1608                           ; Name         Instructions Cycles
  1609                           ; simple_byte            4     3 (average)
  1610                           ;	Chosen strategy is simple_byte
  1611   00216A  5042               	movf	??_vfpfcnvrt^0,w,c
  1612   00216C  0A66               	xorlw	102	; case 102
  1613   00216E  B4D8               	btfsc	status,2,c
  1614   002170  EF8F  F010         	goto	l3426
  1615   002174  EFBC  F010         	goto	l3434
  1616   002178                     l3434:
  1617                           
  1618                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1619   002178  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1620   00217C  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1621   002180  2ADE               	incf	postinc2,f,c
  1622   002182  0E00               	movlw	0
  1623   002184  22DD               	addwfc	postdec2,f,c
  1624   002186  EFD9  F010         	goto	l922
  1625   00218A                     l3438:
  1626                           
  1627                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1628   00218A  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1629   00218E  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1630   002192  CFDE FFF6          	movff	postinc2,tblptrl
  1631   002196  CFDD FFF7          	movff	postdec2,tblptrh
  1632   00219A                     	if	0	;tblptru may be non-zero
  1633   00219A                     	endif
  1634   00219A                     	if	0	;tblptru may be non-zero
  1635   00219A                     	endif
  1636   00219A  0008               	tblrd		*
  1637   00219C  50F5               	movf	tablat,w,c
  1638   00219E  6E01               	movwf	fputc@c^0,c
  1639   0021A0  6A02               	clrf	(fputc@c+1)^0,c
  1640   0021A2  C08C  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1641   0021A6  C08D  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1642   0021AA  ECA5  F015         	call	_fputc	;wreg free
  1643   0021AE  EFBC  F010         	goto	l3434
  1644   0021B2                     l922:
  1645   0021B2  0012               	return		;funcret
  1646   0021B4                     __end_of_vfpfcnvrt:
  1647                           	callstack 0
  1648                           
  1649 ;; *************** function _efgtoa *****************
  1650 ;; Defined at:
  1651 ;;		line 506 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1652 ;; Parameters:    Size  Location     Type
  1653 ;;  fp              2   56[COMRAM] PTR struct _IO_FILE
  1654 ;;		 -> sprintf@f(11), 
  1655 ;;  f               4   58[COMRAM] PTR struct _IO_FILE
  1656 ;;  c               1   62[COMRAM] unsigned char 
  1657 ;; Auto vars:     Size  Location     Type
  1658 ;;  u               4   40[BANK0 ] struct flui
  1659 ;;  g               4   36[BANK0 ] struct flui
  1660 ;;  l               4   29[BANK0 ] struct flui
  1661 ;;  h               4   25[BANK0 ] struct flui
  1662 ;;  ou              4   19[BANK0 ] struct flui
  1663 ;;  n               2   34[BANK0 ] int 
  1664 ;;  i               2   23[BANK0 ] int 
  1665 ;;  w               2   17[BANK0 ] int 
  1666 ;;  e               2   15[BANK0 ] int 
  1667 ;;  m               2   13[BANK0 ] int 
  1668 ;;  d               2   11[BANK0 ] int 
  1669 ;;  t               2    4[BANK0 ] int 
  1670 ;;  p               2    2[BANK0 ] int 
  1671 ;;  ne              2    0[BANK0 ] int 
  1672 ;;  sign            1   33[BANK0 ] unsigned char 
  1673 ;;  nmode           1   10[BANK0 ] unsigned char 
  1674 ;;  mode            1    9[BANK0 ] unsigned char 
  1675 ;;  pp              1    8[BANK0 ] unsigned char 
  1676 ;;  esign           1    0        unsigned char 
  1677 ;; Return value:  Size  Location     Type
  1678 ;;                  1    wreg      void 
  1679 ;; Registers used:
  1680 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1681 ;; Tracked objects:
  1682 ;;		On entry : 0/0
  1683 ;;		On exit  : 0/0
  1684 ;;		Unchanged: 0/0
  1685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1686 ;;      Params:         7       0       0       0       0       0       0       0       0
  1687 ;;      Locals:         0      44       0       0       0       0       0       0       0
  1688 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1689 ;;      Totals:         9      44       0       0       0       0       0       0       0
  1690 ;;Total ram usage:       53 bytes
  1691 ;; Hardware stack levels used: 1
  1692 ;; Hardware stack levels required when called: 4
  1693 ;; This function calls:
  1694 ;;		___fladd
  1695 ;;		___fldiv
  1696 ;;		___fleq
  1697 ;;		___flge
  1698 ;;		___flmul
  1699 ;;		___flneg
  1700 ;;		___flsub
  1701 ;;		___fltol
  1702 ;;		___fpclassifyf
  1703 ;;		_floorf
  1704 ;;		_labs
  1705 ;;		_memcpy
  1706 ;;		_pad
  1707 ;;		_strcpy
  1708 ;; This function is called by:
  1709 ;;		_vfpfcnvrt
  1710 ;; This function uses a non-reentrant model
  1711 ;;
  1712                           
  1713                           	psect	text4
  1714   000820                     __ptext4:
  1715                           	callstack 0
  1716   000820                     _efgtoa:
  1717                           	callstack 23
  1718   000820                     
  1719                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 506: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources
      +                          \c99\common\doprnt.c: 507: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 508:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .40\pic\sources\c99\common\doprnt.c: 509:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 510:     long double h, l;
  1720   000820  0E00               	movlw	0
  1721   000822  0100               	movlb	0	; () banked
  1722   000824  6F81               	movwf	efgtoa@sign& (0+255),b
  1723   000826                     
  1724                           ; BSR set to: 0
  1725                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 515:     g.f = f;
  1726   000826  C03B  F084         	movff	efgtoa@f,efgtoa@g
  1727   00082A  C03C  F085         	movff	efgtoa@f+1,efgtoa@g+1
  1728   00082E  C03D  F086         	movff	efgtoa@f+2,efgtoa@g+2
  1729   000832  C03E  F087         	movff	efgtoa@f+3,efgtoa@g+3
  1730   000836                     
  1731                           ; BSR set to: 0
  1732                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 516:     if (g.f 
      +                          < 0.0) {
  1733   000836  BF87               	btfsc	(efgtoa@g+3)& (0+255),7,b
  1734   000838  EF22  F004         	goto	u3180
  1735   00083C  EF20  F004         	goto	u3181
  1736   000840                     u3181:
  1737   000840  EF36  F004         	goto	l3114
  1738   000844                     u3180:
  1739   000844                     
  1740                           ; BSR set to: 0
  1741                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 517:         sign
      +                           = 1;
  1742   000844  0E01               	movlw	1
  1743   000846  6F81               	movwf	efgtoa@sign& (0+255),b
  1744   000848                     
  1745                           ; BSR set to: 0
  1746                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 518:         g.f 
      +                          = -g.f;
  1747   000848  C084  F001         	movff	efgtoa@g,___flneg@f1
  1748   00084C  C085  F002         	movff	efgtoa@g+1,___flneg@f1+1
  1749   000850  C086  F003         	movff	efgtoa@g+2,___flneg@f1+2
  1750   000854  C087  F004         	movff	efgtoa@g+3,___flneg@f1+3
  1751   000858  EC8C  F018         	call	___flneg	;wreg free
  1752   00085C  C001  F084         	movff	?___flneg,efgtoa@g
  1753   000860  C002  F085         	movff	?___flneg+1,efgtoa@g+1
  1754   000864  C003  F086         	movff	?___flneg+2,efgtoa@g+2
  1755   000868  C004  F087         	movff	?___flneg+3,efgtoa@g+3
  1756   00086C                     l3114:
  1757                           
  1758                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 522:     n = 0;
  1759   00086C  0E00               	movlw	0
  1760   00086E  0100               	movlb	0	; () banked
  1761   000870  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  1762   000872  0E00               	movlw	0
  1763   000874  6F82               	movwf	efgtoa@n& (0+255),b
  1764   000876                     
  1765                           ; BSR set to: 0
  1766                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 523:     w = widt
      +                          h;
  1767   000876  C0B2  F071         	movff	_width,efgtoa@w
  1768   00087A  C0B3  F072         	movff	_width+1,efgtoa@w+1
  1769   00087E                     
  1770                           ; BSR set to: 0
  1771                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 524:     if (sign
  1772   00087E  5181               	movf	efgtoa@sign& (0+255),w,b
  1773   000880  B4D8               	btfsc	status,2,c
  1774   000882  EF45  F004         	goto	u3191
  1775   000886  EF47  F004         	goto	u3190
  1776   00088A                     u3191:
  1777   00088A  EF5B  F004         	goto	l3128
  1778   00088E                     u3190:
  1779   00088E                     
  1780                           ; BSR set to: 0
  1781                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 528:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 529:   sign = sign ? '-
      +                          ' : '+';
  1782   00088E  5181               	movf	efgtoa@sign& (0+255),w,b
  1783   000890  A4D8               	btfss	status,2,c
  1784   000892  EF4D  F004         	goto	u3201
  1785   000896  EF4F  F004         	goto	u3200
  1786   00089A                     u3201:
  1787   00089A  EF55  F004         	goto	l3124
  1788   00089E                     u3200:
  1789   00089E                     
  1790                           ; BSR set to: 0
  1791   00089E  0E00               	movlw	0
  1792   0008A0  6F67               	movwf	(_efgtoa$1119+1)& (0+255),b
  1793   0008A2  0E2B               	movlw	43
  1794   0008A4  6F66               	movwf	_efgtoa$1119& (0+255),b
  1795   0008A6  EF59  F004         	goto	l3126
  1796   0008AA                     l3124:
  1797                           
  1798                           ; BSR set to: 0
  1799   0008AA  0E00               	movlw	0
  1800   0008AC  6F67               	movwf	(_efgtoa$1119+1)& (0+255),b
  1801   0008AE  0E2D               	movlw	45
  1802   0008B0  6F66               	movwf	_efgtoa$1119& (0+255),b
  1803   0008B2                     l3126:
  1804                           
  1805                           ; BSR set to: 0
  1806   0008B2  C066  F081         	movff	_efgtoa$1119,efgtoa@sign
  1807   0008B6                     l3128:
  1808                           
  1809                           ; BSR set to: 0
  1810                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 538:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  1811   0008B6  C084  F001         	movff	efgtoa@g,___fpclassifyf@x
  1812   0008BA  C085  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  1813   0008BE  C086  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  1814   0008C2  C087  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  1815   0008C6  EC26  F015         	call	___fpclassifyf	;wreg free
  1816   0008CA  0401               	decf	?___fpclassifyf^0,w,c
  1817   0008CC  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  1818   0008CE  A4D8               	btfss	status,2,c
  1819   0008D0  EF6C  F004         	goto	u3211
  1820   0008D4  EF6E  F004         	goto	u3210
  1821   0008D8                     u3211:
  1822   0008D8  EFA1  F004         	goto	l3146
  1823   0008DC                     u3210:
  1824   0008DC                     
  1825                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 539:   if (sign) 
      +                          {
  1826   0008DC  0100               	movlb	0	; () banked
  1827   0008DE  5181               	movf	efgtoa@sign& (0+255),w,b
  1828   0008E0  B4D8               	btfsc	status,2,c
  1829   0008E2  EF75  F004         	goto	u3221
  1830   0008E6  EF77  F004         	goto	u3220
  1831   0008EA                     u3221:
  1832   0008EA  EF80  F004         	goto	l3138
  1833   0008EE                     u3220:
  1834   0008EE                     
  1835                           ; BSR set to: 0
  1836                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 540:    dbuf[0] =
      +                           sign;
  1837   0008EE  C081  F100         	movff	efgtoa@sign,_dbuf
  1838   0008F2                     
  1839                           ; BSR set to: 0
  1840                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 541:    w--;
  1841   0008F2  0771               	decf	efgtoa@w& (0+255),f,b
  1842   0008F4  A0D8               	btfss	status,0,c
  1843   0008F6  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  1844   0008F8                     
  1845                           ; BSR set to: 0
  1846                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 542:    n = 1;
  1847   0008F8  0E00               	movlw	0
  1848   0008FA  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  1849   0008FC  0E01               	movlw	1
  1850   0008FE  6F82               	movwf	efgtoa@n& (0+255),b
  1851   000900                     l3138:
  1852                           
  1853                           ; BSR set to: 0
  1854                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 550:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 551:             strcpy(&d
      +                          buf[n], "inf");
  1855   000900  0E00               	movlw	low _dbuf
  1856   000902  2582               	addwf	efgtoa@n& (0+255),w,b
  1857   000904  6E01               	movwf	strcpy@dest^0,c
  1858   000906  0E01               	movlw	high _dbuf
  1859   000908  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  1860   00090A  6E02               	movwf	(strcpy@dest+1)^0,c
  1861   00090C  0E16               	movlw	low STR_3
  1862   00090E  6E03               	movwf	strcpy@src^0,c
  1863   000910  0E08               	movlw	high STR_3
  1864   000912  6E04               	movwf	(strcpy@src+1)^0,c
  1865   000914  EC4C  F018         	call	_strcpy	;wreg free
  1866   000918                     l3140:
  1867                           
  1868                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 552:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 553:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  1869   000918  0100               	movlb	0	; () banked
  1870   00091A  0EFD               	movlw	253
  1871   00091C  2771               	addwf	efgtoa@w& (0+255),f,b
  1872   00091E  0EFF               	movlw	255
  1873   000920  2372               	addwfc	(efgtoa@w+1)& (0+255),f,b
  1874   000922                     
  1875                           ; BSR set to: 0
  1876                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 554:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  1877   000922  C039  F011         	movff	efgtoa@fp,pad@fp
  1878   000926  C03A  F012         	movff	efgtoa@fp+1,pad@fp+1
  1879   00092A  0E00               	movlw	low _dbuf
  1880   00092C  6E13               	movwf	pad@buf^0,c
  1881   00092E  0E01               	movlw	high _dbuf
  1882   000930  6E14               	movwf	(pad@buf+1)^0,c
  1883   000932  C071  F015         	movff	efgtoa@w,pad@p
  1884   000936  C072  F016         	movff	efgtoa@w+1,pad@p+1
  1885   00093A  EC5F  F016         	call	_pad	;wreg free
  1886   00093E  EF0C  F009         	goto	l854
  1887   000942                     l3146:
  1888                           
  1889                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 556:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  1890   000942  C084  F001         	movff	efgtoa@g,___fpclassifyf@x
  1891   000946  C085  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  1892   00094A  C086  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  1893   00094E  C087  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  1894   000952  EC26  F015         	call	___fpclassifyf	;wreg free
  1895   000956  5001               	movf	?___fpclassifyf^0,w,c
  1896   000958  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  1897   00095A  A4D8               	btfss	status,2,c
  1898   00095C  EFB2  F004         	goto	u3231
  1899   000960  EFB4  F004         	goto	u3230
  1900   000964                     u3231:
  1901   000964  EFD4  F004         	goto	l3164
  1902   000968                     u3230:
  1903   000968                     
  1904                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 557:   if (sign) 
      +                          {
  1905   000968  0100               	movlb	0	; () banked
  1906   00096A  5181               	movf	efgtoa@sign& (0+255),w,b
  1907   00096C  B4D8               	btfsc	status,2,c
  1908   00096E  EFBB  F004         	goto	u3241
  1909   000972  EFBD  F004         	goto	u3240
  1910   000976                     u3241:
  1911   000976  EFC6  F004         	goto	l3156
  1912   00097A                     u3240:
  1913   00097A                     
  1914                           ; BSR set to: 0
  1915                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 558:    dbuf[0] =
      +                           sign;
  1916   00097A  C081  F100         	movff	efgtoa@sign,_dbuf
  1917   00097E                     
  1918                           ; BSR set to: 0
  1919                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 559:    w--;
  1920   00097E  0771               	decf	efgtoa@w& (0+255),f,b
  1921   000980  A0D8               	btfss	status,0,c
  1922   000982  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  1923   000984                     
  1924                           ; BSR set to: 0
  1925                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 560:    n = 1;
  1926   000984  0E00               	movlw	0
  1927   000986  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  1928   000988  0E01               	movlw	1
  1929   00098A  6F82               	movwf	efgtoa@n& (0+255),b
  1930   00098C                     l3156:
  1931                           
  1932                           ; BSR set to: 0
  1933                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 568:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 569:             strcpy(&d
      +                          buf[n], "nan");
  1934   00098C  0E00               	movlw	low _dbuf
  1935   00098E  2582               	addwf	efgtoa@n& (0+255),w,b
  1936   000990  6E01               	movwf	strcpy@dest^0,c
  1937   000992  0E01               	movlw	high _dbuf
  1938   000994  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  1939   000996  6E02               	movwf	(strcpy@dest+1)^0,c
  1940   000998  0E1A               	movlw	low STR_6
  1941   00099A  6E03               	movwf	strcpy@src^0,c
  1942   00099C  0E08               	movlw	high STR_6
  1943   00099E  6E04               	movwf	(strcpy@src+1)^0,c
  1944   0009A0  EC4C  F018         	call	_strcpy	;wreg free
  1945   0009A4  EF8C  F004         	goto	l3140
  1946   0009A8                     l3164:
  1947                           
  1948                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 576:     u.f = 1.
      +                          0;
  1949   0009A8  0E00               	movlw	0
  1950   0009AA  0100               	movlb	0	; () banked
  1951   0009AC  6F88               	movwf	efgtoa@u& (0+255),b
  1952   0009AE  0E00               	movlw	0
  1953   0009B0  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  1954   0009B2  0E80               	movlw	128
  1955   0009B4  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  1956   0009B6  0E3F               	movlw	63
  1957   0009B8  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  1958                           
  1959                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 577:     e = 0;
  1960   0009BA  0E00               	movlw	0
  1961   0009BC  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  1962   0009BE  0E00               	movlw	0
  1963   0009C0  6F6F               	movwf	efgtoa@e& (0+255),b
  1964   0009C2                     
  1965                           ; BSR set to: 0
  1966                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 578:  if (!(g.f =
      +                          = 0.0)) {
  1967   0009C2  C084  F001         	movff	efgtoa@g,___fleq@ff1
  1968   0009C6  C085  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  1969   0009CA  C086  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  1970   0009CE  C087  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  1971   0009D2  0E00               	movlw	0
  1972   0009D4  6E05               	movwf	___fleq@ff2^0,c
  1973   0009D6  0E00               	movlw	0
  1974   0009D8  6E06               	movwf	(___fleq@ff2+1)^0,c
  1975   0009DA  0E00               	movlw	0
  1976   0009DC  6E07               	movwf	(___fleq@ff2+2)^0,c
  1977   0009DE  0E00               	movlw	0
  1978   0009E0  6E08               	movwf	(___fleq@ff2+3)^0,c
  1979   0009E2  EC0A  F016         	call	___fleq	;wreg free
  1980   0009E6  B0D8               	btfsc	status,0,c
  1981   0009E8  EFF8  F004         	goto	u3251
  1982   0009EC  EFFA  F004         	goto	u3250
  1983   0009F0                     u3251:
  1984   0009F0  EFD9  F005         	goto	l857
  1985   0009F4                     u3250:
  1986   0009F4  EF07  F005         	goto	l3172
  1987   0009F8                     l859:
  1988                           
  1989                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 580:    u = ou;
  1990   0009F8  C073  F088         	movff	efgtoa@ou,efgtoa@u
  1991   0009FC  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  1992   000A00  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  1993   000A04  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  1994   000A08                     
  1995                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 581:    ++e;
  1996   000A08  0100               	movlb	0	; () banked
  1997   000A0A  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  1998   000A0C  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  1999   000A0E                     l3172:
  2000                           
  2001                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 579:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  2002   000A0E  C088  F014         	movff	efgtoa@u,___flmul@b
  2003   000A12  C089  F015         	movff	efgtoa@u+1,___flmul@b+1
  2004   000A16  C08A  F016         	movff	efgtoa@u+2,___flmul@b+2
  2005   000A1A  C08B  F017         	movff	efgtoa@u+3,___flmul@b+3
  2006   000A1E  0E00               	movlw	0
  2007   000A20  6E18               	movwf	___flmul@a^0,c
  2008   000A22  0E00               	movlw	0
  2009   000A24  6E19               	movwf	(___flmul@a+1)^0,c
  2010   000A26  0E20               	movlw	32
  2011   000A28  6E1A               	movwf	(___flmul@a+2)^0,c
  2012   000A2A  0E41               	movlw	65
  2013   000A2C  6E1B               	movwf	(___flmul@a+3)^0,c
  2014   000A2E  EC6D  F00B         	call	___flmul	;wreg free
  2015   000A32  C014  F073         	movff	?___flmul,efgtoa@ou
  2016   000A36  C015  F074         	movff	?___flmul+1,efgtoa@ou+1
  2017   000A3A  C016  F075         	movff	?___flmul+2,efgtoa@ou+2
  2018   000A3E  C017  F076         	movff	?___flmul+3,efgtoa@ou+3
  2019   000A42  0100               	movlb	0	; () banked
  2020   000A44  5173               	movf	efgtoa@ou& (0+255),w,b
  2021   000A46  5D84               	subwf	efgtoa@g& (0+255),w,b
  2022   000A48  6E01               	movwf	labs@a^0,c
  2023   000A4A  5174               	movf	(efgtoa@ou+1)& (0+255),w,b
  2024   000A4C  5985               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2025   000A4E  6E02               	movwf	(labs@a+1)^0,c
  2026   000A50  5175               	movf	(efgtoa@ou+2)& (0+255),w,b
  2027   000A52  5986               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2028   000A54  6E03               	movwf	(labs@a+2)^0,c
  2029   000A56  5176               	movf	(efgtoa@ou+3)& (0+255),w,b
  2030   000A58  5987               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2031   000A5A  6E04               	movwf	(labs@a+3)^0,c
  2032   000A5C  ECD6  F016         	call	_labs	;wreg free
  2033   000A60  BE04               	btfsc	(?_labs+3)^0,7,c
  2034   000A62  EF3E  F005         	goto	u3261
  2035   000A66  5004               	movf	(?_labs+3)^0,w,c
  2036   000A68  1003               	iorwf	(?_labs+2)^0,w,c
  2037   000A6A  1002               	iorwf	(?_labs+1)^0,w,c
  2038   000A6C  E109               	bnz	u3260
  2039   000A6E  0E02               	movlw	2
  2040   000A70  5C01               	subwf	?_labs^0,w,c
  2041   000A72  A0D8               	btfss	status,0,c
  2042   000A74  EF3E  F005         	goto	u3261
  2043   000A78  EF40  F005         	goto	u3260
  2044   000A7C                     u3261:
  2045   000A7C  EFFC  F004         	goto	l859
  2046   000A80                     u3260:
  2047   000A80  C073  F02D         	movff	efgtoa@ou,___flge@ff1
  2048   000A84  C074  F02E         	movff	efgtoa@ou+1,___flge@ff1+1
  2049   000A88  C075  F02F         	movff	efgtoa@ou+2,___flge@ff1+2
  2050   000A8C  C076  F030         	movff	efgtoa@ou+3,___flge@ff1+3
  2051   000A90  C084  F031         	movff	efgtoa@g,___flge@ff2
  2052   000A94  C085  F032         	movff	efgtoa@g+1,___flge@ff2+1
  2053   000A98  C086  F033         	movff	efgtoa@g+2,___flge@ff2+2
  2054   000A9C  C087  F034         	movff	efgtoa@g+3,___flge@ff2+3
  2055   000AA0  ECA4  F014         	call	___flge	;wreg free
  2056   000AA4  A0D8               	btfss	status,0,c
  2057   000AA6  EF57  F005         	goto	u3271
  2058   000AAA  EF59  F005         	goto	u3270
  2059   000AAE                     u3271:
  2060   000AAE  EFFC  F004         	goto	l859
  2061   000AB2                     u3270:
  2062   000AB2                     
  2063                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 583:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  2064   000AB2  0100               	movlb	0	; () banked
  2065   000AB4  5188               	movf	efgtoa@u& (0+255),w,b
  2066   000AB6  5D84               	subwf	efgtoa@g& (0+255),w,b
  2067   000AB8  6E01               	movwf	labs@a^0,c
  2068   000ABA  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  2069   000ABC  5985               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2070   000ABE  6E02               	movwf	(labs@a+1)^0,c
  2071   000AC0  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  2072   000AC2  5986               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2073   000AC4  6E03               	movwf	(labs@a+2)^0,c
  2074   000AC6  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  2075   000AC8  5987               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2076   000ACA  6E04               	movwf	(labs@a+3)^0,c
  2077   000ACC  ECD6  F016         	call	_labs	;wreg free
  2078   000AD0  BE04               	btfsc	(?_labs+3)^0,7,c
  2079   000AD2  EF78  F005         	goto	u3280
  2080   000AD6  5004               	movf	(?_labs+3)^0,w,c
  2081   000AD8  1003               	iorwf	(?_labs+2)^0,w,c
  2082   000ADA  1002               	iorwf	(?_labs+1)^0,w,c
  2083   000ADC  E107               	bnz	u3281
  2084   000ADE  0E02               	movlw	2
  2085   000AE0  5C01               	subwf	?_labs^0,w,c
  2086   000AE2  B0D8               	btfsc	status,0,c
  2087   000AE4  EF76  F005         	goto	u3281
  2088   000AE8  EF78  F005         	goto	u3280
  2089   000AEC                     u3281:
  2090   000AEC  EFC0  F005         	goto	l3190
  2091   000AF0                     u3280:
  2092   000AF0                     l3180:
  2093                           
  2094                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 584:    g = u;
  2095   000AF0  C088  F084         	movff	efgtoa@u,efgtoa@g
  2096   000AF4  C089  F085         	movff	efgtoa@u+1,efgtoa@g+1
  2097   000AF8  C08A  F086         	movff	efgtoa@u+2,efgtoa@g+2
  2098   000AFC  C08B  F087         	movff	efgtoa@u+3,efgtoa@g+3
  2099                           
  2100                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 585:   }
  2101   000B00  EFD9  F005         	goto	l857
  2102   000B04                     l3182:
  2103                           
  2104                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 588:     u.f = u.
      +                          f/10.0;
  2105   000B04  C088  F001         	movff	efgtoa@u,___fldiv@b
  2106   000B08  C089  F002         	movff	efgtoa@u+1,___fldiv@b+1
  2107   000B0C  C08A  F003         	movff	efgtoa@u+2,___fldiv@b+2
  2108   000B10  C08B  F004         	movff	efgtoa@u+3,___fldiv@b+3
  2109   000B14  0E00               	movlw	0
  2110   000B16  6E05               	movwf	___fldiv@a^0,c
  2111   000B18  0E00               	movlw	0
  2112   000B1A  6E06               	movwf	(___fldiv@a+1)^0,c
  2113   000B1C  0E20               	movlw	32
  2114   000B1E  6E07               	movwf	(___fldiv@a+2)^0,c
  2115   000B20  0E41               	movlw	65
  2116   000B22  6E08               	movwf	(___fldiv@a+3)^0,c
  2117   000B24  EC82  F00D         	call	___fldiv	;wreg free
  2118   000B28  C001  F088         	movff	?___fldiv,efgtoa@u
  2119   000B2C  C002  F089         	movff	?___fldiv+1,efgtoa@u+1
  2120   000B30  C003  F08A         	movff	?___fldiv+2,efgtoa@u+2
  2121   000B34  C004  F08B         	movff	?___fldiv+3,efgtoa@u+3
  2122   000B38                     
  2123                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 589:     --e;
  2124   000B38  0100               	movlb	0	; () banked
  2125   000B3A  076F               	decf	efgtoa@e& (0+255),f,b
  2126   000B3C  A0D8               	btfss	status,0,c
  2127   000B3E  0770               	decf	(efgtoa@e+1)& (0+255),f,b
  2128   000B40                     
  2129                           ; BSR set to: 0
  2130                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 590:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  2131   000B40  5188               	movf	efgtoa@u& (0+255),w,b
  2132   000B42  5D84               	subwf	efgtoa@g& (0+255),w,b
  2133   000B44  6E01               	movwf	labs@a^0,c
  2134   000B46  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  2135   000B48  5985               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2136   000B4A  6E02               	movwf	(labs@a+1)^0,c
  2137   000B4C  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  2138   000B4E  5986               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2139   000B50  6E03               	movwf	(labs@a+2)^0,c
  2140   000B52  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  2141   000B54  5987               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2142   000B56  6E04               	movwf	(labs@a+3)^0,c
  2143   000B58  ECD6  F016         	call	_labs	;wreg free
  2144   000B5C  BE04               	btfsc	(?_labs+3)^0,7,c
  2145   000B5E  EFBE  F005         	goto	u3290
  2146   000B62  5004               	movf	(?_labs+3)^0,w,c
  2147   000B64  1003               	iorwf	(?_labs+2)^0,w,c
  2148   000B66  1002               	iorwf	(?_labs+1)^0,w,c
  2149   000B68  E107               	bnz	u3291
  2150   000B6A  0E02               	movlw	2
  2151   000B6C  5C01               	subwf	?_labs^0,w,c
  2152   000B6E  B0D8               	btfsc	status,0,c
  2153   000B70  EFBC  F005         	goto	u3291
  2154   000B74  EFBE  F005         	goto	u3290
  2155   000B78                     u3291:
  2156   000B78  EFC0  F005         	goto	l3190
  2157   000B7C                     u3290:
  2158   000B7C  EF78  F005         	goto	l3180
  2159   000B80                     l3190:
  2160                           
  2161                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 587:    while (g.
      +                          f < u.f) {
  2162   000B80  C084  F02D         	movff	efgtoa@g,___flge@ff1
  2163   000B84  C085  F02E         	movff	efgtoa@g+1,___flge@ff1+1
  2164   000B88  C086  F02F         	movff	efgtoa@g+2,___flge@ff1+2
  2165   000B8C  C087  F030         	movff	efgtoa@g+3,___flge@ff1+3
  2166   000B90  C088  F031         	movff	efgtoa@u,___flge@ff2
  2167   000B94  C089  F032         	movff	efgtoa@u+1,___flge@ff2+1
  2168   000B98  C08A  F033         	movff	efgtoa@u+2,___flge@ff2+2
  2169   000B9C  C08B  F034         	movff	efgtoa@u+3,___flge@ff2+3
  2170   000BA0  ECA4  F014         	call	___flge	;wreg free
  2171   000BA4  A0D8               	btfss	status,0,c
  2172   000BA6  EFD7  F005         	goto	u3301
  2173   000BAA  EFD9  F005         	goto	u3300
  2174   000BAE                     u3301:
  2175   000BAE  EF82  F005         	goto	l3182
  2176   000BB2                     u3300:
  2177   000BB2                     l857:
  2178                           
  2179                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 602:  mode = c;
  2180   000BB2  C03F  F069         	movff	efgtoa@c,efgtoa@mode
  2181                           
  2182                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 604:     nmode = 
      +                          mode;
  2183   000BB6  C069  F06A         	movff	efgtoa@mode,efgtoa@nmode
  2184   000BBA                     
  2185                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 614:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 615:         p = (prec < 0)
      +                           ? 6 : prec;
  2186   000BBA  0100               	movlb	0	; () banked
  2187   000BBC  BFB5               	btfsc	(_prec+1)& (0+255),7,b
  2188   000BBE  EFE3  F005         	goto	u3311
  2189   000BC2  EFE5  F005         	goto	u3310
  2190   000BC6                     u3311:
  2191   000BC6  EFEB  F005         	goto	l3196
  2192   000BCA                     u3310:
  2193   000BCA                     
  2194                           ; BSR set to: 0
  2195   000BCA  C0B4  F062         	movff	_prec,efgtoa@p
  2196   000BCE  C0B5  F063         	movff	_prec+1,efgtoa@p+1
  2197   000BD2  EFEF  F005         	goto	l3198
  2198   000BD6                     l3196:
  2199                           
  2200                           ; BSR set to: 0
  2201   000BD6  0E00               	movlw	0
  2202   000BD8  6F63               	movwf	(efgtoa@p+1)& (0+255),b
  2203   000BDA  0E06               	movlw	6
  2204   000BDC  6F62               	movwf	efgtoa@p& (0+255),b
  2205   000BDE                     l3198:
  2206                           
  2207                           ; BSR set to: 0
  2208                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 616:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 630:     m = p;
  2209   000BDE  C062  F06D         	movff	efgtoa@p,efgtoa@m
  2210   000BE2  C063  F06E         	movff	efgtoa@p+1,efgtoa@m+1
  2211   000BE6                     
  2212                           ; BSR set to: 0
  2213                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 634:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 635:         ++m;
  2214   000BE6  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  2215   000BE8  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  2216   000BEA                     
  2217                           ; BSR set to: 0
  2218                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 636:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 640:     if (nmode == 'f
      +                          ') {
  2219   000BEA  0E66               	movlw	102
  2220   000BEC  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  2221   000BEE  A4D8               	btfss	status,2,c
  2222   000BF0  EFFC  F005         	goto	u3321
  2223   000BF4  EFFE  F005         	goto	u3320
  2224   000BF8                     u3321:
  2225   000BF8  EF1E  F006         	goto	l3212
  2226   000BFC                     u3320:
  2227   000BFC                     
  2228                           ; BSR set to: 0
  2229                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 641:         if (
      +                          e < 0) {
  2230   000BFC  BF70               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2231   000BFE  EF05  F006         	goto	u3330
  2232   000C02  EF03  F006         	goto	u3331
  2233   000C06                     u3331:
  2234   000C06  EF11  F006         	goto	l3208
  2235   000C0A                     u3330:
  2236   000C0A                     
  2237                           ; BSR set to: 0
  2238                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 642:             
      +                          u.f = 1.0;
  2239   000C0A  0E00               	movlw	0
  2240   000C0C  6F88               	movwf	efgtoa@u& (0+255),b
  2241   000C0E  0E00               	movlw	0
  2242   000C10  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  2243   000C12  0E80               	movlw	128
  2244   000C14  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  2245   000C16  0E3F               	movlw	63
  2246   000C18  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  2247                           
  2248                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 643:             
      +                          e = 0;
  2249   000C1A  0E00               	movlw	0
  2250   000C1C  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  2251   000C1E  0E00               	movlw	0
  2252   000C20  6F6F               	movwf	efgtoa@e& (0+255),b
  2253   000C22                     l3208:
  2254                           
  2255                           ; BSR set to: 0
  2256                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 645:         if (
      +                          !(mode == 'g')) {
  2257   000C22  0E67               	movlw	103
  2258   000C24  1969               	xorwf	efgtoa@mode& (0+255),w,b
  2259   000C26  B4D8               	btfsc	status,2,c
  2260   000C28  EF18  F006         	goto	u3341
  2261   000C2C  EF1A  F006         	goto	u3340
  2262   000C30                     u3341:
  2263   000C30  EF1E  F006         	goto	l3212
  2264   000C34                     u3340:
  2265   000C34                     
  2266                           ; BSR set to: 0
  2267                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 646:             
      +                          m += e;
  2268   000C34  516F               	movf	efgtoa@e& (0+255),w,b
  2269   000C36  276D               	addwf	efgtoa@m& (0+255),f,b
  2270   000C38  5170               	movf	(efgtoa@e+1)& (0+255),w,b
  2271   000C3A  236E               	addwfc	(efgtoa@m+1)& (0+255),f,b
  2272   000C3C                     l3212:
  2273                           
  2274                           ; BSR set to: 0
  2275                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 652:     i = 0;
  2276   000C3C  0E00               	movlw	0
  2277   000C3E  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  2278   000C40  0E00               	movlw	0
  2279   000C42  6F77               	movwf	efgtoa@i& (0+255),b
  2280   000C44                     
  2281                           ; BSR set to: 0
  2282                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 653:     h = g.f;
  2283   000C44  C084  F079         	movff	efgtoa@g,efgtoa@h
  2284   000C48  C085  F07A         	movff	efgtoa@g+1,efgtoa@h+1
  2285   000C4C  C086  F07B         	movff	efgtoa@g+2,efgtoa@h+2
  2286   000C50  C087  F07C         	movff	efgtoa@g+3,efgtoa@h+3
  2287   000C54                     
  2288                           ; BSR set to: 0
  2289                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 654:     ou = u;
  2290   000C54  C088  F073         	movff	efgtoa@u,efgtoa@ou
  2291   000C58  C089  F074         	movff	efgtoa@u+1,efgtoa@ou+1
  2292   000C5C  C08A  F075         	movff	efgtoa@u+2,efgtoa@ou+2
  2293   000C60  C08B  F076         	movff	efgtoa@u+3,efgtoa@ou+3
  2294                           
  2295                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  2296   000C64  EFAF  F006         	goto	l3226
  2297   000C68                     l3218:
  2298                           
  2299                           ; BSR set to: 0
  2300                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 656:         l = 
      +                          floorf(h/u.f);
  2301   000C68  C079  F001         	movff	efgtoa@h,___fldiv@b
  2302   000C6C  C07A  F002         	movff	efgtoa@h+1,___fldiv@b+1
  2303   000C70  C07B  F003         	movff	efgtoa@h+2,___fldiv@b+2
  2304   000C74  C07C  F004         	movff	efgtoa@h+3,___fldiv@b+3
  2305   000C78  C088  F005         	movff	efgtoa@u,___fldiv@a
  2306   000C7C  C089  F006         	movff	efgtoa@u+1,___fldiv@a+1
  2307   000C80  C08A  F007         	movff	efgtoa@u+2,___fldiv@a+2
  2308   000C84  C08B  F008         	movff	efgtoa@u+3,___fldiv@a+3
  2309   000C88  EC82  F00D         	call	___fldiv	;wreg free
  2310   000C8C  C001  F01A         	movff	?___fldiv,floorf@x
  2311   000C90  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  2312   000C94  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  2313   000C98  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  2314   000C9C  ECDA  F010         	call	_floorf	;wreg free
  2315   000CA0  C01A  F07D         	movff	?_floorf,efgtoa@l
  2316   000CA4  C01B  F07E         	movff	?_floorf+1,efgtoa@l+1
  2317   000CA8  C01C  F07F         	movff	?_floorf+2,efgtoa@l+2
  2318   000CAC  C01D  F080         	movff	?_floorf+3,efgtoa@l+3
  2319                           
  2320                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 657:         d = 
      +                          (int)l;
  2321   000CB0  C07D  F001         	movff	efgtoa@l,___fltol@f1
  2322   000CB4  C07E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2323   000CB8  C07F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2324   000CBC  C080  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2325   000CC0  EC21  F014         	call	___fltol	;wreg free
  2326   000CC4  C001  F06B         	movff	?___fltol,efgtoa@d
  2327   000CC8  C002  F06C         	movff	?___fltol+1,efgtoa@d+1
  2328   000CCC                     
  2329                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 658:         h -=
      +                           l*u.f;
  2330   000CCC  C079  F02D         	movff	efgtoa@h,___flsub@b
  2331   000CD0  C07A  F02E         	movff	efgtoa@h+1,___flsub@b+1
  2332   000CD4  C07B  F02F         	movff	efgtoa@h+2,___flsub@b+2
  2333   000CD8  C07C  F030         	movff	efgtoa@h+3,___flsub@b+3
  2334   000CDC  C07D  F018         	movff	efgtoa@l,___flmul@a
  2335   000CE0  C07E  F019         	movff	efgtoa@l+1,___flmul@a+1
  2336   000CE4  C07F  F01A         	movff	efgtoa@l+2,___flmul@a+2
  2337   000CE8  C080  F01B         	movff	efgtoa@l+3,___flmul@a+3
  2338   000CEC  C088  F014         	movff	efgtoa@u,___flmul@b
  2339   000CF0  C089  F015         	movff	efgtoa@u+1,___flmul@b+1
  2340   000CF4  C08A  F016         	movff	efgtoa@u+2,___flmul@b+2
  2341   000CF8  C08B  F017         	movff	efgtoa@u+3,___flmul@b+3
  2342   000CFC  EC6D  F00B         	call	___flmul	;wreg free
  2343   000D00  C014  F031         	movff	?___flmul,___flsub@a
  2344   000D04  C015  F032         	movff	?___flmul+1,___flsub@a+1
  2345   000D08  C016  F033         	movff	?___flmul+2,___flsub@a+2
  2346   000D0C  C017  F034         	movff	?___flmul+3,___flsub@a+3
  2347   000D10  ECE4  F017         	call	___flsub	;wreg free
  2348   000D14  C02D  F079         	movff	?___flsub,efgtoa@h
  2349   000D18  C02E  F07A         	movff	?___flsub+1,efgtoa@h+1
  2350   000D1C  C02F  F07B         	movff	?___flsub+2,efgtoa@h+2
  2351   000D20  C030  F07C         	movff	?___flsub+3,efgtoa@h+3
  2352   000D24                     
  2353                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 659:         u.f 
      +                          = u.f/10.0;
  2354   000D24  C088  F001         	movff	efgtoa@u,___fldiv@b
  2355   000D28  C089  F002         	movff	efgtoa@u+1,___fldiv@b+1
  2356   000D2C  C08A  F003         	movff	efgtoa@u+2,___fldiv@b+2
  2357   000D30  C08B  F004         	movff	efgtoa@u+3,___fldiv@b+3
  2358   000D34  0E00               	movlw	0
  2359   000D36  6E05               	movwf	___fldiv@a^0,c
  2360   000D38  0E00               	movlw	0
  2361   000D3A  6E06               	movwf	(___fldiv@a+1)^0,c
  2362   000D3C  0E20               	movlw	32
  2363   000D3E  6E07               	movwf	(___fldiv@a+2)^0,c
  2364   000D40  0E41               	movlw	65
  2365   000D42  6E08               	movwf	(___fldiv@a+3)^0,c
  2366   000D44  EC82  F00D         	call	___fldiv	;wreg free
  2367   000D48  C001  F088         	movff	?___fldiv,efgtoa@u
  2368   000D4C  C002  F089         	movff	?___fldiv+1,efgtoa@u+1
  2369   000D50  C003  F08A         	movff	?___fldiv+2,efgtoa@u+2
  2370   000D54  C004  F08B         	movff	?___fldiv+3,efgtoa@u+3
  2371   000D58                     
  2372                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 660:         ++i;
  2373   000D58  0100               	movlb	0	; () banked
  2374   000D5A  4B77               	infsnz	efgtoa@i& (0+255),f,b
  2375   000D5C  2B78               	incf	(efgtoa@i+1)& (0+255),f,b
  2376   000D5E                     l3226:
  2377                           
  2378                           ; BSR set to: 0
  2379                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  2380   000D5E  516D               	movf	efgtoa@m& (0+255),w,b
  2381   000D60  5D77               	subwf	efgtoa@i& (0+255),w,b
  2382   000D62  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  2383   000D64  0A80               	xorlw	128
  2384   000D66  6E40               	movwf	??_efgtoa^0,c
  2385   000D68  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  2386   000D6A  0A80               	xorlw	128
  2387   000D6C  5840               	subwfb	??_efgtoa^0,w,c
  2388   000D6E  A0D8               	btfss	status,0,c
  2389   000D70  EFBC  F006         	goto	u3351
  2390   000D74  EFBE  F006         	goto	u3350
  2391   000D78                     u3351:
  2392   000D78  EF34  F006         	goto	l3218
  2393   000D7C                     u3350:
  2394   000D7C                     
  2395                           ; BSR set to: 0
  2396                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 664:     l = u.f*
      +                          5.0;
  2397   000D7C  C088  F014         	movff	efgtoa@u,___flmul@b
  2398   000D80  C089  F015         	movff	efgtoa@u+1,___flmul@b+1
  2399   000D84  C08A  F016         	movff	efgtoa@u+2,___flmul@b+2
  2400   000D88  C08B  F017         	movff	efgtoa@u+3,___flmul@b+3
  2401   000D8C  0E00               	movlw	0
  2402   000D8E  6E18               	movwf	___flmul@a^0,c
  2403   000D90  0E00               	movlw	0
  2404   000D92  6E19               	movwf	(___flmul@a+1)^0,c
  2405   000D94  0EA0               	movlw	160
  2406   000D96  6E1A               	movwf	(___flmul@a+2)^0,c
  2407   000D98  0E40               	movlw	64
  2408   000D9A  6E1B               	movwf	(___flmul@a+3)^0,c
  2409   000D9C  EC6D  F00B         	call	___flmul	;wreg free
  2410   000DA0  C014  F07D         	movff	?___flmul,efgtoa@l
  2411   000DA4  C015  F07E         	movff	?___flmul+1,efgtoa@l+1
  2412   000DA8  C016  F07F         	movff	?___flmul+2,efgtoa@l+2
  2413   000DAC  C017  F080         	movff	?___flmul+3,efgtoa@l+3
  2414   000DB0                     
  2415                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 665:     if (h < 
      +                          l) {
  2416   000DB0  C079  F02D         	movff	efgtoa@h,___flge@ff1
  2417   000DB4  C07A  F02E         	movff	efgtoa@h+1,___flge@ff1+1
  2418   000DB8  C07B  F02F         	movff	efgtoa@h+2,___flge@ff1+2
  2419   000DBC  C07C  F030         	movff	efgtoa@h+3,___flge@ff1+3
  2420   000DC0  C07D  F031         	movff	efgtoa@l,___flge@ff2
  2421   000DC4  C07E  F032         	movff	efgtoa@l+1,___flge@ff2+1
  2422   000DC8  C07F  F033         	movff	efgtoa@l+2,___flge@ff2+2
  2423   000DCC  C080  F034         	movff	efgtoa@l+3,___flge@ff2+3
  2424   000DD0  ECA4  F014         	call	___flge	;wreg free
  2425   000DD4  B0D8               	btfsc	status,0,c
  2426   000DD6  EFEF  F006         	goto	u3361
  2427   000DDA  EFF1  F006         	goto	u3360
  2428   000DDE                     u3361:
  2429   000DDE  EFFC  F006         	goto	l3234
  2430   000DE2                     u3360:
  2431   000DE2                     
  2432                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 666:         l = 
      +                          0.0;
  2433   000DE2  0E00               	movlw	0
  2434   000DE4  0100               	movlb	0	; () banked
  2435   000DE6  6F7D               	movwf	efgtoa@l& (0+255),b
  2436   000DE8  0E00               	movlw	0
  2437   000DEA  6F7E               	movwf	(efgtoa@l+1)& (0+255),b
  2438   000DEC  0E00               	movlw	0
  2439   000DEE  6F7F               	movwf	(efgtoa@l+2)& (0+255),b
  2440   000DF0  0E00               	movlw	0
  2441   000DF2  6F80               	movwf	(efgtoa@l+3)& (0+255),b
  2442                           
  2443                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 667:     } else {
  2444   000DF4  EF25  F007         	goto	l3240
  2445   000DF8                     l3234:
  2446                           
  2447                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 669:         if (
      +                          (h == l) && !(d % 2)) {
  2448   000DF8  C079  F001         	movff	efgtoa@h,___fleq@ff1
  2449   000DFC  C07A  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  2450   000E00  C07B  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  2451   000E04  C07C  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  2452   000E08  C07D  F005         	movff	efgtoa@l,___fleq@ff2
  2453   000E0C  C07E  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  2454   000E10  C07F  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  2455   000E14  C080  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  2456   000E18  EC0A  F016         	call	___fleq	;wreg free
  2457   000E1C  A0D8               	btfss	status,0,c
  2458   000E1E  EF13  F007         	goto	u3371
  2459   000E22  EF15  F007         	goto	u3370
  2460   000E26                     u3371:
  2461   000E26  EF25  F007         	goto	l3240
  2462   000E2A                     u3370:
  2463   000E2A  0100               	movlb	0	; () banked
  2464   000E2C  B16B               	btfsc	efgtoa@d& (0+255),0,b
  2465   000E2E  EF1B  F007         	goto	u3381
  2466   000E32  EF1D  F007         	goto	u3380
  2467   000E36                     u3381:
  2468   000E36  EF25  F007         	goto	l3240
  2469   000E3A                     u3380:
  2470   000E3A                     
  2471                           ; BSR set to: 0
  2472                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 670:             
      +                          l = 0.0;
  2473   000E3A  0E00               	movlw	0
  2474   000E3C  6F7D               	movwf	efgtoa@l& (0+255),b
  2475   000E3E  0E00               	movlw	0
  2476   000E40  6F7E               	movwf	(efgtoa@l+1)& (0+255),b
  2477   000E42  0E00               	movlw	0
  2478   000E44  6F7F               	movwf	(efgtoa@l+2)& (0+255),b
  2479   000E46  0E00               	movlw	0
  2480   000E48  6F80               	movwf	(efgtoa@l+3)& (0+255),b
  2481   000E4A                     l3240:
  2482                           
  2483                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 675:     h = g.f 
      +                          + l;
  2484   000E4A  C084  F001         	movff	efgtoa@g,___fladd@b
  2485   000E4E  C085  F002         	movff	efgtoa@g+1,___fladd@b+1
  2486   000E52  C086  F003         	movff	efgtoa@g+2,___fladd@b+2
  2487   000E56  C087  F004         	movff	efgtoa@g+3,___fladd@b+3
  2488   000E5A  C07D  F005         	movff	efgtoa@l,___fladd@a
  2489   000E5E  C07E  F006         	movff	efgtoa@l+1,___fladd@a+1
  2490   000E62  C07F  F007         	movff	efgtoa@l+2,___fladd@a+2
  2491   000E66  C080  F008         	movff	efgtoa@l+3,___fladd@a+3
  2492   000E6A  EC0D  F009         	call	___fladd	;wreg free
  2493   000E6E  C001  F079         	movff	?___fladd,efgtoa@h
  2494   000E72  C002  F07A         	movff	?___fladd+1,efgtoa@h+1
  2495   000E76  C003  F07B         	movff	?___fladd+2,efgtoa@h+2
  2496   000E7A  C004  F07C         	movff	?___fladd+3,efgtoa@h+3
  2497   000E7E                     
  2498                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 677:  if (h >= (o
      +                          u.f*10.0)) {
  2499   000E7E  C079  F02D         	movff	efgtoa@h,___flge@ff1
  2500   000E82  C07A  F02E         	movff	efgtoa@h+1,___flge@ff1+1
  2501   000E86  C07B  F02F         	movff	efgtoa@h+2,___flge@ff1+2
  2502   000E8A  C07C  F030         	movff	efgtoa@h+3,___flge@ff1+3
  2503   000E8E  0E00               	movlw	0
  2504   000E90  6E18               	movwf	___flmul@a^0,c
  2505   000E92  0E00               	movlw	0
  2506   000E94  6E19               	movwf	(___flmul@a+1)^0,c
  2507   000E96  0E20               	movlw	32
  2508   000E98  6E1A               	movwf	(___flmul@a+2)^0,c
  2509   000E9A  0E41               	movlw	65
  2510   000E9C  6E1B               	movwf	(___flmul@a+3)^0,c
  2511   000E9E  C073  F014         	movff	efgtoa@ou,___flmul@b
  2512   000EA2  C074  F015         	movff	efgtoa@ou+1,___flmul@b+1
  2513   000EA6  C075  F016         	movff	efgtoa@ou+2,___flmul@b+2
  2514   000EAA  C076  F017         	movff	efgtoa@ou+3,___flmul@b+3
  2515   000EAE  EC6D  F00B         	call	___flmul	;wreg free
  2516   000EB2  C014  F031         	movff	?___flmul,___flge@ff2
  2517   000EB6  C015  F032         	movff	?___flmul+1,___flge@ff2+1
  2518   000EBA  C016  F033         	movff	?___flmul+2,___flge@ff2+2
  2519   000EBE  C017  F034         	movff	?___flmul+3,___flge@ff2+3
  2520   000EC2  ECA4  F014         	call	___flge	;wreg free
  2521   000EC6  A0D8               	btfss	status,0,c
  2522   000EC8  EF68  F007         	goto	u3391
  2523   000ECC  EF6A  F007         	goto	u3390
  2524   000ED0                     u3391:
  2525   000ED0  EF93  F007         	goto	l3252
  2526   000ED4                     u3390:
  2527   000ED4                     
  2528                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 678:   e++;
  2529   000ED4  0100               	movlb	0	; () banked
  2530   000ED6  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  2531   000ED8  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  2532   000EDA                     
  2533                           ; BSR set to: 0
  2534                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 679:   ou.f *= 10
      +                          .0;
  2535   000EDA  C073  F014         	movff	efgtoa@ou,___flmul@b
  2536   000EDE  C074  F015         	movff	efgtoa@ou+1,___flmul@b+1
  2537   000EE2  C075  F016         	movff	efgtoa@ou+2,___flmul@b+2
  2538   000EE6  C076  F017         	movff	efgtoa@ou+3,___flmul@b+3
  2539   000EEA  0E00               	movlw	0
  2540   000EEC  6E18               	movwf	___flmul@a^0,c
  2541   000EEE  0E00               	movlw	0
  2542   000EF0  6E19               	movwf	(___flmul@a+1)^0,c
  2543   000EF2  0E20               	movlw	32
  2544   000EF4  6E1A               	movwf	(___flmul@a+2)^0,c
  2545   000EF6  0E41               	movlw	65
  2546   000EF8  6E1B               	movwf	(___flmul@a+3)^0,c
  2547   000EFA  EC6D  F00B         	call	___flmul	;wreg free
  2548   000EFE  C014  F073         	movff	?___flmul,efgtoa@ou
  2549   000F02  C015  F074         	movff	?___flmul+1,efgtoa@ou+1
  2550   000F06  C016  F075         	movff	?___flmul+2,efgtoa@ou+2
  2551   000F0A  C017  F076         	movff	?___flmul+3,efgtoa@ou+3
  2552   000F0E                     
  2553                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 681:   if (nmode 
      +                          == 'f') {
  2554   000F0E  0E66               	movlw	102
  2555   000F10  0100               	movlb	0	; () banked
  2556   000F12  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  2557   000F14  A4D8               	btfss	status,2,c
  2558   000F16  EF8F  F007         	goto	u3401
  2559   000F1A  EF91  F007         	goto	u3400
  2560   000F1E                     u3401:
  2561   000F1E  EF93  F007         	goto	l3252
  2562   000F22                     u3400:
  2563   000F22                     
  2564                           ; BSR set to: 0
  2565                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 683:    m++;
  2566   000F22  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  2567   000F24  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  2568   000F26                     l3252:
  2569                           
  2570                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 689:     u = ou;
  2571   000F26  C073  F088         	movff	efgtoa@ou,efgtoa@u
  2572   000F2A  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  2573   000F2E  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  2574   000F32  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  2575   000F36                     
  2576                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 693:  ne = e;
  2577   000F36  C06F  F060         	movff	efgtoa@e,efgtoa@ne
  2578   000F3A  C070  F061         	movff	efgtoa@e+1,efgtoa@ne+1
  2579   000F3E                     
  2580                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 695:     pp = 0;
  2581   000F3E  0E00               	movlw	0
  2582   000F40  0100               	movlb	0	; () banked
  2583   000F42  6F68               	movwf	efgtoa@pp& (0+255),b
  2584   000F44                     
  2585                           ; BSR set to: 0
  2586                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 696:     t = 0;
  2587   000F44  0E00               	movlw	0
  2588   000F46  6F65               	movwf	(efgtoa@t+1)& (0+255),b
  2589   000F48  0E00               	movlw	0
  2590   000F4A  6F64               	movwf	efgtoa@t& (0+255),b
  2591   000F4C                     
  2592                           ; BSR set to: 0
  2593                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 697:     i = 0;
  2594   000F4C  0E00               	movlw	0
  2595   000F4E  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  2596   000F50  0E00               	movlw	0
  2597   000F52  6F77               	movwf	efgtoa@i& (0+255),b
  2598                           
  2599                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  2600   000F54  EF91  F008         	goto	l3302
  2601   000F58                     l3262:
  2602                           
  2603                           ; BSR set to: 0
  2604                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 699:         l = 
      +                          floorf(h/u.f);
  2605   000F58  C079  F001         	movff	efgtoa@h,___fldiv@b
  2606   000F5C  C07A  F002         	movff	efgtoa@h+1,___fldiv@b+1
  2607   000F60  C07B  F003         	movff	efgtoa@h+2,___fldiv@b+2
  2608   000F64  C07C  F004         	movff	efgtoa@h+3,___fldiv@b+3
  2609   000F68  C088  F005         	movff	efgtoa@u,___fldiv@a
  2610   000F6C  C089  F006         	movff	efgtoa@u+1,___fldiv@a+1
  2611   000F70  C08A  F007         	movff	efgtoa@u+2,___fldiv@a+2
  2612   000F74  C08B  F008         	movff	efgtoa@u+3,___fldiv@a+3
  2613   000F78  EC82  F00D         	call	___fldiv	;wreg free
  2614   000F7C  C001  F01A         	movff	?___fldiv,floorf@x
  2615   000F80  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  2616   000F84  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  2617   000F88  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  2618   000F8C  ECDA  F010         	call	_floorf	;wreg free
  2619   000F90  C01A  F07D         	movff	?_floorf,efgtoa@l
  2620   000F94  C01B  F07E         	movff	?_floorf+1,efgtoa@l+1
  2621   000F98  C01C  F07F         	movff	?_floorf+2,efgtoa@l+2
  2622   000F9C  C01D  F080         	movff	?_floorf+3,efgtoa@l+3
  2623                           
  2624                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 700:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  2625   000FA0  C07D  F001         	movff	efgtoa@l,___fltol@f1
  2626   000FA4  C07E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2627   000FA8  C07F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2628   000FAC  C080  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2629   000FB0  EC21  F014         	call	___fltol	;wreg free
  2630   000FB4  BE02               	btfsc	(?___fltol+1)^0,7,c
  2631   000FB6  EFE8  F007         	goto	u3410
  2632   000FBA  5002               	movf	(?___fltol+1)^0,w,c
  2633   000FBC  E107               	bnz	u3411
  2634   000FBE  0E0A               	movlw	10
  2635   000FC0  5C01               	subwf	?___fltol^0,w,c
  2636   000FC2  B0D8               	btfsc	status,0,c
  2637   000FC4  EFE6  F007         	goto	u3411
  2638   000FC8  EFE8  F007         	goto	u3410
  2639   000FCC                     u3411:
  2640   000FCC  EFF8  F007         	goto	l3266
  2641   000FD0                     u3410:
  2642   000FD0  C07D  F001         	movff	efgtoa@l,___fltol@f1
  2643   000FD4  C07E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2644   000FD8  C07F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2645   000FDC  C080  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2646   000FE0  EC21  F014         	call	___fltol	;wreg free
  2647   000FE4  C001  F06B         	movff	?___fltol,efgtoa@d
  2648   000FE8  C002  F06C         	movff	?___fltol+1,efgtoa@d+1
  2649   000FEC  EFFD  F007         	goto	l887
  2650   000FF0                     l3266:
  2651   000FF0  0E00               	movlw	0
  2652   000FF2  0100               	movlb	0	; () banked
  2653   000FF4  6F6C               	movwf	(efgtoa@d+1)& (0+255),b
  2654   000FF6  0E09               	movlw	9
  2655   000FF8  6F6B               	movwf	efgtoa@d& (0+255),b
  2656   000FFA                     l887:
  2657                           
  2658                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 711:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 712:             if (!pp &
      +                          & (ne < 0)) {
  2659   000FFA  0100               	movlb	0	; () banked
  2660   000FFC  5168               	movf	efgtoa@pp& (0+255),w,b
  2661   000FFE  A4D8               	btfss	status,2,c
  2662   001000  EF04  F008         	goto	u3421
  2663   001004  EF06  F008         	goto	u3420
  2664   001008                     u3421:
  2665   001008  EF2E  F008         	goto	l3286
  2666   00100C                     u3420:
  2667   00100C                     
  2668                           ; BSR set to: 0
  2669   00100C  BF61               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  2670   00100E  EF0D  F008         	goto	u3430
  2671   001012  EF0B  F008         	goto	u3431
  2672   001016                     u3431:
  2673   001016  EF2E  F008         	goto	l3286
  2674   00101A                     u3430:
  2675   00101A                     
  2676                           ; BSR set to: 0
  2677                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 713:             
      +                              dbuf[n++] = '.';
  2678   00101A  0E00               	movlw	low _dbuf
  2679   00101C  2582               	addwf	efgtoa@n& (0+255),w,b
  2680   00101E  6ED9               	movwf	fsr2l,c
  2681   001020  0E01               	movlw	high _dbuf
  2682   001022  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2683   001024  6EDA               	movwf	fsr2h,c
  2684   001026  0E2E               	movlw	46
  2685   001028  6EDF               	movwf	indf2,c
  2686   00102A                     
  2687                           ; BSR set to: 0
  2688   00102A  4B82               	infsnz	efgtoa@n& (0+255),f,b
  2689   00102C  2B83               	incf	(efgtoa@n+1)& (0+255),f,b
  2690   00102E                     
  2691                           ; BSR set to: 0
  2692                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 714:             
      +                              --w;
  2693   00102E  0771               	decf	efgtoa@w& (0+255),f,b
  2694   001030  A0D8               	btfss	status,0,c
  2695   001032  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2696   001034                     
  2697                           ; BSR set to: 0
  2698                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 715:             
      +                              pp = 1;
  2699   001034  0E01               	movlw	1
  2700   001036  6F68               	movwf	efgtoa@pp& (0+255),b
  2701   001038  EF2E  F008         	goto	l3286
  2702   00103C                     l3278:
  2703                           
  2704                           ; BSR set to: 0
  2705                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 718:             
      +                              dbuf[n++] = '0';
  2706   00103C  0E00               	movlw	low _dbuf
  2707   00103E  2582               	addwf	efgtoa@n& (0+255),w,b
  2708   001040  6ED9               	movwf	fsr2l,c
  2709   001042  0E01               	movlw	high _dbuf
  2710   001044  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2711   001046  6EDA               	movwf	fsr2h,c
  2712   001048  0E30               	movlw	48
  2713   00104A  6EDF               	movwf	indf2,c
  2714   00104C                     
  2715                           ; BSR set to: 0
  2716   00104C  4B82               	infsnz	efgtoa@n& (0+255),f,b
  2717   00104E  2B83               	incf	(efgtoa@n+1)& (0+255),f,b
  2718   001050                     
  2719                           ; BSR set to: 0
  2720                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 719:             
      +                              --w;
  2721   001050  0771               	decf	efgtoa@w& (0+255),f,b
  2722   001052  A0D8               	btfss	status,0,c
  2723   001054  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2724   001056                     
  2725                           ; BSR set to: 0
  2726                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 720:             
      +                              --t;
  2727   001056  0764               	decf	efgtoa@t& (0+255),f,b
  2728   001058  A0D8               	btfss	status,0,c
  2729   00105A  0765               	decf	(efgtoa@t+1)& (0+255),f,b
  2730   00105C                     l3286:
  2731                           
  2732                           ; BSR set to: 0
  2733                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 717:             
      +                          while (t) {
  2734   00105C  5164               	movf	efgtoa@t& (0+255),w,b
  2735   00105E  1165               	iorwf	(efgtoa@t+1)& (0+255),w,b
  2736   001060  A4D8               	btfss	status,2,c
  2737   001062  EF35  F008         	goto	u3441
  2738   001066  EF37  F008         	goto	u3440
  2739   00106A                     u3441:
  2740   00106A  EF1E  F008         	goto	l3278
  2741   00106E                     u3440:
  2742   00106E                     
  2743                           ; BSR set to: 0
  2744                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 722:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  2745   00106E  0E00               	movlw	low _dbuf
  2746   001070  2582               	addwf	efgtoa@n& (0+255),w,b
  2747   001072  6ED9               	movwf	fsr2l,c
  2748   001074  0E01               	movlw	high _dbuf
  2749   001076  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2750   001078  6EDA               	movwf	fsr2h,c
  2751   00107A  516B               	movf	efgtoa@d& (0+255),w,b
  2752   00107C  0F30               	addlw	48
  2753   00107E  6EDF               	movwf	indf2,c
  2754   001080                     
  2755                           ; BSR set to: 0
  2756   001080  4B82               	infsnz	efgtoa@n& (0+255),f,b
  2757   001082  2B83               	incf	(efgtoa@n+1)& (0+255),f,b
  2758   001084                     
  2759                           ; BSR set to: 0
  2760                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 723:             
      +                          --w;
  2761   001084  0771               	decf	efgtoa@w& (0+255),f,b
  2762   001086  A0D8               	btfss	status,0,c
  2763   001088  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2764   00108A                     
  2765                           ; BSR set to: 0
  2766                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 724:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 725:         h -= l*
      +                          u.f;
  2767   00108A  C079  F02D         	movff	efgtoa@h,___flsub@b
  2768   00108E  C07A  F02E         	movff	efgtoa@h+1,___flsub@b+1
  2769   001092  C07B  F02F         	movff	efgtoa@h+2,___flsub@b+2
  2770   001096  C07C  F030         	movff	efgtoa@h+3,___flsub@b+3
  2771   00109A  C07D  F018         	movff	efgtoa@l,___flmul@a
  2772   00109E  C07E  F019         	movff	efgtoa@l+1,___flmul@a+1
  2773   0010A2  C07F  F01A         	movff	efgtoa@l+2,___flmul@a+2
  2774   0010A6  C080  F01B         	movff	efgtoa@l+3,___flmul@a+3
  2775   0010AA  C088  F014         	movff	efgtoa@u,___flmul@b
  2776   0010AE  C089  F015         	movff	efgtoa@u+1,___flmul@b+1
  2777   0010B2  C08A  F016         	movff	efgtoa@u+2,___flmul@b+2
  2778   0010B6  C08B  F017         	movff	efgtoa@u+3,___flmul@b+3
  2779   0010BA  EC6D  F00B         	call	___flmul	;wreg free
  2780   0010BE  C014  F031         	movff	?___flmul,___flsub@a
  2781   0010C2  C015  F032         	movff	?___flmul+1,___flsub@a+1
  2782   0010C6  C016  F033         	movff	?___flmul+2,___flsub@a+2
  2783   0010CA  C017  F034         	movff	?___flmul+3,___flsub@a+3
  2784   0010CE  ECE4  F017         	call	___flsub	;wreg free
  2785   0010D2  C02D  F079         	movff	?___flsub,efgtoa@h
  2786   0010D6  C02E  F07A         	movff	?___flsub+1,efgtoa@h+1
  2787   0010DA  C02F  F07B         	movff	?___flsub+2,efgtoa@h+2
  2788   0010DE  C030  F07C         	movff	?___flsub+3,efgtoa@h+3
  2789   0010E2                     
  2790                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 726:         u.f 
      +                          = u.f/10.0;
  2791   0010E2  C088  F001         	movff	efgtoa@u,___fldiv@b
  2792   0010E6  C089  F002         	movff	efgtoa@u+1,___fldiv@b+1
  2793   0010EA  C08A  F003         	movff	efgtoa@u+2,___fldiv@b+2
  2794   0010EE  C08B  F004         	movff	efgtoa@u+3,___fldiv@b+3
  2795   0010F2  0E00               	movlw	0
  2796   0010F4  6E05               	movwf	___fldiv@a^0,c
  2797   0010F6  0E00               	movlw	0
  2798   0010F8  6E06               	movwf	(___fldiv@a+1)^0,c
  2799   0010FA  0E20               	movlw	32
  2800   0010FC  6E07               	movwf	(___fldiv@a+2)^0,c
  2801   0010FE  0E41               	movlw	65
  2802   001100  6E08               	movwf	(___fldiv@a+3)^0,c
  2803   001102  EC82  F00D         	call	___fldiv	;wreg free
  2804   001106  C001  F088         	movff	?___fldiv,efgtoa@u
  2805   00110A  C002  F089         	movff	?___fldiv+1,efgtoa@u+1
  2806   00110E  C003  F08A         	movff	?___fldiv+2,efgtoa@u+2
  2807   001112  C004  F08B         	movff	?___fldiv+3,efgtoa@u+3
  2808   001116                     
  2809                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 727:         --ne
      +                          ;
  2810   001116  0100               	movlb	0	; () banked
  2811   001118  0760               	decf	efgtoa@ne& (0+255),f,b
  2812   00111A  A0D8               	btfss	status,0,c
  2813   00111C  0761               	decf	(efgtoa@ne+1)& (0+255),f,b
  2814   00111E                     
  2815                           ; BSR set to: 0
  2816                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 728:         ++i;
  2817   00111E  4B77               	infsnz	efgtoa@i& (0+255),f,b
  2818   001120  2B78               	incf	(efgtoa@i+1)& (0+255),f,b
  2819   001122                     l3302:
  2820                           
  2821                           ; BSR set to: 0
  2822                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  2823   001122  516D               	movf	efgtoa@m& (0+255),w,b
  2824   001124  5D77               	subwf	efgtoa@i& (0+255),w,b
  2825   001126  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  2826   001128  0A80               	xorlw	128
  2827   00112A  6E40               	movwf	??_efgtoa^0,c
  2828   00112C  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  2829   00112E  0A80               	xorlw	128
  2830   001130  5840               	subwfb	??_efgtoa^0,w,c
  2831   001132  B0D8               	btfsc	status,0,c
  2832   001134  EF9E  F008         	goto	u3451
  2833   001138  EFA0  F008         	goto	u3450
  2834   00113C                     u3451:
  2835   00113C  EFAE  F008         	goto	l3306
  2836   001140                     u3450:
  2837   001140                     
  2838                           ; BSR set to: 0
  2839   001140  BF83               	btfsc	(efgtoa@n+1)& (0+255),7,b
  2840   001142  EFAC  F008         	goto	u3461
  2841   001146  5183               	movf	(efgtoa@n+1)& (0+255),w,b
  2842   001148  E109               	bnz	u3460
  2843   00114A  0E4B               	movlw	75
  2844   00114C  5D82               	subwf	efgtoa@n& (0+255),w,b
  2845   00114E  A0D8               	btfss	status,0,c
  2846   001150  EFAC  F008         	goto	u3461
  2847   001154  EFAE  F008         	goto	u3460
  2848   001158                     u3461:
  2849   001158  EFAC  F007         	goto	l3262
  2850   00115C                     u3460:
  2851   00115C                     l3306:
  2852                           
  2853                           ; BSR set to: 0
  2854                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 735:  i = sizeof(
      +                          dbuf) - 1;
  2855   00115C  0E00               	movlw	0
  2856   00115E  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  2857   001160  0E4F               	movlw	79
  2858   001162  6F77               	movwf	efgtoa@i& (0+255),b
  2859   001164                     
  2860                           ; BSR set to: 0
  2861                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 736:     dbuf[i] 
      +                          = '\0';
  2862   001164  0E00               	movlw	low _dbuf
  2863   001166  2577               	addwf	efgtoa@i& (0+255),w,b
  2864   001168  6ED9               	movwf	fsr2l,c
  2865   00116A  0E01               	movlw	high _dbuf
  2866   00116C  2178               	addwfc	(efgtoa@i+1)& (0+255),w,b
  2867   00116E  6EDA               	movwf	fsr2h,c
  2868   001170  0E00               	movlw	0
  2869   001172  6EDF               	movwf	indf2,c
  2870   001174                     
  2871                           ; BSR set to: 0
  2872                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 767:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  2873   001174  0E00               	movlw	low _dbuf
  2874   001176  6E40               	movwf	??_efgtoa^0,c
  2875   001178  0E01               	movlw	high _dbuf
  2876   00117A  6E41               	movwf	(??_efgtoa+1)^0,c
  2877   00117C  5182               	movf	efgtoa@n& (0+255),w,b
  2878   00117E  5E40               	subwf	??_efgtoa^0,f,c
  2879   001180  5183               	movf	(efgtoa@n+1)& (0+255),w,b
  2880   001182  5A41               	subwfb	(??_efgtoa+1)^0,f,c
  2881   001184  5177               	movf	efgtoa@i& (0+255),w,b
  2882   001186  2440               	addwf	??_efgtoa^0,w,c
  2883   001188  6E01               	movwf	memcpy@d1^0,c
  2884   00118A  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  2885   00118C  2041               	addwfc	(??_efgtoa+1)^0,w,c
  2886   00118E  6E02               	movwf	(memcpy@d1+1)^0,c
  2887   001190  0E00               	movlw	low _dbuf
  2888   001192  6E03               	movwf	memcpy@s1^0,c
  2889   001194  0E01               	movlw	high _dbuf
  2890   001196  6E04               	movwf	(memcpy@s1+1)^0,c
  2891   001198  C082  F005         	movff	efgtoa@n,memcpy@n
  2892   00119C  C083  F006         	movff	efgtoa@n+1,memcpy@n+1
  2893   0011A0  ECBC  F017         	call	_memcpy	;wreg free
  2894   0011A4                     
  2895                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 768:  n = i-n;
  2896   0011A4  0100               	movlb	0	; () banked
  2897   0011A6  5182               	movf	efgtoa@n& (0+255),w,b
  2898   0011A8  5D77               	subwf	efgtoa@i& (0+255),w,b
  2899   0011AA  6F82               	movwf	efgtoa@n& (0+255),b
  2900   0011AC  5183               	movf	(efgtoa@n+1)& (0+255),w,b
  2901   0011AE  5978               	subwfb	(efgtoa@i+1)& (0+255),w,b
  2902   0011B0  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  2903   0011B2                     
  2904                           ; BSR set to: 0
  2905                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 769:  i = sign ==
      +                           0 ? 0 : 1;
  2906   0011B2  5181               	movf	efgtoa@sign& (0+255),w,b
  2907   0011B4  A4D8               	btfss	status,2,c
  2908   0011B6  EFDF  F008         	goto	u3471
  2909   0011BA  EFE2  F008         	goto	u3470
  2910   0011BE                     u3471:
  2911   0011BE  0E01               	movlw	1
  2912   0011C0  EFE3  F008         	goto	u3480
  2913   0011C4                     u3470:
  2914   0011C4  0E00               	movlw	0
  2915   0011C6                     u3480:
  2916   0011C6  6F77               	movwf	efgtoa@i& (0+255),b
  2917   0011C8  6B78               	clrf	(efgtoa@i+1)& (0+255),b
  2918   0011CA                     
  2919                           ; BSR set to: 0
  2920                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 780:  if (sign) {
  2921   0011CA  5181               	movf	efgtoa@sign& (0+255),w,b
  2922   0011CC  B4D8               	btfsc	status,2,c
  2923   0011CE  EFEB  F008         	goto	u3491
  2924   0011D2  EFED  F008         	goto	u3490
  2925   0011D6                     u3491:
  2926   0011D6  EFF8  F008         	goto	l3320
  2927   0011DA                     u3490:
  2928   0011DA                     
  2929                           ; BSR set to: 0
  2930                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 781:   dbuf[--n] 
      +                          = sign;
  2931   0011DA  0782               	decf	efgtoa@n& (0+255),f,b
  2932   0011DC  A0D8               	btfss	status,0,c
  2933   0011DE  0783               	decf	(efgtoa@n+1)& (0+255),f,b
  2934   0011E0  0E00               	movlw	low _dbuf
  2935   0011E2  2582               	addwf	efgtoa@n& (0+255),w,b
  2936   0011E4  6ED9               	movwf	fsr2l,c
  2937   0011E6  0E01               	movlw	high _dbuf
  2938   0011E8  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2939   0011EA  6EDA               	movwf	fsr2h,c
  2940   0011EC  C081  FFDF         	movff	efgtoa@sign,indf2
  2941   0011F0                     l3320:
  2942                           
  2943                           ; BSR set to: 0
  2944                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 783:  w -= i;
  2945   0011F0  5177               	movf	efgtoa@i& (0+255),w,b
  2946   0011F2  5F71               	subwf	efgtoa@w& (0+255),f,b
  2947   0011F4  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  2948   0011F6  5B72               	subwfb	(efgtoa@w+1)& (0+255),f,b
  2949   0011F8                     
  2950                           ; BSR set to: 0
  2951                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 786:     return (
      +                          void) pad(fp, &dbuf[n], w);
  2952   0011F8  C039  F011         	movff	efgtoa@fp,pad@fp
  2953   0011FC  C03A  F012         	movff	efgtoa@fp+1,pad@fp+1
  2954   001200  0E00               	movlw	low _dbuf
  2955   001202  2582               	addwf	efgtoa@n& (0+255),w,b
  2956   001204  6E13               	movwf	pad@buf^0,c
  2957   001206  0E01               	movlw	high _dbuf
  2958   001208  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2959   00120A  6E14               	movwf	(pad@buf+1)^0,c
  2960   00120C  C071  F015         	movff	efgtoa@w,pad@p
  2961   001210  C072  F016         	movff	efgtoa@w+1,pad@p+1
  2962   001214  EC5F  F016         	call	_pad	;wreg free
  2963   001218                     l854:
  2964   001218  0012               	return		;funcret
  2965   00121A                     __end_of_efgtoa:
  2966                           	callstack 0
  2967                           
  2968 ;; *************** function _strcpy *****************
  2969 ;; Defined at:
  2970 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  2971 ;; Parameters:    Size  Location     Type
  2972 ;;  dest            2    0[COMRAM] PTR unsigned char 
  2973 ;;		 -> dbuf(80), 
  2974 ;;  src             2    2[COMRAM] PTR const unsigned char 
  2975 ;;		 -> STR_6(4), STR_3(4), 
  2976 ;; Auto vars:     Size  Location     Type
  2977 ;;  d               2    6[COMRAM] PTR unsigned char 
  2978 ;;		 -> dbuf(80), 
  2979 ;;  s               2    4[COMRAM] PTR const unsigned char 
  2980 ;;		 -> STR_6(4), STR_3(4), 
  2981 ;; Return value:  Size  Location     Type
  2982 ;;                  2    0[COMRAM] PTR unsigned char 
  2983 ;; Registers used:
  2984 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2985 ;; Tracked objects:
  2986 ;;		On entry : 0/0
  2987 ;;		On exit  : 0/0
  2988 ;;		Unchanged: 0/0
  2989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2990 ;;      Params:         4       0       0       0       0       0       0       0       0
  2991 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2992 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2993 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2994 ;;Total ram usage:        8 bytes
  2995 ;; Hardware stack levels used: 1
  2996 ;; This function calls:
  2997 ;;		Nothing
  2998 ;; This function is called by:
  2999 ;;		_efgtoa
  3000 ;; This function uses a non-reentrant model
  3001 ;;
  3002                           
  3003                           	psect	text5
  3004   003098                     __ptext5:
  3005                           	callstack 0
  3006   003098                     _strcpy:
  3007                           	callstack 26
  3008   003098  C003  F005         	movff	strcpy@src,strcpy@s
  3009   00309C  C004  F006         	movff	strcpy@src+1,strcpy@s+1
  3010   0030A0  C001  F007         	movff	strcpy@dest,strcpy@d
  3011   0030A4  C002  F008         	movff	strcpy@dest+1,strcpy@d+1
  3012   0030A8                     l3042:
  3013   0030A8  C005  FFF6         	movff	strcpy@s,tblptrl
  3014   0030AC  C006  FFF7         	movff	strcpy@s+1,tblptrh
  3015   0030B0  4A05               	infsnz	strcpy@s^0,f,c
  3016   0030B2  2A06               	incf	(strcpy@s+1)^0,f,c
  3017   0030B4                     	if	0	;tblptru may be non-zero
  3018   0030B4                     	endif
  3019   0030B4                     	if	0	;tblptru may be non-zero
  3020   0030B4                     	endif
  3021   0030B4  C007  FFD9         	movff	strcpy@d,fsr2l
  3022   0030B8  C008  FFDA         	movff	strcpy@d+1,fsr2h
  3023   0030BC  4A07               	infsnz	strcpy@d^0,f,c
  3024   0030BE  2A08               	incf	(strcpy@d+1)^0,f,c
  3025   0030C0  0008               	tblrd		*
  3026   0030C2  CFF5 FFDF          	movff	tablat,indf2
  3027   0030C6  50DF               	movf	indf2,w,c
  3028   0030C8  A4D8               	btfss	status,2,c
  3029   0030CA  EF69  F018         	goto	u3011
  3030   0030CE  EF6B  F018         	goto	u3010
  3031   0030D2                     u3011:
  3032   0030D2  EF54  F018         	goto	l3042
  3033   0030D6                     u3010:
  3034   0030D6  0012               	return		;funcret
  3035   0030D8                     __end_of_strcpy:
  3036                           	callstack 0
  3037                           
  3038 ;; *************** function _pad *****************
  3039 ;; Defined at:
  3040 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3041 ;; Parameters:    Size  Location     Type
  3042 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  3043 ;;		 -> sprintf@f(11), 
  3044 ;;  buf             2   18[COMRAM] PTR unsigned char 
  3045 ;;		 -> dbuf(80), 
  3046 ;;  p               2   20[COMRAM] int 
  3047 ;; Auto vars:     Size  Location     Type
  3048 ;;  w               2   25[COMRAM] int 
  3049 ;;  i               2   23[COMRAM] int 
  3050 ;; Return value:  Size  Location     Type
  3051 ;;                  1    wreg      void 
  3052 ;; Registers used:
  3053 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3054 ;; Tracked objects:
  3055 ;;		On entry : 0/0
  3056 ;;		On exit  : 0/0
  3057 ;;		Unchanged: 0/0
  3058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3059 ;;      Params:         6       0       0       0       0       0       0       0       0
  3060 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3061 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3062 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3063 ;;Total ram usage:       11 bytes
  3064 ;; Hardware stack levels used: 1
  3065 ;; Hardware stack levels required when called: 3
  3066 ;; This function calls:
  3067 ;;		_fputc
  3068 ;;		_fputs
  3069 ;; This function is called by:
  3070 ;;		_efgtoa
  3071 ;; This function uses a non-reentrant model
  3072 ;;
  3073                           
  3074                           	psect	text6
  3075   002CBE                     __ptext6:
  3076                           	callstack 0
  3077   002CBE                     _pad:
  3078                           	callstack 23
  3079   002CBE                     
  3080                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  3081   002CBE  BE16               	btfsc	(pad@p+1)^0,7,c
  3082   002CC0  EF64  F016         	goto	u2921
  3083   002CC4  EF66  F016         	goto	u2920
  3084   002CC8                     u2921:
  3085   002CC8  EF6C  F016         	goto	l3008
  3086   002CCC                     u2920:
  3087   002CCC  C015  F01A         	movff	pad@p,pad@w
  3088   002CD0  C016  F01B         	movff	pad@p+1,pad@w+1
  3089   002CD4  EF70  F016         	goto	l839
  3090   002CD8                     l3008:
  3091   002CD8  0E00               	movlw	0
  3092   002CDA  6E1B               	movwf	(pad@w+1)^0,c
  3093   002CDC  0E00               	movlw	0
  3094   002CDE  6E1A               	movwf	pad@w^0,c
  3095   002CE0                     l839:
  3096                           
  3097                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  3098   002CE0  0E00               	movlw	0
  3099   002CE2  6E19               	movwf	(pad@i+1)^0,c
  3100   002CE4  0E00               	movlw	0
  3101   002CE6  6E18               	movwf	pad@i^0,c
  3102                           
  3103                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  3104   002CE8  EF82  F016         	goto	l3014
  3105   002CEC                     l3010:
  3106                           
  3107                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  3108   002CEC  0E00               	movlw	0
  3109   002CEE  6E02               	movwf	(fputc@c+1)^0,c
  3110   002CF0  0E20               	movlw	32
  3111   002CF2  6E01               	movwf	fputc@c^0,c
  3112   002CF4  C011  F003         	movff	pad@fp,fputc@fp
  3113   002CF8  C012  F004         	movff	pad@fp+1,fputc@fp+1
  3114   002CFC  ECA5  F015         	call	_fputc	;wreg free
  3115   002D00                     
  3116                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  3117   002D00  4A18               	infsnz	pad@i^0,f,c
  3118   002D02  2A19               	incf	(pad@i+1)^0,f,c
  3119   002D04                     l3014:
  3120                           
  3121                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  3122   002D04  501A               	movf	pad@w^0,w,c
  3123   002D06  5C18               	subwf	pad@i^0,w,c
  3124   002D08  5019               	movf	(pad@i+1)^0,w,c
  3125   002D0A  0A80               	xorlw	128
  3126   002D0C  6E17               	movwf	??_pad^0,c
  3127   002D0E  501B               	movf	(pad@w+1)^0,w,c
  3128   002D10  0A80               	xorlw	128
  3129   002D12  5817               	subwfb	??_pad^0,w,c
  3130   002D14  A0D8               	btfss	status,0,c
  3131   002D16  EF8F  F016         	goto	u2931
  3132   002D1A  EF91  F016         	goto	u2930
  3133   002D1E                     u2931:
  3134   002D1E  EF76  F016         	goto	l3010
  3135   002D22                     u2930:
  3136   002D22                     
  3137                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  3138   002D22  C013  F00A         	movff	pad@buf,fputs@s
  3139   002D26  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3140   002D2A  C011  F00C         	movff	pad@fp,fputs@fp
  3141   002D2E  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3142   002D32  EC2A  F018         	call	_fputs	;wreg free
  3143   002D36  0012               	return		;funcret
  3144   002D38                     __end_of_pad:
  3145                           	callstack 0
  3146                           
  3147 ;; *************** function _fputs *****************
  3148 ;; Defined at:
  3149 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  3150 ;; Parameters:    Size  Location     Type
  3151 ;;  s               2    9[COMRAM] PTR const unsigned char 
  3152 ;;		 -> dbuf(80), 
  3153 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  3154 ;;		 -> sprintf@f(11), 
  3155 ;; Auto vars:     Size  Location     Type
  3156 ;;  i               2   14[COMRAM] int 
  3157 ;;  c               1   13[COMRAM] unsigned char 
  3158 ;; Return value:  Size  Location     Type
  3159 ;;                  2    9[COMRAM] int 
  3160 ;; Registers used:
  3161 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3162 ;; Tracked objects:
  3163 ;;		On entry : 0/0
  3164 ;;		On exit  : 0/0
  3165 ;;		Unchanged: 0/0
  3166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3167 ;;      Params:         4       0       0       0       0       0       0       0       0
  3168 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3169 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3170 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3171 ;;Total ram usage:        7 bytes
  3172 ;; Hardware stack levels used: 1
  3173 ;; Hardware stack levels required when called: 2
  3174 ;; This function calls:
  3175 ;;		_fputc
  3176 ;; This function is called by:
  3177 ;;		_pad
  3178 ;; This function uses a non-reentrant model
  3179 ;;
  3180                           
  3181                           	psect	text7
  3182   003054                     __ptext7:
  3183                           	callstack 0
  3184   003054                     _fputs:
  3185                           	callstack 23
  3186   003054  0E00               	movlw	0
  3187   003056  6E10               	movwf	(fputs@i+1)^0,c
  3188   003058  0E00               	movlw	0
  3189   00305A  6E0F               	movwf	fputs@i^0,c
  3190   00305C  EF3B  F018         	goto	l2632
  3191   003060                     l2628:
  3192   003060  C00E  F001         	movff	fputs@c,fputc@c
  3193   003064  6A02               	clrf	(fputc@c+1)^0,c
  3194   003066  C00C  F003         	movff	fputs@fp,fputc@fp
  3195   00306A  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  3196   00306E  ECA5  F015         	call	_fputc	;wreg free
  3197   003072  4A0F               	infsnz	fputs@i^0,f,c
  3198   003074  2A10               	incf	(fputs@i+1)^0,f,c
  3199   003076                     l2632:
  3200   003076  500F               	movf	fputs@i^0,w,c
  3201   003078  240A               	addwf	fputs@s^0,w,c
  3202   00307A  6ED9               	movwf	fsr2l,c
  3203   00307C  5010               	movf	(fputs@i+1)^0,w,c
  3204   00307E  200B               	addwfc	(fputs@s+1)^0,w,c
  3205   003080  6EDA               	movwf	fsr2h,c
  3206   003082  50DF               	movf	indf2,w,c
  3207   003084  6E0E               	movwf	fputs@c^0,c
  3208   003086  500E               	movf	fputs@c^0,w,c
  3209   003088  A4D8               	btfss	status,2,c
  3210   00308A  EF49  F018         	goto	u2331
  3211   00308E  EF4B  F018         	goto	u2330
  3212   003092                     u2331:
  3213   003092  EF30  F018         	goto	l2628
  3214   003096                     u2330:
  3215   003096  0012               	return		;funcret
  3216   003098                     __end_of_fputs:
  3217                           	callstack 0
  3218                           
  3219 ;; *************** function _fputc *****************
  3220 ;; Defined at:
  3221 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  3222 ;; Parameters:    Size  Location     Type
  3223 ;;  c               2    0[COMRAM] int 
  3224 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  3225 ;;		 -> sprintf@f(11), 
  3226 ;; Auto vars:     Size  Location     Type
  3227 ;;		None
  3228 ;; Return value:  Size  Location     Type
  3229 ;;                  2    0[COMRAM] int 
  3230 ;; Registers used:
  3231 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3232 ;; Tracked objects:
  3233 ;;		On entry : 0/0
  3234 ;;		On exit  : 0/0
  3235 ;;		Unchanged: 0/0
  3236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3237 ;;      Params:         4       0       0       0       0       0       0       0       0
  3238 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3239 ;;      Temps:          5       0       0       0       0       0       0       0       0
  3240 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3241 ;;Total ram usage:        9 bytes
  3242 ;; Hardware stack levels used: 1
  3243 ;; Hardware stack levels required when called: 1
  3244 ;; This function calls:
  3245 ;;		_putch
  3246 ;; This function is called by:
  3247 ;;		_pad
  3248 ;;		_vfpfcnvrt
  3249 ;;		_fputs
  3250 ;; This function uses a non-reentrant model
  3251 ;;
  3252                           
  3253                           	psect	text8
  3254   002B4A                     __ptext8:
  3255                           	callstack 0
  3256   002B4A                     _fputc:
  3257                           	callstack 26
  3258   002B4A  5003               	movf	fputc@fp^0,w,c
  3259   002B4C  1004               	iorwf	(fputc@fp+1)^0,w,c
  3260   002B4E  B4D8               	btfsc	status,2,c
  3261   002B50  EFAC  F015         	goto	u1901
  3262   002B54  EFAE  F015         	goto	u1900
  3263   002B58                     u1901:
  3264   002B58  EFB7  F015         	goto	l2414
  3265   002B5C                     u1900:
  3266   002B5C  5003               	movf	fputc@fp^0,w,c
  3267   002B5E  1004               	iorwf	(fputc@fp+1)^0,w,c
  3268   002B60  A4D8               	btfss	status,2,c
  3269   002B62  EFB5  F015         	goto	u1911
  3270   002B66  EFB7  F015         	goto	u1910
  3271   002B6A                     u1911:
  3272   002B6A  EFBC  F015         	goto	l2416
  3273   002B6E                     u1910:
  3274   002B6E                     l2414:
  3275   002B6E  5001               	movf	fputc@c^0,w,c
  3276   002B70  EC58  F019         	call	_putch
  3277   002B74  EF09  F016         	goto	l1017
  3278   002B78                     l2416:
  3279   002B78  EE20 F009          	lfsr	2,9
  3280   002B7C  5003               	movf	fputc@fp^0,w,c
  3281   002B7E  26D9               	addwf	fsr2l,f,c
  3282   002B80  5004               	movf	(fputc@fp+1)^0,w,c
  3283   002B82  22DA               	addwfc	fsr2h,f,c
  3284   002B84  50DE               	movf	postinc2,w,c
  3285   002B86  10DE               	iorwf	postinc2,w,c
  3286   002B88  B4D8               	btfsc	status,2,c
  3287   002B8A  EFC9  F015         	goto	u1921
  3288   002B8E  EFCB  F015         	goto	u1920
  3289   002B92                     u1921:
  3290   002B92  EFE6  F015         	goto	l2420
  3291   002B96                     u1920:
  3292   002B96  EE20 F009          	lfsr	2,9
  3293   002B9A  5003               	movf	fputc@fp^0,w,c
  3294   002B9C  26D9               	addwf	fsr2l,f,c
  3295   002B9E  5004               	movf	(fputc@fp+1)^0,w,c
  3296   002BA0  22DA               	addwfc	fsr2h,f,c
  3297   002BA2  EE10 F003          	lfsr	1,3
  3298   002BA6  5003               	movf	fputc@fp^0,w,c
  3299   002BA8  26E1               	addwf	fsr1l,f,c
  3300   002BAA  5004               	movf	(fputc@fp+1)^0,w,c
  3301   002BAC  22E2               	addwfc	fsr1h,f,c
  3302   002BAE  50DE               	movf	postinc2,w,c
  3303   002BB0  5CE6               	subwf	postinc1,w,c
  3304   002BB2  50E6               	movf	postinc1,w,c
  3305   002BB4  0A80               	xorlw	128
  3306   002BB6  6E09               	movwf	(??_fputc+4)^0,c
  3307   002BB8  50DE               	movf	postinc2,w,c
  3308   002BBA  0A80               	xorlw	128
  3309   002BBC  5809               	subwfb	(??_fputc+4)^0,w,c
  3310   002BBE  B0D8               	btfsc	status,0,c
  3311   002BC0  EFE4  F015         	goto	u1931
  3312   002BC4  EFE6  F015         	goto	u1930
  3313   002BC8                     u1931:
  3314   002BC8  EF09  F016         	goto	l1017
  3315   002BCC                     u1930:
  3316   002BCC                     l2420:
  3317   002BCC  EE20 F003          	lfsr	2,3
  3318   002BD0  5003               	movf	fputc@fp^0,w,c
  3319   002BD2  26D9               	addwf	fsr2l,f,c
  3320   002BD4  5004               	movf	(fputc@fp+1)^0,w,c
  3321   002BD6  22DA               	addwfc	fsr2h,f,c
  3322   002BD8  CFDE F005          	movff	postinc2,??_fputc
  3323   002BDC  CFDD F006          	movff	postdec2,??_fputc+1
  3324   002BE0  C003  FFD9         	movff	fputc@fp,fsr2l
  3325   002BE4  C004  FFDA         	movff	fputc@fp+1,fsr2h
  3326   002BE8  CFDE F007          	movff	postinc2,??_fputc+2
  3327   002BEC  CFDD F008          	movff	postdec2,??_fputc+3
  3328   002BF0  5005               	movf	??_fputc^0,w,c
  3329   002BF2  2407               	addwf	(??_fputc+2)^0,w,c
  3330   002BF4  6ED9               	movwf	fsr2l,c
  3331   002BF6  5006               	movf	(??_fputc+1)^0,w,c
  3332   002BF8  2008               	addwfc	(??_fputc+3)^0,w,c
  3333   002BFA  6EDA               	movwf	fsr2h,c
  3334   002BFC  C001  FFDF         	movff	fputc@c,indf2
  3335   002C00  EE20 F003          	lfsr	2,3
  3336   002C04  5003               	movf	fputc@fp^0,w,c
  3337   002C06  26D9               	addwf	fsr2l,f,c
  3338   002C08  5004               	movf	(fputc@fp+1)^0,w,c
  3339   002C0A  22DA               	addwfc	fsr2h,f,c
  3340   002C0C  2ADE               	incf	postinc2,f,c
  3341   002C0E  0E00               	movlw	0
  3342   002C10  22DD               	addwfc	postdec2,f,c
  3343   002C12                     l1017:
  3344   002C12  0012               	return		;funcret
  3345   002C14                     __end_of_fputc:
  3346                           	callstack 0
  3347                           
  3348 ;; *************** function _putch *****************
  3349 ;; Defined at:
  3350 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  3351 ;; Parameters:    Size  Location     Type
  3352 ;;  c               1    wreg     unsigned char 
  3353 ;; Auto vars:     Size  Location     Type
  3354 ;;  c               1    0[COMRAM] unsigned char 
  3355 ;; Return value:  Size  Location     Type
  3356 ;;                  1    wreg      void 
  3357 ;; Registers used:
  3358 ;;		wreg
  3359 ;; Tracked objects:
  3360 ;;		On entry : 0/0
  3361 ;;		On exit  : 0/0
  3362 ;;		Unchanged: 0/0
  3363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3364 ;;      Params:         0       0       0       0       0       0       0       0       0
  3365 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3366 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3367 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3368 ;;Total ram usage:        0 bytes
  3369 ;; Hardware stack levels used: 1
  3370 ;; This function calls:
  3371 ;;		Nothing
  3372 ;; This function is called by:
  3373 ;;		_fputc
  3374 ;; This function uses a non-reentrant model
  3375 ;;
  3376                           
  3377                           	psect	text9
  3378   0032B0                     __ptext9:
  3379                           	callstack 0
  3380   0032B0                     _putch:
  3381                           	callstack 26
  3382   0032B0  0012               	return		;funcret
  3383   0032B2                     __end_of_putch:
  3384                           	callstack 0
  3385                           
  3386 ;; *************** function _memcpy *****************
  3387 ;; Defined at:
  3388 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
  3389 ;; Parameters:    Size  Location     Type
  3390 ;;  d1              2    0[COMRAM] PTR void 
  3391 ;;		 -> dbuf(80), 
  3392 ;;  s1              2    2[COMRAM] PTR const void 
  3393 ;;		 -> dbuf(80), 
  3394 ;;  n               2    4[COMRAM] unsigned int 
  3395 ;; Auto vars:     Size  Location     Type
  3396 ;;  s               2    8[COMRAM] PTR const unsigned char 
  3397 ;;		 -> dbuf(80), 
  3398 ;;  d               2    6[COMRAM] PTR unsigned char 
  3399 ;;		 -> dbuf(80), 
  3400 ;;  tmp             1   10[COMRAM] unsigned char 
  3401 ;; Return value:  Size  Location     Type
  3402 ;;                  2    0[COMRAM] PTR void 
  3403 ;; Registers used:
  3404 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3405 ;; Tracked objects:
  3406 ;;		On entry : 0/0
  3407 ;;		On exit  : 0/0
  3408 ;;		Unchanged: 0/0
  3409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3410 ;;      Params:         6       0       0       0       0       0       0       0       0
  3411 ;;      Locals:         5       0       0       0       0       0       0       0       0
  3412 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3413 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3414 ;;Total ram usage:       11 bytes
  3415 ;; Hardware stack levels used: 1
  3416 ;; This function calls:
  3417 ;;		Nothing
  3418 ;; This function is called by:
  3419 ;;		_efgtoa
  3420 ;; This function uses a non-reentrant model
  3421 ;;
  3422                           
  3423                           	psect	text10
  3424   002F78                     __ptext10:
  3425                           	callstack 0
  3426   002F78                     _memcpy:
  3427                           	callstack 26
  3428   002F78  C003  F009         	movff	memcpy@s1,memcpy@s
  3429   002F7C  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
  3430   002F80  C001  F007         	movff	memcpy@d1,memcpy@d
  3431   002F84  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
  3432   002F88  EFD6  F017         	goto	l3086
  3433   002F8C                     l3078:
  3434   002F8C  C009  FFD9         	movff	memcpy@s,fsr2l
  3435   002F90  C00A  FFDA         	movff	memcpy@s+1,fsr2h
  3436   002F94  50DF               	movf	indf2,w,c
  3437   002F96  6E0B               	movwf	memcpy@tmp^0,c
  3438   002F98  4A09               	infsnz	memcpy@s^0,f,c
  3439   002F9A  2A0A               	incf	(memcpy@s+1)^0,f,c
  3440   002F9C  C007  FFD9         	movff	memcpy@d,fsr2l
  3441   002FA0  C008  FFDA         	movff	memcpy@d+1,fsr2h
  3442   002FA4  C00B  FFDF         	movff	memcpy@tmp,indf2
  3443   002FA8  4A07               	infsnz	memcpy@d^0,f,c
  3444   002FAA  2A08               	incf	(memcpy@d+1)^0,f,c
  3445   002FAC                     l3086:
  3446   002FAC  0605               	decf	memcpy@n^0,f,c
  3447   002FAE  A0D8               	btfss	status,0,c
  3448   002FB0  0606               	decf	(memcpy@n+1)^0,f,c
  3449   002FB2  2805               	incf	memcpy@n^0,w,c
  3450   002FB4  E106               	bnz	u3131
  3451   002FB6  2806               	incf	(memcpy@n+1)^0,w,c
  3452   002FB8  A4D8               	btfss	status,2,c
  3453   002FBA  EFE1  F017         	goto	u3131
  3454   002FBE  EFE3  F017         	goto	u3130
  3455   002FC2                     u3131:
  3456   002FC2  EFC6  F017         	goto	l3078
  3457   002FC6                     u3130:
  3458   002FC6  0012               	return		;funcret
  3459   002FC8                     __end_of_memcpy:
  3460                           	callstack 0
  3461                           
  3462 ;; *************** function _labs *****************
  3463 ;; Defined at:
  3464 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\labs.c"
  3465 ;; Parameters:    Size  Location     Type
  3466 ;;  a               4    0[COMRAM] long 
  3467 ;; Auto vars:     Size  Location     Type
  3468 ;;		None
  3469 ;; Return value:  Size  Location     Type
  3470 ;;                  4    0[COMRAM] long 
  3471 ;; Registers used:
  3472 ;;		wreg, status,2, status,0
  3473 ;; Tracked objects:
  3474 ;;		On entry : 0/0
  3475 ;;		On exit  : 0/0
  3476 ;;		Unchanged: 0/0
  3477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3478 ;;      Params:         4       0       0       0       0       0       0       0       0
  3479 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3480 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3481 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3482 ;;Total ram usage:        8 bytes
  3483 ;; Hardware stack levels used: 1
  3484 ;; This function calls:
  3485 ;;		Nothing
  3486 ;; This function is called by:
  3487 ;;		_efgtoa
  3488 ;; This function uses a non-reentrant model
  3489 ;;
  3490                           
  3491                           	psect	text11
  3492   002DAC                     __ptext11:
  3493                           	callstack 0
  3494   002DAC                     _labs:
  3495                           	callstack 26
  3496   002DAC  BE04               	btfsc	(labs@a+3)^0,7,c
  3497   002DAE  EFE5  F016         	goto	u3020
  3498   002DB2  5004               	movf	(labs@a+3)^0,w,c
  3499   002DB4  1003               	iorwf	(labs@a+2)^0,w,c
  3500   002DB6  1002               	iorwf	(labs@a+1)^0,w,c
  3501   002DB8  E106               	bnz	u3021
  3502   002DBA  0401               	decf	labs@a^0,w,c
  3503   002DBC  B0D8               	btfsc	status,0,c
  3504   002DBE  EFE3  F016         	goto	u3021
  3505   002DC2  EFE5  F016         	goto	u3020
  3506   002DC6                     u3021:
  3507   002DC6  EF00  F017         	goto	l996
  3508   002DCA                     u3020:
  3509   002DCA  C001  F005         	movff	labs@a,??_labs
  3510   002DCE  C002  F006         	movff	labs@a+1,??_labs+1
  3511   002DD2  C003  F007         	movff	labs@a+2,??_labs+2
  3512   002DD6  C004  F008         	movff	labs@a+3,??_labs+3
  3513   002DDA  1E05               	comf	??_labs^0,f,c
  3514   002DDC  1E06               	comf	(??_labs+1)^0,f,c
  3515   002DDE  1E07               	comf	(??_labs+2)^0,f,c
  3516   002DE0  1E08               	comf	(??_labs+3)^0,f,c
  3517   002DE2  2A05               	incf	??_labs^0,f,c
  3518   002DE4  0E00               	movlw	0
  3519   002DE6  2206               	addwfc	(??_labs+1)^0,f,c
  3520   002DE8  2207               	addwfc	(??_labs+2)^0,f,c
  3521   002DEA  2208               	addwfc	(??_labs+3)^0,f,c
  3522   002DEC  C005  F001         	movff	??_labs,?_labs
  3523   002DF0  C006  F002         	movff	??_labs+1,?_labs+1
  3524   002DF4  C007  F003         	movff	??_labs+2,?_labs+2
  3525   002DF8  C008  F004         	movff	??_labs+3,?_labs+3
  3526   002DFC  EF08  F017         	goto	l999
  3527   002E00                     l996:
  3528   002E00  C001  F001         	movff	labs@a,?_labs
  3529   002E04  C002  F002         	movff	labs@a+1,?_labs+1
  3530   002E08  C003  F003         	movff	labs@a+2,?_labs+2
  3531   002E0C  C004  F004         	movff	labs@a+3,?_labs+3
  3532   002E10                     l999:
  3533   002E10  0012               	return		;funcret
  3534   002E12                     __end_of_labs:
  3535                           	callstack 0
  3536                           
  3537 ;; *************** function _floorf *****************
  3538 ;; Defined at:
  3539 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\floorf.c"
  3540 ;; Parameters:    Size  Location     Type
  3541 ;;  x               4   25[COMRAM] float 
  3542 ;; Auto vars:     Size  Location     Type
  3543 ;;  u               4   41[COMRAM] struct .
  3544 ;;  m               4   35[COMRAM] unsigned long 
  3545 ;;  e               2   39[COMRAM] int 
  3546 ;; Return value:  Size  Location     Type
  3547 ;;                  4   25[COMRAM] float 
  3548 ;; Registers used:
  3549 ;;		wreg, status,2, status,0
  3550 ;; Tracked objects:
  3551 ;;		On entry : 0/0
  3552 ;;		On exit  : 0/0
  3553 ;;		Unchanged: 0/0
  3554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3555 ;;      Params:         4       0       0       0       0       0       0       0       0
  3556 ;;      Locals:        10       0       0       0       0       0       0       0       0
  3557 ;;      Temps:          6       0       0       0       0       0       0       0       0
  3558 ;;      Totals:        20       0       0       0       0       0       0       0       0
  3559 ;;Total ram usage:       20 bytes
  3560 ;; Hardware stack levels used: 1
  3561 ;; This function calls:
  3562 ;;		Nothing
  3563 ;; This function is called by:
  3564 ;;		_efgtoa
  3565 ;; This function uses a non-reentrant model
  3566 ;;
  3567                           
  3568                           	psect	text12
  3569   0021B4                     __ptext12:
  3570                           	callstack 0
  3571   0021B4                     _floorf:
  3572                           	callstack 26
  3573   0021B4  C0A2  F02A         	movff	floorf@F526,floorf@u
  3574   0021B8  C0A3  F02B         	movff	floorf@F526+1,floorf@u+1
  3575   0021BC  C0A4  F02C         	movff	floorf@F526+2,floorf@u+2
  3576   0021C0  C0A5  F02D         	movff	floorf@F526+3,floorf@u+3
  3577   0021C4  C01A  F02A         	movff	floorf@x,floorf@u
  3578   0021C8  C01B  F02B         	movff	floorf@x+1,floorf@u+1
  3579   0021CC  C01C  F02C         	movff	floorf@x+2,floorf@u+2
  3580   0021D0  C01D  F02D         	movff	floorf@x+3,floorf@u+3
  3581   0021D4  0E81               	movlw	129
  3582   0021D6  6E1E               	movwf	??_floorf^0,c
  3583   0021D8  0EFF               	movlw	255
  3584   0021DA  6E1F               	movwf	(??_floorf+1)^0,c
  3585   0021DC  C02A  F020         	movff	floorf@u,??_floorf+2
  3586   0021E0  C02B  F021         	movff	floorf@u+1,??_floorf+3
  3587   0021E4  C02C  F022         	movff	floorf@u+2,??_floorf+4
  3588   0021E8  C02D  F023         	movff	floorf@u+3,??_floorf+5
  3589   0021EC  0E18               	movlw	24
  3590   0021EE  EFFE  F010         	goto	u3030
  3591   0021F2                     u3035:
  3592   0021F2  90D8               	bcf	status,0,c
  3593   0021F4  3223               	rrcf	(??_floorf+5)^0,f,c
  3594   0021F6  3222               	rrcf	(??_floorf+4)^0,f,c
  3595   0021F8  3221               	rrcf	(??_floorf+3)^0,f,c
  3596   0021FA  3220               	rrcf	(??_floorf+2)^0,f,c
  3597   0021FC                     u3030:
  3598   0021FC  2EE8               	decfsz	wreg,f,c
  3599   0021FE  EFF9  F010         	goto	u3035
  3600   002202  5020               	movf	(??_floorf+2)^0,w,c
  3601   002204  241E               	addwf	??_floorf^0,w,c
  3602   002206  6E28               	movwf	floorf@e^0,c
  3603   002208  0E00               	movlw	0
  3604   00220A  201F               	addwfc	(??_floorf+1)^0,w,c
  3605   00220C  6E29               	movwf	(floorf@e+1)^0,c
  3606   00220E  BE29               	btfsc	(floorf@e+1)^0,7,c
  3607   002210  EF13  F011         	goto	u3041
  3608   002214  5029               	movf	(floorf@e+1)^0,w,c
  3609   002216  E109               	bnz	u3040
  3610   002218  0E17               	movlw	23
  3611   00221A  5C28               	subwf	floorf@e^0,w,c
  3612   00221C  A0D8               	btfss	status,0,c
  3613   00221E  EF13  F011         	goto	u3041
  3614   002222  EF15  F011         	goto	u3040
  3615   002226                     u3041:
  3616   002226  EF1F  F011         	goto	l3054
  3617   00222A                     u3040:
  3618   00222A                     l3052:
  3619   00222A  C01A  F01A         	movff	floorf@x,?_floorf
  3620   00222E  C01B  F01B         	movff	floorf@x+1,?_floorf+1
  3621   002232  C01C  F01C         	movff	floorf@x+2,?_floorf+2
  3622   002236  C01D  F01D         	movff	floorf@x+3,?_floorf+3
  3623   00223A  EFE2  F011         	goto	l971
  3624   00223E                     l3054:
  3625   00223E  BE29               	btfsc	(floorf@e+1)^0,7,c
  3626   002240  EF24  F011         	goto	u3051
  3627   002244  EF26  F011         	goto	u3050
  3628   002248                     u3051:
  3629   002248  EF96  F011         	goto	l3064
  3630   00224C                     u3050:
  3631   00224C  C028  F01E         	movff	floorf@e,??_floorf
  3632   002250  0EFF               	movlw	255
  3633   002252  6E1F               	movwf	(??_floorf+1)^0,c
  3634   002254  0EFF               	movlw	255
  3635   002256  6E20               	movwf	(??_floorf+2)^0,c
  3636   002258  0E7F               	movlw	127
  3637   00225A  6E21               	movwf	(??_floorf+3)^0,c
  3638   00225C  0E00               	movlw	0
  3639   00225E  6E22               	movwf	(??_floorf+4)^0,c
  3640   002260                     u3065:
  3641   002260  661E               	tstfsz	??_floorf^0,c
  3642   002262  EF35  F011         	goto	u3066
  3643   002266  EF3D  F011         	goto	u3067
  3644   00226A                     u3066:
  3645   00226A  3422               	rlcf	(??_floorf+4)^0,w,c
  3646   00226C  3222               	rrcf	(??_floorf+4)^0,f,c
  3647   00226E  3221               	rrcf	(??_floorf+3)^0,f,c
  3648   002270  3220               	rrcf	(??_floorf+2)^0,f,c
  3649   002272  321F               	rrcf	(??_floorf+1)^0,f,c
  3650   002274  2E1E               	decfsz	??_floorf^0,f,c
  3651   002276  EF30  F011         	goto	u3065
  3652   00227A                     u3067:
  3653   00227A  C01F  F024         	movff	??_floorf+1,floorf@m
  3654   00227E  C020  F025         	movff	??_floorf+2,floorf@m+1
  3655   002282  C021  F026         	movff	??_floorf+3,floorf@m+2
  3656   002286  C022  F027         	movff	??_floorf+4,floorf@m+3
  3657   00228A  5024               	movf	floorf@m^0,w,c
  3658   00228C  142A               	andwf	floorf@u^0,w,c
  3659   00228E  6E1E               	movwf	??_floorf^0,c
  3660   002290  5025               	movf	(floorf@m+1)^0,w,c
  3661   002292  142B               	andwf	(floorf@u+1)^0,w,c
  3662   002294  6E1F               	movwf	(??_floorf+1)^0,c
  3663   002296  5026               	movf	(floorf@m+2)^0,w,c
  3664   002298  142C               	andwf	(floorf@u+2)^0,w,c
  3665   00229A  6E20               	movwf	(??_floorf+2)^0,c
  3666   00229C  5027               	movf	(floorf@m+3)^0,w,c
  3667   00229E  142D               	andwf	(floorf@u+3)^0,w,c
  3668   0022A0  6E21               	movwf	(??_floorf+3)^0,c
  3669   0022A2  501E               	movf	??_floorf^0,w,c
  3670   0022A4  101F               	iorwf	(??_floorf+1)^0,w,c
  3671   0022A6  1020               	iorwf	(??_floorf+2)^0,w,c
  3672   0022A8  1021               	iorwf	(??_floorf+3)^0,w,c
  3673   0022AA  A4D8               	btfss	status,2,c
  3674   0022AC  EF5A  F011         	goto	u3071
  3675   0022B0  EF5C  F011         	goto	u3070
  3676   0022B4                     u3071:
  3677   0022B4  EF5E  F011         	goto	l3060
  3678   0022B8                     u3070:
  3679   0022B8  EF15  F011         	goto	l3052
  3680   0022BC                     l3060:
  3681   0022BC  C02A  F01E         	movff	floorf@u,??_floorf
  3682   0022C0  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  3683   0022C4  C02C  F020         	movff	floorf@u+2,??_floorf+2
  3684   0022C8  C02D  F021         	movff	floorf@u+3,??_floorf+3
  3685   0022CC  0E20               	movlw	32
  3686   0022CE  EF6E  F011         	goto	u3080
  3687   0022D2                     u3085:
  3688   0022D2  90D8               	bcf	status,0,c
  3689   0022D4  3221               	rrcf	(??_floorf+3)^0,f,c
  3690   0022D6  3220               	rrcf	(??_floorf+2)^0,f,c
  3691   0022D8  321F               	rrcf	(??_floorf+1)^0,f,c
  3692   0022DA  321E               	rrcf	??_floorf^0,f,c
  3693   0022DC                     u3080:
  3694   0022DC  2EE8               	decfsz	wreg,f,c
  3695   0022DE  EF69  F011         	goto	u3085
  3696   0022E2  501E               	movf	??_floorf^0,w,c
  3697   0022E4  101F               	iorwf	(??_floorf+1)^0,w,c
  3698   0022E6  1020               	iorwf	(??_floorf+2)^0,w,c
  3699   0022E8  1021               	iorwf	(??_floorf+3)^0,w,c
  3700   0022EA  B4D8               	btfsc	status,2,c
  3701   0022EC  EF7A  F011         	goto	u3091
  3702   0022F0  EF7C  F011         	goto	u3090
  3703   0022F4                     u3091:
  3704   0022F4  EF84  F011         	goto	l974
  3705   0022F8                     u3090:
  3706   0022F8  5024               	movf	floorf@m^0,w,c
  3707   0022FA  262A               	addwf	floorf@u^0,f,c
  3708   0022FC  5025               	movf	(floorf@m+1)^0,w,c
  3709   0022FE  222B               	addwfc	(floorf@u+1)^0,f,c
  3710   002300  5026               	movf	(floorf@m+2)^0,w,c
  3711   002302  222C               	addwfc	(floorf@u+2)^0,f,c
  3712   002304  5027               	movf	(floorf@m+3)^0,w,c
  3713   002306  222D               	addwfc	(floorf@u+3)^0,f,c
  3714   002308                     l974:
  3715   002308  1C24               	comf	floorf@m^0,w,c
  3716   00230A  6E1E               	movwf	??_floorf^0,c
  3717   00230C  1C25               	comf	(floorf@m+1)^0,w,c
  3718   00230E  6E1F               	movwf	(??_floorf+1)^0,c
  3719   002310  1C26               	comf	(floorf@m+2)^0,w,c
  3720   002312  6E20               	movwf	(??_floorf+2)^0,c
  3721   002314  1C27               	comf	(floorf@m+3)^0,w,c
  3722   002316  6E21               	movwf	(??_floorf+3)^0,c
  3723   002318  501E               	movf	??_floorf^0,w,c
  3724   00231A  162A               	andwf	floorf@u^0,f,c
  3725   00231C  501F               	movf	(??_floorf+1)^0,w,c
  3726   00231E  162B               	andwf	(floorf@u+1)^0,f,c
  3727   002320  5020               	movf	(??_floorf+2)^0,w,c
  3728   002322  162C               	andwf	(floorf@u+2)^0,f,c
  3729   002324  5021               	movf	(??_floorf+3)^0,w,c
  3730   002326  162D               	andwf	(floorf@u+3)^0,f,c
  3731   002328  EFDA  F011         	goto	l3072
  3732   00232C                     l3064:
  3733   00232C  C02A  F01E         	movff	floorf@u,??_floorf
  3734   002330  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  3735   002334  C02C  F020         	movff	floorf@u+2,??_floorf+2
  3736   002338  C02D  F021         	movff	floorf@u+3,??_floorf+3
  3737   00233C  0E20               	movlw	32
  3738   00233E  EFA6  F011         	goto	u3100
  3739   002342                     u3105:
  3740   002342  90D8               	bcf	status,0,c
  3741   002344  3221               	rrcf	(??_floorf+3)^0,f,c
  3742   002346  3220               	rrcf	(??_floorf+2)^0,f,c
  3743   002348  321F               	rrcf	(??_floorf+1)^0,f,c
  3744   00234A  321E               	rrcf	??_floorf^0,f,c
  3745   00234C                     u3100:
  3746   00234C  2EE8               	decfsz	wreg,f,c
  3747   00234E  EFA1  F011         	goto	u3105
  3748   002352  501E               	movf	??_floorf^0,w,c
  3749   002354  101F               	iorwf	(??_floorf+1)^0,w,c
  3750   002356  1020               	iorwf	(??_floorf+2)^0,w,c
  3751   002358  1021               	iorwf	(??_floorf+3)^0,w,c
  3752   00235A  A4D8               	btfss	status,2,c
  3753   00235C  EFB2  F011         	goto	u3111
  3754   002360  EFB4  F011         	goto	u3110
  3755   002364                     u3111:
  3756   002364  EFBE  F011         	goto	l3068
  3757   002368                     u3110:
  3758   002368  0E00               	movlw	0
  3759   00236A  6E2A               	movwf	floorf@u^0,c
  3760   00236C  0E00               	movlw	0
  3761   00236E  6E2B               	movwf	(floorf@u+1)^0,c
  3762   002370  0E00               	movlw	0
  3763   002372  6E2C               	movwf	(floorf@u+2)^0,c
  3764   002374  0E00               	movlw	0
  3765   002376  6E2D               	movwf	(floorf@u+3)^0,c
  3766   002378  EFDA  F011         	goto	l3072
  3767   00237C                     l3068:
  3768   00237C  90D8               	bcf	status,0,c
  3769   00237E  342A               	rlcf	floorf@u^0,w,c
  3770   002380  6E1E               	movwf	??_floorf^0,c
  3771   002382  342B               	rlcf	(floorf@u+1)^0,w,c
  3772   002384  6E1F               	movwf	(??_floorf+1)^0,c
  3773   002386  342C               	rlcf	(floorf@u+2)^0,w,c
  3774   002388  6E20               	movwf	(??_floorf+2)^0,c
  3775   00238A  342D               	rlcf	(floorf@u+3)^0,w,c
  3776   00238C  6E21               	movwf	(??_floorf+3)^0,c
  3777   00238E  501E               	movf	??_floorf^0,w,c
  3778   002390  101F               	iorwf	(??_floorf+1)^0,w,c
  3779   002392  1020               	iorwf	(??_floorf+2)^0,w,c
  3780   002394  1021               	iorwf	(??_floorf+3)^0,w,c
  3781   002396  B4D8               	btfsc	status,2,c
  3782   002398  EFD0  F011         	goto	u3121
  3783   00239C  EFD2  F011         	goto	u3120
  3784   0023A0                     u3121:
  3785   0023A0  EFDA  F011         	goto	l3072
  3786   0023A4                     u3120:
  3787   0023A4  0E00               	movlw	0
  3788   0023A6  6E2A               	movwf	floorf@u^0,c
  3789   0023A8  0E00               	movlw	0
  3790   0023AA  6E2B               	movwf	(floorf@u+1)^0,c
  3791   0023AC  0E80               	movlw	128
  3792   0023AE  6E2C               	movwf	(floorf@u+2)^0,c
  3793   0023B0  0EBF               	movlw	191
  3794   0023B2  6E2D               	movwf	(floorf@u+3)^0,c
  3795   0023B4                     l3072:
  3796   0023B4  C02A  F01A         	movff	floorf@u,?_floorf
  3797   0023B8  C02B  F01B         	movff	floorf@u+1,?_floorf+1
  3798   0023BC  C02C  F01C         	movff	floorf@u+2,?_floorf+2
  3799   0023C0  C02D  F01D         	movff	floorf@u+3,?_floorf+3
  3800   0023C4                     l971:
  3801   0023C4  0012               	return		;funcret
  3802   0023C6                     __end_of_floorf:
  3803                           	callstack 0
  3804                           
  3805 ;; *************** function ___fpclassifyf *****************
  3806 ;; Defined at:
  3807 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__fpclassifyf.c"
  3808 ;; Parameters:    Size  Location     Type
  3809 ;;  x               4    0[COMRAM] float 
  3810 ;; Auto vars:     Size  Location     Type
  3811 ;;  u               4   10[COMRAM] struct .
  3812 ;;  e               2    8[COMRAM] int 
  3813 ;; Return value:  Size  Location     Type
  3814 ;;                  2    0[COMRAM] int 
  3815 ;; Registers used:
  3816 ;;		wreg, status,2, status,0
  3817 ;; Tracked objects:
  3818 ;;		On entry : 0/0
  3819 ;;		On exit  : 0/0
  3820 ;;		Unchanged: 0/0
  3821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3822 ;;      Params:         4       0       0       0       0       0       0       0       0
  3823 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3824 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3825 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3826 ;;Total ram usage:       14 bytes
  3827 ;; Hardware stack levels used: 1
  3828 ;; This function calls:
  3829 ;;		Nothing
  3830 ;; This function is called by:
  3831 ;;		_efgtoa
  3832 ;; This function uses a non-reentrant model
  3833 ;;
  3834                           
  3835                           	psect	text13
  3836   002A4C                     __ptext13:
  3837                           	callstack 0
  3838   002A4C                     ___fpclassifyf:
  3839                           	callstack 26
  3840   002A4C  C0A6  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  3841   002A50  C0A7  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  3842   002A54  C0A8  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  3843   002A58  C0A9  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  3844   002A5C  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  3845   002A60  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  3846   002A64  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  3847   002A68  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  3848   002A6C  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  3849   002A70  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  3850   002A74  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  3851   002A78  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  3852   002A7C  0E18               	movlw	24
  3853   002A7E  EF46  F015         	goto	u2940
  3854   002A82                     u2945:
  3855   002A82  90D8               	bcf	status,0,c
  3856   002A84  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  3857   002A86  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  3858   002A88  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  3859   002A8A  3205               	rrcf	??___fpclassifyf^0,f,c
  3860   002A8C                     u2940:
  3861   002A8C  2EE8               	decfsz	wreg,f,c
  3862   002A8E  EF41  F015         	goto	u2945
  3863   002A92  5005               	movf	??___fpclassifyf^0,w,c
  3864   002A94  6E09               	movwf	___fpclassifyf@e^0,c
  3865   002A96  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  3866   002A98  5009               	movf	___fpclassifyf@e^0,w,c
  3867   002A9A  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  3868   002A9C  A4D8               	btfss	status,2,c
  3869   002A9E  EF53  F015         	goto	u2951
  3870   002AA2  EF55  F015         	goto	u2950
  3871   002AA6                     u2951:
  3872   002AA6  EF75  F015         	goto	l3030
  3873   002AAA                     u2950:
  3874   002AAA  90D8               	bcf	status,0,c
  3875   002AAC  340B               	rlcf	___fpclassifyf@u^0,w,c
  3876   002AAE  6E05               	movwf	??___fpclassifyf^0,c
  3877   002AB0  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  3878   002AB2  6E06               	movwf	(??___fpclassifyf+1)^0,c
  3879   002AB4  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  3880   002AB6  6E07               	movwf	(??___fpclassifyf+2)^0,c
  3881   002AB8  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  3882   002ABA  6E08               	movwf	(??___fpclassifyf+3)^0,c
  3883   002ABC  5005               	movf	??___fpclassifyf^0,w,c
  3884   002ABE  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  3885   002AC0  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  3886   002AC2  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  3887   002AC4  A4D8               	btfss	status,2,c
  3888   002AC6  EF67  F015         	goto	u2961
  3889   002ACA  EF69  F015         	goto	u2960
  3890   002ACE                     u2961:
  3891   002ACE  EF6F  F015         	goto	l3026
  3892   002AD2                     u2960:
  3893   002AD2  0E00               	movlw	0
  3894   002AD4  6E02               	movwf	(?___fpclassifyf+1)^0,c
  3895   002AD6  0E02               	movlw	2
  3896   002AD8  6E01               	movwf	?___fpclassifyf^0,c
  3897   002ADA  EFA4  F015         	goto	l939
  3898   002ADE                     l3026:
  3899   002ADE  0E00               	movlw	0
  3900   002AE0  6E02               	movwf	(?___fpclassifyf+1)^0,c
  3901   002AE2  0E03               	movlw	3
  3902   002AE4  6E01               	movwf	?___fpclassifyf^0,c
  3903   002AE6  EFA4  F015         	goto	l939
  3904   002AEA                     l3030:
  3905   002AEA  2809               	incf	___fpclassifyf@e^0,w,c
  3906   002AEC  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  3907   002AEE  A4D8               	btfss	status,2,c
  3908   002AF0  EF7C  F015         	goto	u2971
  3909   002AF4  EF7E  F015         	goto	u2970
  3910   002AF8                     u2971:
  3911   002AF8  EFA0  F015         	goto	l3036
  3912   002AFC                     u2970:
  3913   002AFC  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  3914   002B00  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  3915   002B04  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  3916   002B08  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  3917   002B0C  0E09               	movlw	9
  3918   002B0E                     u2985:
  3919   002B0E  90D8               	bcf	status,0,c
  3920   002B10  3605               	rlcf	??___fpclassifyf^0,f,c
  3921   002B12  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  3922   002B14  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  3923   002B16  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  3924   002B18  2EE8               	decfsz	wreg,f,c
  3925   002B1A  EF87  F015         	goto	u2985
  3926   002B1E  5005               	movf	??___fpclassifyf^0,w,c
  3927   002B20  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  3928   002B22  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  3929   002B24  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  3930   002B26  B4D8               	btfsc	status,2,c
  3931   002B28  EF98  F015         	goto	u2991
  3932   002B2C  EF9B  F015         	goto	u2990
  3933   002B30                     u2991:
  3934   002B30  0E01               	movlw	1
  3935   002B32  EF9C  F015         	goto	u3000
  3936   002B36                     u2990:
  3937   002B36  0E00               	movlw	0
  3938   002B38                     u3000:
  3939   002B38  6E01               	movwf	?___fpclassifyf^0,c
  3940   002B3A  6A02               	clrf	(?___fpclassifyf+1)^0,c
  3941   002B3C  EFA4  F015         	goto	l939
  3942   002B40                     l3036:
  3943   002B40  0E00               	movlw	0
  3944   002B42  6E02               	movwf	(?___fpclassifyf+1)^0,c
  3945   002B44  0E04               	movlw	4
  3946   002B46  6E01               	movwf	?___fpclassifyf^0,c
  3947   002B48                     l939:
  3948   002B48  0012               	return		;funcret
  3949   002B4A                     __end_of___fpclassifyf:
  3950                           	callstack 0
  3951                           
  3952 ;; *************** function ___fltol *****************
  3953 ;; Defined at:
  3954 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  3955 ;; Parameters:    Size  Location     Type
  3956 ;;  f1              4    0[COMRAM] int 
  3957 ;; Auto vars:     Size  Location     Type
  3958 ;;  exp1            1    9[COMRAM] unsigned char 
  3959 ;;  sign1           1    8[COMRAM] unsigned char 
  3960 ;; Return value:  Size  Location     Type
  3961 ;;                  4    0[COMRAM] long 
  3962 ;; Registers used:
  3963 ;;		wreg, status,2, status,0
  3964 ;; Tracked objects:
  3965 ;;		On entry : 0/0
  3966 ;;		On exit  : 0/0
  3967 ;;		Unchanged: 0/0
  3968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3969 ;;      Params:         4       0       0       0       0       0       0       0       0
  3970 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3971 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3972 ;;      Totals:        10       0       0       0       0       0       0       0       0
  3973 ;;Total ram usage:       10 bytes
  3974 ;; Hardware stack levels used: 1
  3975 ;; This function calls:
  3976 ;;		Nothing
  3977 ;; This function is called by:
  3978 ;;		_efgtoa
  3979 ;; This function uses a non-reentrant model
  3980 ;;
  3981                           
  3982                           	psect	text14
  3983   002842                     __ptext14:
  3984                           	callstack 0
  3985   002842                     ___fltol:
  3986                           	callstack 26
  3987   002842  3403               	rlcf	(___fltol@f1+2)^0,w,c
  3988   002844  3404               	rlcf	(___fltol@f1+3)^0,w,c
  3989   002846  6E0A               	movwf	___fltol@exp1^0,c
  3990   002848  500A               	movf	___fltol@exp1^0,w,c
  3991   00284A  A4D8               	btfss	status,2,c
  3992   00284C  EF2A  F014         	goto	u2851
  3993   002850  EF2C  F014         	goto	u2850
  3994   002854                     u2851:
  3995   002854  EF36  F014         	goto	l2966
  3996   002858                     u2850:
  3997   002858                     l2962:
  3998   002858  0E00               	movlw	0
  3999   00285A  6E01               	movwf	?___fltol^0,c
  4000   00285C  0E00               	movlw	0
  4001   00285E  6E02               	movwf	(?___fltol+1)^0,c
  4002   002860  0E00               	movlw	0
  4003   002862  6E03               	movwf	(?___fltol+2)^0,c
  4004   002864  0E00               	movlw	0
  4005   002866  6E04               	movwf	(?___fltol+3)^0,c
  4006   002868  EFA3  F014         	goto	l424
  4007   00286C                     l2966:
  4008   00286C  C001  F005         	movff	___fltol@f1,??___fltol
  4009   002870  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  4010   002874  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  4011   002878  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  4012   00287C  0E20               	movlw	32
  4013   00287E  EF46  F014         	goto	u2860
  4014   002882                     u2865:
  4015   002882  90D8               	bcf	status,0,c
  4016   002884  3208               	rrcf	(??___fltol+3)^0,f,c
  4017   002886  3207               	rrcf	(??___fltol+2)^0,f,c
  4018   002888  3206               	rrcf	(??___fltol+1)^0,f,c
  4019   00288A  3205               	rrcf	??___fltol^0,f,c
  4020   00288C                     u2860:
  4021   00288C  2EE8               	decfsz	wreg,f,c
  4022   00288E  EF41  F014         	goto	u2865
  4023   002892  5005               	movf	??___fltol^0,w,c
  4024   002894  6E09               	movwf	___fltol@sign1^0,c
  4025   002896  8E03               	bsf	(___fltol@f1+2)^0,7,c
  4026   002898  0EFF               	movlw	255
  4027   00289A  1601               	andwf	___fltol@f1^0,f,c
  4028   00289C  0EFF               	movlw	255
  4029   00289E  1602               	andwf	(___fltol@f1+1)^0,f,c
  4030   0028A0  0EFF               	movlw	255
  4031   0028A2  1603               	andwf	(___fltol@f1+2)^0,f,c
  4032   0028A4  0E00               	movlw	0
  4033   0028A6  1604               	andwf	(___fltol@f1+3)^0,f,c
  4034   0028A8  0E96               	movlw	150
  4035   0028AA  5E0A               	subwf	___fltol@exp1^0,f,c
  4036   0028AC  BE0A               	btfsc	___fltol@exp1^0,7,c
  4037   0028AE  EF5D  F014         	goto	u2870
  4038   0028B2  EF5B  F014         	goto	u2871
  4039   0028B6                     u2871:
  4040   0028B6  EF73  F014         	goto	l2986
  4041   0028BA                     u2870:
  4042   0028BA  500A               	movf	___fltol@exp1^0,w,c
  4043   0028BC  0A80               	xorlw	128
  4044   0028BE  0F97               	addlw	151
  4045   0028C0  B0D8               	btfsc	status,0,c
  4046   0028C2  EF65  F014         	goto	u2881
  4047   0028C6  EF67  F014         	goto	u2880
  4048   0028CA                     u2881:
  4049   0028CA  EF69  F014         	goto	l2982
  4050   0028CE                     u2880:
  4051   0028CE  EF2C  F014         	goto	l2962
  4052   0028D2                     l2982:
  4053   0028D2  90D8               	bcf	status,0,c
  4054   0028D4  3204               	rrcf	(___fltol@f1+3)^0,f,c
  4055   0028D6  3203               	rrcf	(___fltol@f1+2)^0,f,c
  4056   0028D8  3202               	rrcf	(___fltol@f1+1)^0,f,c
  4057   0028DA  3201               	rrcf	___fltol@f1^0,f,c
  4058   0028DC  3E0A               	incfsz	___fltol@exp1^0,f,c
  4059   0028DE  EF69  F014         	goto	l2982
  4060   0028E2  EF8B  F014         	goto	l2996
  4061   0028E6                     l2986:
  4062   0028E6  0E1F               	movlw	31
  4063   0028E8  640A               	cpfsgt	___fltol@exp1^0,c
  4064   0028EA  EF79  F014         	goto	u2891
  4065   0028EE  EF7B  F014         	goto	u2890
  4066   0028F2                     u2891:
  4067   0028F2  EF83  F014         	goto	l2994
  4068   0028F6                     u2890:
  4069   0028F6  EF2C  F014         	goto	l2962
  4070   0028FA                     l2992:
  4071   0028FA  90D8               	bcf	status,0,c
  4072   0028FC  3601               	rlcf	___fltol@f1^0,f,c
  4073   0028FE  3602               	rlcf	(___fltol@f1+1)^0,f,c
  4074   002900  3603               	rlcf	(___fltol@f1+2)^0,f,c
  4075   002902  3604               	rlcf	(___fltol@f1+3)^0,f,c
  4076   002904  060A               	decf	___fltol@exp1^0,f,c
  4077   002906                     l2994:
  4078   002906  500A               	movf	___fltol@exp1^0,w,c
  4079   002908  A4D8               	btfss	status,2,c
  4080   00290A  EF89  F014         	goto	u2901
  4081   00290E  EF8B  F014         	goto	u2900
  4082   002912                     u2901:
  4083   002912  EF7D  F014         	goto	l2992
  4084   002916                     u2900:
  4085   002916                     l2996:
  4086   002916  5009               	movf	___fltol@sign1^0,w,c
  4087   002918  B4D8               	btfsc	status,2,c
  4088   00291A  EF91  F014         	goto	u2911
  4089   00291E  EF93  F014         	goto	u2910
  4090   002922                     u2911:
  4091   002922  EF9B  F014         	goto	l3000
  4092   002926                     u2910:
  4093   002926  1E04               	comf	(___fltol@f1+3)^0,f,c
  4094   002928  1E03               	comf	(___fltol@f1+2)^0,f,c
  4095   00292A  1E02               	comf	(___fltol@f1+1)^0,f,c
  4096   00292C  6C01               	negf	___fltol@f1^0,c
  4097   00292E  0E00               	movlw	0
  4098   002930  2202               	addwfc	(___fltol@f1+1)^0,f,c
  4099   002932  2203               	addwfc	(___fltol@f1+2)^0,f,c
  4100   002934  2204               	addwfc	(___fltol@f1+3)^0,f,c
  4101   002936                     l3000:
  4102   002936  C001  F001         	movff	___fltol@f1,?___fltol
  4103   00293A  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  4104   00293E  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  4105   002942  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  4106   002946                     l424:
  4107   002946  0012               	return		;funcret
  4108   002948                     __end_of___fltol:
  4109                           	callstack 0
  4110                           
  4111 ;; *************** function ___flsub *****************
  4112 ;; Defined at:
  4113 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  4114 ;; Parameters:    Size  Location     Type
  4115 ;;  b               4   44[COMRAM] long 
  4116 ;;  a               4   48[COMRAM] long 
  4117 ;; Auto vars:     Size  Location     Type
  4118 ;;		None
  4119 ;; Return value:  Size  Location     Type
  4120 ;;                  4   44[COMRAM] long 
  4121 ;; Registers used:
  4122 ;;		wreg, status,2, status,0, cstack
  4123 ;; Tracked objects:
  4124 ;;		On entry : 0/0
  4125 ;;		On exit  : 0/0
  4126 ;;		Unchanged: 0/0
  4127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4128 ;;      Params:         8       0       0       0       0       0       0       0       0
  4129 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4130 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4131 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4132 ;;Total ram usage:        8 bytes
  4133 ;; Hardware stack levels used: 1
  4134 ;; Hardware stack levels required when called: 1
  4135 ;; This function calls:
  4136 ;;		___fladd
  4137 ;; This function is called by:
  4138 ;;		_efgtoa
  4139 ;; This function uses a non-reentrant model
  4140 ;;
  4141                           
  4142                           	psect	text15
  4143   002FC8                     __ptext15:
  4144                           	callstack 0
  4145   002FC8                     ___flsub:
  4146                           	callstack 25
  4147   002FC8  0E00               	movlw	0
  4148   002FCA  1A31               	xorwf	___flsub@a^0,f,c
  4149   002FCC  0E00               	movlw	0
  4150   002FCE  1A32               	xorwf	(___flsub@a+1)^0,f,c
  4151   002FD0  0E00               	movlw	0
  4152   002FD2  1A33               	xorwf	(___flsub@a+2)^0,f,c
  4153   002FD4  0E80               	movlw	128
  4154   002FD6  1A34               	xorwf	(___flsub@a+3)^0,f,c
  4155   002FD8  C02D  F001         	movff	___flsub@b,___fladd@b
  4156   002FDC  C02E  F002         	movff	___flsub@b+1,___fladd@b+1
  4157   002FE0  C02F  F003         	movff	___flsub@b+2,___fladd@b+2
  4158   002FE4  C030  F004         	movff	___flsub@b+3,___fladd@b+3
  4159   002FE8  C031  F005         	movff	___flsub@a,___fladd@a
  4160   002FEC  C032  F006         	movff	___flsub@a+1,___fladd@a+1
  4161   002FF0  C033  F007         	movff	___flsub@a+2,___fladd@a+2
  4162   002FF4  C034  F008         	movff	___flsub@a+3,___fladd@a+3
  4163   002FF8  EC0D  F009         	call	___fladd	;wreg free
  4164   002FFC  C001  F02D         	movff	?___fladd,?___flsub
  4165   003000  C002  F02E         	movff	?___fladd+1,?___flsub+1
  4166   003004  C003  F02F         	movff	?___fladd+2,?___flsub+2
  4167   003008  C004  F030         	movff	?___fladd+3,?___flsub+3
  4168   00300C  0012               	return		;funcret
  4169   00300E                     __end_of___flsub:
  4170                           	callstack 0
  4171                           
  4172 ;; *************** function ___fladd *****************
  4173 ;; Defined at:
  4174 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  4175 ;; Parameters:    Size  Location     Type
  4176 ;;  b               4    0[COMRAM] long 
  4177 ;;  a               4    4[COMRAM] long 
  4178 ;; Auto vars:     Size  Location     Type
  4179 ;;  grs             1   15[COMRAM] unsigned char 
  4180 ;;  bexp            1   14[COMRAM] unsigned char 
  4181 ;;  aexp            1   13[COMRAM] unsigned char 
  4182 ;;  signs           1   12[COMRAM] unsigned char 
  4183 ;; Return value:  Size  Location     Type
  4184 ;;                  4    0[COMRAM] unsigned char 
  4185 ;; Registers used:
  4186 ;;		wreg, status,2, status,0
  4187 ;; Tracked objects:
  4188 ;;		On entry : 0/0
  4189 ;;		On exit  : 0/0
  4190 ;;		Unchanged: 0/0
  4191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4192 ;;      Params:         8       0       0       0       0       0       0       0       0
  4193 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4194 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4195 ;;      Totals:        16       0       0       0       0       0       0       0       0
  4196 ;;Total ram usage:       16 bytes
  4197 ;; Hardware stack levels used: 1
  4198 ;; This function calls:
  4199 ;;		Nothing
  4200 ;; This function is called by:
  4201 ;;		___flsub
  4202 ;;		_efgtoa
  4203 ;; This function uses a non-reentrant model
  4204 ;;
  4205                           
  4206                           	psect	text16
  4207   00121A                     __ptext16:
  4208                           	callstack 0
  4209   00121A                     ___fladd:
  4210                           	callstack 25
  4211   00121A  5004               	movf	(___fladd@b+3)^0,w,c
  4212   00121C  0B80               	andlw	128
  4213   00121E  6E0D               	movwf	___fladd@signs^0,c
  4214   001220  5004               	movf	(___fladd@b+3)^0,w,c
  4215   001222  2404               	addwf	(___fladd@b+3)^0,w,c
  4216   001224  6E0F               	movwf	___fladd@bexp^0,c
  4217   001226  AE03               	btfss	(___fladd@b+2)^0,7,c
  4218   001228  EF18  F009         	goto	u1941
  4219   00122C  EF1A  F009         	goto	u1940
  4220   001230                     u1941:
  4221   001230  EF1B  F009         	goto	l2430
  4222   001234                     u1940:
  4223   001234  800F               	bsf	___fladd@bexp^0,0,c
  4224   001236                     l2430:
  4225   001236  500F               	movf	___fladd@bexp^0,w,c
  4226   001238  B4D8               	btfsc	status,2,c
  4227   00123A  EF21  F009         	goto	u1951
  4228   00123E  EF23  F009         	goto	u1950
  4229   001242                     u1951:
  4230   001242  EF38  F009         	goto	l2440
  4231   001246                     u1950:
  4232   001246  280F               	incf	___fladd@bexp^0,w,c
  4233   001248  A4D8               	btfss	status,2,c
  4234   00124A  EF29  F009         	goto	u1961
  4235   00124E  EF2B  F009         	goto	u1960
  4236   001252                     u1961:
  4237   001252  EF33  F009         	goto	l2436
  4238   001256                     u1960:
  4239   001256  0E00               	movlw	0
  4240   001258  6E01               	movwf	___fladd@b^0,c
  4241   00125A  0E00               	movlw	0
  4242   00125C  6E02               	movwf	(___fladd@b+1)^0,c
  4243   00125E  0E00               	movlw	0
  4244   001260  6E03               	movwf	(___fladd@b+2)^0,c
  4245   001262  0E00               	movlw	0
  4246   001264  6E04               	movwf	(___fladd@b+3)^0,c
  4247   001266                     l2436:
  4248   001266  8E03               	bsf	(___fladd@b+2)^0,7,c
  4249   001268  0E00               	movlw	0
  4250   00126A  6E04               	movwf	(___fladd@b+3)^0,c
  4251   00126C  EF40  F009         	goto	l2442
  4252   001270                     l2440:
  4253   001270  0E00               	movlw	0
  4254   001272  6E01               	movwf	___fladd@b^0,c
  4255   001274  0E00               	movlw	0
  4256   001276  6E02               	movwf	(___fladd@b+1)^0,c
  4257   001278  0E00               	movlw	0
  4258   00127A  6E03               	movwf	(___fladd@b+2)^0,c
  4259   00127C  0E00               	movlw	0
  4260   00127E  6E04               	movwf	(___fladd@b+3)^0,c
  4261   001280                     l2442:
  4262   001280  5008               	movf	(___fladd@a+3)^0,w,c
  4263   001282  0B80               	andlw	128
  4264   001284  6E0E               	movwf	___fladd@aexp^0,c
  4265   001286  500D               	movf	___fladd@signs^0,w,c
  4266   001288  180E               	xorwf	___fladd@aexp^0,w,c
  4267   00128A  B4D8               	btfsc	status,2,c
  4268   00128C  EF4A  F009         	goto	u1971
  4269   001290  EF4C  F009         	goto	u1970
  4270   001294                     u1971:
  4271   001294  EF4D  F009         	goto	l2448
  4272   001298                     u1970:
  4273   001298  8C0D               	bsf	___fladd@signs^0,6,c
  4274   00129A                     l2448:
  4275   00129A  5008               	movf	(___fladd@a+3)^0,w,c
  4276   00129C  2408               	addwf	(___fladd@a+3)^0,w,c
  4277   00129E  6E0E               	movwf	___fladd@aexp^0,c
  4278   0012A0  AE07               	btfss	(___fladd@a+2)^0,7,c
  4279   0012A2  EF55  F009         	goto	u1981
  4280   0012A6  EF57  F009         	goto	u1980
  4281   0012AA                     u1981:
  4282   0012AA  EF58  F009         	goto	l2454
  4283   0012AE                     u1980:
  4284   0012AE  800E               	bsf	___fladd@aexp^0,0,c
  4285   0012B0                     l2454:
  4286   0012B0  500E               	movf	___fladd@aexp^0,w,c
  4287   0012B2  B4D8               	btfsc	status,2,c
  4288   0012B4  EF5E  F009         	goto	u1991
  4289   0012B8  EF60  F009         	goto	u1990
  4290   0012BC                     u1991:
  4291   0012BC  EF75  F009         	goto	l2464
  4292   0012C0                     u1990:
  4293   0012C0  280E               	incf	___fladd@aexp^0,w,c
  4294   0012C2  A4D8               	btfss	status,2,c
  4295   0012C4  EF66  F009         	goto	u2001
  4296   0012C8  EF68  F009         	goto	u2000
  4297   0012CC                     u2001:
  4298   0012CC  EF70  F009         	goto	l2460
  4299   0012D0                     u2000:
  4300   0012D0  0E00               	movlw	0
  4301   0012D2  6E05               	movwf	___fladd@a^0,c
  4302   0012D4  0E00               	movlw	0
  4303   0012D6  6E06               	movwf	(___fladd@a+1)^0,c
  4304   0012D8  0E00               	movlw	0
  4305   0012DA  6E07               	movwf	(___fladd@a+2)^0,c
  4306   0012DC  0E00               	movlw	0
  4307   0012DE  6E08               	movwf	(___fladd@a+3)^0,c
  4308   0012E0                     l2460:
  4309   0012E0  8E07               	bsf	(___fladd@a+2)^0,7,c
  4310   0012E2  0E00               	movlw	0
  4311   0012E4  6E08               	movwf	(___fladd@a+3)^0,c
  4312   0012E6  EF7D  F009         	goto	l2466
  4313   0012EA                     l2464:
  4314   0012EA  0E00               	movlw	0
  4315   0012EC  6E05               	movwf	___fladd@a^0,c
  4316   0012EE  0E00               	movlw	0
  4317   0012F0  6E06               	movwf	(___fladd@a+1)^0,c
  4318   0012F2  0E00               	movlw	0
  4319   0012F4  6E07               	movwf	(___fladd@a+2)^0,c
  4320   0012F6  0E00               	movlw	0
  4321   0012F8  6E08               	movwf	(___fladd@a+3)^0,c
  4322   0012FA                     l2466:
  4323   0012FA  500F               	movf	___fladd@bexp^0,w,c
  4324   0012FC  5C0E               	subwf	___fladd@aexp^0,w,c
  4325   0012FE  B0D8               	btfsc	status,0,c
  4326   001300  EF84  F009         	goto	u2011
  4327   001304  EF86  F009         	goto	u2010
  4328   001308                     u2011:
  4329   001308  EFAD  F009         	goto	l2502
  4330   00130C                     u2010:
  4331   00130C  AC0D               	btfss	___fladd@signs^0,6,c
  4332   00130E  EF8B  F009         	goto	u2021
  4333   001312  EF8D  F009         	goto	u2020
  4334   001316                     u2021:
  4335   001316  EF8F  F009         	goto	l2472
  4336   00131A                     u2020:
  4337   00131A  0E80               	movlw	128
  4338   00131C  1A0D               	xorwf	___fladd@signs^0,f,c
  4339   00131E                     l2472:
  4340   00131E  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  4341   001322  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  4342   001326  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  4343   00132A  C001  F010         	movff	___fladd@b,___fladd@grs
  4344   00132E  C005  F001         	movff	___fladd@a,___fladd@b
  4345   001332  C010  F005         	movff	___fladd@grs,___fladd@a
  4346   001336  C002  F010         	movff	___fladd@b+1,___fladd@grs
  4347   00133A  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  4348   00133E  C010  F006         	movff	___fladd@grs,___fladd@a+1
  4349   001342  C003  F010         	movff	___fladd@b+2,___fladd@grs
  4350   001346  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  4351   00134A  C010  F007         	movff	___fladd@grs,___fladd@a+2
  4352   00134E  C004  F010         	movff	___fladd@b+3,___fladd@grs
  4353   001352  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  4354   001356  C010  F008         	movff	___fladd@grs,___fladd@a+3
  4355   00135A                     l2502:
  4356   00135A  0E00               	movlw	0
  4357   00135C  6E10               	movwf	___fladd@grs^0,c
  4358   00135E  500F               	movf	___fladd@bexp^0,w,c
  4359   001360  C00E  F009         	movff	___fladd@aexp,??___fladd
  4360   001364  6A0A               	clrf	(??___fladd+1)^0,c
  4361   001366  5E09               	subwf	??___fladd^0,f,c
  4362   001368  0E00               	movlw	0
  4363   00136A  5A0A               	subwfb	(??___fladd+1)^0,f,c
  4364   00136C  BE0A               	btfsc	(??___fladd+1)^0,7,c
  4365   00136E  EFC2  F009         	goto	u2031
  4366   001372  500A               	movf	(??___fladd+1)^0,w,c
  4367   001374  E109               	bnz	u2030
  4368   001376  0E1A               	movlw	26
  4369   001378  5C09               	subwf	??___fladd^0,w,c
  4370   00137A  A0D8               	btfss	status,0,c
  4371   00137C  EFC2  F009         	goto	u2031
  4372   001380  EFC4  F009         	goto	u2030
  4373   001384                     u2031:
  4374   001384  EFFB  F009         	goto	l656
  4375   001388                     u2030:
  4376   001388  5001               	movf	___fladd@b^0,w,c
  4377   00138A  1002               	iorwf	(___fladd@b+1)^0,w,c
  4378   00138C  1003               	iorwf	(___fladd@b+2)^0,w,c
  4379   00138E  1004               	iorwf	(___fladd@b+3)^0,w,c
  4380   001390  A4D8               	btfss	status,2,c
  4381   001392  EFCD  F009         	goto	u2041
  4382   001396  EFD0  F009         	goto	u2040
  4383   00139A                     u2041:
  4384   00139A  0E01               	movlw	1
  4385   00139C  EFD1  F009         	goto	u2050
  4386   0013A0                     u2040:
  4387   0013A0  0E00               	movlw	0
  4388   0013A2                     u2050:
  4389   0013A2  6E10               	movwf	___fladd@grs^0,c
  4390   0013A4  0E00               	movlw	0
  4391   0013A6  6E01               	movwf	___fladd@b^0,c
  4392   0013A8  0E00               	movlw	0
  4393   0013AA  6E02               	movwf	(___fladd@b+1)^0,c
  4394   0013AC  0E00               	movlw	0
  4395   0013AE  6E03               	movwf	(___fladd@b+2)^0,c
  4396   0013B0  0E00               	movlw	0
  4397   0013B2  6E04               	movwf	(___fladd@b+3)^0,c
  4398   0013B4  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  4399   0013B8  EF04  F00A         	goto	l655
  4400   0013BC                     l657:
  4401   0013BC  A010               	btfss	___fladd@grs^0,0,c
  4402   0013BE  EFE3  F009         	goto	u2061
  4403   0013C2  EFE5  F009         	goto	u2060
  4404   0013C6                     u2061:
  4405   0013C6  EFEB  F009         	goto	l2514
  4406   0013CA                     u2060:
  4407   0013CA  90D8               	bcf	status,0,c
  4408   0013CC  3010               	rrcf	___fladd@grs^0,w,c
  4409   0013CE  0901               	iorlw	1
  4410   0013D0  6E10               	movwf	___fladd@grs^0,c
  4411   0013D2  EFED  F009         	goto	l2516
  4412   0013D6                     l2514:
  4413   0013D6  90D8               	bcf	status,0,c
  4414   0013D8  3210               	rrcf	___fladd@grs^0,f,c
  4415   0013DA                     l2516:
  4416   0013DA  A001               	btfss	___fladd@b^0,0,c
  4417   0013DC  EFF2  F009         	goto	u2071
  4418   0013E0  EFF4  F009         	goto	u2070
  4419   0013E4                     u2071:
  4420   0013E4  EFF5  F009         	goto	l2520
  4421   0013E8                     u2070:
  4422   0013E8  8E10               	bsf	___fladd@grs^0,7,c
  4423   0013EA                     l2520:
  4424   0013EA  3404               	rlcf	(___fladd@b+3)^0,w,c
  4425   0013EC  3204               	rrcf	(___fladd@b+3)^0,f,c
  4426   0013EE  3203               	rrcf	(___fladd@b+2)^0,f,c
  4427   0013F0  3202               	rrcf	(___fladd@b+1)^0,f,c
  4428   0013F2  3201               	rrcf	___fladd@b^0,f,c
  4429   0013F4  2A0F               	incf	___fladd@bexp^0,f,c
  4430   0013F6                     l656:
  4431   0013F6  500E               	movf	___fladd@aexp^0,w,c
  4432   0013F8  5C0F               	subwf	___fladd@bexp^0,w,c
  4433   0013FA  A0D8               	btfss	status,0,c
  4434   0013FC  EF02  F00A         	goto	u2081
  4435   001400  EF04  F00A         	goto	u2080
  4436   001404                     u2081:
  4437   001404  EFDE  F009         	goto	l657
  4438   001408                     u2080:
  4439   001408                     l655:
  4440   001408  BC0D               	btfsc	___fladd@signs^0,6,c
  4441   00140A  EF09  F00A         	goto	u2091
  4442   00140E  EF0B  F00A         	goto	u2090
  4443   001412                     u2091:
  4444   001412  EF4B  F00A         	goto	l2548
  4445   001416                     u2090:
  4446   001416  500F               	movf	___fladd@bexp^0,w,c
  4447   001418  A4D8               	btfss	status,2,c
  4448   00141A  EF11  F00A         	goto	u2101
  4449   00141E  EF13  F00A         	goto	u2100
  4450   001422                     u2101:
  4451   001422  EF1D  F00A         	goto	l2530
  4452   001426                     u2100:
  4453   001426  0E00               	movlw	0
  4454   001428  6E01               	movwf	?___fladd^0,c
  4455   00142A  0E00               	movlw	0
  4456   00142C  6E02               	movwf	(?___fladd+1)^0,c
  4457   00142E  0E00               	movlw	0
  4458   001430  6E03               	movwf	(?___fladd+2)^0,c
  4459   001432  0E00               	movlw	0
  4460   001434  6E04               	movwf	(?___fladd+3)^0,c
  4461   001436  EF6C  F00B         	goto	l664
  4462   00143A                     l2530:
  4463   00143A  5005               	movf	___fladd@a^0,w,c
  4464   00143C  2601               	addwf	___fladd@b^0,f,c
  4465   00143E  5006               	movf	(___fladd@a+1)^0,w,c
  4466   001440  2202               	addwfc	(___fladd@b+1)^0,f,c
  4467   001442  5007               	movf	(___fladd@a+2)^0,w,c
  4468   001444  2203               	addwfc	(___fladd@b+2)^0,f,c
  4469   001446  5008               	movf	(___fladd@a+3)^0,w,c
  4470   001448  2204               	addwfc	(___fladd@b+3)^0,f,c
  4471   00144A  A004               	btfss	(___fladd@b+3)^0,0,c
  4472   00144C  EF2A  F00A         	goto	u2111
  4473   001450  EF2C  F00A         	goto	u2110
  4474   001454                     u2111:
  4475   001454  EFD8  F00A         	goto	l2584
  4476   001458                     u2110:
  4477   001458  A010               	btfss	___fladd@grs^0,0,c
  4478   00145A  EF31  F00A         	goto	u2121
  4479   00145E  EF33  F00A         	goto	u2120
  4480   001462                     u2121:
  4481   001462  EF39  F00A         	goto	l2538
  4482   001466                     u2120:
  4483   001466  90D8               	bcf	status,0,c
  4484   001468  3010               	rrcf	___fladd@grs^0,w,c
  4485   00146A  0901               	iorlw	1
  4486   00146C  6E10               	movwf	___fladd@grs^0,c
  4487   00146E  EF3B  F00A         	goto	l2540
  4488   001472                     l2538:
  4489   001472  90D8               	bcf	status,0,c
  4490   001474  3210               	rrcf	___fladd@grs^0,f,c
  4491   001476                     l2540:
  4492   001476  A001               	btfss	___fladd@b^0,0,c
  4493   001478  EF40  F00A         	goto	u2131
  4494   00147C  EF42  F00A         	goto	u2130
  4495   001480                     u2131:
  4496   001480  EF43  F00A         	goto	l2544
  4497   001484                     u2130:
  4498   001484  8E10               	bsf	___fladd@grs^0,7,c
  4499   001486                     l2544:
  4500   001486  3404               	rlcf	(___fladd@b+3)^0,w,c
  4501   001488  3204               	rrcf	(___fladd@b+3)^0,f,c
  4502   00148A  3203               	rrcf	(___fladd@b+2)^0,f,c
  4503   00148C  3202               	rrcf	(___fladd@b+1)^0,f,c
  4504   00148E  3201               	rrcf	___fladd@b^0,f,c
  4505   001490  2A0F               	incf	___fladd@bexp^0,f,c
  4506   001492  EFD8  F00A         	goto	l2584
  4507   001496                     l2548:
  4508   001496  5005               	movf	___fladd@a^0,w,c
  4509   001498  5C01               	subwf	___fladd@b^0,w,c
  4510   00149A  5006               	movf	(___fladd@a+1)^0,w,c
  4511   00149C  5802               	subwfb	(___fladd@b+1)^0,w,c
  4512   00149E  5007               	movf	(___fladd@a+2)^0,w,c
  4513   0014A0  5803               	subwfb	(___fladd@b+2)^0,w,c
  4514   0014A2  5004               	movf	(___fladd@b+3)^0,w,c
  4515   0014A4  0A80               	xorlw	128
  4516   0014A6  6E09               	movwf	??___fladd^0,c
  4517   0014A8  5008               	movf	(___fladd@a+3)^0,w,c
  4518   0014AA  0A80               	xorlw	128
  4519   0014AC  5809               	subwfb	??___fladd^0,w,c
  4520   0014AE  B0D8               	btfsc	status,0,c
  4521   0014B0  EF5C  F00A         	goto	u2141
  4522   0014B4  EF5E  F00A         	goto	u2140
  4523   0014B8                     u2141:
  4524   0014B8  EF89  F00A         	goto	l2558
  4525   0014BC                     u2140:
  4526   0014BC  5001               	movf	___fladd@b^0,w,c
  4527   0014BE  5C05               	subwf	___fladd@a^0,w,c
  4528   0014C0  6E09               	movwf	??___fladd^0,c
  4529   0014C2  5002               	movf	(___fladd@b+1)^0,w,c
  4530   0014C4  5806               	subwfb	(___fladd@a+1)^0,w,c
  4531   0014C6  6E0A               	movwf	(??___fladd+1)^0,c
  4532   0014C8  5003               	movf	(___fladd@b+2)^0,w,c
  4533   0014CA  5807               	subwfb	(___fladd@a+2)^0,w,c
  4534   0014CC  6E0B               	movwf	(??___fladd+2)^0,c
  4535   0014CE  5004               	movf	(___fladd@b+3)^0,w,c
  4536   0014D0  5808               	subwfb	(___fladd@a+3)^0,w,c
  4537   0014D2  6E0C               	movwf	(??___fladd+3)^0,c
  4538   0014D4  0EFF               	movlw	255
  4539   0014D6  2409               	addwf	??___fladd^0,w,c
  4540   0014D8  6E01               	movwf	___fladd@b^0,c
  4541   0014DA  0EFF               	movlw	255
  4542   0014DC  200A               	addwfc	(??___fladd+1)^0,w,c
  4543   0014DE  6E02               	movwf	(___fladd@b+1)^0,c
  4544   0014E0  0EFF               	movlw	255
  4545   0014E2  200B               	addwfc	(??___fladd+2)^0,w,c
  4546   0014E4  6E03               	movwf	(___fladd@b+2)^0,c
  4547   0014E6  0EFF               	movlw	255
  4548   0014E8  200C               	addwfc	(??___fladd+3)^0,w,c
  4549   0014EA  6E04               	movwf	(___fladd@b+3)^0,c
  4550   0014EC  0E80               	movlw	128
  4551   0014EE  1A0D               	xorwf	___fladd@signs^0,f,c
  4552   0014F0  6C10               	negf	___fladd@grs^0,c
  4553   0014F2  5010               	movf	___fladd@grs^0,w,c
  4554   0014F4  A4D8               	btfss	status,2,c
  4555   0014F6  EF7F  F00A         	goto	u2151
  4556   0014FA  EF81  F00A         	goto	u2150
  4557   0014FE                     u2151:
  4558   0014FE  EF91  F00A         	goto	l672
  4559   001502                     u2150:
  4560   001502  0E01               	movlw	1
  4561   001504  2601               	addwf	___fladd@b^0,f,c
  4562   001506  0E00               	movlw	0
  4563   001508  2202               	addwfc	(___fladd@b+1)^0,f,c
  4564   00150A  2203               	addwfc	(___fladd@b+2)^0,f,c
  4565   00150C  2204               	addwfc	(___fladd@b+3)^0,f,c
  4566   00150E  EF91  F00A         	goto	l672
  4567   001512                     l2558:
  4568   001512  5005               	movf	___fladd@a^0,w,c
  4569   001514  5E01               	subwf	___fladd@b^0,f,c
  4570   001516  5006               	movf	(___fladd@a+1)^0,w,c
  4571   001518  5A02               	subwfb	(___fladd@b+1)^0,f,c
  4572   00151A  5007               	movf	(___fladd@a+2)^0,w,c
  4573   00151C  5A03               	subwfb	(___fladd@b+2)^0,f,c
  4574   00151E  5008               	movf	(___fladd@a+3)^0,w,c
  4575   001520  5A04               	subwfb	(___fladd@b+3)^0,f,c
  4576   001522                     l672:
  4577   001522  5001               	movf	___fladd@b^0,w,c
  4578   001524  1002               	iorwf	(___fladd@b+1)^0,w,c
  4579   001526  1003               	iorwf	(___fladd@b+2)^0,w,c
  4580   001528  1004               	iorwf	(___fladd@b+3)^0,w,c
  4581   00152A  A4D8               	btfss	status,2,c
  4582   00152C  EF9A  F00A         	goto	u2161
  4583   001530  EF9C  F00A         	goto	u2160
  4584   001534                     u2161:
  4585   001534  EFD1  F00A         	goto	l2582
  4586   001538                     u2160:
  4587   001538  5010               	movf	___fladd@grs^0,w,c
  4588   00153A  A4D8               	btfss	status,2,c
  4589   00153C  EFA2  F00A         	goto	u2171
  4590   001540  EFA4  F00A         	goto	u2170
  4591   001544                     u2171:
  4592   001544  EFD1  F00A         	goto	l2582
  4593   001548                     u2170:
  4594   001548  0E00               	movlw	0
  4595   00154A  6E01               	movwf	?___fladd^0,c
  4596   00154C  0E00               	movlw	0
  4597   00154E  6E02               	movwf	(?___fladd+1)^0,c
  4598   001550  0E00               	movlw	0
  4599   001552  6E03               	movwf	(?___fladd+2)^0,c
  4600   001554  0E00               	movlw	0
  4601   001556  6E04               	movwf	(?___fladd+3)^0,c
  4602   001558  EF6C  F00B         	goto	l664
  4603   00155C                     l2566:
  4604   00155C  90D8               	bcf	status,0,c
  4605   00155E  3601               	rlcf	___fladd@b^0,f,c
  4606   001560  3602               	rlcf	(___fladd@b+1)^0,f,c
  4607   001562  3603               	rlcf	(___fladd@b+2)^0,f,c
  4608   001564  3604               	rlcf	(___fladd@b+3)^0,f,c
  4609   001566  AE10               	btfss	___fladd@grs^0,7,c
  4610   001568  EFB8  F00A         	goto	u2181
  4611   00156C  EFBA  F00A         	goto	u2180
  4612   001570                     u2181:
  4613   001570  EFBB  F00A         	goto	l2572
  4614   001574                     u2180:
  4615   001574  8001               	bsf	___fladd@b^0,0,c
  4616   001576                     l2572:
  4617   001576  A010               	btfss	___fladd@grs^0,0,c
  4618   001578  EFC0  F00A         	goto	u2191
  4619   00157C  EFC2  F00A         	goto	u2190
  4620   001580                     u2191:
  4621   001580  EFC6  F00A         	goto	l2576
  4622   001584                     u2190:
  4623   001584  80D8               	bsf	status,0,c
  4624   001586  3610               	rlcf	___fladd@grs^0,f,c
  4625   001588  EFC8  F00A         	goto	l2578
  4626   00158C                     l2576:
  4627   00158C  90D8               	bcf	status,0,c
  4628   00158E  3610               	rlcf	___fladd@grs^0,f,c
  4629   001590                     l2578:
  4630   001590  500F               	movf	___fladd@bexp^0,w,c
  4631   001592  B4D8               	btfsc	status,2,c
  4632   001594  EFCE  F00A         	goto	u2201
  4633   001598  EFD0  F00A         	goto	u2200
  4634   00159C                     u2201:
  4635   00159C  EFD1  F00A         	goto	l2582
  4636   0015A0                     u2200:
  4637   0015A0  060F               	decf	___fladd@bexp^0,f,c
  4638   0015A2                     l2582:
  4639   0015A2  AE03               	btfss	(___fladd@b+2)^0,7,c
  4640   0015A4  EFD6  F00A         	goto	u2211
  4641   0015A8  EFD8  F00A         	goto	u2210
  4642   0015AC                     u2211:
  4643   0015AC  EFAE  F00A         	goto	l2566
  4644   0015B0                     u2210:
  4645   0015B0                     l2584:
  4646   0015B0  0E00               	movlw	0
  4647   0015B2  6E0E               	movwf	___fladd@aexp^0,c
  4648   0015B4  AE10               	btfss	___fladd@grs^0,7,c
  4649   0015B6  EFDF  F00A         	goto	u2221
  4650   0015BA  EFE1  F00A         	goto	u2220
  4651   0015BE                     u2221:
  4652   0015BE  EFF9  F00A         	goto	l681
  4653   0015C2                     u2220:
  4654   0015C2  C010  F009         	movff	___fladd@grs,??___fladd
  4655   0015C6  0E7F               	movlw	127
  4656   0015C8  1609               	andwf	??___fladd^0,f,c
  4657   0015CA  B4D8               	btfsc	status,2,c
  4658   0015CC  EFEA  F00A         	goto	u2231
  4659   0015D0  EFEC  F00A         	goto	u2230
  4660   0015D4                     u2231:
  4661   0015D4  EFF0  F00A         	goto	l682
  4662   0015D8                     u2230:
  4663   0015D8                     l2590:
  4664   0015D8  0E01               	movlw	1
  4665   0015DA  6E0E               	movwf	___fladd@aexp^0,c
  4666   0015DC  EFF9  F00A         	goto	l681
  4667   0015E0                     l682:
  4668   0015E0  A001               	btfss	___fladd@b^0,0,c
  4669   0015E2  EFF5  F00A         	goto	u2241
  4670   0015E6  EFF7  F00A         	goto	u2240
  4671   0015EA                     u2241:
  4672   0015EA  EFF9  F00A         	goto	l681
  4673   0015EE                     u2240:
  4674   0015EE  EFEC  F00A         	goto	l2590
  4675   0015F2                     l681:
  4676   0015F2  500E               	movf	___fladd@aexp^0,w,c
  4677   0015F4  B4D8               	btfsc	status,2,c
  4678   0015F6  EFFF  F00A         	goto	u2251
  4679   0015FA  EF01  F00B         	goto	u2250
  4680   0015FE                     u2251:
  4681   0015FE  EF2C  F00B         	goto	l2602
  4682   001602                     u2250:
  4683   001602  0E01               	movlw	1
  4684   001604  2601               	addwf	___fladd@b^0,f,c
  4685   001606  0E00               	movlw	0
  4686   001608  2202               	addwfc	(___fladd@b+1)^0,f,c
  4687   00160A  2203               	addwfc	(___fladd@b+2)^0,f,c
  4688   00160C  2204               	addwfc	(___fladd@b+3)^0,f,c
  4689   00160E  A004               	btfss	(___fladd@b+3)^0,0,c
  4690   001610  EF0C  F00B         	goto	u2261
  4691   001614  EF0E  F00B         	goto	u2260
  4692   001618                     u2261:
  4693   001618  EF2C  F00B         	goto	l2602
  4694   00161C                     u2260:
  4695   00161C  C001  F009         	movff	___fladd@b,??___fladd
  4696   001620  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  4697   001624  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  4698   001628  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  4699   00162C  340C               	rlcf	(??___fladd+3)^0,w,c
  4700   00162E  320C               	rrcf	(??___fladd+3)^0,f,c
  4701   001630  320B               	rrcf	(??___fladd+2)^0,f,c
  4702   001632  320A               	rrcf	(??___fladd+1)^0,f,c
  4703   001634  3209               	rrcf	??___fladd^0,f,c
  4704   001636  C009  F001         	movff	??___fladd,___fladd@b
  4705   00163A  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  4706   00163E  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  4707   001642  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  4708   001646  280F               	incf	___fladd@bexp^0,w,c
  4709   001648  B4D8               	btfsc	status,2,c
  4710   00164A  EF29  F00B         	goto	u2271
  4711   00164E  EF2B  F00B         	goto	u2270
  4712   001652                     u2271:
  4713   001652  EF2C  F00B         	goto	l2602
  4714   001656                     u2270:
  4715   001656  2A0F               	incf	___fladd@bexp^0,f,c
  4716   001658                     l2602:
  4717   001658  280F               	incf	___fladd@bexp^0,w,c
  4718   00165A  B4D8               	btfsc	status,2,c
  4719   00165C  EF32  F00B         	goto	u2281
  4720   001660  EF34  F00B         	goto	u2280
  4721   001664                     u2281:
  4722   001664  EF3C  F00B         	goto	l2606
  4723   001668                     u2280:
  4724   001668  500F               	movf	___fladd@bexp^0,w,c
  4725   00166A  A4D8               	btfss	status,2,c
  4726   00166C  EF3A  F00B         	goto	u2291
  4727   001670  EF3C  F00B         	goto	u2290
  4728   001674                     u2291:
  4729   001674  EF4E  F00B         	goto	l2610
  4730   001678                     u2290:
  4731   001678                     l2606:
  4732   001678  0E00               	movlw	0
  4733   00167A  6E01               	movwf	___fladd@b^0,c
  4734   00167C  0E00               	movlw	0
  4735   00167E  6E02               	movwf	(___fladd@b+1)^0,c
  4736   001680  0E00               	movlw	0
  4737   001682  6E03               	movwf	(___fladd@b+2)^0,c
  4738   001684  0E00               	movlw	0
  4739   001686  6E04               	movwf	(___fladd@b+3)^0,c
  4740   001688  500F               	movf	___fladd@bexp^0,w,c
  4741   00168A  A4D8               	btfss	status,2,c
  4742   00168C  EF4A  F00B         	goto	u2301
  4743   001690  EF4C  F00B         	goto	u2300
  4744   001694                     u2301:
  4745   001694  EF4E  F00B         	goto	l2610
  4746   001698                     u2300:
  4747   001698  0E00               	movlw	0
  4748   00169A  6E0D               	movwf	___fladd@signs^0,c
  4749   00169C                     l2610:
  4750   00169C  A00F               	btfss	___fladd@bexp^0,0,c
  4751   00169E  EF53  F00B         	goto	u2311
  4752   0016A2  EF55  F00B         	goto	u2310
  4753   0016A6                     u2311:
  4754   0016A6  EF58  F00B         	goto	l2614
  4755   0016AA                     u2310:
  4756   0016AA  8E03               	bsf	(___fladd@b+2)^0,7,c
  4757   0016AC  EF59  F00B         	goto	l2616
  4758   0016B0                     l2614:
  4759   0016B0  9E03               	bcf	(___fladd@b+2)^0,7,c
  4760   0016B2                     l2616:
  4761   0016B2  90D8               	bcf	status,0,c
  4762   0016B4  300F               	rrcf	___fladd@bexp^0,w,c
  4763   0016B6  6E04               	movwf	(___fladd@b+3)^0,c
  4764   0016B8  AE0D               	btfss	___fladd@signs^0,7,c
  4765   0016BA  EF61  F00B         	goto	u2321
  4766   0016BE  EF63  F00B         	goto	u2320
  4767   0016C2                     u2321:
  4768   0016C2  EF64  F00B         	goto	l2622
  4769   0016C6                     u2320:
  4770   0016C6  8E04               	bsf	(___fladd@b+3)^0,7,c
  4771   0016C8                     l2622:
  4772   0016C8  C001  F001         	movff	___fladd@b,?___fladd
  4773   0016CC  C002  F002         	movff	___fladd@b+1,?___fladd+1
  4774   0016D0  C003  F003         	movff	___fladd@b+2,?___fladd+2
  4775   0016D4  C004  F004         	movff	___fladd@b+3,?___fladd+3
  4776   0016D8                     l664:
  4777   0016D8  0012               	return		;funcret
  4778   0016DA                     __end_of___fladd:
  4779                           	callstack 0
  4780                           
  4781 ;; *************** function ___flneg *****************
  4782 ;; Defined at:
  4783 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flneg.c"
  4784 ;; Parameters:    Size  Location     Type
  4785 ;;  f1              4    0[COMRAM] unsigned char 
  4786 ;; Auto vars:     Size  Location     Type
  4787 ;;		None
  4788 ;; Return value:  Size  Location     Type
  4789 ;;                  4    0[COMRAM] unsigned char 
  4790 ;; Registers used:
  4791 ;;		wreg, status,2, status,0
  4792 ;; Tracked objects:
  4793 ;;		On entry : 0/0
  4794 ;;		On exit  : 0/0
  4795 ;;		Unchanged: 0/0
  4796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4797 ;;      Params:         4       0       0       0       0       0       0       0       0
  4798 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4799 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4800 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4801 ;;Total ram usage:        4 bytes
  4802 ;; Hardware stack levels used: 1
  4803 ;; This function calls:
  4804 ;;		Nothing
  4805 ;; This function is called by:
  4806 ;;		_efgtoa
  4807 ;; This function uses a non-reentrant model
  4808 ;;
  4809                           
  4810                           	psect	text17
  4811   003118                     __ptext17:
  4812                           	callstack 0
  4813   003118                     ___flneg:
  4814                           	callstack 26
  4815   003118  5001               	movf	___flneg@f1^0,w,c
  4816   00311A  1002               	iorwf	(___flneg@f1+1)^0,w,c
  4817   00311C  1003               	iorwf	(___flneg@f1+2)^0,w,c
  4818   00311E  1004               	iorwf	(___flneg@f1+3)^0,w,c
  4819   003120  B4D8               	btfsc	status,2,c
  4820   003122  EF95  F018         	goto	u2841
  4821   003126  EF97  F018         	goto	u2840
  4822   00312A                     u2841:
  4823   00312A  EF9F  F018         	goto	l2956
  4824   00312E                     u2840:
  4825   00312E  0E00               	movlw	0
  4826   003130  1A01               	xorwf	___flneg@f1^0,f,c
  4827   003132  0E00               	movlw	0
  4828   003134  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  4829   003136  0E00               	movlw	0
  4830   003138  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  4831   00313A  0E80               	movlw	128
  4832   00313C  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  4833   00313E                     l2956:
  4834   00313E  C001  F001         	movff	___flneg@f1,?___flneg
  4835   003142  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  4836   003146  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  4837   00314A  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  4838   00314E  0012               	return		;funcret
  4839   003150                     __end_of___flneg:
  4840                           	callstack 0
  4841                           
  4842 ;; *************** function ___flmul *****************
  4843 ;; Defined at:
  4844 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  4845 ;; Parameters:    Size  Location     Type
  4846 ;;  b               4   19[COMRAM] unsigned char 
  4847 ;;  a               4   23[COMRAM] unsigned char 
  4848 ;; Auto vars:     Size  Location     Type
  4849 ;;  prod            4   38[COMRAM] struct .
  4850 ;;  grs             4   32[COMRAM] unsigned long 
  4851 ;;  temp            2   42[COMRAM] struct .
  4852 ;;  bexp            1   37[COMRAM] unsigned char 
  4853 ;;  aexp            1   36[COMRAM] unsigned char 
  4854 ;;  sign            1   31[COMRAM] unsigned char 
  4855 ;; Return value:  Size  Location     Type
  4856 ;;                  4   19[COMRAM] unsigned char 
  4857 ;; Registers used:
  4858 ;;		wreg, status,2, status,0, prodl, prodh
  4859 ;; Tracked objects:
  4860 ;;		On entry : 0/0
  4861 ;;		On exit  : 0/0
  4862 ;;		Unchanged: 0/0
  4863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4864 ;;      Params:         8       0       0       0       0       0       0       0       0
  4865 ;;      Locals:        13       0       0       0       0       0       0       0       0
  4866 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4867 ;;      Totals:        25       0       0       0       0       0       0       0       0
  4868 ;;Total ram usage:       25 bytes
  4869 ;; Hardware stack levels used: 1
  4870 ;; This function calls:
  4871 ;;		Nothing
  4872 ;; This function is called by:
  4873 ;;		_main
  4874 ;;		_efgtoa
  4875 ;; This function uses a non-reentrant model
  4876 ;;
  4877                           
  4878                           	psect	text18
  4879   0016DA                     __ptext18:
  4880                           	callstack 0
  4881   0016DA                     ___flmul:
  4882                           	callstack 26
  4883   0016DA  5017               	movf	(___flmul@b+3)^0,w,c
  4884   0016DC  0B80               	andlw	128
  4885   0016DE  6E20               	movwf	___flmul@sign^0,c
  4886   0016E0  5017               	movf	(___flmul@b+3)^0,w,c
  4887   0016E2  2417               	addwf	(___flmul@b+3)^0,w,c
  4888   0016E4  6E26               	movwf	___flmul@bexp^0,c
  4889   0016E6  AE16               	btfss	(___flmul@b+2)^0,7,c
  4890   0016E8  EF78  F00B         	goto	u2571
  4891   0016EC  EF7A  F00B         	goto	u2570
  4892   0016F0                     u2571:
  4893   0016F0  EF7B  F00B         	goto	l2784
  4894   0016F4                     u2570:
  4895   0016F4  8026               	bsf	___flmul@bexp^0,0,c
  4896   0016F6                     l2784:
  4897   0016F6  5026               	movf	___flmul@bexp^0,w,c
  4898   0016F8  B4D8               	btfsc	status,2,c
  4899   0016FA  EF81  F00B         	goto	u2581
  4900   0016FE  EF83  F00B         	goto	u2580
  4901   001702                     u2581:
  4902   001702  EF96  F00B         	goto	l2792
  4903   001706                     u2580:
  4904   001706  2826               	incf	___flmul@bexp^0,w,c
  4905   001708  A4D8               	btfss	status,2,c
  4906   00170A  EF89  F00B         	goto	u2591
  4907   00170E  EF8B  F00B         	goto	u2590
  4908   001712                     u2591:
  4909   001712  EF93  F00B         	goto	l2790
  4910   001716                     u2590:
  4911   001716  0E00               	movlw	0
  4912   001718  6E14               	movwf	___flmul@b^0,c
  4913   00171A  0E00               	movlw	0
  4914   00171C  6E15               	movwf	(___flmul@b+1)^0,c
  4915   00171E  0E00               	movlw	0
  4916   001720  6E16               	movwf	(___flmul@b+2)^0,c
  4917   001722  0E00               	movlw	0
  4918   001724  6E17               	movwf	(___flmul@b+3)^0,c
  4919   001726                     l2790:
  4920   001726  8E16               	bsf	(___flmul@b+2)^0,7,c
  4921   001728  EF9E  F00B         	goto	l2794
  4922   00172C                     l2792:
  4923   00172C  0E00               	movlw	0
  4924   00172E  6E14               	movwf	___flmul@b^0,c
  4925   001730  0E00               	movlw	0
  4926   001732  6E15               	movwf	(___flmul@b+1)^0,c
  4927   001734  0E00               	movlw	0
  4928   001736  6E16               	movwf	(___flmul@b+2)^0,c
  4929   001738  0E00               	movlw	0
  4930   00173A  6E17               	movwf	(___flmul@b+3)^0,c
  4931   00173C                     l2794:
  4932   00173C  501B               	movf	(___flmul@a+3)^0,w,c
  4933   00173E  0B80               	andlw	128
  4934   001740  1A20               	xorwf	___flmul@sign^0,f,c
  4935   001742  501B               	movf	(___flmul@a+3)^0,w,c
  4936   001744  241B               	addwf	(___flmul@a+3)^0,w,c
  4937   001746  6E25               	movwf	___flmul@aexp^0,c
  4938   001748  AE1A               	btfss	(___flmul@a+2)^0,7,c
  4939   00174A  EFA9  F00B         	goto	u2601
  4940   00174E  EFAB  F00B         	goto	u2600
  4941   001752                     u2601:
  4942   001752  EFAC  F00B         	goto	l2802
  4943   001756                     u2600:
  4944   001756  8025               	bsf	___flmul@aexp^0,0,c
  4945   001758                     l2802:
  4946   001758  5025               	movf	___flmul@aexp^0,w,c
  4947   00175A  B4D8               	btfsc	status,2,c
  4948   00175C  EFB2  F00B         	goto	u2611
  4949   001760  EFB4  F00B         	goto	u2610
  4950   001764                     u2611:
  4951   001764  EFC7  F00B         	goto	l2810
  4952   001768                     u2610:
  4953   001768  2825               	incf	___flmul@aexp^0,w,c
  4954   00176A  A4D8               	btfss	status,2,c
  4955   00176C  EFBA  F00B         	goto	u2621
  4956   001770  EFBC  F00B         	goto	u2620
  4957   001774                     u2621:
  4958   001774  EFC4  F00B         	goto	l2808
  4959   001778                     u2620:
  4960   001778  0E00               	movlw	0
  4961   00177A  6E18               	movwf	___flmul@a^0,c
  4962   00177C  0E00               	movlw	0
  4963   00177E  6E19               	movwf	(___flmul@a+1)^0,c
  4964   001780  0E00               	movlw	0
  4965   001782  6E1A               	movwf	(___flmul@a+2)^0,c
  4966   001784  0E00               	movlw	0
  4967   001786  6E1B               	movwf	(___flmul@a+3)^0,c
  4968   001788                     l2808:
  4969   001788  8E1A               	bsf	(___flmul@a+2)^0,7,c
  4970   00178A  EFCF  F00B         	goto	l741
  4971   00178E                     l2810:
  4972   00178E  0E00               	movlw	0
  4973   001790  6E18               	movwf	___flmul@a^0,c
  4974   001792  0E00               	movlw	0
  4975   001794  6E19               	movwf	(___flmul@a+1)^0,c
  4976   001796  0E00               	movlw	0
  4977   001798  6E1A               	movwf	(___flmul@a+2)^0,c
  4978   00179A  0E00               	movlw	0
  4979   00179C  6E1B               	movwf	(___flmul@a+3)^0,c
  4980   00179E                     l741:
  4981   00179E  5025               	movf	___flmul@aexp^0,w,c
  4982   0017A0  B4D8               	btfsc	status,2,c
  4983   0017A2  EFD5  F00B         	goto	u2631
  4984   0017A6  EFD7  F00B         	goto	u2630
  4985   0017AA                     u2631:
  4986   0017AA  EFDF  F00B         	goto	l2814
  4987   0017AE                     u2630:
  4988   0017AE  5026               	movf	___flmul@bexp^0,w,c
  4989   0017B0  A4D8               	btfss	status,2,c
  4990   0017B2  EFDD  F00B         	goto	u2641
  4991   0017B6  EFDF  F00B         	goto	u2640
  4992   0017BA                     u2641:
  4993   0017BA  EFE9  F00B         	goto	l2818
  4994   0017BE                     u2640:
  4995   0017BE                     l2814:
  4996   0017BE  0E00               	movlw	0
  4997   0017C0  6E14               	movwf	?___flmul^0,c
  4998   0017C2  0E00               	movlw	0
  4999   0017C4  6E15               	movwf	(?___flmul+1)^0,c
  5000   0017C6  0E00               	movlw	0
  5001   0017C8  6E16               	movwf	(?___flmul+2)^0,c
  5002   0017CA  0E00               	movlw	0
  5003   0017CC  6E17               	movwf	(?___flmul+3)^0,c
  5004   0017CE  EF81  F00D         	goto	l745
  5005   0017D2                     l2818:
  5006   0017D2  501A               	movf	(___flmul@a+2)^0,w,c
  5007   0017D4  0214               	mulwf	___flmul@b^0,c
  5008   0017D6  CFF3 F02B          	movff	prodl,___flmul@temp
  5009   0017DA  CFF4 F02C          	movff	prodh,___flmul@temp+1
  5010   0017DE  502B               	movf	___flmul@temp^0,w,c
  5011   0017E0  6E21               	movwf	___flmul@grs^0,c
  5012   0017E2  6A22               	clrf	(___flmul@grs+1)^0,c
  5013   0017E4  6A23               	clrf	(___flmul@grs+2)^0,c
  5014   0017E6  6A24               	clrf	(___flmul@grs+3)^0,c
  5015   0017E8  502C               	movf	(___flmul@temp+1)^0,w,c
  5016   0017EA  6E27               	movwf	___flmul@prod^0,c
  5017   0017EC  6A28               	clrf	(___flmul@prod+1)^0,c
  5018   0017EE  6A29               	clrf	(___flmul@prod+2)^0,c
  5019   0017F0  6A2A               	clrf	(___flmul@prod+3)^0,c
  5020   0017F2  5019               	movf	(___flmul@a+1)^0,w,c
  5021   0017F4  0215               	mulwf	(___flmul@b+1)^0,c
  5022   0017F6  CFF3 F02B          	movff	prodl,___flmul@temp
  5023   0017FA  CFF4 F02C          	movff	prodh,___flmul@temp+1
  5024   0017FE  502B               	movf	___flmul@temp^0,w,c
  5025   001800  2621               	addwf	___flmul@grs^0,f,c
  5026   001802  0E00               	movlw	0
  5027   001804  2222               	addwfc	(___flmul@grs+1)^0,f,c
  5028   001806  2223               	addwfc	(___flmul@grs+2)^0,f,c
  5029   001808  2224               	addwfc	(___flmul@grs+3)^0,f,c
  5030   00180A  502C               	movf	(___flmul@temp+1)^0,w,c
  5031   00180C  2627               	addwf	___flmul@prod^0,f,c
  5032   00180E  0E00               	movlw	0
  5033   001810  2228               	addwfc	(___flmul@prod+1)^0,f,c
  5034   001812  2229               	addwfc	(___flmul@prod+2)^0,f,c
  5035   001814  222A               	addwfc	(___flmul@prod+3)^0,f,c
  5036   001816  5018               	movf	___flmul@a^0,w,c
  5037   001818  0216               	mulwf	(___flmul@b+2)^0,c
  5038   00181A  CFF3 F02B          	movff	prodl,___flmul@temp
  5039   00181E  CFF4 F02C          	movff	prodh,___flmul@temp+1
  5040   001822  502B               	movf	___flmul@temp^0,w,c
  5041   001824  2621               	addwf	___flmul@grs^0,f,c
  5042   001826  0E00               	movlw	0
  5043   001828  2222               	addwfc	(___flmul@grs+1)^0,f,c
  5044   00182A  2223               	addwfc	(___flmul@grs+2)^0,f,c
  5045   00182C  2224               	addwfc	(___flmul@grs+3)^0,f,c
  5046   00182E  502C               	movf	(___flmul@temp+1)^0,w,c
  5047   001830  2627               	addwf	___flmul@prod^0,f,c
  5048   001832  0E00               	movlw	0
  5049   001834  2228               	addwfc	(___flmul@prod+1)^0,f,c
  5050   001836  2229               	addwfc	(___flmul@prod+2)^0,f,c
  5051   001838  222A               	addwfc	(___flmul@prod+3)^0,f,c
  5052   00183A  C023  F024         	movff	___flmul@grs+2,___flmul@grs+3
  5053   00183E  C022  F023         	movff	___flmul@grs+1,___flmul@grs+2
  5054   001842  C021  F022         	movff	___flmul@grs,___flmul@grs+1
  5055   001846  6A21               	clrf	___flmul@grs^0,c
  5056   001848  5018               	movf	___flmul@a^0,w,c
  5057   00184A  0215               	mulwf	(___flmul@b+1)^0,c
  5058   00184C  CFF3 F02B          	movff	prodl,___flmul@temp
  5059   001850  CFF4 F02C          	movff	prodh,___flmul@temp+1
  5060   001854  502B               	movf	___flmul@temp^0,w,c
  5061   001856  2621               	addwf	___flmul@grs^0,f,c
  5062   001858  502C               	movf	(___flmul@temp+1)^0,w,c
  5063   00185A  2222               	addwfc	(___flmul@grs+1)^0,f,c
  5064   00185C  0E00               	movlw	0
  5065   00185E  2223               	addwfc	(___flmul@grs+2)^0,f,c
  5066   001860  0E00               	movlw	0
  5067   001862  2224               	addwfc	(___flmul@grs+3)^0,f,c
  5068   001864  5019               	movf	(___flmul@a+1)^0,w,c
  5069   001866  0214               	mulwf	___flmul@b^0,c
  5070   001868  CFF3 F02B          	movff	prodl,___flmul@temp
  5071   00186C  CFF4 F02C          	movff	prodh,___flmul@temp+1
  5072   001870  502B               	movf	___flmul@temp^0,w,c
  5073   001872  2621               	addwf	___flmul@grs^0,f,c
  5074   001874  502C               	movf	(___flmul@temp+1)^0,w,c
  5075   001876  2222               	addwfc	(___flmul@grs+1)^0,f,c
  5076   001878  0E00               	movlw	0
  5077   00187A  2223               	addwfc	(___flmul@grs+2)^0,f,c
  5078   00187C  0E00               	movlw	0
  5079   00187E  2224               	addwfc	(___flmul@grs+3)^0,f,c
  5080   001880  C023  F024         	movff	___flmul@grs+2,___flmul@grs+3
  5081   001884  C022  F023         	movff	___flmul@grs+1,___flmul@grs+2
  5082   001888  C021  F022         	movff	___flmul@grs,___flmul@grs+1
  5083   00188C  6A21               	clrf	___flmul@grs^0,c
  5084   00188E  5018               	movf	___flmul@a^0,w,c
  5085   001890  0214               	mulwf	___flmul@b^0,c
  5086   001892  CFF3 F02B          	movff	prodl,___flmul@temp
  5087   001896  CFF4 F02C          	movff	prodh,___flmul@temp+1
  5088   00189A  502B               	movf	___flmul@temp^0,w,c
  5089   00189C  2621               	addwf	___flmul@grs^0,f,c
  5090   00189E  502C               	movf	(___flmul@temp+1)^0,w,c
  5091   0018A0  2222               	addwfc	(___flmul@grs+1)^0,f,c
  5092   0018A2  0E00               	movlw	0
  5093   0018A4  2223               	addwfc	(___flmul@grs+2)^0,f,c
  5094   0018A6  0E00               	movlw	0
  5095   0018A8  2224               	addwfc	(___flmul@grs+3)^0,f,c
  5096   0018AA  501A               	movf	(___flmul@a+2)^0,w,c
  5097   0018AC  0215               	mulwf	(___flmul@b+1)^0,c
  5098   0018AE  CFF3 F02B          	movff	prodl,___flmul@temp
  5099   0018B2  CFF4 F02C          	movff	prodh,___flmul@temp+1
  5100   0018B6  502B               	movf	___flmul@temp^0,w,c
  5101   0018B8  2627               	addwf	___flmul@prod^0,f,c
  5102   0018BA  502C               	movf	(___flmul@temp+1)^0,w,c
  5103   0018BC  2228               	addwfc	(___flmul@prod+1)^0,f,c
  5104   0018BE  0E00               	movlw	0
  5105   0018C0  2229               	addwfc	(___flmul@prod+2)^0,f,c
  5106   0018C2  0E00               	movlw	0
  5107   0018C4  222A               	addwfc	(___flmul@prod+3)^0,f,c
  5108   0018C6  5019               	movf	(___flmul@a+1)^0,w,c
  5109   0018C8  0216               	mulwf	(___flmul@b+2)^0,c
  5110   0018CA  CFF3 F02B          	movff	prodl,___flmul@temp
  5111   0018CE  CFF4 F02C          	movff	prodh,___flmul@temp+1
  5112   0018D2  502B               	movf	___flmul@temp^0,w,c
  5113   0018D4  2627               	addwf	___flmul@prod^0,f,c
  5114   0018D6  502C               	movf	(___flmul@temp+1)^0,w,c
  5115   0018D8  2228               	addwfc	(___flmul@prod+1)^0,f,c
  5116   0018DA  0E00               	movlw	0
  5117   0018DC  2229               	addwfc	(___flmul@prod+2)^0,f,c
  5118   0018DE  0E00               	movlw	0
  5119   0018E0  222A               	addwfc	(___flmul@prod+3)^0,f,c
  5120   0018E2  501A               	movf	(___flmul@a+2)^0,w,c
  5121   0018E4  0216               	mulwf	(___flmul@b+2)^0,c
  5122   0018E6  CFF3 F02B          	movff	prodl,___flmul@temp
  5123   0018EA  CFF4 F02C          	movff	prodh,___flmul@temp+1
  5124   0018EE  502B               	movf	___flmul@temp^0,w,c
  5125   0018F0  6E1C               	movwf	??___flmul^0,c
  5126   0018F2  502C               	movf	(___flmul@temp+1)^0,w,c
  5127   0018F4  6E1D               	movwf	(??___flmul+1)^0,c
  5128   0018F6  6A1E               	clrf	(??___flmul+2)^0,c
  5129   0018F8  6A1F               	clrf	(??___flmul+3)^0,c
  5130   0018FA  C01E  F01F         	movff	??___flmul+2,??___flmul+3
  5131   0018FE  C01D  F01E         	movff	??___flmul+1,??___flmul+2
  5132   001902  C01C  F01D         	movff	??___flmul,??___flmul+1
  5133   001906  6A1C               	clrf	??___flmul^0,c
  5134   001908  501C               	movf	??___flmul^0,w,c
  5135   00190A  2627               	addwf	___flmul@prod^0,f,c
  5136   00190C  501D               	movf	(??___flmul+1)^0,w,c
  5137   00190E  2228               	addwfc	(___flmul@prod+1)^0,f,c
  5138   001910  501E               	movf	(??___flmul+2)^0,w,c
  5139   001912  2229               	addwfc	(___flmul@prod+2)^0,f,c
  5140   001914  501F               	movf	(??___flmul+3)^0,w,c
  5141   001916  222A               	addwfc	(___flmul@prod+3)^0,f,c
  5142   001918  C021  F01C         	movff	___flmul@grs,??___flmul
  5143   00191C  C022  F01D         	movff	___flmul@grs+1,??___flmul+1
  5144   001920  C023  F01E         	movff	___flmul@grs+2,??___flmul+2
  5145   001924  C024  F01F         	movff	___flmul@grs+3,??___flmul+3
  5146   001928  0E19               	movlw	25
  5147   00192A  EF9C  F00C         	goto	u2650
  5148   00192E                     u2655:
  5149   00192E  90D8               	bcf	status,0,c
  5150   001930  321F               	rrcf	(??___flmul+3)^0,f,c
  5151   001932  321E               	rrcf	(??___flmul+2)^0,f,c
  5152   001934  321D               	rrcf	(??___flmul+1)^0,f,c
  5153   001936  321C               	rrcf	??___flmul^0,f,c
  5154   001938                     u2650:
  5155   001938  2EE8               	decfsz	wreg,f,c
  5156   00193A  EF97  F00C         	goto	u2655
  5157   00193E  501C               	movf	??___flmul^0,w,c
  5158   001940  2627               	addwf	___flmul@prod^0,f,c
  5159   001942  501D               	movf	(??___flmul+1)^0,w,c
  5160   001944  2228               	addwfc	(___flmul@prod+1)^0,f,c
  5161   001946  501E               	movf	(??___flmul+2)^0,w,c
  5162   001948  2229               	addwfc	(___flmul@prod+2)^0,f,c
  5163   00194A  501F               	movf	(??___flmul+3)^0,w,c
  5164   00194C  222A               	addwfc	(___flmul@prod+3)^0,f,c
  5165   00194E  C023  F024         	movff	___flmul@grs+2,___flmul@grs+3
  5166   001952  C022  F023         	movff	___flmul@grs+1,___flmul@grs+2
  5167   001956  C021  F022         	movff	___flmul@grs,___flmul@grs+1
  5168   00195A  6A21               	clrf	___flmul@grs^0,c
  5169   00195C  5025               	movf	___flmul@aexp^0,w,c
  5170   00195E  C026  F01C         	movff	___flmul@bexp,??___flmul
  5171   001962  6A1D               	clrf	(??___flmul+1)^0,c
  5172   001964  261C               	addwf	??___flmul^0,f,c
  5173   001966  0E00               	movlw	0
  5174   001968  221D               	addwfc	(??___flmul+1)^0,f,c
  5175   00196A  0E82               	movlw	130
  5176   00196C  241C               	addwf	??___flmul^0,w,c
  5177   00196E  6E2B               	movwf	___flmul@temp^0,c
  5178   001970  0EFF               	movlw	255
  5179   001972  201D               	addwfc	(??___flmul+1)^0,w,c
  5180   001974  6E2C               	movwf	(___flmul@temp+1)^0,c
  5181   001976  EFD2  F00C         	goto	l2866
  5182   00197A                     l2860:
  5183   00197A  90D8               	bcf	status,0,c
  5184   00197C  3627               	rlcf	___flmul@prod^0,f,c
  5185   00197E  3628               	rlcf	(___flmul@prod+1)^0,f,c
  5186   001980  3629               	rlcf	(___flmul@prod+2)^0,f,c
  5187   001982  362A               	rlcf	(___flmul@prod+3)^0,f,c
  5188   001984  AE24               	btfss	(___flmul@grs+3)^0,7,c
  5189   001986  EFC7  F00C         	goto	u2661
  5190   00198A  EFC9  F00C         	goto	u2660
  5191   00198E                     u2661:
  5192   00198E  EFCA  F00C         	goto	l748
  5193   001992                     u2660:
  5194   001992  8027               	bsf	___flmul@prod^0,0,c
  5195   001994                     l748:
  5196   001994  90D8               	bcf	status,0,c
  5197   001996  3621               	rlcf	___flmul@grs^0,f,c
  5198   001998  3622               	rlcf	(___flmul@grs+1)^0,f,c
  5199   00199A  3623               	rlcf	(___flmul@grs+2)^0,f,c
  5200   00199C  3624               	rlcf	(___flmul@grs+3)^0,f,c
  5201   00199E  062B               	decf	___flmul@temp^0,f,c
  5202   0019A0  A0D8               	btfss	status,0,c
  5203   0019A2  062C               	decf	(___flmul@temp+1)^0,f,c
  5204   0019A4                     l2866:
  5205   0019A4  AE29               	btfss	(___flmul@prod+2)^0,7,c
  5206   0019A6  EFD7  F00C         	goto	u2671
  5207   0019AA  EFD9  F00C         	goto	u2670
  5208   0019AE                     u2671:
  5209   0019AE  EFBD  F00C         	goto	l2860
  5210   0019B2                     u2670:
  5211   0019B2  0E00               	movlw	0
  5212   0019B4  6E25               	movwf	___flmul@aexp^0,c
  5213   0019B6  AE24               	btfss	(___flmul@grs+3)^0,7,c
  5214   0019B8  EFE0  F00C         	goto	u2681
  5215   0019BC  EFE2  F00C         	goto	u2680
  5216   0019C0                     u2681:
  5217   0019C0  EF06  F00D         	goto	l750
  5218   0019C4                     u2680:
  5219   0019C4  0EFF               	movlw	255
  5220   0019C6  1421               	andwf	___flmul@grs^0,w,c
  5221   0019C8  6E1C               	movwf	??___flmul^0,c
  5222   0019CA  0EFF               	movlw	255
  5223   0019CC  1422               	andwf	(___flmul@grs+1)^0,w,c
  5224   0019CE  6E1D               	movwf	(??___flmul+1)^0,c
  5225   0019D0  0EFF               	movlw	255
  5226   0019D2  1423               	andwf	(___flmul@grs+2)^0,w,c
  5227   0019D4  6E1E               	movwf	(??___flmul+2)^0,c
  5228   0019D6  0E7F               	movlw	127
  5229   0019D8  1424               	andwf	(___flmul@grs+3)^0,w,c
  5230   0019DA  6E1F               	movwf	(??___flmul+3)^0,c
  5231   0019DC  501C               	movf	??___flmul^0,w,c
  5232   0019DE  101D               	iorwf	(??___flmul+1)^0,w,c
  5233   0019E0  101E               	iorwf	(??___flmul+2)^0,w,c
  5234   0019E2  101F               	iorwf	(??___flmul+3)^0,w,c
  5235   0019E4  B4D8               	btfsc	status,2,c
  5236   0019E6  EFF7  F00C         	goto	u2691
  5237   0019EA  EFF9  F00C         	goto	u2690
  5238   0019EE                     u2691:
  5239   0019EE  EFFD  F00C         	goto	l751
  5240   0019F2                     u2690:
  5241   0019F2                     l2874:
  5242   0019F2  0E01               	movlw	1
  5243   0019F4  6E25               	movwf	___flmul@aexp^0,c
  5244   0019F6  EF06  F00D         	goto	l750
  5245   0019FA                     l751:
  5246   0019FA  A027               	btfss	___flmul@prod^0,0,c
  5247   0019FC  EF02  F00D         	goto	u2701
  5248   001A00  EF04  F00D         	goto	u2700
  5249   001A04                     u2701:
  5250   001A04  EF06  F00D         	goto	l750
  5251   001A08                     u2700:
  5252   001A08  EFF9  F00C         	goto	l2874
  5253   001A0C                     l750:
  5254   001A0C  5025               	movf	___flmul@aexp^0,w,c
  5255   001A0E  B4D8               	btfsc	status,2,c
  5256   001A10  EF0C  F00D         	goto	u2711
  5257   001A14  EF0E  F00D         	goto	u2710
  5258   001A18                     u2711:
  5259   001A18  EF32  F00D         	goto	l2886
  5260   001A1C                     u2710:
  5261   001A1C  0E01               	movlw	1
  5262   001A1E  2627               	addwf	___flmul@prod^0,f,c
  5263   001A20  0E00               	movlw	0
  5264   001A22  2228               	addwfc	(___flmul@prod+1)^0,f,c
  5265   001A24  2229               	addwfc	(___flmul@prod+2)^0,f,c
  5266   001A26  222A               	addwfc	(___flmul@prod+3)^0,f,c
  5267   001A28  A02A               	btfss	(___flmul@prod+3)^0,0,c
  5268   001A2A  EF19  F00D         	goto	u2721
  5269   001A2E  EF1B  F00D         	goto	u2720
  5270   001A32                     u2721:
  5271   001A32  EF32  F00D         	goto	l2886
  5272   001A36                     u2720:
  5273   001A36  C027  F01C         	movff	___flmul@prod,??___flmul
  5274   001A3A  C028  F01D         	movff	___flmul@prod+1,??___flmul+1
  5275   001A3E  C029  F01E         	movff	___flmul@prod+2,??___flmul+2
  5276   001A42  C02A  F01F         	movff	___flmul@prod+3,??___flmul+3
  5277   001A46  341F               	rlcf	(??___flmul+3)^0,w,c
  5278   001A48  321F               	rrcf	(??___flmul+3)^0,f,c
  5279   001A4A  321E               	rrcf	(??___flmul+2)^0,f,c
  5280   001A4C  321D               	rrcf	(??___flmul+1)^0,f,c
  5281   001A4E  321C               	rrcf	??___flmul^0,f,c
  5282   001A50  C01C  F027         	movff	??___flmul,___flmul@prod
  5283   001A54  C01D  F028         	movff	??___flmul+1,___flmul@prod+1
  5284   001A58  C01E  F029         	movff	??___flmul+2,___flmul@prod+2
  5285   001A5C  C01F  F02A         	movff	??___flmul+3,___flmul@prod+3
  5286   001A60  4A2B               	infsnz	___flmul@temp^0,f,c
  5287   001A62  2A2C               	incf	(___flmul@temp+1)^0,f,c
  5288   001A64                     l2886:
  5289   001A64  BE2C               	btfsc	(___flmul@temp+1)^0,7,c
  5290   001A66  EF3D  F00D         	goto	u2731
  5291   001A6A  502C               	movf	(___flmul@temp+1)^0,w,c
  5292   001A6C  E108               	bnz	u2730
  5293   001A6E  282B               	incf	___flmul@temp^0,w,c
  5294   001A70  A0D8               	btfss	status,0,c
  5295   001A72  EF3D  F00D         	goto	u2731
  5296   001A76  EF3F  F00D         	goto	u2730
  5297   001A7A                     u2731:
  5298   001A7A  EF49  F00D         	goto	l2890
  5299   001A7E                     u2730:
  5300   001A7E  0E00               	movlw	0
  5301   001A80  6E27               	movwf	___flmul@prod^0,c
  5302   001A82  0E00               	movlw	0
  5303   001A84  6E28               	movwf	(___flmul@prod+1)^0,c
  5304   001A86  0E80               	movlw	128
  5305   001A88  6E29               	movwf	(___flmul@prod+2)^0,c
  5306   001A8A  0E7F               	movlw	127
  5307   001A8C  6E2A               	movwf	(___flmul@prod+3)^0,c
  5308   001A8E  EF77  F00D         	goto	l2902
  5309   001A92                     l2890:
  5310   001A92  BE2C               	btfsc	(___flmul@temp+1)^0,7,c
  5311   001A94  EF56  F00D         	goto	u2740
  5312   001A98  502C               	movf	(___flmul@temp+1)^0,w,c
  5313   001A9A  E106               	bnz	u2741
  5314   001A9C  042B               	decf	___flmul@temp^0,w,c
  5315   001A9E  B0D8               	btfsc	status,0,c
  5316   001AA0  EF54  F00D         	goto	u2741
  5317   001AA4  EF56  F00D         	goto	u2740
  5318   001AA8                     u2741:
  5319   001AA8  EF62  F00D         	goto	l758
  5320   001AAC                     u2740:
  5321   001AAC  0E00               	movlw	0
  5322   001AAE  6E27               	movwf	___flmul@prod^0,c
  5323   001AB0  0E00               	movlw	0
  5324   001AB2  6E28               	movwf	(___flmul@prod+1)^0,c
  5325   001AB4  0E00               	movlw	0
  5326   001AB6  6E29               	movwf	(___flmul@prod+2)^0,c
  5327   001AB8  0E00               	movlw	0
  5328   001ABA  6E2A               	movwf	(___flmul@prod+3)^0,c
  5329   001ABC  0E00               	movlw	0
  5330   001ABE  6E20               	movwf	___flmul@sign^0,c
  5331   001AC0  EF77  F00D         	goto	l2902
  5332   001AC4                     l758:
  5333   001AC4  C02B  F026         	movff	___flmul@temp,___flmul@bexp
  5334   001AC8  0EFF               	movlw	255
  5335   001ACA  1627               	andwf	___flmul@prod^0,f,c
  5336   001ACC  0EFF               	movlw	255
  5337   001ACE  1628               	andwf	(___flmul@prod+1)^0,f,c
  5338   001AD0  0E7F               	movlw	127
  5339   001AD2  1629               	andwf	(___flmul@prod+2)^0,f,c
  5340   001AD4  0E00               	movlw	0
  5341   001AD6  162A               	andwf	(___flmul@prod+3)^0,f,c
  5342   001AD8  A026               	btfss	___flmul@bexp^0,0,c
  5343   001ADA  EF71  F00D         	goto	u2751
  5344   001ADE  EF73  F00D         	goto	u2750
  5345   001AE2                     u2751:
  5346   001AE2  EF74  F00D         	goto	l2900
  5347   001AE6                     u2750:
  5348   001AE6  8E29               	bsf	(___flmul@prod+2)^0,7,c
  5349   001AE8                     l2900:
  5350   001AE8  90D8               	bcf	status,0,c
  5351   001AEA  3026               	rrcf	___flmul@bexp^0,w,c
  5352   001AEC  6E2A               	movwf	(___flmul@prod+3)^0,c
  5353   001AEE                     l2902:
  5354   001AEE  5020               	movf	___flmul@sign^0,w,c
  5355   001AF0  122A               	iorwf	(___flmul@prod+3)^0,f,c
  5356   001AF2  C027  F014         	movff	___flmul@prod,?___flmul
  5357   001AF6  C028  F015         	movff	___flmul@prod+1,?___flmul+1
  5358   001AFA  C029  F016         	movff	___flmul@prod+2,?___flmul+2
  5359   001AFE  C02A  F017         	movff	___flmul@prod+3,?___flmul+3
  5360   001B02                     l745:
  5361   001B02  0012               	return		;funcret
  5362   001B04                     __end_of___flmul:
  5363                           	callstack 0
  5364                           
  5365 ;; *************** function ___flge *****************
  5366 ;; Defined at:
  5367 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  5368 ;; Parameters:    Size  Location     Type
  5369 ;;  ff1             4   44[COMRAM] unsigned char 
  5370 ;;  ff2             4   48[COMRAM] unsigned char 
  5371 ;; Auto vars:     Size  Location     Type
  5372 ;;		None
  5373 ;; Return value:  Size  Location     Type
  5374 ;;		None               void
  5375 ;; Registers used:
  5376 ;;		wreg, status,2, status,0
  5377 ;; Tracked objects:
  5378 ;;		On entry : 0/0
  5379 ;;		On exit  : 0/0
  5380 ;;		Unchanged: 0/0
  5381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5382 ;;      Params:         8       0       0       0       0       0       0       0       0
  5383 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5384 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5385 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5386 ;;Total ram usage:       12 bytes
  5387 ;; Hardware stack levels used: 1
  5388 ;; This function calls:
  5389 ;;		Nothing
  5390 ;; This function is called by:
  5391 ;;		_main
  5392 ;;		_efgtoa
  5393 ;; This function uses a non-reentrant model
  5394 ;;
  5395                           
  5396                           	psect	text19
  5397   002948                     __ptext19:
  5398                           	callstack 0
  5399   002948                     ___flge:
  5400                           	callstack 26
  5401   002948  0E00               	movlw	0
  5402   00294A  142D               	andwf	___flge@ff1^0,w,c
  5403   00294C  6E35               	movwf	??___flge^0,c
  5404   00294E  0E00               	movlw	0
  5405   002950  142E               	andwf	(___flge@ff1+1)^0,w,c
  5406   002952  6E36               	movwf	(??___flge+1)^0,c
  5407   002954  0E80               	movlw	128
  5408   002956  142F               	andwf	(___flge@ff1+2)^0,w,c
  5409   002958  6E37               	movwf	(??___flge+2)^0,c
  5410   00295A  0E7F               	movlw	127
  5411   00295C  1430               	andwf	(___flge@ff1+3)^0,w,c
  5412   00295E  6E38               	movwf	(??___flge+3)^0,c
  5413   002960  5035               	movf	??___flge^0,w,c
  5414   002962  1036               	iorwf	(??___flge+1)^0,w,c
  5415   002964  1037               	iorwf	(??___flge+2)^0,w,c
  5416   002966  1038               	iorwf	(??___flge+3)^0,w,c
  5417   002968  A4D8               	btfss	status,2,c
  5418   00296A  EFB9  F014         	goto	u2791
  5419   00296E  EFBB  F014         	goto	u2790
  5420   002972                     u2791:
  5421   002972  EFC3  F014         	goto	l2934
  5422   002976                     u2790:
  5423   002976  0E00               	movlw	0
  5424   002978  6E2D               	movwf	___flge@ff1^0,c
  5425   00297A  0E00               	movlw	0
  5426   00297C  6E2E               	movwf	(___flge@ff1+1)^0,c
  5427   00297E  0E00               	movlw	0
  5428   002980  6E2F               	movwf	(___flge@ff1+2)^0,c
  5429   002982  0E00               	movlw	0
  5430   002984  6E30               	movwf	(___flge@ff1+3)^0,c
  5431   002986                     l2934:
  5432   002986  0E00               	movlw	0
  5433   002988  1431               	andwf	___flge@ff2^0,w,c
  5434   00298A  6E35               	movwf	??___flge^0,c
  5435   00298C  0E00               	movlw	0
  5436   00298E  1432               	andwf	(___flge@ff2+1)^0,w,c
  5437   002990  6E36               	movwf	(??___flge+1)^0,c
  5438   002992  0E80               	movlw	128
  5439   002994  1433               	andwf	(___flge@ff2+2)^0,w,c
  5440   002996  6E37               	movwf	(??___flge+2)^0,c
  5441   002998  0E7F               	movlw	127
  5442   00299A  1434               	andwf	(___flge@ff2+3)^0,w,c
  5443   00299C  6E38               	movwf	(??___flge+3)^0,c
  5444   00299E  5035               	movf	??___flge^0,w,c
  5445   0029A0  1036               	iorwf	(??___flge+1)^0,w,c
  5446   0029A2  1037               	iorwf	(??___flge+2)^0,w,c
  5447   0029A4  1038               	iorwf	(??___flge+3)^0,w,c
  5448   0029A6  A4D8               	btfss	status,2,c
  5449   0029A8  EFD8  F014         	goto	u2801
  5450   0029AC  EFDA  F014         	goto	u2800
  5451   0029B0                     u2801:
  5452   0029B0  EFE2  F014         	goto	l2938
  5453   0029B4                     u2800:
  5454   0029B4  0E00               	movlw	0
  5455   0029B6  6E31               	movwf	___flge@ff2^0,c
  5456   0029B8  0E00               	movlw	0
  5457   0029BA  6E32               	movwf	(___flge@ff2+1)^0,c
  5458   0029BC  0E00               	movlw	0
  5459   0029BE  6E33               	movwf	(___flge@ff2+2)^0,c
  5460   0029C0  0E00               	movlw	0
  5461   0029C2  6E34               	movwf	(___flge@ff2+3)^0,c
  5462   0029C4                     l2938:
  5463   0029C4  AE30               	btfss	(___flge@ff1+3)^0,7,c
  5464   0029C6  EFE7  F014         	goto	u2811
  5465   0029CA  EFE9  F014         	goto	u2810
  5466   0029CE                     u2811:
  5467   0029CE  EFF2  F014         	goto	l2942
  5468   0029D2                     u2810:
  5469   0029D2  6C2D               	negf	___flge@ff1^0,c
  5470   0029D4  1E2E               	comf	(___flge@ff1+1)^0,f,c
  5471   0029D6  B0D8               	btfsc	status,0,c
  5472   0029D8  2A2E               	incf	(___flge@ff1+1)^0,f,c
  5473   0029DA  1E2F               	comf	(___flge@ff1+2)^0,f,c
  5474   0029DC  B0D8               	btfsc	status,0,c
  5475   0029DE  2A2F               	incf	(___flge@ff1+2)^0,f,c
  5476   0029E0  0E80               	movlw	128
  5477   0029E2  5630               	subfwb	(___flge@ff1+3)^0,f,c
  5478   0029E4                     l2942:
  5479   0029E4  AE34               	btfss	(___flge@ff2+3)^0,7,c
  5480   0029E6  EFF7  F014         	goto	u2821
  5481   0029EA  EFF9  F014         	goto	u2820
  5482   0029EE                     u2821:
  5483   0029EE  EF02  F015         	goto	l392
  5484   0029F2                     u2820:
  5485   0029F2  6C31               	negf	___flge@ff2^0,c
  5486   0029F4  1E32               	comf	(___flge@ff2+1)^0,f,c
  5487   0029F6  B0D8               	btfsc	status,0,c
  5488   0029F8  2A32               	incf	(___flge@ff2+1)^0,f,c
  5489   0029FA  1E33               	comf	(___flge@ff2+2)^0,f,c
  5490   0029FC  B0D8               	btfsc	status,0,c
  5491   0029FE  2A33               	incf	(___flge@ff2+2)^0,f,c
  5492   002A00  0E80               	movlw	128
  5493   002A02  5634               	subfwb	(___flge@ff2+3)^0,f,c
  5494   002A04                     l392:
  5495   002A04  0E00               	movlw	0
  5496   002A06  1A2D               	xorwf	___flge@ff1^0,f,c
  5497   002A08  0E00               	movlw	0
  5498   002A0A  1A2E               	xorwf	(___flge@ff1+1)^0,f,c
  5499   002A0C  0E00               	movlw	0
  5500   002A0E  1A2F               	xorwf	(___flge@ff1+2)^0,f,c
  5501   002A10  0E80               	movlw	128
  5502   002A12  1A30               	xorwf	(___flge@ff1+3)^0,f,c
  5503   002A14  0E00               	movlw	0
  5504   002A16  1A31               	xorwf	___flge@ff2^0,f,c
  5505   002A18  0E00               	movlw	0
  5506   002A1A  1A32               	xorwf	(___flge@ff2+1)^0,f,c
  5507   002A1C  0E00               	movlw	0
  5508   002A1E  1A33               	xorwf	(___flge@ff2+2)^0,f,c
  5509   002A20  0E80               	movlw	128
  5510   002A22  1A34               	xorwf	(___flge@ff2+3)^0,f,c
  5511   002A24  5031               	movf	___flge@ff2^0,w,c
  5512   002A26  5C2D               	subwf	___flge@ff1^0,w,c
  5513   002A28  5032               	movf	(___flge@ff2+1)^0,w,c
  5514   002A2A  582E               	subwfb	(___flge@ff1+1)^0,w,c
  5515   002A2C  5033               	movf	(___flge@ff2+2)^0,w,c
  5516   002A2E  582F               	subwfb	(___flge@ff1+2)^0,w,c
  5517   002A30  5034               	movf	(___flge@ff2+3)^0,w,c
  5518   002A32  5830               	subwfb	(___flge@ff1+3)^0,w,c
  5519   002A34  B0D8               	btfsc	status,0,c
  5520   002A36  EF1F  F015         	goto	u2831
  5521   002A3A  EF21  F015         	goto	u2830
  5522   002A3E                     u2831:
  5523   002A3E  EF24  F015         	goto	l2948
  5524   002A42                     u2830:
  5525   002A42  90D8               	bcf	status,0,c
  5526   002A44  EF25  F015         	goto	l397
  5527   002A48                     l2948:
  5528   002A48  80D8               	bsf	status,0,c
  5529   002A4A                     l397:
  5530   002A4A  0012               	return		;funcret
  5531   002A4C                     __end_of___flge:
  5532                           	callstack 0
  5533                           
  5534 ;; *************** function ___fleq *****************
  5535 ;; Defined at:
  5536 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
  5537 ;; Parameters:    Size  Location     Type
  5538 ;;  ff1             4    0[COMRAM] unsigned char 
  5539 ;;  ff2             4    4[COMRAM] unsigned char 
  5540 ;; Auto vars:     Size  Location     Type
  5541 ;;		None
  5542 ;; Return value:  Size  Location     Type
  5543 ;;		None               void
  5544 ;; Registers used:
  5545 ;;		wreg, status,2, status,0
  5546 ;; Tracked objects:
  5547 ;;		On entry : 0/0
  5548 ;;		On exit  : 0/0
  5549 ;;		Unchanged: 0/0
  5550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5551 ;;      Params:         8       0       0       0       0       0       0       0       0
  5552 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5553 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5554 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5555 ;;Total ram usage:       12 bytes
  5556 ;; Hardware stack levels used: 1
  5557 ;; This function calls:
  5558 ;;		Nothing
  5559 ;; This function is called by:
  5560 ;;		_efgtoa
  5561 ;; This function uses a non-reentrant model
  5562 ;;
  5563                           
  5564                           	psect	text20
  5565   002C14                     __ptext20:
  5566                           	callstack 0
  5567   002C14                     ___fleq:
  5568                           	callstack 26
  5569   002C14  0E00               	movlw	0
  5570   002C16  1401               	andwf	___fleq@ff1^0,w,c
  5571   002C18  6E09               	movwf	??___fleq^0,c
  5572   002C1A  0E00               	movlw	0
  5573   002C1C  1402               	andwf	(___fleq@ff1+1)^0,w,c
  5574   002C1E  6E0A               	movwf	(??___fleq+1)^0,c
  5575   002C20  0E80               	movlw	128
  5576   002C22  1403               	andwf	(___fleq@ff1+2)^0,w,c
  5577   002C24  6E0B               	movwf	(??___fleq+2)^0,c
  5578   002C26  0E7F               	movlw	127
  5579   002C28  1404               	andwf	(___fleq@ff1+3)^0,w,c
  5580   002C2A  6E0C               	movwf	(??___fleq+3)^0,c
  5581   002C2C  5009               	movf	??___fleq^0,w,c
  5582   002C2E  100A               	iorwf	(??___fleq+1)^0,w,c
  5583   002C30  100B               	iorwf	(??___fleq+2)^0,w,c
  5584   002C32  100C               	iorwf	(??___fleq+3)^0,w,c
  5585   002C34  A4D8               	btfss	status,2,c
  5586   002C36  EF1F  F016         	goto	u2761
  5587   002C3A  EF21  F016         	goto	u2760
  5588   002C3E                     u2761:
  5589   002C3E  EF29  F016         	goto	l2918
  5590   002C42                     u2760:
  5591   002C42  0E00               	movlw	0
  5592   002C44  6E01               	movwf	___fleq@ff1^0,c
  5593   002C46  0E00               	movlw	0
  5594   002C48  6E02               	movwf	(___fleq@ff1+1)^0,c
  5595   002C4A  0E00               	movlw	0
  5596   002C4C  6E03               	movwf	(___fleq@ff1+2)^0,c
  5597   002C4E  0E00               	movlw	0
  5598   002C50  6E04               	movwf	(___fleq@ff1+3)^0,c
  5599   002C52                     l2918:
  5600   002C52  0E00               	movlw	0
  5601   002C54  1405               	andwf	___fleq@ff2^0,w,c
  5602   002C56  6E09               	movwf	??___fleq^0,c
  5603   002C58  0E00               	movlw	0
  5604   002C5A  1406               	andwf	(___fleq@ff2+1)^0,w,c
  5605   002C5C  6E0A               	movwf	(??___fleq+1)^0,c
  5606   002C5E  0E80               	movlw	128
  5607   002C60  1407               	andwf	(___fleq@ff2+2)^0,w,c
  5608   002C62  6E0B               	movwf	(??___fleq+2)^0,c
  5609   002C64  0E7F               	movlw	127
  5610   002C66  1408               	andwf	(___fleq@ff2+3)^0,w,c
  5611   002C68  6E0C               	movwf	(??___fleq+3)^0,c
  5612   002C6A  5009               	movf	??___fleq^0,w,c
  5613   002C6C  100A               	iorwf	(??___fleq+1)^0,w,c
  5614   002C6E  100B               	iorwf	(??___fleq+2)^0,w,c
  5615   002C70  100C               	iorwf	(??___fleq+3)^0,w,c
  5616   002C72  A4D8               	btfss	status,2,c
  5617   002C74  EF3E  F016         	goto	u2771
  5618   002C78  EF40  F016         	goto	u2770
  5619   002C7C                     u2771:
  5620   002C7C  EF48  F016         	goto	l2922
  5621   002C80                     u2770:
  5622   002C80  0E00               	movlw	0
  5623   002C82  6E05               	movwf	___fleq@ff2^0,c
  5624   002C84  0E00               	movlw	0
  5625   002C86  6E06               	movwf	(___fleq@ff2+1)^0,c
  5626   002C88  0E00               	movlw	0
  5627   002C8A  6E07               	movwf	(___fleq@ff2+2)^0,c
  5628   002C8C  0E00               	movlw	0
  5629   002C8E  6E08               	movwf	(___fleq@ff2+3)^0,c
  5630   002C90                     l2922:
  5631   002C90  5005               	movf	___fleq@ff2^0,w,c
  5632   002C92  1801               	xorwf	___fleq@ff1^0,w,c
  5633   002C94  E10F               	bnz	u2780
  5634   002C96  5006               	movf	(___fleq@ff2+1)^0,w,c
  5635   002C98  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  5636   002C9A  E10C               	bnz	u2780
  5637   002C9C  5007               	movf	(___fleq@ff2+2)^0,w,c
  5638   002C9E  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  5639   002CA0  E109               	bnz	u2780
  5640   002CA2  5008               	movf	(___fleq@ff2+3)^0,w,c
  5641   002CA4  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  5642   002CA6  B4D8               	btfsc	status,2,c
  5643   002CA8  EF58  F016         	goto	u2781
  5644   002CAC  EF5A  F016         	goto	u2780
  5645   002CB0                     u2781:
  5646   002CB0  EF5D  F016         	goto	l2926
  5647   002CB4                     u2780:
  5648   002CB4  90D8               	bcf	status,0,c
  5649   002CB6  EF5E  F016         	goto	l386
  5650   002CBA                     l2926:
  5651   002CBA  80D8               	bsf	status,0,c
  5652   002CBC                     l386:
  5653   002CBC  0012               	return		;funcret
  5654   002CBE                     __end_of___fleq:
  5655                           	callstack 0
  5656                           
  5657 ;; *************** function ___fldiv *****************
  5658 ;; Defined at:
  5659 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  5660 ;; Parameters:    Size  Location     Type
  5661 ;;  b               4    0[COMRAM] unsigned char 
  5662 ;;  a               4    4[COMRAM] unsigned char 
  5663 ;; Auto vars:     Size  Location     Type
  5664 ;;  grs             4   19[COMRAM] unsigned long 
  5665 ;;  rem             4   12[COMRAM] unsigned long 
  5666 ;;  new_exp         2   17[COMRAM] short 
  5667 ;;  aexp            1   24[COMRAM] unsigned char 
  5668 ;;  bexp            1   23[COMRAM] unsigned char 
  5669 ;;  sign            1   16[COMRAM] unsigned char 
  5670 ;; Return value:  Size  Location     Type
  5671 ;;                  4    0[COMRAM] unsigned char 
  5672 ;; Registers used:
  5673 ;;		wreg, status,2, status,0
  5674 ;; Tracked objects:
  5675 ;;		On entry : 0/0
  5676 ;;		On exit  : 0/0
  5677 ;;		Unchanged: 0/0
  5678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5679 ;;      Params:         8       0       0       0       0       0       0       0       0
  5680 ;;      Locals:        13       0       0       0       0       0       0       0       0
  5681 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5682 ;;      Totals:        25       0       0       0       0       0       0       0       0
  5683 ;;Total ram usage:       25 bytes
  5684 ;; Hardware stack levels used: 1
  5685 ;; This function calls:
  5686 ;;		Nothing
  5687 ;; This function is called by:
  5688 ;;		_efgtoa
  5689 ;; This function uses a non-reentrant model
  5690 ;;
  5691                           
  5692                           	psect	text21
  5693   001B04                     __ptext21:
  5694                           	callstack 0
  5695   001B04                     ___fldiv:
  5696                           	callstack 26
  5697   001B04  5004               	movf	(___fldiv@b+3)^0,w,c
  5698   001B06  0B80               	andlw	128
  5699   001B08  6E11               	movwf	___fldiv@sign^0,c
  5700   001B0A  5004               	movf	(___fldiv@b+3)^0,w,c
  5701   001B0C  2404               	addwf	(___fldiv@b+3)^0,w,c
  5702   001B0E  6E18               	movwf	___fldiv@bexp^0,c
  5703   001B10  AE03               	btfss	(___fldiv@b+2)^0,7,c
  5704   001B12  EF8D  F00D         	goto	u2341
  5705   001B16  EF8F  F00D         	goto	u2340
  5706   001B1A                     u2341:
  5707   001B1A  EF90  F00D         	goto	l2646
  5708   001B1E                     u2340:
  5709   001B1E  8018               	bsf	___fldiv@bexp^0,0,c
  5710   001B20                     l2646:
  5711   001B20  5018               	movf	___fldiv@bexp^0,w,c
  5712   001B22  B4D8               	btfsc	status,2,c
  5713   001B24  EF96  F00D         	goto	u2351
  5714   001B28  EF98  F00D         	goto	u2350
  5715   001B2C                     u2351:
  5716   001B2C  EFAD  F00D         	goto	l2656
  5717   001B30                     u2350:
  5718   001B30  2818               	incf	___fldiv@bexp^0,w,c
  5719   001B32  A4D8               	btfss	status,2,c
  5720   001B34  EF9E  F00D         	goto	u2361
  5721   001B38  EFA0  F00D         	goto	u2360
  5722   001B3C                     u2361:
  5723   001B3C  EFA8  F00D         	goto	l2652
  5724   001B40                     u2360:
  5725   001B40  0E00               	movlw	0
  5726   001B42  6E01               	movwf	___fldiv@b^0,c
  5727   001B44  0E00               	movlw	0
  5728   001B46  6E02               	movwf	(___fldiv@b+1)^0,c
  5729   001B48  0E00               	movlw	0
  5730   001B4A  6E03               	movwf	(___fldiv@b+2)^0,c
  5731   001B4C  0E00               	movlw	0
  5732   001B4E  6E04               	movwf	(___fldiv@b+3)^0,c
  5733   001B50                     l2652:
  5734   001B50  8E03               	bsf	(___fldiv@b+2)^0,7,c
  5735   001B52  0E00               	movlw	0
  5736   001B54  6E04               	movwf	(___fldiv@b+3)^0,c
  5737   001B56  EFB5  F00D         	goto	l2658
  5738   001B5A                     l2656:
  5739   001B5A  0E00               	movlw	0
  5740   001B5C  6E01               	movwf	___fldiv@b^0,c
  5741   001B5E  0E00               	movlw	0
  5742   001B60  6E02               	movwf	(___fldiv@b+1)^0,c
  5743   001B62  0E00               	movlw	0
  5744   001B64  6E03               	movwf	(___fldiv@b+2)^0,c
  5745   001B66  0E00               	movlw	0
  5746   001B68  6E04               	movwf	(___fldiv@b+3)^0,c
  5747   001B6A                     l2658:
  5748   001B6A  5008               	movf	(___fldiv@a+3)^0,w,c
  5749   001B6C  0B80               	andlw	128
  5750   001B6E  1A11               	xorwf	___fldiv@sign^0,f,c
  5751   001B70  5008               	movf	(___fldiv@a+3)^0,w,c
  5752   001B72  2408               	addwf	(___fldiv@a+3)^0,w,c
  5753   001B74  6E19               	movwf	___fldiv@aexp^0,c
  5754   001B76  AE07               	btfss	(___fldiv@a+2)^0,7,c
  5755   001B78  EFC0  F00D         	goto	u2371
  5756   001B7C  EFC2  F00D         	goto	u2370
  5757   001B80                     u2371:
  5758   001B80  EFC3  F00D         	goto	l2666
  5759   001B84                     u2370:
  5760   001B84  8019               	bsf	___fldiv@aexp^0,0,c
  5761   001B86                     l2666:
  5762   001B86  5019               	movf	___fldiv@aexp^0,w,c
  5763   001B88  B4D8               	btfsc	status,2,c
  5764   001B8A  EFC9  F00D         	goto	u2381
  5765   001B8E  EFCB  F00D         	goto	u2380
  5766   001B92                     u2381:
  5767   001B92  EFE0  F00D         	goto	l2676
  5768   001B96                     u2380:
  5769   001B96  2819               	incf	___fldiv@aexp^0,w,c
  5770   001B98  A4D8               	btfss	status,2,c
  5771   001B9A  EFD1  F00D         	goto	u2391
  5772   001B9E  EFD3  F00D         	goto	u2390
  5773   001BA2                     u2391:
  5774   001BA2  EFDB  F00D         	goto	l2672
  5775   001BA6                     u2390:
  5776   001BA6  0E00               	movlw	0
  5777   001BA8  6E05               	movwf	___fldiv@a^0,c
  5778   001BAA  0E00               	movlw	0
  5779   001BAC  6E06               	movwf	(___fldiv@a+1)^0,c
  5780   001BAE  0E00               	movlw	0
  5781   001BB0  6E07               	movwf	(___fldiv@a+2)^0,c
  5782   001BB2  0E00               	movlw	0
  5783   001BB4  6E08               	movwf	(___fldiv@a+3)^0,c
  5784   001BB6                     l2672:
  5785   001BB6  8E07               	bsf	(___fldiv@a+2)^0,7,c
  5786   001BB8  0E00               	movlw	0
  5787   001BBA  6E08               	movwf	(___fldiv@a+3)^0,c
  5788   001BBC  EFE8  F00D         	goto	l2678
  5789   001BC0                     l2676:
  5790   001BC0  0E00               	movlw	0
  5791   001BC2  6E05               	movwf	___fldiv@a^0,c
  5792   001BC4  0E00               	movlw	0
  5793   001BC6  6E06               	movwf	(___fldiv@a+1)^0,c
  5794   001BC8  0E00               	movlw	0
  5795   001BCA  6E07               	movwf	(___fldiv@a+2)^0,c
  5796   001BCC  0E00               	movlw	0
  5797   001BCE  6E08               	movwf	(___fldiv@a+3)^0,c
  5798   001BD0                     l2678:
  5799   001BD0  5005               	movf	___fldiv@a^0,w,c
  5800   001BD2  1006               	iorwf	(___fldiv@a+1)^0,w,c
  5801   001BD4  1007               	iorwf	(___fldiv@a+2)^0,w,c
  5802   001BD6  1008               	iorwf	(___fldiv@a+3)^0,w,c
  5803   001BD8  A4D8               	btfss	status,2,c
  5804   001BDA  EFF1  F00D         	goto	u2401
  5805   001BDE  EFF3  F00D         	goto	u2400
  5806   001BE2                     u2401:
  5807   001BE2  EF0B  F00E         	goto	l2690
  5808   001BE6                     u2400:
  5809   001BE6  0E00               	movlw	0
  5810   001BE8  6E01               	movwf	___fldiv@b^0,c
  5811   001BEA  0E00               	movlw	0
  5812   001BEC  6E02               	movwf	(___fldiv@b+1)^0,c
  5813   001BEE  0E00               	movlw	0
  5814   001BF0  6E03               	movwf	(___fldiv@b+2)^0,c
  5815   001BF2  0E00               	movlw	0
  5816   001BF4  6E04               	movwf	(___fldiv@b+3)^0,c
  5817   001BF6  0E80               	movlw	128
  5818   001BF8  1203               	iorwf	(___fldiv@b+2)^0,f,c
  5819   001BFA  0E7F               	movlw	127
  5820   001BFC  1204               	iorwf	(___fldiv@b+3)^0,f,c
  5821   001BFE                     l2684:
  5822   001BFE  5011               	movf	___fldiv@sign^0,w,c
  5823   001C00  1204               	iorwf	(___fldiv@b+3)^0,f,c
  5824   001C02  C001  F001         	movff	___fldiv@b,?___fldiv
  5825   001C06  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  5826   001C0A  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  5827   001C0E  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  5828   001C12  EF4E  F00F         	goto	l709
  5829   001C16                     l2690:
  5830   001C16  5018               	movf	___fldiv@bexp^0,w,c
  5831   001C18  A4D8               	btfss	status,2,c
  5832   001C1A  EF11  F00E         	goto	u2411
  5833   001C1E  EF13  F00E         	goto	u2410
  5834   001C22                     u2411:
  5835   001C22  EF1D  F00E         	goto	l2698
  5836   001C26                     u2410:
  5837   001C26  0E00               	movlw	0
  5838   001C28  6E01               	movwf	?___fldiv^0,c
  5839   001C2A  0E00               	movlw	0
  5840   001C2C  6E02               	movwf	(?___fldiv+1)^0,c
  5841   001C2E  0E00               	movlw	0
  5842   001C30  6E03               	movwf	(?___fldiv+2)^0,c
  5843   001C32  0E00               	movlw	0
  5844   001C34  6E04               	movwf	(?___fldiv+3)^0,c
  5845   001C36  EF4E  F00F         	goto	l709
  5846   001C3A                     l2698:
  5847   001C3A  5019               	movf	___fldiv@aexp^0,w,c
  5848   001C3C  C018  F009         	movff	___fldiv@bexp,??___fldiv
  5849   001C40  6A0A               	clrf	(??___fldiv+1)^0,c
  5850   001C42  5E09               	subwf	??___fldiv^0,f,c
  5851   001C44  0E00               	movlw	0
  5852   001C46  5A0A               	subwfb	(??___fldiv+1)^0,f,c
  5853   001C48  0E7F               	movlw	127
  5854   001C4A  2409               	addwf	??___fldiv^0,w,c
  5855   001C4C  6E12               	movwf	___fldiv@new_exp^0,c
  5856   001C4E  0E00               	movlw	0
  5857   001C50  200A               	addwfc	(??___fldiv+1)^0,w,c
  5858   001C52  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  5859   001C54  C001  F00D         	movff	___fldiv@b,___fldiv@rem
  5860   001C58  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
  5861   001C5C  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
  5862   001C60  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
  5863   001C64  0E00               	movlw	0
  5864   001C66  6E01               	movwf	___fldiv@b^0,c
  5865   001C68  0E00               	movlw	0
  5866   001C6A  6E02               	movwf	(___fldiv@b+1)^0,c
  5867   001C6C  0E00               	movlw	0
  5868   001C6E  6E03               	movwf	(___fldiv@b+2)^0,c
  5869   001C70  0E00               	movlw	0
  5870   001C72  6E04               	movwf	(___fldiv@b+3)^0,c
  5871   001C74  0E00               	movlw	0
  5872   001C76  6E14               	movwf	___fldiv@grs^0,c
  5873   001C78  0E00               	movlw	0
  5874   001C7A  6E15               	movwf	(___fldiv@grs+1)^0,c
  5875   001C7C  0E00               	movlw	0
  5876   001C7E  6E16               	movwf	(___fldiv@grs+2)^0,c
  5877   001C80  0E00               	movlw	0
  5878   001C82  6E17               	movwf	(___fldiv@grs+3)^0,c
  5879   001C84  0E00               	movlw	0
  5880   001C86  6E19               	movwf	___fldiv@aexp^0,c
  5881   001C88  EF7E  F00E         	goto	l711
  5882   001C8C                     l2708:
  5883   001C8C  5019               	movf	___fldiv@aexp^0,w,c
  5884   001C8E  B4D8               	btfsc	status,2,c
  5885   001C90  EF4C  F00E         	goto	u2421
  5886   001C94  EF4E  F00E         	goto	u2420
  5887   001C98                     u2421:
  5888   001C98  EF65  F00E         	goto	l2716
  5889   001C9C                     u2420:
  5890   001C9C  90D8               	bcf	status,0,c
  5891   001C9E  360D               	rlcf	___fldiv@rem^0,f,c
  5892   001CA0  360E               	rlcf	(___fldiv@rem+1)^0,f,c
  5893   001CA2  360F               	rlcf	(___fldiv@rem+2)^0,f,c
  5894   001CA4  3610               	rlcf	(___fldiv@rem+3)^0,f,c
  5895   001CA6  90D8               	bcf	status,0,c
  5896   001CA8  3601               	rlcf	___fldiv@b^0,f,c
  5897   001CAA  3602               	rlcf	(___fldiv@b+1)^0,f,c
  5898   001CAC  3603               	rlcf	(___fldiv@b+2)^0,f,c
  5899   001CAE  3604               	rlcf	(___fldiv@b+3)^0,f,c
  5900   001CB0  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  5901   001CB2  EF5D  F00E         	goto	u2431
  5902   001CB6  EF5F  F00E         	goto	u2430
  5903   001CBA                     u2431:
  5904   001CBA  EF60  F00E         	goto	l714
  5905   001CBE                     u2430:
  5906   001CBE  8001               	bsf	___fldiv@b^0,0,c
  5907   001CC0                     l714:
  5908   001CC0  90D8               	bcf	status,0,c
  5909   001CC2  3614               	rlcf	___fldiv@grs^0,f,c
  5910   001CC4  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  5911   001CC6  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  5912   001CC8  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  5913   001CCA                     l2716:
  5914   001CCA  5005               	movf	___fldiv@a^0,w,c
  5915   001CCC  5C0D               	subwf	___fldiv@rem^0,w,c
  5916   001CCE  5006               	movf	(___fldiv@a+1)^0,w,c
  5917   001CD0  580E               	subwfb	(___fldiv@rem+1)^0,w,c
  5918   001CD2  5007               	movf	(___fldiv@a+2)^0,w,c
  5919   001CD4  580F               	subwfb	(___fldiv@rem+2)^0,w,c
  5920   001CD6  5008               	movf	(___fldiv@a+3)^0,w,c
  5921   001CD8  5810               	subwfb	(___fldiv@rem+3)^0,w,c
  5922   001CDA  A0D8               	btfss	status,0,c
  5923   001CDC  EF72  F00E         	goto	u2441
  5924   001CE0  EF74  F00E         	goto	u2440
  5925   001CE4                     u2441:
  5926   001CE4  EF7D  F00E         	goto	l2722
  5927   001CE8                     u2440:
  5928   001CE8  8C17               	bsf	(___fldiv@grs+3)^0,6,c
  5929   001CEA  5005               	movf	___fldiv@a^0,w,c
  5930   001CEC  5E0D               	subwf	___fldiv@rem^0,f,c
  5931   001CEE  5006               	movf	(___fldiv@a+1)^0,w,c
  5932   001CF0  5A0E               	subwfb	(___fldiv@rem+1)^0,f,c
  5933   001CF2  5007               	movf	(___fldiv@a+2)^0,w,c
  5934   001CF4  5A0F               	subwfb	(___fldiv@rem+2)^0,f,c
  5935   001CF6  5008               	movf	(___fldiv@a+3)^0,w,c
  5936   001CF8  5A10               	subwfb	(___fldiv@rem+3)^0,f,c
  5937   001CFA                     l2722:
  5938   001CFA  2A19               	incf	___fldiv@aexp^0,f,c
  5939   001CFC                     l711:
  5940   001CFC  0E19               	movlw	25
  5941   001CFE  6419               	cpfsgt	___fldiv@aexp^0,c
  5942   001D00  EF84  F00E         	goto	u2451
  5943   001D04  EF86  F00E         	goto	u2450
  5944   001D08                     u2451:
  5945   001D08  EF46  F00E         	goto	l2708
  5946   001D0C                     u2450:
  5947   001D0C  500D               	movf	___fldiv@rem^0,w,c
  5948   001D0E  100E               	iorwf	(___fldiv@rem+1)^0,w,c
  5949   001D10  100F               	iorwf	(___fldiv@rem+2)^0,w,c
  5950   001D12  1010               	iorwf	(___fldiv@rem+3)^0,w,c
  5951   001D14  B4D8               	btfsc	status,2,c
  5952   001D16  EF8F  F00E         	goto	u2461
  5953   001D1A  EF91  F00E         	goto	u2460
  5954   001D1E                     u2461:
  5955   001D1E  EFA9  F00E         	goto	l2734
  5956   001D22                     u2460:
  5957   001D22  8014               	bsf	___fldiv@grs^0,0,c
  5958   001D24  EFA9  F00E         	goto	l2734
  5959   001D28                     l2728:
  5960   001D28  90D8               	bcf	status,0,c
  5961   001D2A  3601               	rlcf	___fldiv@b^0,f,c
  5962   001D2C  3602               	rlcf	(___fldiv@b+1)^0,f,c
  5963   001D2E  3603               	rlcf	(___fldiv@b+2)^0,f,c
  5964   001D30  3604               	rlcf	(___fldiv@b+3)^0,f,c
  5965   001D32  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  5966   001D34  EF9E  F00E         	goto	u2471
  5967   001D38  EFA0  F00E         	goto	u2470
  5968   001D3C                     u2471:
  5969   001D3C  EFA1  F00E         	goto	l720
  5970   001D40                     u2470:
  5971   001D40  8001               	bsf	___fldiv@b^0,0,c
  5972   001D42                     l720:
  5973   001D42  90D8               	bcf	status,0,c
  5974   001D44  3614               	rlcf	___fldiv@grs^0,f,c
  5975   001D46  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  5976   001D48  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  5977   001D4A  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  5978   001D4C  0612               	decf	___fldiv@new_exp^0,f,c
  5979   001D4E  A0D8               	btfss	status,0,c
  5980   001D50  0613               	decf	(___fldiv@new_exp+1)^0,f,c
  5981   001D52                     l2734:
  5982   001D52  AE03               	btfss	(___fldiv@b+2)^0,7,c
  5983   001D54  EFAE  F00E         	goto	u2481
  5984   001D58  EFB0  F00E         	goto	u2480
  5985   001D5C                     u2481:
  5986   001D5C  EF94  F00E         	goto	l2728
  5987   001D60                     u2480:
  5988   001D60  0E00               	movlw	0
  5989   001D62  6E19               	movwf	___fldiv@aexp^0,c
  5990   001D64  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  5991   001D66  EFB7  F00E         	goto	u2491
  5992   001D6A  EFB9  F00E         	goto	u2490
  5993   001D6E                     u2491:
  5994   001D6E  EFDD  F00E         	goto	l722
  5995   001D72                     u2490:
  5996   001D72  0EFF               	movlw	255
  5997   001D74  1414               	andwf	___fldiv@grs^0,w,c
  5998   001D76  6E09               	movwf	??___fldiv^0,c
  5999   001D78  0EFF               	movlw	255
  6000   001D7A  1415               	andwf	(___fldiv@grs+1)^0,w,c
  6001   001D7C  6E0A               	movwf	(??___fldiv+1)^0,c
  6002   001D7E  0EFF               	movlw	255
  6003   001D80  1416               	andwf	(___fldiv@grs+2)^0,w,c
  6004   001D82  6E0B               	movwf	(??___fldiv+2)^0,c
  6005   001D84  0E7F               	movlw	127
  6006   001D86  1417               	andwf	(___fldiv@grs+3)^0,w,c
  6007   001D88  6E0C               	movwf	(??___fldiv+3)^0,c
  6008   001D8A  5009               	movf	??___fldiv^0,w,c
  6009   001D8C  100A               	iorwf	(??___fldiv+1)^0,w,c
  6010   001D8E  100B               	iorwf	(??___fldiv+2)^0,w,c
  6011   001D90  100C               	iorwf	(??___fldiv+3)^0,w,c
  6012   001D92  B4D8               	btfsc	status,2,c
  6013   001D94  EFCE  F00E         	goto	u2501
  6014   001D98  EFD0  F00E         	goto	u2500
  6015   001D9C                     u2501:
  6016   001D9C  EFD4  F00E         	goto	l723
  6017   001DA0                     u2500:
  6018   001DA0                     l2742:
  6019   001DA0  0E01               	movlw	1
  6020   001DA2  6E19               	movwf	___fldiv@aexp^0,c
  6021   001DA4  EFDD  F00E         	goto	l722
  6022   001DA8                     l723:
  6023   001DA8  A001               	btfss	___fldiv@b^0,0,c
  6024   001DAA  EFD9  F00E         	goto	u2511
  6025   001DAE  EFDB  F00E         	goto	u2510
  6026   001DB2                     u2511:
  6027   001DB2  EFDD  F00E         	goto	l722
  6028   001DB6                     u2510:
  6029   001DB6  EFD0  F00E         	goto	l2742
  6030   001DBA                     l722:
  6031   001DBA  5019               	movf	___fldiv@aexp^0,w,c
  6032   001DBC  B4D8               	btfsc	status,2,c
  6033   001DBE  EFE3  F00E         	goto	u2521
  6034   001DC2  EFE5  F00E         	goto	u2520
  6035   001DC6                     u2521:
  6036   001DC6  EF09  F00F         	goto	l2754
  6037   001DCA                     u2520:
  6038   001DCA  0E01               	movlw	1
  6039   001DCC  2601               	addwf	___fldiv@b^0,f,c
  6040   001DCE  0E00               	movlw	0
  6041   001DD0  2202               	addwfc	(___fldiv@b+1)^0,f,c
  6042   001DD2  2203               	addwfc	(___fldiv@b+2)^0,f,c
  6043   001DD4  2204               	addwfc	(___fldiv@b+3)^0,f,c
  6044   001DD6  A004               	btfss	(___fldiv@b+3)^0,0,c
  6045   001DD8  EFF0  F00E         	goto	u2531
  6046   001DDC  EFF2  F00E         	goto	u2530
  6047   001DE0                     u2531:
  6048   001DE0  EF09  F00F         	goto	l2754
  6049   001DE4                     u2530:
  6050   001DE4  C001  F009         	movff	___fldiv@b,??___fldiv
  6051   001DE8  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
  6052   001DEC  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
  6053   001DF0  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
  6054   001DF4  340C               	rlcf	(??___fldiv+3)^0,w,c
  6055   001DF6  320C               	rrcf	(??___fldiv+3)^0,f,c
  6056   001DF8  320B               	rrcf	(??___fldiv+2)^0,f,c
  6057   001DFA  320A               	rrcf	(??___fldiv+1)^0,f,c
  6058   001DFC  3209               	rrcf	??___fldiv^0,f,c
  6059   001DFE  C009  F001         	movff	??___fldiv,___fldiv@b
  6060   001E02  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
  6061   001E06  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
  6062   001E0A  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
  6063   001E0E  4A12               	infsnz	___fldiv@new_exp^0,f,c
  6064   001E10  2A13               	incf	(___fldiv@new_exp+1)^0,f,c
  6065   001E12                     l2754:
  6066   001E12  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6067   001E14  EF14  F00F         	goto	u2541
  6068   001E18  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  6069   001E1A  E108               	bnz	u2540
  6070   001E1C  2812               	incf	___fldiv@new_exp^0,w,c
  6071   001E1E  A0D8               	btfss	status,0,c
  6072   001E20  EF14  F00F         	goto	u2541
  6073   001E24  EF16  F00F         	goto	u2540
  6074   001E28                     u2541:
  6075   001E28  EF21  F00F         	goto	l2758
  6076   001E2C                     u2540:
  6077   001E2C  0E00               	movlw	0
  6078   001E2E  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  6079   001E30  6812               	setf	___fldiv@new_exp^0,c
  6080   001E32  0E00               	movlw	0
  6081   001E34  6E01               	movwf	___fldiv@b^0,c
  6082   001E36  0E00               	movlw	0
  6083   001E38  6E02               	movwf	(___fldiv@b+1)^0,c
  6084   001E3A  0E00               	movlw	0
  6085   001E3C  6E03               	movwf	(___fldiv@b+2)^0,c
  6086   001E3E  0E00               	movlw	0
  6087   001E40  6E04               	movwf	(___fldiv@b+3)^0,c
  6088   001E42                     l2758:
  6089   001E42  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6090   001E44  EF2E  F00F         	goto	u2550
  6091   001E48  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  6092   001E4A  E106               	bnz	u2551
  6093   001E4C  0412               	decf	___fldiv@new_exp^0,w,c
  6094   001E4E  B0D8               	btfsc	status,0,c
  6095   001E50  EF2C  F00F         	goto	u2551
  6096   001E54  EF2E  F00F         	goto	u2550
  6097   001E58                     u2551:
  6098   001E58  EF3C  F00F         	goto	l2762
  6099   001E5C                     u2550:
  6100   001E5C  0E00               	movlw	0
  6101   001E5E  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  6102   001E60  0E00               	movlw	0
  6103   001E62  6E12               	movwf	___fldiv@new_exp^0,c
  6104   001E64  0E00               	movlw	0
  6105   001E66  6E01               	movwf	___fldiv@b^0,c
  6106   001E68  0E00               	movlw	0
  6107   001E6A  6E02               	movwf	(___fldiv@b+1)^0,c
  6108   001E6C  0E00               	movlw	0
  6109   001E6E  6E03               	movwf	(___fldiv@b+2)^0,c
  6110   001E70  0E00               	movlw	0
  6111   001E72  6E04               	movwf	(___fldiv@b+3)^0,c
  6112   001E74  0E00               	movlw	0
  6113   001E76  6E11               	movwf	___fldiv@sign^0,c
  6114   001E78                     l2762:
  6115   001E78  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
  6116   001E7C  A018               	btfss	___fldiv@bexp^0,0,c
  6117   001E7E  EF43  F00F         	goto	u2561
  6118   001E82  EF45  F00F         	goto	u2560
  6119   001E86                     u2561:
  6120   001E86  EF48  F00F         	goto	l2768
  6121   001E8A                     u2560:
  6122   001E8A  8E03               	bsf	(___fldiv@b+2)^0,7,c
  6123   001E8C  EF49  F00F         	goto	l2770
  6124   001E90                     l2768:
  6125   001E90  9E03               	bcf	(___fldiv@b+2)^0,7,c
  6126   001E92                     l2770:
  6127   001E92  90D8               	bcf	status,0,c
  6128   001E94  3018               	rrcf	___fldiv@bexp^0,w,c
  6129   001E96  6E04               	movwf	(___fldiv@b+3)^0,c
  6130   001E98  EFFF  F00D         	goto	l2684
  6131   001E9C                     l709:
  6132   001E9C  0012               	return		;funcret
  6133   001E9E                     __end_of___fldiv:
  6134                           	callstack 0
  6135                           
  6136 ;; *************** function _atoi *****************
  6137 ;; Defined at:
  6138 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\atoi.c"
  6139 ;; Parameters:    Size  Location     Type
  6140 ;;  s               2    6[COMRAM] PTR const unsigned char 
  6141 ;;		 -> STR_2(10), STR_1(11), 
  6142 ;; Auto vars:     Size  Location     Type
  6143 ;;  n               2   13[COMRAM] int 
  6144 ;;  neg             2   11[COMRAM] int 
  6145 ;; Return value:  Size  Location     Type
  6146 ;;                  2    6[COMRAM] int 
  6147 ;; Registers used:
  6148 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6149 ;; Tracked objects:
  6150 ;;		On entry : 0/0
  6151 ;;		On exit  : 0/0
  6152 ;;		Unchanged: 0/0
  6153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6154 ;;      Params:         2       0       0       0       0       0       0       0       0
  6155 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6156 ;;      Temps:          3       0       0       0       0       0       0       0       0
  6157 ;;      Totals:         9       0       0       0       0       0       0       0       0
  6158 ;;Total ram usage:        9 bytes
  6159 ;; Hardware stack levels used: 1
  6160 ;; Hardware stack levels required when called: 1
  6161 ;; This function calls:
  6162 ;;		___wmul
  6163 ;;		_isdigit
  6164 ;;		_isspace
  6165 ;; This function is called by:
  6166 ;;		_vfpfcnvrt
  6167 ;; This function uses a non-reentrant model
  6168 ;;
  6169                           
  6170                           	psect	text22
  6171   0026F8                     __ptext22:
  6172                           	callstack 0
  6173   0026F8                     _atoi:
  6174                           	callstack 26
  6175   0026F8  0E00               	movlw	0
  6176   0026FA  6E0F               	movwf	(atoi@n+1)^0,c
  6177   0026FC  0E00               	movlw	0
  6178   0026FE  6E0E               	movwf	atoi@n^0,c
  6179   002700  0E00               	movlw	0
  6180   002702  6E0D               	movwf	(atoi@neg+1)^0,c
  6181   002704  0E00               	movlw	0
  6182   002706  6E0C               	movwf	atoi@neg^0,c
  6183   002708  EF88  F013         	goto	l3332
  6184   00270C                     l3328:
  6185   00270C  4A07               	infsnz	atoi@s^0,f,c
  6186   00270E  2A08               	incf	(atoi@s+1)^0,f,c
  6187   002710                     l3332:
  6188   002710  C007  FFF6         	movff	atoi@s,tblptrl
  6189   002714  C008  FFF7         	movff	atoi@s+1,tblptrh
  6190   002718                     	if	0	;tblptru may be non-zero
  6191   002718                     	endif
  6192   002718                     	if	0	;tblptru may be non-zero
  6193   002718                     	endif
  6194   002718  0008               	tblrd		*
  6195   00271A  50F5               	movf	tablat,w,c
  6196   00271C  0A20               	xorlw	32
  6197   00271E  B4D8               	btfsc	status,2,c
  6198   002720  EF94  F013         	goto	u3501
  6199   002724  EF96  F013         	goto	u3500
  6200   002728                     u3501:
  6201   002728  EF86  F013         	goto	l3328
  6202   00272C                     u3500:
  6203   00272C  C007  FFF6         	movff	atoi@s,tblptrl
  6204   002730  C008  FFF7         	movff	atoi@s+1,tblptrh
  6205   002734                     	if	0	;tblptru may be non-zero
  6206   002734                     	endif
  6207   002734                     	if	0	;tblptru may be non-zero
  6208   002734                     	endif
  6209   002734  0008               	tblrd		*
  6210   002736  CFF5 F009          	movff	tablat,??_atoi
  6211   00273A  0EF7               	movlw	247
  6212   00273C  2409               	addwf	??_atoi^0,w,c
  6213   00273E  6E0A               	movwf	(??_atoi+1)^0,c
  6214   002740  6A0B               	clrf	(??_atoi+2)^0,c
  6215   002742  0EFF               	movlw	255
  6216   002744  220B               	addwfc	(??_atoi+2)^0,f,c
  6217   002746  500B               	movf	(??_atoi+2)^0,w,c
  6218   002748  E109               	bnz	u3510
  6219   00274A  0E05               	movlw	5
  6220   00274C  5C0A               	subwf	(??_atoi+1)^0,w,c
  6221   00274E  A0D8               	btfss	status,0,c
  6222   002750  EFAC  F013         	goto	u3511
  6223   002754  EFAE  F013         	goto	u3510
  6224   002758                     u3511:
  6225   002758  EF86  F013         	goto	l3328
  6226   00275C                     u3510:
  6227   00275C  EFB8  F013         	goto	l3340
  6228   002760                     l3336:
  6229   002760  0E00               	movlw	0
  6230   002762  6E0D               	movwf	(atoi@neg+1)^0,c
  6231   002764  0E01               	movlw	1
  6232   002766  6E0C               	movwf	atoi@neg^0,c
  6233   002768                     l3338:
  6234   002768  4A07               	infsnz	atoi@s^0,f,c
  6235   00276A  2A08               	incf	(atoi@s+1)^0,f,c
  6236   00276C  EFED  F013         	goto	l3348
  6237   002770                     l3340:
  6238   002770  C007  FFF6         	movff	atoi@s,tblptrl
  6239   002774  C008  FFF7         	movff	atoi@s+1,tblptrh
  6240   002778                     	if	0	;tblptru may be non-zero
  6241   002778                     	endif
  6242   002778                     	if	0	;tblptru may be non-zero
  6243   002778                     	endif
  6244   002778  0008               	tblrd		*
  6245   00277A  50F5               	movf	tablat,w,c
  6246   00277C  6E09               	movwf	??_atoi^0,c
  6247   00277E  6A0A               	clrf	(??_atoi+1)^0,c
  6248                           
  6249                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6250                           ; Switch size 1, requested type "simple"
  6251                           ; Number of cases is 1, Range of values is 0 to 0
  6252                           ; switch strategies available:
  6253                           ; Name         Instructions Cycles
  6254                           ; simple_byte            4     3 (average)
  6255                           ;	Chosen strategy is simple_byte
  6256   002780  500A               	movf	(??_atoi+1)^0,w,c
  6257   002782  0A00               	xorlw	0	; case 0
  6258   002784  B4D8               	btfsc	status,2,c
  6259   002786  EFC7  F013         	goto	l3754
  6260   00278A  EFED  F013         	goto	l3348
  6261   00278E                     l3754:
  6262                           
  6263                           ; Switch size 1, requested type "simple"
  6264                           ; Number of cases is 2, Range of values is 43 to 45
  6265                           ; switch strategies available:
  6266                           ; Name         Instructions Cycles
  6267                           ; simple_byte            7     4 (average)
  6268                           ;	Chosen strategy is simple_byte
  6269   00278E  5009               	movf	??_atoi^0,w,c
  6270   002790  0A2B               	xorlw	43	; case 43
  6271   002792  B4D8               	btfsc	status,2,c
  6272   002794  EFB4  F013         	goto	l3338
  6273   002798  0A06               	xorlw	6	; case 45
  6274   00279A  B4D8               	btfsc	status,2,c
  6275   00279C  EFB0  F013         	goto	l3336
  6276   0027A0  EFED  F013         	goto	l3348
  6277   0027A4                     l3342:
  6278   0027A4  C00E  F001         	movff	atoi@n,___wmul@multiplier
  6279   0027A8  C00F  F002         	movff	atoi@n+1,___wmul@multiplier+1
  6280   0027AC  0E00               	movlw	0
  6281   0027AE  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6282   0027B0  0E0A               	movlw	10
  6283   0027B2  6E03               	movwf	___wmul@multiplicand^0,c
  6284   0027B4  ECF6  F018         	call	___wmul	;wreg free
  6285   0027B8  C007  FFF6         	movff	atoi@s,tblptrl
  6286   0027BC  C008  FFF7         	movff	atoi@s+1,tblptrh
  6287   0027C0                     	if	0	;tblptru may be non-zero
  6288   0027C0                     	endif
  6289   0027C0                     	if	0	;tblptru may be non-zero
  6290   0027C0                     	endif
  6291   0027C0  0008               	tblrd		*
  6292   0027C2  50F5               	movf	tablat,w,c
  6293   0027C4  5E01               	subwf	?___wmul^0,f,c
  6294   0027C6  0E00               	movlw	0
  6295   0027C8  5A02               	subwfb	(?___wmul+1)^0,f,c
  6296   0027CA  0E30               	movlw	48
  6297   0027CC  2401               	addwf	?___wmul^0,w,c
  6298   0027CE  6E0E               	movwf	atoi@n^0,c
  6299   0027D0  0E00               	movlw	0
  6300   0027D2  2002               	addwfc	(?___wmul+1)^0,w,c
  6301   0027D4  6E0F               	movwf	(atoi@n+1)^0,c
  6302   0027D6  EFB4  F013         	goto	l3338
  6303   0027DA                     l3348:
  6304   0027DA  C007  FFF6         	movff	atoi@s,tblptrl
  6305   0027DE  C008  FFF7         	movff	atoi@s+1,tblptrh
  6306   0027E2                     	if	0	;tblptru may be non-zero
  6307   0027E2                     	endif
  6308   0027E2                     	if	0	;tblptru may be non-zero
  6309   0027E2                     	endif
  6310   0027E2  0008               	tblrd		*
  6311   0027E4  CFF5 F009          	movff	tablat,??_atoi
  6312   0027E8  0ED0               	movlw	208
  6313   0027EA  2409               	addwf	??_atoi^0,w,c
  6314   0027EC  6E0A               	movwf	(??_atoi+1)^0,c
  6315   0027EE  6A0B               	clrf	(??_atoi+2)^0,c
  6316   0027F0  0EFF               	movlw	255
  6317   0027F2  220B               	addwfc	(??_atoi+2)^0,f,c
  6318   0027F4  500B               	movf	(??_atoi+2)^0,w,c
  6319   0027F6  E109               	bnz	u3520
  6320   0027F8  0E0A               	movlw	10
  6321   0027FA  5C0A               	subwf	(??_atoi+1)^0,w,c
  6322   0027FC  A0D8               	btfss	status,0,c
  6323   0027FE  EF03  F014         	goto	u3521
  6324   002802  EF05  F014         	goto	u3520
  6325   002806                     u3521:
  6326   002806  EFD2  F013         	goto	l3342
  6327   00280A                     u3520:
  6328   00280A  500C               	movf	atoi@neg^0,w,c
  6329   00280C  100D               	iorwf	(atoi@neg+1)^0,w,c
  6330   00280E  A4D8               	btfss	status,2,c
  6331   002810  EF0C  F014         	goto	u3531
  6332   002814  EF0E  F014         	goto	u3530
  6333   002818                     u3531:
  6334   002818  EF1C  F014         	goto	l962
  6335   00281C                     u3530:
  6336   00281C  C00E  F009         	movff	atoi@n,??_atoi
  6337   002820  C00F  F00A         	movff	atoi@n+1,??_atoi+1
  6338   002824  1E09               	comf	??_atoi^0,f,c
  6339   002826  1E0A               	comf	(??_atoi+1)^0,f,c
  6340   002828  4A09               	infsnz	??_atoi^0,f,c
  6341   00282A  2A0A               	incf	(??_atoi+1)^0,f,c
  6342   00282C  C009  F007         	movff	??_atoi,?_atoi
  6343   002830  C00A  F008         	movff	??_atoi+1,?_atoi+1
  6344   002834  EF20  F014         	goto	l965
  6345   002838                     l962:
  6346   002838  C00E  F007         	movff	atoi@n,?_atoi
  6347   00283C  C00F  F008         	movff	atoi@n+1,?_atoi+1
  6348   002840                     l965:
  6349   002840  0012               	return		;funcret
  6350   002842                     __end_of_atoi:
  6351                           	callstack 0
  6352                           
  6353 ;; *************** function _isspace *****************
  6354 ;; Defined at:
  6355 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isspace.c"
  6356 ;; Parameters:    Size  Location     Type
  6357 ;;  c               2    0[COMRAM] int 
  6358 ;; Auto vars:     Size  Location     Type
  6359 ;;		None
  6360 ;; Return value:  Size  Location     Type
  6361 ;;                  2    0[COMRAM] int 
  6362 ;; Registers used:
  6363 ;;		wreg, status,2, status,0
  6364 ;; Tracked objects:
  6365 ;;		On entry : 0/0
  6366 ;;		On exit  : 0/0
  6367 ;;		Unchanged: 0/0
  6368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6369 ;;      Params:         2       0       0       0       0       0       0       0       0
  6370 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6371 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6372 ;;      Totals:         5       0       0       0       0       0       0       0       0
  6373 ;;Total ram usage:        5 bytes
  6374 ;; Hardware stack levels used: 1
  6375 ;; This function calls:
  6376 ;;		Nothing
  6377 ;; This function is called by:
  6378 ;;		_atoi
  6379 ;; This function uses a non-reentrant model
  6380 ;;
  6381                           
  6382                           	psect	text23
  6383   00300E                     __ptext23:
  6384                           	callstack 0
  6385   00300E                     _isspace:
  6386                           	callstack 26
  6387   00300E  0E01               	movlw	1
  6388   003010  6E05               	movwf	_isspace$1197^0,c
  6389   003012  0E20               	movlw	32
  6390   003014  1801               	xorwf	isspace@c^0,w,c
  6391   003016  1002               	iorwf	(isspace@c+1)^0,w,c
  6392   003018  B4D8               	btfsc	status,2,c
  6393   00301A  EF11  F018         	goto	u3161
  6394   00301E  EF13  F018         	goto	u3160
  6395   003022                     u3161:
  6396   003022  EF26  F018         	goto	l3100
  6397   003026                     u3160:
  6398   003026  0EF7               	movlw	247
  6399   003028  2401               	addwf	isspace@c^0,w,c
  6400   00302A  6E03               	movwf	??_isspace^0,c
  6401   00302C  0EFF               	movlw	255
  6402   00302E  2002               	addwfc	(isspace@c+1)^0,w,c
  6403   003030  6E04               	movwf	(??_isspace+1)^0,c
  6404   003032  5004               	movf	(??_isspace+1)^0,w,c
  6405   003034  E109               	bnz	u3170
  6406   003036  0E05               	movlw	5
  6407   003038  5C03               	subwf	??_isspace^0,w,c
  6408   00303A  A0D8               	btfss	status,0,c
  6409   00303C  EF22  F018         	goto	u3171
  6410   003040  EF24  F018         	goto	u3170
  6411   003044                     u3171:
  6412   003044  EF26  F018         	goto	l3100
  6413   003048                     u3170:
  6414   003048  0E00               	movlw	0
  6415   00304A  6E05               	movwf	_isspace$1197^0,c
  6416   00304C                     l3100:
  6417   00304C  C005  F001         	movff	_isspace$1197,?_isspace
  6418   003050  6A02               	clrf	(?_isspace+1)^0,c
  6419   003052  0012               	return		;funcret
  6420   003054                     __end_of_isspace:
  6421                           	callstack 0
  6422                           
  6423 ;; *************** function _isdigit *****************
  6424 ;; Defined at:
  6425 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isdigit.c"
  6426 ;; Parameters:    Size  Location     Type
  6427 ;;  c               2    0[COMRAM] int 
  6428 ;; Auto vars:     Size  Location     Type
  6429 ;;		None
  6430 ;; Return value:  Size  Location     Type
  6431 ;;                  2    0[COMRAM] int 
  6432 ;; Registers used:
  6433 ;;		wreg, status,2, status,0
  6434 ;; Tracked objects:
  6435 ;;		On entry : 0/0
  6436 ;;		On exit  : 0/0
  6437 ;;		Unchanged: 0/0
  6438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6439 ;;      Params:         2       0       0       0       0       0       0       0       0
  6440 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6441 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6442 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6443 ;;Total ram usage:        4 bytes
  6444 ;; Hardware stack levels used: 1
  6445 ;; This function calls:
  6446 ;;		Nothing
  6447 ;; This function is called by:
  6448 ;;		_vfpfcnvrt
  6449 ;;		_atoi
  6450 ;; This function uses a non-reentrant model
  6451 ;;
  6452                           
  6453                           	psect	text24
  6454   0031C0                     __ptext24:
  6455                           	callstack 0
  6456   0031C0                     _isdigit:
  6457                           	callstack 27
  6458   0031C0  0ED0               	movlw	208
  6459   0031C2  2401               	addwf	isdigit@c^0,w,c
  6460   0031C4  6E03               	movwf	??_isdigit^0,c
  6461   0031C6  0EFF               	movlw	255
  6462   0031C8  2002               	addwfc	(isdigit@c+1)^0,w,c
  6463   0031CA  6E04               	movwf	(??_isdigit+1)^0,c
  6464   0031CC  5004               	movf	(??_isdigit+1)^0,w,c
  6465   0031CE  E10A               	bnz	u3140
  6466   0031D0  0E0A               	movlw	10
  6467   0031D2  5C03               	subwf	??_isdigit^0,w,c
  6468   0031D4  A0D8               	btfss	status,0,c
  6469   0031D6  EFEF  F018         	goto	u3141
  6470   0031DA  EFF2  F018         	goto	u3140
  6471   0031DE                     u3141:
  6472   0031DE  0E01               	movlw	1
  6473   0031E0  EFF3  F018         	goto	u3150
  6474   0031E4                     u3140:
  6475   0031E4  0E00               	movlw	0
  6476   0031E6                     u3150:
  6477   0031E6  6E01               	movwf	?_isdigit^0,c
  6478   0031E8  6A02               	clrf	(?_isdigit+1)^0,c
  6479   0031EA  0012               	return		;funcret
  6480   0031EC                     __end_of_isdigit:
  6481                           	callstack 0
  6482                           
  6483 ;; *************** function ___wmul *****************
  6484 ;; Defined at:
  6485 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  6486 ;; Parameters:    Size  Location     Type
  6487 ;;  multiplier      2    0[COMRAM] unsigned int 
  6488 ;;  multiplicand    2    2[COMRAM] unsigned int 
  6489 ;; Auto vars:     Size  Location     Type
  6490 ;;  product         2    4[COMRAM] unsigned int 
  6491 ;; Return value:  Size  Location     Type
  6492 ;;                  2    0[COMRAM] unsigned int 
  6493 ;; Registers used:
  6494 ;;		wreg, status,2, status,0, prodl, prodh
  6495 ;; Tracked objects:
  6496 ;;		On entry : 0/0
  6497 ;;		On exit  : 0/0
  6498 ;;		Unchanged: 0/0
  6499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6500 ;;      Params:         4       0       0       0       0       0       0       0       0
  6501 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6502 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6503 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6504 ;;Total ram usage:        6 bytes
  6505 ;; Hardware stack levels used: 1
  6506 ;; This function calls:
  6507 ;;		Nothing
  6508 ;; This function is called by:
  6509 ;;		_atoi
  6510 ;; This function uses a non-reentrant model
  6511 ;;
  6512                           
  6513                           	psect	text25
  6514   0031EC                     __ptext25:
  6515                           	callstack 0
  6516   0031EC                     ___wmul:
  6517                           	callstack 26
  6518   0031EC  5001               	movf	___wmul@multiplier^0,w,c
  6519   0031EE  0203               	mulwf	___wmul@multiplicand^0,c
  6520   0031F0  CFF3 F005          	movff	prodl,___wmul@product
  6521   0031F4  CFF4 F006          	movff	prodh,___wmul@product+1
  6522   0031F8  5001               	movf	___wmul@multiplier^0,w,c
  6523   0031FA  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  6524   0031FC  50F3               	movf	243,w,c
  6525   0031FE  2606               	addwf	(___wmul@product+1)^0,f,c
  6526   003200  5002               	movf	(___wmul@multiplier+1)^0,w,c
  6527   003202  0203               	mulwf	___wmul@multiplicand^0,c
  6528   003204  50F3               	movf	243,w,c
  6529   003206  2606               	addwf	(___wmul@product+1)^0,f,c
  6530   003208  C005  F001         	movff	___wmul@product,?___wmul
  6531   00320C  C006  F002         	movff	___wmul@product+1,?___wmul+1
  6532   003210  0012               	return		;funcret
  6533   003212                     __end_of___wmul:
  6534                           	callstack 0
  6535                           
  6536 ;; *************** function ___xxtofl *****************
  6537 ;; Defined at:
  6538 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  6539 ;; Parameters:    Size  Location     Type
  6540 ;;  sign            1    wreg     unsigned char 
  6541 ;;  val             4    5[COMRAM] long 
  6542 ;; Auto vars:     Size  Location     Type
  6543 ;;  sign            1   13[COMRAM] unsigned char 
  6544 ;;  arg             4   15[COMRAM] unsigned long 
  6545 ;;  exp             1   14[COMRAM] unsigned char 
  6546 ;; Return value:  Size  Location     Type
  6547 ;;                  4    5[COMRAM] unsigned char 
  6548 ;; Registers used:
  6549 ;;		wreg, status,2, status,0
  6550 ;; Tracked objects:
  6551 ;;		On entry : 0/0
  6552 ;;		On exit  : 0/0
  6553 ;;		Unchanged: 0/0
  6554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6555 ;;      Params:         4       0       0       0       0       0       0       0       0
  6556 ;;      Locals:         6       0       0       0       0       0       0       0       0
  6557 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6558 ;;      Totals:        14       0       0       0       0       0       0       0       0
  6559 ;;Total ram usage:       14 bytes
  6560 ;; Hardware stack levels used: 1
  6561 ;; This function calls:
  6562 ;;		Nothing
  6563 ;; This function is called by:
  6564 ;;		_main
  6565 ;; This function uses a non-reentrant model
  6566 ;;
  6567                           
  6568                           	psect	text26
  6569   0023C6                     __ptext26:
  6570                           	callstack 0
  6571   0023C6                     ___xxtofl:
  6572                           	callstack 30
  6573                           
  6574                           ;incstack = 0
  6575                           ;___xxtofl@sign stored from wreg
  6576   0023C6  6E0E               	movwf	___xxtofl@sign^0,c
  6577   0023C8  500E               	movf	___xxtofl@sign^0,w,c
  6578   0023CA  B4D8               	btfsc	status,2,c
  6579   0023CC  EFEA  F011         	goto	u3681
  6580   0023D0  EFEC  F011         	goto	u3680
  6581   0023D4                     u3681:
  6582   0023D4  EF0E  F012         	goto	l782
  6583   0023D8                     u3680:
  6584   0023D8  BE09               	btfsc	(___xxtofl@val+3)^0,7,c
  6585   0023DA  EFF3  F011         	goto	u3690
  6586   0023DE  EFF1  F011         	goto	u3691
  6587   0023E2                     u3691:
  6588   0023E2  EF0E  F012         	goto	l782
  6589   0023E6                     u3690:
  6590   0023E6  C006  F00A         	movff	___xxtofl@val,??___xxtofl
  6591   0023EA  C007  F00B         	movff	___xxtofl@val+1,??___xxtofl+1
  6592   0023EE  C008  F00C         	movff	___xxtofl@val+2,??___xxtofl+2
  6593   0023F2  C009  F00D         	movff	___xxtofl@val+3,??___xxtofl+3
  6594   0023F6  1E0A               	comf	??___xxtofl^0,f,c
  6595   0023F8  1E0B               	comf	(??___xxtofl+1)^0,f,c
  6596   0023FA  1E0C               	comf	(??___xxtofl+2)^0,f,c
  6597   0023FC  1E0D               	comf	(??___xxtofl+3)^0,f,c
  6598   0023FE  2A0A               	incf	??___xxtofl^0,f,c
  6599   002400  0E00               	movlw	0
  6600   002402  220B               	addwfc	(??___xxtofl+1)^0,f,c
  6601   002404  220C               	addwfc	(??___xxtofl+2)^0,f,c
  6602   002406  220D               	addwfc	(??___xxtofl+3)^0,f,c
  6603   002408  C00A  F010         	movff	??___xxtofl,___xxtofl@arg
  6604   00240C  C00B  F011         	movff	??___xxtofl+1,___xxtofl@arg+1
  6605   002410  C00C  F012         	movff	??___xxtofl+2,___xxtofl@arg+2
  6606   002414  C00D  F013         	movff	??___xxtofl+3,___xxtofl@arg+3
  6607   002418  EF16  F012         	goto	l3600
  6608   00241C                     l782:
  6609   00241C  C006  F010         	movff	___xxtofl@val,___xxtofl@arg
  6610   002420  C007  F011         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6611   002424  C008  F012         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6612   002428  C009  F013         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6613   00242C                     l3600:
  6614   00242C  5006               	movf	___xxtofl@val^0,w,c
  6615   00242E  1007               	iorwf	(___xxtofl@val+1)^0,w,c
  6616   002430  1008               	iorwf	(___xxtofl@val+2)^0,w,c
  6617   002432  1009               	iorwf	(___xxtofl@val+3)^0,w,c
  6618   002434  A4D8               	btfss	status,2,c
  6619   002436  EF1F  F012         	goto	u3701
  6620   00243A  EF21  F012         	goto	u3700
  6621   00243E                     u3701:
  6622   00243E  EF2B  F012         	goto	l3606
  6623   002442                     u3700:
  6624   002442  0E00               	movlw	0
  6625   002444  6E06               	movwf	?___xxtofl^0,c
  6626   002446  0E00               	movlw	0
  6627   002448  6E07               	movwf	(?___xxtofl+1)^0,c
  6628   00244A  0E00               	movlw	0
  6629   00244C  6E08               	movwf	(?___xxtofl+2)^0,c
  6630   00244E  0E00               	movlw	0
  6631   002450  6E09               	movwf	(?___xxtofl+3)^0,c
  6632   002452  EFBC  F012         	goto	l785
  6633   002456                     l3606:
  6634   002456  0E96               	movlw	150
  6635   002458  6E0F               	movwf	___xxtofl@exp^0,c
  6636   00245A  EF35  F012         	goto	l3610
  6637   00245E                     l3608:
  6638   00245E  2A0F               	incf	___xxtofl@exp^0,f,c
  6639   002460  90D8               	bcf	status,0,c
  6640   002462  3213               	rrcf	(___xxtofl@arg+3)^0,f,c
  6641   002464  3212               	rrcf	(___xxtofl@arg+2)^0,f,c
  6642   002466  3211               	rrcf	(___xxtofl@arg+1)^0,f,c
  6643   002468  3210               	rrcf	___xxtofl@arg^0,f,c
  6644   00246A                     l3610:
  6645   00246A  0E00               	movlw	0
  6646   00246C  1410               	andwf	___xxtofl@arg^0,w,c
  6647   00246E  6E0A               	movwf	??___xxtofl^0,c
  6648   002470  0E00               	movlw	0
  6649   002472  1411               	andwf	(___xxtofl@arg+1)^0,w,c
  6650   002474  6E0B               	movwf	(??___xxtofl+1)^0,c
  6651   002476  0E00               	movlw	0
  6652   002478  1412               	andwf	(___xxtofl@arg+2)^0,w,c
  6653   00247A  6E0C               	movwf	(??___xxtofl+2)^0,c
  6654   00247C  0EFE               	movlw	254
  6655   00247E  1413               	andwf	(___xxtofl@arg+3)^0,w,c
  6656   002480  6E0D               	movwf	(??___xxtofl+3)^0,c
  6657   002482  500A               	movf	??___xxtofl^0,w,c
  6658   002484  100B               	iorwf	(??___xxtofl+1)^0,w,c
  6659   002486  100C               	iorwf	(??___xxtofl+2)^0,w,c
  6660   002488  100D               	iorwf	(??___xxtofl+3)^0,w,c
  6661   00248A  A4D8               	btfss	status,2,c
  6662   00248C  EF4A  F012         	goto	u3711
  6663   002490  EF4C  F012         	goto	u3710
  6664   002494                     u3711:
  6665   002494  EF2F  F012         	goto	l3608
  6666   002498                     u3710:
  6667   002498  EF5A  F012         	goto	l789
  6668   00249C                     l3612:
  6669   00249C  2A0F               	incf	___xxtofl@exp^0,f,c
  6670   00249E  0E01               	movlw	1
  6671   0024A0  2610               	addwf	___xxtofl@arg^0,f,c
  6672   0024A2  0E00               	movlw	0
  6673   0024A4  2211               	addwfc	(___xxtofl@arg+1)^0,f,c
  6674   0024A6  2212               	addwfc	(___xxtofl@arg+2)^0,f,c
  6675   0024A8  2213               	addwfc	(___xxtofl@arg+3)^0,f,c
  6676   0024AA  90D8               	bcf	status,0,c
  6677   0024AC  3213               	rrcf	(___xxtofl@arg+3)^0,f,c
  6678   0024AE  3212               	rrcf	(___xxtofl@arg+2)^0,f,c
  6679   0024B0  3211               	rrcf	(___xxtofl@arg+1)^0,f,c
  6680   0024B2  3210               	rrcf	___xxtofl@arg^0,f,c
  6681   0024B4                     l789:
  6682   0024B4  0E00               	movlw	0
  6683   0024B6  1410               	andwf	___xxtofl@arg^0,w,c
  6684   0024B8  6E0A               	movwf	??___xxtofl^0,c
  6685   0024BA  0E00               	movlw	0
  6686   0024BC  1411               	andwf	(___xxtofl@arg+1)^0,w,c
  6687   0024BE  6E0B               	movwf	(??___xxtofl+1)^0,c
  6688   0024C0  0E00               	movlw	0
  6689   0024C2  1412               	andwf	(___xxtofl@arg+2)^0,w,c
  6690   0024C4  6E0C               	movwf	(??___xxtofl+2)^0,c
  6691   0024C6  0EFF               	movlw	255
  6692   0024C8  1413               	andwf	(___xxtofl@arg+3)^0,w,c
  6693   0024CA  6E0D               	movwf	(??___xxtofl+3)^0,c
  6694   0024CC  500A               	movf	??___xxtofl^0,w,c
  6695   0024CE  100B               	iorwf	(??___xxtofl+1)^0,w,c
  6696   0024D0  100C               	iorwf	(??___xxtofl+2)^0,w,c
  6697   0024D2  100D               	iorwf	(??___xxtofl+3)^0,w,c
  6698   0024D4  A4D8               	btfss	status,2,c
  6699   0024D6  EF6F  F012         	goto	u3721
  6700   0024DA  EF71  F012         	goto	u3720
  6701   0024DE                     u3721:
  6702   0024DE  EF4E  F012         	goto	l3612
  6703   0024E2                     u3720:
  6704   0024E2  EF79  F012         	goto	l3620
  6705   0024E6                     l3618:
  6706   0024E6  060F               	decf	___xxtofl@exp^0,f,c
  6707   0024E8  90D8               	bcf	status,0,c
  6708   0024EA  3610               	rlcf	___xxtofl@arg^0,f,c
  6709   0024EC  3611               	rlcf	(___xxtofl@arg+1)^0,f,c
  6710   0024EE  3612               	rlcf	(___xxtofl@arg+2)^0,f,c
  6711   0024F0  3613               	rlcf	(___xxtofl@arg+3)^0,f,c
  6712   0024F2                     l3620:
  6713   0024F2  BE12               	btfsc	(___xxtofl@arg+2)^0,7,c
  6714   0024F4  EF7E  F012         	goto	u3731
  6715   0024F8  EF80  F012         	goto	u3730
  6716   0024FC                     u3731:
  6717   0024FC  EF88  F012         	goto	l796
  6718   002500                     u3730:
  6719   002500  0E02               	movlw	2
  6720   002502  600F               	cpfslt	___xxtofl@exp^0,c
  6721   002504  EF86  F012         	goto	u3741
  6722   002508  EF88  F012         	goto	u3740
  6723   00250C                     u3741:
  6724   00250C  EF73  F012         	goto	l3618
  6725   002510                     u3740:
  6726   002510                     l796:
  6727   002510  B00F               	btfsc	___xxtofl@exp^0,0,c
  6728   002512  EF8D  F012         	goto	u3751
  6729   002516  EF8F  F012         	goto	u3750
  6730   00251A                     u3751:
  6731   00251A  EF90  F012         	goto	l3626
  6732   00251E                     u3750:
  6733   00251E  9E12               	bcf	(___xxtofl@arg+2)^0,7,c
  6734   002520                     l3626:
  6735   002520  90D8               	bcf	status,0,c
  6736   002522  320F               	rrcf	___xxtofl@exp^0,f,c
  6737   002524  C00F  F00A         	movff	___xxtofl@exp,??___xxtofl
  6738   002528  6A0B               	clrf	(??___xxtofl+1)^0,c
  6739   00252A  6A0C               	clrf	(??___xxtofl+2)^0,c
  6740   00252C  6A0D               	clrf	(??___xxtofl+3)^0,c
  6741   00252E  C00A  F00D         	movff	??___xxtofl,??___xxtofl+3
  6742   002532  6A0C               	clrf	(??___xxtofl+2)^0,c
  6743   002534  6A0B               	clrf	(??___xxtofl+1)^0,c
  6744   002536  6A0A               	clrf	??___xxtofl^0,c
  6745   002538  500A               	movf	??___xxtofl^0,w,c
  6746   00253A  1210               	iorwf	___xxtofl@arg^0,f,c
  6747   00253C  500B               	movf	(??___xxtofl+1)^0,w,c
  6748   00253E  1211               	iorwf	(___xxtofl@arg+1)^0,f,c
  6749   002540  500C               	movf	(??___xxtofl+2)^0,w,c
  6750   002542  1212               	iorwf	(___xxtofl@arg+2)^0,f,c
  6751   002544  500D               	movf	(??___xxtofl+3)^0,w,c
  6752   002546  1213               	iorwf	(___xxtofl@arg+3)^0,f,c
  6753   002548  500E               	movf	___xxtofl@sign^0,w,c
  6754   00254A  B4D8               	btfsc	status,2,c
  6755   00254C  EFAA  F012         	goto	u3761
  6756   002550  EFAC  F012         	goto	u3760
  6757   002554                     u3761:
  6758   002554  EFB4  F012         	goto	l3636
  6759   002558                     u3760:
  6760   002558  BE09               	btfsc	(___xxtofl@val+3)^0,7,c
  6761   00255A  EFB3  F012         	goto	u3770
  6762   00255E  EFB1  F012         	goto	u3771
  6763   002562                     u3771:
  6764   002562  EFB4  F012         	goto	l3636
  6765   002566                     u3770:
  6766   002566  8E13               	bsf	(___xxtofl@arg+3)^0,7,c
  6767   002568                     l3636:
  6768   002568  C010  F006         	movff	___xxtofl@arg,?___xxtofl
  6769   00256C  C011  F007         	movff	___xxtofl@arg+1,?___xxtofl+1
  6770   002570  C012  F008         	movff	___xxtofl@arg+2,?___xxtofl+2
  6771   002574  C013  F009         	movff	___xxtofl@arg+3,?___xxtofl+3
  6772   002578                     l785:
  6773   002578  0012               	return		;funcret
  6774   00257A                     __end_of___xxtofl:
  6775                           	callstack 0
  6776                           
  6777 ;; *************** function _Lcd_Write_String *****************
  6778 ;; Defined at:
  6779 ;;		line 97 in file "lcd.c"
  6780 ;; Parameters:    Size  Location     Type
  6781 ;;  a               2    4[COMRAM] PTR unsigned char 
  6782 ;;		 -> str_buffeLcd(20), 
  6783 ;; Auto vars:     Size  Location     Type
  6784 ;;  i               2    6[COMRAM] int 
  6785 ;; Return value:  Size  Location     Type
  6786 ;;                  1    wreg      void 
  6787 ;; Registers used:
  6788 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6789 ;; Tracked objects:
  6790 ;;		On entry : 0/0
  6791 ;;		On exit  : 0/0
  6792 ;;		Unchanged: 0/0
  6793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6794 ;;      Params:         2       0       0       0       0       0       0       0       0
  6795 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6796 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6797 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6798 ;;Total ram usage:        4 bytes
  6799 ;; Hardware stack levels used: 1
  6800 ;; Hardware stack levels required when called: 2
  6801 ;; This function calls:
  6802 ;;		_Lcd_Write_Char
  6803 ;; This function is called by:
  6804 ;;		_main
  6805 ;; This function uses a non-reentrant model
  6806 ;;
  6807                           
  6808                           	psect	text27
  6809   0030D8                     __ptext27:
  6810                           	callstack 0
  6811   0030D8                     _Lcd_Write_String:
  6812                           	callstack 28
  6813   0030D8                     
  6814                           ;lcd.c: 97: void Lcd_Write_String(unsigned char *a);lcd.c: 98: {;lcd.c: 99:  int i;;lcd.
      +                          c: 100:  for(i=0;a[i]!='\0';i++)
  6815   0030D8  0E00               	movlw	0
  6816   0030DA  6E08               	movwf	(Lcd_Write_String@i+1)^0,c
  6817   0030DC  0E00               	movlw	0
  6818   0030DE  6E07               	movwf	Lcd_Write_String@i^0,c
  6819   0030E0  EF7D  F018         	goto	l3592
  6820   0030E4                     l3588:
  6821                           
  6822                           ;lcd.c: 101:     Lcd_Write_Char(a[i]);
  6823   0030E4  5007               	movf	Lcd_Write_String@i^0,w,c
  6824   0030E6  2405               	addwf	Lcd_Write_String@a^0,w,c
  6825   0030E8  6ED9               	movwf	fsr2l,c
  6826   0030EA  5008               	movf	(Lcd_Write_String@i+1)^0,w,c
  6827   0030EC  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
  6828   0030EE  6EDA               	movwf	fsr2h,c
  6829   0030F0  50DF               	movf	indf2,w,c
  6830   0030F2  ECA8  F018         	call	_Lcd_Write_Char
  6831   0030F6  4A07               	infsnz	Lcd_Write_String@i^0,f,c
  6832   0030F8  2A08               	incf	(Lcd_Write_String@i+1)^0,f,c
  6833   0030FA                     l3592:
  6834   0030FA  5007               	movf	Lcd_Write_String@i^0,w,c
  6835   0030FC  2405               	addwf	Lcd_Write_String@a^0,w,c
  6836   0030FE  6ED9               	movwf	fsr2l,c
  6837   003100  5008               	movf	(Lcd_Write_String@i+1)^0,w,c
  6838   003102  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
  6839   003104  6EDA               	movwf	fsr2h,c
  6840   003106  50DF               	movf	indf2,w,c
  6841   003108  A4D8               	btfss	status,2,c
  6842   00310A  EF89  F018         	goto	u3671
  6843   00310E  EF8B  F018         	goto	u3670
  6844   003112                     u3671:
  6845   003112  EF72  F018         	goto	l3588
  6846   003116                     u3670:
  6847   003116  0012               	return		;funcret
  6848   003118                     __end_of_Lcd_Write_String:
  6849                           	callstack 0
  6850                           
  6851 ;; *************** function _Lcd_Write_Char *****************
  6852 ;; Defined at:
  6853 ;;		line 81 in file "lcd.c"
  6854 ;; Parameters:    Size  Location     Type
  6855 ;;  a               1    wreg     unsigned char 
  6856 ;; Auto vars:     Size  Location     Type
  6857 ;;  a               1    3[COMRAM] unsigned char 
  6858 ;;  y               1    2[COMRAM] unsigned char 
  6859 ;;  temp            1    1[COMRAM] unsigned char 
  6860 ;; Return value:  Size  Location     Type
  6861 ;;                  1    wreg      void 
  6862 ;; Registers used:
  6863 ;;		wreg, status,2, status,0, cstack
  6864 ;; Tracked objects:
  6865 ;;		On entry : 0/0
  6866 ;;		On exit  : 0/0
  6867 ;;		Unchanged: 0/0
  6868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6869 ;;      Params:         0       0       0       0       0       0       0       0       0
  6870 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6871 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6872 ;;      Totals:         3       0       0       0       0       0       0       0       0
  6873 ;;Total ram usage:        3 bytes
  6874 ;; Hardware stack levels used: 1
  6875 ;; Hardware stack levels required when called: 1
  6876 ;; This function calls:
  6877 ;;		_Lcd_Port
  6878 ;; This function is called by:
  6879 ;;		_Lcd_Write_String
  6880 ;; This function uses a non-reentrant model
  6881 ;;
  6882                           
  6883                           	psect	text28
  6884   003150                     __ptext28:
  6885                           	callstack 0
  6886   003150                     _Lcd_Write_Char:
  6887                           	callstack 28
  6888                           
  6889                           ;incstack = 0
  6890                           ;Lcd_Write_Char@a stored from wreg
  6891   003150  6E04               	movwf	Lcd_Write_Char@a^0,c
  6892   003152                     
  6893                           ;lcd.c: 81: void Lcd_Write_Char(unsigned char a);lcd.c: 82: {;lcd.c: 83:    char temp,y;
      +                          ;lcd.c: 84:    temp = a&0x0F;
  6894   003152  5004               	movf	Lcd_Write_Char@a^0,w,c
  6895   003154  0B0F               	andlw	15
  6896   003156  6E02               	movwf	Lcd_Write_Char@temp^0,c
  6897                           
  6898                           ;lcd.c: 85:    y = a&0xF0;
  6899   003158  5004               	movf	Lcd_Write_Char@a^0,w,c
  6900   00315A  0BF0               	andlw	240
  6901   00315C  6E03               	movwf	Lcd_Write_Char@y^0,c
  6902   00315E                     
  6903                           ;lcd.c: 86:    LATDbits.LATD2 = 1;
  6904   00315E  848C               	bsf	140,2,c	;volatile
  6905   003160                     
  6906                           ;lcd.c: 87:    Lcd_Port(y>>4);
  6907   003160  3803               	swapf	Lcd_Write_Char@y^0,w,c
  6908   003162  0B0F               	andlw	15
  6909   003164  EC3C  F017         	call	_Lcd_Port
  6910   003168                     
  6911                           ;lcd.c: 88:    LATDbits.LATD3 = 1;
  6912   003168  868C               	bsf	140,3,c	;volatile
  6913   00316A                     
  6914                           ;lcd.c: 89:    _delay((unsigned long)((40)*(16000000/4000000.0)));
  6915   00316A  0E35               	movlw	53
  6916   00316C                     u3807:
  6917   00316C  2EE8               	decfsz	wreg,f,c
  6918   00316E  D7FE               	bra	u3807
  6919   003170  F000               	nop	
  6920   003172                     
  6921                           ;lcd.c: 90:    LATDbits.LATD3 = 0;
  6922   003172  968C               	bcf	140,3,c	;volatile
  6923   003174                     
  6924                           ;lcd.c: 91:    Lcd_Port(temp);
  6925   003174  5002               	movf	Lcd_Write_Char@temp^0,w,c
  6926   003176  EC3C  F017         	call	_Lcd_Port
  6927   00317A                     
  6928                           ;lcd.c: 92:    LATDbits.LATD3 = 1;
  6929   00317A  868C               	bsf	140,3,c	;volatile
  6930   00317C                     
  6931                           ;lcd.c: 93:    _delay((unsigned long)((40)*(16000000/4000000.0)));
  6932   00317C  0E35               	movlw	53
  6933   00317E                     u3817:
  6934   00317E  2EE8               	decfsz	wreg,f,c
  6935   003180  D7FE               	bra	u3817
  6936   003182  F000               	nop	
  6937   003184                     
  6938                           ;lcd.c: 94:    LATDbits.LATD3 = 0;
  6939   003184  968C               	bcf	140,3,c	;volatile
  6940   003186  0012               	return		;funcret
  6941   003188                     __end_of_Lcd_Write_Char:
  6942                           	callstack 0
  6943                           
  6944 ;; *************** function _Lcd_Set_Cursor *****************
  6945 ;; Defined at:
  6946 ;;		line 41 in file "lcd.c"
  6947 ;; Parameters:    Size  Location     Type
  6948 ;;  a               1    wreg     unsigned char 
  6949 ;;  b               1    3[COMRAM] unsigned char 
  6950 ;; Auto vars:     Size  Location     Type
  6951 ;;  a               1    4[COMRAM] unsigned char 
  6952 ;;  temp            1    7[COMRAM] unsigned char 
  6953 ;;  y               1    6[COMRAM] unsigned char 
  6954 ;;  z               1    5[COMRAM] unsigned char 
  6955 ;; Return value:  Size  Location     Type
  6956 ;;                  1    wreg      void 
  6957 ;; Registers used:
  6958 ;;		wreg, status,2, status,0, cstack
  6959 ;; Tracked objects:
  6960 ;;		On entry : 0/0
  6961 ;;		On exit  : 0/0
  6962 ;;		Unchanged: 0/0
  6963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6964 ;;      Params:         1       0       0       0       0       0       0       0       0
  6965 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6966 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6967 ;;      Totals:         5       0       0       0       0       0       0       0       0
  6968 ;;Total ram usage:        5 bytes
  6969 ;; Hardware stack levels used: 1
  6970 ;; Hardware stack levels required when called: 2
  6971 ;; This function calls:
  6972 ;;		_Lcd_Cmd
  6973 ;; This function is called by:
  6974 ;;		_main
  6975 ;; This function uses a non-reentrant model
  6976 ;;
  6977                           
  6978                           	psect	text29
  6979   002E12                     __ptext29:
  6980                           	callstack 0
  6981   002E12                     _Lcd_Set_Cursor:
  6982                           	callstack 28
  6983                           
  6984                           ;incstack = 0
  6985                           ;Lcd_Set_Cursor@a stored from wreg
  6986   002E12  6E05               	movwf	Lcd_Set_Cursor@a^0,c
  6987   002E14                     
  6988                           ;lcd.c: 41: void Lcd_Set_Cursor(unsigned char a, unsigned char b);lcd.c: 42: {;lcd.c: 43
      +                          :  char temp,z,y;;lcd.c: 44:  if(a == 1)
  6989   002E14  0405               	decf	Lcd_Set_Cursor@a^0,w,c
  6990   002E16  A4D8               	btfss	status,2,c
  6991   002E18  EF10  F017         	goto	u3651
  6992   002E1C  EF12  F017         	goto	u3650
  6993   002E20                     u3651:
  6994   002E20  EF23  F017         	goto	l3578
  6995   002E24                     u3650:
  6996   002E24                     
  6997                           ;lcd.c: 45:  {;lcd.c: 46:    temp = 0x80 + b - 1;
  6998   002E24  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  6999   002E26  0F7F               	addlw	127
  7000   002E28  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  7001                           
  7002                           ;lcd.c: 47:   z = temp>>4;
  7003   002E2A  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  7004   002E2C  0B0F               	andlw	15
  7005   002E2E  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  7006                           
  7007                           ;lcd.c: 48:   y = temp & 0x0F;
  7008   002E30  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  7009   002E32  0B0F               	andlw	15
  7010   002E34  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  7011   002E36                     
  7012                           ;lcd.c: 49:   Lcd_Cmd(z);
  7013   002E36  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  7014   002E38  EC2B  F019         	call	_Lcd_Cmd
  7015   002E3C                     
  7016                           ;lcd.c: 50:   Lcd_Cmd(y);
  7017   002E3C  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  7018   002E3E  EC2B  F019         	call	_Lcd_Cmd
  7019                           
  7020                           ;lcd.c: 51:  }
  7021   002E42  EF3B  F017         	goto	l106
  7022   002E46                     l3578:
  7023   002E46  0E02               	movlw	2
  7024   002E48  1805               	xorwf	Lcd_Set_Cursor@a^0,w,c
  7025   002E4A  A4D8               	btfss	status,2,c
  7026   002E4C  EF2A  F017         	goto	u3661
  7027   002E50  EF2C  F017         	goto	u3660
  7028   002E54                     u3661:
  7029   002E54  EF3B  F017         	goto	l106
  7030   002E58                     u3660:
  7031   002E58                     
  7032                           ;lcd.c: 53:  {;lcd.c: 54:   temp = 0xC0 + b - 1;
  7033   002E58  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  7034   002E5A  0FBF               	addlw	191
  7035   002E5C  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  7036                           
  7037                           ;lcd.c: 55:   z = temp>>4;
  7038   002E5E  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  7039   002E60  0B0F               	andlw	15
  7040   002E62  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  7041                           
  7042                           ;lcd.c: 56:   y = temp & 0x0F;
  7043   002E64  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  7044   002E66  0B0F               	andlw	15
  7045   002E68  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  7046   002E6A                     
  7047                           ;lcd.c: 57:   Lcd_Cmd(z);
  7048   002E6A  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  7049   002E6C  EC2B  F019         	call	_Lcd_Cmd
  7050   002E70                     
  7051                           ;lcd.c: 58:   Lcd_Cmd(y);
  7052   002E70  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  7053   002E72  EC2B  F019         	call	_Lcd_Cmd
  7054   002E76                     l106:
  7055   002E76  0012               	return		;funcret
  7056   002E78                     __end_of_Lcd_Set_Cursor:
  7057                           	callstack 0
  7058                           
  7059 ;; *************** function _Lcd_Init *****************
  7060 ;; Defined at:
  7061 ;;		line 62 in file "lcd.c"
  7062 ;; Parameters:    Size  Location     Type
  7063 ;;		None
  7064 ;; Auto vars:     Size  Location     Type
  7065 ;;		None
  7066 ;; Return value:  Size  Location     Type
  7067 ;;                  1    wreg      void 
  7068 ;; Registers used:
  7069 ;;		wreg, status,2, cstack
  7070 ;; Tracked objects:
  7071 ;;		On entry : 0/0
  7072 ;;		On exit  : 0/0
  7073 ;;		Unchanged: 0/0
  7074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7075 ;;      Params:         0       0       0       0       0       0       0       0       0
  7076 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7077 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7078 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7079 ;;Total ram usage:        1 bytes
  7080 ;; Hardware stack levels used: 1
  7081 ;; Hardware stack levels required when called: 2
  7082 ;; This function calls:
  7083 ;;		_Lcd_Cmd
  7084 ;;		_Lcd_Port
  7085 ;; This function is called by:
  7086 ;;		_main
  7087 ;; This function uses a non-reentrant model
  7088 ;;
  7089                           
  7090                           	psect	text30
  7091   002D38                     __ptext30:
  7092                           	callstack 0
  7093   002D38                     _Lcd_Init:
  7094                           	callstack 28
  7095   002D38                     
  7096                           ;lcd.c: 64:   Lcd_Port(0x00);
  7097   002D38  0E00               	movlw	0
  7098   002D3A  EC3C  F017         	call	_Lcd_Port
  7099   002D3E                     
  7100                           ;lcd.c: 65:    _delay((unsigned long)((20)*(16000000/4000.0)));
  7101   002D3E  0E68               	movlw	104
  7102   002D40  6E04               	movwf	??_Lcd_Init^0,c
  7103   002D42  0EE4               	movlw	228
  7104   002D44                     u3827:
  7105   002D44  2EE8               	decfsz	wreg,f,c
  7106   002D46  D7FE               	bra	u3827
  7107   002D48  2E04               	decfsz	??_Lcd_Init^0,f,c
  7108   002D4A  D7FC               	bra	u3827
  7109   002D4C  D000               	nop2	
  7110   002D4E                     
  7111                           ;lcd.c: 66:   Lcd_Cmd(0x03);
  7112   002D4E  0E03               	movlw	3
  7113   002D50  EC2B  F019         	call	_Lcd_Cmd
  7114   002D54                     
  7115                           ;lcd.c: 67:  _delay((unsigned long)((5)*(16000000/4000.0)));
  7116   002D54  0E1A               	movlw	26
  7117   002D56  6E04               	movwf	??_Lcd_Init^0,c
  7118   002D58  0EF8               	movlw	248
  7119   002D5A                     u3837:
  7120   002D5A  2EE8               	decfsz	wreg,f,c
  7121   002D5C  D7FE               	bra	u3837
  7122   002D5E  2E04               	decfsz	??_Lcd_Init^0,f,c
  7123   002D60  D7FC               	bra	u3837
  7124   002D62  D000               	nop2	
  7125   002D64                     
  7126                           ;lcd.c: 68:   Lcd_Cmd(0x03);
  7127   002D64  0E03               	movlw	3
  7128   002D66  EC2B  F019         	call	_Lcd_Cmd
  7129   002D6A                     
  7130                           ;lcd.c: 69:  _delay((unsigned long)((11)*(16000000/4000.0)));
  7131   002D6A  0E3A               	movlw	58
  7132   002D6C  6E04               	movwf	??_Lcd_Init^0,c
  7133   002D6E  0E23               	movlw	35
  7134   002D70                     u3847:
  7135   002D70  2EE8               	decfsz	wreg,f,c
  7136   002D72  D7FE               	bra	u3847
  7137   002D74  2E04               	decfsz	??_Lcd_Init^0,f,c
  7138   002D76  D7FC               	bra	u3847
  7139   002D78  F000               	nop	
  7140   002D7A                     
  7141                           ;lcd.c: 70:   Lcd_Cmd(0x03);
  7142   002D7A  0E03               	movlw	3
  7143   002D7C  EC2B  F019         	call	_Lcd_Cmd
  7144   002D80                     
  7145                           ;lcd.c: 72:   Lcd_Cmd(0x02);
  7146   002D80  0E02               	movlw	2
  7147   002D82  EC2B  F019         	call	_Lcd_Cmd
  7148   002D86                     
  7149                           ;lcd.c: 73:   Lcd_Cmd(0x02);
  7150   002D86  0E02               	movlw	2
  7151   002D88  EC2B  F019         	call	_Lcd_Cmd
  7152   002D8C                     
  7153                           ;lcd.c: 74:   Lcd_Cmd(0x08);
  7154   002D8C  0E08               	movlw	8
  7155   002D8E  EC2B  F019         	call	_Lcd_Cmd
  7156   002D92                     
  7157                           ;lcd.c: 75:   Lcd_Cmd(0x00);
  7158   002D92  0E00               	movlw	0
  7159   002D94  EC2B  F019         	call	_Lcd_Cmd
  7160   002D98                     
  7161                           ;lcd.c: 76:   Lcd_Cmd(0x0C);
  7162   002D98  0E0C               	movlw	12
  7163   002D9A  EC2B  F019         	call	_Lcd_Cmd
  7164   002D9E                     
  7165                           ;lcd.c: 77:   Lcd_Cmd(0x00);
  7166   002D9E  0E00               	movlw	0
  7167   002DA0  EC2B  F019         	call	_Lcd_Cmd
  7168   002DA4                     
  7169                           ;lcd.c: 78:   Lcd_Cmd(0x06);
  7170   002DA4  0E06               	movlw	6
  7171   002DA6  EC2B  F019         	call	_Lcd_Cmd
  7172   002DAA  0012               	return		;funcret
  7173   002DAC                     __end_of_Lcd_Init:
  7174                           	callstack 0
  7175                           
  7176 ;; *************** function _Lcd_Clear *****************
  7177 ;; Defined at:
  7178 ;;		line 35 in file "lcd.c"
  7179 ;; Parameters:    Size  Location     Type
  7180 ;;		None
  7181 ;; Auto vars:     Size  Location     Type
  7182 ;;		None
  7183 ;; Return value:  Size  Location     Type
  7184 ;;                  1    wreg      void 
  7185 ;; Registers used:
  7186 ;;		wreg, status,2, cstack
  7187 ;; Tracked objects:
  7188 ;;		On entry : 0/0
  7189 ;;		On exit  : 0/0
  7190 ;;		Unchanged: 0/0
  7191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7192 ;;      Params:         0       0       0       0       0       0       0       0       0
  7193 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7194 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7195 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7196 ;;Total ram usage:        0 bytes
  7197 ;; Hardware stack levels used: 1
  7198 ;; Hardware stack levels required when called: 2
  7199 ;; This function calls:
  7200 ;;		_Lcd_Cmd
  7201 ;; This function is called by:
  7202 ;;		_main
  7203 ;; This function uses a non-reentrant model
  7204 ;;
  7205                           
  7206                           	psect	text31
  7207   003294                     __ptext31:
  7208                           	callstack 0
  7209   003294                     _Lcd_Clear:
  7210                           	callstack 28
  7211   003294                     
  7212                           ;lcd.c: 37:  Lcd_Cmd(0);
  7213   003294  0E00               	movlw	0
  7214   003296  EC2B  F019         	call	_Lcd_Cmd
  7215                           
  7216                           ;lcd.c: 38:  Lcd_Cmd(1);
  7217   00329A  0E01               	movlw	1
  7218   00329C  EC2B  F019         	call	_Lcd_Cmd
  7219   0032A0  0012               	return		;funcret
  7220   0032A2                     __end_of_Lcd_Clear:
  7221                           	callstack 0
  7222                           
  7223 ;; *************** function _Lcd_Cmd *****************
  7224 ;; Defined at:
  7225 ;;		line 26 in file "lcd.c"
  7226 ;; Parameters:    Size  Location     Type
  7227 ;;  a               1    wreg     unsigned char 
  7228 ;; Auto vars:     Size  Location     Type
  7229 ;;  a               1    2[COMRAM] unsigned char 
  7230 ;; Return value:  Size  Location     Type
  7231 ;;                  1    wreg      void 
  7232 ;; Registers used:
  7233 ;;		wreg, status,2, cstack
  7234 ;; Tracked objects:
  7235 ;;		On entry : 0/0
  7236 ;;		On exit  : 0/0
  7237 ;;		Unchanged: 0/0
  7238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7239 ;;      Params:         0       0       0       0       0       0       0       0       0
  7240 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7241 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7242 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7243 ;;Total ram usage:        2 bytes
  7244 ;; Hardware stack levels used: 1
  7245 ;; Hardware stack levels required when called: 1
  7246 ;; This function calls:
  7247 ;;		_Lcd_Port
  7248 ;; This function is called by:
  7249 ;;		_Lcd_Clear
  7250 ;;		_Lcd_Set_Cursor
  7251 ;;		_Lcd_Init
  7252 ;;		_Lcd_Shift_Right
  7253 ;;		_Lcd_Shift_Left
  7254 ;; This function uses a non-reentrant model
  7255 ;;
  7256                           
  7257                           	psect	text32
  7258   003256                     __ptext32:
  7259                           	callstack 0
  7260   003256                     _Lcd_Cmd:
  7261                           	callstack 28
  7262                           
  7263                           ;incstack = 0
  7264                           ;Lcd_Cmd@a stored from wreg
  7265   003256  6E03               	movwf	Lcd_Cmd@a^0,c
  7266   003258                     
  7267                           ;lcd.c: 26: void Lcd_Cmd(unsigned char a);lcd.c: 27: {;lcd.c: 28:  LATDbits.LATD2 = 0;
  7268   003258  948C               	bcf	140,2,c	;volatile
  7269   00325A                     
  7270                           ;lcd.c: 29:  Lcd_Port(a);
  7271   00325A  5003               	movf	Lcd_Cmd@a^0,w,c
  7272   00325C  EC3C  F017         	call	_Lcd_Port
  7273   003260                     
  7274                           ;lcd.c: 30:  LATDbits.LATD3 = 1;
  7275   003260  868C               	bsf	140,3,c	;volatile
  7276   003262                     
  7277                           ;lcd.c: 31:         _delay((unsigned long)((4)*(16000000/4000.0)));
  7278   003262  0E15               	movlw	21
  7279   003264  6E02               	movwf	??_Lcd_Cmd^0,c
  7280   003266  0EC6               	movlw	198
  7281   003268                     u3857:
  7282   003268  2EE8               	decfsz	wreg,f,c
  7283   00326A  D7FE               	bra	u3857
  7284   00326C  2E02               	decfsz	??_Lcd_Cmd^0,f,c
  7285   00326E  D7FC               	bra	u3857
  7286   003270  D000               	nop2	
  7287   003272                     
  7288                           ;lcd.c: 32:         LATDbits.LATD3 = 0;
  7289   003272  968C               	bcf	140,3,c	;volatile
  7290   003274  0012               	return		;funcret
  7291   003276                     __end_of_Lcd_Cmd:
  7292                           	callstack 0
  7293                           
  7294 ;; *************** function _Lcd_Port *****************
  7295 ;; Defined at:
  7296 ;;		line 3 in file "lcd.c"
  7297 ;; Parameters:    Size  Location     Type
  7298 ;;  a               1    wreg     unsigned char 
  7299 ;; Auto vars:     Size  Location     Type
  7300 ;;  a               1    0[COMRAM] unsigned char 
  7301 ;; Return value:  Size  Location     Type
  7302 ;;                  1    wreg      void 
  7303 ;; Registers used:
  7304 ;;		wreg
  7305 ;; Tracked objects:
  7306 ;;		On entry : 0/0
  7307 ;;		On exit  : 0/0
  7308 ;;		Unchanged: 0/0
  7309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7310 ;;      Params:         0       0       0       0       0       0       0       0       0
  7311 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7312 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7313 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7314 ;;Total ram usage:        1 bytes
  7315 ;; Hardware stack levels used: 1
  7316 ;; This function calls:
  7317 ;;		Nothing
  7318 ;; This function is called by:
  7319 ;;		_Lcd_Cmd
  7320 ;;		_Lcd_Init
  7321 ;;		_Lcd_Write_Char
  7322 ;; This function uses a non-reentrant model
  7323 ;;
  7324                           
  7325                           	psect	text33
  7326   002E78                     __ptext33:
  7327                           	callstack 0
  7328   002E78                     _Lcd_Port:
  7329                           	callstack 28
  7330                           
  7331                           ;incstack = 0
  7332                           ;Lcd_Port@a stored from wreg
  7333   002E78  6E01               	movwf	Lcd_Port@a^0,c
  7334   002E7A                     
  7335                           ;lcd.c: 3: void Lcd_Port(unsigned char a);lcd.c: 4: {;lcd.c: 5:  if(a & 1)
  7336   002E7A  A001               	btfss	Lcd_Port@a^0,0,c
  7337   002E7C  EF42  F017         	goto	u3541
  7338   002E80  EF44  F017         	goto	u3540
  7339   002E84                     u3541:
  7340   002E84  EF47  F017         	goto	l86
  7341   002E88                     u3540:
  7342   002E88                     
  7343                           ;lcd.c: 6:   LATDbits.LATD4 = 1;
  7344   002E88  888C               	bsf	140,4,c	;volatile
  7345   002E8A  EF48  F017         	goto	l3362
  7346   002E8E                     l86:
  7347                           
  7348                           ;lcd.c: 8:   LATDbits.LATD4 = 0;
  7349   002E8E  988C               	bcf	140,4,c	;volatile
  7350   002E90                     l3362:
  7351                           
  7352                           ;lcd.c: 10:  if(a & 2)
  7353   002E90  A201               	btfss	Lcd_Port@a^0,1,c
  7354   002E92  EF4D  F017         	goto	u3551
  7355   002E96  EF4F  F017         	goto	u3550
  7356   002E9A                     u3551:
  7357   002E9A  EF52  F017         	goto	l88
  7358   002E9E                     u3550:
  7359   002E9E                     
  7360                           ;lcd.c: 11:   LATDbits.LATD5 = 1;
  7361   002E9E  8A8C               	bsf	140,5,c	;volatile
  7362   002EA0  EF53  F017         	goto	l3366
  7363   002EA4                     l88:
  7364                           
  7365                           ;lcd.c: 13:   LATDbits.LATD5 = 0;
  7366   002EA4  9A8C               	bcf	140,5,c	;volatile
  7367   002EA6                     l3366:
  7368                           
  7369                           ;lcd.c: 15:  if(a & 4)
  7370   002EA6  A401               	btfss	Lcd_Port@a^0,2,c
  7371   002EA8  EF58  F017         	goto	u3561
  7372   002EAC  EF5A  F017         	goto	u3560
  7373   002EB0                     u3561:
  7374   002EB0  EF5D  F017         	goto	l90
  7375   002EB4                     u3560:
  7376   002EB4                     
  7377                           ;lcd.c: 16:   LATDbits.LATD6 = 1;
  7378   002EB4  8C8C               	bsf	140,6,c	;volatile
  7379   002EB6  EF5E  F017         	goto	l3370
  7380   002EBA                     l90:
  7381                           
  7382                           ;lcd.c: 18:   LATDbits.LATD6 = 0;
  7383   002EBA  9C8C               	bcf	140,6,c	;volatile
  7384   002EBC                     l3370:
  7385                           
  7386                           ;lcd.c: 20:  if(a & 8)
  7387   002EBC  A601               	btfss	Lcd_Port@a^0,3,c
  7388   002EBE  EF63  F017         	goto	u3571
  7389   002EC2  EF65  F017         	goto	u3570
  7390   002EC6                     u3571:
  7391   002EC6  EF68  F017         	goto	l92
  7392   002ECA                     u3570:
  7393   002ECA                     
  7394                           ;lcd.c: 21:   LATDbits.LATD7 = 1;
  7395   002ECA  8E8C               	bsf	140,7,c	;volatile
  7396   002ECC  EF69  F017         	goto	l94
  7397   002ED0                     l92:
  7398                           
  7399                           ;lcd.c: 23:   LATDbits.LATD7 = 0;
  7400   002ED0  9E8C               	bcf	140,7,c	;volatile
  7401   002ED2                     l94:
  7402   002ED2  0012               	return		;funcret
  7403   002ED4                     __end_of_Lcd_Port:
  7404                           	callstack 0
  7405                           
  7406 ;; *************** function _Config_Port *****************
  7407 ;; Defined at:
  7408 ;;		line 61 in file "main.c"
  7409 ;; Parameters:    Size  Location     Type
  7410 ;;		None
  7411 ;; Auto vars:     Size  Location     Type
  7412 ;;		None
  7413 ;; Return value:  Size  Location     Type
  7414 ;;                  1    wreg      void 
  7415 ;; Registers used:
  7416 ;;		wreg, status,2
  7417 ;; Tracked objects:
  7418 ;;		On entry : 0/0
  7419 ;;		On exit  : 0/0
  7420 ;;		Unchanged: 0/0
  7421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7422 ;;      Params:         0       0       0       0       0       0       0       0       0
  7423 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7424 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7425 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7426 ;;Total ram usage:        0 bytes
  7427 ;; Hardware stack levels used: 1
  7428 ;; This function calls:
  7429 ;;		Nothing
  7430 ;; This function is called by:
  7431 ;;		_main
  7432 ;; This function uses a non-reentrant model
  7433 ;;
  7434                           
  7435                           	psect	text34
  7436   003234                     __ptext34:
  7437                           	callstack 0
  7438   003234                     _Config_Port:
  7439                           	callstack 30
  7440   003234                     
  7441                           ;main.c: 63:     LATD=0x00;
  7442   003234  0E00               	movlw	0
  7443   003236  6E8C               	movwf	140,c	;volatile
  7444   003238                     
  7445                           ;main.c: 64:     LATCbits.LATC0 = 0;
  7446   003238  908B               	bcf	139,0,c	;volatile
  7447                           
  7448                           ;main.c: 67:     SLRCON=0b00000000;
  7449   00323A  0E00               	movlw	0
  7450   00323C  6E7A               	movwf	122,c	;volatile
  7451   00323E                     
  7452                           ;main.c: 70:     ANSELBbits.ANSB0=1;
  7453   00323E  010F               	movlb	15	; () banked
  7454   003240  815C               	bsf	92,0,b	;volatile
  7455   003242                     
  7456                           ; BSR set to: 15
  7457                           ;main.c: 71:     ANSELBbits.ANSB1=1;
  7458   003242  835C               	bsf	92,1,b	;volatile
  7459   003244                     
  7460                           ; BSR set to: 15
  7461                           ;main.c: 72:     ANSELBbits.ANSB2=1;
  7462   003244  855C               	bsf	92,2,b	;volatile
  7463                           
  7464                           ;main.c: 74:     ANSELD = 0x00;
  7465   003246  0E00               	movlw	0
  7466   003248  6F5E               	movwf	94,b	;volatile
  7467                           
  7468                           ;main.c: 77:     TRISD=0x00;
  7469   00324A  0E00               	movlw	0
  7470   00324C  6E95               	movwf	149,c	;volatile
  7471   00324E                     
  7472                           ; BSR set to: 15
  7473                           ;main.c: 78:     TRISCbits.TRISC0 = 0;
  7474   00324E  9094               	bcf	148,0,c	;volatile
  7475   003250                     
  7476                           ; BSR set to: 15
  7477                           ;main.c: 80:     TRISAbits.TRISA0 = 1;
  7478   003250  8092               	bsf	146,0,c	;volatile
  7479   003252                     
  7480                           ; BSR set to: 15
  7481                           ;main.c: 81:     TRISAbits.TRISA1 = 1;
  7482   003252  8292               	bsf	146,1,c	;volatile
  7483   003254                     
  7484                           ; BSR set to: 15
  7485   003254  0012               	return		;funcret
  7486   003256                     __end_of_Config_Port:
  7487                           	callstack 0
  7488                           
  7489 ;; *************** function _Config_Clock *****************
  7490 ;; Defined at:
  7491 ;;		line 56 in file "main.c"
  7492 ;; Parameters:    Size  Location     Type
  7493 ;;		None
  7494 ;; Auto vars:     Size  Location     Type
  7495 ;;		None
  7496 ;; Return value:  Size  Location     Type
  7497 ;;                  1    wreg      void 
  7498 ;; Registers used:
  7499 ;;		wreg, status,2
  7500 ;; Tracked objects:
  7501 ;;		On entry : 0/0
  7502 ;;		On exit  : 0/0
  7503 ;;		Unchanged: 0/0
  7504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7505 ;;      Params:         0       0       0       0       0       0       0       0       0
  7506 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7507 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7508 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7509 ;;Total ram usage:        0 bytes
  7510 ;; Hardware stack levels used: 1
  7511 ;; This function calls:
  7512 ;;		Nothing
  7513 ;; This function is called by:
  7514 ;;		_main
  7515 ;; This function uses a non-reentrant model
  7516 ;;
  7517                           
  7518                           	psect	text35
  7519   0032A2                     __ptext35:
  7520                           	callstack 0
  7521   0032A2                     _Config_Clock:
  7522                           	callstack 30
  7523   0032A2                     
  7524                           ;main.c: 57:     OSCCONbits.IRCF=0b111;
  7525   0032A2  0E70               	movlw	112
  7526   0032A4  12D3               	iorwf	211,f,c	;volatile
  7527                           
  7528                           ;main.c: 58:     OSCCONbits.SCS=0b10;
  7529   0032A6  50D3               	movf	211,w,c	;volatile
  7530   0032A8  0BFC               	andlw	-4
  7531   0032AA  0902               	iorlw	2
  7532   0032AC  6ED3               	movwf	211,c	;volatile
  7533   0032AE  0012               	return		;funcret
  7534   0032B0                     __end_of_Config_Clock:
  7535                           	callstack 0
  7536                           
  7537 ;; *************** function _ADC_Read *****************
  7538 ;; Defined at:
  7539 ;;		line 15 in file "ADC_libreria.c"
  7540 ;; Parameters:    Size  Location     Type
  7541 ;;  channel         1    wreg     enum E4854
  7542 ;; Auto vars:     Size  Location     Type
  7543 ;;  channel         1    4[COMRAM] enum E4854
  7544 ;; Return value:  Size  Location     Type
  7545 ;;                  2    0[COMRAM] unsigned short 
  7546 ;; Registers used:
  7547 ;;		wreg, status,2, status,0
  7548 ;; Tracked objects:
  7549 ;;		On entry : 0/0
  7550 ;;		On exit  : 0/0
  7551 ;;		Unchanged: 0/0
  7552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7553 ;;      Params:         2       0       0       0       0       0       0       0       0
  7554 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7555 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7556 ;;      Totals:         5       0       0       0       0       0       0       0       0
  7557 ;;Total ram usage:        5 bytes
  7558 ;; Hardware stack levels used: 1
  7559 ;; This function calls:
  7560 ;;		Nothing
  7561 ;; This function is called by:
  7562 ;;		_main
  7563 ;; This function uses a non-reentrant model
  7564 ;;
  7565                           
  7566                           	psect	text36
  7567   003188                     __ptext36:
  7568                           	callstack 0
  7569   003188                     _ADC_Read:
  7570                           	callstack 30
  7571                           
  7572                           ;incstack = 0
  7573                           ;ADC_Read@channel stored from wreg
  7574   003188  6E05               	movwf	ADC_Read@channel^0,c
  7575   00318A                     
  7576                           ;ADC_libreria.c: 17:     ADCON0bits.CHS =channel;
  7577   00318A  C005  F003         	movff	ADC_Read@channel,??_ADC_Read
  7578   00318E  4603               	rlncf	??_ADC_Read^0,f,c
  7579   003190  4603               	rlncf	??_ADC_Read^0,f,c
  7580   003192  50C2               	movf	194,w,c	;volatile
  7581   003194  1803               	xorwf	??_ADC_Read^0,w,c
  7582   003196  0B83               	andlw	-125
  7583   003198  1803               	xorwf	??_ADC_Read^0,w,c
  7584   00319A  6EC2               	movwf	194,c	;volatile
  7585   00319C                     
  7586                           ;ADC_libreria.c: 18:     ADCON0bits.GO_DONE=1;
  7587   00319C  82C2               	bsf	194,1,c	;volatile
  7588   00319E                     l16:
  7589   00319E  B2C2               	btfsc	194,1,c	;volatile
  7590   0031A0  EFD4  F018         	goto	u3641
  7591   0031A4  EFD6  F018         	goto	u3640
  7592   0031A8                     u3641:
  7593   0031A8  EFCF  F018         	goto	l16
  7594   0031AC                     u3640:
  7595   0031AC                     
  7596                           ;ADC_libreria.c: 20:     return (uint16_t)((ADRESH<<8)+(ADRESL));
  7597   0031AC  50C4               	movf	196,w,c	;volatile
  7598   0031AE  6E04               	movwf	(??_ADC_Read+1)^0,c
  7599   0031B0  6A03               	clrf	??_ADC_Read^0,c
  7600   0031B2  50C3               	movf	195,w,c	;volatile
  7601   0031B4  2403               	addwf	??_ADC_Read^0,w,c
  7602   0031B6  6E01               	movwf	?_ADC_Read^0,c
  7603   0031B8  0E00               	movlw	0
  7604   0031BA  2004               	addwfc	(??_ADC_Read+1)^0,w,c
  7605   0031BC  6E02               	movwf	(?_ADC_Read+1)^0,c
  7606   0031BE  0012               	return		;funcret
  7607   0031C0                     __end_of_ADC_Read:
  7608                           	callstack 0
  7609                           
  7610 ;; *************** function _ADC_Init *****************
  7611 ;; Defined at:
  7612 ;;		line 4 in file "ADC_libreria.c"
  7613 ;; Parameters:    Size  Location     Type
  7614 ;;		None
  7615 ;; Auto vars:     Size  Location     Type
  7616 ;;		None
  7617 ;; Return value:  Size  Location     Type
  7618 ;;                  1    wreg      void 
  7619 ;; Registers used:
  7620 ;;		wreg, status,2
  7621 ;; Tracked objects:
  7622 ;;		On entry : 0/0
  7623 ;;		On exit  : 0/0
  7624 ;;		Unchanged: 0/0
  7625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7626 ;;      Params:         0       0       0       0       0       0       0       0       0
  7627 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7628 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7629 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7630 ;;Total ram usage:        0 bytes
  7631 ;; Hardware stack levels used: 1
  7632 ;; This function calls:
  7633 ;;		Nothing
  7634 ;; This function is called by:
  7635 ;;		_main
  7636 ;; This function uses a non-reentrant model
  7637 ;;
  7638                           
  7639                           	psect	text37
  7640   003276                     __ptext37:
  7641                           	callstack 0
  7642   003276                     _ADC_Init:
  7643                           	callstack 30
  7644   003276                     
  7645                           ;ADC_libreria.c: 6:     ADCON1bits.PVCFG = 0b00;
  7646   003276  0EF3               	movlw	-13
  7647   003278  16C1               	andwf	193,f,c	;volatile
  7648                           
  7649                           ;ADC_libreria.c: 7:     ADCON1bits.NVCFG = 0b00;
  7650   00327A  0EFC               	movlw	-4
  7651   00327C  16C1               	andwf	193,f,c	;volatile
  7652   00327E                     
  7653                           ;ADC_libreria.c: 8:     ADCON2bits.ADFM = 1;
  7654   00327E  8EC0               	bsf	192,7,c	;volatile
  7655                           
  7656                           ;ADC_libreria.c: 9:     ADCON2bits.ACQT = 0b100;
  7657   003280  50C0               	movf	192,w,c	;volatile
  7658   003282  0BC7               	andlw	-57
  7659   003284  0920               	iorlw	32
  7660   003286  6EC0               	movwf	192,c	;volatile
  7661                           
  7662                           ;ADC_libreria.c: 10:     ADCON2bits.ADCS = 0b101;
  7663   003288  50C0               	movf	192,w,c	;volatile
  7664   00328A  0BF8               	andlw	-8
  7665   00328C  0905               	iorlw	5
  7666   00328E  6EC0               	movwf	192,c	;volatile
  7667   003290                     
  7668                           ;ADC_libreria.c: 11:     ADCON0bits.ADON = 1;
  7669   003290  80C2               	bsf	194,0,c	;volatile
  7670   003292  0012               	return		;funcret
  7671   003294                     __end_of_ADC_Init:
  7672                           	callstack 0
  7673                           
  7674                           	psect	rparam
  7675   000000                     
  7676                           	psect	idloc
  7677                           
  7678                           ;Config register IDLOC0 @ 0x200000
  7679                           ;	unspecified, using default values
  7680   200000                     	org	2097152
  7681   200000  FF                 	db	255
  7682                           
  7683                           ;Config register IDLOC1 @ 0x200001
  7684                           ;	unspecified, using default values
  7685   200001                     	org	2097153
  7686   200001  FF                 	db	255
  7687                           
  7688                           ;Config register IDLOC2 @ 0x200002
  7689                           ;	unspecified, using default values
  7690   200002                     	org	2097154
  7691   200002  FF                 	db	255
  7692                           
  7693                           ;Config register IDLOC3 @ 0x200003
  7694                           ;	unspecified, using default values
  7695   200003                     	org	2097155
  7696   200003  FF                 	db	255
  7697                           
  7698                           ;Config register IDLOC4 @ 0x200004
  7699                           ;	unspecified, using default values
  7700   200004                     	org	2097156
  7701   200004  FF                 	db	255
  7702                           
  7703                           ;Config register IDLOC5 @ 0x200005
  7704                           ;	unspecified, using default values
  7705   200005                     	org	2097157
  7706   200005  FF                 	db	255
  7707                           
  7708                           ;Config register IDLOC6 @ 0x200006
  7709                           ;	unspecified, using default values
  7710   200006                     	org	2097158
  7711   200006  FF                 	db	255
  7712                           
  7713                           ;Config register IDLOC7 @ 0x200007
  7714                           ;	unspecified, using default values
  7715   200007                     	org	2097159
  7716   200007  FF                 	db	255
  7717                           
  7718                           	psect	config
  7719                           
  7720                           ;Config register CONFIG1L @ 0x300000
  7721                           ;	PLL Selection
  7722                           ;	PLLSEL = PLL4X, 4x clock multiplier
  7723                           ;	PLL Enable Configuration bit
  7724                           ;	CFGPLLEN = OFF, PLL Disabled (firmware controlled)
  7725                           ;	CPU System Clock Postscaler
  7726                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
  7727                           ;	Low Speed USB mode with 48 MHz system clock
  7728                           ;	LS48MHZ = SYS24X4, System clock at 24 MHz, USB clock divider is set to 4
  7729   300000                     	org	3145728
  7730   300000  00                 	db	0
  7731                           
  7732                           ;Config register CONFIG1H @ 0x300001
  7733                           ;	Oscillator Selection
  7734                           ;	FOSC = INTOSCIO, Internal oscillator
  7735                           ;	Primary Oscillator Shutdown
  7736                           ;	PCLKEN = ON, Primary oscillator enabled
  7737                           ;	Fail-Safe Clock Monitor
  7738                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  7739                           ;	Internal/External Oscillator Switchover
  7740                           ;	IESO = OFF, Oscillator Switchover mode disabled
  7741   300001                     	org	3145729
  7742   300001  28                 	db	40
  7743                           
  7744                           ;Config register CONFIG2L @ 0x300002
  7745                           ;	Power-up Timer Enable
  7746                           ;	nPWRTEN = ON, Power up timer enabled
  7747                           ;	Brown-out Reset Enable
  7748                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
  7749                           ;	Brown-out Reset Voltage
  7750                           ;	BORV = 190, BOR set to 1.9V nominal
  7751                           ;	Low-Power Brown-out Reset
  7752                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  7753   300002                     	org	3145730
  7754   300002  5E                 	db	94
  7755                           
  7756                           ;Config register CONFIG2H @ 0x300003
  7757                           ;	Watchdog Timer Enable bits
  7758                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  7759                           ;	Watchdog Timer Postscaler
  7760                           ;	WDTPS = 32768, 1:32768
  7761   300003                     	org	3145731
  7762   300003  3C                 	db	60
  7763                           
  7764                           ; Padding undefined space
  7765   300004                     	org	3145732
  7766   300004  FF                 	db	255
  7767                           
  7768                           ;Config register CONFIG3H @ 0x300005
  7769                           ;	CCP2 MUX bit
  7770                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  7771                           ;	PORTB A/D Enable bit
  7772                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  7773                           ;	Timer3 Clock Input MUX bit
  7774                           ;	T3CMX = RC0, T3CKI function is on RC0
  7775                           ;	SDO Output MUX bit
  7776                           ;	SDOMX = RB3, SDO function is on RB3
  7777                           ;	Master Clear Reset Pin Enable
  7778                           ;	MCLRE = OFF, RE3 input pin enabled; external MCLR disabled
  7779   300005                     	org	3145733
  7780   300005  53                 	db	83
  7781                           
  7782                           ;Config register CONFIG4L @ 0x300006
  7783                           ;	Stack Full/Underflow Reset
  7784                           ;	STVREN = ON, Stack full/underflow will cause Reset
  7785                           ;	Single-Supply ICSP Enable bit
  7786                           ;	LVP = OFF, Single-Supply ICSP disabled
  7787                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  7788                           ;	ICPRT = OFF, ICPORT disabled
  7789                           ;	Extended Instruction Set Enable bit
  7790                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  7791                           ;	Background Debugger Enable bit
  7792                           ;	DEBUG = 0x1, unprogrammed default
  7793   300006                     	org	3145734
  7794   300006  81                 	db	129
  7795                           
  7796                           ; Padding undefined space
  7797   300007                     	org	3145735
  7798   300007  FF                 	db	255
  7799                           
  7800                           ;Config register CONFIG5L @ 0x300008
  7801                           ;	Block 0 Code Protect
  7802                           ;	CP0 = OFF, Block 0 is not code-protected
  7803                           ;	Block 1 Code Protect
  7804                           ;	CP1 = OFF, Block 1 is not code-protected
  7805                           ;	Block 2 Code Protect
  7806                           ;	CP2 = OFF, Block 2 is not code-protected
  7807                           ;	Block 3 Code Protect
  7808                           ;	CP3 = OFF, Block 3 is not code-protected
  7809   300008                     	org	3145736
  7810   300008  0F                 	db	15
  7811                           
  7812                           ;Config register CONFIG5H @ 0x300009
  7813                           ;	Boot Block Code Protect
  7814                           ;	CPB = OFF, Boot block is not code-protected
  7815                           ;	Data EEPROM Code Protect
  7816                           ;	CPD = OFF, Data EEPROM is not code-protected
  7817   300009                     	org	3145737
  7818   300009  C0                 	db	192
  7819                           
  7820                           ;Config register CONFIG6L @ 0x30000A
  7821                           ;	Block 0 Write Protect
  7822                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
  7823                           ;	Block 1 Write Protect
  7824                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
  7825                           ;	Block 2 Write Protect
  7826                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
  7827                           ;	Block 3 Write Protect
  7828                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
  7829   30000A                     	org	3145738
  7830   30000A  0F                 	db	15
  7831                           
  7832                           ;Config register CONFIG6H @ 0x30000B
  7833                           ;	Configuration Registers Write Protect
  7834                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  7835                           ;	Boot Block Write Protect
  7836                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
  7837                           ;	Data EEPROM Write Protect
  7838                           ;	WRTD = OFF, Data EEPROM is not write-protected
  7839   30000B                     	org	3145739
  7840   30000B  E0                 	db	224
  7841                           
  7842                           ;Config register CONFIG7L @ 0x30000C
  7843                           ;	Block 0 Table Read Protect
  7844                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
  7845                           ;	Block 1 Table Read Protect
  7846                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
  7847                           ;	Block 2 Table Read Protect
  7848                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
  7849                           ;	Block 3 Table Read Protect
  7850                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
  7851   30000C                     	org	3145740
  7852   30000C  0F                 	db	15
  7853                           
  7854                           ;Config register CONFIG7H @ 0x30000D
  7855                           ;	Boot Block Table Read Protect
  7856                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
  7857   30000D                     	org	3145741
  7858   30000D  40                 	db	64
  7859                           tosu	equ	0xFFF
  7860                           tosh	equ	0xFFE
  7861                           tosl	equ	0xFFD
  7862                           stkptr	equ	0xFFC
  7863                           pclatu	equ	0xFFB
  7864                           pclath	equ	0xFFA
  7865                           pcl	equ	0xFF9
  7866                           tblptru	equ	0xFF8
  7867                           tblptrh	equ	0xFF7
  7868                           tblptrl	equ	0xFF6
  7869                           tablat	equ	0xFF5
  7870                           prodh	equ	0xFF4
  7871                           prodl	equ	0xFF3
  7872                           indf0	equ	0xFEF
  7873                           postinc0	equ	0xFEE
  7874                           postdec0	equ	0xFED
  7875                           preinc0	equ	0xFEC
  7876                           plusw0	equ	0xFEB
  7877                           fsr0h	equ	0xFEA
  7878                           fsr0l	equ	0xFE9
  7879                           wreg	equ	0xFE8
  7880                           indf1	equ	0xFE7
  7881                           postinc1	equ	0xFE6
  7882                           postdec1	equ	0xFE5
  7883                           preinc1	equ	0xFE4
  7884                           plusw1	equ	0xFE3
  7885                           fsr1h	equ	0xFE2
  7886                           fsr1l	equ	0xFE1
  7887                           bsr	equ	0xFE0
  7888                           indf2	equ	0xFDF
  7889                           postinc2	equ	0xFDE
  7890                           postdec2	equ	0xFDD
  7891                           preinc2	equ	0xFDC
  7892                           plusw2	equ	0xFDB
  7893                           fsr2h	equ	0xFDA
  7894                           fsr2l	equ	0xFD9
  7895                           status	equ	0xFD8

Data Sizes:
    Strings     29
    Constant    0
    Data        0
    BSS         121
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      94
    BANK0           160     66     107
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_6(CODE[4]), STR_3(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_6(CODE[4]), STR_3(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_2(CODE[10]), STR_1(CODE[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_2(CODE[10]), STR_1(CODE[11]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 11
		 -> STR_2(CODE[10]), STR_1(CODE[11]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 11
		 -> STR_2(CODE[10]), STR_1(CODE[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S1060$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_2(CODE[10]), STR_1(CODE[11]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> str_buffeLcd(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S981$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S981$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> str_buffeLcd(BANK0[20]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    _atoi->___wmul
    ___xxtofl->_ADC_Read
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   28261
                                             64 BANK0      2     2      0
                           _ADC_Init
                           _ADC_Read
                       _Config_Clock
                        _Config_Port
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                             ___flge
                            ___flmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    15      8   22755
                                             81 COMRAM    13    13      0
                                             56 BANK0      8     0      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   22248
                                             79 COMRAM     2     2      0
                                             50 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           24    18      6   21887
                                             65 COMRAM    14    14      0
                                             44 BANK0      6     0      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              54    47      7   19037
                                             56 COMRAM     9     2      7
                                              0 BANK0     44    44      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     4      4     400
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2455
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     371
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     294
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             25 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     457
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2889
                                             44 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2808
                                             19 COMRAM    25    17      8
                           _ADC_Read (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     942
                                             44 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2007
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 9     7      2    1080
                                              6 COMRAM     9     7      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              5     3      2     207
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              4     2      2     237
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     474
                                              5 COMRAM    14    10      4
                           _ADC_Read (ARG)
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     4     2      2     420
                                              4 COMRAM     4     2      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       3     3      0     178
                                              1 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       5     4      1     532
                                              3 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     198
                                              3 COMRAM     1     1      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     2      0     110
                                              1 COMRAM     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Config_Port                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Config_Clock                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_Read
   _Config_Clock
   _Config_Port
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   ___flge
     ___flmul (ARG)
       _ADC_Read (ARG)
       ___xxtofl (ARG)
         _ADC_Read (ARG)
   ___flmul
   ___xxtofl
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
             _fputc
               _putch
             _fputs
               _fputc
           _strcpy
         _fputc
         _isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      30        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     42      6B       5       66.9%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5E       1       98.9%
BITBIGSFRhhh        2C      0       0      20        0.0%
BITBIGSFRlhh        2A      0       0      22        0.0%
BITBIGSFRlllhh      1B      0       0      26        0.0%
BITBIGSFRllh        10      0       0      25        0.0%
BITBIGSFRhhl         E      0       0      21        0.0%
BITBIGSFRllll        9      0       0      28        0.0%
BITBIGSFRlhll        5      0       0      24        0.0%
BITBIGSFRlhlh        1      0       0      23        0.0%
BITBIGSFRlllhl       1      0       0      27        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     119      29        0.0%
DATA                 0      0     119       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Aug 11 22:13:34 2022

            ___fldiv@aexp 0019              ___fldiv@bexp 0018              ___fldiv@sign 0011  
                      l13 3292                        l16 319E                        l19 31BE  
                      l90 2EBA                        l76 32AE                        l92 2ED0  
                      l69 26D6                        l94 2ED2                        l86 2E8E  
                      l79 3254                        l88 2EA4                        l97 3274  
     ___wmul@multiplicand 0003                       l100 32A0                       l112 3186  
                     l106 2E76                       l109 2DAA                       l118 3116  
                     l127 3210                       l401 314E                       l424 2946  
                     l711 1CFC                       l720 1D42                       l392 2A04  
                     l722 1DBA                       l714 1CC0                       l386 2CBC  
                     l723 1DA8                       l709 1E9C                       l397 2A4A  
                     l741 179E                       l805 2F24                       l750 1A0C  
                     l751 19FA                       l655 1408                       l672 1522  
                     l664 16D8                       l656 13F6                       l745 1B02  
                     l681 15F2                       l657 13BC                       l682 15E0  
                     l922 21B2                       l843 2D36                       l748 1994  
                     l782 241C                       l758 1AC4                       l854 1218  
                     l839 2CE0                       l785 2578                       l697 300C  
                     l857 0BB2                       l929 2F76                       l962 2838  
                     l939 2B48                       l971 23C4                       l859 09F8  
                     l796 2510                       l789 24B4                       l981 31EA  
                     l965 2840                       l974 2308                       l887 0FFA  
                     l996 2E00                       l989 3052                       l999 2E10  
                     _LDR 00AA                       _pad 2CBE                       wreg 000FE8  
            ___flmul@aexp 0025              ___flmul@bexp 0026              ___flmul@sign 0020  
            ___flmul@temp 002B              ___flmul@prod 0027              ___fltol@exp1 000A  
                    l1005 2FC6                      l1017 2C12                      l1025 3096  
                    l1034 30D6                      l1028 32B0                      l3000 2936  
                    l3010 2CEC                      l3100 304C                      l3020 2A6C  
                    l3012 2D00                      l3004 2CBE                      l3022 2AAA  
                    l3030 2AEA                      l3014 2D04                      l3006 2CCC  
                    l3110 0844                      l3032 2AFC                      l3024 2AD2  
                    l3016 2D22                      l3008 2CD8                      l3040 3098  
                    l3200 0BE6                      l3120 088E                      l3112 0848  
                    l3104 0820                      l3026 2ADE                      l3018 2A4C  
                    l3050 21D4                      l2410 2B4A                      l3042 30A8  
                    l3210 0C34                      l3202 0BEA                      l3130 08DC  
                    l3122 089E                      l3114 086C                      l3106 0826  
                    l2500 1356                      l3036 2B40                      l3060 22BC  
                    l3052 222A                      l3044 2DAC                      l2420 2BCC  
                    l2412 2B5C                      l3300 111E                      l3220 0CCC  
                    l3204 0BFC                      l3212 0C3C                      l3140 0918  
                    l3132 08EE                      l3124 08AA                      l3116 0876  
                    l3108 0836                      l2510 13B4                      l2502 135A  
                    l2430 1236                      l3070 23A4                      l3062 22F8  
                    l3054 223E                      l3046 2DCA                      l2414 2B6E  
                    l3310 1174                      l3302 1122                      l3230 0DB0  
                    l3222 0D24                      l3214 0C44                      l3206 0C0A  
                    l3150 097A                      l3142 0922                      l3134 08F2  
                    l3126 08B2                      l3118 087E                      l2600 1656  
                    l2520 13EA                      l2512 13CA                      l2504 135E  
                    l2432 1246                      l2440 1270                      l2424 121A  
                    l3072 23B4                      l3056 224C                      l3064 232C  
                    l3048 21B4                      l3080 2F98                      l2416 2B78  
                    l3320 11F0                      l3312 11A4                      l3304 1140  
                    l3240 0E4A                      l3232 0DE2                      l3224 0D58  
                    l3216 0C54                      l3208 0C22                      l3152 097E  
                    l3136 08F8                      l3128 08B6                      l3400 1FE0  
                    l2610 169C                      l2602 1658                      l2530 143A  
                    l2522 13F4                      l2514 13D6                      l2506 1388  
                    l2450 12A0                      l2442 1280                      l2434 1256  
                    l2426 1226                      l3066 2368                      l3082 2F9C  
                    l2418 2B96                      l3322 11F8                      l3314 11B2  
                    l3306 115C                      l3250 0F22                      l3242 0E7E  
                    l3234 0DF8                      l3218 0C68                      l3226 0D5E  
                    l3170 0A08                      l3154 0984                      l3138 0900  
                    l3146 0942                      l3402 1FF0                      l3500 3290  
                    l3092 300E                      l3340 2770                      l3332 2710  
                    l2700 1C54                      l2620 16C6                      l2612 16AA  
                    l2604 1668                      l2540 1476                      l2532 144A  
                    l2524 1416                      l2516 13DA                      l2508 13A4  
                    l2460 12E0                      l2452 12AE                      l2444 1286  
                    l2436 1266                      l2428 1234                      l3068 237C  
                    l3084 2FA8                      l3076 2F78                      l3316 11CA  
                    l3308 1164                      l3260 0F4C                      l3244 0ED4  
                    l3252 0F26                      l3236 0E2A                      l3228 0D7C  
                    l3180 0AF0                      l3172 0A0E                      l3156 098C  
                    l3148 0968                      l3164 09A8                      l3404 2002  
                    l3412 201A                      l3502 318A                      l3510 32A2  
                    l3094 3012                      l3350 280A                      l3342 27A4  
                    l3334 272C                      l3326 26F8                      l2710 1C9C  
                    l2702 1C64                      l2622 16C8                      l2614 16B0  
                    l2606 1678                      l2550 14BC                      l2542 1484  
                    l2534 1458                      l2526 1426                      l2518 13E8  
                    l2470 131A                      l2462 12E2                      l2454 12B0  
                    l2446 1298                      l2438 1268                      l3078 2F8C  
                    l3086 2FAC                      l2630 3072                      l3318 11DA  
                    l3270 101A                      l3262 0F58                      l3254 0F36  
                    l3246 0EDA                      l3238 0E3A                      l3182 0B04  
                    l3190 0B80                      l3174 0A42                      l3166 09C2  
                    l3422 20D4                      l3406 200A                      l3414 204C  
                    l3504 319C                      l3520 3244                      l3512 3234  
                    l3360 2E88                      l3600 242C                      l3088 31C0  
                    l3096 3026                      l3352 281C                      l3336 2760  
                    l3328 270C                      l2720 1CEA                      l2712 1CB0  
                    l2704 1C74                      l2640 1B04                      l2800 1756  
                    l2616 16B2                      l2608 1698                      l2560 1538  
                    l2552 14F0                      l2544 1486                      l2536 1466  
                    l2480 132E                      l2472 131E                      l2456 12C0  
                    l2464 12EA                      l2448 129A                      l2632 3076  
                    l3280 104C                      l3272 102A                      l3264 0FD0  
                    l3256 0F3E                      l3248 0F0E                      l3192 0BBA  
                    l3184 0B38                      l3176 0A80                      l3432 214C  
                    l3424 20FE                      l3416 206C                      l3408 2012  
                    l3506 31AC                      l3522 324E                      l3514 3238  
                    l3370 2EBC                      l3362 2E90                      l3530 2D3E  
                    l3610 246A                      l3602 2442                      l2634 31EC  
                    l3098 3048                      l3338 2768                      l2730 1D32  
                    l2722 1CFA                      l2714 1CBE                      l2706 1C84  
                    l2650 1B40                      l2642 1B10                      l2810 178E  
                    l2802 1758                      l2618 16B8                      l2570 1574  
                    l2562 1548                      l2554 14F2                      l2546 1490  
                    l2538 1472                      l2490 1342                      l2482 1332  
                    l2474 1322                      l2466 12FA                      l2458 12D0  
                    l2626 3054                      l3290 1080                      l3282 1050  
                    l3274 102E                      l3266 0FF0                      l3258 0F44  
                    l3194 0BCA                      l3186 0B40                      l3178 0AB2  
                    l3426 211E                      l3418 20A0                      l3434 2178  
                    l3524 3250                      l3516 323E                      l3372 2ECA  
                    l3364 2E9E                      l3460 3260                      l3540 2D7A  
                    l3532 2D4E                      l3620 24F2                      l3612 249C  
                    l2636 3208                      l3348 27DA                      l2740 1D72  
                    l2732 1D40                      l2724 1D0C                      l2716 1CCA  
                    l2708 1C8C                      l2660 1B70                      l2652 1B50  
                    l2644 1B1E                      l2900 1AE8                      l2820 17DE  
                    l2812 17AE                      l2804 1768                      l2580 15A0  
                    l2572 1576                      l2556 1502                      l2548 1496  
                    l2492 1346                      l2484 1336                      l2476 1326  
                    l2468 130C                      l2628 3060                      l3292 1084  
                    l3284 1056                      l3276 1034                      l3268 100C  
                    l3196 0BD6                      l3380 1EDE                      l3526 3252  
                    l3518 3242                      l3366 2EA6                      l3358 2E7A  
                    l3462 3262                      l3550 2D98                      l3542 2D80  
                    l3534 2D54                      l3470 3160                      l3630 2548  
                    l3622 2500                      l3614 249E                      l3606 2456  
                    l2750 1DE4                      l2742 1DA0                      l2726 1D22  
                    l2734 1D52                      l2718 1CE8                      l2670 1BA6  
                    l2662 1B76                      l2654 1B52                      l2646 1B20  
                    l2902 1AEE                      l2830 182E                      l2822 17E8  
                    l2814 17BE                      l2806 1778                      l2590 15D8  
                    l2574 1584                      l2566 155C                      l2582 15A2  
                    l2558 1512                      l2494 134A                      l2486 133A  
                    l2478 132A                      l2910 2FD8                      l3294 108A  
                    l3278 103C                      l3286 105C                      l3198 0BDE  
                    l3390 1F40                      l3382 1EE2                      l3438 218A  
                    l3374 1E9E                      l3368 2EB4                      l3464 3272  
                    l3456 3258                      l3552 2D9E                      l3544 2D86  
                    l3536 2D64                      l3528 2D38                      l3480 317A  
                    l3472 3168                      l3632 2558                      l3624 251E  
                    l3616 24AA                      l3608 245E                      l2760 1E5C  
                    l2752 1E0E                      l2736 1D60                      l2728 1D28  
                    l2680 1BE6                      l2672 1BB6                      l2664 1B84  
                    l2648 1B30                      l2656 1B5A                      l2920 2C80  
                    l2904 1AF2                      l2840 1870                      l2832 183A  
                    l2824 17FE                      l2808 1788                      l2576 158C  
                    l2568 1566                      l2584 15B0                      l2496 134E  
                    l2488 133E                      l3296 10E2                      l3288 106E  
                    l3392 1F7A                      l3384 1F06                      l3376 1EC2  
                    l3560 2EE4                      l3640 257A                      l3458 325A  
                    l3554 2DA4                      l3546 2D8C                      l3538 2D6A  
                    l3570 2E14                      l3482 317C                      l3474 316A  
                    l3466 3152                      l3634 2566                      l3626 2520  
                    l3618 24E6                      l2770 1E92                      l2762 1E78  
                    l2746 1DCA                      l2754 1E12                      l2738 1D64  
                    l2682 1BF6                      l2690 1C16                      l2674 1BB8  
                    l2666 1B86                      l2658 1B6A                      l2922 2C90  
                    l2914 2C14                      l2930 2948                      l2850 18D2  
                    l2842 1880                      l2834 1848                      l2826 180A  
                    l2818 17D2                      l2594 1602                      l2586 15B4  
                    l2578 1590                      l2498 1352                      l3298 1116  
                    l3394 1F9A                      l3386 1F0E                      l3378 1ED0  
                    l3490 2F50                      l3562 2EEC                      l3650 2616  
                    l3642 258E                      l3556 3294                      l3548 2D92  
                    l3580 2E58                      l3572 2E24                      l3484 3184  
                    l3476 3172                      l3468 315E                      l3636 2568  
                    l3628 2524                      l2764 1E7C                      l2756 1E2C  
                    l2748 1DD6                      l2692 1C26                      l2684 1BFE  
                    l2668 1B96                      l2676 1BC0                      l2924 2CB4  
                    l2916 2C42                      l2940 29D2                      l2932 2976  
                    l2860 197A                      l2852 18EE                      l2844 189A  
                    l2836 1854                      l2828 1822                      l2780 16E6  
                    l2596 160E                      l2588 15C2                      l2908 2FC8  
                    l3388 1F1C                      l3492 2F6C                      l3564 2EF4  
                    l3660 26D0                      l3652 2662                      l3644 25DA  
                    l3582 2E6A                      l3574 2E36                      l3478 3174  
                    l3590 30F6                      l2766 1E8A                      l2758 1E42  
                    l2694 1C26                      l2686 1C02                      l2678 1BD0  
                    l2926 2CBA                      l2918 2C52                      l2942 29E4  
                    l2934 2986                      l2870 19B6                      l2862 1984  
                    l2854 1918                      l2846 18AA                      l2838 1864  
                    l2790 1726                      l2782 16F4                      l2598 161C  
                    l3750 20E8                      l3398 1FA8                      l3486 2F26  
                    l3566 2F12                      l3558 2ED4                      l3662 26D8  
                    l3654 2688                      l3646 2600                      ?_pad 0011  
                    l3496 3276                      l3584 2E70                      l3576 2E3C  
                    l3592 30FA                      l2768 1E90                      l2944 29F2  
                    l2936 29B4                      l2880 1A28                      l2872 19C4  
                    l2864 1992                      l2856 194E                      l2848 18C6  
                    l2792 172C                      l2784 16F6                      l2952 3118  
                    l2960 2842                      l3752 216A                      l3488 2F32  
                    l3656 2692                      l3648 260A                      l3498 327E  
                    l3578 2E46                      l3586 30D8                      l3594 23C8  
                    l3754 278E                      l2698 1C3A                      l2946 2A42  
                    l2938 29C4                      l2890 1A92                      l2882 1A36  
                    l2874 19F2                      l2866 19A4                      l2858 195C  
                    l2794 173C                      l2786 1706                      l2778 16DA  
                    l2954 312E                      l2970 2898                      l2962 2858  
                    l3658 269E                      l3588 30E4                      l3596 23D8  
                    l2948 2A48                      l2892 1AAC                      l2884 1A60  
                    l2868 19B2                      l2796 1742                      l2788 1716  
                    l2956 313E                      l2972 28A8                      l3748 202E  
                    l3598 23E6                      l2894 1AC8                      l2878 1A1C  
                    l2886 1A64                      l2798 1748                      l2982 28D2  
                    l2974 28AC                      l2966 286C                      l2896 1AD8  
                    l2888 1A7E                      l2992 28FA                      l2984 28DC  
                    l2976 28BA                      l2968 2896                      l2898 1AE6  
                    l2994 2906                      l2986 28E6                      l2996 2916  
                    l2998 2926                      STR_1 0801                      STR_2 080C  
                    STR_3 0816                      STR_6 081A                      u2000 12D0  
                    u2001 12CC                      u2010 130C                      u2011 1308  
                    u2100 1426                      u2020 131A                      u2101 1422  
                    u2021 1316                      u2110 1458                      u2030 1388  
                    u2111 1454                      u2031 1384                      u2200 15A0  
                    u2120 1466                      u2040 13A0                      u3000 2B38  
                    u2201 159C                      u2121 1462                      u2041 139A  
                    u2210 15B0                      u2130 1484                      u2050 13A2  
                    u3010 30D6                      u2211 15AC                      u2131 1480  
                    u3011 30D2                      u2300 1698                      u2220 15C2  
                    u2140 14BC                      u2060 13CA                      u3100 234C  
                    u3020 2DCA                      u2301 1694                      u2221 15BE  
                    u2141 14B8                      u2061 13C6                      u3021 2DC6  
                    u2310 16AA                      u2230 15D8                      u2150 1502  
                    u2070 13E8                      u3110 2368                      u3030 21FC  
                    u2311 16A6                      u2231 15D4                      u2151 14FE  
                    u2071 13E4                      u3111 2364                      u2400 1BE6  
                    u2320 16C6                      u2240 15EE                      u2160 1538  
                    u2080 1408                      u3120 23A4                      u3040 222A  
                    u3200 089E                      _LATD 000F8C                      u2401 1BE2  
                    u2321 16C2                      u2241 15EA                      u2161 1534  
                    u2081 1404                      u3121 23A0                      u3105 2342  
                    u3041 2226                      u3201 089A                      u2410 1C26  
                    u2250 1602                      u2170 1548                      u2090 1416  
                    u3050 224C                      u3130 2FC6                      u2330 3096  
                    u3210 08DC                      u2411 1C22                      u2251 15FE  
                    u2171 1544                      u2091 1412                      u3051 2248  
                    u3035 21F2                      u3131 2FC2                      u2331 3092  
                    u3211 08D8                      u3140 31E4                      u2500 1DA0  
                    u2420 1C9C                      u2340 1B1E                      u2260 161C  
                    u2180 1574                      u3300 0BB2                      u3220 08EE  
                    u3141 31DE                      u2501 1D9C                      u2421 1C98  
                    u2341 1B1A                      u2261 1618                      u2181 1570  
                    u3301 0BAE                      u3221 08EA                      u3150 31E6  
                    u2510 1DB6                      u2430 1CBE                      u2350 1B30  
                    u2270 1656                      u2190 1584                      u3070 22B8  
                    u3310 0BCA                      u3230 0968                      u2511 1DB2  
                    u2431 1CBA                      u2351 1B2C                      u2271 1652  
                    u2191 1580                      u3071 22B4                      u3311 0BC6  
                    u3231 0964                      u3160 3026                      u2520 1DCA  
                    u2440 1CE8                      u2360 1B40                      u2600 1756  
                    u2280 1668                      u3080 22DC                      u3400 0F22  
                    u3320 0BFC                      u3240 097A                      u3161 3022  
                    u2521 1DC6                      u2441 1CE4                      u2361 1B3C  
                    u2601 1752                      u2281 1664                      u3065 2260  
                    u3401 0F1E                      u3321 0BF8                      u3241 0976  
                    u3170 3048                      u2530 1DE4                      u2450 1D0C  
                    u2370 1B84                      u2610 1768                      u2290 1678  
                    u3090 22F8                      u3066 226A                      u3410 0FD0  
                    u3330 0C0A                      u3250 09F4                      u3171 3044  
                    u2531 1DE0                      u2451 1D08                      u2371 1B80  
                    u2611 1764                      u2291 1674                      u3091 22F4  
                    u3067 227A                      u3411 0FCC                      u3331 0C06  
                    u3251 09F0                      u3500 272C                      u2540 1E2C  
                    u2460 1D22                      u2380 1B96                      u2700 1A08  
                    u2620 1778                      u1900 2B5C                      u3420 100C  
                    u3340 0C34                      u3260 0A80                      u3180 0844  
                    u3501 2728                      u2541 1E28                      u2461 1D1E  
                    u2381 1B92                      u2701 1A04                      u2621 1774  
                    u3085 22D2                      u1901 2B58                      u3421 1008  
                    u3341 0C30                      u3261 0A7C                      u3181 0840  
                    u3510 275C                      u2550 1E5C                      u2470 1D40  
                    u2390 1BA6                      u2710 1A1C                      u2630 17AE  
                    u1910 2B6E                      u3430 101A                      u3350 0D7C  
                    u3270 0AB2                      u3190 088E                      u3511 2758  
                    u2551 1E58                      u2471 1D3C                      u2391 1BA2  
                    u2711 1A18                      u2631 17AA                      u1911 2B6A  
                    u3431 1016                      u3351 0D78                      u3271 0AAE  
                    u3191 088A                      u3520 280A                      u2560 1E8A  
                    u2480 1D60                      u2800 29B4                      u2720 1A36  
                    u2640 17BE                      u1920 2B96                      u3440 106E  
                    u3360 0DE2                      u3280 0AF0                      u3600 1F40  
                    u3521 2806                      u2561 1E86                      u2481 1D5C  
                    u2801 29B0                      u2721 1A32                      u2641 17BA  
                    u1921 2B92                      u3441 106A                      u3361 0DDE  
                    u3281 0AEC                      u3601 1F3C                      u3530 281C  
                    u2490 1D72                      u2810 29D2                      u2730 1A7E  
                    u2650 1938                      u2570 16F4                      u1930 2BCC  
                    u3450 1140                      u3370 0E2A                      u3290 0B7C  
                    u3610 1FE0                      u3531 2818                      u2491 1D6E  
                    u2811 29CE                      u2731 1A7A                      u2571 16F0  
                    u1931 2BC8                      u3451 113C                      u3371 0E26  
                    u3291 0B78                      u3611 1FDC                      u3540 2E88  
                    u3700 2442                      u2820 29F2                      u2740 1AAC  
                    u2660 1992                      u2580 1706                      u1940 1234  
                    u2900 2916                      u3460 115C                      u3380 0E3A  
                    u3620 2068                      u3541 2E84                      u3701 243E  
                    u2821 29EE                      u2741 1AA8                      u2661 198E  
                    u2581 1702                      u1941 1230                      u2901 2912  
                    u3461 1158                      u3381 0E36                      u3621 2064  
                    u3550 2E9E                      u3710 2498                      u2830 2A42  
                    u2750 1AE6                      u2670 19B2                      u2590 1716  
                    u1950 1246                      u2910 2926                      u3470 11C4  
                    u3390 0ED4                      u3630 2F6C                      u3551 2E9A  
                    u3711 2494                      u2831 2A3E                      u2751 1AE2  
                    u2671 19AE                      u2655 192E                      u2591 1712  
                    u1951 1242                      u2911 2922                      u3471 11BE  
                    u3391 0ED0                      u3631 2F68                      u3640 31AC  
                    u3560 2EB4                      u3720 24E2                      u2760 2C42  
                    u2680 19C4                      u2840 312E                      u1960 1256  
                    u2920 2CCC                      u3480 11C6                      u3641 31A8  
                    u3561 2EB0                      u3721 24DE                      u2761 2C3E  
                    u2681 19C0                      u2841 312A                      u1961 1252  
                    u2921 2CC8                      u3570 2ECA                      u3650 2E24  
                    u3730 2500                      u2770 2C80                      u2690 19F2  
                    u1970 1298                      u2850 2858                      u2930 2D22  
                    u3490 11DA                      u3571 2EC6                      u3651 2E20  
                    u3731 24FC                      u2771 2C7C                      u2691 19EE  
                    u1971 1294                      u2851 2854                      u2931 2D1E  
                    u3491 11D6                      u3660 2E58                      u3740 2510  
                    u2780 2CB4                      u1980 12AE                      u2860 288C  
                    u2940 2A8C                      u3580 1EC2                      u3661 2E54  
                    u3741 250C                      u2781 2CB0                      u1981 12AA  
                    u3581 1EBE                      u3670 3116                      u3750 251E  
                    u2790 2976                      u1990 12C0                      u2870 28BA  
                    u2950 2AAA                      u3590 1F06                      u3807 316C  
                    u3671 3112                      u3751 251A                      u2791 2972  
                    u1991 12BC                      u2871 28B6                      u2951 2AA6  
                    u3591 1F02                      u3760 2558                      u3680 23D8  
                    u2880 28CE                      u2960 2AD2                      u3817 317E  
                    u3761 2554                      u3681 23D4                      u2881 28CA  
                    u2865 2882                      u2961 2ACE                      u2945 2A82  
                    u3770 2566                      u3690 23E6                      u2890 28F6  
                    u2970 2AFC                      u3827 2D44                      u3771 2562  
                    u3691 23E2                      u2891 28F2                      u2971 2AF8  
                    u3780 26D0                      u3837 2D5A                      u3781 26CC  
                    u2990 2B36                      u3847 2D70                      u2991 2B30  
                    u3857 3268                      u2985 2B0E                      u3797 26E4  
       ?_Lcd_Write_String 0005                      _dbuf 0100                      _labs 2DAC  
                    _atoi 26F8                      _main 257A                      _prec 00B4  
                    pad@i 0018                      pad@p 0015                      fsr1h 000FE2  
                    fsr2h 000FDA                      indf2 000FDF                      fsr1l 000FE1  
                    pad@w 001A                      fsr2l 000FD9          __end_of_ADC_Init 3294  
        __end_of_ADC_Read 31C0             ___fpclassifyf 2A4C                      prodh 000FF4  
                    prodl 000FF3                      start 0000        ??_Lcd_Write_String 0007  
         ___fldiv@new_exp 0012           __end_of_Lcd_Cmd 3276              ___param_bank 000000  
     __end_of_Config_Port 3256                     ??_pad 0017             ___fltol@sign1 0009  
                   ?_labs 0001                     ?_atoi 0007           __end_of___fladd 16DA  
                   ?_main 0001           __end_of___fldiv 1E9E           __end_of___flneg 3150  
         __end_of___flmul 1B04           __end_of___flsub 300E           __end_of___fltol 2948  
            vfpfcnvrt@fmt 008E              _str_buffeLcd 00B7                     _TRISD 000F95  
                   _flags 00B6                     _fputc 2B4A                     _fputs 3054  
         __end_of_isdigit 31EC                     labs@a 0001                     atoi@n 000E  
                   pad@fp 0011                     atoi@s 0007                     _width 00B2  
                   _putch 32B0           __end_of_isspace 3054                     tablat 000FF5  
                   status 000FD8           __end_of_sprintf 2F26            ?___fpclassifyf 0001  
        __end_of_Lcd_Init 2DAC          __end_of_Lcd_Port 2ED4           __initialization 3212  
    __end_of_Config_Clock 32B0              __end_of_labs 2E12              __end_of_atoi 2842  
            __end_of_main 26F8                    ??_labs 0005                    ??_atoi 0009  
                  ??_main 00A0             __activetblptr 000002                    ?_fputc 0001  
                  ?_fputs 000A                    _ADRESH 000FC4                    _ADRESL 000FC3  
                  ?_putch 0001                    _ANSELD 000F5E                 ??_Lcd_Cmd 0002  
                  _SLRCON 000F7A               _Config_Port 3234          __end_of___xxtofl 257A  
            vfprintf@cfmt 0050                    ___flge 2948                    ___fleq 2C14  
               ??___fladd 0009                    ___wmul 31EC                 ??___fldiv 0009  
               ??___flneg 0005                 ??___flmul 001C                 ??___flsub 0035  
               ??___fltol 0005                    _efgtoa 0820           ADC_Read@channel 0005  
                  _floorf 21B4                    _memcpy 2F78                    clear_0 3218  
                  clear_1 3224                    isa$std 000001                    pad@buf 0013  
                  _strcpy 3098                    fputc@c 0001                    fputs@c 000E  
                  fputs@i 000F                    fputs@s 000A                 ??_isdigit 0003  
         ___fpclassifyf@e 0009                 ?_ADC_Init 0001           ___fpclassifyf@u 000B  
               ?_ADC_Read 0001           ___fpclassifyf@x 0001              __mediumconst 0000  
               ??_isspace 0003                    tblptrh 000FF7                    tblptrl 000FF6  
                  tblptru 000FF8                    putch@c 0001          __end_of_vfprintf 2F78  
               ??_sprintf 0052           Lcd_Set_Cursor@a 0005           Lcd_Set_Cursor@b 0004  
         Lcd_Set_Cursor@y 0007           Lcd_Set_Cursor@z 0006                ___flge@ff1 002D  
              ___flge@ff2 0031           ??___fpclassifyf 0005              ___xxtofl@arg 0010  
            ___xxtofl@exp 000F              ___xxtofl@val 0006                ___fleq@ff1 0001  
              ___fleq@ff2 0005                __accesstop 0060   __end_of__initialization 322A  
              ___flneg@f1 0001         __end_of_Lcd_Clear 32A2             ___rparam_used 000001  
              ___fltol@f1 0001            __pcstackCOMRAM 0001             __end_of_fputc 2C14  
           __end_of_fputs 3098             __end_of_putch 32B2            _Lcd_Set_Cursor 2E12  
              ??_ADC_Init 0001                ??_ADC_Read 0003                 ?_Lcd_Init 0001  
               ?_Lcd_Port 0001                   ??_fputc 0005                   ??_fputs 000E  
                 ??_putch 0001                __pbssBANK0 00A2                __pbssBANK1 0100  
                 ?___flge 002D                   ?___fleq 0001                   ?___wmul 0001  
                 ?_efgtoa 0039                   ?_floorf 001A                   ?_memcpy 0001  
  __end_of_Lcd_Set_Cursor 2E78                   ?_strcpy 0001                 ?___xxtofl 0006  
              ??_Lcd_Init 0004              _Config_Clock 32A2                ??_Lcd_Port 0001  
          _Lcd_Write_Char 3150                   _Lcd_Cmd 3256                   __Hparam 0000  
                 __Lparam 0000                   ___fladd 121A                   ___fldiv 1B04  
                 ___flneg 3118                   ___flmul 16DA                   ___flsub 2FC8  
                 ___fltol 2842                 ?_vfprintf 0092              __psmallconst 0800  
                 __pcinit 3212                   __ramtop 0800           ?_Lcd_Set_Cursor 0004  
                 __ptext0 257A                   __ptext1 2ED4                   __ptext2 2F26  
                 __ptext3 1E9E                   __ptext4 0820                   __ptext5 3098  
                 __ptext6 2CBE                   __ptext7 3054                   __ptext8 2B4A  
                 __ptext9 32B0                   _isdigit 31C0                ??___xxtofl 000A  
                 _isspace 300E                   efgtoa@c 003F                   efgtoa@d 006B  
                 efgtoa@e 006F                   efgtoa@f 003B                   efgtoa@g 0084  
                 efgtoa@h 0079                   efgtoa@i 0077                   efgtoa@l 007D  
                 efgtoa@m 006D                   efgtoa@n 0082                   efgtoa@p 0062  
                 efgtoa@t 0064                   efgtoa@u 0088                   efgtoa@w 0071  
                 atoi@neg 000C                   _sprintf 2ED4                   _voltaje 00AE  
  __end_of_Lcd_Write_Char 3188      end_of_initialization 322A                   floorf@e 0028  
                 floorf@m 0024                   floorf@u 002A                   floorf@x 001A  
                 memcpy@d 0007                   memcpy@n 0005                   memcpy@s 0009  
                 fputc@fp 0003             __Lmediumconst 0000              ?_Config_Port 0001  
                 fputs@fp 000C         __end_of_vfpfcnvrt 21B4                efgtoa@mode 0069  
              efgtoa@sign 0081                   postdec2 000FDD                   postinc0 000FEE  
                 postinc1 000FE6                   postinc2 000FDE          vfpfcnvrt@convarg 0045  
               Lcd_Port@a 0001                ??_vfprintf 0050                   strcpy@d 0007  
                 strcpy@s 0005               ___fladd@grs 0010             ___xxtofl@sign 000E  
               _TRISAbits 000F92                 _TRISCbits 000F94               ___fldiv@grs 0014  
             ___fldiv@rem 000D           ?_Lcd_Write_Char 0001         Lcd_Write_String@a 0005  
       Lcd_Write_String@i 0007               ___flmul@grs 0021                 _Lcd_Clear 3294  
          __end_of___flge 2A4C            __end_of___fleq 2CBE               vfpfcnvrt@ap 0090  
             vfpfcnvrt@cp 004E               vfpfcnvrt@fp 008C            __end_of___wmul 3212  
        _Lcd_Write_String 30D8            __end_of_efgtoa 121A            __end_of_floorf 23C6  
          __end_of_memcpy 2FC8                floorf@F526 00A2            __end_of_strcpy 30D8  
     start_initialization 3212               __end_of_pad 2D38     __end_of___fpclassifyf 2B4A  
             vfprintf@fmt 0094                ?_Lcd_Clear 0001                  ??___flge 0035  
                ??___fleq 0009                  ??___wmul 0005                  ??_efgtoa 0040  
                ??_floorf 001E                  ??_memcpy 0007           Lcd_Write_Char@a 0004  
         Lcd_Write_Char@y 0003                  ??_strcpy 0005                 ___fladd@a 0005  
               ___fladd@b 0001                 ___fldiv@a 0005                 ___fldiv@b 0001  
               ___flmul@a 0018                 ___flmul@b 0014                 ___flsub@a 0031  
               ___flsub@b 002D             __pcstackBANK0 0060                  ?_Lcd_Cmd 0001  
             _efgtoa$1119 0066          ??_Lcd_Set_Cursor 0005                  ?___fladd 0001  
                ?___fldiv 0001                  ?___flneg 0001                  ?___flmul 0014  
                ?___flsub 002D                  ?___fltol 0001               __smallconst 0800  
                ?_isdigit 0001                  _ADC_Init 3276                  _ADC_Read 3188  
                ?_isspace 0001                  ?_sprintf 0098            ___wmul@product 0005  
                _LATCbits 000F8B                  _LATDbits 000F8C                  Lcd_Cmd@a 0003  
             ??_Lcd_Clear 0004                 _vfpfcnvrt 1E9E                _ADCON0bits 000FC2  
              _ADCON1bits 000FC1                _ADCON2bits 000FC0         ___wmul@multiplier 0001  
        ??_Lcd_Write_Char 0002              _isspace$1197 0005                  _Lcd_Init 2D38  
                _Lcd_Port 2E78                vfpfcnvrt@c 004D  __end_of_Lcd_Write_String 3118  
                __Hrparam 0000                 memcpy@tmp 000B                vfprintf@ap 0096  
                __Lrparam 0000                vfprintf@fp 0092                ?_vfpfcnvrt 008C  
              _ANSELBbits 000F5C        ___fpclassifyf@F465 00A6                sprintf@fmt 009A  
                ___xxtofl 23C6                  __ptext10 2F78                  __ptext11 2DAC  
                __ptext20 2C14                  __ptext12 21B4                  __ptext21 1B04  
                __ptext13 2A4C                  __ptext30 2D38                  __ptext22 26F8  
                __ptext14 2842                  __ptext31 3294                  __ptext23 300E  
                __ptext15 2FC8                  __ptext32 3256                  __ptext24 31C0  
                __ptext16 121A                  __ptext33 2E78                  __ptext25 31EC  
                __ptext17 3118                  __ptext34 3234                  __ptext26 23C6  
                __ptext18 16DA                  __ptext35 32A2                  __ptext27 30D8  
                __ptext19 2948                  __ptext36 3188                  __ptext28 3150  
                __ptext37 3276                  __ptext29 2E12                strcpy@dest 0001  
                efgtoa@fp 0039                  efgtoa@ne 0060                  efgtoa@pp 0068  
                efgtoa@ou 0073                  isa$xinst 000000                  _vfprintf 2F26  
                memcpy@d1 0001                  memcpy@s1 0003             ?_Config_Clock 0001  
                isdigit@c 0001        Lcd_Write_Char@temp 0002                 sprintf@ap 0052  
                isspace@c 0001                 strcpy@src 0003                _OSCCONbits 000FD3  
             efgtoa@nmode 006A               ??_vfpfcnvrt 0042        Lcd_Set_Cursor@temp 0008  
                sprintf@f 0054                  sprintf@s 0098            ??_Config_Clock 0001  
           ___fladd@signs 000D             ??_Config_Port 0001              ___fladd@aexp 000E  
            ___fladd@bexp 000F  
