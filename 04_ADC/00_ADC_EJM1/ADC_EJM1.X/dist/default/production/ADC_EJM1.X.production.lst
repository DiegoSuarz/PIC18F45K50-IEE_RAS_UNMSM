

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Aug 06 20:19:05 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    15   000000                     
    16                           ; Version 2.35
    17                           ; Generated 05/05/2021 GMT
    18                           ; 
    19                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F45K50 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51   000000                     _ANSELAbits	set	3931
    52   000000                     _SLRCON	set	3962
    53   000000                     _LATC	set	3979
    54   000000                     _LATD	set	3980
    55   000000                     _ADCON0bits	set	4034
    56   000000                     _OSCCONbits	set	4051
    57   000000                     _ADRESH	set	4036
    58   000000                     _ADRESL	set	4035
    59   000000                     _TRISAbits	set	3986
    60   000000                     _TRISC	set	3988
    61   000000                     _ANSELD	set	3934
    62   000000                     _ADCON2bits	set	4032
    63   000000                     _ADCON1bits	set	4033
    64   000000                     _TRISD	set	3989
    65                           
    66                           ; #config settings
    67                           
    68                           	psect	cinit
    69   007F7A                     __pcinit:
    70                           	callstack 0
    71   007F7A                     start_initialization:
    72                           	callstack 0
    73   007F7A                     __initialization:
    74                           	callstack 0
    75   007F7A                     end_of_initialization:
    76                           	callstack 0
    77   007F7A                     __end_of__initialization:
    78                           	callstack 0
    79   007F7A  0100               	movlb	0
    80   007F7C  EFEA  F03F         	goto	_main	;jump to C main() function
    81                           
    82                           	psect	cstackCOMRAM
    83   000000                     __pcstackCOMRAM:
    84                           	callstack 0
    85   000000                     
    86                           ; 1 bytes @ 0x0
    87 ;;
    88 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    89 ;;
    90 ;; *************** function _main *****************
    91 ;; Defined at:
    92 ;;		line 20 in file "main.c"
    93 ;; Parameters:    Size  Location     Type
    94 ;;		None
    95 ;; Auto vars:     Size  Location     Type
    96 ;;		None
    97 ;; Return value:  Size  Location     Type
    98 ;;                  1    wreg      void 
    99 ;; Registers used:
   100 ;;		wreg, status,2, cstack
   101 ;; Tracked objects:
   102 ;;		On entry : 0/0
   103 ;;		On exit  : 0/0
   104 ;;		Unchanged: 0/0
   105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   106 ;;      Params:         0       0       0       0       0       0       0       0       0
   107 ;;      Locals:         0       0       0       0       0       0       0       0       0
   108 ;;      Temps:          0       0       0       0       0       0       0       0       0
   109 ;;      Totals:         0       0       0       0       0       0       0       0       0
   110 ;;Total ram usage:        0 bytes
   111 ;; Hardware stack levels required when called: 1
   112 ;; This function calls:
   113 ;;		_Config_ADC
   114 ;;		_Config_Clock
   115 ;;		_Config_Port
   116 ;; This function is called by:
   117 ;;		Startup code after reset
   118 ;; This function uses a non-reentrant model
   119 ;;
   120                           
   121                           	psect	text0
   122   007FD4                     __ptext0:
   123                           	callstack 0
   124   007FD4                     _main:
   125                           	callstack 30
   126   007FD4                     
   127                           ;main.c: 21:     Config_Clock();
   128   007FD4  ECC0  F03F         	call	_Config_Clock	;wreg free
   129                           
   130                           ;main.c: 22:     Config_Port();
   131   007FD8  ECC7  F03F         	call	_Config_Port	;wreg free
   132                           
   133                           ;main.c: 23:     Config_ADC();
   134   007FDC  ECD7  F03F         	call	_Config_ADC	;wreg free
   135   007FE0                     l746:
   136                           
   137                           ;main.c: 25:         ADCON0bits.GO_DONE=1;
   138   007FE0  82C2               	bsf	194,1,c	;volatile
   139   007FE2                     l40:
   140   007FE2  B2C2               	btfsc	194,1,c	;volatile
   141   007FE4  EFF6  F03F         	goto	u11
   142   007FE8  EFF8  F03F         	goto	u10
   143   007FEC                     u11:
   144   007FEC  EFF1  F03F         	goto	l40
   145   007FF0                     u10:
   146   007FF0                     
   147                           ;main.c: 27:         LATD = ADRESL;
   148   007FF0  CFC3 FF8C          	movff	4035,3980	;volatile
   149                           
   150                           ;main.c: 28:         LATC = ADRESH;
   151   007FF4  CFC4 FF8B          	movff	4036,3979	;volatile
   152   007FF8  EFF0  F03F         	goto	l746
   153   007FFC  EF00  F000         	goto	start
   154   008000                     __end_of_main:
   155                           	callstack 0
   156                           
   157 ;; *************** function _Config_Port *****************
   158 ;; Defined at:
   159 ;;		line 40 in file "main.c"
   160 ;; Parameters:    Size  Location     Type
   161 ;;		None
   162 ;; Auto vars:     Size  Location     Type
   163 ;;		None
   164 ;; Return value:  Size  Location     Type
   165 ;;                  1    wreg      void 
   166 ;; Registers used:
   167 ;;		wreg, status,2
   168 ;; Tracked objects:
   169 ;;		On entry : 0/0
   170 ;;		On exit  : 0/0
   171 ;;		Unchanged: 0/0
   172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   173 ;;      Params:         0       0       0       0       0       0       0       0       0
   174 ;;      Locals:         0       0       0       0       0       0       0       0       0
   175 ;;      Temps:          0       0       0       0       0       0       0       0       0
   176 ;;      Totals:         0       0       0       0       0       0       0       0       0
   177 ;;Total ram usage:        0 bytes
   178 ;; Hardware stack levels used: 1
   179 ;; This function calls:
   180 ;;		Nothing
   181 ;; This function is called by:
   182 ;;		_main
   183 ;; This function uses a non-reentrant model
   184 ;;
   185                           
   186                           	psect	text1
   187   007F8E                     __ptext1:
   188                           	callstack 0
   189   007F8E                     _Config_Port:
   190                           	callstack 30
   191   007F8E                     
   192                           ;main.c: 42:     LATC=0x00;
   193   007F8E  0E00               	movlw	0
   194   007F90  6E8B               	movwf	139,c	;volatile
   195                           
   196                           ;main.c: 43:     LATD=0x00;
   197   007F92  0E00               	movlw	0
   198   007F94  6E8C               	movwf	140,c	;volatile
   199                           
   200                           ;main.c: 46:     SLRCON=0b00000000;
   201   007F96  0E00               	movlw	0
   202   007F98  6E7A               	movwf	122,c	;volatile
   203   007F9A                     
   204                           ;main.c: 49:     ANSELAbits.ANSA2=1;
   205   007F9A  010F               	movlb	15	; () banked
   206   007F9C  855B               	bsf	91,2,b	;volatile
   207                           
   208                           ;main.c: 50:     ANSELD = 0x00;
   209   007F9E  0E00               	movlw	0
   210   007FA0  6F5E               	movwf	94,b	;volatile
   211                           
   212                           ;main.c: 53:     TRISC=0x00;
   213   007FA2  0E00               	movlw	0
   214   007FA4  6E94               	movwf	148,c	;volatile
   215                           
   216                           ;main.c: 54:     TRISD=0x00;
   217   007FA6  0E00               	movlw	0
   218   007FA8  6E95               	movwf	149,c	;volatile
   219   007FAA                     
   220                           ; BSR set to: 15
   221                           ;main.c: 55:     TRISAbits.TRISA2 = 1;
   222   007FAA  8492               	bsf	146,2,c	;volatile
   223   007FAC                     
   224                           ; BSR set to: 15
   225   007FAC  0012               	return		;funcret
   226   007FAE                     __end_of_Config_Port:
   227                           	callstack 0
   228                           
   229 ;; *************** function _Config_Clock *****************
   230 ;; Defined at:
   231 ;;		line 35 in file "main.c"
   232 ;; Parameters:    Size  Location     Type
   233 ;;		None
   234 ;; Auto vars:     Size  Location     Type
   235 ;;		None
   236 ;; Return value:  Size  Location     Type
   237 ;;                  1    wreg      void 
   238 ;; Registers used:
   239 ;;		wreg, status,2
   240 ;; Tracked objects:
   241 ;;		On entry : 0/0
   242 ;;		On exit  : 0/0
   243 ;;		Unchanged: 0/0
   244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   245 ;;      Params:         0       0       0       0       0       0       0       0       0
   246 ;;      Locals:         0       0       0       0       0       0       0       0       0
   247 ;;      Temps:          0       0       0       0       0       0       0       0       0
   248 ;;      Totals:         0       0       0       0       0       0       0       0       0
   249 ;;Total ram usage:        0 bytes
   250 ;; Hardware stack levels used: 1
   251 ;; This function calls:
   252 ;;		Nothing
   253 ;; This function is called by:
   254 ;;		_main
   255 ;; This function uses a non-reentrant model
   256 ;;
   257                           
   258                           	psect	text2
   259   007F80                     __ptext2:
   260                           	callstack 0
   261   007F80                     _Config_Clock:
   262                           	callstack 30
   263   007F80                     
   264                           ;main.c: 36:     OSCCONbits.IRCF=0b111;
   265   007F80  0E70               	movlw	112
   266   007F82  12D3               	iorwf	211,f,c	;volatile
   267                           
   268                           ;main.c: 37:     OSCCONbits.SCS=0b10;
   269   007F84  50D3               	movf	211,w,c	;volatile
   270   007F86  0BFC               	andlw	-4
   271   007F88  0902               	iorlw	2
   272   007F8A  6ED3               	movwf	211,c	;volatile
   273   007F8C  0012               	return		;funcret
   274   007F8E                     __end_of_Config_Clock:
   275                           	callstack 0
   276                           
   277 ;; *************** function _Config_ADC *****************
   278 ;; Defined at:
   279 ;;		line 59 in file "main.c"
   280 ;; Parameters:    Size  Location     Type
   281 ;;		None
   282 ;; Auto vars:     Size  Location     Type
   283 ;;		None
   284 ;; Return value:  Size  Location     Type
   285 ;;                  1    wreg      void 
   286 ;; Registers used:
   287 ;;		wreg, status,2
   288 ;; Tracked objects:
   289 ;;		On entry : 0/0
   290 ;;		On exit  : 0/0
   291 ;;		Unchanged: 0/0
   292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   293 ;;      Params:         0       0       0       0       0       0       0       0       0
   294 ;;      Locals:         0       0       0       0       0       0       0       0       0
   295 ;;      Temps:          0       0       0       0       0       0       0       0       0
   296 ;;      Totals:         0       0       0       0       0       0       0       0       0
   297 ;;Total ram usage:        0 bytes
   298 ;; Hardware stack levels used: 1
   299 ;; This function calls:
   300 ;;		Nothing
   301 ;; This function is called by:
   302 ;;		_main
   303 ;; This function uses a non-reentrant model
   304 ;;
   305                           
   306                           	psect	text3
   307   007FAE                     __ptext3:
   308                           	callstack 0
   309   007FAE                     _Config_ADC:
   310                           	callstack 30
   311   007FAE                     
   312                           ;main.c: 61:     ADCON1bits.PVCFG = 0b00;
   313   007FAE  0EF3               	movlw	-13
   314   007FB0  16C1               	andwf	193,f,c	;volatile
   315                           
   316                           ;main.c: 62:     ADCON1bits.NVCFG = 0b00;
   317   007FB2  0EFC               	movlw	-4
   318   007FB4  16C1               	andwf	193,f,c	;volatile
   319   007FB6                     
   320                           ;main.c: 63:     ADCON2bits.ADFM = 1;
   321   007FB6  8EC0               	bsf	192,7,c	;volatile
   322                           
   323                           ;main.c: 64:     ADCON2bits.ACQT = 0b100;
   324   007FB8  50C0               	movf	192,w,c	;volatile
   325   007FBA  0BC7               	andlw	-57
   326   007FBC  0920               	iorlw	32
   327   007FBE  6EC0               	movwf	192,c	;volatile
   328                           
   329                           ;main.c: 65:     ADCON2bits.ADCS = 0b101;
   330   007FC0  50C0               	movf	192,w,c	;volatile
   331   007FC2  0BF8               	andlw	-8
   332   007FC4  0905               	iorlw	5
   333   007FC6  6EC0               	movwf	192,c	;volatile
   334   007FC8                     
   335                           ;main.c: 66:     ADCON0bits.ADON = 1;
   336   007FC8  80C2               	bsf	194,0,c	;volatile
   337                           
   338                           ;main.c: 67:     ADCON0bits.CHS =0b00010;
   339   007FCA  50C2               	movf	194,w,c	;volatile
   340   007FCC  0B83               	andlw	-125
   341   007FCE  0908               	iorlw	8
   342   007FD0  6EC2               	movwf	194,c	;volatile
   343   007FD2  0012               	return		;funcret
   344   007FD4                     __end_of_Config_ADC:
   345                           	callstack 0
   346   000000                     
   347                           	psect	rparam
   348   000000                     
   349                           	psect	idloc
   350                           
   351                           ;Config register IDLOC0 @ 0x200000
   352                           ;	unspecified, using default values
   353   200000                     	org	2097152
   354   200000  FF                 	db	255
   355                           
   356                           ;Config register IDLOC1 @ 0x200001
   357                           ;	unspecified, using default values
   358   200001                     	org	2097153
   359   200001  FF                 	db	255
   360                           
   361                           ;Config register IDLOC2 @ 0x200002
   362                           ;	unspecified, using default values
   363   200002                     	org	2097154
   364   200002  FF                 	db	255
   365                           
   366                           ;Config register IDLOC3 @ 0x200003
   367                           ;	unspecified, using default values
   368   200003                     	org	2097155
   369   200003  FF                 	db	255
   370                           
   371                           ;Config register IDLOC4 @ 0x200004
   372                           ;	unspecified, using default values
   373   200004                     	org	2097156
   374   200004  FF                 	db	255
   375                           
   376                           ;Config register IDLOC5 @ 0x200005
   377                           ;	unspecified, using default values
   378   200005                     	org	2097157
   379   200005  FF                 	db	255
   380                           
   381                           ;Config register IDLOC6 @ 0x200006
   382                           ;	unspecified, using default values
   383   200006                     	org	2097158
   384   200006  FF                 	db	255
   385                           
   386                           ;Config register IDLOC7 @ 0x200007
   387                           ;	unspecified, using default values
   388   200007                     	org	2097159
   389   200007  FF                 	db	255
   390                           
   391                           	psect	config
   392                           
   393                           ;Config register CONFIG1L @ 0x300000
   394                           ;	PLL Selection
   395                           ;	PLLSEL = PLL4X, 4x clock multiplier
   396                           ;	PLL Enable Configuration bit
   397                           ;	CFGPLLEN = OFF, PLL Disabled (firmware controlled)
   398                           ;	CPU System Clock Postscaler
   399                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
   400                           ;	Low Speed USB mode with 48 MHz system clock
   401                           ;	LS48MHZ = SYS24X4, System clock at 24 MHz, USB clock divider is set to 4
   402   300000                     	org	3145728
   403   300000  00                 	db	0
   404                           
   405                           ;Config register CONFIG1H @ 0x300001
   406                           ;	Oscillator Selection
   407                           ;	FOSC = INTOSCIO, Internal oscillator
   408                           ;	Primary Oscillator Shutdown
   409                           ;	PCLKEN = ON, Primary oscillator enabled
   410                           ;	Fail-Safe Clock Monitor
   411                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   412                           ;	Internal/External Oscillator Switchover
   413                           ;	IESO = OFF, Oscillator Switchover mode disabled
   414   300001                     	org	3145729
   415   300001  28                 	db	40
   416                           
   417                           ;Config register CONFIG2L @ 0x300002
   418                           ;	Power-up Timer Enable
   419                           ;	nPWRTEN = ON, Power up timer enabled
   420                           ;	Brown-out Reset Enable
   421                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
   422                           ;	Brown-out Reset Voltage
   423                           ;	BORV = 190, BOR set to 1.9V nominal
   424                           ;	Low-Power Brown-out Reset
   425                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
   426   300002                     	org	3145730
   427   300002  5E                 	db	94
   428                           
   429                           ;Config register CONFIG2H @ 0x300003
   430                           ;	Watchdog Timer Enable bits
   431                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
   432                           ;	Watchdog Timer Postscaler
   433                           ;	WDTPS = 32768, 1:32768
   434   300003                     	org	3145731
   435   300003  3C                 	db	60
   436                           
   437                           ; Padding undefined space
   438   300004                     	org	3145732
   439   300004  FF                 	db	255
   440                           
   441                           ;Config register CONFIG3H @ 0x300005
   442                           ;	CCP2 MUX bit
   443                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
   444                           ;	PORTB A/D Enable bit
   445                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
   446                           ;	Timer3 Clock Input MUX bit
   447                           ;	T3CMX = RC0, T3CKI function is on RC0
   448                           ;	SDO Output MUX bit
   449                           ;	SDOMX = RB3, SDO function is on RB3
   450                           ;	Master Clear Reset Pin Enable
   451                           ;	MCLRE = OFF, RE3 input pin enabled; external MCLR disabled
   452   300005                     	org	3145733
   453   300005  53                 	db	83
   454                           
   455                           ;Config register CONFIG4L @ 0x300006
   456                           ;	Stack Full/Underflow Reset
   457                           ;	STVREN = ON, Stack full/underflow will cause Reset
   458                           ;	Single-Supply ICSP Enable bit
   459                           ;	LVP = OFF, Single-Supply ICSP disabled
   460                           ;	Dedicated In-Circuit Debug/Programming Port Enable
   461                           ;	ICPRT = OFF, ICPORT disabled
   462                           ;	Extended Instruction Set Enable bit
   463                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
   464                           ;	Background Debugger Enable bit
   465                           ;	DEBUG = 0x1, unprogrammed default
   466   300006                     	org	3145734
   467   300006  81                 	db	129
   468                           
   469                           ; Padding undefined space
   470   300007                     	org	3145735
   471   300007  FF                 	db	255
   472                           
   473                           ;Config register CONFIG5L @ 0x300008
   474                           ;	Block 0 Code Protect
   475                           ;	CP0 = OFF, Block 0 is not code-protected
   476                           ;	Block 1 Code Protect
   477                           ;	CP1 = OFF, Block 1 is not code-protected
   478                           ;	Block 2 Code Protect
   479                           ;	CP2 = OFF, Block 2 is not code-protected
   480                           ;	Block 3 Code Protect
   481                           ;	CP3 = OFF, Block 3 is not code-protected
   482   300008                     	org	3145736
   483   300008  0F                 	db	15
   484                           
   485                           ;Config register CONFIG5H @ 0x300009
   486                           ;	Boot Block Code Protect
   487                           ;	CPB = OFF, Boot block is not code-protected
   488                           ;	Data EEPROM Code Protect
   489                           ;	CPD = OFF, Data EEPROM is not code-protected
   490   300009                     	org	3145737
   491   300009  C0                 	db	192
   492                           
   493                           ;Config register CONFIG6L @ 0x30000A
   494                           ;	Block 0 Write Protect
   495                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
   496                           ;	Block 1 Write Protect
   497                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
   498                           ;	Block 2 Write Protect
   499                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
   500                           ;	Block 3 Write Protect
   501                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
   502   30000A                     	org	3145738
   503   30000A  0F                 	db	15
   504                           
   505                           ;Config register CONFIG6H @ 0x30000B
   506                           ;	Configuration Registers Write Protect
   507                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   508                           ;	Boot Block Write Protect
   509                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
   510                           ;	Data EEPROM Write Protect
   511                           ;	WRTD = OFF, Data EEPROM is not write-protected
   512   30000B                     	org	3145739
   513   30000B  E0                 	db	224
   514                           
   515                           ;Config register CONFIG7L @ 0x30000C
   516                           ;	Block 0 Table Read Protect
   517                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
   518                           ;	Block 1 Table Read Protect
   519                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
   520                           ;	Block 2 Table Read Protect
   521                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
   522                           ;	Block 3 Table Read Protect
   523                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
   524   30000C                     	org	3145740
   525   30000C  0F                 	db	15
   526                           
   527                           ;Config register CONFIG7H @ 0x30000D
   528                           ;	Boot Block Table Read Protect
   529                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
   530   30000D                     	org	3145741
   531   30000D  40                 	db	64
   532                           tosu	equ	0xFFF
   533                           tosh	equ	0xFFE
   534                           tosl	equ	0xFFD
   535                           stkptr	equ	0xFFC
   536                           pclatu	equ	0xFFB
   537                           pclath	equ	0xFFA
   538                           pcl	equ	0xFF9
   539                           tblptru	equ	0xFF8
   540                           tblptrh	equ	0xFF7
   541                           tblptrl	equ	0xFF6
   542                           tablat	equ	0xFF5
   543                           prodh	equ	0xFF4
   544                           prodl	equ	0xFF3
   545                           indf0	equ	0xFEF
   546                           postinc0	equ	0xFEE
   547                           postdec0	equ	0xFED
   548                           preinc0	equ	0xFEC
   549                           plusw0	equ	0xFEB
   550                           fsr0h	equ	0xFEA
   551                           fsr0l	equ	0xFE9
   552                           wreg	equ	0xFE8
   553                           indf1	equ	0xFE7
   554                           postinc1	equ	0xFE6
   555                           postdec1	equ	0xFE5
   556                           preinc1	equ	0xFE4
   557                           plusw1	equ	0xFE3
   558                           fsr1h	equ	0xFE2
   559                           fsr1l	equ	0xFE1
   560                           bsr	equ	0xFE0
   561                           indf2	equ	0xFDF
   562                           postinc2	equ	0xFDE
   563                           postdec2	equ	0xFDD
   564                           preinc2	equ	0xFDC
   565                           plusw2	equ	0xFDB
   566                           fsr2h	equ	0xFDA
   567                           fsr2l	equ	0xFD9
   568                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      0       0
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                         _Config_ADC
                       _Config_Clock
                        _Config_Port
 ---------------------------------------------------------------------------------
 (1) _Config_Port                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Config_Clock                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Config_ADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Config_ADC
   _Config_Clock
   _Config_Port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      0       0       1        0.0%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBIGSFRhh         2C      0       0      20        0.0%
BITBIGSFRhl          E      0       0      21        0.0%
BITBIGSFRlhh        2A      0       0      22        0.0%
BITBIGSFRlhlh        1      0       0      23        0.0%
BITBIGSFRlhll        5      0       0      24        0.0%
BITBIGSFRllh        10      0       0      25        0.0%
BITBIGSFRlllhh      1B      0       0      26        0.0%
BITBIGSFRlllhl       2      0       0      27        0.0%
BITBIGSFRllll        8      0       0      28        0.0%
ABS                  0      0       0      29        0.0%
BIGRAM             7FF      0       0      30        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Aug 06 20:19:05 2022

                     l40 7FE2                       l42 7FF0                       l51 7FAC  
                     l54 7FD2                       l48 7F8C                       u10 7FF0  
                     u11 7FEC                      l730 7F80                      l740 7FB6  
                    l732 7F8E                      l742 7FC8                      l734 7F9A  
                    l736 7FAA                      l744 7FD4                      l738 7FAE  
                    l746 7FE0                     _LATC 000F8B                     _LATD 000F8C  
                   _main 7FD4                     start 0000             ___param_bank 000000  
    __end_of_Config_Port 7FAE                    ?_main 0000               _Config_ADC 7FAE  
                  _TRISC 000F94                    _TRISD 000F95          __initialization 7F7A  
   __end_of_Config_Clock 7F8E             __end_of_main 8000                   ??_main 0000  
          __activetblptr 000000                   _ADRESH 000FC4                   _ADRESL 000FC3  
                 _ANSELD 000F5E                   _SLRCON 000F7A              _Config_Port 7F8E  
                 isa$std 000001              ?_Config_ADC 0000               __accesstop 0060  
__end_of__initialization 7F7A            ___rparam_used 000001           __pcstackCOMRAM 0000  
           _Config_Clock 7F80                  __Hparam 0000                  __Lparam 0000  
                __pcinit 7F7A                  __ramtop 0800                  __ptext0 7FD4  
                __ptext1 7F8E                  __ptext2 7F80                  __ptext3 7FAE  
   end_of_initialization 7F7A             ?_Config_Port 0000             ??_Config_ADC 0000  
              _TRISAbits 000F92       __end_of_Config_ADC 7FD4      start_initialization 7F7A  
             _ADCON0bits 000FC2               _ADCON1bits 000FC1               _ADCON2bits 000FC0  
               __Hrparam 0000                 __Lrparam 0000               _ANSELAbits 000F5B  
               isa$xinst 000000            ?_Config_Clock 0000               _OSCCONbits 000FD3  
         ??_Config_Clock 0000            ??_Config_Port 0000  
