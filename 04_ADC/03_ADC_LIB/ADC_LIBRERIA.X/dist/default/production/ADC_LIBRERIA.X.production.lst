

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Aug 10 22:33:45 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    55                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    56                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    57                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    58   000000                     
    59                           ; Version 2.35
    60                           ; Generated 05/05/2021 GMT
    61                           ; 
    62                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution. Publication is not required when
    76                           ;        this file is used in an embedded application.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC18F45K50 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94   000000                     _ADRESL	set	4035
    95   000000                     _ADRESH	set	4036
    96   000000                     _ADCON0bits	set	4034
    97   000000                     _LATDbits	set	3980
    98   000000                     _ANSELAbits	set	3931
    99   000000                     _SLRCON	set	3962
   100   000000                     _LATD	set	3980
   101   000000                     _OSCCONbits	set	4051
   102   000000                     _TRISAbits	set	3986
   103   000000                     _TRISD	set	3989
   104   000000                     _ANSELD	set	3934
   105   000000                     _ADCON2bits	set	4032
   106   000000                     _ADCON1bits	set	4033
   107                           
   108                           	psect	smallconst
   109   000800                     __psmallconst:
   110                           	callstack 0
   111   000800  00                 	db	0
   112   000801                     STR_1:
   113   000801  41                 	db	65	;'A'
   114   000802  4E                 	db	78	;'N'
   115   000803  30                 	db	48	;'0'
   116   000804  3A                 	db	58	;':'
   117   000805  20                 	db	32
   118   000806  25                 	db	37
   119   000807  30                 	db	48	;'0'
   120   000808  34                 	db	52	;'4'
   121   000809  64                 	db	100	;'d'
   122   00080A  20                 	db	32
   123   00080B  25                 	db	37
   124   00080C  30                 	db	48	;'0'
   125   00080D  2E                 	db	46
   126   00080E  32                 	db	50	;'2'
   127   00080F  66                 	db	102	;'f'
   128   000810  76                 	db	118	;'v'
   129   000811  00                 	db	0
   130   000812                     STR_2:
   131   000812  41                 	db	65	;'A'
   132   000813  4E                 	db	78	;'N'
   133   000814  31                 	db	49	;'1'
   134   000815  3A                 	db	58	;':'
   135   000816  20                 	db	32
   136   000817  25                 	db	37
   137   000818  30                 	db	48	;'0'
   138   000819  34                 	db	52	;'4'
   139   00081A  64                 	db	100	;'d'
   140   00081B  20                 	db	32
   141   00081C  25                 	db	37
   142   00081D  30                 	db	48	;'0'
   143   00081E  2E                 	db	46
   144   00081F  32                 	db	50	;'2'
   145   000820  66                 	db	102	;'f'
   146   000821  76                 	db	118	;'v'
   147   000822  00                 	db	0
   148   000823                     STR_3:
   149   000823  69                 	db	105	;'i'
   150   000824  6E                 	db	110	;'n'
   151   000825  66                 	db	102	;'f'
   152   000826  00                 	db	0
   153   000827                     STR_6:
   154   000827  6E                 	db	110	;'n'
   155   000828  61                 	db	97	;'a'
   156   000829  6E                 	db	110	;'n'
   157   00082A  00                 	db	0
   158   00082B  00                 	db	0	; dummy byte at the end
   159   000000                     
   160                           ; #config settings
   161                           
   162                           	psect	cinit
   163   003AA4                     __pcinit:
   164                           	callstack 0
   165   003AA4                     start_initialization:
   166                           	callstack 0
   167   003AA4                     __initialization:
   168                           	callstack 0
   169                           
   170                           ; Clear objects allocated to BANK1 (80 bytes)
   171   003AA4  EE01  F000         	lfsr	0,__pbssBANK1
   172   003AA8  0E50               	movlw	80
   173   003AAA                     clear_0:
   174   003AAA  6AEE               	clrf	postinc0,c
   175   003AAC  06E8               	decf	wreg,f,c
   176   003AAE  E1FD               	bnz	clear_0
   177                           
   178                           ; Clear objects allocated to BANK0 (40 bytes)
   179   003AB0  EE00  F0A2         	lfsr	0,__pbssBANK0
   180   003AB4  0E28               	movlw	40
   181   003AB6                     clear_1:
   182   003AB6  6AEE               	clrf	postinc0,c
   183   003AB8  06E8               	decf	wreg,f,c
   184   003ABA  E1FD               	bnz	clear_1
   185                           
   186                           ; Clear objects allocated to COMRAM (1 bytes)
   187   003ABC  6A5F               	clrf	__pbssCOMRAM& (0+255),c
   188   003ABE                     end_of_initialization:
   189                           	callstack 0
   190   003ABE                     __end_of__initialization:
   191                           	callstack 0
   192   003ABE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   193   003AC0  6EF8               	movwf	tblptru,c
   194   003AC2  0100               	movlb	0
   195   003AC4  EF27  F016         	goto	_main	;jump to C main() function
   196                           
   197                           	psect	bssCOMRAM
   198   00005F                     __pbssCOMRAM:
   199                           	callstack 0
   200   00005F                     _flags:
   201                           	callstack 0
   202   00005F                     	ds	1
   203                           
   204                           	psect	bssBANK0
   205   0000A2                     __pbssBANK0:
   206                           	callstack 0
   207   0000A2                     floorf@F526:
   208                           	callstack 0
   209   0000A2                     	ds	4
   210   0000A6                     ___fpclassifyf@F465:
   211                           	callstack 0
   212   0000A6                     	ds	4
   213   0000AA                     _voltaje2:
   214                           	callstack 0
   215   0000AA                     	ds	4
   216   0000AE                     _voltaje1:
   217                           	callstack 0
   218   0000AE                     	ds	4
   219   0000B2                     _width:
   220                           	callstack 0
   221   0000B2                     	ds	2
   222   0000B4                     _prec:
   223                           	callstack 0
   224   0000B4                     	ds	2
   225   0000B6                     _dato2:
   226                           	callstack 0
   227   0000B6                     	ds	2
   228   0000B8                     _dato1:
   229                           	callstack 0
   230   0000B8                     	ds	2
   231   0000BA                     _str_buffeLcd:
   232                           	callstack 0
   233   0000BA                     	ds	16
   234                           
   235                           	psect	bssBANK1
   236   000100                     __pbssBANK1:
   237                           	callstack 0
   238   000100                     _dbuf:
   239                           	callstack 0
   240   000100                     	ds	80
   241                           
   242                           	psect	cstackBANK0
   243   000060                     __pcstackBANK0:
   244                           	callstack 0
   245   000060                     efgtoa@ne:
   246                           	callstack 0
   247                           
   248                           ; 2 bytes @ 0x0
   249   000060                     	ds	2
   250   000062                     efgtoa@p:
   251                           	callstack 0
   252                           
   253                           ; 2 bytes @ 0x2
   254   000062                     	ds	2
   255   000064                     efgtoa@t:
   256                           	callstack 0
   257                           
   258                           ; 2 bytes @ 0x4
   259   000064                     	ds	2
   260   000066                     _efgtoa$1049:
   261                           	callstack 0
   262                           
   263                           ; 2 bytes @ 0x6
   264   000066                     	ds	2
   265   000068                     efgtoa@pp:
   266                           	callstack 0
   267                           
   268                           ; 1 bytes @ 0x8
   269   000068                     	ds	1
   270   000069                     efgtoa@mode:
   271                           	callstack 0
   272                           
   273                           ; 1 bytes @ 0x9
   274   000069                     	ds	1
   275   00006A                     efgtoa@nmode:
   276                           	callstack 0
   277                           
   278                           ; 1 bytes @ 0xA
   279   00006A                     	ds	1
   280   00006B                     efgtoa@d:
   281                           	callstack 0
   282                           
   283                           ; 2 bytes @ 0xB
   284   00006B                     	ds	2
   285   00006D                     efgtoa@m:
   286                           	callstack 0
   287                           
   288                           ; 2 bytes @ 0xD
   289   00006D                     	ds	2
   290   00006F                     efgtoa@e:
   291                           	callstack 0
   292                           
   293                           ; 2 bytes @ 0xF
   294   00006F                     	ds	2
   295   000071                     efgtoa@w:
   296                           	callstack 0
   297                           
   298                           ; 2 bytes @ 0x11
   299   000071                     	ds	2
   300   000073                     efgtoa@ou:
   301                           	callstack 0
   302                           
   303                           ; 4 bytes @ 0x13
   304   000073                     	ds	4
   305   000077                     efgtoa@h:
   306                           	callstack 0
   307                           
   308                           ; 4 bytes @ 0x17
   309   000077                     	ds	4
   310   00007B                     efgtoa@l:
   311                           	callstack 0
   312                           
   313                           ; 4 bytes @ 0x1B
   314   00007B                     	ds	4
   315   00007F                     efgtoa@i:
   316                           	callstack 0
   317                           
   318                           ; 2 bytes @ 0x1F
   319   00007F                     	ds	2
   320   000081                     efgtoa@sign:
   321                           	callstack 0
   322                           
   323                           ; 1 bytes @ 0x21
   324   000081                     	ds	1
   325   000082                     efgtoa@g:
   326                           	callstack 0
   327                           
   328                           ; 4 bytes @ 0x22
   329   000082                     	ds	4
   330   000086                     efgtoa@n:
   331                           	callstack 0
   332                           
   333                           ; 2 bytes @ 0x26
   334   000086                     	ds	2
   335   000088                     efgtoa@u:
   336                           	callstack 0
   337                           
   338                           ; 4 bytes @ 0x28
   339   000088                     	ds	4
   340   00008C                     vfpfcnvrt@fp:
   341                           	callstack 0
   342                           
   343                           ; 2 bytes @ 0x2C
   344   00008C                     	ds	2
   345   00008E                     vfpfcnvrt@fmt:
   346                           	callstack 0
   347                           
   348                           ; 2 bytes @ 0x2E
   349   00008E                     	ds	2
   350   000090                     vfpfcnvrt@ap:
   351                           	callstack 0
   352                           
   353                           ; 2 bytes @ 0x30
   354   000090                     	ds	2
   355   000092                     ?_vfprintf:
   356                           	callstack 0
   357   000092                     vfprintf@fp:
   358                           	callstack 0
   359                           
   360                           ; 2 bytes @ 0x32
   361   000092                     	ds	2
   362   000094                     vfprintf@fmt:
   363                           	callstack 0
   364                           
   365                           ; 2 bytes @ 0x34
   366   000094                     	ds	2
   367   000096                     vfprintf@ap:
   368                           	callstack 0
   369                           
   370                           ; 2 bytes @ 0x36
   371   000096                     	ds	2
   372   000098                     ?_sprintf:
   373                           	callstack 0
   374   000098                     sprintf@s:
   375                           	callstack 0
   376                           
   377                           ; 2 bytes @ 0x38
   378   000098                     	ds	2
   379   00009A                     sprintf@fmt:
   380                           	callstack 0
   381                           
   382                           ; 2 bytes @ 0x3A
   383   00009A                     	ds	8
   384                           
   385                           	psect	cstackCOMRAM
   386   000001                     __pcstackCOMRAM:
   387                           	callstack 0
   388   000001                     ?_ADC_Read:
   389                           	callstack 0
   390   000001                     ?___fpclassifyf:
   391                           	callstack 0
   392   000001                     ?_isdigit:
   393                           	callstack 0
   394   000001                     ?_isspace:
   395                           	callstack 0
   396   000001                     ?___wmul:
   397                           	callstack 0
   398   000001                     ?___fladd:
   399                           	callstack 0
   400   000001                     ?___fldiv:
   401                           	callstack 0
   402   000001                     ?_labs:
   403                           	callstack 0
   404   000001                     ?___flneg:
   405                           	callstack 0
   406   000001                     ?___fltol:
   407                           	callstack 0
   408   000001                     ?___xxtofl:
   409                           	callstack 0
   410   000001                     ?___aodiv:
   411                           	callstack 0
   412   000001                     ?___aomod:
   413                           	callstack 0
   414   000001                     Lcd_Port@a:
   415                           	callstack 0
   416   000001                     ___wmul@multiplier:
   417                           	callstack 0
   418   000001                     isdigit@c:
   419                           	callstack 0
   420   000001                     isspace@c:
   421                           	callstack 0
   422   000001                     memcpy@d1:
   423                           	callstack 0
   424   000001                     fputc@c:
   425                           	callstack 0
   426   000001                     strcpy@dest:
   427                           	callstack 0
   428   000001                     ___fleq@ff1:
   429                           	callstack 0
   430   000001                     ___flneg@f1:
   431                           	callstack 0
   432   000001                     ___fltol@f1:
   433                           	callstack 0
   434   000001                     ___fladd@b:
   435                           	callstack 0
   436   000001                     ___fldiv@b:
   437                           	callstack 0
   438   000001                     ___xxtofl@val:
   439                           	callstack 0
   440   000001                     ___fpclassifyf@x:
   441                           	callstack 0
   442   000001                     labs@a:
   443                           	callstack 0
   444   000001                     ___aodiv@dividend:
   445                           	callstack 0
   446   000001                     ___aomod@dividend:
   447                           	callstack 0
   448                           
   449                           ; 8 bytes @ 0x0
   450   000001                     	ds	1
   451   000002                     ??_Lcd_Cmd:
   452   000002                     Lcd_Write_Char@temp:
   453                           	callstack 0
   454                           
   455                           ; 1 bytes @ 0x1
   456   000002                     	ds	1
   457   000003                     ??_ADC_Read:
   458   000003                     ??_isdigit:
   459   000003                     ??_isspace:
   460   000003                     Lcd_Cmd@a:
   461                           	callstack 0
   462   000003                     Lcd_Write_Char@y:
   463                           	callstack 0
   464   000003                     ___wmul@multiplicand:
   465                           	callstack 0
   466   000003                     memcpy@s1:
   467                           	callstack 0
   468   000003                     fputc@fp:
   469                           	callstack 0
   470   000003                     strcpy@src:
   471                           	callstack 0
   472                           
   473                           ; 2 bytes @ 0x2
   474   000003                     	ds	1
   475   000004                     ??_Lcd_Init:
   476   000004                     Lcd_Set_Cursor@b:
   477                           	callstack 0
   478   000004                     Lcd_Write_Char@a:
   479                           	callstack 0
   480                           
   481                           ; 1 bytes @ 0x3
   482   000004                     	ds	1
   483   000005                     ??_fputc:
   484   000005                     ??___fpclassifyf:
   485   000005                     ??_labs:
   486   000005                     ??___fltol:
   487   000005                     ??___xxtofl:
   488   000005                     ADC_Read@channel:
   489                           	callstack 0
   490   000005                     Lcd_Set_Cursor@a:
   491                           	callstack 0
   492   000005                     _isspace$1129:
   493                           	callstack 0
   494   000005                     Lcd_Write_String@a:
   495                           	callstack 0
   496   000005                     ___wmul@product:
   497                           	callstack 0
   498   000005                     memcpy@n:
   499                           	callstack 0
   500   000005                     strcpy@s:
   501                           	callstack 0
   502   000005                     ___fleq@ff2:
   503                           	callstack 0
   504   000005                     ___fladd@a:
   505                           	callstack 0
   506   000005                     ___fldiv@a:
   507                           	callstack 0
   508                           
   509                           ; 4 bytes @ 0x4
   510   000005                     	ds	1
   511   000006                     Lcd_Set_Cursor@z:
   512                           	callstack 0
   513                           
   514                           ; 1 bytes @ 0x5
   515   000006                     	ds	1
   516   000007                     ?_atoi:
   517                           	callstack 0
   518   000007                     Lcd_Set_Cursor@y:
   519                           	callstack 0
   520   000007                     Lcd_Write_String@i:
   521                           	callstack 0
   522   000007                     atoi@s:
   523                           	callstack 0
   524   000007                     memcpy@d:
   525                           	callstack 0
   526   000007                     strcpy@d:
   527                           	callstack 0
   528                           
   529                           ; 2 bytes @ 0x6
   530   000007                     	ds	1
   531   000008                     Lcd_Set_Cursor@temp:
   532                           	callstack 0
   533                           
   534                           ; 1 bytes @ 0x7
   535   000008                     	ds	1
   536   000009                     ??___fladd:
   537   000009                     ??___fldiv:
   538   000009                     ??_atoi:
   539   000009                     ??___fleq:
   540   000009                     ___fltol@sign1:
   541                           	callstack 0
   542   000009                     ___xxtofl@sign:
   543                           	callstack 0
   544   000009                     ___fpclassifyf@e:
   545                           	callstack 0
   546   000009                     memcpy@s:
   547                           	callstack 0
   548   000009                     ___aodiv@divisor:
   549                           	callstack 0
   550   000009                     ___aomod@divisor:
   551                           	callstack 0
   552                           
   553                           ; 8 bytes @ 0x8
   554   000009                     	ds	1
   555   00000A                     ___fltol@exp1:
   556                           	callstack 0
   557   00000A                     ___xxtofl@exp:
   558                           	callstack 0
   559   00000A                     fputs@s:
   560                           	callstack 0
   561                           
   562                           ; 2 bytes @ 0x9
   563   00000A                     	ds	1
   564   00000B                     memcpy@tmp:
   565                           	callstack 0
   566   00000B                     ___xxtofl@arg:
   567                           	callstack 0
   568   00000B                     ___fpclassifyf@u:
   569                           	callstack 0
   570                           
   571                           ; 4 bytes @ 0xA
   572   00000B                     	ds	1
   573   00000C                     atoi@neg:
   574                           	callstack 0
   575   00000C                     fputs@fp:
   576                           	callstack 0
   577                           
   578                           ; 2 bytes @ 0xB
   579   00000C                     	ds	1
   580   00000D                     ___fladd@signs:
   581                           	callstack 0
   582   00000D                     ___fldiv@rem:
   583                           	callstack 0
   584                           
   585                           ; 4 bytes @ 0xC
   586   00000D                     	ds	1
   587   00000E                     ___fladd@aexp:
   588                           	callstack 0
   589   00000E                     fputs@c:
   590                           	callstack 0
   591   00000E                     atoi@n:
   592                           	callstack 0
   593                           
   594                           ; 2 bytes @ 0xD
   595   00000E                     	ds	1
   596   00000F                     ?___flmul:
   597                           	callstack 0
   598   00000F                     ___fladd@bexp:
   599                           	callstack 0
   600   00000F                     fputs@i:
   601                           	callstack 0
   602   00000F                     ___flmul@b:
   603                           	callstack 0
   604                           
   605                           ; 4 bytes @ 0xE
   606   00000F                     	ds	1
   607   000010                     ___fladd@grs:
   608                           	callstack 0
   609                           
   610                           ; 1 bytes @ 0xF
   611   000010                     	ds	1
   612   000011                     ___aodiv@counter:
   613                           	callstack 0
   614   000011                     ___aomod@counter:
   615                           	callstack 0
   616   000011                     ___fldiv@sign:
   617                           	callstack 0
   618   000011                     pad@fp:
   619                           	callstack 0
   620                           
   621                           ; 2 bytes @ 0x10
   622   000011                     	ds	1
   623   000012                     ___aodiv@sign:
   624                           	callstack 0
   625   000012                     ___aomod@sign:
   626                           	callstack 0
   627   000012                     ___fldiv@new_exp:
   628                           	callstack 0
   629                           
   630                           ; 2 bytes @ 0x11
   631   000012                     	ds	1
   632   000013                     ?_abs:
   633                           	callstack 0
   634   000013                     pad@buf:
   635                           	callstack 0
   636   000013                     abs@a:
   637                           	callstack 0
   638   000013                     ___flmul@a:
   639                           	callstack 0
   640   000013                     ___aodiv@quotient:
   641                           	callstack 0
   642                           
   643                           ; 8 bytes @ 0x12
   644   000013                     	ds	1
   645   000014                     ___fldiv@grs:
   646                           	callstack 0
   647                           
   648                           ; 4 bytes @ 0x13
   649   000014                     	ds	1
   650   000015                     ??_abs:
   651   000015                     pad@p:
   652                           	callstack 0
   653                           
   654                           ; 2 bytes @ 0x14
   655   000015                     	ds	2
   656   000017                     ??___flmul:
   657   000017                     ??_pad:
   658                           
   659                           ; 1 bytes @ 0x16
   660   000017                     	ds	1
   661   000018                     ___fldiv@bexp:
   662                           	callstack 0
   663   000018                     pad@i:
   664                           	callstack 0
   665                           
   666                           ; 2 bytes @ 0x17
   667   000018                     	ds	1
   668   000019                     ___fldiv@aexp:
   669                           	callstack 0
   670                           
   671                           ; 1 bytes @ 0x18
   672   000019                     	ds	1
   673   00001A                     ?_floorf:
   674                           	callstack 0
   675   00001A                     pad@w:
   676                           	callstack 0
   677   00001A                     floorf@x:
   678                           	callstack 0
   679                           
   680                           ; 4 bytes @ 0x19
   681   00001A                     	ds	1
   682   00001B                     ___flmul@sign:
   683                           	callstack 0
   684                           
   685                           ; 1 bytes @ 0x1A
   686   00001B                     	ds	1
   687   00001C                     dtoa@fp:
   688                           	callstack 0
   689   00001C                     ___flmul@grs:
   690                           	callstack 0
   691                           
   692                           ; 4 bytes @ 0x1B
   693   00001C                     	ds	2
   694   00001E                     ??_floorf:
   695   00001E                     dtoa@d:
   696                           	callstack 0
   697                           
   698                           ; 8 bytes @ 0x1D
   699   00001E                     	ds	2
   700   000020                     ___flmul@aexp:
   701                           	callstack 0
   702                           
   703                           ; 1 bytes @ 0x1F
   704   000020                     	ds	1
   705   000021                     ___flmul@bexp:
   706                           	callstack 0
   707                           
   708                           ; 1 bytes @ 0x20
   709   000021                     	ds	1
   710   000022                     ___flmul@prod:
   711                           	callstack 0
   712                           
   713                           ; 4 bytes @ 0x21
   714   000022                     	ds	2
   715   000024                     floorf@m:
   716                           	callstack 0
   717                           
   718                           ; 4 bytes @ 0x23
   719   000024                     	ds	2
   720   000026                     ??_dtoa:
   721   000026                     ___flmul@temp:
   722                           	callstack 0
   723                           
   724                           ; 2 bytes @ 0x25
   725   000026                     	ds	2
   726   000028                     ?___flsub:
   727                           	callstack 0
   728   000028                     floorf@e:
   729                           	callstack 0
   730   000028                     ___flge@ff1:
   731                           	callstack 0
   732   000028                     ___flsub@b:
   733                           	callstack 0
   734                           
   735                           ; 4 bytes @ 0x27
   736   000028                     	ds	2
   737   00002A                     floorf@u:
   738                           	callstack 0
   739                           
   740                           ; 4 bytes @ 0x29
   741   00002A                     	ds	2
   742   00002C                     ___flge@ff2:
   743                           	callstack 0
   744   00002C                     ___flsub@a:
   745                           	callstack 0
   746                           
   747                           ; 4 bytes @ 0x2B
   748   00002C                     	ds	2
   749   00002E                     _dtoa$1018:
   750                           	callstack 0
   751                           
   752                           ; 2 bytes @ 0x2D
   753   00002E                     	ds	2
   754   000030                     ??___flge:
   755   000030                     dtoa@p:
   756                           	callstack 0
   757                           
   758                           ; 2 bytes @ 0x2F
   759   000030                     	ds	2
   760   000032                     dtoa@w:
   761                           	callstack 0
   762                           
   763                           ; 2 bytes @ 0x31
   764   000032                     	ds	2
   765   000034                     efgtoa@fp:
   766                           	callstack 0
   767   000034                     dtoa@n:
   768                           	callstack 0
   769                           
   770                           ; 8 bytes @ 0x33
   771   000034                     	ds	2
   772   000036                     efgtoa@f:
   773                           	callstack 0
   774                           
   775                           ; 4 bytes @ 0x35
   776   000036                     	ds	4
   777   00003A                     efgtoa@c:
   778                           	callstack 0
   779                           
   780                           ; 1 bytes @ 0x39
   781   00003A                     	ds	1
   782   00003B                     ??_efgtoa:
   783                           
   784                           ; 1 bytes @ 0x3A
   785   00003B                     	ds	1
   786   00003C                     dtoa@i:
   787                           	callstack 0
   788                           
   789                           ; 2 bytes @ 0x3B
   790   00003C                     	ds	2
   791   00003E                     dtoa@s:
   792                           	callstack 0
   793                           
   794                           ; 1 bytes @ 0x3D
   795   00003E                     	ds	1
   796   00003F                     ??_vfpfcnvrt:
   797                           
   798                           ; 1 bytes @ 0x3E
   799   00003F                     	ds	3
   800   000042                     vfpfcnvrt@done:
   801                           	callstack 0
   802                           
   803                           ; 2 bytes @ 0x41
   804   000042                     	ds	2
   805   000044                     vfpfcnvrt@convarg:
   806                           	callstack 0
   807                           
   808                           ; 8 bytes @ 0x43
   809   000044                     	ds	8
   810   00004C                     vfpfcnvrt@c:
   811                           	callstack 0
   812                           
   813                           ; 1 bytes @ 0x4B
   814   00004C                     	ds	1
   815   00004D                     vfpfcnvrt@cp:
   816                           	callstack 0
   817                           
   818                           ; 2 bytes @ 0x4C
   819   00004D                     	ds	2
   820   00004F                     vfprintf@cfmt:
   821                           	callstack 0
   822                           
   823                           ; 2 bytes @ 0x4E
   824   00004F                     	ds	2
   825   000051                     sprintf@ap:
   826                           	callstack 0
   827                           
   828                           ; 2 bytes @ 0x50
   829   000051                     	ds	2
   830   000053                     sprintf@f:
   831                           	callstack 0
   832                           
   833                           ; 11 bytes @ 0x52
   834   000053                     	ds	11
   835   00005E                     ??_main:
   836                           
   837                           ; 1 bytes @ 0x5D
   838   00005E                     	ds	1
   839                           
   840 ;;
   841 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   842 ;;
   843 ;; *************** function _main *****************
   844 ;; Defined at:
   845 ;;		line 25 in file "main.c"
   846 ;; Parameters:    Size  Location     Type
   847 ;;		None
   848 ;; Auto vars:     Size  Location     Type
   849 ;;		None
   850 ;; Return value:  Size  Location     Type
   851 ;;                  1    wreg      void 
   852 ;; Registers used:
   853 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   854 ;; Tracked objects:
   855 ;;		On entry : 0/0
   856 ;;		On exit  : 0/0
   857 ;;		Unchanged: 0/0
   858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   859 ;;      Params:         0       0       0       0       0       0       0       0       0
   860 ;;      Locals:         0       0       0       0       0       0       0       0       0
   861 ;;      Temps:          1       0       0       0       0       0       0       0       0
   862 ;;      Totals:         1       0       0       0       0       0       0       0       0
   863 ;;Total ram usage:        1 bytes
   864 ;; Hardware stack levels required when called: 8
   865 ;; This function calls:
   866 ;;		_ADC_Init
   867 ;;		_ADC_Read
   868 ;;		_Config_Clock
   869 ;;		_Config_Port
   870 ;;		_Lcd_Clear
   871 ;;		_Lcd_Init
   872 ;;		_Lcd_Set_Cursor
   873 ;;		_Lcd_Write_String
   874 ;;		___flmul
   875 ;;		___xxtofl
   876 ;;		_sprintf
   877 ;; This function is called by:
   878 ;;		Startup code after reset
   879 ;; This function uses a non-reentrant model
   880 ;;
   881                           
   882                           	psect	text0
   883   002C4E                     __ptext0:
   884                           	callstack 0
   885   002C4E                     _main:
   886                           	callstack 23
   887   002C4E                     
   888                           ;main.c: 26:     Config_Clock();
   889   002C4E  EC98  F01D         	call	_Config_Clock	;wreg free
   890                           
   891                           ;main.c: 27:     Config_Port();
   892   002C52  EC83  F01D         	call	_Config_Port	;wreg free
   893                           
   894                           ;main.c: 28:     Lcd_Init();
   895   002C56  ECC5  F01A         	call	_Lcd_Init	;wreg free
   896                           
   897                           ;main.c: 29:     Lcd_Clear();
   898   002C5A  EC91  F01D         	call	_Lcd_Clear	;wreg free
   899                           
   900                           ;main.c: 30:     ADC_Init();
   901   002C5E  EC74  F01D         	call	_ADC_Init	;wreg free
   902   002C62                     l4179:
   903                           
   904                           ;main.c: 33:         dato1=ADC_Read(ADC_0);
   905   002C62  0E00               	movlw	0
   906   002C64  EC0D  F01D         	call	_ADC_Read
   907   002C68  C001  F0B8         	movff	?_ADC_Read,_dato1
   908   002C6C  C002  F0B9         	movff	?_ADC_Read+1,_dato1+1
   909   002C70                     
   910                           ;main.c: 34:         voltaje1=dato1*(5.0/1024);
   911   002C70  C0B8  F001         	movff	_dato1,___xxtofl@val
   912   002C74  C0B9  F002         	movff	_dato1+1,___xxtofl@val+1
   913   002C78  6A03               	clrf	(___xxtofl@val+2)^0,c
   914   002C7A  6A04               	clrf	(___xxtofl@val+3)^0,c
   915   002C7C  0E00               	movlw	0
   916   002C7E  EC89  F014         	call	___xxtofl
   917   002C82  C001  F00F         	movff	?___xxtofl,___flmul@b
   918   002C86  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
   919   002C8A  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
   920   002C8E  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
   921   002C92  0E00               	movlw	0
   922   002C94  6E13               	movwf	___flmul@a^0,c
   923   002C96  0E00               	movlw	0
   924   002C98  6E14               	movwf	(___flmul@a+1)^0,c
   925   002C9A  0EA0               	movlw	160
   926   002C9C  6E15               	movwf	(___flmul@a+2)^0,c
   927   002C9E  0E3B               	movlw	59
   928   002CA0  6E16               	movwf	(___flmul@a+3)^0,c
   929   002CA2  EC43  F00E         	call	___flmul	;wreg free
   930   002CA6  C00F  F0AE         	movff	?___flmul,_voltaje1
   931   002CAA  C010  F0AF         	movff	?___flmul+1,_voltaje1+1
   932   002CAE  C011  F0B0         	movff	?___flmul+2,_voltaje1+2
   933   002CB2  C012  F0B1         	movff	?___flmul+3,_voltaje1+3
   934   002CB6                     
   935                           ;main.c: 35:         sprintf(str_buffeLcd,"AN0: %04d %0.2fv",dato1,voltaje1);
   936   002CB6  0EBA               	movlw	low _str_buffeLcd
   937   002CB8  0100               	movlb	0	; () banked
   938   002CBA  6F98               	movwf	sprintf@s& (0+255),b
   939   002CBC  0E00               	movlw	high _str_buffeLcd
   940   002CBE  6F99               	movwf	(sprintf@s+1)& (0+255),b
   941   002CC0  0E01               	movlw	low STR_1
   942   002CC2  6F9A               	movwf	sprintf@fmt& (0+255),b
   943   002CC4  0E08               	movlw	high STR_1
   944   002CC6  6F9B               	movwf	(sprintf@fmt+1)& (0+255),b
   945   002CC8  C0B8  F09C         	movff	_dato1,?_sprintf+4
   946   002CCC  C0B9  F09D         	movff	_dato1+1,?_sprintf+5
   947   002CD0  C0AE  F09E         	movff	_voltaje1,?_sprintf+6
   948   002CD4  C0AF  F09F         	movff	_voltaje1+1,?_sprintf+7
   949   002CD8  C0B0  F0A0         	movff	_voltaje1+2,?_sprintf+8
   950   002CDC  C0B1  F0A1         	movff	_voltaje1+3,?_sprintf+9
   951   002CE0  EC93  F01B         	call	_sprintf	;wreg free
   952   002CE4                     
   953                           ;main.c: 36:         Lcd_Set_Cursor(1,1);
   954   002CE4  0E01               	movlw	1
   955   002CE6  6E04               	movwf	Lcd_Set_Cursor@b^0,c
   956   002CE8  0E01               	movlw	1
   957   002CEA  EC32  F01B         	call	_Lcd_Set_Cursor
   958   002CEE                     
   959                           ;main.c: 37:         Lcd_Write_String(str_buffeLcd);
   960   002CEE  0EBA               	movlw	low _str_buffeLcd
   961   002CF0  6E05               	movwf	Lcd_Write_String@a^0,c
   962   002CF2  0E00               	movlw	high _str_buffeLcd
   963   002CF4  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
   964   002CF6  ECB5  F01C         	call	_Lcd_Write_String	;wreg free
   965   002CFA                     
   966                           ;main.c: 38:         _delay((unsigned long)((10)*(16000000UL/4000.0)));
   967   002CFA  0E34               	movlw	52
   968   002CFC  6E5E               	movwf	??_main^0,c
   969   002CFE  0EF2               	movlw	242
   970   002D00                     u4537:
   971   002D00  2EE8               	decfsz	wreg,f,c
   972   002D02  D7FE               	bra	u4537
   973   002D04  2E5E               	decfsz	??_main^0,f,c
   974   002D06  D7FC               	bra	u4537
   975   002D08                     
   976                           ;main.c: 41:         dato2=ADC_Read(ADC_1);
   977   002D08  0E01               	movlw	1
   978   002D0A  EC0D  F01D         	call	_ADC_Read
   979   002D0E  C001  F0B6         	movff	?_ADC_Read,_dato2
   980   002D12  C002  F0B7         	movff	?_ADC_Read+1,_dato2+1
   981   002D16                     
   982                           ;main.c: 42:         voltaje2=dato2*(5.0/1024);
   983   002D16  C0B6  F001         	movff	_dato2,___xxtofl@val
   984   002D1A  C0B7  F002         	movff	_dato2+1,___xxtofl@val+1
   985   002D1E  6A03               	clrf	(___xxtofl@val+2)^0,c
   986   002D20  6A04               	clrf	(___xxtofl@val+3)^0,c
   987   002D22  0E00               	movlw	0
   988   002D24  EC89  F014         	call	___xxtofl
   989   002D28  C001  F00F         	movff	?___xxtofl,___flmul@b
   990   002D2C  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
   991   002D30  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
   992   002D34  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
   993   002D38  0E00               	movlw	0
   994   002D3A  6E13               	movwf	___flmul@a^0,c
   995   002D3C  0E00               	movlw	0
   996   002D3E  6E14               	movwf	(___flmul@a+1)^0,c
   997   002D40  0EA0               	movlw	160
   998   002D42  6E15               	movwf	(___flmul@a+2)^0,c
   999   002D44  0E3B               	movlw	59
  1000   002D46  6E16               	movwf	(___flmul@a+3)^0,c
  1001   002D48  EC43  F00E         	call	___flmul	;wreg free
  1002   002D4C  C00F  F0AA         	movff	?___flmul,_voltaje2
  1003   002D50  C010  F0AB         	movff	?___flmul+1,_voltaje2+1
  1004   002D54  C011  F0AC         	movff	?___flmul+2,_voltaje2+2
  1005   002D58  C012  F0AD         	movff	?___flmul+3,_voltaje2+3
  1006   002D5C                     
  1007                           ;main.c: 43:         sprintf(str_buffeLcd,"AN1: %04d %0.2fv",dato2,voltaje2);
  1008   002D5C  0EBA               	movlw	low _str_buffeLcd
  1009   002D5E  0100               	movlb	0	; () banked
  1010   002D60  6F98               	movwf	sprintf@s& (0+255),b
  1011   002D62  0E00               	movlw	high _str_buffeLcd
  1012   002D64  6F99               	movwf	(sprintf@s+1)& (0+255),b
  1013   002D66  0E12               	movlw	low STR_2
  1014   002D68  6F9A               	movwf	sprintf@fmt& (0+255),b
  1015   002D6A  0E08               	movlw	high STR_2
  1016   002D6C  6F9B               	movwf	(sprintf@fmt+1)& (0+255),b
  1017   002D6E  C0B6  F09C         	movff	_dato2,?_sprintf+4
  1018   002D72  C0B7  F09D         	movff	_dato2+1,?_sprintf+5
  1019   002D76  C0AA  F09E         	movff	_voltaje2,?_sprintf+6
  1020   002D7A  C0AB  F09F         	movff	_voltaje2+1,?_sprintf+7
  1021   002D7E  C0AC  F0A0         	movff	_voltaje2+2,?_sprintf+8
  1022   002D82  C0AD  F0A1         	movff	_voltaje2+3,?_sprintf+9
  1023   002D86  EC93  F01B         	call	_sprintf	;wreg free
  1024   002D8A                     
  1025                           ;main.c: 44:         Lcd_Set_Cursor(2,1);
  1026   002D8A  0E01               	movlw	1
  1027   002D8C  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1028   002D8E  0E02               	movlw	2
  1029   002D90  EC32  F01B         	call	_Lcd_Set_Cursor
  1030   002D94                     
  1031                           ;main.c: 45:         Lcd_Write_String(str_buffeLcd);
  1032   002D94  0EBA               	movlw	low _str_buffeLcd
  1033   002D96  6E05               	movwf	Lcd_Write_String@a^0,c
  1034   002D98  0E00               	movlw	high _str_buffeLcd
  1035   002D9A  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  1036   002D9C  ECB5  F01C         	call	_Lcd_Write_String	;wreg free
  1037   002DA0                     
  1038                           ;main.c: 46:         _delay((unsigned long)((10)*(16000000UL/4000.0)));
  1039   002DA0  0E34               	movlw	52
  1040   002DA2  6E5E               	movwf	??_main^0,c
  1041   002DA4  0EF2               	movlw	242
  1042   002DA6                     u4547:
  1043   002DA6  2EE8               	decfsz	wreg,f,c
  1044   002DA8  D7FE               	bra	u4547
  1045   002DAA  2E5E               	decfsz	??_main^0,f,c
  1046   002DAC  D7FC               	bra	u4547
  1047   002DAE  EF31  F016         	goto	l4179
  1048   002DB2  EF00  F000         	goto	start
  1049   002DB6                     __end_of_main:
  1050                           	callstack 0
  1051                           
  1052 ;; *************** function _sprintf *****************
  1053 ;; Defined at:
  1054 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  1055 ;; Parameters:    Size  Location     Type
  1056 ;;  s               2   56[BANK0 ] PTR unsigned char 
  1057 ;;		 -> str_buffeLcd(16), 
  1058 ;;  fmt             2   58[BANK0 ] PTR const unsigned char 
  1059 ;;		 -> STR_2(17), STR_1(17), 
  1060 ;; Auto vars:     Size  Location     Type
  1061 ;;  f              11   82[COMRAM] struct _IO_FILE
  1062 ;;  ap              2   80[COMRAM] PTR void [1]
  1063 ;;		 -> ?_sprintf(2), 
  1064 ;;  ret             2    0        int 
  1065 ;; Return value:  Size  Location     Type
  1066 ;;                  2   56[BANK0 ] int 
  1067 ;; Registers used:
  1068 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1069 ;; Tracked objects:
  1070 ;;		On entry : 0/0
  1071 ;;		On exit  : 0/0
  1072 ;;		Unchanged: 0/0
  1073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1074 ;;      Params:         0      10       0       0       0       0       0       0       0
  1075 ;;      Locals:        13       0       0       0       0       0       0       0       0
  1076 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1077 ;;      Totals:        13      10       0       0       0       0       0       0       0
  1078 ;;Total ram usage:       23 bytes
  1079 ;; Hardware stack levels used: 1
  1080 ;; Hardware stack levels required when called: 7
  1081 ;; This function calls:
  1082 ;;		_vfprintf
  1083 ;; This function is called by:
  1084 ;;		_main
  1085 ;; This function uses a non-reentrant model
  1086 ;;
  1087                           
  1088                           	psect	text1
  1089   003726                     __ptext1:
  1090                           	callstack 0
  1091   003726                     _sprintf:
  1092                           	callstack 23
  1093   003726  0E9C               	movlw	low (?_sprintf+4)
  1094   003728  6E51               	movwf	sprintf@ap^0,c
  1095   00372A  0E00               	movlw	high (?_sprintf+4)
  1096   00372C  6E52               	movwf	(sprintf@ap+1)^0,c
  1097   00372E  C098  F053         	movff	sprintf@s,sprintf@f
  1098   003732  C099  F054         	movff	sprintf@s+1,sprintf@f+1
  1099   003736  0E00               	movlw	0
  1100   003738  6E57               	movwf	(sprintf@f+4)^0,c
  1101   00373A  0E00               	movlw	0
  1102   00373C  6E56               	movwf	(sprintf@f+3)^0,c
  1103   00373E  0E00               	movlw	0
  1104   003740  6E5D               	movwf	(sprintf@f+10)^0,c
  1105   003742  0E00               	movlw	0
  1106   003744  6E5C               	movwf	(sprintf@f+9)^0,c
  1107   003746  0E53               	movlw	low sprintf@f
  1108   003748  0100               	movlb	0	; () banked
  1109   00374A  6F92               	movwf	vfprintf@fp& (0+255),b
  1110   00374C  0E00               	movlw	high sprintf@f
  1111   00374E  6F93               	movwf	(vfprintf@fp+1)& (0+255),b
  1112   003750  C09A  F094         	movff	sprintf@fmt,vfprintf@fmt
  1113   003754  C09B  F095         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1114   003758  0E51               	movlw	low sprintf@ap
  1115   00375A  6F96               	movwf	vfprintf@ap& (0+255),b
  1116   00375C  0E00               	movlw	high sprintf@ap
  1117   00375E  6F97               	movwf	(vfprintf@ap+1)& (0+255),b
  1118   003760  ECBC  F01B         	call	_vfprintf	;wreg free
  1119   003764  5056               	movf	(sprintf@f+3)^0,w,c
  1120   003766  0100               	movlb	0	; () banked
  1121   003768  2598               	addwf	sprintf@s& (0+255),w,b
  1122   00376A  6ED9               	movwf	fsr2l,c
  1123   00376C  5057               	movf	(sprintf@f+4)^0,w,c
  1124   00376E  2199               	addwfc	(sprintf@s+1)& (0+255),w,b
  1125   003770  6EDA               	movwf	fsr2h,c
  1126   003772  0E00               	movlw	0
  1127   003774  6EDF               	movwf	indf2,c
  1128   003776                     
  1129                           ; BSR set to: 0
  1130   003776  0012               	return		;funcret
  1131   003778                     __end_of_sprintf:
  1132                           	callstack 0
  1133                           
  1134 ;; *************** function _vfprintf *****************
  1135 ;; Defined at:
  1136 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1137 ;; Parameters:    Size  Location     Type
  1138 ;;  fp              2   50[BANK0 ] PTR struct _IO_FILE
  1139 ;;		 -> sprintf@f(11), 
  1140 ;;  fmt             2   52[BANK0 ] PTR const unsigned char 
  1141 ;;		 -> STR_2(17), STR_1(17), 
  1142 ;;  ap              2   54[BANK0 ] PTR PTR void 
  1143 ;;		 -> sprintf@ap(2), 
  1144 ;; Auto vars:     Size  Location     Type
  1145 ;;  cfmt            2   78[COMRAM] PTR unsigned char 
  1146 ;;		 -> STR_2(17), STR_1(17), 
  1147 ;; Return value:  Size  Location     Type
  1148 ;;                  2   50[BANK0 ] int 
  1149 ;; Registers used:
  1150 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1151 ;; Tracked objects:
  1152 ;;		On entry : 0/0
  1153 ;;		On exit  : 0/0
  1154 ;;		Unchanged: 0/0
  1155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1156 ;;      Params:         0       6       0       0       0       0       0       0       0
  1157 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1158 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1159 ;;      Totals:         2       6       0       0       0       0       0       0       0
  1160 ;;Total ram usage:        8 bytes
  1161 ;; Hardware stack levels used: 1
  1162 ;; Hardware stack levels required when called: 6
  1163 ;; This function calls:
  1164 ;;		_vfpfcnvrt
  1165 ;; This function is called by:
  1166 ;;		_sprintf
  1167 ;; This function uses a non-reentrant model
  1168 ;;
  1169                           
  1170                           	psect	text2
  1171   003778                     __ptext2:
  1172                           	callstack 0
  1173   003778                     _vfprintf:
  1174                           	callstack 23
  1175   003778                     
  1176                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1177   003778  C094  F04F         	movff	vfprintf@fmt,vfprintf@cfmt
  1178   00377C  C095  F050         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1179                           
  1180                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1181   003780  EFD1  F01B         	goto	l4033
  1182   003784                     l4031:
  1183                           
  1184                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1185   003784  C092  F08C         	movff	vfprintf@fp,vfpfcnvrt@fp
  1186   003788  C093  F08D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1187   00378C  0E4F               	movlw	low vfprintf@cfmt
  1188   00378E  0100               	movlb	0	; () banked
  1189   003790  6F8E               	movwf	vfpfcnvrt@fmt& (0+255),b
  1190   003792  0E00               	movlw	high vfprintf@cfmt
  1191   003794  6F8F               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1192   003796  C096  F090         	movff	vfprintf@ap,vfpfcnvrt@ap
  1193   00379A  C097  F091         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1194   00379E  EC48  F009         	call	_vfpfcnvrt	;wreg free
  1195   0037A2                     l4033:
  1196                           
  1197                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1198   0037A2  C04F  FFF6         	movff	vfprintf@cfmt,tblptrl
  1199   0037A6  C050  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1200   0037AA                     	if	0	;tblptru may be non-zero
  1201   0037AA                     	endif
  1202   0037AA                     	if	0	;tblptru may be non-zero
  1203   0037AA                     	endif
  1204   0037AA  0008               	tblrd		*
  1205   0037AC  50F5               	movf	tablat,w,c
  1206   0037AE  0900               	iorlw	0
  1207   0037B0  A4D8               	btfss	status,2,c
  1208   0037B2  EFDD  F01B         	goto	u4381
  1209   0037B6  EFDF  F01B         	goto	u4380
  1210   0037BA                     u4381:
  1211   0037BA  EFC2  F01B         	goto	l4031
  1212   0037BE                     u4380:
  1213   0037BE                     
  1214                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1215   0037BE  0E00               	movlw	0
  1216   0037C0  0100               	movlb	0	; () banked
  1217   0037C2  6F93               	movwf	(?_vfprintf+1)& (0+255),b
  1218   0037C4  0E00               	movlw	0
  1219   0037C6  6F92               	movwf	?_vfprintf& (0+255),b
  1220   0037C8                     
  1221                           ; BSR set to: 0
  1222   0037C8  0012               	return		;funcret
  1223   0037CA                     __end_of_vfprintf:
  1224                           	callstack 0
  1225                           
  1226 ;; *************** function _vfpfcnvrt *****************
  1227 ;; Defined at:
  1228 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1229 ;; Parameters:    Size  Location     Type
  1230 ;;  fp              2   44[BANK0 ] PTR struct _IO_FILE
  1231 ;;		 -> sprintf@f(11), 
  1232 ;;  fmt             2   46[BANK0 ] PTR PTR unsigned char 
  1233 ;;		 -> vfprintf@cfmt(2), 
  1234 ;;  ap              2   48[BANK0 ] PTR PTR void 
  1235 ;;		 -> sprintf@ap(2), 
  1236 ;; Auto vars:     Size  Location     Type
  1237 ;;  convarg         8   67[COMRAM] struct .
  1238 ;;  cp              2   76[COMRAM] PTR unsigned char 
  1239 ;;		 -> STR_2(17), STR_1(17), 
  1240 ;;  done            2   65[COMRAM] int 
  1241 ;;  i               2    0        int 
  1242 ;;  c               1   75[COMRAM] unsigned char 
  1243 ;; Return value:  Size  Location     Type
  1244 ;;                  1    wreg      void 
  1245 ;; Registers used:
  1246 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1247 ;; Tracked objects:
  1248 ;;		On entry : 0/0
  1249 ;;		On exit  : 0/0
  1250 ;;		Unchanged: 0/0
  1251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1252 ;;      Params:         0       6       0       0       0       0       0       0       0
  1253 ;;      Locals:        13       0       0       0       0       0       0       0       0
  1254 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1255 ;;      Totals:        16       6       0       0       0       0       0       0       0
  1256 ;;Total ram usage:       22 bytes
  1257 ;; Hardware stack levels used: 1
  1258 ;; Hardware stack levels required when called: 5
  1259 ;; This function calls:
  1260 ;;		_atoi
  1261 ;;		_dtoa
  1262 ;;		_efgtoa
  1263 ;;		_fputc
  1264 ;;		_isdigit
  1265 ;; This function is called by:
  1266 ;;		_vfprintf
  1267 ;; This function uses a non-reentrant model
  1268 ;;
  1269                           
  1270                           	psect	text3
  1271   001290                     __ptext3:
  1272                           	callstack 0
  1273   001290                     _vfpfcnvrt:
  1274                           	callstack 23
  1275   001290                     
  1276                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1277   001290  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1278   001294  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1279   001298  CFDE FFF6          	movff	postinc2,tblptrl
  1280   00129C  CFDD FFF7          	movff	postdec2,tblptrh
  1281   0012A0                     	if	0	;tblptru may be non-zero
  1282   0012A0                     	endif
  1283   0012A0                     	if	0	;tblptru may be non-zero
  1284   0012A0                     	endif
  1285   0012A0  0008               	tblrd		*
  1286   0012A2  50F5               	movf	tablat,w,c
  1287   0012A4  0A25               	xorlw	37
  1288   0012A6  A4D8               	btfss	status,2,c
  1289   0012A8  EF58  F009         	goto	u4271
  1290   0012AC  EF5A  F009         	goto	u4270
  1291   0012B0                     u4271:
  1292   0012B0  EFCE  F00B         	goto	l3977
  1293   0012B4                     u4270:
  1294   0012B4                     
  1295                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1296   0012B4  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1297   0012B8  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1298   0012BC  2ADE               	incf	postinc2,f,c
  1299   0012BE  0E00               	movlw	0
  1300   0012C0  22DD               	addwfc	postdec2,f,c
  1301   0012C2                     
  1302                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1303   0012C2  0E00               	movlw	0
  1304   0012C4  0100               	movlb	0	; () banked
  1305   0012C6  6FB3               	movwf	(_width+1)& (0+255),b
  1306   0012C8  0E00               	movlw	0
  1307   0012CA  6FB2               	movwf	_width& (0+255),b
  1308   0012CC  C0B2  F05F         	movff	_width,_flags
  1309   0012D0                     
  1310                           ; BSR set to: 0
  1311                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1312   0012D0  69B4               	setf	_prec& (0+255),b
  1313   0012D2  69B5               	setf	(_prec+1)& (0+255),b
  1314   0012D4                     
  1315                           ; BSR set to: 0
  1316                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1027:         don
      +                          e = 0;
  1317   0012D4  0E00               	movlw	0
  1318   0012D6  6E43               	movwf	(vfpfcnvrt@done+1)^0,c
  1319   0012D8  0E00               	movlw	0
  1320   0012DA  6E42               	movwf	vfpfcnvrt@done^0,c
  1321                           
  1322                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  1323   0012DC  EF9A  F009         	goto	l3891
  1324   0012E0                     l3881:
  1325                           
  1326                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1038:            
      +                                   flags |= (1 << 1);
  1327   0012E0  825F               	bsf	_flags^0,1,c
  1328   0012E2                     
  1329                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1039:            
      +                                   ++*fmt;
  1330   0012E2  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1331   0012E6  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1332   0012EA  2ADE               	incf	postinc2,f,c
  1333   0012EC  0E00               	movlw	0
  1334   0012EE  22DD               	addwfc	postdec2,f,c
  1335                           
  1336                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1040:            
      +                                   break;
  1337   0012F0  EF9A  F009         	goto	l3891
  1338   0012F4                     l3885:
  1339                           
  1340                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1061:            
      +                                   done = 1;
  1341   0012F4  0E00               	movlw	0
  1342   0012F6  6E43               	movwf	(vfpfcnvrt@done+1)^0,c
  1343   0012F8  0E01               	movlw	1
  1344   0012FA  6E42               	movwf	vfpfcnvrt@done^0,c
  1345                           
  1346                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1062:            
      +                                   break;
  1347   0012FC  EF9A  F009         	goto	l3891
  1348   001300                     l3889:
  1349   001300  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1350   001304  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1351   001308  CFDE FFF6          	movff	postinc2,tblptrl
  1352   00130C  CFDD FFF7          	movff	postdec2,tblptrh
  1353   001310                     	if	0	;tblptru may be non-zero
  1354   001310                     	endif
  1355   001310                     	if	0	;tblptru may be non-zero
  1356   001310                     	endif
  1357   001310  0008               	tblrd		*
  1358   001312  50F5               	movf	tablat,w,c
  1359   001314  6E3F               	movwf	??_vfpfcnvrt^0,c
  1360   001316  6A40               	clrf	(??_vfpfcnvrt+1)^0,c
  1361                           
  1362                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1363                           ; Switch size 1, requested type "simple"
  1364                           ; Number of cases is 1, Range of values is 0 to 0
  1365                           ; switch strategies available:
  1366                           ; Name         Instructions Cycles
  1367                           ; simple_byte            4     3 (average)
  1368                           ;	Chosen strategy is simple_byte
  1369   001318  5040               	movf	(??_vfpfcnvrt+1)^0,w,c
  1370   00131A  0A00               	xorlw	0	; case 0
  1371   00131C  B4D8               	btfsc	status,2,c
  1372   00131E  EF93  F009         	goto	l4307
  1373   001322  EF7A  F009         	goto	l3885
  1374   001326                     l4307:
  1375                           
  1376                           ; Switch size 1, requested type "simple"
  1377                           ; Number of cases is 1, Range of values is 48 to 48
  1378                           ; switch strategies available:
  1379                           ; Name         Instructions Cycles
  1380                           ; simple_byte            4     3 (average)
  1381                           ;	Chosen strategy is simple_byte
  1382   001326  503F               	movf	??_vfpfcnvrt^0,w,c
  1383   001328  0A30               	xorlw	48	; case 48
  1384   00132A  B4D8               	btfsc	status,2,c
  1385   00132C  EF70  F009         	goto	l3881
  1386   001330  EF7A  F009         	goto	l3885
  1387   001334                     l3891:
  1388                           
  1389                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  1390   001334  5042               	movf	vfpfcnvrt@done^0,w,c
  1391   001336  1043               	iorwf	(vfpfcnvrt@done+1)^0,w,c
  1392   001338  B4D8               	btfsc	status,2,c
  1393   00133A  EFA1  F009         	goto	u4281
  1394   00133E  EFA3  F009         	goto	u4280
  1395   001342                     u4281:
  1396   001342  EF80  F009         	goto	l3889
  1397   001346                     u4280:
  1398   001346                     
  1399                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1074:         if 
      +                          ((*fmt)[0] == '*') {
  1400   001346  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1401   00134A  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1402   00134E  CFDE FFF6          	movff	postinc2,tblptrl
  1403   001352  CFDD FFF7          	movff	postdec2,tblptrh
  1404   001356                     	if	0	;tblptru may be non-zero
  1405   001356                     	endif
  1406   001356                     	if	0	;tblptru may be non-zero
  1407   001356                     	endif
  1408   001356  0008               	tblrd		*
  1409   001358  50F5               	movf	tablat,w,c
  1410   00135A  0A2A               	xorlw	42
  1411   00135C  A4D8               	btfss	status,2,c
  1412   00135E  EFB3  F009         	goto	u4291
  1413   001362  EFB5  F009         	goto	u4290
  1414   001366                     u4291:
  1415   001366  EFDF  F009         	goto	l3901
  1416   00136A                     u4290:
  1417   00136A                     
  1418                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1075:            
      +                           ++*fmt;
  1419   00136A  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1420   00136E  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1421   001372  2ADE               	incf	postinc2,f,c
  1422   001374  0E00               	movlw	0
  1423   001376  22DD               	addwfc	postdec2,f,c
  1424                           
  1425                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1076:            
      +                           width = (*(int *)__va_arg(*(int **)ap, (int)0));
  1426   001378  C090  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1427   00137C  C091  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1428   001380  CFDF F03F          	movff	indf2,??_vfpfcnvrt
  1429   001384  0E02               	movlw	2
  1430   001386  26DE               	addwf	postinc2,f,c
  1431   001388  CFDF F040          	movff	indf2,??_vfpfcnvrt+1
  1432   00138C  0E00               	movlw	0
  1433   00138E  22DD               	addwfc	postdec2,f,c
  1434   001390  C03F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1435   001394  C040  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1436   001398  CFDE F0B2          	movff	postinc2,_width
  1437   00139C  CFDD F0B3          	movff	postdec2,_width+1
  1438   0013A0                     
  1439                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1077:            
      +                           if (width < 0) {
  1440   0013A0  0100               	movlb	0	; () banked
  1441   0013A2  BFB3               	btfsc	(_width+1)& (0+255),7,b
  1442   0013A4  EFD8  F009         	goto	u4300
  1443   0013A8  EFD6  F009         	goto	u4301
  1444   0013AC                     u4301:
  1445   0013AC  EF12  F00A         	goto	l3909
  1446   0013B0                     u4300:
  1447   0013B0                     
  1448                           ; BSR set to: 0
  1449                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1078:            
      +                               flags |= (1 << 0);
  1450   0013B0  805F               	bsf	_flags^0,0,c
  1451                           
  1452                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1079:            
      +                               width = -width;
  1453   0013B2  6DB2               	negf	_width& (0+255),b
  1454   0013B4  1FB3               	comf	(_width+1)& (0+255),f,b
  1455   0013B6  B0D8               	btfsc	status,0,c
  1456   0013B8  2BB3               	incf	(_width+1)& (0+255),f,b
  1457   0013BA  EF12  F00A         	goto	l3909
  1458   0013BE                     l3901:
  1459                           
  1460                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1082:            
      +                           width = atoi(*fmt);
  1461   0013BE  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1462   0013C2  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1463   0013C6  CFDE F007          	movff	postinc2,atoi@s
  1464   0013CA  CFDD F008          	movff	postdec2,atoi@s+1
  1465   0013CE  EC8D  F017         	call	_atoi	;wreg free
  1466   0013D2  C007  F0B2         	movff	?_atoi,_width
  1467   0013D6  C008  F0B3         	movff	?_atoi+1,_width+1
  1468                           
  1469                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1083:            
      +                           while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  1470   0013DA  EFF6  F009         	goto	l3907
  1471   0013DE                     l3903:
  1472                           
  1473                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1084:            
      +                               ++*fmt;
  1474   0013DE  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1475   0013E2  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1476   0013E6  2ADE               	incf	postinc2,f,c
  1477   0013E8  0E00               	movlw	0
  1478   0013EA  22DD               	addwfc	postdec2,f,c
  1479   0013EC                     l3907:
  1480   0013EC  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1481   0013F0  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1482   0013F4  CFDE FFF6          	movff	postinc2,tblptrl
  1483   0013F8  CFDD FFF7          	movff	postdec2,tblptrh
  1484   0013FC                     	if	0	;tblptru may be non-zero
  1485   0013FC                     	endif
  1486   0013FC                     	if	0	;tblptru may be non-zero
  1487   0013FC                     	endif
  1488   0013FC  0008               	tblrd		*
  1489   0013FE  CFF5 F03F          	movff	tablat,??_vfpfcnvrt
  1490   001402  0ED0               	movlw	208
  1491   001404  243F               	addwf	??_vfpfcnvrt^0,w,c
  1492   001406  6E40               	movwf	(??_vfpfcnvrt+1)^0,c
  1493   001408  6A41               	clrf	(??_vfpfcnvrt+2)^0,c
  1494   00140A  0EFF               	movlw	255
  1495   00140C  2241               	addwfc	(??_vfpfcnvrt+2)^0,f,c
  1496   00140E  5041               	movf	(??_vfpfcnvrt+2)^0,w,c
  1497   001410  E109               	bnz	u4310
  1498   001412  0E0A               	movlw	10
  1499   001414  5C40               	subwf	(??_vfpfcnvrt+1)^0,w,c
  1500   001416  A0D8               	btfss	status,0,c
  1501   001418  EF10  F00A         	goto	u4311
  1502   00141C  EF12  F00A         	goto	u4310
  1503   001420                     u4311:
  1504   001420  EFEF  F009         	goto	l3903
  1505   001424                     u4310:
  1506   001424                     l3909:
  1507                           
  1508                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1091:         if 
      +                          ((*fmt)[0] == '.') {
  1509   001424  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1510   001428  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1511   00142C  CFDE FFF6          	movff	postinc2,tblptrl
  1512   001430  CFDD FFF7          	movff	postdec2,tblptrh
  1513   001434                     	if	0	;tblptru may be non-zero
  1514   001434                     	endif
  1515   001434                     	if	0	;tblptru may be non-zero
  1516   001434                     	endif
  1517   001434  0008               	tblrd		*
  1518   001436  50F5               	movf	tablat,w,c
  1519   001438  0A2E               	xorlw	46
  1520   00143A  A4D8               	btfss	status,2,c
  1521   00143C  EF22  F00A         	goto	u4321
  1522   001440  EF24  F00A         	goto	u4320
  1523   001444                     u4321:
  1524   001444  EF92  F00A         	goto	l3927
  1525   001448                     u4320:
  1526   001448                     
  1527                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1092:            
      +                           prec = 0;
  1528   001448  0E00               	movlw	0
  1529   00144A  0100               	movlb	0	; () banked
  1530   00144C  6FB5               	movwf	(_prec+1)& (0+255),b
  1531   00144E  0E00               	movlw	0
  1532   001450  6FB4               	movwf	_prec& (0+255),b
  1533   001452                     
  1534                           ; BSR set to: 0
  1535                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1093:            
      +                           ++*fmt;
  1536   001452  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1537   001456  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1538   00145A  2ADE               	incf	postinc2,f,c
  1539   00145C  0E00               	movlw	0
  1540   00145E  22DD               	addwfc	postdec2,f,c
  1541   001460                     
  1542                           ; BSR set to: 0
  1543                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1094:            
      +                           if ((*fmt)[0] == '*') {
  1544   001460  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1545   001464  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1546   001468  CFDE FFF6          	movff	postinc2,tblptrl
  1547   00146C  CFDD FFF7          	movff	postdec2,tblptrh
  1548   001470                     	if	0	;tblptru may be non-zero
  1549   001470                     	endif
  1550   001470                     	if	0	;tblptru may be non-zero
  1551   001470                     	endif
  1552   001470  0008               	tblrd		*
  1553   001472  50F5               	movf	tablat,w,c
  1554   001474  0A2A               	xorlw	42
  1555   001476  A4D8               	btfss	status,2,c
  1556   001478  EF40  F00A         	goto	u4331
  1557   00147C  EF42  F00A         	goto	u4330
  1558   001480                     u4331:
  1559   001480  EF5F  F00A         	goto	l3919
  1560   001484                     u4330:
  1561   001484                     
  1562                           ; BSR set to: 0
  1563                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1095:            
      +                               ++*fmt;
  1564   001484  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1565   001488  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1566   00148C  2ADE               	incf	postinc2,f,c
  1567   00148E  0E00               	movlw	0
  1568   001490  22DD               	addwfc	postdec2,f,c
  1569                           
  1570                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1096:            
      +                               prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1571   001492  C090  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1572   001496  C091  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1573   00149A  CFDF F03F          	movff	indf2,??_vfpfcnvrt
  1574   00149E  0E02               	movlw	2
  1575   0014A0  26DE               	addwf	postinc2,f,c
  1576   0014A2  CFDF F040          	movff	indf2,??_vfpfcnvrt+1
  1577   0014A6  0E00               	movlw	0
  1578   0014A8  22DD               	addwfc	postdec2,f,c
  1579   0014AA  C03F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1580   0014AE  C040  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1581   0014B2  CFDE F0B4          	movff	postinc2,_prec
  1582   0014B6  CFDD F0B5          	movff	postdec2,_prec+1
  1583                           
  1584                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1097:            
      +                           } else {
  1585   0014BA  EF92  F00A         	goto	l3927
  1586   0014BE                     l3919:
  1587                           
  1588                           ; BSR set to: 0
  1589                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1098:            
      +                               prec = atoi(*fmt);
  1590   0014BE  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1591   0014C2  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1592   0014C6  CFDE F007          	movff	postinc2,atoi@s
  1593   0014CA  CFDD F008          	movff	postdec2,atoi@s+1
  1594   0014CE  EC8D  F017         	call	_atoi	;wreg free
  1595   0014D2  C007  F0B4         	movff	?_atoi,_prec
  1596   0014D6  C008  F0B5         	movff	?_atoi+1,_prec+1
  1597                           
  1598                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1099:            
      +                               while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  1599   0014DA  EF76  F00A         	goto	l3925
  1600   0014DE                     l3921:
  1601                           
  1602                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1100:            
      +                                   ++*fmt;
  1603   0014DE  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1604   0014E2  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1605   0014E6  2ADE               	incf	postinc2,f,c
  1606   0014E8  0E00               	movlw	0
  1607   0014EA  22DD               	addwfc	postdec2,f,c
  1608   0014EC                     l3925:
  1609   0014EC  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1610   0014F0  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1611   0014F4  CFDE FFF6          	movff	postinc2,tblptrl
  1612   0014F8  CFDD FFF7          	movff	postdec2,tblptrh
  1613   0014FC                     	if	0	;tblptru may be non-zero
  1614   0014FC                     	endif
  1615   0014FC                     	if	0	;tblptru may be non-zero
  1616   0014FC                     	endif
  1617   0014FC  0008               	tblrd		*
  1618   0014FE  CFF5 F03F          	movff	tablat,??_vfpfcnvrt
  1619   001502  0ED0               	movlw	208
  1620   001504  243F               	addwf	??_vfpfcnvrt^0,w,c
  1621   001506  6E40               	movwf	(??_vfpfcnvrt+1)^0,c
  1622   001508  6A41               	clrf	(??_vfpfcnvrt+2)^0,c
  1623   00150A  0EFF               	movlw	255
  1624   00150C  2241               	addwfc	(??_vfpfcnvrt+2)^0,f,c
  1625   00150E  5041               	movf	(??_vfpfcnvrt+2)^0,w,c
  1626   001510  E109               	bnz	u4340
  1627   001512  0E0A               	movlw	10
  1628   001514  5C40               	subwf	(??_vfpfcnvrt+1)^0,w,c
  1629   001516  A0D8               	btfss	status,0,c
  1630   001518  EF90  F00A         	goto	u4341
  1631   00151C  EF92  F00A         	goto	u4340
  1632   001520                     u4341:
  1633   001520  EF6F  F00A         	goto	l3921
  1634   001524                     u4340:
  1635   001524                     l3927:
  1636                           
  1637                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  1638   001524  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1639   001528  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1640   00152C  CFDE F04D          	movff	postinc2,vfpfcnvrt@cp
  1641   001530  CFDD F04E          	movff	postdec2,vfpfcnvrt@cp+1
  1642   001534                     
  1643                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1644   001534  C04D  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1645   001538  C04E  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1646   00153C                     	if	0	;tblptru may be non-zero
  1647   00153C                     	endif
  1648   00153C                     	if	0	;tblptru may be non-zero
  1649   00153C                     	endif
  1650   00153C  0008               	tblrd		*
  1651   00153E  50F5               	movf	tablat,w,c
  1652   001540  0A64               	xorlw	100
  1653   001542  B4D8               	btfsc	status,2,c
  1654   001544  EFA6  F00A         	goto	u4351
  1655   001548  EFA8  F00A         	goto	u4350
  1656   00154C                     u4351:
  1657   00154C  EFB6  F00A         	goto	l3933
  1658   001550                     u4350:
  1659   001550  C04D  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1660   001554  C04E  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1661   001558                     	if	0	;tblptru may be non-zero
  1662   001558                     	endif
  1663   001558                     	if	0	;tblptru may be non-zero
  1664   001558                     	endif
  1665   001558  0008               	tblrd		*
  1666   00155A  50F5               	movf	tablat,w,c
  1667   00155C  0A69               	xorlw	105
  1668   00155E  A4D8               	btfss	status,2,c
  1669   001560  EFB4  F00A         	goto	u4361
  1670   001564  EFB6  F00A         	goto	u4360
  1671   001568                     u4361:
  1672   001568  EFF9  F00A         	goto	l3939
  1673   00156C                     u4360:
  1674   00156C                     l3933:
  1675                           
  1676                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1677   00156C  C090  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1678   001570  C091  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1679   001574  CFDF F03F          	movff	indf2,??_vfpfcnvrt
  1680   001578  0E02               	movlw	2
  1681   00157A  26DE               	addwf	postinc2,f,c
  1682   00157C  CFDF F040          	movff	indf2,??_vfpfcnvrt+1
  1683   001580  0E00               	movlw	0
  1684   001582  22DD               	addwfc	postdec2,f,c
  1685   001584  C03F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1686   001588  C040  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1687   00158C  CFDE F044          	movff	postinc2,vfpfcnvrt@convarg
  1688   001590  CFDD F045          	movff	postdec2,vfpfcnvrt@convarg+1
  1689   001594  0E00               	movlw	0
  1690   001596  BE45               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1691   001598  0EFF               	movlw	-1
  1692   00159A  6E46               	movwf	(vfpfcnvrt@convarg+2)^0,c
  1693   00159C  6E47               	movwf	(vfpfcnvrt@convarg+3)^0,c
  1694   00159E  6E48               	movwf	(vfpfcnvrt@convarg+4)^0,c
  1695   0015A0  6E49               	movwf	(vfpfcnvrt@convarg+5)^0,c
  1696   0015A2  6E4A               	movwf	(vfpfcnvrt@convarg+6)^0,c
  1697   0015A4  6E4B               	movwf	(vfpfcnvrt@convarg+7)^0,c
  1698                           
  1699                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  1700   0015A6  0E01               	movlw	1
  1701   0015A8  244D               	addwf	vfpfcnvrt@cp^0,w,c
  1702   0015AA  6E3F               	movwf	??_vfpfcnvrt^0,c
  1703   0015AC  0E00               	movlw	0
  1704   0015AE  204E               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1705   0015B0  6E40               	movwf	(??_vfpfcnvrt+1)^0,c
  1706   0015B2  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1707   0015B6  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1708   0015BA  C03F  FFDE         	movff	??_vfpfcnvrt,postinc2
  1709   0015BE  C040  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1710   0015C2                     
  1711                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  1712   0015C2  C08C  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  1713   0015C6  C08D  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1714   0015CA  C044  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  1715   0015CE  C045  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1716   0015D2  C046  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  1717   0015D6  C047  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  1718   0015DA  C048  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  1719   0015DE  C049  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  1720   0015E2  C04A  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  1721   0015E6  C04B  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  1722   0015EA  EC25  F012         	call	_dtoa	;wreg free
  1723   0015EE  EFE2  F00B         	goto	l955
  1724   0015F2                     l3939:
  1725                           
  1726                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1392:   cp = *fmt
      +                          ;
  1727   0015F2  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1728   0015F6  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1729   0015FA  CFDE F04D          	movff	postinc2,vfpfcnvrt@cp
  1730   0015FE  CFDD F04E          	movff	postdec2,vfpfcnvrt@cp+1
  1731   001602                     
  1732                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1393:   c = *cp;
  1733   001602  C04D  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1734   001606  C04E  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1735   00160A                     	if	0	;tblptru may be non-zero
  1736   00160A                     	endif
  1737   00160A                     	if	0	;tblptru may be non-zero
  1738   00160A                     	endif
  1739   00160A  0008               	tblrd		*
  1740   00160C  CFF5 F04C          	movff	tablat,vfpfcnvrt@c
  1741                           
  1742                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1394:   switch(c)
      +                           {
  1743   001610  EF16  F00B         	goto	l3951
  1744   001614                     l3943:
  1745                           
  1746                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1398:     cp++;
  1747   001614  4A4D               	infsnz	vfpfcnvrt@cp^0,f,c
  1748   001616  2A4E               	incf	(vfpfcnvrt@cp+1)^0,f,c
  1749                           
  1750                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1399:     break;
  1751   001618  EF2F  F00B         	goto	l3953
  1752   00161C                     l3945:
  1753                           
  1754                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1424:     c = 'l'
      +                          ;
  1755   00161C  0E6C               	movlw	108
  1756   00161E  6E4C               	movwf	vfpfcnvrt@c^0,c
  1757                           
  1758                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1425:     break;
  1759   001620  EF2F  F00B         	goto	l3953
  1760   001624                     l3947:
  1761                           
  1762                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1427:     c = 0;
  1763   001624  0E00               	movlw	0
  1764   001626  6E4C               	movwf	vfpfcnvrt@c^0,c
  1765                           
  1766                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1428:     break;
  1767   001628  EF2F  F00B         	goto	l3953
  1768   00162C                     l3951:
  1769   00162C  504C               	movf	vfpfcnvrt@c^0,w,c
  1770   00162E  6E3F               	movwf	??_vfpfcnvrt^0,c
  1771   001630  6A40               	clrf	(??_vfpfcnvrt+1)^0,c
  1772                           
  1773                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1774                           ; Switch size 1, requested type "simple"
  1775                           ; Number of cases is 1, Range of values is 0 to 0
  1776                           ; switch strategies available:
  1777                           ; Name         Instructions Cycles
  1778                           ; simple_byte            4     3 (average)
  1779                           ;	Chosen strategy is simple_byte
  1780   001632  5040               	movf	(??_vfpfcnvrt+1)^0,w,c
  1781   001634  0A00               	xorlw	0	; case 0
  1782   001636  B4D8               	btfsc	status,2,c
  1783   001638  EF20  F00B         	goto	l4309
  1784   00163C  EF12  F00B         	goto	l3947
  1785   001640                     l4309:
  1786                           
  1787                           ; Switch size 1, requested type "simple"
  1788                           ; Number of cases is 3, Range of values is 76 to 108
  1789                           ; switch strategies available:
  1790                           ; Name         Instructions Cycles
  1791                           ; simple_byte           10     6 (average)
  1792                           ;	Chosen strategy is simple_byte
  1793   001640  503F               	movf	??_vfpfcnvrt^0,w,c
  1794   001642  0A4C               	xorlw	76	; case 76
  1795   001644  B4D8               	btfsc	status,2,c
  1796   001646  EF0A  F00B         	goto	l3943
  1797   00164A  0A2A               	xorlw	42	; case 102
  1798   00164C  B4D8               	btfsc	status,2,c
  1799   00164E  EF0E  F00B         	goto	l3945
  1800   001652  0A0A               	xorlw	10	; case 108
  1801   001654  B4D8               	btfsc	status,2,c
  1802   001656  EF0A  F00B         	goto	l3943
  1803   00165A  EF12  F00B         	goto	l3947
  1804   00165E                     l3953:
  1805   00165E  C04D  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1806   001662  C04E  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1807   001666                     	if	0	;tblptru may be non-zero
  1808   001666                     	endif
  1809   001666                     	if	0	;tblptru may be non-zero
  1810   001666                     	endif
  1811   001666  0008               	tblrd		*
  1812   001668  50F5               	movf	tablat,w,c
  1813   00166A  0A66               	xorlw	102
  1814   00166C  A4D8               	btfss	status,2,c
  1815   00166E  EF3B  F00B         	goto	u4371
  1816   001672  EF3D  F00B         	goto	u4370
  1817   001676                     u4371:
  1818   001676  EFC5  F00B         	goto	l3973
  1819   00167A                     u4370:
  1820   00167A  EF73  F00B         	goto	l3961
  1821   00167E                     l3955:
  1822                           
  1823                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1459:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1824   00167E  C090  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1825   001682  C091  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1826   001686  CFDF F03F          	movff	indf2,??_vfpfcnvrt
  1827   00168A  0E04               	movlw	4
  1828   00168C  26DE               	addwf	postinc2,f,c
  1829   00168E  CFDF F040          	movff	indf2,??_vfpfcnvrt+1
  1830   001692  0E00               	movlw	0
  1831   001694  22DD               	addwfc	postdec2,f,c
  1832   001696  C03F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1833   00169A  C040  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1834   00169E  CFDE F044          	movff	postinc2,vfpfcnvrt@convarg
  1835   0016A2  CFDE F045          	movff	postinc2,vfpfcnvrt@convarg+1
  1836   0016A6  CFDE F046          	movff	postinc2,vfpfcnvrt@convarg+2
  1837   0016AA  CFDE F047          	movff	postinc2,vfpfcnvrt@convarg+3
  1838                           
  1839                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1460:      break;
  1840   0016AE  EF88  F00B         	goto	l3963
  1841   0016B2                     l3957:
  1842                           
  1843                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1462:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  1844   0016B2  C090  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1845   0016B6  C091  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1846   0016BA  CFDF F03F          	movff	indf2,??_vfpfcnvrt
  1847   0016BE  0E04               	movlw	4
  1848   0016C0  26DE               	addwf	postinc2,f,c
  1849   0016C2  CFDF F040          	movff	indf2,??_vfpfcnvrt+1
  1850   0016C6  0E00               	movlw	0
  1851   0016C8  22DD               	addwfc	postdec2,f,c
  1852   0016CA  C03F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1853   0016CE  C040  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1854   0016D2  CFDE F044          	movff	postinc2,vfpfcnvrt@convarg
  1855   0016D6  CFDE F045          	movff	postinc2,vfpfcnvrt@convarg+1
  1856   0016DA  CFDE F046          	movff	postinc2,vfpfcnvrt@convarg+2
  1857   0016DE  CFDE F047          	movff	postinc2,vfpfcnvrt@convarg+3
  1858                           
  1859                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1463:      break;
  1860   0016E2  EF88  F00B         	goto	l3963
  1861   0016E6                     l3961:
  1862   0016E6  504C               	movf	vfpfcnvrt@c^0,w,c
  1863   0016E8  6E3F               	movwf	??_vfpfcnvrt^0,c
  1864   0016EA  6A40               	clrf	(??_vfpfcnvrt+1)^0,c
  1865                           
  1866                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1867                           ; Switch size 1, requested type "simple"
  1868                           ; Number of cases is 1, Range of values is 0 to 0
  1869                           ; switch strategies available:
  1870                           ; Name         Instructions Cycles
  1871                           ; simple_byte            4     3 (average)
  1872                           ;	Chosen strategy is simple_byte
  1873   0016EC  5040               	movf	(??_vfpfcnvrt+1)^0,w,c
  1874   0016EE  0A00               	xorlw	0	; case 0
  1875   0016F0  B4D8               	btfsc	status,2,c
  1876   0016F2  EF7D  F00B         	goto	l4311
  1877   0016F6  EF88  F00B         	goto	l3963
  1878   0016FA                     l4311:
  1879                           
  1880                           ; Switch size 1, requested type "simple"
  1881                           ; Number of cases is 2, Range of values is 76 to 108
  1882                           ; switch strategies available:
  1883                           ; Name         Instructions Cycles
  1884                           ; simple_byte            7     4 (average)
  1885                           ;	Chosen strategy is simple_byte
  1886   0016FA  503F               	movf	??_vfpfcnvrt^0,w,c
  1887   0016FC  0A4C               	xorlw	76	; case 76
  1888   0016FE  B4D8               	btfsc	status,2,c
  1889   001700  EF59  F00B         	goto	l3957
  1890   001704  0A20               	xorlw	32	; case 108
  1891   001706  B4D8               	btfsc	status,2,c
  1892   001708  EF3F  F00B         	goto	l3955
  1893   00170C  EF88  F00B         	goto	l3963
  1894   001710                     l3963:
  1895                           
  1896                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1465:    *fmt = c
      +                          p+1;
  1897   001710  0E01               	movlw	1
  1898   001712  244D               	addwf	vfpfcnvrt@cp^0,w,c
  1899   001714  6E3F               	movwf	??_vfpfcnvrt^0,c
  1900   001716  0E00               	movlw	0
  1901   001718  204E               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1902   00171A  6E40               	movwf	(??_vfpfcnvrt+1)^0,c
  1903   00171C  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1904   001720  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1905   001724  C03F  FFDE         	movff	??_vfpfcnvrt,postinc2
  1906   001728  C040  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1907                           
  1908                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1466:    switch (
      +                          *cp) {
  1909   00172C  EFAF  F00B         	goto	l3971
  1910   001730                     l3965:
  1911                           
  1912                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1493:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  1913   001730  C08C  F034         	movff	vfpfcnvrt@fp,efgtoa@fp
  1914   001734  C08D  F035         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  1915   001738  C044  F036         	movff	vfpfcnvrt@convarg,efgtoa@f
  1916   00173C  C045  F037         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  1917   001740  C046  F038         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  1918   001744  C047  F039         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  1919   001748  C04D  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1920   00174C  C04E  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1921   001750                     	if	0	;tblptru may be non-zero
  1922   001750                     	endif
  1923   001750                     	if	0	;tblptru may be non-zero
  1924   001750                     	endif
  1925   001750  0008               	tblrd		*
  1926   001752  CFF5 F03A          	movff	tablat,efgtoa@c
  1927   001756  EC16  F004         	call	_efgtoa	;wreg free
  1928   00175A  EFE2  F00B         	goto	l955
  1929   00175E                     l3971:
  1930   00175E  C04D  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1931   001762  C04E  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1932   001766                     	if	0	;tblptru may be non-zero
  1933   001766                     	endif
  1934   001766                     	if	0	;tblptru may be non-zero
  1935   001766                     	endif
  1936   001766  0008               	tblrd		*
  1937   001768  50F5               	movf	tablat,w,c
  1938   00176A  6E3F               	movwf	??_vfpfcnvrt^0,c
  1939   00176C  6A40               	clrf	(??_vfpfcnvrt+1)^0,c
  1940                           
  1941                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1942                           ; Switch size 1, requested type "simple"
  1943                           ; Number of cases is 1, Range of values is 0 to 0
  1944                           ; switch strategies available:
  1945                           ; Name         Instructions Cycles
  1946                           ; simple_byte            4     3 (average)
  1947                           ;	Chosen strategy is simple_byte
  1948   00176E  5040               	movf	(??_vfpfcnvrt+1)^0,w,c
  1949   001770  0A00               	xorlw	0	; case 0
  1950   001772  B4D8               	btfsc	status,2,c
  1951   001774  EFBE  F00B         	goto	l4313
  1952   001778  EFC5  F00B         	goto	l3973
  1953   00177C                     l4313:
  1954                           
  1955                           ; Switch size 1, requested type "simple"
  1956                           ; Number of cases is 1, Range of values is 102 to 102
  1957                           ; switch strategies available:
  1958                           ; Name         Instructions Cycles
  1959                           ; simple_byte            4     3 (average)
  1960                           ;	Chosen strategy is simple_byte
  1961   00177C  503F               	movf	??_vfpfcnvrt^0,w,c
  1962   00177E  0A66               	xorlw	102	; case 102
  1963   001780  B4D8               	btfsc	status,2,c
  1964   001782  EF98  F00B         	goto	l3965
  1965   001786  EFC5  F00B         	goto	l3973
  1966   00178A                     l3973:
  1967                           
  1968                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1969   00178A  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1970   00178E  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1971   001792  2ADE               	incf	postinc2,f,c
  1972   001794  0E00               	movlw	0
  1973   001796  22DD               	addwfc	postdec2,f,c
  1974   001798  EFE2  F00B         	goto	l955
  1975   00179C                     l3977:
  1976                           
  1977                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1978   00179C  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1979   0017A0  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1980   0017A4  CFDE FFF6          	movff	postinc2,tblptrl
  1981   0017A8  CFDD FFF7          	movff	postdec2,tblptrh
  1982   0017AC                     	if	0	;tblptru may be non-zero
  1983   0017AC                     	endif
  1984   0017AC                     	if	0	;tblptru may be non-zero
  1985   0017AC                     	endif
  1986   0017AC  0008               	tblrd		*
  1987   0017AE  50F5               	movf	tablat,w,c
  1988   0017B0  6E01               	movwf	fputc@c^0,c
  1989   0017B2  6A02               	clrf	(fputc@c+1)^0,c
  1990   0017B4  C08C  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1991   0017B8  C08D  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1992   0017BC  ECB6  F019         	call	_fputc	;wreg free
  1993   0017C0  EFC5  F00B         	goto	l3973
  1994   0017C4                     l955:
  1995   0017C4  0012               	return		;funcret
  1996   0017C6                     __end_of_vfpfcnvrt:
  1997                           	callstack 0
  1998                           
  1999 ;; *************** function _efgtoa *****************
  2000 ;; Defined at:
  2001 ;;		line 506 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2002 ;; Parameters:    Size  Location     Type
  2003 ;;  fp              2   51[COMRAM] PTR struct _IO_FILE
  2004 ;;		 -> sprintf@f(11), 
  2005 ;;  f               4   53[COMRAM] PTR struct _IO_FILE
  2006 ;;  c               1   57[COMRAM] unsigned char 
  2007 ;; Auto vars:     Size  Location     Type
  2008 ;;  u               4   40[BANK0 ] struct flui
  2009 ;;  g               4   34[BANK0 ] struct flui
  2010 ;;  l               4   27[BANK0 ] struct flui
  2011 ;;  h               4   23[BANK0 ] struct flui
  2012 ;;  ou              4   19[BANK0 ] struct flui
  2013 ;;  n               2   38[BANK0 ] int 
  2014 ;;  i               2   31[BANK0 ] int 
  2015 ;;  w               2   17[BANK0 ] int 
  2016 ;;  e               2   15[BANK0 ] int 
  2017 ;;  m               2   13[BANK0 ] int 
  2018 ;;  d               2   11[BANK0 ] int 
  2019 ;;  t               2    4[BANK0 ] int 
  2020 ;;  p               2    2[BANK0 ] int 
  2021 ;;  ne              2    0[BANK0 ] int 
  2022 ;;  sign            1   33[BANK0 ] unsigned char 
  2023 ;;  nmode           1   10[BANK0 ] unsigned char 
  2024 ;;  mode            1    9[BANK0 ] unsigned char 
  2025 ;;  pp              1    8[BANK0 ] unsigned char 
  2026 ;;  esign           1    0        unsigned char 
  2027 ;; Return value:  Size  Location     Type
  2028 ;;                  1    wreg      void 
  2029 ;; Registers used:
  2030 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2031 ;; Tracked objects:
  2032 ;;		On entry : 0/0
  2033 ;;		On exit  : 0/0
  2034 ;;		Unchanged: 0/0
  2035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2036 ;;      Params:         7       0       0       0       0       0       0       0       0
  2037 ;;      Locals:         0      44       0       0       0       0       0       0       0
  2038 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2039 ;;      Totals:         9      44       0       0       0       0       0       0       0
  2040 ;;Total ram usage:       53 bytes
  2041 ;; Hardware stack levels used: 1
  2042 ;; Hardware stack levels required when called: 4
  2043 ;; This function calls:
  2044 ;;		___fladd
  2045 ;;		___fldiv
  2046 ;;		___fleq
  2047 ;;		___flge
  2048 ;;		___flmul
  2049 ;;		___flneg
  2050 ;;		___flsub
  2051 ;;		___fltol
  2052 ;;		___fpclassifyf
  2053 ;;		_floorf
  2054 ;;		_labs
  2055 ;;		_memcpy
  2056 ;;		_pad
  2057 ;;		_strcpy
  2058 ;; This function is called by:
  2059 ;;		_vfpfcnvrt
  2060 ;; This function uses a non-reentrant model
  2061 ;;
  2062                           
  2063                           	psect	text4
  2064   00082C                     __ptext4:
  2065                           	callstack 0
  2066   00082C                     _efgtoa:
  2067                           	callstack 23
  2068   00082C                     
  2069                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 506: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources
      +                          \c99\common\doprnt.c: 507: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 508:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .40\pic\sources\c99\common\doprnt.c: 509:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 510:     long double h, l;
  2070   00082C  0E00               	movlw	0
  2071   00082E  0100               	movlb	0	; () banked
  2072   000830  6F81               	movwf	efgtoa@sign& (0+255),b
  2073   000832                     
  2074                           ; BSR set to: 0
  2075                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 515:     g.f = f;
  2076   000832  C036  F082         	movff	efgtoa@f,efgtoa@g
  2077   000836  C037  F083         	movff	efgtoa@f+1,efgtoa@g+1
  2078   00083A  C038  F084         	movff	efgtoa@f+2,efgtoa@g+2
  2079   00083E  C039  F085         	movff	efgtoa@f+3,efgtoa@g+3
  2080   000842                     
  2081                           ; BSR set to: 0
  2082                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 516:     if (g.f 
      +                          < 0.0) {
  2083   000842  BF85               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2084   000844  EF28  F004         	goto	u3840
  2085   000848  EF26  F004         	goto	u3841
  2086   00084C                     u3841:
  2087   00084C  EF3C  F004         	goto	l3599
  2088   000850                     u3840:
  2089   000850                     
  2090                           ; BSR set to: 0
  2091                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 517:         sign
      +                           = 1;
  2092   000850  0E01               	movlw	1
  2093   000852  6F81               	movwf	efgtoa@sign& (0+255),b
  2094   000854                     
  2095                           ; BSR set to: 0
  2096                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 518:         g.f 
      +                          = -g.f;
  2097   000854  C082  F001         	movff	efgtoa@g,___flneg@f1
  2098   000858  C083  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2099   00085C  C084  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2100   000860  C085  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2101   000864  ECD5  F01C         	call	___flneg	;wreg free
  2102   000868  C001  F082         	movff	?___flneg,efgtoa@g
  2103   00086C  C002  F083         	movff	?___flneg+1,efgtoa@g+1
  2104   000870  C003  F084         	movff	?___flneg+2,efgtoa@g+2
  2105   000874  C004  F085         	movff	?___flneg+3,efgtoa@g+3
  2106   000878                     l3599:
  2107                           
  2108                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 522:     n = 0;
  2109   000878  0E00               	movlw	0
  2110   00087A  0100               	movlb	0	; () banked
  2111   00087C  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  2112   00087E  0E00               	movlw	0
  2113   000880  6F86               	movwf	efgtoa@n& (0+255),b
  2114   000882                     
  2115                           ; BSR set to: 0
  2116                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 523:     w = widt
      +                          h;
  2117   000882  C0B2  F071         	movff	_width,efgtoa@w
  2118   000886  C0B3  F072         	movff	_width+1,efgtoa@w+1
  2119   00088A                     
  2120                           ; BSR set to: 0
  2121                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 524:     if (sign
  2122   00088A  5181               	movf	efgtoa@sign& (0+255),w,b
  2123   00088C  B4D8               	btfsc	status,2,c
  2124   00088E  EF4B  F004         	goto	u3851
  2125   000892  EF4D  F004         	goto	u3850
  2126   000896                     u3851:
  2127   000896  EF61  F004         	goto	l3613
  2128   00089A                     u3850:
  2129   00089A                     
  2130                           ; BSR set to: 0
  2131                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 528:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 529:   sign = sign ? '-
      +                          ' : '+';
  2132   00089A  5181               	movf	efgtoa@sign& (0+255),w,b
  2133   00089C  A4D8               	btfss	status,2,c
  2134   00089E  EF53  F004         	goto	u3861
  2135   0008A2  EF55  F004         	goto	u3860
  2136   0008A6                     u3861:
  2137   0008A6  EF5B  F004         	goto	l3609
  2138   0008AA                     u3860:
  2139   0008AA                     
  2140                           ; BSR set to: 0
  2141   0008AA  0E00               	movlw	0
  2142   0008AC  6F67               	movwf	(_efgtoa$1049+1)& (0+255),b
  2143   0008AE  0E2B               	movlw	43
  2144   0008B0  6F66               	movwf	_efgtoa$1049& (0+255),b
  2145   0008B2  EF5F  F004         	goto	l3611
  2146   0008B6                     l3609:
  2147                           
  2148                           ; BSR set to: 0
  2149   0008B6  0E00               	movlw	0
  2150   0008B8  6F67               	movwf	(_efgtoa$1049+1)& (0+255),b
  2151   0008BA  0E2D               	movlw	45
  2152   0008BC  6F66               	movwf	_efgtoa$1049& (0+255),b
  2153   0008BE                     l3611:
  2154                           
  2155                           ; BSR set to: 0
  2156   0008BE  C066  F081         	movff	_efgtoa$1049,efgtoa@sign
  2157   0008C2                     l3613:
  2158                           
  2159                           ; BSR set to: 0
  2160                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 538:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  2161   0008C2  C082  F001         	movff	efgtoa@g,___fpclassifyf@x
  2162   0008C6  C083  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2163   0008CA  C084  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2164   0008CE  C085  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2165   0008D2  EC37  F019         	call	___fpclassifyf	;wreg free
  2166   0008D6  0401               	decf	?___fpclassifyf^0,w,c
  2167   0008D8  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2168   0008DA  A4D8               	btfss	status,2,c
  2169   0008DC  EF72  F004         	goto	u3871
  2170   0008E0  EF74  F004         	goto	u3870
  2171   0008E4                     u3871:
  2172   0008E4  EFA7  F004         	goto	l3631
  2173   0008E8                     u3870:
  2174   0008E8                     
  2175                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 539:   if (sign) 
      +                          {
  2176   0008E8  0100               	movlb	0	; () banked
  2177   0008EA  5181               	movf	efgtoa@sign& (0+255),w,b
  2178   0008EC  B4D8               	btfsc	status,2,c
  2179   0008EE  EF7B  F004         	goto	u3881
  2180   0008F2  EF7D  F004         	goto	u3880
  2181   0008F6                     u3881:
  2182   0008F6  EF86  F004         	goto	l3623
  2183   0008FA                     u3880:
  2184   0008FA                     
  2185                           ; BSR set to: 0
  2186                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 540:    dbuf[0] =
      +                           sign;
  2187   0008FA  C081  F100         	movff	efgtoa@sign,_dbuf
  2188   0008FE                     
  2189                           ; BSR set to: 0
  2190                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 541:    w--;
  2191   0008FE  0771               	decf	efgtoa@w& (0+255),f,b
  2192   000900  A0D8               	btfss	status,0,c
  2193   000902  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2194   000904                     
  2195                           ; BSR set to: 0
  2196                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 542:    n = 1;
  2197   000904  0E00               	movlw	0
  2198   000906  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  2199   000908  0E01               	movlw	1
  2200   00090A  6F86               	movwf	efgtoa@n& (0+255),b
  2201   00090C                     l3623:
  2202                           
  2203                           ; BSR set to: 0
  2204                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 550:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 551:             strcpy(&d
      +                          buf[n], "inf");
  2205   00090C  0E00               	movlw	low _dbuf
  2206   00090E  2586               	addwf	efgtoa@n& (0+255),w,b
  2207   000910  6E01               	movwf	strcpy@dest^0,c
  2208   000912  0E01               	movlw	high _dbuf
  2209   000914  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2210   000916  6E02               	movwf	(strcpy@dest+1)^0,c
  2211   000918  0E23               	movlw	low STR_3
  2212   00091A  6E03               	movwf	strcpy@src^0,c
  2213   00091C  0E08               	movlw	high STR_3
  2214   00091E  6E04               	movwf	(strcpy@src+1)^0,c
  2215   000920  EC75  F01C         	call	_strcpy	;wreg free
  2216   000924                     l3625:
  2217                           
  2218                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 552:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 553:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  2219   000924  0100               	movlb	0	; () banked
  2220   000926  0EFD               	movlw	253
  2221   000928  2771               	addwf	efgtoa@w& (0+255),f,b
  2222   00092A  0EFF               	movlw	255
  2223   00092C  2372               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2224   00092E                     
  2225                           ; BSR set to: 0
  2226                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 554:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  2227   00092E  C034  F011         	movff	efgtoa@fp,pad@fp
  2228   000932  C035  F012         	movff	efgtoa@fp+1,pad@fp+1
  2229   000936  0E00               	movlw	low _dbuf
  2230   000938  6E13               	movwf	pad@buf^0,c
  2231   00093A  0E01               	movlw	high _dbuf
  2232   00093C  6E14               	movwf	(pad@buf+1)^0,c
  2233   00093E  C071  F015         	movff	efgtoa@w,pad@p
  2234   000942  C072  F016         	movff	efgtoa@w+1,pad@p+1
  2235   000946  EC70  F01A         	call	_pad	;wreg free
  2236   00094A  EF47  F009         	goto	l878
  2237   00094E                     l3631:
  2238                           
  2239                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 556:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  2240   00094E  C082  F001         	movff	efgtoa@g,___fpclassifyf@x
  2241   000952  C083  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2242   000956  C084  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2243   00095A  C085  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2244   00095E  EC37  F019         	call	___fpclassifyf	;wreg free
  2245   000962  5001               	movf	?___fpclassifyf^0,w,c
  2246   000964  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2247   000966  A4D8               	btfss	status,2,c
  2248   000968  EFB8  F004         	goto	u3891
  2249   00096C  EFBA  F004         	goto	u3890
  2250   000970                     u3891:
  2251   000970  EFDA  F004         	goto	l3649
  2252   000974                     u3890:
  2253   000974                     
  2254                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 557:   if (sign) 
      +                          {
  2255   000974  0100               	movlb	0	; () banked
  2256   000976  5181               	movf	efgtoa@sign& (0+255),w,b
  2257   000978  B4D8               	btfsc	status,2,c
  2258   00097A  EFC1  F004         	goto	u3901
  2259   00097E  EFC3  F004         	goto	u3900
  2260   000982                     u3901:
  2261   000982  EFCC  F004         	goto	l3641
  2262   000986                     u3900:
  2263   000986                     
  2264                           ; BSR set to: 0
  2265                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 558:    dbuf[0] =
      +                           sign;
  2266   000986  C081  F100         	movff	efgtoa@sign,_dbuf
  2267   00098A                     
  2268                           ; BSR set to: 0
  2269                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 559:    w--;
  2270   00098A  0771               	decf	efgtoa@w& (0+255),f,b
  2271   00098C  A0D8               	btfss	status,0,c
  2272   00098E  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2273   000990                     
  2274                           ; BSR set to: 0
  2275                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 560:    n = 1;
  2276   000990  0E00               	movlw	0
  2277   000992  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  2278   000994  0E01               	movlw	1
  2279   000996  6F86               	movwf	efgtoa@n& (0+255),b
  2280   000998                     l3641:
  2281                           
  2282                           ; BSR set to: 0
  2283                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 568:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 569:             strcpy(&d
      +                          buf[n], "nan");
  2284   000998  0E00               	movlw	low _dbuf
  2285   00099A  2586               	addwf	efgtoa@n& (0+255),w,b
  2286   00099C  6E01               	movwf	strcpy@dest^0,c
  2287   00099E  0E01               	movlw	high _dbuf
  2288   0009A0  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2289   0009A2  6E02               	movwf	(strcpy@dest+1)^0,c
  2290   0009A4  0E27               	movlw	low STR_6
  2291   0009A6  6E03               	movwf	strcpy@src^0,c
  2292   0009A8  0E08               	movlw	high STR_6
  2293   0009AA  6E04               	movwf	(strcpy@src+1)^0,c
  2294   0009AC  EC75  F01C         	call	_strcpy	;wreg free
  2295   0009B0  EF92  F004         	goto	l3625
  2296   0009B4                     l3649:
  2297                           
  2298                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 576:     u.f = 1.
      +                          0;
  2299   0009B4  0E00               	movlw	0
  2300   0009B6  0100               	movlb	0	; () banked
  2301   0009B8  6F88               	movwf	efgtoa@u& (0+255),b
  2302   0009BA  0E00               	movlw	0
  2303   0009BC  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  2304   0009BE  0E80               	movlw	128
  2305   0009C0  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  2306   0009C2  0E3F               	movlw	63
  2307   0009C4  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  2308                           
  2309                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 577:     e = 0;
  2310   0009C6  0E00               	movlw	0
  2311   0009C8  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  2312   0009CA  0E00               	movlw	0
  2313   0009CC  6F6F               	movwf	efgtoa@e& (0+255),b
  2314   0009CE                     
  2315                           ; BSR set to: 0
  2316                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 578:  if (!(g.f =
      +                          = 0.0)) {
  2317   0009CE  C082  F001         	movff	efgtoa@g,___fleq@ff1
  2318   0009D2  C083  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  2319   0009D6  C084  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  2320   0009DA  C085  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  2321   0009DE  0E00               	movlw	0
  2322   0009E0  6E05               	movwf	___fleq@ff2^0,c
  2323   0009E2  0E00               	movlw	0
  2324   0009E4  6E06               	movwf	(___fleq@ff2+1)^0,c
  2325   0009E6  0E00               	movlw	0
  2326   0009E8  6E07               	movwf	(___fleq@ff2+2)^0,c
  2327   0009EA  0E00               	movlw	0
  2328   0009EC  6E08               	movwf	(___fleq@ff2+3)^0,c
  2329   0009EE  EC1B  F01A         	call	___fleq	;wreg free
  2330   0009F2  B0D8               	btfsc	status,0,c
  2331   0009F4  EFFE  F004         	goto	u3911
  2332   0009F8  EF00  F005         	goto	u3910
  2333   0009FC                     u3911:
  2334   0009FC  EFDF  F005         	goto	l881
  2335   000A00                     u3910:
  2336   000A00  EF0D  F005         	goto	l3657
  2337   000A04                     l883:
  2338                           
  2339                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 580:    u = ou;
  2340   000A04  C073  F088         	movff	efgtoa@ou,efgtoa@u
  2341   000A08  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  2342   000A0C  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  2343   000A10  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  2344   000A14                     
  2345                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 581:    ++e;
  2346   000A14  0100               	movlb	0	; () banked
  2347   000A16  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  2348   000A18  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  2349   000A1A                     l3657:
  2350                           
  2351                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 579:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  2352   000A1A  C088  F00F         	movff	efgtoa@u,___flmul@b
  2353   000A1E  C089  F010         	movff	efgtoa@u+1,___flmul@b+1
  2354   000A22  C08A  F011         	movff	efgtoa@u+2,___flmul@b+2
  2355   000A26  C08B  F012         	movff	efgtoa@u+3,___flmul@b+3
  2356   000A2A  0E00               	movlw	0
  2357   000A2C  6E13               	movwf	___flmul@a^0,c
  2358   000A2E  0E00               	movlw	0
  2359   000A30  6E14               	movwf	(___flmul@a+1)^0,c
  2360   000A32  0E20               	movlw	32
  2361   000A34  6E15               	movwf	(___flmul@a+2)^0,c
  2362   000A36  0E41               	movlw	65
  2363   000A38  6E16               	movwf	(___flmul@a+3)^0,c
  2364   000A3A  EC43  F00E         	call	___flmul	;wreg free
  2365   000A3E  C00F  F073         	movff	?___flmul,efgtoa@ou
  2366   000A42  C010  F074         	movff	?___flmul+1,efgtoa@ou+1
  2367   000A46  C011  F075         	movff	?___flmul+2,efgtoa@ou+2
  2368   000A4A  C012  F076         	movff	?___flmul+3,efgtoa@ou+3
  2369   000A4E  0100               	movlb	0	; () banked
  2370   000A50  5173               	movf	efgtoa@ou& (0+255),w,b
  2371   000A52  5D82               	subwf	efgtoa@g& (0+255),w,b
  2372   000A54  6E01               	movwf	labs@a^0,c
  2373   000A56  5174               	movf	(efgtoa@ou+1)& (0+255),w,b
  2374   000A58  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2375   000A5A  6E02               	movwf	(labs@a+1)^0,c
  2376   000A5C  5175               	movf	(efgtoa@ou+2)& (0+255),w,b
  2377   000A5E  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2378   000A60  6E03               	movwf	(labs@a+2)^0,c
  2379   000A62  5176               	movf	(efgtoa@ou+3)& (0+255),w,b
  2380   000A64  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2381   000A66  6E04               	movwf	(labs@a+3)^0,c
  2382   000A68  ECFF  F01A         	call	_labs	;wreg free
  2383   000A6C  BE04               	btfsc	(?_labs+3)^0,7,c
  2384   000A6E  EF44  F005         	goto	u3921
  2385   000A72  5004               	movf	(?_labs+3)^0,w,c
  2386   000A74  1003               	iorwf	(?_labs+2)^0,w,c
  2387   000A76  1002               	iorwf	(?_labs+1)^0,w,c
  2388   000A78  E109               	bnz	u3920
  2389   000A7A  0E02               	movlw	2
  2390   000A7C  5C01               	subwf	?_labs^0,w,c
  2391   000A7E  A0D8               	btfss	status,0,c
  2392   000A80  EF44  F005         	goto	u3921
  2393   000A84  EF46  F005         	goto	u3920
  2394   000A88                     u3921:
  2395   000A88  EF02  F005         	goto	l883
  2396   000A8C                     u3920:
  2397   000A8C  C073  F028         	movff	efgtoa@ou,___flge@ff1
  2398   000A90  C074  F029         	movff	efgtoa@ou+1,___flge@ff1+1
  2399   000A94  C075  F02A         	movff	efgtoa@ou+2,___flge@ff1+2
  2400   000A98  C076  F02B         	movff	efgtoa@ou+3,___flge@ff1+3
  2401   000A9C  C082  F02C         	movff	efgtoa@g,___flge@ff2
  2402   000AA0  C083  F02D         	movff	efgtoa@g+1,___flge@ff2+1
  2403   000AA4  C084  F02E         	movff	efgtoa@g+2,___flge@ff2+2
  2404   000AA8  C085  F02F         	movff	efgtoa@g+3,___flge@ff2+3
  2405   000AAC  ECB5  F018         	call	___flge	;wreg free
  2406   000AB0  A0D8               	btfss	status,0,c
  2407   000AB2  EF5D  F005         	goto	u3931
  2408   000AB6  EF5F  F005         	goto	u3930
  2409   000ABA                     u3931:
  2410   000ABA  EF02  F005         	goto	l883
  2411   000ABE                     u3930:
  2412   000ABE                     
  2413                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 583:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  2414   000ABE  0100               	movlb	0	; () banked
  2415   000AC0  5188               	movf	efgtoa@u& (0+255),w,b
  2416   000AC2  5D82               	subwf	efgtoa@g& (0+255),w,b
  2417   000AC4  6E01               	movwf	labs@a^0,c
  2418   000AC6  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  2419   000AC8  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2420   000ACA  6E02               	movwf	(labs@a+1)^0,c
  2421   000ACC  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  2422   000ACE  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2423   000AD0  6E03               	movwf	(labs@a+2)^0,c
  2424   000AD2  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  2425   000AD4  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2426   000AD6  6E04               	movwf	(labs@a+3)^0,c
  2427   000AD8  ECFF  F01A         	call	_labs	;wreg free
  2428   000ADC  BE04               	btfsc	(?_labs+3)^0,7,c
  2429   000ADE  EF7E  F005         	goto	u3940
  2430   000AE2  5004               	movf	(?_labs+3)^0,w,c
  2431   000AE4  1003               	iorwf	(?_labs+2)^0,w,c
  2432   000AE6  1002               	iorwf	(?_labs+1)^0,w,c
  2433   000AE8  E107               	bnz	u3941
  2434   000AEA  0E02               	movlw	2
  2435   000AEC  5C01               	subwf	?_labs^0,w,c
  2436   000AEE  B0D8               	btfsc	status,0,c
  2437   000AF0  EF7C  F005         	goto	u3941
  2438   000AF4  EF7E  F005         	goto	u3940
  2439   000AF8                     u3941:
  2440   000AF8  EFC6  F005         	goto	l3675
  2441   000AFC                     u3940:
  2442   000AFC                     l3665:
  2443                           
  2444                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 584:    g = u;
  2445   000AFC  C088  F082         	movff	efgtoa@u,efgtoa@g
  2446   000B00  C089  F083         	movff	efgtoa@u+1,efgtoa@g+1
  2447   000B04  C08A  F084         	movff	efgtoa@u+2,efgtoa@g+2
  2448   000B08  C08B  F085         	movff	efgtoa@u+3,efgtoa@g+3
  2449                           
  2450                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 585:   }
  2451   000B0C  EFDF  F005         	goto	l881
  2452   000B10                     l3667:
  2453                           
  2454                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 588:     u.f = u.
      +                          f/10.0;
  2455   000B10  C088  F001         	movff	efgtoa@u,___fldiv@b
  2456   000B14  C089  F002         	movff	efgtoa@u+1,___fldiv@b+1
  2457   000B18  C08A  F003         	movff	efgtoa@u+2,___fldiv@b+2
  2458   000B1C  C08B  F004         	movff	efgtoa@u+3,___fldiv@b+3
  2459   000B20  0E00               	movlw	0
  2460   000B22  6E05               	movwf	___fldiv@a^0,c
  2461   000B24  0E00               	movlw	0
  2462   000B26  6E06               	movwf	(___fldiv@a+1)^0,c
  2463   000B28  0E20               	movlw	32
  2464   000B2A  6E07               	movwf	(___fldiv@a+2)^0,c
  2465   000B2C  0E41               	movlw	65
  2466   000B2E  6E08               	movwf	(___fldiv@a+3)^0,c
  2467   000B30  EC58  F010         	call	___fldiv	;wreg free
  2468   000B34  C001  F088         	movff	?___fldiv,efgtoa@u
  2469   000B38  C002  F089         	movff	?___fldiv+1,efgtoa@u+1
  2470   000B3C  C003  F08A         	movff	?___fldiv+2,efgtoa@u+2
  2471   000B40  C004  F08B         	movff	?___fldiv+3,efgtoa@u+3
  2472   000B44                     
  2473                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 589:     --e;
  2474   000B44  0100               	movlb	0	; () banked
  2475   000B46  076F               	decf	efgtoa@e& (0+255),f,b
  2476   000B48  A0D8               	btfss	status,0,c
  2477   000B4A  0770               	decf	(efgtoa@e+1)& (0+255),f,b
  2478   000B4C                     
  2479                           ; BSR set to: 0
  2480                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 590:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  2481   000B4C  5188               	movf	efgtoa@u& (0+255),w,b
  2482   000B4E  5D82               	subwf	efgtoa@g& (0+255),w,b
  2483   000B50  6E01               	movwf	labs@a^0,c
  2484   000B52  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  2485   000B54  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2486   000B56  6E02               	movwf	(labs@a+1)^0,c
  2487   000B58  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  2488   000B5A  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2489   000B5C  6E03               	movwf	(labs@a+2)^0,c
  2490   000B5E  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  2491   000B60  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2492   000B62  6E04               	movwf	(labs@a+3)^0,c
  2493   000B64  ECFF  F01A         	call	_labs	;wreg free
  2494   000B68  BE04               	btfsc	(?_labs+3)^0,7,c
  2495   000B6A  EFC4  F005         	goto	u3950
  2496   000B6E  5004               	movf	(?_labs+3)^0,w,c
  2497   000B70  1003               	iorwf	(?_labs+2)^0,w,c
  2498   000B72  1002               	iorwf	(?_labs+1)^0,w,c
  2499   000B74  E107               	bnz	u3951
  2500   000B76  0E02               	movlw	2
  2501   000B78  5C01               	subwf	?_labs^0,w,c
  2502   000B7A  B0D8               	btfsc	status,0,c
  2503   000B7C  EFC2  F005         	goto	u3951
  2504   000B80  EFC4  F005         	goto	u3950
  2505   000B84                     u3951:
  2506   000B84  EFC6  F005         	goto	l3675
  2507   000B88                     u3950:
  2508   000B88  EF7E  F005         	goto	l3665
  2509   000B8C                     l3675:
  2510                           
  2511                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 587:    while (g.
      +                          f < u.f) {
  2512   000B8C  C082  F028         	movff	efgtoa@g,___flge@ff1
  2513   000B90  C083  F029         	movff	efgtoa@g+1,___flge@ff1+1
  2514   000B94  C084  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  2515   000B98  C085  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  2516   000B9C  C088  F02C         	movff	efgtoa@u,___flge@ff2
  2517   000BA0  C089  F02D         	movff	efgtoa@u+1,___flge@ff2+1
  2518   000BA4  C08A  F02E         	movff	efgtoa@u+2,___flge@ff2+2
  2519   000BA8  C08B  F02F         	movff	efgtoa@u+3,___flge@ff2+3
  2520   000BAC  ECB5  F018         	call	___flge	;wreg free
  2521   000BB0  A0D8               	btfss	status,0,c
  2522   000BB2  EFDD  F005         	goto	u3961
  2523   000BB6  EFDF  F005         	goto	u3960
  2524   000BBA                     u3961:
  2525   000BBA  EF88  F005         	goto	l3667
  2526   000BBE                     u3960:
  2527   000BBE                     l881:
  2528                           
  2529                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 602:  mode = c;
  2530   000BBE  C03A  F069         	movff	efgtoa@c,efgtoa@mode
  2531                           
  2532                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 604:     nmode = 
      +                          mode;
  2533   000BC2  C069  F06A         	movff	efgtoa@mode,efgtoa@nmode
  2534   000BC6                     
  2535                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 614:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 615:         p = (prec < 0)
      +                           ? 6 : prec;
  2536   000BC6  0100               	movlb	0	; () banked
  2537   000BC8  BFB5               	btfsc	(_prec+1)& (0+255),7,b
  2538   000BCA  EFE9  F005         	goto	u3971
  2539   000BCE  EFEB  F005         	goto	u3970
  2540   000BD2                     u3971:
  2541   000BD2  EFF1  F005         	goto	l3681
  2542   000BD6                     u3970:
  2543   000BD6                     
  2544                           ; BSR set to: 0
  2545   000BD6  C0B4  F062         	movff	_prec,efgtoa@p
  2546   000BDA  C0B5  F063         	movff	_prec+1,efgtoa@p+1
  2547   000BDE  EFF5  F005         	goto	l3683
  2548   000BE2                     l3681:
  2549                           
  2550                           ; BSR set to: 0
  2551   000BE2  0E00               	movlw	0
  2552   000BE4  6F63               	movwf	(efgtoa@p+1)& (0+255),b
  2553   000BE6  0E06               	movlw	6
  2554   000BE8  6F62               	movwf	efgtoa@p& (0+255),b
  2555   000BEA                     l3683:
  2556                           
  2557                           ; BSR set to: 0
  2558                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 616:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 630:     m = p;
  2559   000BEA  C062  F06D         	movff	efgtoa@p,efgtoa@m
  2560   000BEE  C063  F06E         	movff	efgtoa@p+1,efgtoa@m+1
  2561   000BF2                     
  2562                           ; BSR set to: 0
  2563                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 634:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 635:         ++m;
  2564   000BF2  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  2565   000BF4  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  2566   000BF6                     
  2567                           ; BSR set to: 0
  2568                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 636:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 640:     if (nmode == 'f
      +                          ') {
  2569   000BF6  0E66               	movlw	102
  2570   000BF8  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  2571   000BFA  A4D8               	btfss	status,2,c
  2572   000BFC  EF02  F006         	goto	u3981
  2573   000C00  EF04  F006         	goto	u3980
  2574   000C04                     u3981:
  2575   000C04  EF24  F006         	goto	l3697
  2576   000C08                     u3980:
  2577   000C08                     
  2578                           ; BSR set to: 0
  2579                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 641:         if (
      +                          e < 0) {
  2580   000C08  BF70               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2581   000C0A  EF0B  F006         	goto	u3990
  2582   000C0E  EF09  F006         	goto	u3991
  2583   000C12                     u3991:
  2584   000C12  EF17  F006         	goto	l3693
  2585   000C16                     u3990:
  2586   000C16                     
  2587                           ; BSR set to: 0
  2588                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 642:             
      +                          u.f = 1.0;
  2589   000C16  0E00               	movlw	0
  2590   000C18  6F88               	movwf	efgtoa@u& (0+255),b
  2591   000C1A  0E00               	movlw	0
  2592   000C1C  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  2593   000C1E  0E80               	movlw	128
  2594   000C20  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  2595   000C22  0E3F               	movlw	63
  2596   000C24  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  2597                           
  2598                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 643:             
      +                          e = 0;
  2599   000C26  0E00               	movlw	0
  2600   000C28  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  2601   000C2A  0E00               	movlw	0
  2602   000C2C  6F6F               	movwf	efgtoa@e& (0+255),b
  2603   000C2E                     l3693:
  2604                           
  2605                           ; BSR set to: 0
  2606                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 645:         if (
      +                          !(mode == 'g')) {
  2607   000C2E  0E67               	movlw	103
  2608   000C30  1969               	xorwf	efgtoa@mode& (0+255),w,b
  2609   000C32  B4D8               	btfsc	status,2,c
  2610   000C34  EF1E  F006         	goto	u4001
  2611   000C38  EF20  F006         	goto	u4000
  2612   000C3C                     u4001:
  2613   000C3C  EF24  F006         	goto	l3697
  2614   000C40                     u4000:
  2615   000C40                     
  2616                           ; BSR set to: 0
  2617                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 646:             
      +                          m += e;
  2618   000C40  516F               	movf	efgtoa@e& (0+255),w,b
  2619   000C42  276D               	addwf	efgtoa@m& (0+255),f,b
  2620   000C44  5170               	movf	(efgtoa@e+1)& (0+255),w,b
  2621   000C46  236E               	addwfc	(efgtoa@m+1)& (0+255),f,b
  2622   000C48                     l3697:
  2623                           
  2624                           ; BSR set to: 0
  2625                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 652:     i = 0;
  2626   000C48  0E00               	movlw	0
  2627   000C4A  6F80               	movwf	(efgtoa@i+1)& (0+255),b
  2628   000C4C  0E00               	movlw	0
  2629   000C4E  6F7F               	movwf	efgtoa@i& (0+255),b
  2630   000C50                     
  2631                           ; BSR set to: 0
  2632                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 653:     h = g.f;
  2633   000C50  C082  F077         	movff	efgtoa@g,efgtoa@h
  2634   000C54  C083  F078         	movff	efgtoa@g+1,efgtoa@h+1
  2635   000C58  C084  F079         	movff	efgtoa@g+2,efgtoa@h+2
  2636   000C5C  C085  F07A         	movff	efgtoa@g+3,efgtoa@h+3
  2637   000C60                     
  2638                           ; BSR set to: 0
  2639                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 654:     ou = u;
  2640   000C60  C088  F073         	movff	efgtoa@u,efgtoa@ou
  2641   000C64  C089  F074         	movff	efgtoa@u+1,efgtoa@ou+1
  2642   000C68  C08A  F075         	movff	efgtoa@u+2,efgtoa@ou+2
  2643   000C6C  C08B  F076         	movff	efgtoa@u+3,efgtoa@ou+3
  2644                           
  2645                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  2646   000C70  EFB5  F006         	goto	l3711
  2647   000C74                     l3703:
  2648                           
  2649                           ; BSR set to: 0
  2650                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 656:         l = 
      +                          floorf(h/u.f);
  2651   000C74  C077  F001         	movff	efgtoa@h,___fldiv@b
  2652   000C78  C078  F002         	movff	efgtoa@h+1,___fldiv@b+1
  2653   000C7C  C079  F003         	movff	efgtoa@h+2,___fldiv@b+2
  2654   000C80  C07A  F004         	movff	efgtoa@h+3,___fldiv@b+3
  2655   000C84  C088  F005         	movff	efgtoa@u,___fldiv@a
  2656   000C88  C089  F006         	movff	efgtoa@u+1,___fldiv@a+1
  2657   000C8C  C08A  F007         	movff	efgtoa@u+2,___fldiv@a+2
  2658   000C90  C08B  F008         	movff	efgtoa@u+3,___fldiv@a+3
  2659   000C94  EC58  F010         	call	___fldiv	;wreg free
  2660   000C98  C001  F01A         	movff	?___fldiv,floorf@x
  2661   000C9C  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  2662   000CA0  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  2663   000CA4  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  2664   000CA8  EC80  F013         	call	_floorf	;wreg free
  2665   000CAC  C01A  F07B         	movff	?_floorf,efgtoa@l
  2666   000CB0  C01B  F07C         	movff	?_floorf+1,efgtoa@l+1
  2667   000CB4  C01C  F07D         	movff	?_floorf+2,efgtoa@l+2
  2668   000CB8  C01D  F07E         	movff	?_floorf+3,efgtoa@l+3
  2669                           
  2670                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 657:         d = 
      +                          (int)l;
  2671   000CBC  C07B  F001         	movff	efgtoa@l,___fltol@f1
  2672   000CC0  C07C  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2673   000CC4  C07D  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2674   000CC8  C07E  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2675   000CCC  EC32  F018         	call	___fltol	;wreg free
  2676   000CD0  C001  F06B         	movff	?___fltol,efgtoa@d
  2677   000CD4  C002  F06C         	movff	?___fltol+1,efgtoa@d+1
  2678   000CD8                     
  2679                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 658:         h -=
      +                           l*u.f;
  2680   000CD8  C077  F028         	movff	efgtoa@h,___flsub@b
  2681   000CDC  C078  F029         	movff	efgtoa@h+1,___flsub@b+1
  2682   000CE0  C079  F02A         	movff	efgtoa@h+2,___flsub@b+2
  2683   000CE4  C07A  F02B         	movff	efgtoa@h+3,___flsub@b+3
  2684   000CE8  C07B  F013         	movff	efgtoa@l,___flmul@a
  2685   000CEC  C07C  F014         	movff	efgtoa@l+1,___flmul@a+1
  2686   000CF0  C07D  F015         	movff	efgtoa@l+2,___flmul@a+2
  2687   000CF4  C07E  F016         	movff	efgtoa@l+3,___flmul@a+3
  2688   000CF8  C088  F00F         	movff	efgtoa@u,___flmul@b
  2689   000CFC  C089  F010         	movff	efgtoa@u+1,___flmul@b+1
  2690   000D00  C08A  F011         	movff	efgtoa@u+2,___flmul@b+2
  2691   000D04  C08B  F012         	movff	efgtoa@u+3,___flmul@b+3
  2692   000D08  EC43  F00E         	call	___flmul	;wreg free
  2693   000D0C  C00F  F02C         	movff	?___flmul,___flsub@a
  2694   000D10  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  2695   000D14  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  2696   000D18  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  2697   000D1C  EC0D  F01C         	call	___flsub	;wreg free
  2698   000D20  C028  F077         	movff	?___flsub,efgtoa@h
  2699   000D24  C029  F078         	movff	?___flsub+1,efgtoa@h+1
  2700   000D28  C02A  F079         	movff	?___flsub+2,efgtoa@h+2
  2701   000D2C  C02B  F07A         	movff	?___flsub+3,efgtoa@h+3
  2702   000D30                     
  2703                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 659:         u.f 
      +                          = u.f/10.0;
  2704   000D30  C088  F001         	movff	efgtoa@u,___fldiv@b
  2705   000D34  C089  F002         	movff	efgtoa@u+1,___fldiv@b+1
  2706   000D38  C08A  F003         	movff	efgtoa@u+2,___fldiv@b+2
  2707   000D3C  C08B  F004         	movff	efgtoa@u+3,___fldiv@b+3
  2708   000D40  0E00               	movlw	0
  2709   000D42  6E05               	movwf	___fldiv@a^0,c
  2710   000D44  0E00               	movlw	0
  2711   000D46  6E06               	movwf	(___fldiv@a+1)^0,c
  2712   000D48  0E20               	movlw	32
  2713   000D4A  6E07               	movwf	(___fldiv@a+2)^0,c
  2714   000D4C  0E41               	movlw	65
  2715   000D4E  6E08               	movwf	(___fldiv@a+3)^0,c
  2716   000D50  EC58  F010         	call	___fldiv	;wreg free
  2717   000D54  C001  F088         	movff	?___fldiv,efgtoa@u
  2718   000D58  C002  F089         	movff	?___fldiv+1,efgtoa@u+1
  2719   000D5C  C003  F08A         	movff	?___fldiv+2,efgtoa@u+2
  2720   000D60  C004  F08B         	movff	?___fldiv+3,efgtoa@u+3
  2721   000D64                     
  2722                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 660:         ++i;
  2723   000D64  0100               	movlb	0	; () banked
  2724   000D66  4B7F               	infsnz	efgtoa@i& (0+255),f,b
  2725   000D68  2B80               	incf	(efgtoa@i+1)& (0+255),f,b
  2726   000D6A                     l3711:
  2727                           
  2728                           ; BSR set to: 0
  2729                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  2730   000D6A  516D               	movf	efgtoa@m& (0+255),w,b
  2731   000D6C  5D7F               	subwf	efgtoa@i& (0+255),w,b
  2732   000D6E  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  2733   000D70  0A80               	xorlw	128
  2734   000D72  6E3B               	movwf	??_efgtoa^0,c
  2735   000D74  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  2736   000D76  0A80               	xorlw	128
  2737   000D78  583B               	subwfb	??_efgtoa^0,w,c
  2738   000D7A  A0D8               	btfss	status,0,c
  2739   000D7C  EFC2  F006         	goto	u4011
  2740   000D80  EFC4  F006         	goto	u4010
  2741   000D84                     u4011:
  2742   000D84  EF3A  F006         	goto	l3703
  2743   000D88                     u4010:
  2744   000D88                     
  2745                           ; BSR set to: 0
  2746                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 664:     l = u.f*
      +                          5.0;
  2747   000D88  C088  F00F         	movff	efgtoa@u,___flmul@b
  2748   000D8C  C089  F010         	movff	efgtoa@u+1,___flmul@b+1
  2749   000D90  C08A  F011         	movff	efgtoa@u+2,___flmul@b+2
  2750   000D94  C08B  F012         	movff	efgtoa@u+3,___flmul@b+3
  2751   000D98  0E00               	movlw	0
  2752   000D9A  6E13               	movwf	___flmul@a^0,c
  2753   000D9C  0E00               	movlw	0
  2754   000D9E  6E14               	movwf	(___flmul@a+1)^0,c
  2755   000DA0  0EA0               	movlw	160
  2756   000DA2  6E15               	movwf	(___flmul@a+2)^0,c
  2757   000DA4  0E40               	movlw	64
  2758   000DA6  6E16               	movwf	(___flmul@a+3)^0,c
  2759   000DA8  EC43  F00E         	call	___flmul	;wreg free
  2760   000DAC  C00F  F07B         	movff	?___flmul,efgtoa@l
  2761   000DB0  C010  F07C         	movff	?___flmul+1,efgtoa@l+1
  2762   000DB4  C011  F07D         	movff	?___flmul+2,efgtoa@l+2
  2763   000DB8  C012  F07E         	movff	?___flmul+3,efgtoa@l+3
  2764   000DBC                     
  2765                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 665:     if (h < 
      +                          l) {
  2766   000DBC  C077  F028         	movff	efgtoa@h,___flge@ff1
  2767   000DC0  C078  F029         	movff	efgtoa@h+1,___flge@ff1+1
  2768   000DC4  C079  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  2769   000DC8  C07A  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  2770   000DCC  C07B  F02C         	movff	efgtoa@l,___flge@ff2
  2771   000DD0  C07C  F02D         	movff	efgtoa@l+1,___flge@ff2+1
  2772   000DD4  C07D  F02E         	movff	efgtoa@l+2,___flge@ff2+2
  2773   000DD8  C07E  F02F         	movff	efgtoa@l+3,___flge@ff2+3
  2774   000DDC  ECB5  F018         	call	___flge	;wreg free
  2775   000DE0  B0D8               	btfsc	status,0,c
  2776   000DE2  EFF5  F006         	goto	u4021
  2777   000DE6  EFF7  F006         	goto	u4020
  2778   000DEA                     u4021:
  2779   000DEA  EF02  F007         	goto	l3719
  2780   000DEE                     u4020:
  2781   000DEE                     
  2782                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 666:         l = 
      +                          0.0;
  2783   000DEE  0E00               	movlw	0
  2784   000DF0  0100               	movlb	0	; () banked
  2785   000DF2  6F7B               	movwf	efgtoa@l& (0+255),b
  2786   000DF4  0E00               	movlw	0
  2787   000DF6  6F7C               	movwf	(efgtoa@l+1)& (0+255),b
  2788   000DF8  0E00               	movlw	0
  2789   000DFA  6F7D               	movwf	(efgtoa@l+2)& (0+255),b
  2790   000DFC  0E00               	movlw	0
  2791   000DFE  6F7E               	movwf	(efgtoa@l+3)& (0+255),b
  2792                           
  2793                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 667:     } else {
  2794   000E00  EF2B  F007         	goto	l3725
  2795   000E04                     l3719:
  2796                           
  2797                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 669:         if (
      +                          (h == l) && !(d % 2)) {
  2798   000E04  C077  F001         	movff	efgtoa@h,___fleq@ff1
  2799   000E08  C078  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  2800   000E0C  C079  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  2801   000E10  C07A  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  2802   000E14  C07B  F005         	movff	efgtoa@l,___fleq@ff2
  2803   000E18  C07C  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  2804   000E1C  C07D  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  2805   000E20  C07E  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  2806   000E24  EC1B  F01A         	call	___fleq	;wreg free
  2807   000E28  A0D8               	btfss	status,0,c
  2808   000E2A  EF19  F007         	goto	u4031
  2809   000E2E  EF1B  F007         	goto	u4030
  2810   000E32                     u4031:
  2811   000E32  EF2B  F007         	goto	l3725
  2812   000E36                     u4030:
  2813   000E36  0100               	movlb	0	; () banked
  2814   000E38  B16B               	btfsc	efgtoa@d& (0+255),0,b
  2815   000E3A  EF21  F007         	goto	u4041
  2816   000E3E  EF23  F007         	goto	u4040
  2817   000E42                     u4041:
  2818   000E42  EF2B  F007         	goto	l3725
  2819   000E46                     u4040:
  2820   000E46                     
  2821                           ; BSR set to: 0
  2822                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 670:             
      +                          l = 0.0;
  2823   000E46  0E00               	movlw	0
  2824   000E48  6F7B               	movwf	efgtoa@l& (0+255),b
  2825   000E4A  0E00               	movlw	0
  2826   000E4C  6F7C               	movwf	(efgtoa@l+1)& (0+255),b
  2827   000E4E  0E00               	movlw	0
  2828   000E50  6F7D               	movwf	(efgtoa@l+2)& (0+255),b
  2829   000E52  0E00               	movlw	0
  2830   000E54  6F7E               	movwf	(efgtoa@l+3)& (0+255),b
  2831   000E56                     l3725:
  2832                           
  2833                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 675:     h = g.f 
      +                          + l;
  2834   000E56  C082  F001         	movff	efgtoa@g,___fladd@b
  2835   000E5A  C083  F002         	movff	efgtoa@g+1,___fladd@b+1
  2836   000E5E  C084  F003         	movff	efgtoa@g+2,___fladd@b+2
  2837   000E62  C085  F004         	movff	efgtoa@g+3,___fladd@b+3
  2838   000E66  C07B  F005         	movff	efgtoa@l,___fladd@a
  2839   000E6A  C07C  F006         	movff	efgtoa@l+1,___fladd@a+1
  2840   000E6E  C07D  F007         	movff	efgtoa@l+2,___fladd@a+2
  2841   000E72  C07E  F008         	movff	efgtoa@l+3,___fladd@a+3
  2842   000E76  ECE3  F00B         	call	___fladd	;wreg free
  2843   000E7A  C001  F077         	movff	?___fladd,efgtoa@h
  2844   000E7E  C002  F078         	movff	?___fladd+1,efgtoa@h+1
  2845   000E82  C003  F079         	movff	?___fladd+2,efgtoa@h+2
  2846   000E86  C004  F07A         	movff	?___fladd+3,efgtoa@h+3
  2847   000E8A                     
  2848                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 677:  if (h >= (o
      +                          u.f*10.0)) {
  2849   000E8A  C077  F028         	movff	efgtoa@h,___flge@ff1
  2850   000E8E  C078  F029         	movff	efgtoa@h+1,___flge@ff1+1
  2851   000E92  C079  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  2852   000E96  C07A  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  2853   000E9A  0E00               	movlw	0
  2854   000E9C  6E13               	movwf	___flmul@a^0,c
  2855   000E9E  0E00               	movlw	0
  2856   000EA0  6E14               	movwf	(___flmul@a+1)^0,c
  2857   000EA2  0E20               	movlw	32
  2858   000EA4  6E15               	movwf	(___flmul@a+2)^0,c
  2859   000EA6  0E41               	movlw	65
  2860   000EA8  6E16               	movwf	(___flmul@a+3)^0,c
  2861   000EAA  C073  F00F         	movff	efgtoa@ou,___flmul@b
  2862   000EAE  C074  F010         	movff	efgtoa@ou+1,___flmul@b+1
  2863   000EB2  C075  F011         	movff	efgtoa@ou+2,___flmul@b+2
  2864   000EB6  C076  F012         	movff	efgtoa@ou+3,___flmul@b+3
  2865   000EBA  EC43  F00E         	call	___flmul	;wreg free
  2866   000EBE  C00F  F02C         	movff	?___flmul,___flge@ff2
  2867   000EC2  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  2868   000EC6  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  2869   000ECA  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  2870   000ECE  ECB5  F018         	call	___flge	;wreg free
  2871   000ED2  A0D8               	btfss	status,0,c
  2872   000ED4  EF6E  F007         	goto	u4051
  2873   000ED8  EF70  F007         	goto	u4050
  2874   000EDC                     u4051:
  2875   000EDC  EF99  F007         	goto	l3737
  2876   000EE0                     u4050:
  2877   000EE0                     
  2878                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 678:   e++;
  2879   000EE0  0100               	movlb	0	; () banked
  2880   000EE2  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  2881   000EE4  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  2882   000EE6                     
  2883                           ; BSR set to: 0
  2884                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 679:   ou.f *= 10
      +                          .0;
  2885   000EE6  C073  F00F         	movff	efgtoa@ou,___flmul@b
  2886   000EEA  C074  F010         	movff	efgtoa@ou+1,___flmul@b+1
  2887   000EEE  C075  F011         	movff	efgtoa@ou+2,___flmul@b+2
  2888   000EF2  C076  F012         	movff	efgtoa@ou+3,___flmul@b+3
  2889   000EF6  0E00               	movlw	0
  2890   000EF8  6E13               	movwf	___flmul@a^0,c
  2891   000EFA  0E00               	movlw	0
  2892   000EFC  6E14               	movwf	(___flmul@a+1)^0,c
  2893   000EFE  0E20               	movlw	32
  2894   000F00  6E15               	movwf	(___flmul@a+2)^0,c
  2895   000F02  0E41               	movlw	65
  2896   000F04  6E16               	movwf	(___flmul@a+3)^0,c
  2897   000F06  EC43  F00E         	call	___flmul	;wreg free
  2898   000F0A  C00F  F073         	movff	?___flmul,efgtoa@ou
  2899   000F0E  C010  F074         	movff	?___flmul+1,efgtoa@ou+1
  2900   000F12  C011  F075         	movff	?___flmul+2,efgtoa@ou+2
  2901   000F16  C012  F076         	movff	?___flmul+3,efgtoa@ou+3
  2902   000F1A                     
  2903                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 681:   if (nmode 
      +                          == 'f') {
  2904   000F1A  0E66               	movlw	102
  2905   000F1C  0100               	movlb	0	; () banked
  2906   000F1E  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  2907   000F20  A4D8               	btfss	status,2,c
  2908   000F22  EF95  F007         	goto	u4061
  2909   000F26  EF97  F007         	goto	u4060
  2910   000F2A                     u4061:
  2911   000F2A  EF99  F007         	goto	l3737
  2912   000F2E                     u4060:
  2913   000F2E                     
  2914                           ; BSR set to: 0
  2915                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 683:    m++;
  2916   000F2E  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  2917   000F30  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  2918   000F32                     l3737:
  2919                           
  2920                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 689:     u = ou;
  2921   000F32  C073  F088         	movff	efgtoa@ou,efgtoa@u
  2922   000F36  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  2923   000F3A  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  2924   000F3E  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  2925   000F42                     
  2926                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 693:  ne = e;
  2927   000F42  C06F  F060         	movff	efgtoa@e,efgtoa@ne
  2928   000F46  C070  F061         	movff	efgtoa@e+1,efgtoa@ne+1
  2929   000F4A                     
  2930                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 695:     pp = 0;
  2931   000F4A  0E00               	movlw	0
  2932   000F4C  0100               	movlb	0	; () banked
  2933   000F4E  6F68               	movwf	efgtoa@pp& (0+255),b
  2934   000F50                     
  2935                           ; BSR set to: 0
  2936                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 696:     t = 0;
  2937   000F50  0E00               	movlw	0
  2938   000F52  6F65               	movwf	(efgtoa@t+1)& (0+255),b
  2939   000F54  0E00               	movlw	0
  2940   000F56  6F64               	movwf	efgtoa@t& (0+255),b
  2941   000F58                     
  2942                           ; BSR set to: 0
  2943                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 697:     i = 0;
  2944   000F58  0E00               	movlw	0
  2945   000F5A  6F80               	movwf	(efgtoa@i+1)& (0+255),b
  2946   000F5C  0E00               	movlw	0
  2947   000F5E  6F7F               	movwf	efgtoa@i& (0+255),b
  2948                           
  2949                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  2950   000F60  EF97  F008         	goto	l3787
  2951   000F64                     l3747:
  2952                           
  2953                           ; BSR set to: 0
  2954                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 699:         l = 
      +                          floorf(h/u.f);
  2955   000F64  C077  F001         	movff	efgtoa@h,___fldiv@b
  2956   000F68  C078  F002         	movff	efgtoa@h+1,___fldiv@b+1
  2957   000F6C  C079  F003         	movff	efgtoa@h+2,___fldiv@b+2
  2958   000F70  C07A  F004         	movff	efgtoa@h+3,___fldiv@b+3
  2959   000F74  C088  F005         	movff	efgtoa@u,___fldiv@a
  2960   000F78  C089  F006         	movff	efgtoa@u+1,___fldiv@a+1
  2961   000F7C  C08A  F007         	movff	efgtoa@u+2,___fldiv@a+2
  2962   000F80  C08B  F008         	movff	efgtoa@u+3,___fldiv@a+3
  2963   000F84  EC58  F010         	call	___fldiv	;wreg free
  2964   000F88  C001  F01A         	movff	?___fldiv,floorf@x
  2965   000F8C  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  2966   000F90  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  2967   000F94  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  2968   000F98  EC80  F013         	call	_floorf	;wreg free
  2969   000F9C  C01A  F07B         	movff	?_floorf,efgtoa@l
  2970   000FA0  C01B  F07C         	movff	?_floorf+1,efgtoa@l+1
  2971   000FA4  C01C  F07D         	movff	?_floorf+2,efgtoa@l+2
  2972   000FA8  C01D  F07E         	movff	?_floorf+3,efgtoa@l+3
  2973                           
  2974                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 700:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  2975   000FAC  C07B  F001         	movff	efgtoa@l,___fltol@f1
  2976   000FB0  C07C  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2977   000FB4  C07D  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2978   000FB8  C07E  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2979   000FBC  EC32  F018         	call	___fltol	;wreg free
  2980   000FC0  BE02               	btfsc	(?___fltol+1)^0,7,c
  2981   000FC2  EFEE  F007         	goto	u4070
  2982   000FC6  5002               	movf	(?___fltol+1)^0,w,c
  2983   000FC8  E107               	bnz	u4071
  2984   000FCA  0E0A               	movlw	10
  2985   000FCC  5C01               	subwf	?___fltol^0,w,c
  2986   000FCE  B0D8               	btfsc	status,0,c
  2987   000FD0  EFEC  F007         	goto	u4071
  2988   000FD4  EFEE  F007         	goto	u4070
  2989   000FD8                     u4071:
  2990   000FD8  EFFE  F007         	goto	l3751
  2991   000FDC                     u4070:
  2992   000FDC  C07B  F001         	movff	efgtoa@l,___fltol@f1
  2993   000FE0  C07C  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2994   000FE4  C07D  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2995   000FE8  C07E  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2996   000FEC  EC32  F018         	call	___fltol	;wreg free
  2997   000FF0  C001  F06B         	movff	?___fltol,efgtoa@d
  2998   000FF4  C002  F06C         	movff	?___fltol+1,efgtoa@d+1
  2999   000FF8  EF03  F008         	goto	l911
  3000   000FFC                     l3751:
  3001   000FFC  0E00               	movlw	0
  3002   000FFE  0100               	movlb	0	; () banked
  3003   001000  6F6C               	movwf	(efgtoa@d+1)& (0+255),b
  3004   001002  0E09               	movlw	9
  3005   001004  6F6B               	movwf	efgtoa@d& (0+255),b
  3006   001006                     l911:
  3007                           
  3008                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 711:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 712:             if (!pp &
      +                          & (ne < 0)) {
  3009   001006  0100               	movlb	0	; () banked
  3010   001008  5168               	movf	efgtoa@pp& (0+255),w,b
  3011   00100A  A4D8               	btfss	status,2,c
  3012   00100C  EF0A  F008         	goto	u4081
  3013   001010  EF0C  F008         	goto	u4080
  3014   001014                     u4081:
  3015   001014  EF34  F008         	goto	l3771
  3016   001018                     u4080:
  3017   001018                     
  3018                           ; BSR set to: 0
  3019   001018  BF61               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3020   00101A  EF13  F008         	goto	u4090
  3021   00101E  EF11  F008         	goto	u4091
  3022   001022                     u4091:
  3023   001022  EF34  F008         	goto	l3771
  3024   001026                     u4090:
  3025   001026                     
  3026                           ; BSR set to: 0
  3027                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 713:             
      +                              dbuf[n++] = '.';
  3028   001026  0E00               	movlw	low _dbuf
  3029   001028  2586               	addwf	efgtoa@n& (0+255),w,b
  3030   00102A  6ED9               	movwf	fsr2l,c
  3031   00102C  0E01               	movlw	high _dbuf
  3032   00102E  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3033   001030  6EDA               	movwf	fsr2h,c
  3034   001032  0E2E               	movlw	46
  3035   001034  6EDF               	movwf	indf2,c
  3036   001036                     
  3037                           ; BSR set to: 0
  3038   001036  4B86               	infsnz	efgtoa@n& (0+255),f,b
  3039   001038  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  3040   00103A                     
  3041                           ; BSR set to: 0
  3042                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 714:             
      +                              --w;
  3043   00103A  0771               	decf	efgtoa@w& (0+255),f,b
  3044   00103C  A0D8               	btfss	status,0,c
  3045   00103E  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3046   001040                     
  3047                           ; BSR set to: 0
  3048                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 715:             
      +                              pp = 1;
  3049   001040  0E01               	movlw	1
  3050   001042  6F68               	movwf	efgtoa@pp& (0+255),b
  3051   001044  EF34  F008         	goto	l3771
  3052   001048                     l3763:
  3053                           
  3054                           ; BSR set to: 0
  3055                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 718:             
      +                              dbuf[n++] = '0';
  3056   001048  0E00               	movlw	low _dbuf
  3057   00104A  2586               	addwf	efgtoa@n& (0+255),w,b
  3058   00104C  6ED9               	movwf	fsr2l,c
  3059   00104E  0E01               	movlw	high _dbuf
  3060   001050  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3061   001052  6EDA               	movwf	fsr2h,c
  3062   001054  0E30               	movlw	48
  3063   001056  6EDF               	movwf	indf2,c
  3064   001058                     
  3065                           ; BSR set to: 0
  3066   001058  4B86               	infsnz	efgtoa@n& (0+255),f,b
  3067   00105A  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  3068   00105C                     
  3069                           ; BSR set to: 0
  3070                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 719:             
      +                              --w;
  3071   00105C  0771               	decf	efgtoa@w& (0+255),f,b
  3072   00105E  A0D8               	btfss	status,0,c
  3073   001060  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3074   001062                     
  3075                           ; BSR set to: 0
  3076                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 720:             
      +                              --t;
  3077   001062  0764               	decf	efgtoa@t& (0+255),f,b
  3078   001064  A0D8               	btfss	status,0,c
  3079   001066  0765               	decf	(efgtoa@t+1)& (0+255),f,b
  3080   001068                     l3771:
  3081                           
  3082                           ; BSR set to: 0
  3083                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 717:             
      +                          while (t) {
  3084   001068  5164               	movf	efgtoa@t& (0+255),w,b
  3085   00106A  1165               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3086   00106C  A4D8               	btfss	status,2,c
  3087   00106E  EF3B  F008         	goto	u4101
  3088   001072  EF3D  F008         	goto	u4100
  3089   001076                     u4101:
  3090   001076  EF24  F008         	goto	l3763
  3091   00107A                     u4100:
  3092   00107A                     
  3093                           ; BSR set to: 0
  3094                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 722:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3095   00107A  0E00               	movlw	low _dbuf
  3096   00107C  2586               	addwf	efgtoa@n& (0+255),w,b
  3097   00107E  6ED9               	movwf	fsr2l,c
  3098   001080  0E01               	movlw	high _dbuf
  3099   001082  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3100   001084  6EDA               	movwf	fsr2h,c
  3101   001086  516B               	movf	efgtoa@d& (0+255),w,b
  3102   001088  0F30               	addlw	48
  3103   00108A  6EDF               	movwf	indf2,c
  3104   00108C                     
  3105                           ; BSR set to: 0
  3106   00108C  4B86               	infsnz	efgtoa@n& (0+255),f,b
  3107   00108E  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  3108   001090                     
  3109                           ; BSR set to: 0
  3110                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 723:             
      +                          --w;
  3111   001090  0771               	decf	efgtoa@w& (0+255),f,b
  3112   001092  A0D8               	btfss	status,0,c
  3113   001094  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3114   001096                     
  3115                           ; BSR set to: 0
  3116                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 724:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 725:         h -= l*
      +                          u.f;
  3117   001096  C077  F028         	movff	efgtoa@h,___flsub@b
  3118   00109A  C078  F029         	movff	efgtoa@h+1,___flsub@b+1
  3119   00109E  C079  F02A         	movff	efgtoa@h+2,___flsub@b+2
  3120   0010A2  C07A  F02B         	movff	efgtoa@h+3,___flsub@b+3
  3121   0010A6  C07B  F013         	movff	efgtoa@l,___flmul@a
  3122   0010AA  C07C  F014         	movff	efgtoa@l+1,___flmul@a+1
  3123   0010AE  C07D  F015         	movff	efgtoa@l+2,___flmul@a+2
  3124   0010B2  C07E  F016         	movff	efgtoa@l+3,___flmul@a+3
  3125   0010B6  C088  F00F         	movff	efgtoa@u,___flmul@b
  3126   0010BA  C089  F010         	movff	efgtoa@u+1,___flmul@b+1
  3127   0010BE  C08A  F011         	movff	efgtoa@u+2,___flmul@b+2
  3128   0010C2  C08B  F012         	movff	efgtoa@u+3,___flmul@b+3
  3129   0010C6  EC43  F00E         	call	___flmul	;wreg free
  3130   0010CA  C00F  F02C         	movff	?___flmul,___flsub@a
  3131   0010CE  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  3132   0010D2  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  3133   0010D6  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  3134   0010DA  EC0D  F01C         	call	___flsub	;wreg free
  3135   0010DE  C028  F077         	movff	?___flsub,efgtoa@h
  3136   0010E2  C029  F078         	movff	?___flsub+1,efgtoa@h+1
  3137   0010E6  C02A  F079         	movff	?___flsub+2,efgtoa@h+2
  3138   0010EA  C02B  F07A         	movff	?___flsub+3,efgtoa@h+3
  3139   0010EE                     
  3140                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 726:         u.f 
      +                          = u.f/10.0;
  3141   0010EE  C088  F001         	movff	efgtoa@u,___fldiv@b
  3142   0010F2  C089  F002         	movff	efgtoa@u+1,___fldiv@b+1
  3143   0010F6  C08A  F003         	movff	efgtoa@u+2,___fldiv@b+2
  3144   0010FA  C08B  F004         	movff	efgtoa@u+3,___fldiv@b+3
  3145   0010FE  0E00               	movlw	0
  3146   001100  6E05               	movwf	___fldiv@a^0,c
  3147   001102  0E00               	movlw	0
  3148   001104  6E06               	movwf	(___fldiv@a+1)^0,c
  3149   001106  0E20               	movlw	32
  3150   001108  6E07               	movwf	(___fldiv@a+2)^0,c
  3151   00110A  0E41               	movlw	65
  3152   00110C  6E08               	movwf	(___fldiv@a+3)^0,c
  3153   00110E  EC58  F010         	call	___fldiv	;wreg free
  3154   001112  C001  F088         	movff	?___fldiv,efgtoa@u
  3155   001116  C002  F089         	movff	?___fldiv+1,efgtoa@u+1
  3156   00111A  C003  F08A         	movff	?___fldiv+2,efgtoa@u+2
  3157   00111E  C004  F08B         	movff	?___fldiv+3,efgtoa@u+3
  3158   001122                     
  3159                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 727:         --ne
      +                          ;
  3160   001122  0100               	movlb	0	; () banked
  3161   001124  0760               	decf	efgtoa@ne& (0+255),f,b
  3162   001126  A0D8               	btfss	status,0,c
  3163   001128  0761               	decf	(efgtoa@ne+1)& (0+255),f,b
  3164   00112A                     
  3165                           ; BSR set to: 0
  3166                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 728:         ++i;
  3167   00112A  4B7F               	infsnz	efgtoa@i& (0+255),f,b
  3168   00112C  2B80               	incf	(efgtoa@i+1)& (0+255),f,b
  3169   00112E                     l3787:
  3170                           
  3171                           ; BSR set to: 0
  3172                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3173   00112E  516D               	movf	efgtoa@m& (0+255),w,b
  3174   001130  5D7F               	subwf	efgtoa@i& (0+255),w,b
  3175   001132  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  3176   001134  0A80               	xorlw	128
  3177   001136  6E3B               	movwf	??_efgtoa^0,c
  3178   001138  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  3179   00113A  0A80               	xorlw	128
  3180   00113C  583B               	subwfb	??_efgtoa^0,w,c
  3181   00113E  B0D8               	btfsc	status,0,c
  3182   001140  EFA4  F008         	goto	u4111
  3183   001144  EFA6  F008         	goto	u4110
  3184   001148                     u4111:
  3185   001148  EFB4  F008         	goto	l3791
  3186   00114C                     u4110:
  3187   00114C                     
  3188                           ; BSR set to: 0
  3189   00114C  BF87               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3190   00114E  EFB2  F008         	goto	u4121
  3191   001152  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  3192   001154  E109               	bnz	u4120
  3193   001156  0E4B               	movlw	75
  3194   001158  5D86               	subwf	efgtoa@n& (0+255),w,b
  3195   00115A  A0D8               	btfss	status,0,c
  3196   00115C  EFB2  F008         	goto	u4121
  3197   001160  EFB4  F008         	goto	u4120
  3198   001164                     u4121:
  3199   001164  EFB2  F007         	goto	l3747
  3200   001168                     u4120:
  3201   001168                     l3791:
  3202                           
  3203                           ; BSR set to: 0
  3204                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 735:  i = sizeof(
      +                          dbuf) - 1;
  3205   001168  0E00               	movlw	0
  3206   00116A  6F80               	movwf	(efgtoa@i+1)& (0+255),b
  3207   00116C  0E4F               	movlw	79
  3208   00116E  6F7F               	movwf	efgtoa@i& (0+255),b
  3209   001170                     
  3210                           ; BSR set to: 0
  3211                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 736:     dbuf[i] 
      +                          = '\0';
  3212   001170  0E00               	movlw	low _dbuf
  3213   001172  257F               	addwf	efgtoa@i& (0+255),w,b
  3214   001174  6ED9               	movwf	fsr2l,c
  3215   001176  0E01               	movlw	high _dbuf
  3216   001178  2180               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3217   00117A  6EDA               	movwf	fsr2h,c
  3218   00117C  0E00               	movlw	0
  3219   00117E  6EDF               	movwf	indf2,c
  3220   001180                     
  3221                           ; BSR set to: 0
  3222                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 767:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  3223   001180  0E00               	movlw	low _dbuf
  3224   001182  6E3B               	movwf	??_efgtoa^0,c
  3225   001184  0E01               	movlw	high _dbuf
  3226   001186  6E3C               	movwf	(??_efgtoa+1)^0,c
  3227   001188  5186               	movf	efgtoa@n& (0+255),w,b
  3228   00118A  5E3B               	subwf	??_efgtoa^0,f,c
  3229   00118C  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  3230   00118E  5A3C               	subwfb	(??_efgtoa+1)^0,f,c
  3231   001190  517F               	movf	efgtoa@i& (0+255),w,b
  3232   001192  243B               	addwf	??_efgtoa^0,w,c
  3233   001194  6E01               	movwf	memcpy@d1^0,c
  3234   001196  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  3235   001198  203C               	addwfc	(??_efgtoa+1)^0,w,c
  3236   00119A  6E02               	movwf	(memcpy@d1+1)^0,c
  3237   00119C  0E00               	movlw	low _dbuf
  3238   00119E  6E03               	movwf	memcpy@s1^0,c
  3239   0011A0  0E01               	movlw	high _dbuf
  3240   0011A2  6E04               	movwf	(memcpy@s1+1)^0,c
  3241   0011A4  C086  F005         	movff	efgtoa@n,memcpy@n
  3242   0011A8  C087  F006         	movff	efgtoa@n+1,memcpy@n+1
  3243   0011AC  ECE5  F01B         	call	_memcpy	;wreg free
  3244   0011B0                     
  3245                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 768:  n = i-n;
  3246   0011B0  0100               	movlb	0	; () banked
  3247   0011B2  5186               	movf	efgtoa@n& (0+255),w,b
  3248   0011B4  5D7F               	subwf	efgtoa@i& (0+255),w,b
  3249   0011B6  6F86               	movwf	efgtoa@n& (0+255),b
  3250   0011B8  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  3251   0011BA  5980               	subwfb	(efgtoa@i+1)& (0+255),w,b
  3252   0011BC  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  3253   0011BE                     
  3254                           ; BSR set to: 0
  3255                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 769:  i = sign ==
      +                           0 ? 0 : 1;
  3256   0011BE  5181               	movf	efgtoa@sign& (0+255),w,b
  3257   0011C0  A4D8               	btfss	status,2,c
  3258   0011C2  EFE5  F008         	goto	u4131
  3259   0011C6  EFE8  F008         	goto	u4130
  3260   0011CA                     u4131:
  3261   0011CA  0E01               	movlw	1
  3262   0011CC  EFE9  F008         	goto	u4140
  3263   0011D0                     u4130:
  3264   0011D0  0E00               	movlw	0
  3265   0011D2                     u4140:
  3266   0011D2  6F7F               	movwf	efgtoa@i& (0+255),b
  3267   0011D4  6B80               	clrf	(efgtoa@i+1)& (0+255),b
  3268   0011D6                     
  3269                           ; BSR set to: 0
  3270                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 772:  if (flags &
      +                           (1 << 1)) {
  3271   0011D6  A25F               	btfss	_flags^0,1,c
  3272   0011D8  EFF0  F008         	goto	u4151
  3273   0011DC  EFF2  F008         	goto	u4150
  3274   0011E0                     u4151:
  3275   0011E0  EF20  F009         	goto	l3813
  3276   0011E4                     u4150:
  3277   0011E4  EF02  F009         	goto	l3809
  3278   0011E8                     l3805:
  3279                           
  3280                           ; BSR set to: 0
  3281                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 774:    dbuf[--n]
      +                           = '0';
  3282   0011E8  0786               	decf	efgtoa@n& (0+255),f,b
  3283   0011EA  A0D8               	btfss	status,0,c
  3284   0011EC  0787               	decf	(efgtoa@n+1)& (0+255),f,b
  3285   0011EE  0E00               	movlw	low _dbuf
  3286   0011F0  2586               	addwf	efgtoa@n& (0+255),w,b
  3287   0011F2  6ED9               	movwf	fsr2l,c
  3288   0011F4  0E01               	movlw	high _dbuf
  3289   0011F6  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3290   0011F8  6EDA               	movwf	fsr2h,c
  3291   0011FA  0E30               	movlw	48
  3292   0011FC  6EDF               	movwf	indf2,c
  3293   0011FE                     
  3294                           ; BSR set to: 0
  3295                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 775:    w--;
  3296   0011FE  0771               	decf	efgtoa@w& (0+255),f,b
  3297   001200  A0D8               	btfss	status,0,c
  3298   001202  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3299   001204                     l3809:
  3300                           
  3301                           ; BSR set to: 0
  3302                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 773:   while (w >
      +                           i && n > i) {
  3303   001204  5171               	movf	efgtoa@w& (0+255),w,b
  3304   001206  5D7F               	subwf	efgtoa@i& (0+255),w,b
  3305   001208  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  3306   00120A  0A80               	xorlw	128
  3307   00120C  6E3B               	movwf	??_efgtoa^0,c
  3308   00120E  5172               	movf	(efgtoa@w+1)& (0+255),w,b
  3309   001210  0A80               	xorlw	128
  3310   001212  583B               	subwfb	??_efgtoa^0,w,c
  3311   001214  B0D8               	btfsc	status,0,c
  3312   001216  EF0F  F009         	goto	u4161
  3313   00121A  EF11  F009         	goto	u4160
  3314   00121E                     u4161:
  3315   00121E  EF20  F009         	goto	l3813
  3316   001222                     u4160:
  3317   001222                     
  3318                           ; BSR set to: 0
  3319   001222  5186               	movf	efgtoa@n& (0+255),w,b
  3320   001224  5D7F               	subwf	efgtoa@i& (0+255),w,b
  3321   001226  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  3322   001228  0A80               	xorlw	128
  3323   00122A  6E3B               	movwf	??_efgtoa^0,c
  3324   00122C  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  3325   00122E  0A80               	xorlw	128
  3326   001230  583B               	subwfb	??_efgtoa^0,w,c
  3327   001232  A0D8               	btfss	status,0,c
  3328   001234  EF1E  F009         	goto	u4171
  3329   001238  EF20  F009         	goto	u4170
  3330   00123C                     u4171:
  3331   00123C  EFF4  F008         	goto	l3805
  3332   001240                     u4170:
  3333   001240                     l3813:
  3334                           
  3335                           ; BSR set to: 0
  3336                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 780:  if (sign) {
  3337   001240  5181               	movf	efgtoa@sign& (0+255),w,b
  3338   001242  B4D8               	btfsc	status,2,c
  3339   001244  EF26  F009         	goto	u4181
  3340   001248  EF28  F009         	goto	u4180
  3341   00124C                     u4181:
  3342   00124C  EF33  F009         	goto	l3817
  3343   001250                     u4180:
  3344   001250                     
  3345                           ; BSR set to: 0
  3346                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 781:   dbuf[--n] 
      +                          = sign;
  3347   001250  0786               	decf	efgtoa@n& (0+255),f,b
  3348   001252  A0D8               	btfss	status,0,c
  3349   001254  0787               	decf	(efgtoa@n+1)& (0+255),f,b
  3350   001256  0E00               	movlw	low _dbuf
  3351   001258  2586               	addwf	efgtoa@n& (0+255),w,b
  3352   00125A  6ED9               	movwf	fsr2l,c
  3353   00125C  0E01               	movlw	high _dbuf
  3354   00125E  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3355   001260  6EDA               	movwf	fsr2h,c
  3356   001262  C081  FFDF         	movff	efgtoa@sign,indf2
  3357   001266                     l3817:
  3358                           
  3359                           ; BSR set to: 0
  3360                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 783:  w -= i;
  3361   001266  517F               	movf	efgtoa@i& (0+255),w,b
  3362   001268  5F71               	subwf	efgtoa@w& (0+255),f,b
  3363   00126A  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  3364   00126C  5B72               	subwfb	(efgtoa@w+1)& (0+255),f,b
  3365   00126E                     
  3366                           ; BSR set to: 0
  3367                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 786:     return (
      +                          void) pad(fp, &dbuf[n], w);
  3368   00126E  C034  F011         	movff	efgtoa@fp,pad@fp
  3369   001272  C035  F012         	movff	efgtoa@fp+1,pad@fp+1
  3370   001276  0E00               	movlw	low _dbuf
  3371   001278  2586               	addwf	efgtoa@n& (0+255),w,b
  3372   00127A  6E13               	movwf	pad@buf^0,c
  3373   00127C  0E01               	movlw	high _dbuf
  3374   00127E  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3375   001280  6E14               	movwf	(pad@buf+1)^0,c
  3376   001282  C071  F015         	movff	efgtoa@w,pad@p
  3377   001286  C072  F016         	movff	efgtoa@w+1,pad@p+1
  3378   00128A  EC70  F01A         	call	_pad	;wreg free
  3379   00128E                     l878:
  3380   00128E  0012               	return		;funcret
  3381   001290                     __end_of_efgtoa:
  3382                           	callstack 0
  3383                           
  3384 ;; *************** function _strcpy *****************
  3385 ;; Defined at:
  3386 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  3387 ;; Parameters:    Size  Location     Type
  3388 ;;  dest            2    0[COMRAM] PTR unsigned char 
  3389 ;;		 -> dbuf(80), 
  3390 ;;  src             2    2[COMRAM] PTR const unsigned char 
  3391 ;;		 -> STR_6(4), STR_3(4), 
  3392 ;; Auto vars:     Size  Location     Type
  3393 ;;  d               2    6[COMRAM] PTR unsigned char 
  3394 ;;		 -> dbuf(80), 
  3395 ;;  s               2    4[COMRAM] PTR const unsigned char 
  3396 ;;		 -> STR_6(4), STR_3(4), 
  3397 ;; Return value:  Size  Location     Type
  3398 ;;                  2    0[COMRAM] PTR unsigned char 
  3399 ;; Registers used:
  3400 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3401 ;; Tracked objects:
  3402 ;;		On entry : 0/0
  3403 ;;		On exit  : 0/0
  3404 ;;		Unchanged: 0/0
  3405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3406 ;;      Params:         4       0       0       0       0       0       0       0       0
  3407 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3408 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3409 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3410 ;;Total ram usage:        8 bytes
  3411 ;; Hardware stack levels used: 1
  3412 ;; This function calls:
  3413 ;;		Nothing
  3414 ;; This function is called by:
  3415 ;;		_efgtoa
  3416 ;; This function uses a non-reentrant model
  3417 ;;
  3418                           
  3419                           	psect	text5
  3420   0038EA                     __ptext5:
  3421                           	callstack 0
  3422   0038EA                     _strcpy:
  3423                           	callstack 26
  3424   0038EA  C003  F005         	movff	strcpy@src,strcpy@s
  3425   0038EE  C004  F006         	movff	strcpy@src+1,strcpy@s+1
  3426   0038F2  C001  F007         	movff	strcpy@dest,strcpy@d
  3427   0038F6  C002  F008         	movff	strcpy@dest+1,strcpy@d+1
  3428   0038FA                     l3467:
  3429   0038FA  C005  FFF6         	movff	strcpy@s,tblptrl
  3430   0038FE  C006  FFF7         	movff	strcpy@s+1,tblptrh
  3431   003902  4A05               	infsnz	strcpy@s^0,f,c
  3432   003904  2A06               	incf	(strcpy@s+1)^0,f,c
  3433   003906                     	if	0	;tblptru may be non-zero
  3434   003906                     	endif
  3435   003906                     	if	0	;tblptru may be non-zero
  3436   003906                     	endif
  3437   003906  C007  FFD9         	movff	strcpy@d,fsr2l
  3438   00390A  C008  FFDA         	movff	strcpy@d+1,fsr2h
  3439   00390E  4A07               	infsnz	strcpy@d^0,f,c
  3440   003910  2A08               	incf	(strcpy@d+1)^0,f,c
  3441   003912  0008               	tblrd		*
  3442   003914  CFF5 FFDF          	movff	tablat,indf2
  3443   003918  50DF               	movf	indf2,w,c
  3444   00391A  A4D8               	btfss	status,2,c
  3445   00391C  EF92  F01C         	goto	u3541
  3446   003920  EF94  F01C         	goto	u3540
  3447   003924                     u3541:
  3448   003924  EF7D  F01C         	goto	l3467
  3449   003928                     u3540:
  3450   003928  0012               	return		;funcret
  3451   00392A                     __end_of_strcpy:
  3452                           	callstack 0
  3453                           
  3454 ;; *************** function _memcpy *****************
  3455 ;; Defined at:
  3456 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
  3457 ;; Parameters:    Size  Location     Type
  3458 ;;  d1              2    0[COMRAM] PTR void 
  3459 ;;		 -> dbuf(80), 
  3460 ;;  s1              2    2[COMRAM] PTR const void 
  3461 ;;		 -> dbuf(80), 
  3462 ;;  n               2    4[COMRAM] unsigned int 
  3463 ;; Auto vars:     Size  Location     Type
  3464 ;;  s               2    8[COMRAM] PTR const unsigned char 
  3465 ;;		 -> dbuf(80), 
  3466 ;;  d               2    6[COMRAM] PTR unsigned char 
  3467 ;;		 -> dbuf(80), 
  3468 ;;  tmp             1   10[COMRAM] unsigned char 
  3469 ;; Return value:  Size  Location     Type
  3470 ;;                  2    0[COMRAM] PTR void 
  3471 ;; Registers used:
  3472 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3473 ;; Tracked objects:
  3474 ;;		On entry : 0/0
  3475 ;;		On exit  : 0/0
  3476 ;;		Unchanged: 0/0
  3477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3478 ;;      Params:         6       0       0       0       0       0       0       0       0
  3479 ;;      Locals:         5       0       0       0       0       0       0       0       0
  3480 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3481 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3482 ;;Total ram usage:       11 bytes
  3483 ;; Hardware stack levels used: 1
  3484 ;; This function calls:
  3485 ;;		Nothing
  3486 ;; This function is called by:
  3487 ;;		_efgtoa
  3488 ;; This function uses a non-reentrant model
  3489 ;;
  3490                           
  3491                           	psect	text6
  3492   0037CA                     __ptext6:
  3493                           	callstack 0
  3494   0037CA                     _memcpy:
  3495                           	callstack 26
  3496   0037CA  C003  F009         	movff	memcpy@s1,memcpy@s
  3497   0037CE  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
  3498   0037D2  C001  F007         	movff	memcpy@d1,memcpy@d
  3499   0037D6  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
  3500   0037DA  EFFF  F01B         	goto	l3511
  3501   0037DE                     l3503:
  3502   0037DE  C009  FFD9         	movff	memcpy@s,fsr2l
  3503   0037E2  C00A  FFDA         	movff	memcpy@s+1,fsr2h
  3504   0037E6  50DF               	movf	indf2,w,c
  3505   0037E8  6E0B               	movwf	memcpy@tmp^0,c
  3506   0037EA  4A09               	infsnz	memcpy@s^0,f,c
  3507   0037EC  2A0A               	incf	(memcpy@s+1)^0,f,c
  3508   0037EE  C007  FFD9         	movff	memcpy@d,fsr2l
  3509   0037F2  C008  FFDA         	movff	memcpy@d+1,fsr2h
  3510   0037F6  C00B  FFDF         	movff	memcpy@tmp,indf2
  3511   0037FA  4A07               	infsnz	memcpy@d^0,f,c
  3512   0037FC  2A08               	incf	(memcpy@d+1)^0,f,c
  3513   0037FE                     l3511:
  3514   0037FE  0605               	decf	memcpy@n^0,f,c
  3515   003800  A0D8               	btfss	status,0,c
  3516   003802  0606               	decf	(memcpy@n+1)^0,f,c
  3517   003804  2805               	incf	memcpy@n^0,w,c
  3518   003806  E106               	bnz	u3661
  3519   003808  2806               	incf	(memcpy@n+1)^0,w,c
  3520   00380A  A4D8               	btfss	status,2,c
  3521   00380C  EF0A  F01C         	goto	u3661
  3522   003810  EF0C  F01C         	goto	u3660
  3523   003814                     u3661:
  3524   003814  EFEF  F01B         	goto	l3503
  3525   003818                     u3660:
  3526   003818  0012               	return		;funcret
  3527   00381A                     __end_of_memcpy:
  3528                           	callstack 0
  3529                           
  3530 ;; *************** function _labs *****************
  3531 ;; Defined at:
  3532 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\labs.c"
  3533 ;; Parameters:    Size  Location     Type
  3534 ;;  a               4    0[COMRAM] long 
  3535 ;; Auto vars:     Size  Location     Type
  3536 ;;		None
  3537 ;; Return value:  Size  Location     Type
  3538 ;;                  4    0[COMRAM] long 
  3539 ;; Registers used:
  3540 ;;		wreg, status,2, status,0
  3541 ;; Tracked objects:
  3542 ;;		On entry : 0/0
  3543 ;;		On exit  : 0/0
  3544 ;;		Unchanged: 0/0
  3545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3546 ;;      Params:         4       0       0       0       0       0       0       0       0
  3547 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3548 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3549 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3550 ;;Total ram usage:        8 bytes
  3551 ;; Hardware stack levels used: 1
  3552 ;; This function calls:
  3553 ;;		Nothing
  3554 ;; This function is called by:
  3555 ;;		_efgtoa
  3556 ;; This function uses a non-reentrant model
  3557 ;;
  3558                           
  3559                           	psect	text7
  3560   0035FE                     __ptext7:
  3561                           	callstack 0
  3562   0035FE                     _labs:
  3563                           	callstack 26
  3564   0035FE  BE04               	btfsc	(labs@a+3)^0,7,c
  3565   003600  EF0E  F01B         	goto	u3550
  3566   003604  5004               	movf	(labs@a+3)^0,w,c
  3567   003606  1003               	iorwf	(labs@a+2)^0,w,c
  3568   003608  1002               	iorwf	(labs@a+1)^0,w,c
  3569   00360A  E106               	bnz	u3551
  3570   00360C  0401               	decf	labs@a^0,w,c
  3571   00360E  B0D8               	btfsc	status,0,c
  3572   003610  EF0C  F01B         	goto	u3551
  3573   003614  EF0E  F01B         	goto	u3550
  3574   003618                     u3551:
  3575   003618  EF29  F01B         	goto	l1051
  3576   00361C                     u3550:
  3577   00361C  C001  F005         	movff	labs@a,??_labs
  3578   003620  C002  F006         	movff	labs@a+1,??_labs+1
  3579   003624  C003  F007         	movff	labs@a+2,??_labs+2
  3580   003628  C004  F008         	movff	labs@a+3,??_labs+3
  3581   00362C  1E05               	comf	??_labs^0,f,c
  3582   00362E  1E06               	comf	(??_labs+1)^0,f,c
  3583   003630  1E07               	comf	(??_labs+2)^0,f,c
  3584   003632  1E08               	comf	(??_labs+3)^0,f,c
  3585   003634  2A05               	incf	??_labs^0,f,c
  3586   003636  0E00               	movlw	0
  3587   003638  2206               	addwfc	(??_labs+1)^0,f,c
  3588   00363A  2207               	addwfc	(??_labs+2)^0,f,c
  3589   00363C  2208               	addwfc	(??_labs+3)^0,f,c
  3590   00363E  C005  F001         	movff	??_labs,?_labs
  3591   003642  C006  F002         	movff	??_labs+1,?_labs+1
  3592   003646  C007  F003         	movff	??_labs+2,?_labs+2
  3593   00364A  C008  F004         	movff	??_labs+3,?_labs+3
  3594   00364E  EF31  F01B         	goto	l1054
  3595   003652                     l1051:
  3596   003652  C001  F001         	movff	labs@a,?_labs
  3597   003656  C002  F002         	movff	labs@a+1,?_labs+1
  3598   00365A  C003  F003         	movff	labs@a+2,?_labs+2
  3599   00365E  C004  F004         	movff	labs@a+3,?_labs+3
  3600   003662                     l1054:
  3601   003662  0012               	return		;funcret
  3602   003664                     __end_of_labs:
  3603                           	callstack 0
  3604                           
  3605 ;; *************** function _floorf *****************
  3606 ;; Defined at:
  3607 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\floorf.c"
  3608 ;; Parameters:    Size  Location     Type
  3609 ;;  x               4   25[COMRAM] float 
  3610 ;; Auto vars:     Size  Location     Type
  3611 ;;  u               4   41[COMRAM] struct .
  3612 ;;  m               4   35[COMRAM] unsigned long 
  3613 ;;  e               2   39[COMRAM] int 
  3614 ;; Return value:  Size  Location     Type
  3615 ;;                  4   25[COMRAM] float 
  3616 ;; Registers used:
  3617 ;;		wreg, status,2, status,0
  3618 ;; Tracked objects:
  3619 ;;		On entry : 0/0
  3620 ;;		On exit  : 0/0
  3621 ;;		Unchanged: 0/0
  3622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3623 ;;      Params:         4       0       0       0       0       0       0       0       0
  3624 ;;      Locals:        10       0       0       0       0       0       0       0       0
  3625 ;;      Temps:          6       0       0       0       0       0       0       0       0
  3626 ;;      Totals:        20       0       0       0       0       0       0       0       0
  3627 ;;Total ram usage:       20 bytes
  3628 ;; Hardware stack levels used: 1
  3629 ;; This function calls:
  3630 ;;		Nothing
  3631 ;; This function is called by:
  3632 ;;		_efgtoa
  3633 ;; This function uses a non-reentrant model
  3634 ;;
  3635                           
  3636                           	psect	text8
  3637   002700                     __ptext8:
  3638                           	callstack 0
  3639   002700                     _floorf:
  3640                           	callstack 26
  3641   002700  C0A2  F02A         	movff	floorf@F526,floorf@u
  3642   002704  C0A3  F02B         	movff	floorf@F526+1,floorf@u+1
  3643   002708  C0A4  F02C         	movff	floorf@F526+2,floorf@u+2
  3644   00270C  C0A5  F02D         	movff	floorf@F526+3,floorf@u+3
  3645   002710  C01A  F02A         	movff	floorf@x,floorf@u
  3646   002714  C01B  F02B         	movff	floorf@x+1,floorf@u+1
  3647   002718  C01C  F02C         	movff	floorf@x+2,floorf@u+2
  3648   00271C  C01D  F02D         	movff	floorf@x+3,floorf@u+3
  3649   002720  0E81               	movlw	129
  3650   002722  6E1E               	movwf	??_floorf^0,c
  3651   002724  0EFF               	movlw	255
  3652   002726  6E1F               	movwf	(??_floorf+1)^0,c
  3653   002728  C02A  F020         	movff	floorf@u,??_floorf+2
  3654   00272C  C02B  F021         	movff	floorf@u+1,??_floorf+3
  3655   002730  C02C  F022         	movff	floorf@u+2,??_floorf+4
  3656   002734  C02D  F023         	movff	floorf@u+3,??_floorf+5
  3657   002738  0E18               	movlw	24
  3658   00273A  EFA4  F013         	goto	u3560
  3659   00273E                     u3565:
  3660   00273E  90D8               	bcf	status,0,c
  3661   002740  3223               	rrcf	(??_floorf+5)^0,f,c
  3662   002742  3222               	rrcf	(??_floorf+4)^0,f,c
  3663   002744  3221               	rrcf	(??_floorf+3)^0,f,c
  3664   002746  3220               	rrcf	(??_floorf+2)^0,f,c
  3665   002748                     u3560:
  3666   002748  2EE8               	decfsz	wreg,f,c
  3667   00274A  EF9F  F013         	goto	u3565
  3668   00274E  5020               	movf	(??_floorf+2)^0,w,c
  3669   002750  241E               	addwf	??_floorf^0,w,c
  3670   002752  6E28               	movwf	floorf@e^0,c
  3671   002754  0E00               	movlw	0
  3672   002756  201F               	addwfc	(??_floorf+1)^0,w,c
  3673   002758  6E29               	movwf	(floorf@e+1)^0,c
  3674   00275A  BE29               	btfsc	(floorf@e+1)^0,7,c
  3675   00275C  EFB9  F013         	goto	u3571
  3676   002760  5029               	movf	(floorf@e+1)^0,w,c
  3677   002762  E109               	bnz	u3570
  3678   002764  0E17               	movlw	23
  3679   002766  5C28               	subwf	floorf@e^0,w,c
  3680   002768  A0D8               	btfss	status,0,c
  3681   00276A  EFB9  F013         	goto	u3571
  3682   00276E  EFBB  F013         	goto	u3570
  3683   002772                     u3571:
  3684   002772  EFC5  F013         	goto	l3479
  3685   002776                     u3570:
  3686   002776                     l3477:
  3687   002776  C01A  F01A         	movff	floorf@x,?_floorf
  3688   00277A  C01B  F01B         	movff	floorf@x+1,?_floorf+1
  3689   00277E  C01C  F01C         	movff	floorf@x+2,?_floorf+2
  3690   002782  C01D  F01D         	movff	floorf@x+3,?_floorf+3
  3691   002786  EF88  F014         	goto	l1026
  3692   00278A                     l3479:
  3693   00278A  BE29               	btfsc	(floorf@e+1)^0,7,c
  3694   00278C  EFCA  F013         	goto	u3581
  3695   002790  EFCC  F013         	goto	u3580
  3696   002794                     u3581:
  3697   002794  EF3C  F014         	goto	l3489
  3698   002798                     u3580:
  3699   002798  C028  F01E         	movff	floorf@e,??_floorf
  3700   00279C  0EFF               	movlw	255
  3701   00279E  6E1F               	movwf	(??_floorf+1)^0,c
  3702   0027A0  0EFF               	movlw	255
  3703   0027A2  6E20               	movwf	(??_floorf+2)^0,c
  3704   0027A4  0E7F               	movlw	127
  3705   0027A6  6E21               	movwf	(??_floorf+3)^0,c
  3706   0027A8  0E00               	movlw	0
  3707   0027AA  6E22               	movwf	(??_floorf+4)^0,c
  3708   0027AC                     u3595:
  3709   0027AC  661E               	tstfsz	??_floorf^0,c
  3710   0027AE  EFDB  F013         	goto	u3596
  3711   0027B2  EFE3  F013         	goto	u3597
  3712   0027B6                     u3596:
  3713   0027B6  3422               	rlcf	(??_floorf+4)^0,w,c
  3714   0027B8  3222               	rrcf	(??_floorf+4)^0,f,c
  3715   0027BA  3221               	rrcf	(??_floorf+3)^0,f,c
  3716   0027BC  3220               	rrcf	(??_floorf+2)^0,f,c
  3717   0027BE  321F               	rrcf	(??_floorf+1)^0,f,c
  3718   0027C0  2E1E               	decfsz	??_floorf^0,f,c
  3719   0027C2  EFD6  F013         	goto	u3595
  3720   0027C6                     u3597:
  3721   0027C6  C01F  F024         	movff	??_floorf+1,floorf@m
  3722   0027CA  C020  F025         	movff	??_floorf+2,floorf@m+1
  3723   0027CE  C021  F026         	movff	??_floorf+3,floorf@m+2
  3724   0027D2  C022  F027         	movff	??_floorf+4,floorf@m+3
  3725   0027D6  5024               	movf	floorf@m^0,w,c
  3726   0027D8  142A               	andwf	floorf@u^0,w,c
  3727   0027DA  6E1E               	movwf	??_floorf^0,c
  3728   0027DC  5025               	movf	(floorf@m+1)^0,w,c
  3729   0027DE  142B               	andwf	(floorf@u+1)^0,w,c
  3730   0027E0  6E1F               	movwf	(??_floorf+1)^0,c
  3731   0027E2  5026               	movf	(floorf@m+2)^0,w,c
  3732   0027E4  142C               	andwf	(floorf@u+2)^0,w,c
  3733   0027E6  6E20               	movwf	(??_floorf+2)^0,c
  3734   0027E8  5027               	movf	(floorf@m+3)^0,w,c
  3735   0027EA  142D               	andwf	(floorf@u+3)^0,w,c
  3736   0027EC  6E21               	movwf	(??_floorf+3)^0,c
  3737   0027EE  501E               	movf	??_floorf^0,w,c
  3738   0027F0  101F               	iorwf	(??_floorf+1)^0,w,c
  3739   0027F2  1020               	iorwf	(??_floorf+2)^0,w,c
  3740   0027F4  1021               	iorwf	(??_floorf+3)^0,w,c
  3741   0027F6  A4D8               	btfss	status,2,c
  3742   0027F8  EF00  F014         	goto	u3601
  3743   0027FC  EF02  F014         	goto	u3600
  3744   002800                     u3601:
  3745   002800  EF04  F014         	goto	l3485
  3746   002804                     u3600:
  3747   002804  EFBB  F013         	goto	l3477
  3748   002808                     l3485:
  3749   002808  C02A  F01E         	movff	floorf@u,??_floorf
  3750   00280C  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  3751   002810  C02C  F020         	movff	floorf@u+2,??_floorf+2
  3752   002814  C02D  F021         	movff	floorf@u+3,??_floorf+3
  3753   002818  0E20               	movlw	32
  3754   00281A  EF14  F014         	goto	u3610
  3755   00281E                     u3615:
  3756   00281E  90D8               	bcf	status,0,c
  3757   002820  3221               	rrcf	(??_floorf+3)^0,f,c
  3758   002822  3220               	rrcf	(??_floorf+2)^0,f,c
  3759   002824  321F               	rrcf	(??_floorf+1)^0,f,c
  3760   002826  321E               	rrcf	??_floorf^0,f,c
  3761   002828                     u3610:
  3762   002828  2EE8               	decfsz	wreg,f,c
  3763   00282A  EF0F  F014         	goto	u3615
  3764   00282E  501E               	movf	??_floorf^0,w,c
  3765   002830  101F               	iorwf	(??_floorf+1)^0,w,c
  3766   002832  1020               	iorwf	(??_floorf+2)^0,w,c
  3767   002834  1021               	iorwf	(??_floorf+3)^0,w,c
  3768   002836  B4D8               	btfsc	status,2,c
  3769   002838  EF20  F014         	goto	u3621
  3770   00283C  EF22  F014         	goto	u3620
  3771   002840                     u3621:
  3772   002840  EF2A  F014         	goto	l1029
  3773   002844                     u3620:
  3774   002844  5024               	movf	floorf@m^0,w,c
  3775   002846  262A               	addwf	floorf@u^0,f,c
  3776   002848  5025               	movf	(floorf@m+1)^0,w,c
  3777   00284A  222B               	addwfc	(floorf@u+1)^0,f,c
  3778   00284C  5026               	movf	(floorf@m+2)^0,w,c
  3779   00284E  222C               	addwfc	(floorf@u+2)^0,f,c
  3780   002850  5027               	movf	(floorf@m+3)^0,w,c
  3781   002852  222D               	addwfc	(floorf@u+3)^0,f,c
  3782   002854                     l1029:
  3783   002854  1C24               	comf	floorf@m^0,w,c
  3784   002856  6E1E               	movwf	??_floorf^0,c
  3785   002858  1C25               	comf	(floorf@m+1)^0,w,c
  3786   00285A  6E1F               	movwf	(??_floorf+1)^0,c
  3787   00285C  1C26               	comf	(floorf@m+2)^0,w,c
  3788   00285E  6E20               	movwf	(??_floorf+2)^0,c
  3789   002860  1C27               	comf	(floorf@m+3)^0,w,c
  3790   002862  6E21               	movwf	(??_floorf+3)^0,c
  3791   002864  501E               	movf	??_floorf^0,w,c
  3792   002866  162A               	andwf	floorf@u^0,f,c
  3793   002868  501F               	movf	(??_floorf+1)^0,w,c
  3794   00286A  162B               	andwf	(floorf@u+1)^0,f,c
  3795   00286C  5020               	movf	(??_floorf+2)^0,w,c
  3796   00286E  162C               	andwf	(floorf@u+2)^0,f,c
  3797   002870  5021               	movf	(??_floorf+3)^0,w,c
  3798   002872  162D               	andwf	(floorf@u+3)^0,f,c
  3799   002874  EF80  F014         	goto	l3497
  3800   002878                     l3489:
  3801   002878  C02A  F01E         	movff	floorf@u,??_floorf
  3802   00287C  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  3803   002880  C02C  F020         	movff	floorf@u+2,??_floorf+2
  3804   002884  C02D  F021         	movff	floorf@u+3,??_floorf+3
  3805   002888  0E20               	movlw	32
  3806   00288A  EF4C  F014         	goto	u3630
  3807   00288E                     u3635:
  3808   00288E  90D8               	bcf	status,0,c
  3809   002890  3221               	rrcf	(??_floorf+3)^0,f,c
  3810   002892  3220               	rrcf	(??_floorf+2)^0,f,c
  3811   002894  321F               	rrcf	(??_floorf+1)^0,f,c
  3812   002896  321E               	rrcf	??_floorf^0,f,c
  3813   002898                     u3630:
  3814   002898  2EE8               	decfsz	wreg,f,c
  3815   00289A  EF47  F014         	goto	u3635
  3816   00289E  501E               	movf	??_floorf^0,w,c
  3817   0028A0  101F               	iorwf	(??_floorf+1)^0,w,c
  3818   0028A2  1020               	iorwf	(??_floorf+2)^0,w,c
  3819   0028A4  1021               	iorwf	(??_floorf+3)^0,w,c
  3820   0028A6  A4D8               	btfss	status,2,c
  3821   0028A8  EF58  F014         	goto	u3641
  3822   0028AC  EF5A  F014         	goto	u3640
  3823   0028B0                     u3641:
  3824   0028B0  EF64  F014         	goto	l3493
  3825   0028B4                     u3640:
  3826   0028B4  0E00               	movlw	0
  3827   0028B6  6E2A               	movwf	floorf@u^0,c
  3828   0028B8  0E00               	movlw	0
  3829   0028BA  6E2B               	movwf	(floorf@u+1)^0,c
  3830   0028BC  0E00               	movlw	0
  3831   0028BE  6E2C               	movwf	(floorf@u+2)^0,c
  3832   0028C0  0E00               	movlw	0
  3833   0028C2  6E2D               	movwf	(floorf@u+3)^0,c
  3834   0028C4  EF80  F014         	goto	l3497
  3835   0028C8                     l3493:
  3836   0028C8  90D8               	bcf	status,0,c
  3837   0028CA  342A               	rlcf	floorf@u^0,w,c
  3838   0028CC  6E1E               	movwf	??_floorf^0,c
  3839   0028CE  342B               	rlcf	(floorf@u+1)^0,w,c
  3840   0028D0  6E1F               	movwf	(??_floorf+1)^0,c
  3841   0028D2  342C               	rlcf	(floorf@u+2)^0,w,c
  3842   0028D4  6E20               	movwf	(??_floorf+2)^0,c
  3843   0028D6  342D               	rlcf	(floorf@u+3)^0,w,c
  3844   0028D8  6E21               	movwf	(??_floorf+3)^0,c
  3845   0028DA  501E               	movf	??_floorf^0,w,c
  3846   0028DC  101F               	iorwf	(??_floorf+1)^0,w,c
  3847   0028DE  1020               	iorwf	(??_floorf+2)^0,w,c
  3848   0028E0  1021               	iorwf	(??_floorf+3)^0,w,c
  3849   0028E2  B4D8               	btfsc	status,2,c
  3850   0028E4  EF76  F014         	goto	u3651
  3851   0028E8  EF78  F014         	goto	u3650
  3852   0028EC                     u3651:
  3853   0028EC  EF80  F014         	goto	l3497
  3854   0028F0                     u3650:
  3855   0028F0  0E00               	movlw	0
  3856   0028F2  6E2A               	movwf	floorf@u^0,c
  3857   0028F4  0E00               	movlw	0
  3858   0028F6  6E2B               	movwf	(floorf@u+1)^0,c
  3859   0028F8  0E80               	movlw	128
  3860   0028FA  6E2C               	movwf	(floorf@u+2)^0,c
  3861   0028FC  0EBF               	movlw	191
  3862   0028FE  6E2D               	movwf	(floorf@u+3)^0,c
  3863   002900                     l3497:
  3864   002900  C02A  F01A         	movff	floorf@u,?_floorf
  3865   002904  C02B  F01B         	movff	floorf@u+1,?_floorf+1
  3866   002908  C02C  F01C         	movff	floorf@u+2,?_floorf+2
  3867   00290C  C02D  F01D         	movff	floorf@u+3,?_floorf+3
  3868   002910                     l1026:
  3869   002910  0012               	return		;funcret
  3870   002912                     __end_of_floorf:
  3871                           	callstack 0
  3872                           
  3873 ;; *************** function ___fpclassifyf *****************
  3874 ;; Defined at:
  3875 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__fpclassifyf.c"
  3876 ;; Parameters:    Size  Location     Type
  3877 ;;  x               4    0[COMRAM] float 
  3878 ;; Auto vars:     Size  Location     Type
  3879 ;;  u               4   10[COMRAM] struct .
  3880 ;;  e               2    8[COMRAM] int 
  3881 ;; Return value:  Size  Location     Type
  3882 ;;                  2    0[COMRAM] int 
  3883 ;; Registers used:
  3884 ;;		wreg, status,2, status,0
  3885 ;; Tracked objects:
  3886 ;;		On entry : 0/0
  3887 ;;		On exit  : 0/0
  3888 ;;		Unchanged: 0/0
  3889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3890 ;;      Params:         4       0       0       0       0       0       0       0       0
  3891 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3892 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3893 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3894 ;;Total ram usage:       14 bytes
  3895 ;; Hardware stack levels used: 1
  3896 ;; This function calls:
  3897 ;;		Nothing
  3898 ;; This function is called by:
  3899 ;;		_efgtoa
  3900 ;; This function uses a non-reentrant model
  3901 ;;
  3902                           
  3903                           	psect	text9
  3904   00326E                     __ptext9:
  3905                           	callstack 0
  3906   00326E                     ___fpclassifyf:
  3907                           	callstack 26
  3908   00326E  C0A6  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  3909   003272  C0A7  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  3910   003276  C0A8  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  3911   00327A  C0A9  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  3912   00327E  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  3913   003282  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  3914   003286  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  3915   00328A  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  3916   00328E  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  3917   003292  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  3918   003296  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  3919   00329A  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  3920   00329E  0E18               	movlw	24
  3921   0032A0  EF57  F019         	goto	u3470
  3922   0032A4                     u3475:
  3923   0032A4  90D8               	bcf	status,0,c
  3924   0032A6  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  3925   0032A8  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  3926   0032AA  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  3927   0032AC  3205               	rrcf	??___fpclassifyf^0,f,c
  3928   0032AE                     u3470:
  3929   0032AE  2EE8               	decfsz	wreg,f,c
  3930   0032B0  EF52  F019         	goto	u3475
  3931   0032B4  5005               	movf	??___fpclassifyf^0,w,c
  3932   0032B6  6E09               	movwf	___fpclassifyf@e^0,c
  3933   0032B8  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  3934   0032BA  5009               	movf	___fpclassifyf@e^0,w,c
  3935   0032BC  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  3936   0032BE  A4D8               	btfss	status,2,c
  3937   0032C0  EF64  F019         	goto	u3481
  3938   0032C4  EF66  F019         	goto	u3480
  3939   0032C8                     u3481:
  3940   0032C8  EF86  F019         	goto	l3455
  3941   0032CC                     u3480:
  3942   0032CC  90D8               	bcf	status,0,c
  3943   0032CE  340B               	rlcf	___fpclassifyf@u^0,w,c
  3944   0032D0  6E05               	movwf	??___fpclassifyf^0,c
  3945   0032D2  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  3946   0032D4  6E06               	movwf	(??___fpclassifyf+1)^0,c
  3947   0032D6  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  3948   0032D8  6E07               	movwf	(??___fpclassifyf+2)^0,c
  3949   0032DA  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  3950   0032DC  6E08               	movwf	(??___fpclassifyf+3)^0,c
  3951   0032DE  5005               	movf	??___fpclassifyf^0,w,c
  3952   0032E0  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  3953   0032E2  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  3954   0032E4  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  3955   0032E6  A4D8               	btfss	status,2,c
  3956   0032E8  EF78  F019         	goto	u3491
  3957   0032EC  EF7A  F019         	goto	u3490
  3958   0032F0                     u3491:
  3959   0032F0  EF80  F019         	goto	l3451
  3960   0032F4                     u3490:
  3961   0032F4  0E00               	movlw	0
  3962   0032F6  6E02               	movwf	(?___fpclassifyf+1)^0,c
  3963   0032F8  0E02               	movlw	2
  3964   0032FA  6E01               	movwf	?___fpclassifyf^0,c
  3965   0032FC  EFB5  F019         	goto	l987
  3966   003300                     l3451:
  3967   003300  0E00               	movlw	0
  3968   003302  6E02               	movwf	(?___fpclassifyf+1)^0,c
  3969   003304  0E03               	movlw	3
  3970   003306  6E01               	movwf	?___fpclassifyf^0,c
  3971   003308  EFB5  F019         	goto	l987
  3972   00330C                     l3455:
  3973   00330C  2809               	incf	___fpclassifyf@e^0,w,c
  3974   00330E  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  3975   003310  A4D8               	btfss	status,2,c
  3976   003312  EF8D  F019         	goto	u3501
  3977   003316  EF8F  F019         	goto	u3500
  3978   00331A                     u3501:
  3979   00331A  EFB1  F019         	goto	l3461
  3980   00331E                     u3500:
  3981   00331E  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  3982   003322  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  3983   003326  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  3984   00332A  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  3985   00332E  0E09               	movlw	9
  3986   003330                     u3515:
  3987   003330  90D8               	bcf	status,0,c
  3988   003332  3605               	rlcf	??___fpclassifyf^0,f,c
  3989   003334  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  3990   003336  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  3991   003338  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  3992   00333A  2EE8               	decfsz	wreg,f,c
  3993   00333C  EF98  F019         	goto	u3515
  3994   003340  5005               	movf	??___fpclassifyf^0,w,c
  3995   003342  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  3996   003344  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  3997   003346  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  3998   003348  B4D8               	btfsc	status,2,c
  3999   00334A  EFA9  F019         	goto	u3521
  4000   00334E  EFAC  F019         	goto	u3520
  4001   003352                     u3521:
  4002   003352  0E01               	movlw	1
  4003   003354  EFAD  F019         	goto	u3530
  4004   003358                     u3520:
  4005   003358  0E00               	movlw	0
  4006   00335A                     u3530:
  4007   00335A  6E01               	movwf	?___fpclassifyf^0,c
  4008   00335C  6A02               	clrf	(?___fpclassifyf+1)^0,c
  4009   00335E  EFB5  F019         	goto	l987
  4010   003362                     l3461:
  4011   003362  0E00               	movlw	0
  4012   003364  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4013   003366  0E04               	movlw	4
  4014   003368  6E01               	movwf	?___fpclassifyf^0,c
  4015   00336A                     l987:
  4016   00336A  0012               	return		;funcret
  4017   00336C                     __end_of___fpclassifyf:
  4018                           	callstack 0
  4019                           
  4020 ;; *************** function ___fltol *****************
  4021 ;; Defined at:
  4022 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  4023 ;; Parameters:    Size  Location     Type
  4024 ;;  f1              4    0[COMRAM] int 
  4025 ;; Auto vars:     Size  Location     Type
  4026 ;;  exp1            1    9[COMRAM] unsigned char 
  4027 ;;  sign1           1    8[COMRAM] unsigned char 
  4028 ;; Return value:  Size  Location     Type
  4029 ;;                  4    0[COMRAM] long 
  4030 ;; Registers used:
  4031 ;;		wreg, status,2, status,0
  4032 ;; Tracked objects:
  4033 ;;		On entry : 0/0
  4034 ;;		On exit  : 0/0
  4035 ;;		Unchanged: 0/0
  4036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4037 ;;      Params:         4       0       0       0       0       0       0       0       0
  4038 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4039 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4040 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4041 ;;Total ram usage:       10 bytes
  4042 ;; Hardware stack levels used: 1
  4043 ;; This function calls:
  4044 ;;		Nothing
  4045 ;; This function is called by:
  4046 ;;		_efgtoa
  4047 ;; This function uses a non-reentrant model
  4048 ;;
  4049                           
  4050                           	psect	text10
  4051   003064                     __ptext10:
  4052                           	callstack 0
  4053   003064                     ___fltol:
  4054                           	callstack 26
  4055   003064  3403               	rlcf	(___fltol@f1+2)^0,w,c
  4056   003066  3404               	rlcf	(___fltol@f1+3)^0,w,c
  4057   003068  6E0A               	movwf	___fltol@exp1^0,c
  4058   00306A  500A               	movf	___fltol@exp1^0,w,c
  4059   00306C  A4D8               	btfss	status,2,c
  4060   00306E  EF3B  F018         	goto	u3351
  4061   003072  EF3D  F018         	goto	u3350
  4062   003076                     u3351:
  4063   003076  EF47  F018         	goto	l3383
  4064   00307A                     u3350:
  4065   00307A                     l3379:
  4066   00307A  0E00               	movlw	0
  4067   00307C  6E01               	movwf	?___fltol^0,c
  4068   00307E  0E00               	movlw	0
  4069   003080  6E02               	movwf	(?___fltol+1)^0,c
  4070   003082  0E00               	movlw	0
  4071   003084  6E03               	movwf	(?___fltol+2)^0,c
  4072   003086  0E00               	movlw	0
  4073   003088  6E04               	movwf	(?___fltol+3)^0,c
  4074   00308A  EFB4  F018         	goto	l422
  4075   00308E                     l3383:
  4076   00308E  C001  F005         	movff	___fltol@f1,??___fltol
  4077   003092  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  4078   003096  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  4079   00309A  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  4080   00309E  0E20               	movlw	32
  4081   0030A0  EF57  F018         	goto	u3360
  4082   0030A4                     u3365:
  4083   0030A4  90D8               	bcf	status,0,c
  4084   0030A6  3208               	rrcf	(??___fltol+3)^0,f,c
  4085   0030A8  3207               	rrcf	(??___fltol+2)^0,f,c
  4086   0030AA  3206               	rrcf	(??___fltol+1)^0,f,c
  4087   0030AC  3205               	rrcf	??___fltol^0,f,c
  4088   0030AE                     u3360:
  4089   0030AE  2EE8               	decfsz	wreg,f,c
  4090   0030B0  EF52  F018         	goto	u3365
  4091   0030B4  5005               	movf	??___fltol^0,w,c
  4092   0030B6  6E09               	movwf	___fltol@sign1^0,c
  4093   0030B8  8E03               	bsf	(___fltol@f1+2)^0,7,c
  4094   0030BA  0EFF               	movlw	255
  4095   0030BC  1601               	andwf	___fltol@f1^0,f,c
  4096   0030BE  0EFF               	movlw	255
  4097   0030C0  1602               	andwf	(___fltol@f1+1)^0,f,c
  4098   0030C2  0EFF               	movlw	255
  4099   0030C4  1603               	andwf	(___fltol@f1+2)^0,f,c
  4100   0030C6  0E00               	movlw	0
  4101   0030C8  1604               	andwf	(___fltol@f1+3)^0,f,c
  4102   0030CA  0E96               	movlw	150
  4103   0030CC  5E0A               	subwf	___fltol@exp1^0,f,c
  4104   0030CE  BE0A               	btfsc	___fltol@exp1^0,7,c
  4105   0030D0  EF6E  F018         	goto	u3370
  4106   0030D4  EF6C  F018         	goto	u3371
  4107   0030D8                     u3371:
  4108   0030D8  EF84  F018         	goto	l3403
  4109   0030DC                     u3370:
  4110   0030DC  500A               	movf	___fltol@exp1^0,w,c
  4111   0030DE  0A80               	xorlw	128
  4112   0030E0  0F97               	addlw	151
  4113   0030E2  B0D8               	btfsc	status,0,c
  4114   0030E4  EF76  F018         	goto	u3381
  4115   0030E8  EF78  F018         	goto	u3380
  4116   0030EC                     u3381:
  4117   0030EC  EF7A  F018         	goto	l3399
  4118   0030F0                     u3380:
  4119   0030F0  EF3D  F018         	goto	l3379
  4120   0030F4                     l3399:
  4121   0030F4  90D8               	bcf	status,0,c
  4122   0030F6  3204               	rrcf	(___fltol@f1+3)^0,f,c
  4123   0030F8  3203               	rrcf	(___fltol@f1+2)^0,f,c
  4124   0030FA  3202               	rrcf	(___fltol@f1+1)^0,f,c
  4125   0030FC  3201               	rrcf	___fltol@f1^0,f,c
  4126   0030FE  3E0A               	incfsz	___fltol@exp1^0,f,c
  4127   003100  EF7A  F018         	goto	l3399
  4128   003104  EF9C  F018         	goto	l3413
  4129   003108                     l3403:
  4130   003108  0E1F               	movlw	31
  4131   00310A  640A               	cpfsgt	___fltol@exp1^0,c
  4132   00310C  EF8A  F018         	goto	u3391
  4133   003110  EF8C  F018         	goto	u3390
  4134   003114                     u3391:
  4135   003114  EF94  F018         	goto	l3411
  4136   003118                     u3390:
  4137   003118  EF3D  F018         	goto	l3379
  4138   00311C                     l3409:
  4139   00311C  90D8               	bcf	status,0,c
  4140   00311E  3601               	rlcf	___fltol@f1^0,f,c
  4141   003120  3602               	rlcf	(___fltol@f1+1)^0,f,c
  4142   003122  3603               	rlcf	(___fltol@f1+2)^0,f,c
  4143   003124  3604               	rlcf	(___fltol@f1+3)^0,f,c
  4144   003126  060A               	decf	___fltol@exp1^0,f,c
  4145   003128                     l3411:
  4146   003128  500A               	movf	___fltol@exp1^0,w,c
  4147   00312A  A4D8               	btfss	status,2,c
  4148   00312C  EF9A  F018         	goto	u3401
  4149   003130  EF9C  F018         	goto	u3400
  4150   003134                     u3401:
  4151   003134  EF8E  F018         	goto	l3409
  4152   003138                     u3400:
  4153   003138                     l3413:
  4154   003138  5009               	movf	___fltol@sign1^0,w,c
  4155   00313A  B4D8               	btfsc	status,2,c
  4156   00313C  EFA2  F018         	goto	u3411
  4157   003140  EFA4  F018         	goto	u3410
  4158   003144                     u3411:
  4159   003144  EFAC  F018         	goto	l3417
  4160   003148                     u3410:
  4161   003148  1E04               	comf	(___fltol@f1+3)^0,f,c
  4162   00314A  1E03               	comf	(___fltol@f1+2)^0,f,c
  4163   00314C  1E02               	comf	(___fltol@f1+1)^0,f,c
  4164   00314E  6C01               	negf	___fltol@f1^0,c
  4165   003150  0E00               	movlw	0
  4166   003152  2202               	addwfc	(___fltol@f1+1)^0,f,c
  4167   003154  2203               	addwfc	(___fltol@f1+2)^0,f,c
  4168   003156  2204               	addwfc	(___fltol@f1+3)^0,f,c
  4169   003158                     l3417:
  4170   003158  C001  F001         	movff	___fltol@f1,?___fltol
  4171   00315C  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  4172   003160  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  4173   003164  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  4174   003168                     l422:
  4175   003168  0012               	return		;funcret
  4176   00316A                     __end_of___fltol:
  4177                           	callstack 0
  4178                           
  4179 ;; *************** function ___flsub *****************
  4180 ;; Defined at:
  4181 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  4182 ;; Parameters:    Size  Location     Type
  4183 ;;  b               4   39[COMRAM] long 
  4184 ;;  a               4   43[COMRAM] long 
  4185 ;; Auto vars:     Size  Location     Type
  4186 ;;		None
  4187 ;; Return value:  Size  Location     Type
  4188 ;;                  4   39[COMRAM] long 
  4189 ;; Registers used:
  4190 ;;		wreg, status,2, status,0, cstack
  4191 ;; Tracked objects:
  4192 ;;		On entry : 0/0
  4193 ;;		On exit  : 0/0
  4194 ;;		Unchanged: 0/0
  4195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4196 ;;      Params:         8       0       0       0       0       0       0       0       0
  4197 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4198 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4199 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4200 ;;Total ram usage:        8 bytes
  4201 ;; Hardware stack levels used: 1
  4202 ;; Hardware stack levels required when called: 1
  4203 ;; This function calls:
  4204 ;;		___fladd
  4205 ;; This function is called by:
  4206 ;;		_efgtoa
  4207 ;; This function uses a non-reentrant model
  4208 ;;
  4209                           
  4210                           	psect	text11
  4211   00381A                     __ptext11:
  4212                           	callstack 0
  4213   00381A                     ___flsub:
  4214                           	callstack 25
  4215   00381A  0E00               	movlw	0
  4216   00381C  1A2C               	xorwf	___flsub@a^0,f,c
  4217   00381E  0E00               	movlw	0
  4218   003820  1A2D               	xorwf	(___flsub@a+1)^0,f,c
  4219   003822  0E00               	movlw	0
  4220   003824  1A2E               	xorwf	(___flsub@a+2)^0,f,c
  4221   003826  0E80               	movlw	128
  4222   003828  1A2F               	xorwf	(___flsub@a+3)^0,f,c
  4223   00382A  C028  F001         	movff	___flsub@b,___fladd@b
  4224   00382E  C029  F002         	movff	___flsub@b+1,___fladd@b+1
  4225   003832  C02A  F003         	movff	___flsub@b+2,___fladd@b+2
  4226   003836  C02B  F004         	movff	___flsub@b+3,___fladd@b+3
  4227   00383A  C02C  F005         	movff	___flsub@a,___fladd@a
  4228   00383E  C02D  F006         	movff	___flsub@a+1,___fladd@a+1
  4229   003842  C02E  F007         	movff	___flsub@a+2,___fladd@a+2
  4230   003846  C02F  F008         	movff	___flsub@a+3,___fladd@a+3
  4231   00384A  ECE3  F00B         	call	___fladd	;wreg free
  4232   00384E  C001  F028         	movff	?___fladd,?___flsub
  4233   003852  C002  F029         	movff	?___fladd+1,?___flsub+1
  4234   003856  C003  F02A         	movff	?___fladd+2,?___flsub+2
  4235   00385A  C004  F02B         	movff	?___fladd+3,?___flsub+3
  4236   00385E  0012               	return		;funcret
  4237   003860                     __end_of___flsub:
  4238                           	callstack 0
  4239                           
  4240 ;; *************** function ___fladd *****************
  4241 ;; Defined at:
  4242 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  4243 ;; Parameters:    Size  Location     Type
  4244 ;;  b               4    0[COMRAM] long 
  4245 ;;  a               4    4[COMRAM] long 
  4246 ;; Auto vars:     Size  Location     Type
  4247 ;;  grs             1   15[COMRAM] unsigned char 
  4248 ;;  bexp            1   14[COMRAM] unsigned char 
  4249 ;;  aexp            1   13[COMRAM] unsigned char 
  4250 ;;  signs           1   12[COMRAM] unsigned char 
  4251 ;; Return value:  Size  Location     Type
  4252 ;;                  4    0[COMRAM] unsigned char 
  4253 ;; Registers used:
  4254 ;;		wreg, status,2, status,0
  4255 ;; Tracked objects:
  4256 ;;		On entry : 0/0
  4257 ;;		On exit  : 0/0
  4258 ;;		Unchanged: 0/0
  4259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4260 ;;      Params:         8       0       0       0       0       0       0       0       0
  4261 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4262 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4263 ;;      Totals:        16       0       0       0       0       0       0       0       0
  4264 ;;Total ram usage:       16 bytes
  4265 ;; Hardware stack levels used: 1
  4266 ;; This function calls:
  4267 ;;		Nothing
  4268 ;; This function is called by:
  4269 ;;		___flsub
  4270 ;;		_efgtoa
  4271 ;; This function uses a non-reentrant model
  4272 ;;
  4273                           
  4274                           	psect	text12
  4275   0017C6                     __ptext12:
  4276                           	callstack 0
  4277   0017C6                     ___fladd:
  4278                           	callstack 25
  4279   0017C6  5004               	movf	(___fladd@b+3)^0,w,c
  4280   0017C8  0B80               	andlw	128
  4281   0017CA  6E0D               	movwf	___fladd@signs^0,c
  4282   0017CC  5004               	movf	(___fladd@b+3)^0,w,c
  4283   0017CE  2404               	addwf	(___fladd@b+3)^0,w,c
  4284   0017D0  6E0F               	movwf	___fladd@bexp^0,c
  4285   0017D2  AE03               	btfss	(___fladd@b+2)^0,7,c
  4286   0017D4  EFEE  F00B         	goto	u2311
  4287   0017D8  EFF0  F00B         	goto	u2310
  4288   0017DC                     u2311:
  4289   0017DC  EFF1  F00B         	goto	l2767
  4290   0017E0                     u2310:
  4291   0017E0  800F               	bsf	___fladd@bexp^0,0,c
  4292   0017E2                     l2767:
  4293   0017E2  500F               	movf	___fladd@bexp^0,w,c
  4294   0017E4  B4D8               	btfsc	status,2,c
  4295   0017E6  EFF7  F00B         	goto	u2321
  4296   0017EA  EFF9  F00B         	goto	u2320
  4297   0017EE                     u2321:
  4298   0017EE  EF0E  F00C         	goto	l2777
  4299   0017F2                     u2320:
  4300   0017F2  280F               	incf	___fladd@bexp^0,w,c
  4301   0017F4  A4D8               	btfss	status,2,c
  4302   0017F6  EFFF  F00B         	goto	u2331
  4303   0017FA  EF01  F00C         	goto	u2330
  4304   0017FE                     u2331:
  4305   0017FE  EF09  F00C         	goto	l2773
  4306   001802                     u2330:
  4307   001802  0E00               	movlw	0
  4308   001804  6E01               	movwf	___fladd@b^0,c
  4309   001806  0E00               	movlw	0
  4310   001808  6E02               	movwf	(___fladd@b+1)^0,c
  4311   00180A  0E00               	movlw	0
  4312   00180C  6E03               	movwf	(___fladd@b+2)^0,c
  4313   00180E  0E00               	movlw	0
  4314   001810  6E04               	movwf	(___fladd@b+3)^0,c
  4315   001812                     l2773:
  4316   001812  8E03               	bsf	(___fladd@b+2)^0,7,c
  4317   001814  0E00               	movlw	0
  4318   001816  6E04               	movwf	(___fladd@b+3)^0,c
  4319   001818  EF16  F00C         	goto	l2779
  4320   00181C                     l2777:
  4321   00181C  0E00               	movlw	0
  4322   00181E  6E01               	movwf	___fladd@b^0,c
  4323   001820  0E00               	movlw	0
  4324   001822  6E02               	movwf	(___fladd@b+1)^0,c
  4325   001824  0E00               	movlw	0
  4326   001826  6E03               	movwf	(___fladd@b+2)^0,c
  4327   001828  0E00               	movlw	0
  4328   00182A  6E04               	movwf	(___fladd@b+3)^0,c
  4329   00182C                     l2779:
  4330   00182C  5008               	movf	(___fladd@a+3)^0,w,c
  4331   00182E  0B80               	andlw	128
  4332   001830  6E0E               	movwf	___fladd@aexp^0,c
  4333   001832  500D               	movf	___fladd@signs^0,w,c
  4334   001834  180E               	xorwf	___fladd@aexp^0,w,c
  4335   001836  B4D8               	btfsc	status,2,c
  4336   001838  EF20  F00C         	goto	u2341
  4337   00183C  EF22  F00C         	goto	u2340
  4338   001840                     u2341:
  4339   001840  EF23  F00C         	goto	l2785
  4340   001844                     u2340:
  4341   001844  8C0D               	bsf	___fladd@signs^0,6,c
  4342   001846                     l2785:
  4343   001846  5008               	movf	(___fladd@a+3)^0,w,c
  4344   001848  2408               	addwf	(___fladd@a+3)^0,w,c
  4345   00184A  6E0E               	movwf	___fladd@aexp^0,c
  4346   00184C  AE07               	btfss	(___fladd@a+2)^0,7,c
  4347   00184E  EF2B  F00C         	goto	u2351
  4348   001852  EF2D  F00C         	goto	u2350
  4349   001856                     u2351:
  4350   001856  EF2E  F00C         	goto	l2791
  4351   00185A                     u2350:
  4352   00185A  800E               	bsf	___fladd@aexp^0,0,c
  4353   00185C                     l2791:
  4354   00185C  500E               	movf	___fladd@aexp^0,w,c
  4355   00185E  B4D8               	btfsc	status,2,c
  4356   001860  EF34  F00C         	goto	u2361
  4357   001864  EF36  F00C         	goto	u2360
  4358   001868                     u2361:
  4359   001868  EF4B  F00C         	goto	l2801
  4360   00186C                     u2360:
  4361   00186C  280E               	incf	___fladd@aexp^0,w,c
  4362   00186E  A4D8               	btfss	status,2,c
  4363   001870  EF3C  F00C         	goto	u2371
  4364   001874  EF3E  F00C         	goto	u2370
  4365   001878                     u2371:
  4366   001878  EF46  F00C         	goto	l2797
  4367   00187C                     u2370:
  4368   00187C  0E00               	movlw	0
  4369   00187E  6E05               	movwf	___fladd@a^0,c
  4370   001880  0E00               	movlw	0
  4371   001882  6E06               	movwf	(___fladd@a+1)^0,c
  4372   001884  0E00               	movlw	0
  4373   001886  6E07               	movwf	(___fladd@a+2)^0,c
  4374   001888  0E00               	movlw	0
  4375   00188A  6E08               	movwf	(___fladd@a+3)^0,c
  4376   00188C                     l2797:
  4377   00188C  8E07               	bsf	(___fladd@a+2)^0,7,c
  4378   00188E  0E00               	movlw	0
  4379   001890  6E08               	movwf	(___fladd@a+3)^0,c
  4380   001892  EF53  F00C         	goto	l2803
  4381   001896                     l2801:
  4382   001896  0E00               	movlw	0
  4383   001898  6E05               	movwf	___fladd@a^0,c
  4384   00189A  0E00               	movlw	0
  4385   00189C  6E06               	movwf	(___fladd@a+1)^0,c
  4386   00189E  0E00               	movlw	0
  4387   0018A0  6E07               	movwf	(___fladd@a+2)^0,c
  4388   0018A2  0E00               	movlw	0
  4389   0018A4  6E08               	movwf	(___fladd@a+3)^0,c
  4390   0018A6                     l2803:
  4391   0018A6  500F               	movf	___fladd@bexp^0,w,c
  4392   0018A8  5C0E               	subwf	___fladd@aexp^0,w,c
  4393   0018AA  B0D8               	btfsc	status,0,c
  4394   0018AC  EF5A  F00C         	goto	u2381
  4395   0018B0  EF5C  F00C         	goto	u2380
  4396   0018B4                     u2381:
  4397   0018B4  EF83  F00C         	goto	l2839
  4398   0018B8                     u2380:
  4399   0018B8  AC0D               	btfss	___fladd@signs^0,6,c
  4400   0018BA  EF61  F00C         	goto	u2391
  4401   0018BE  EF63  F00C         	goto	u2390
  4402   0018C2                     u2391:
  4403   0018C2  EF65  F00C         	goto	l2809
  4404   0018C6                     u2390:
  4405   0018C6  0E80               	movlw	128
  4406   0018C8  1A0D               	xorwf	___fladd@signs^0,f,c
  4407   0018CA                     l2809:
  4408   0018CA  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  4409   0018CE  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  4410   0018D2  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  4411   0018D6  C001  F010         	movff	___fladd@b,___fladd@grs
  4412   0018DA  C005  F001         	movff	___fladd@a,___fladd@b
  4413   0018DE  C010  F005         	movff	___fladd@grs,___fladd@a
  4414   0018E2  C002  F010         	movff	___fladd@b+1,___fladd@grs
  4415   0018E6  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  4416   0018EA  C010  F006         	movff	___fladd@grs,___fladd@a+1
  4417   0018EE  C003  F010         	movff	___fladd@b+2,___fladd@grs
  4418   0018F2  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  4419   0018F6  C010  F007         	movff	___fladd@grs,___fladd@a+2
  4420   0018FA  C004  F010         	movff	___fladd@b+3,___fladd@grs
  4421   0018FE  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  4422   001902  C010  F008         	movff	___fladd@grs,___fladd@a+3
  4423   001906                     l2839:
  4424   001906  0E00               	movlw	0
  4425   001908  6E10               	movwf	___fladd@grs^0,c
  4426   00190A  500F               	movf	___fladd@bexp^0,w,c
  4427   00190C  C00E  F009         	movff	___fladd@aexp,??___fladd
  4428   001910  6A0A               	clrf	(??___fladd+1)^0,c
  4429   001912  5E09               	subwf	??___fladd^0,f,c
  4430   001914  0E00               	movlw	0
  4431   001916  5A0A               	subwfb	(??___fladd+1)^0,f,c
  4432   001918  BE0A               	btfsc	(??___fladd+1)^0,7,c
  4433   00191A  EF98  F00C         	goto	u2401
  4434   00191E  500A               	movf	(??___fladd+1)^0,w,c
  4435   001920  E109               	bnz	u2400
  4436   001922  0E1A               	movlw	26
  4437   001924  5C09               	subwf	??___fladd^0,w,c
  4438   001926  A0D8               	btfss	status,0,c
  4439   001928  EF98  F00C         	goto	u2401
  4440   00192C  EF9A  F00C         	goto	u2400
  4441   001930                     u2401:
  4442   001930  EFD1  F00C         	goto	l654
  4443   001934                     u2400:
  4444   001934  5001               	movf	___fladd@b^0,w,c
  4445   001936  1002               	iorwf	(___fladd@b+1)^0,w,c
  4446   001938  1003               	iorwf	(___fladd@b+2)^0,w,c
  4447   00193A  1004               	iorwf	(___fladd@b+3)^0,w,c
  4448   00193C  A4D8               	btfss	status,2,c
  4449   00193E  EFA3  F00C         	goto	u2411
  4450   001942  EFA6  F00C         	goto	u2410
  4451   001946                     u2411:
  4452   001946  0E01               	movlw	1
  4453   001948  EFA7  F00C         	goto	u2420
  4454   00194C                     u2410:
  4455   00194C  0E00               	movlw	0
  4456   00194E                     u2420:
  4457   00194E  6E10               	movwf	___fladd@grs^0,c
  4458   001950  0E00               	movlw	0
  4459   001952  6E01               	movwf	___fladd@b^0,c
  4460   001954  0E00               	movlw	0
  4461   001956  6E02               	movwf	(___fladd@b+1)^0,c
  4462   001958  0E00               	movlw	0
  4463   00195A  6E03               	movwf	(___fladd@b+2)^0,c
  4464   00195C  0E00               	movlw	0
  4465   00195E  6E04               	movwf	(___fladd@b+3)^0,c
  4466   001960  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  4467   001964  EFDA  F00C         	goto	l653
  4468   001968                     l655:
  4469   001968  A010               	btfss	___fladd@grs^0,0,c
  4470   00196A  EFB9  F00C         	goto	u2431
  4471   00196E  EFBB  F00C         	goto	u2430
  4472   001972                     u2431:
  4473   001972  EFC1  F00C         	goto	l2851
  4474   001976                     u2430:
  4475   001976  90D8               	bcf	status,0,c
  4476   001978  3010               	rrcf	___fladd@grs^0,w,c
  4477   00197A  0901               	iorlw	1
  4478   00197C  6E10               	movwf	___fladd@grs^0,c
  4479   00197E  EFC3  F00C         	goto	l2853
  4480   001982                     l2851:
  4481   001982  90D8               	bcf	status,0,c
  4482   001984  3210               	rrcf	___fladd@grs^0,f,c
  4483   001986                     l2853:
  4484   001986  A001               	btfss	___fladd@b^0,0,c
  4485   001988  EFC8  F00C         	goto	u2441
  4486   00198C  EFCA  F00C         	goto	u2440
  4487   001990                     u2441:
  4488   001990  EFCB  F00C         	goto	l2857
  4489   001994                     u2440:
  4490   001994  8E10               	bsf	___fladd@grs^0,7,c
  4491   001996                     l2857:
  4492   001996  3404               	rlcf	(___fladd@b+3)^0,w,c
  4493   001998  3204               	rrcf	(___fladd@b+3)^0,f,c
  4494   00199A  3203               	rrcf	(___fladd@b+2)^0,f,c
  4495   00199C  3202               	rrcf	(___fladd@b+1)^0,f,c
  4496   00199E  3201               	rrcf	___fladd@b^0,f,c
  4497   0019A0  2A0F               	incf	___fladd@bexp^0,f,c
  4498   0019A2                     l654:
  4499   0019A2  500E               	movf	___fladd@aexp^0,w,c
  4500   0019A4  5C0F               	subwf	___fladd@bexp^0,w,c
  4501   0019A6  A0D8               	btfss	status,0,c
  4502   0019A8  EFD8  F00C         	goto	u2451
  4503   0019AC  EFDA  F00C         	goto	u2450
  4504   0019B0                     u2451:
  4505   0019B0  EFB4  F00C         	goto	l655
  4506   0019B4                     u2450:
  4507   0019B4                     l653:
  4508   0019B4  BC0D               	btfsc	___fladd@signs^0,6,c
  4509   0019B6  EFDF  F00C         	goto	u2461
  4510   0019BA  EFE1  F00C         	goto	u2460
  4511   0019BE                     u2461:
  4512   0019BE  EF21  F00D         	goto	l2885
  4513   0019C2                     u2460:
  4514   0019C2  500F               	movf	___fladd@bexp^0,w,c
  4515   0019C4  A4D8               	btfss	status,2,c
  4516   0019C6  EFE7  F00C         	goto	u2471
  4517   0019CA  EFE9  F00C         	goto	u2470
  4518   0019CE                     u2471:
  4519   0019CE  EFF3  F00C         	goto	l2867
  4520   0019D2                     u2470:
  4521   0019D2  0E00               	movlw	0
  4522   0019D4  6E01               	movwf	?___fladd^0,c
  4523   0019D6  0E00               	movlw	0
  4524   0019D8  6E02               	movwf	(?___fladd+1)^0,c
  4525   0019DA  0E00               	movlw	0
  4526   0019DC  6E03               	movwf	(?___fladd+2)^0,c
  4527   0019DE  0E00               	movlw	0
  4528   0019E0  6E04               	movwf	(?___fladd+3)^0,c
  4529   0019E2  EF42  F00E         	goto	l662
  4530   0019E6                     l2867:
  4531   0019E6  5005               	movf	___fladd@a^0,w,c
  4532   0019E8  2601               	addwf	___fladd@b^0,f,c
  4533   0019EA  5006               	movf	(___fladd@a+1)^0,w,c
  4534   0019EC  2202               	addwfc	(___fladd@b+1)^0,f,c
  4535   0019EE  5007               	movf	(___fladd@a+2)^0,w,c
  4536   0019F0  2203               	addwfc	(___fladd@b+2)^0,f,c
  4537   0019F2  5008               	movf	(___fladd@a+3)^0,w,c
  4538   0019F4  2204               	addwfc	(___fladd@b+3)^0,f,c
  4539   0019F6  A004               	btfss	(___fladd@b+3)^0,0,c
  4540   0019F8  EF00  F00D         	goto	u2481
  4541   0019FC  EF02  F00D         	goto	u2480
  4542   001A00                     u2481:
  4543   001A00  EFAE  F00D         	goto	l2921
  4544   001A04                     u2480:
  4545   001A04  A010               	btfss	___fladd@grs^0,0,c
  4546   001A06  EF07  F00D         	goto	u2491
  4547   001A0A  EF09  F00D         	goto	u2490
  4548   001A0E                     u2491:
  4549   001A0E  EF0F  F00D         	goto	l2875
  4550   001A12                     u2490:
  4551   001A12  90D8               	bcf	status,0,c
  4552   001A14  3010               	rrcf	___fladd@grs^0,w,c
  4553   001A16  0901               	iorlw	1
  4554   001A18  6E10               	movwf	___fladd@grs^0,c
  4555   001A1A  EF11  F00D         	goto	l2877
  4556   001A1E                     l2875:
  4557   001A1E  90D8               	bcf	status,0,c
  4558   001A20  3210               	rrcf	___fladd@grs^0,f,c
  4559   001A22                     l2877:
  4560   001A22  A001               	btfss	___fladd@b^0,0,c
  4561   001A24  EF16  F00D         	goto	u2501
  4562   001A28  EF18  F00D         	goto	u2500
  4563   001A2C                     u2501:
  4564   001A2C  EF19  F00D         	goto	l2881
  4565   001A30                     u2500:
  4566   001A30  8E10               	bsf	___fladd@grs^0,7,c
  4567   001A32                     l2881:
  4568   001A32  3404               	rlcf	(___fladd@b+3)^0,w,c
  4569   001A34  3204               	rrcf	(___fladd@b+3)^0,f,c
  4570   001A36  3203               	rrcf	(___fladd@b+2)^0,f,c
  4571   001A38  3202               	rrcf	(___fladd@b+1)^0,f,c
  4572   001A3A  3201               	rrcf	___fladd@b^0,f,c
  4573   001A3C  2A0F               	incf	___fladd@bexp^0,f,c
  4574   001A3E  EFAE  F00D         	goto	l2921
  4575   001A42                     l2885:
  4576   001A42  5005               	movf	___fladd@a^0,w,c
  4577   001A44  5C01               	subwf	___fladd@b^0,w,c
  4578   001A46  5006               	movf	(___fladd@a+1)^0,w,c
  4579   001A48  5802               	subwfb	(___fladd@b+1)^0,w,c
  4580   001A4A  5007               	movf	(___fladd@a+2)^0,w,c
  4581   001A4C  5803               	subwfb	(___fladd@b+2)^0,w,c
  4582   001A4E  5004               	movf	(___fladd@b+3)^0,w,c
  4583   001A50  0A80               	xorlw	128
  4584   001A52  6E09               	movwf	??___fladd^0,c
  4585   001A54  5008               	movf	(___fladd@a+3)^0,w,c
  4586   001A56  0A80               	xorlw	128
  4587   001A58  5809               	subwfb	??___fladd^0,w,c
  4588   001A5A  B0D8               	btfsc	status,0,c
  4589   001A5C  EF32  F00D         	goto	u2511
  4590   001A60  EF34  F00D         	goto	u2510
  4591   001A64                     u2511:
  4592   001A64  EF5F  F00D         	goto	l2895
  4593   001A68                     u2510:
  4594   001A68  5001               	movf	___fladd@b^0,w,c
  4595   001A6A  5C05               	subwf	___fladd@a^0,w,c
  4596   001A6C  6E09               	movwf	??___fladd^0,c
  4597   001A6E  5002               	movf	(___fladd@b+1)^0,w,c
  4598   001A70  5806               	subwfb	(___fladd@a+1)^0,w,c
  4599   001A72  6E0A               	movwf	(??___fladd+1)^0,c
  4600   001A74  5003               	movf	(___fladd@b+2)^0,w,c
  4601   001A76  5807               	subwfb	(___fladd@a+2)^0,w,c
  4602   001A78  6E0B               	movwf	(??___fladd+2)^0,c
  4603   001A7A  5004               	movf	(___fladd@b+3)^0,w,c
  4604   001A7C  5808               	subwfb	(___fladd@a+3)^0,w,c
  4605   001A7E  6E0C               	movwf	(??___fladd+3)^0,c
  4606   001A80  0EFF               	movlw	255
  4607   001A82  2409               	addwf	??___fladd^0,w,c
  4608   001A84  6E01               	movwf	___fladd@b^0,c
  4609   001A86  0EFF               	movlw	255
  4610   001A88  200A               	addwfc	(??___fladd+1)^0,w,c
  4611   001A8A  6E02               	movwf	(___fladd@b+1)^0,c
  4612   001A8C  0EFF               	movlw	255
  4613   001A8E  200B               	addwfc	(??___fladd+2)^0,w,c
  4614   001A90  6E03               	movwf	(___fladd@b+2)^0,c
  4615   001A92  0EFF               	movlw	255
  4616   001A94  200C               	addwfc	(??___fladd+3)^0,w,c
  4617   001A96  6E04               	movwf	(___fladd@b+3)^0,c
  4618   001A98  0E80               	movlw	128
  4619   001A9A  1A0D               	xorwf	___fladd@signs^0,f,c
  4620   001A9C  6C10               	negf	___fladd@grs^0,c
  4621   001A9E  5010               	movf	___fladd@grs^0,w,c
  4622   001AA0  A4D8               	btfss	status,2,c
  4623   001AA2  EF55  F00D         	goto	u2521
  4624   001AA6  EF57  F00D         	goto	u2520
  4625   001AAA                     u2521:
  4626   001AAA  EF67  F00D         	goto	l670
  4627   001AAE                     u2520:
  4628   001AAE  0E01               	movlw	1
  4629   001AB0  2601               	addwf	___fladd@b^0,f,c
  4630   001AB2  0E00               	movlw	0
  4631   001AB4  2202               	addwfc	(___fladd@b+1)^0,f,c
  4632   001AB6  2203               	addwfc	(___fladd@b+2)^0,f,c
  4633   001AB8  2204               	addwfc	(___fladd@b+3)^0,f,c
  4634   001ABA  EF67  F00D         	goto	l670
  4635   001ABE                     l2895:
  4636   001ABE  5005               	movf	___fladd@a^0,w,c
  4637   001AC0  5E01               	subwf	___fladd@b^0,f,c
  4638   001AC2  5006               	movf	(___fladd@a+1)^0,w,c
  4639   001AC4  5A02               	subwfb	(___fladd@b+1)^0,f,c
  4640   001AC6  5007               	movf	(___fladd@a+2)^0,w,c
  4641   001AC8  5A03               	subwfb	(___fladd@b+2)^0,f,c
  4642   001ACA  5008               	movf	(___fladd@a+3)^0,w,c
  4643   001ACC  5A04               	subwfb	(___fladd@b+3)^0,f,c
  4644   001ACE                     l670:
  4645   001ACE  5001               	movf	___fladd@b^0,w,c
  4646   001AD0  1002               	iorwf	(___fladd@b+1)^0,w,c
  4647   001AD2  1003               	iorwf	(___fladd@b+2)^0,w,c
  4648   001AD4  1004               	iorwf	(___fladd@b+3)^0,w,c
  4649   001AD6  A4D8               	btfss	status,2,c
  4650   001AD8  EF70  F00D         	goto	u2531
  4651   001ADC  EF72  F00D         	goto	u2530
  4652   001AE0                     u2531:
  4653   001AE0  EFA7  F00D         	goto	l2919
  4654   001AE4                     u2530:
  4655   001AE4  5010               	movf	___fladd@grs^0,w,c
  4656   001AE6  A4D8               	btfss	status,2,c
  4657   001AE8  EF78  F00D         	goto	u2541
  4658   001AEC  EF7A  F00D         	goto	u2540
  4659   001AF0                     u2541:
  4660   001AF0  EFA7  F00D         	goto	l2919
  4661   001AF4                     u2540:
  4662   001AF4  0E00               	movlw	0
  4663   001AF6  6E01               	movwf	?___fladd^0,c
  4664   001AF8  0E00               	movlw	0
  4665   001AFA  6E02               	movwf	(?___fladd+1)^0,c
  4666   001AFC  0E00               	movlw	0
  4667   001AFE  6E03               	movwf	(?___fladd+2)^0,c
  4668   001B00  0E00               	movlw	0
  4669   001B02  6E04               	movwf	(?___fladd+3)^0,c
  4670   001B04  EF42  F00E         	goto	l662
  4671   001B08                     l2903:
  4672   001B08  90D8               	bcf	status,0,c
  4673   001B0A  3601               	rlcf	___fladd@b^0,f,c
  4674   001B0C  3602               	rlcf	(___fladd@b+1)^0,f,c
  4675   001B0E  3603               	rlcf	(___fladd@b+2)^0,f,c
  4676   001B10  3604               	rlcf	(___fladd@b+3)^0,f,c
  4677   001B12  AE10               	btfss	___fladd@grs^0,7,c
  4678   001B14  EF8E  F00D         	goto	u2551
  4679   001B18  EF90  F00D         	goto	u2550
  4680   001B1C                     u2551:
  4681   001B1C  EF91  F00D         	goto	l2909
  4682   001B20                     u2550:
  4683   001B20  8001               	bsf	___fladd@b^0,0,c
  4684   001B22                     l2909:
  4685   001B22  A010               	btfss	___fladd@grs^0,0,c
  4686   001B24  EF96  F00D         	goto	u2561
  4687   001B28  EF98  F00D         	goto	u2560
  4688   001B2C                     u2561:
  4689   001B2C  EF9C  F00D         	goto	l2913
  4690   001B30                     u2560:
  4691   001B30  80D8               	bsf	status,0,c
  4692   001B32  3610               	rlcf	___fladd@grs^0,f,c
  4693   001B34  EF9E  F00D         	goto	l2915
  4694   001B38                     l2913:
  4695   001B38  90D8               	bcf	status,0,c
  4696   001B3A  3610               	rlcf	___fladd@grs^0,f,c
  4697   001B3C                     l2915:
  4698   001B3C  500F               	movf	___fladd@bexp^0,w,c
  4699   001B3E  B4D8               	btfsc	status,2,c
  4700   001B40  EFA4  F00D         	goto	u2571
  4701   001B44  EFA6  F00D         	goto	u2570
  4702   001B48                     u2571:
  4703   001B48  EFA7  F00D         	goto	l2919
  4704   001B4C                     u2570:
  4705   001B4C  060F               	decf	___fladd@bexp^0,f,c
  4706   001B4E                     l2919:
  4707   001B4E  AE03               	btfss	(___fladd@b+2)^0,7,c
  4708   001B50  EFAC  F00D         	goto	u2581
  4709   001B54  EFAE  F00D         	goto	u2580
  4710   001B58                     u2581:
  4711   001B58  EF84  F00D         	goto	l2903
  4712   001B5C                     u2580:
  4713   001B5C                     l2921:
  4714   001B5C  0E00               	movlw	0
  4715   001B5E  6E0E               	movwf	___fladd@aexp^0,c
  4716   001B60  AE10               	btfss	___fladd@grs^0,7,c
  4717   001B62  EFB5  F00D         	goto	u2591
  4718   001B66  EFB7  F00D         	goto	u2590
  4719   001B6A                     u2591:
  4720   001B6A  EFCF  F00D         	goto	l679
  4721   001B6E                     u2590:
  4722   001B6E  C010  F009         	movff	___fladd@grs,??___fladd
  4723   001B72  0E7F               	movlw	127
  4724   001B74  1609               	andwf	??___fladd^0,f,c
  4725   001B76  B4D8               	btfsc	status,2,c
  4726   001B78  EFC0  F00D         	goto	u2601
  4727   001B7C  EFC2  F00D         	goto	u2600
  4728   001B80                     u2601:
  4729   001B80  EFC6  F00D         	goto	l680
  4730   001B84                     u2600:
  4731   001B84                     l2927:
  4732   001B84  0E01               	movlw	1
  4733   001B86  6E0E               	movwf	___fladd@aexp^0,c
  4734   001B88  EFCF  F00D         	goto	l679
  4735   001B8C                     l680:
  4736   001B8C  A001               	btfss	___fladd@b^0,0,c
  4737   001B8E  EFCB  F00D         	goto	u2611
  4738   001B92  EFCD  F00D         	goto	u2610
  4739   001B96                     u2611:
  4740   001B96  EFCF  F00D         	goto	l679
  4741   001B9A                     u2610:
  4742   001B9A  EFC2  F00D         	goto	l2927
  4743   001B9E                     l679:
  4744   001B9E  500E               	movf	___fladd@aexp^0,w,c
  4745   001BA0  B4D8               	btfsc	status,2,c
  4746   001BA2  EFD5  F00D         	goto	u2621
  4747   001BA6  EFD7  F00D         	goto	u2620
  4748   001BAA                     u2621:
  4749   001BAA  EF02  F00E         	goto	l2939
  4750   001BAE                     u2620:
  4751   001BAE  0E01               	movlw	1
  4752   001BB0  2601               	addwf	___fladd@b^0,f,c
  4753   001BB2  0E00               	movlw	0
  4754   001BB4  2202               	addwfc	(___fladd@b+1)^0,f,c
  4755   001BB6  2203               	addwfc	(___fladd@b+2)^0,f,c
  4756   001BB8  2204               	addwfc	(___fladd@b+3)^0,f,c
  4757   001BBA  A004               	btfss	(___fladd@b+3)^0,0,c
  4758   001BBC  EFE2  F00D         	goto	u2631
  4759   001BC0  EFE4  F00D         	goto	u2630
  4760   001BC4                     u2631:
  4761   001BC4  EF02  F00E         	goto	l2939
  4762   001BC8                     u2630:
  4763   001BC8  C001  F009         	movff	___fladd@b,??___fladd
  4764   001BCC  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  4765   001BD0  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  4766   001BD4  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  4767   001BD8  340C               	rlcf	(??___fladd+3)^0,w,c
  4768   001BDA  320C               	rrcf	(??___fladd+3)^0,f,c
  4769   001BDC  320B               	rrcf	(??___fladd+2)^0,f,c
  4770   001BDE  320A               	rrcf	(??___fladd+1)^0,f,c
  4771   001BE0  3209               	rrcf	??___fladd^0,f,c
  4772   001BE2  C009  F001         	movff	??___fladd,___fladd@b
  4773   001BE6  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  4774   001BEA  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  4775   001BEE  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  4776   001BF2  280F               	incf	___fladd@bexp^0,w,c
  4777   001BF4  B4D8               	btfsc	status,2,c
  4778   001BF6  EFFF  F00D         	goto	u2641
  4779   001BFA  EF01  F00E         	goto	u2640
  4780   001BFE                     u2641:
  4781   001BFE  EF02  F00E         	goto	l2939
  4782   001C02                     u2640:
  4783   001C02  2A0F               	incf	___fladd@bexp^0,f,c
  4784   001C04                     l2939:
  4785   001C04  280F               	incf	___fladd@bexp^0,w,c
  4786   001C06  B4D8               	btfsc	status,2,c
  4787   001C08  EF08  F00E         	goto	u2651
  4788   001C0C  EF0A  F00E         	goto	u2650
  4789   001C10                     u2651:
  4790   001C10  EF12  F00E         	goto	l2943
  4791   001C14                     u2650:
  4792   001C14  500F               	movf	___fladd@bexp^0,w,c
  4793   001C16  A4D8               	btfss	status,2,c
  4794   001C18  EF10  F00E         	goto	u2661
  4795   001C1C  EF12  F00E         	goto	u2660
  4796   001C20                     u2661:
  4797   001C20  EF24  F00E         	goto	l2947
  4798   001C24                     u2660:
  4799   001C24                     l2943:
  4800   001C24  0E00               	movlw	0
  4801   001C26  6E01               	movwf	___fladd@b^0,c
  4802   001C28  0E00               	movlw	0
  4803   001C2A  6E02               	movwf	(___fladd@b+1)^0,c
  4804   001C2C  0E00               	movlw	0
  4805   001C2E  6E03               	movwf	(___fladd@b+2)^0,c
  4806   001C30  0E00               	movlw	0
  4807   001C32  6E04               	movwf	(___fladd@b+3)^0,c
  4808   001C34  500F               	movf	___fladd@bexp^0,w,c
  4809   001C36  A4D8               	btfss	status,2,c
  4810   001C38  EF20  F00E         	goto	u2671
  4811   001C3C  EF22  F00E         	goto	u2670
  4812   001C40                     u2671:
  4813   001C40  EF24  F00E         	goto	l2947
  4814   001C44                     u2670:
  4815   001C44  0E00               	movlw	0
  4816   001C46  6E0D               	movwf	___fladd@signs^0,c
  4817   001C48                     l2947:
  4818   001C48  A00F               	btfss	___fladd@bexp^0,0,c
  4819   001C4A  EF29  F00E         	goto	u2681
  4820   001C4E  EF2B  F00E         	goto	u2680
  4821   001C52                     u2681:
  4822   001C52  EF2E  F00E         	goto	l2951
  4823   001C56                     u2680:
  4824   001C56  8E03               	bsf	(___fladd@b+2)^0,7,c
  4825   001C58  EF2F  F00E         	goto	l2953
  4826   001C5C                     l2951:
  4827   001C5C  9E03               	bcf	(___fladd@b+2)^0,7,c
  4828   001C5E                     l2953:
  4829   001C5E  90D8               	bcf	status,0,c
  4830   001C60  300F               	rrcf	___fladd@bexp^0,w,c
  4831   001C62  6E04               	movwf	(___fladd@b+3)^0,c
  4832   001C64  AE0D               	btfss	___fladd@signs^0,7,c
  4833   001C66  EF37  F00E         	goto	u2691
  4834   001C6A  EF39  F00E         	goto	u2690
  4835   001C6E                     u2691:
  4836   001C6E  EF3A  F00E         	goto	l2959
  4837   001C72                     u2690:
  4838   001C72  8E04               	bsf	(___fladd@b+3)^0,7,c
  4839   001C74                     l2959:
  4840   001C74  C001  F001         	movff	___fladd@b,?___fladd
  4841   001C78  C002  F002         	movff	___fladd@b+1,?___fladd+1
  4842   001C7C  C003  F003         	movff	___fladd@b+2,?___fladd+2
  4843   001C80  C004  F004         	movff	___fladd@b+3,?___fladd+3
  4844   001C84                     l662:
  4845   001C84  0012               	return		;funcret
  4846   001C86                     __end_of___fladd:
  4847                           	callstack 0
  4848                           
  4849 ;; *************** function ___flneg *****************
  4850 ;; Defined at:
  4851 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flneg.c"
  4852 ;; Parameters:    Size  Location     Type
  4853 ;;  f1              4    0[COMRAM] unsigned char 
  4854 ;; Auto vars:     Size  Location     Type
  4855 ;;		None
  4856 ;; Return value:  Size  Location     Type
  4857 ;;                  4    0[COMRAM] unsigned char 
  4858 ;; Registers used:
  4859 ;;		wreg, status,2, status,0
  4860 ;; Tracked objects:
  4861 ;;		On entry : 0/0
  4862 ;;		On exit  : 0/0
  4863 ;;		Unchanged: 0/0
  4864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4865 ;;      Params:         4       0       0       0       0       0       0       0       0
  4866 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4867 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4868 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4869 ;;Total ram usage:        4 bytes
  4870 ;; Hardware stack levels used: 1
  4871 ;; This function calls:
  4872 ;;		Nothing
  4873 ;; This function is called by:
  4874 ;;		_efgtoa
  4875 ;; This function uses a non-reentrant model
  4876 ;;
  4877                           
  4878                           	psect	text13
  4879   0039AA                     __ptext13:
  4880                           	callstack 0
  4881   0039AA                     ___flneg:
  4882                           	callstack 26
  4883   0039AA  5001               	movf	___flneg@f1^0,w,c
  4884   0039AC  1002               	iorwf	(___flneg@f1+1)^0,w,c
  4885   0039AE  1003               	iorwf	(___flneg@f1+2)^0,w,c
  4886   0039B0  1004               	iorwf	(___flneg@f1+3)^0,w,c
  4887   0039B2  B4D8               	btfsc	status,2,c
  4888   0039B4  EFDE  F01C         	goto	u3341
  4889   0039B8  EFE0  F01C         	goto	u3340
  4890   0039BC                     u3341:
  4891   0039BC  EFE8  F01C         	goto	l3373
  4892   0039C0                     u3340:
  4893   0039C0  0E00               	movlw	0
  4894   0039C2  1A01               	xorwf	___flneg@f1^0,f,c
  4895   0039C4  0E00               	movlw	0
  4896   0039C6  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  4897   0039C8  0E00               	movlw	0
  4898   0039CA  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  4899   0039CC  0E80               	movlw	128
  4900   0039CE  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  4901   0039D0                     l3373:
  4902   0039D0  C001  F001         	movff	___flneg@f1,?___flneg
  4903   0039D4  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  4904   0039D8  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  4905   0039DC  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  4906   0039E0  0012               	return		;funcret
  4907   0039E2                     __end_of___flneg:
  4908                           	callstack 0
  4909                           
  4910 ;; *************** function ___flmul *****************
  4911 ;; Defined at:
  4912 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  4913 ;; Parameters:    Size  Location     Type
  4914 ;;  b               4   14[COMRAM] unsigned char 
  4915 ;;  a               4   18[COMRAM] unsigned char 
  4916 ;; Auto vars:     Size  Location     Type
  4917 ;;  prod            4   33[COMRAM] struct .
  4918 ;;  grs             4   27[COMRAM] unsigned long 
  4919 ;;  temp            2   37[COMRAM] struct .
  4920 ;;  bexp            1   32[COMRAM] unsigned char 
  4921 ;;  aexp            1   31[COMRAM] unsigned char 
  4922 ;;  sign            1   26[COMRAM] unsigned char 
  4923 ;; Return value:  Size  Location     Type
  4924 ;;                  4   14[COMRAM] unsigned char 
  4925 ;; Registers used:
  4926 ;;		wreg, status,2, status,0, prodl, prodh
  4927 ;; Tracked objects:
  4928 ;;		On entry : 0/0
  4929 ;;		On exit  : 0/0
  4930 ;;		Unchanged: 0/0
  4931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4932 ;;      Params:         8       0       0       0       0       0       0       0       0
  4933 ;;      Locals:        13       0       0       0       0       0       0       0       0
  4934 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4935 ;;      Totals:        25       0       0       0       0       0       0       0       0
  4936 ;;Total ram usage:       25 bytes
  4937 ;; Hardware stack levels used: 1
  4938 ;; This function calls:
  4939 ;;		Nothing
  4940 ;; This function is called by:
  4941 ;;		_main
  4942 ;;		_efgtoa
  4943 ;; This function uses a non-reentrant model
  4944 ;;
  4945                           
  4946                           	psect	text14
  4947   001C86                     __ptext14:
  4948                           	callstack 0
  4949   001C86                     ___flmul:
  4950                           	callstack 26
  4951   001C86  5012               	movf	(___flmul@b+3)^0,w,c
  4952   001C88  0B80               	andlw	128
  4953   001C8A  6E1B               	movwf	___flmul@sign^0,c
  4954   001C8C  5012               	movf	(___flmul@b+3)^0,w,c
  4955   001C8E  2412               	addwf	(___flmul@b+3)^0,w,c
  4956   001C90  6E21               	movwf	___flmul@bexp^0,c
  4957   001C92  AE11               	btfss	(___flmul@b+2)^0,7,c
  4958   001C94  EF4E  F00E         	goto	u3071
  4959   001C98  EF50  F00E         	goto	u3070
  4960   001C9C                     u3071:
  4961   001C9C  EF51  F00E         	goto	l3201
  4962   001CA0                     u3070:
  4963   001CA0  8021               	bsf	___flmul@bexp^0,0,c
  4964   001CA2                     l3201:
  4965   001CA2  5021               	movf	___flmul@bexp^0,w,c
  4966   001CA4  B4D8               	btfsc	status,2,c
  4967   001CA6  EF57  F00E         	goto	u3081
  4968   001CAA  EF59  F00E         	goto	u3080
  4969   001CAE                     u3081:
  4970   001CAE  EF6C  F00E         	goto	l3209
  4971   001CB2                     u3080:
  4972   001CB2  2821               	incf	___flmul@bexp^0,w,c
  4973   001CB4  A4D8               	btfss	status,2,c
  4974   001CB6  EF5F  F00E         	goto	u3091
  4975   001CBA  EF61  F00E         	goto	u3090
  4976   001CBE                     u3091:
  4977   001CBE  EF69  F00E         	goto	l3207
  4978   001CC2                     u3090:
  4979   001CC2  0E00               	movlw	0
  4980   001CC4  6E0F               	movwf	___flmul@b^0,c
  4981   001CC6  0E00               	movlw	0
  4982   001CC8  6E10               	movwf	(___flmul@b+1)^0,c
  4983   001CCA  0E00               	movlw	0
  4984   001CCC  6E11               	movwf	(___flmul@b+2)^0,c
  4985   001CCE  0E00               	movlw	0
  4986   001CD0  6E12               	movwf	(___flmul@b+3)^0,c
  4987   001CD2                     l3207:
  4988   001CD2  8E11               	bsf	(___flmul@b+2)^0,7,c
  4989   001CD4  EF74  F00E         	goto	l3211
  4990   001CD8                     l3209:
  4991   001CD8  0E00               	movlw	0
  4992   001CDA  6E0F               	movwf	___flmul@b^0,c
  4993   001CDC  0E00               	movlw	0
  4994   001CDE  6E10               	movwf	(___flmul@b+1)^0,c
  4995   001CE0  0E00               	movlw	0
  4996   001CE2  6E11               	movwf	(___flmul@b+2)^0,c
  4997   001CE4  0E00               	movlw	0
  4998   001CE6  6E12               	movwf	(___flmul@b+3)^0,c
  4999   001CE8                     l3211:
  5000   001CE8  5016               	movf	(___flmul@a+3)^0,w,c
  5001   001CEA  0B80               	andlw	128
  5002   001CEC  1A1B               	xorwf	___flmul@sign^0,f,c
  5003   001CEE  5016               	movf	(___flmul@a+3)^0,w,c
  5004   001CF0  2416               	addwf	(___flmul@a+3)^0,w,c
  5005   001CF2  6E20               	movwf	___flmul@aexp^0,c
  5006   001CF4  AE15               	btfss	(___flmul@a+2)^0,7,c
  5007   001CF6  EF7F  F00E         	goto	u3101
  5008   001CFA  EF81  F00E         	goto	u3100
  5009   001CFE                     u3101:
  5010   001CFE  EF82  F00E         	goto	l3219
  5011   001D02                     u3100:
  5012   001D02  8020               	bsf	___flmul@aexp^0,0,c
  5013   001D04                     l3219:
  5014   001D04  5020               	movf	___flmul@aexp^0,w,c
  5015   001D06  B4D8               	btfsc	status,2,c
  5016   001D08  EF88  F00E         	goto	u3111
  5017   001D0C  EF8A  F00E         	goto	u3110
  5018   001D10                     u3111:
  5019   001D10  EF9D  F00E         	goto	l3227
  5020   001D14                     u3110:
  5021   001D14  2820               	incf	___flmul@aexp^0,w,c
  5022   001D16  A4D8               	btfss	status,2,c
  5023   001D18  EF90  F00E         	goto	u3121
  5024   001D1C  EF92  F00E         	goto	u3120
  5025   001D20                     u3121:
  5026   001D20  EF9A  F00E         	goto	l3225
  5027   001D24                     u3120:
  5028   001D24  0E00               	movlw	0
  5029   001D26  6E13               	movwf	___flmul@a^0,c
  5030   001D28  0E00               	movlw	0
  5031   001D2A  6E14               	movwf	(___flmul@a+1)^0,c
  5032   001D2C  0E00               	movlw	0
  5033   001D2E  6E15               	movwf	(___flmul@a+2)^0,c
  5034   001D30  0E00               	movlw	0
  5035   001D32  6E16               	movwf	(___flmul@a+3)^0,c
  5036   001D34                     l3225:
  5037   001D34  8E15               	bsf	(___flmul@a+2)^0,7,c
  5038   001D36  EFA5  F00E         	goto	l739
  5039   001D3A                     l3227:
  5040   001D3A  0E00               	movlw	0
  5041   001D3C  6E13               	movwf	___flmul@a^0,c
  5042   001D3E  0E00               	movlw	0
  5043   001D40  6E14               	movwf	(___flmul@a+1)^0,c
  5044   001D42  0E00               	movlw	0
  5045   001D44  6E15               	movwf	(___flmul@a+2)^0,c
  5046   001D46  0E00               	movlw	0
  5047   001D48  6E16               	movwf	(___flmul@a+3)^0,c
  5048   001D4A                     l739:
  5049   001D4A  5020               	movf	___flmul@aexp^0,w,c
  5050   001D4C  B4D8               	btfsc	status,2,c
  5051   001D4E  EFAB  F00E         	goto	u3131
  5052   001D52  EFAD  F00E         	goto	u3130
  5053   001D56                     u3131:
  5054   001D56  EFB5  F00E         	goto	l3231
  5055   001D5A                     u3130:
  5056   001D5A  5021               	movf	___flmul@bexp^0,w,c
  5057   001D5C  A4D8               	btfss	status,2,c
  5058   001D5E  EFB3  F00E         	goto	u3141
  5059   001D62  EFB5  F00E         	goto	u3140
  5060   001D66                     u3141:
  5061   001D66  EFBF  F00E         	goto	l3235
  5062   001D6A                     u3140:
  5063   001D6A                     l3231:
  5064   001D6A  0E00               	movlw	0
  5065   001D6C  6E0F               	movwf	?___flmul^0,c
  5066   001D6E  0E00               	movlw	0
  5067   001D70  6E10               	movwf	(?___flmul+1)^0,c
  5068   001D72  0E00               	movlw	0
  5069   001D74  6E11               	movwf	(?___flmul+2)^0,c
  5070   001D76  0E00               	movlw	0
  5071   001D78  6E12               	movwf	(?___flmul+3)^0,c
  5072   001D7A  EF57  F010         	goto	l743
  5073   001D7E                     l3235:
  5074   001D7E  5015               	movf	(___flmul@a+2)^0,w,c
  5075   001D80  020F               	mulwf	___flmul@b^0,c
  5076   001D82  CFF3 F026          	movff	prodl,___flmul@temp
  5077   001D86  CFF4 F027          	movff	prodh,___flmul@temp+1
  5078   001D8A  5026               	movf	___flmul@temp^0,w,c
  5079   001D8C  6E1C               	movwf	___flmul@grs^0,c
  5080   001D8E  6A1D               	clrf	(___flmul@grs+1)^0,c
  5081   001D90  6A1E               	clrf	(___flmul@grs+2)^0,c
  5082   001D92  6A1F               	clrf	(___flmul@grs+3)^0,c
  5083   001D94  5027               	movf	(___flmul@temp+1)^0,w,c
  5084   001D96  6E22               	movwf	___flmul@prod^0,c
  5085   001D98  6A23               	clrf	(___flmul@prod+1)^0,c
  5086   001D9A  6A24               	clrf	(___flmul@prod+2)^0,c
  5087   001D9C  6A25               	clrf	(___flmul@prod+3)^0,c
  5088   001D9E  5014               	movf	(___flmul@a+1)^0,w,c
  5089   001DA0  0210               	mulwf	(___flmul@b+1)^0,c
  5090   001DA2  CFF3 F026          	movff	prodl,___flmul@temp
  5091   001DA6  CFF4 F027          	movff	prodh,___flmul@temp+1
  5092   001DAA  5026               	movf	___flmul@temp^0,w,c
  5093   001DAC  261C               	addwf	___flmul@grs^0,f,c
  5094   001DAE  0E00               	movlw	0
  5095   001DB0  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5096   001DB2  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5097   001DB4  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5098   001DB6  5027               	movf	(___flmul@temp+1)^0,w,c
  5099   001DB8  2622               	addwf	___flmul@prod^0,f,c
  5100   001DBA  0E00               	movlw	0
  5101   001DBC  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5102   001DBE  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5103   001DC0  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5104   001DC2  5013               	movf	___flmul@a^0,w,c
  5105   001DC4  0211               	mulwf	(___flmul@b+2)^0,c
  5106   001DC6  CFF3 F026          	movff	prodl,___flmul@temp
  5107   001DCA  CFF4 F027          	movff	prodh,___flmul@temp+1
  5108   001DCE  5026               	movf	___flmul@temp^0,w,c
  5109   001DD0  261C               	addwf	___flmul@grs^0,f,c
  5110   001DD2  0E00               	movlw	0
  5111   001DD4  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5112   001DD6  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5113   001DD8  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5114   001DDA  5027               	movf	(___flmul@temp+1)^0,w,c
  5115   001DDC  2622               	addwf	___flmul@prod^0,f,c
  5116   001DDE  0E00               	movlw	0
  5117   001DE0  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5118   001DE2  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5119   001DE4  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5120   001DE6  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5121   001DEA  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5122   001DEE  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5123   001DF2  6A1C               	clrf	___flmul@grs^0,c
  5124   001DF4  5013               	movf	___flmul@a^0,w,c
  5125   001DF6  0210               	mulwf	(___flmul@b+1)^0,c
  5126   001DF8  CFF3 F026          	movff	prodl,___flmul@temp
  5127   001DFC  CFF4 F027          	movff	prodh,___flmul@temp+1
  5128   001E00  5026               	movf	___flmul@temp^0,w,c
  5129   001E02  261C               	addwf	___flmul@grs^0,f,c
  5130   001E04  5027               	movf	(___flmul@temp+1)^0,w,c
  5131   001E06  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5132   001E08  0E00               	movlw	0
  5133   001E0A  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5134   001E0C  0E00               	movlw	0
  5135   001E0E  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5136   001E10  5014               	movf	(___flmul@a+1)^0,w,c
  5137   001E12  020F               	mulwf	___flmul@b^0,c
  5138   001E14  CFF3 F026          	movff	prodl,___flmul@temp
  5139   001E18  CFF4 F027          	movff	prodh,___flmul@temp+1
  5140   001E1C  5026               	movf	___flmul@temp^0,w,c
  5141   001E1E  261C               	addwf	___flmul@grs^0,f,c
  5142   001E20  5027               	movf	(___flmul@temp+1)^0,w,c
  5143   001E22  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5144   001E24  0E00               	movlw	0
  5145   001E26  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5146   001E28  0E00               	movlw	0
  5147   001E2A  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5148   001E2C  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5149   001E30  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5150   001E34  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5151   001E38  6A1C               	clrf	___flmul@grs^0,c
  5152   001E3A  5013               	movf	___flmul@a^0,w,c
  5153   001E3C  020F               	mulwf	___flmul@b^0,c
  5154   001E3E  CFF3 F026          	movff	prodl,___flmul@temp
  5155   001E42  CFF4 F027          	movff	prodh,___flmul@temp+1
  5156   001E46  5026               	movf	___flmul@temp^0,w,c
  5157   001E48  261C               	addwf	___flmul@grs^0,f,c
  5158   001E4A  5027               	movf	(___flmul@temp+1)^0,w,c
  5159   001E4C  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5160   001E4E  0E00               	movlw	0
  5161   001E50  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5162   001E52  0E00               	movlw	0
  5163   001E54  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5164   001E56  5015               	movf	(___flmul@a+2)^0,w,c
  5165   001E58  0210               	mulwf	(___flmul@b+1)^0,c
  5166   001E5A  CFF3 F026          	movff	prodl,___flmul@temp
  5167   001E5E  CFF4 F027          	movff	prodh,___flmul@temp+1
  5168   001E62  5026               	movf	___flmul@temp^0,w,c
  5169   001E64  2622               	addwf	___flmul@prod^0,f,c
  5170   001E66  5027               	movf	(___flmul@temp+1)^0,w,c
  5171   001E68  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5172   001E6A  0E00               	movlw	0
  5173   001E6C  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5174   001E6E  0E00               	movlw	0
  5175   001E70  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5176   001E72  5014               	movf	(___flmul@a+1)^0,w,c
  5177   001E74  0211               	mulwf	(___flmul@b+2)^0,c
  5178   001E76  CFF3 F026          	movff	prodl,___flmul@temp
  5179   001E7A  CFF4 F027          	movff	prodh,___flmul@temp+1
  5180   001E7E  5026               	movf	___flmul@temp^0,w,c
  5181   001E80  2622               	addwf	___flmul@prod^0,f,c
  5182   001E82  5027               	movf	(___flmul@temp+1)^0,w,c
  5183   001E84  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5184   001E86  0E00               	movlw	0
  5185   001E88  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5186   001E8A  0E00               	movlw	0
  5187   001E8C  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5188   001E8E  5015               	movf	(___flmul@a+2)^0,w,c
  5189   001E90  0211               	mulwf	(___flmul@b+2)^0,c
  5190   001E92  CFF3 F026          	movff	prodl,___flmul@temp
  5191   001E96  CFF4 F027          	movff	prodh,___flmul@temp+1
  5192   001E9A  5026               	movf	___flmul@temp^0,w,c
  5193   001E9C  6E17               	movwf	??___flmul^0,c
  5194   001E9E  5027               	movf	(___flmul@temp+1)^0,w,c
  5195   001EA0  6E18               	movwf	(??___flmul+1)^0,c
  5196   001EA2  6A19               	clrf	(??___flmul+2)^0,c
  5197   001EA4  6A1A               	clrf	(??___flmul+3)^0,c
  5198   001EA6  C019  F01A         	movff	??___flmul+2,??___flmul+3
  5199   001EAA  C018  F019         	movff	??___flmul+1,??___flmul+2
  5200   001EAE  C017  F018         	movff	??___flmul,??___flmul+1
  5201   001EB2  6A17               	clrf	??___flmul^0,c
  5202   001EB4  5017               	movf	??___flmul^0,w,c
  5203   001EB6  2622               	addwf	___flmul@prod^0,f,c
  5204   001EB8  5018               	movf	(??___flmul+1)^0,w,c
  5205   001EBA  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5206   001EBC  5019               	movf	(??___flmul+2)^0,w,c
  5207   001EBE  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5208   001EC0  501A               	movf	(??___flmul+3)^0,w,c
  5209   001EC2  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5210   001EC4  C01C  F017         	movff	___flmul@grs,??___flmul
  5211   001EC8  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  5212   001ECC  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  5213   001ED0  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  5214   001ED4  0E19               	movlw	25
  5215   001ED6  EF72  F00F         	goto	u3150
  5216   001EDA                     u3155:
  5217   001EDA  90D8               	bcf	status,0,c
  5218   001EDC  321A               	rrcf	(??___flmul+3)^0,f,c
  5219   001EDE  3219               	rrcf	(??___flmul+2)^0,f,c
  5220   001EE0  3218               	rrcf	(??___flmul+1)^0,f,c
  5221   001EE2  3217               	rrcf	??___flmul^0,f,c
  5222   001EE4                     u3150:
  5223   001EE4  2EE8               	decfsz	wreg,f,c
  5224   001EE6  EF6D  F00F         	goto	u3155
  5225   001EEA  5017               	movf	??___flmul^0,w,c
  5226   001EEC  2622               	addwf	___flmul@prod^0,f,c
  5227   001EEE  5018               	movf	(??___flmul+1)^0,w,c
  5228   001EF0  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5229   001EF2  5019               	movf	(??___flmul+2)^0,w,c
  5230   001EF4  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5231   001EF6  501A               	movf	(??___flmul+3)^0,w,c
  5232   001EF8  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5233   001EFA  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5234   001EFE  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5235   001F02  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5236   001F06  6A1C               	clrf	___flmul@grs^0,c
  5237   001F08  5020               	movf	___flmul@aexp^0,w,c
  5238   001F0A  C021  F017         	movff	___flmul@bexp,??___flmul
  5239   001F0E  6A18               	clrf	(??___flmul+1)^0,c
  5240   001F10  2617               	addwf	??___flmul^0,f,c
  5241   001F12  0E00               	movlw	0
  5242   001F14  2218               	addwfc	(??___flmul+1)^0,f,c
  5243   001F16  0E82               	movlw	130
  5244   001F18  2417               	addwf	??___flmul^0,w,c
  5245   001F1A  6E26               	movwf	___flmul@temp^0,c
  5246   001F1C  0EFF               	movlw	255
  5247   001F1E  2018               	addwfc	(??___flmul+1)^0,w,c
  5248   001F20  6E27               	movwf	(___flmul@temp+1)^0,c
  5249   001F22  EFA8  F00F         	goto	l3283
  5250   001F26                     l3277:
  5251   001F26  90D8               	bcf	status,0,c
  5252   001F28  3622               	rlcf	___flmul@prod^0,f,c
  5253   001F2A  3623               	rlcf	(___flmul@prod+1)^0,f,c
  5254   001F2C  3624               	rlcf	(___flmul@prod+2)^0,f,c
  5255   001F2E  3625               	rlcf	(___flmul@prod+3)^0,f,c
  5256   001F30  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  5257   001F32  EF9D  F00F         	goto	u3161
  5258   001F36  EF9F  F00F         	goto	u3160
  5259   001F3A                     u3161:
  5260   001F3A  EFA0  F00F         	goto	l746
  5261   001F3E                     u3160:
  5262   001F3E  8022               	bsf	___flmul@prod^0,0,c
  5263   001F40                     l746:
  5264   001F40  90D8               	bcf	status,0,c
  5265   001F42  361C               	rlcf	___flmul@grs^0,f,c
  5266   001F44  361D               	rlcf	(___flmul@grs+1)^0,f,c
  5267   001F46  361E               	rlcf	(___flmul@grs+2)^0,f,c
  5268   001F48  361F               	rlcf	(___flmul@grs+3)^0,f,c
  5269   001F4A  0626               	decf	___flmul@temp^0,f,c
  5270   001F4C  A0D8               	btfss	status,0,c
  5271   001F4E  0627               	decf	(___flmul@temp+1)^0,f,c
  5272   001F50                     l3283:
  5273   001F50  AE24               	btfss	(___flmul@prod+2)^0,7,c
  5274   001F52  EFAD  F00F         	goto	u3171
  5275   001F56  EFAF  F00F         	goto	u3170
  5276   001F5A                     u3171:
  5277   001F5A  EF93  F00F         	goto	l3277
  5278   001F5E                     u3170:
  5279   001F5E  0E00               	movlw	0
  5280   001F60  6E20               	movwf	___flmul@aexp^0,c
  5281   001F62  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  5282   001F64  EFB6  F00F         	goto	u3181
  5283   001F68  EFB8  F00F         	goto	u3180
  5284   001F6C                     u3181:
  5285   001F6C  EFDC  F00F         	goto	l748
  5286   001F70                     u3180:
  5287   001F70  0EFF               	movlw	255
  5288   001F72  141C               	andwf	___flmul@grs^0,w,c
  5289   001F74  6E17               	movwf	??___flmul^0,c
  5290   001F76  0EFF               	movlw	255
  5291   001F78  141D               	andwf	(___flmul@grs+1)^0,w,c
  5292   001F7A  6E18               	movwf	(??___flmul+1)^0,c
  5293   001F7C  0EFF               	movlw	255
  5294   001F7E  141E               	andwf	(___flmul@grs+2)^0,w,c
  5295   001F80  6E19               	movwf	(??___flmul+2)^0,c
  5296   001F82  0E7F               	movlw	127
  5297   001F84  141F               	andwf	(___flmul@grs+3)^0,w,c
  5298   001F86  6E1A               	movwf	(??___flmul+3)^0,c
  5299   001F88  5017               	movf	??___flmul^0,w,c
  5300   001F8A  1018               	iorwf	(??___flmul+1)^0,w,c
  5301   001F8C  1019               	iorwf	(??___flmul+2)^0,w,c
  5302   001F8E  101A               	iorwf	(??___flmul+3)^0,w,c
  5303   001F90  B4D8               	btfsc	status,2,c
  5304   001F92  EFCD  F00F         	goto	u3191
  5305   001F96  EFCF  F00F         	goto	u3190
  5306   001F9A                     u3191:
  5307   001F9A  EFD3  F00F         	goto	l749
  5308   001F9E                     u3190:
  5309   001F9E                     l3291:
  5310   001F9E  0E01               	movlw	1
  5311   001FA0  6E20               	movwf	___flmul@aexp^0,c
  5312   001FA2  EFDC  F00F         	goto	l748
  5313   001FA6                     l749:
  5314   001FA6  A022               	btfss	___flmul@prod^0,0,c
  5315   001FA8  EFD8  F00F         	goto	u3201
  5316   001FAC  EFDA  F00F         	goto	u3200
  5317   001FB0                     u3201:
  5318   001FB0  EFDC  F00F         	goto	l748
  5319   001FB4                     u3200:
  5320   001FB4  EFCF  F00F         	goto	l3291
  5321   001FB8                     l748:
  5322   001FB8  5020               	movf	___flmul@aexp^0,w,c
  5323   001FBA  B4D8               	btfsc	status,2,c
  5324   001FBC  EFE2  F00F         	goto	u3211
  5325   001FC0  EFE4  F00F         	goto	u3210
  5326   001FC4                     u3211:
  5327   001FC4  EF08  F010         	goto	l3303
  5328   001FC8                     u3210:
  5329   001FC8  0E01               	movlw	1
  5330   001FCA  2622               	addwf	___flmul@prod^0,f,c
  5331   001FCC  0E00               	movlw	0
  5332   001FCE  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5333   001FD0  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5334   001FD2  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5335   001FD4  A025               	btfss	(___flmul@prod+3)^0,0,c
  5336   001FD6  EFEF  F00F         	goto	u3221
  5337   001FDA  EFF1  F00F         	goto	u3220
  5338   001FDE                     u3221:
  5339   001FDE  EF08  F010         	goto	l3303
  5340   001FE2                     u3220:
  5341   001FE2  C022  F017         	movff	___flmul@prod,??___flmul
  5342   001FE6  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  5343   001FEA  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  5344   001FEE  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  5345   001FF2  341A               	rlcf	(??___flmul+3)^0,w,c
  5346   001FF4  321A               	rrcf	(??___flmul+3)^0,f,c
  5347   001FF6  3219               	rrcf	(??___flmul+2)^0,f,c
  5348   001FF8  3218               	rrcf	(??___flmul+1)^0,f,c
  5349   001FFA  3217               	rrcf	??___flmul^0,f,c
  5350   001FFC  C017  F022         	movff	??___flmul,___flmul@prod
  5351   002000  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  5352   002004  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  5353   002008  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  5354   00200C  4A26               	infsnz	___flmul@temp^0,f,c
  5355   00200E  2A27               	incf	(___flmul@temp+1)^0,f,c
  5356   002010                     l3303:
  5357   002010  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  5358   002012  EF13  F010         	goto	u3231
  5359   002016  5027               	movf	(___flmul@temp+1)^0,w,c
  5360   002018  E108               	bnz	u3230
  5361   00201A  2826               	incf	___flmul@temp^0,w,c
  5362   00201C  A0D8               	btfss	status,0,c
  5363   00201E  EF13  F010         	goto	u3231
  5364   002022  EF15  F010         	goto	u3230
  5365   002026                     u3231:
  5366   002026  EF1F  F010         	goto	l3307
  5367   00202A                     u3230:
  5368   00202A  0E00               	movlw	0
  5369   00202C  6E22               	movwf	___flmul@prod^0,c
  5370   00202E  0E00               	movlw	0
  5371   002030  6E23               	movwf	(___flmul@prod+1)^0,c
  5372   002032  0E80               	movlw	128
  5373   002034  6E24               	movwf	(___flmul@prod+2)^0,c
  5374   002036  0E7F               	movlw	127
  5375   002038  6E25               	movwf	(___flmul@prod+3)^0,c
  5376   00203A  EF4D  F010         	goto	l3319
  5377   00203E                     l3307:
  5378   00203E  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  5379   002040  EF2C  F010         	goto	u3240
  5380   002044  5027               	movf	(___flmul@temp+1)^0,w,c
  5381   002046  E106               	bnz	u3241
  5382   002048  0426               	decf	___flmul@temp^0,w,c
  5383   00204A  B0D8               	btfsc	status,0,c
  5384   00204C  EF2A  F010         	goto	u3241
  5385   002050  EF2C  F010         	goto	u3240
  5386   002054                     u3241:
  5387   002054  EF38  F010         	goto	l756
  5388   002058                     u3240:
  5389   002058  0E00               	movlw	0
  5390   00205A  6E22               	movwf	___flmul@prod^0,c
  5391   00205C  0E00               	movlw	0
  5392   00205E  6E23               	movwf	(___flmul@prod+1)^0,c
  5393   002060  0E00               	movlw	0
  5394   002062  6E24               	movwf	(___flmul@prod+2)^0,c
  5395   002064  0E00               	movlw	0
  5396   002066  6E25               	movwf	(___flmul@prod+3)^0,c
  5397   002068  0E00               	movlw	0
  5398   00206A  6E1B               	movwf	___flmul@sign^0,c
  5399   00206C  EF4D  F010         	goto	l3319
  5400   002070                     l756:
  5401   002070  C026  F021         	movff	___flmul@temp,___flmul@bexp
  5402   002074  0EFF               	movlw	255
  5403   002076  1622               	andwf	___flmul@prod^0,f,c
  5404   002078  0EFF               	movlw	255
  5405   00207A  1623               	andwf	(___flmul@prod+1)^0,f,c
  5406   00207C  0E7F               	movlw	127
  5407   00207E  1624               	andwf	(___flmul@prod+2)^0,f,c
  5408   002080  0E00               	movlw	0
  5409   002082  1625               	andwf	(___flmul@prod+3)^0,f,c
  5410   002084  A021               	btfss	___flmul@bexp^0,0,c
  5411   002086  EF47  F010         	goto	u3251
  5412   00208A  EF49  F010         	goto	u3250
  5413   00208E                     u3251:
  5414   00208E  EF4A  F010         	goto	l3317
  5415   002092                     u3250:
  5416   002092  8E24               	bsf	(___flmul@prod+2)^0,7,c
  5417   002094                     l3317:
  5418   002094  90D8               	bcf	status,0,c
  5419   002096  3021               	rrcf	___flmul@bexp^0,w,c
  5420   002098  6E25               	movwf	(___flmul@prod+3)^0,c
  5421   00209A                     l3319:
  5422   00209A  501B               	movf	___flmul@sign^0,w,c
  5423   00209C  1225               	iorwf	(___flmul@prod+3)^0,f,c
  5424   00209E  C022  F00F         	movff	___flmul@prod,?___flmul
  5425   0020A2  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  5426   0020A6  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  5427   0020AA  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  5428   0020AE                     l743:
  5429   0020AE  0012               	return		;funcret
  5430   0020B0                     __end_of___flmul:
  5431                           	callstack 0
  5432                           
  5433 ;; *************** function ___flge *****************
  5434 ;; Defined at:
  5435 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  5436 ;; Parameters:    Size  Location     Type
  5437 ;;  ff1             4   39[COMRAM] unsigned char 
  5438 ;;  ff2             4   43[COMRAM] unsigned char 
  5439 ;; Auto vars:     Size  Location     Type
  5440 ;;		None
  5441 ;; Return value:  Size  Location     Type
  5442 ;;		None               void
  5443 ;; Registers used:
  5444 ;;		wreg, status,2, status,0
  5445 ;; Tracked objects:
  5446 ;;		On entry : 0/0
  5447 ;;		On exit  : 0/0
  5448 ;;		Unchanged: 0/0
  5449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5450 ;;      Params:         8       0       0       0       0       0       0       0       0
  5451 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5452 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5453 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5454 ;;Total ram usage:       12 bytes
  5455 ;; Hardware stack levels used: 1
  5456 ;; This function calls:
  5457 ;;		Nothing
  5458 ;; This function is called by:
  5459 ;;		_efgtoa
  5460 ;; This function uses a non-reentrant model
  5461 ;;
  5462                           
  5463                           	psect	text15
  5464   00316A                     __ptext15:
  5465                           	callstack 0
  5466   00316A                     ___flge:
  5467                           	callstack 26
  5468   00316A  0E00               	movlw	0
  5469   00316C  1428               	andwf	___flge@ff1^0,w,c
  5470   00316E  6E30               	movwf	??___flge^0,c
  5471   003170  0E00               	movlw	0
  5472   003172  1429               	andwf	(___flge@ff1+1)^0,w,c
  5473   003174  6E31               	movwf	(??___flge+1)^0,c
  5474   003176  0E80               	movlw	128
  5475   003178  142A               	andwf	(___flge@ff1+2)^0,w,c
  5476   00317A  6E32               	movwf	(??___flge+2)^0,c
  5477   00317C  0E7F               	movlw	127
  5478   00317E  142B               	andwf	(___flge@ff1+3)^0,w,c
  5479   003180  6E33               	movwf	(??___flge+3)^0,c
  5480   003182  5030               	movf	??___flge^0,w,c
  5481   003184  1031               	iorwf	(??___flge+1)^0,w,c
  5482   003186  1032               	iorwf	(??___flge+2)^0,w,c
  5483   003188  1033               	iorwf	(??___flge+3)^0,w,c
  5484   00318A  A4D8               	btfss	status,2,c
  5485   00318C  EFCA  F018         	goto	u3291
  5486   003190  EFCC  F018         	goto	u3290
  5487   003194                     u3291:
  5488   003194  EFD4  F018         	goto	l3351
  5489   003198                     u3290:
  5490   003198  0E00               	movlw	0
  5491   00319A  6E28               	movwf	___flge@ff1^0,c
  5492   00319C  0E00               	movlw	0
  5493   00319E  6E29               	movwf	(___flge@ff1+1)^0,c
  5494   0031A0  0E00               	movlw	0
  5495   0031A2  6E2A               	movwf	(___flge@ff1+2)^0,c
  5496   0031A4  0E00               	movlw	0
  5497   0031A6  6E2B               	movwf	(___flge@ff1+3)^0,c
  5498   0031A8                     l3351:
  5499   0031A8  0E00               	movlw	0
  5500   0031AA  142C               	andwf	___flge@ff2^0,w,c
  5501   0031AC  6E30               	movwf	??___flge^0,c
  5502   0031AE  0E00               	movlw	0
  5503   0031B0  142D               	andwf	(___flge@ff2+1)^0,w,c
  5504   0031B2  6E31               	movwf	(??___flge+1)^0,c
  5505   0031B4  0E80               	movlw	128
  5506   0031B6  142E               	andwf	(___flge@ff2+2)^0,w,c
  5507   0031B8  6E32               	movwf	(??___flge+2)^0,c
  5508   0031BA  0E7F               	movlw	127
  5509   0031BC  142F               	andwf	(___flge@ff2+3)^0,w,c
  5510   0031BE  6E33               	movwf	(??___flge+3)^0,c
  5511   0031C0  5030               	movf	??___flge^0,w,c
  5512   0031C2  1031               	iorwf	(??___flge+1)^0,w,c
  5513   0031C4  1032               	iorwf	(??___flge+2)^0,w,c
  5514   0031C6  1033               	iorwf	(??___flge+3)^0,w,c
  5515   0031C8  A4D8               	btfss	status,2,c
  5516   0031CA  EFE9  F018         	goto	u3301
  5517   0031CE  EFEB  F018         	goto	u3300
  5518   0031D2                     u3301:
  5519   0031D2  EFF3  F018         	goto	l3355
  5520   0031D6                     u3300:
  5521   0031D6  0E00               	movlw	0
  5522   0031D8  6E2C               	movwf	___flge@ff2^0,c
  5523   0031DA  0E00               	movlw	0
  5524   0031DC  6E2D               	movwf	(___flge@ff2+1)^0,c
  5525   0031DE  0E00               	movlw	0
  5526   0031E0  6E2E               	movwf	(___flge@ff2+2)^0,c
  5527   0031E2  0E00               	movlw	0
  5528   0031E4  6E2F               	movwf	(___flge@ff2+3)^0,c
  5529   0031E6                     l3355:
  5530   0031E6  AE2B               	btfss	(___flge@ff1+3)^0,7,c
  5531   0031E8  EFF8  F018         	goto	u3311
  5532   0031EC  EFFA  F018         	goto	u3310
  5533   0031F0                     u3311:
  5534   0031F0  EF03  F019         	goto	l3359
  5535   0031F4                     u3310:
  5536   0031F4  6C28               	negf	___flge@ff1^0,c
  5537   0031F6  1E29               	comf	(___flge@ff1+1)^0,f,c
  5538   0031F8  B0D8               	btfsc	status,0,c
  5539   0031FA  2A29               	incf	(___flge@ff1+1)^0,f,c
  5540   0031FC  1E2A               	comf	(___flge@ff1+2)^0,f,c
  5541   0031FE  B0D8               	btfsc	status,0,c
  5542   003200  2A2A               	incf	(___flge@ff1+2)^0,f,c
  5543   003202  0E80               	movlw	128
  5544   003204  562B               	subfwb	(___flge@ff1+3)^0,f,c
  5545   003206                     l3359:
  5546   003206  AE2F               	btfss	(___flge@ff2+3)^0,7,c
  5547   003208  EF08  F019         	goto	u3321
  5548   00320C  EF0A  F019         	goto	u3320
  5549   003210                     u3321:
  5550   003210  EF13  F019         	goto	l390
  5551   003214                     u3320:
  5552   003214  6C2C               	negf	___flge@ff2^0,c
  5553   003216  1E2D               	comf	(___flge@ff2+1)^0,f,c
  5554   003218  B0D8               	btfsc	status,0,c
  5555   00321A  2A2D               	incf	(___flge@ff2+1)^0,f,c
  5556   00321C  1E2E               	comf	(___flge@ff2+2)^0,f,c
  5557   00321E  B0D8               	btfsc	status,0,c
  5558   003220  2A2E               	incf	(___flge@ff2+2)^0,f,c
  5559   003222  0E80               	movlw	128
  5560   003224  562F               	subfwb	(___flge@ff2+3)^0,f,c
  5561   003226                     l390:
  5562   003226  0E00               	movlw	0
  5563   003228  1A28               	xorwf	___flge@ff1^0,f,c
  5564   00322A  0E00               	movlw	0
  5565   00322C  1A29               	xorwf	(___flge@ff1+1)^0,f,c
  5566   00322E  0E00               	movlw	0
  5567   003230  1A2A               	xorwf	(___flge@ff1+2)^0,f,c
  5568   003232  0E80               	movlw	128
  5569   003234  1A2B               	xorwf	(___flge@ff1+3)^0,f,c
  5570   003236  0E00               	movlw	0
  5571   003238  1A2C               	xorwf	___flge@ff2^0,f,c
  5572   00323A  0E00               	movlw	0
  5573   00323C  1A2D               	xorwf	(___flge@ff2+1)^0,f,c
  5574   00323E  0E00               	movlw	0
  5575   003240  1A2E               	xorwf	(___flge@ff2+2)^0,f,c
  5576   003242  0E80               	movlw	128
  5577   003244  1A2F               	xorwf	(___flge@ff2+3)^0,f,c
  5578   003246  502C               	movf	___flge@ff2^0,w,c
  5579   003248  5C28               	subwf	___flge@ff1^0,w,c
  5580   00324A  502D               	movf	(___flge@ff2+1)^0,w,c
  5581   00324C  5829               	subwfb	(___flge@ff1+1)^0,w,c
  5582   00324E  502E               	movf	(___flge@ff2+2)^0,w,c
  5583   003250  582A               	subwfb	(___flge@ff1+2)^0,w,c
  5584   003252  502F               	movf	(___flge@ff2+3)^0,w,c
  5585   003254  582B               	subwfb	(___flge@ff1+3)^0,w,c
  5586   003256  B0D8               	btfsc	status,0,c
  5587   003258  EF30  F019         	goto	u3331
  5588   00325C  EF32  F019         	goto	u3330
  5589   003260                     u3331:
  5590   003260  EF35  F019         	goto	l3365
  5591   003264                     u3330:
  5592   003264  90D8               	bcf	status,0,c
  5593   003266  EF36  F019         	goto	l395
  5594   00326A                     l3365:
  5595   00326A  80D8               	bsf	status,0,c
  5596   00326C                     l395:
  5597   00326C  0012               	return		;funcret
  5598   00326E                     __end_of___flge:
  5599                           	callstack 0
  5600                           
  5601 ;; *************** function ___fleq *****************
  5602 ;; Defined at:
  5603 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
  5604 ;; Parameters:    Size  Location     Type
  5605 ;;  ff1             4    0[COMRAM] unsigned char 
  5606 ;;  ff2             4    4[COMRAM] unsigned char 
  5607 ;; Auto vars:     Size  Location     Type
  5608 ;;		None
  5609 ;; Return value:  Size  Location     Type
  5610 ;;		None               void
  5611 ;; Registers used:
  5612 ;;		wreg, status,2, status,0
  5613 ;; Tracked objects:
  5614 ;;		On entry : 0/0
  5615 ;;		On exit  : 0/0
  5616 ;;		Unchanged: 0/0
  5617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5618 ;;      Params:         8       0       0       0       0       0       0       0       0
  5619 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5620 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5621 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5622 ;;Total ram usage:       12 bytes
  5623 ;; Hardware stack levels used: 1
  5624 ;; This function calls:
  5625 ;;		Nothing
  5626 ;; This function is called by:
  5627 ;;		_efgtoa
  5628 ;; This function uses a non-reentrant model
  5629 ;;
  5630                           
  5631                           	psect	text16
  5632   003436                     __ptext16:
  5633                           	callstack 0
  5634   003436                     ___fleq:
  5635                           	callstack 26
  5636   003436  0E00               	movlw	0
  5637   003438  1401               	andwf	___fleq@ff1^0,w,c
  5638   00343A  6E09               	movwf	??___fleq^0,c
  5639   00343C  0E00               	movlw	0
  5640   00343E  1402               	andwf	(___fleq@ff1+1)^0,w,c
  5641   003440  6E0A               	movwf	(??___fleq+1)^0,c
  5642   003442  0E80               	movlw	128
  5643   003444  1403               	andwf	(___fleq@ff1+2)^0,w,c
  5644   003446  6E0B               	movwf	(??___fleq+2)^0,c
  5645   003448  0E7F               	movlw	127
  5646   00344A  1404               	andwf	(___fleq@ff1+3)^0,w,c
  5647   00344C  6E0C               	movwf	(??___fleq+3)^0,c
  5648   00344E  5009               	movf	??___fleq^0,w,c
  5649   003450  100A               	iorwf	(??___fleq+1)^0,w,c
  5650   003452  100B               	iorwf	(??___fleq+2)^0,w,c
  5651   003454  100C               	iorwf	(??___fleq+3)^0,w,c
  5652   003456  A4D8               	btfss	status,2,c
  5653   003458  EF30  F01A         	goto	u3261
  5654   00345C  EF32  F01A         	goto	u3260
  5655   003460                     u3261:
  5656   003460  EF3A  F01A         	goto	l3335
  5657   003464                     u3260:
  5658   003464  0E00               	movlw	0
  5659   003466  6E01               	movwf	___fleq@ff1^0,c
  5660   003468  0E00               	movlw	0
  5661   00346A  6E02               	movwf	(___fleq@ff1+1)^0,c
  5662   00346C  0E00               	movlw	0
  5663   00346E  6E03               	movwf	(___fleq@ff1+2)^0,c
  5664   003470  0E00               	movlw	0
  5665   003472  6E04               	movwf	(___fleq@ff1+3)^0,c
  5666   003474                     l3335:
  5667   003474  0E00               	movlw	0
  5668   003476  1405               	andwf	___fleq@ff2^0,w,c
  5669   003478  6E09               	movwf	??___fleq^0,c
  5670   00347A  0E00               	movlw	0
  5671   00347C  1406               	andwf	(___fleq@ff2+1)^0,w,c
  5672   00347E  6E0A               	movwf	(??___fleq+1)^0,c
  5673   003480  0E80               	movlw	128
  5674   003482  1407               	andwf	(___fleq@ff2+2)^0,w,c
  5675   003484  6E0B               	movwf	(??___fleq+2)^0,c
  5676   003486  0E7F               	movlw	127
  5677   003488  1408               	andwf	(___fleq@ff2+3)^0,w,c
  5678   00348A  6E0C               	movwf	(??___fleq+3)^0,c
  5679   00348C  5009               	movf	??___fleq^0,w,c
  5680   00348E  100A               	iorwf	(??___fleq+1)^0,w,c
  5681   003490  100B               	iorwf	(??___fleq+2)^0,w,c
  5682   003492  100C               	iorwf	(??___fleq+3)^0,w,c
  5683   003494  A4D8               	btfss	status,2,c
  5684   003496  EF4F  F01A         	goto	u3271
  5685   00349A  EF51  F01A         	goto	u3270
  5686   00349E                     u3271:
  5687   00349E  EF59  F01A         	goto	l3339
  5688   0034A2                     u3270:
  5689   0034A2  0E00               	movlw	0
  5690   0034A4  6E05               	movwf	___fleq@ff2^0,c
  5691   0034A6  0E00               	movlw	0
  5692   0034A8  6E06               	movwf	(___fleq@ff2+1)^0,c
  5693   0034AA  0E00               	movlw	0
  5694   0034AC  6E07               	movwf	(___fleq@ff2+2)^0,c
  5695   0034AE  0E00               	movlw	0
  5696   0034B0  6E08               	movwf	(___fleq@ff2+3)^0,c
  5697   0034B2                     l3339:
  5698   0034B2  5005               	movf	___fleq@ff2^0,w,c
  5699   0034B4  1801               	xorwf	___fleq@ff1^0,w,c
  5700   0034B6  E10F               	bnz	u3280
  5701   0034B8  5006               	movf	(___fleq@ff2+1)^0,w,c
  5702   0034BA  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  5703   0034BC  E10C               	bnz	u3280
  5704   0034BE  5007               	movf	(___fleq@ff2+2)^0,w,c
  5705   0034C0  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  5706   0034C2  E109               	bnz	u3280
  5707   0034C4  5008               	movf	(___fleq@ff2+3)^0,w,c
  5708   0034C6  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  5709   0034C8  B4D8               	btfsc	status,2,c
  5710   0034CA  EF69  F01A         	goto	u3281
  5711   0034CE  EF6B  F01A         	goto	u3280
  5712   0034D2                     u3281:
  5713   0034D2  EF6E  F01A         	goto	l3343
  5714   0034D6                     u3280:
  5715   0034D6  90D8               	bcf	status,0,c
  5716   0034D8  EF6F  F01A         	goto	l384
  5717   0034DC                     l3343:
  5718   0034DC  80D8               	bsf	status,0,c
  5719   0034DE                     l384:
  5720   0034DE  0012               	return		;funcret
  5721   0034E0                     __end_of___fleq:
  5722                           	callstack 0
  5723                           
  5724 ;; *************** function ___fldiv *****************
  5725 ;; Defined at:
  5726 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  5727 ;; Parameters:    Size  Location     Type
  5728 ;;  b               4    0[COMRAM] unsigned char 
  5729 ;;  a               4    4[COMRAM] unsigned char 
  5730 ;; Auto vars:     Size  Location     Type
  5731 ;;  grs             4   19[COMRAM] unsigned long 
  5732 ;;  rem             4   12[COMRAM] unsigned long 
  5733 ;;  new_exp         2   17[COMRAM] short 
  5734 ;;  aexp            1   24[COMRAM] unsigned char 
  5735 ;;  bexp            1   23[COMRAM] unsigned char 
  5736 ;;  sign            1   16[COMRAM] unsigned char 
  5737 ;; Return value:  Size  Location     Type
  5738 ;;                  4    0[COMRAM] unsigned char 
  5739 ;; Registers used:
  5740 ;;		wreg, status,2, status,0
  5741 ;; Tracked objects:
  5742 ;;		On entry : 0/0
  5743 ;;		On exit  : 0/0
  5744 ;;		Unchanged: 0/0
  5745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5746 ;;      Params:         8       0       0       0       0       0       0       0       0
  5747 ;;      Locals:        13       0       0       0       0       0       0       0       0
  5748 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5749 ;;      Totals:        25       0       0       0       0       0       0       0       0
  5750 ;;Total ram usage:       25 bytes
  5751 ;; Hardware stack levels used: 1
  5752 ;; This function calls:
  5753 ;;		Nothing
  5754 ;; This function is called by:
  5755 ;;		_efgtoa
  5756 ;; This function uses a non-reentrant model
  5757 ;;
  5758                           
  5759                           	psect	text17
  5760   0020B0                     __ptext17:
  5761                           	callstack 0
  5762   0020B0                     ___fldiv:
  5763                           	callstack 26
  5764   0020B0  5004               	movf	(___fldiv@b+3)^0,w,c
  5765   0020B2  0B80               	andlw	128
  5766   0020B4  6E11               	movwf	___fldiv@sign^0,c
  5767   0020B6  5004               	movf	(___fldiv@b+3)^0,w,c
  5768   0020B8  2404               	addwf	(___fldiv@b+3)^0,w,c
  5769   0020BA  6E18               	movwf	___fldiv@bexp^0,c
  5770   0020BC  AE03               	btfss	(___fldiv@b+2)^0,7,c
  5771   0020BE  EF63  F010         	goto	u2841
  5772   0020C2  EF65  F010         	goto	u2840
  5773   0020C6                     u2841:
  5774   0020C6  EF66  F010         	goto	l3063
  5775   0020CA                     u2840:
  5776   0020CA  8018               	bsf	___fldiv@bexp^0,0,c
  5777   0020CC                     l3063:
  5778   0020CC  5018               	movf	___fldiv@bexp^0,w,c
  5779   0020CE  B4D8               	btfsc	status,2,c
  5780   0020D0  EF6C  F010         	goto	u2851
  5781   0020D4  EF6E  F010         	goto	u2850
  5782   0020D8                     u2851:
  5783   0020D8  EF83  F010         	goto	l3073
  5784   0020DC                     u2850:
  5785   0020DC  2818               	incf	___fldiv@bexp^0,w,c
  5786   0020DE  A4D8               	btfss	status,2,c
  5787   0020E0  EF74  F010         	goto	u2861
  5788   0020E4  EF76  F010         	goto	u2860
  5789   0020E8                     u2861:
  5790   0020E8  EF7E  F010         	goto	l3069
  5791   0020EC                     u2860:
  5792   0020EC  0E00               	movlw	0
  5793   0020EE  6E01               	movwf	___fldiv@b^0,c
  5794   0020F0  0E00               	movlw	0
  5795   0020F2  6E02               	movwf	(___fldiv@b+1)^0,c
  5796   0020F4  0E00               	movlw	0
  5797   0020F6  6E03               	movwf	(___fldiv@b+2)^0,c
  5798   0020F8  0E00               	movlw	0
  5799   0020FA  6E04               	movwf	(___fldiv@b+3)^0,c
  5800   0020FC                     l3069:
  5801   0020FC  8E03               	bsf	(___fldiv@b+2)^0,7,c
  5802   0020FE  0E00               	movlw	0
  5803   002100  6E04               	movwf	(___fldiv@b+3)^0,c
  5804   002102  EF8B  F010         	goto	l3075
  5805   002106                     l3073:
  5806   002106  0E00               	movlw	0
  5807   002108  6E01               	movwf	___fldiv@b^0,c
  5808   00210A  0E00               	movlw	0
  5809   00210C  6E02               	movwf	(___fldiv@b+1)^0,c
  5810   00210E  0E00               	movlw	0
  5811   002110  6E03               	movwf	(___fldiv@b+2)^0,c
  5812   002112  0E00               	movlw	0
  5813   002114  6E04               	movwf	(___fldiv@b+3)^0,c
  5814   002116                     l3075:
  5815   002116  5008               	movf	(___fldiv@a+3)^0,w,c
  5816   002118  0B80               	andlw	128
  5817   00211A  1A11               	xorwf	___fldiv@sign^0,f,c
  5818   00211C  5008               	movf	(___fldiv@a+3)^0,w,c
  5819   00211E  2408               	addwf	(___fldiv@a+3)^0,w,c
  5820   002120  6E19               	movwf	___fldiv@aexp^0,c
  5821   002122  AE07               	btfss	(___fldiv@a+2)^0,7,c
  5822   002124  EF96  F010         	goto	u2871
  5823   002128  EF98  F010         	goto	u2870
  5824   00212C                     u2871:
  5825   00212C  EF99  F010         	goto	l3083
  5826   002130                     u2870:
  5827   002130  8019               	bsf	___fldiv@aexp^0,0,c
  5828   002132                     l3083:
  5829   002132  5019               	movf	___fldiv@aexp^0,w,c
  5830   002134  B4D8               	btfsc	status,2,c
  5831   002136  EF9F  F010         	goto	u2881
  5832   00213A  EFA1  F010         	goto	u2880
  5833   00213E                     u2881:
  5834   00213E  EFB6  F010         	goto	l3093
  5835   002142                     u2880:
  5836   002142  2819               	incf	___fldiv@aexp^0,w,c
  5837   002144  A4D8               	btfss	status,2,c
  5838   002146  EFA7  F010         	goto	u2891
  5839   00214A  EFA9  F010         	goto	u2890
  5840   00214E                     u2891:
  5841   00214E  EFB1  F010         	goto	l3089
  5842   002152                     u2890:
  5843   002152  0E00               	movlw	0
  5844   002154  6E05               	movwf	___fldiv@a^0,c
  5845   002156  0E00               	movlw	0
  5846   002158  6E06               	movwf	(___fldiv@a+1)^0,c
  5847   00215A  0E00               	movlw	0
  5848   00215C  6E07               	movwf	(___fldiv@a+2)^0,c
  5849   00215E  0E00               	movlw	0
  5850   002160  6E08               	movwf	(___fldiv@a+3)^0,c
  5851   002162                     l3089:
  5852   002162  8E07               	bsf	(___fldiv@a+2)^0,7,c
  5853   002164  0E00               	movlw	0
  5854   002166  6E08               	movwf	(___fldiv@a+3)^0,c
  5855   002168  EFBE  F010         	goto	l3095
  5856   00216C                     l3093:
  5857   00216C  0E00               	movlw	0
  5858   00216E  6E05               	movwf	___fldiv@a^0,c
  5859   002170  0E00               	movlw	0
  5860   002172  6E06               	movwf	(___fldiv@a+1)^0,c
  5861   002174  0E00               	movlw	0
  5862   002176  6E07               	movwf	(___fldiv@a+2)^0,c
  5863   002178  0E00               	movlw	0
  5864   00217A  6E08               	movwf	(___fldiv@a+3)^0,c
  5865   00217C                     l3095:
  5866   00217C  5005               	movf	___fldiv@a^0,w,c
  5867   00217E  1006               	iorwf	(___fldiv@a+1)^0,w,c
  5868   002180  1007               	iorwf	(___fldiv@a+2)^0,w,c
  5869   002182  1008               	iorwf	(___fldiv@a+3)^0,w,c
  5870   002184  A4D8               	btfss	status,2,c
  5871   002186  EFC7  F010         	goto	u2901
  5872   00218A  EFC9  F010         	goto	u2900
  5873   00218E                     u2901:
  5874   00218E  EFE1  F010         	goto	l3107
  5875   002192                     u2900:
  5876   002192  0E00               	movlw	0
  5877   002194  6E01               	movwf	___fldiv@b^0,c
  5878   002196  0E00               	movlw	0
  5879   002198  6E02               	movwf	(___fldiv@b+1)^0,c
  5880   00219A  0E00               	movlw	0
  5881   00219C  6E03               	movwf	(___fldiv@b+2)^0,c
  5882   00219E  0E00               	movlw	0
  5883   0021A0  6E04               	movwf	(___fldiv@b+3)^0,c
  5884   0021A2  0E80               	movlw	128
  5885   0021A4  1203               	iorwf	(___fldiv@b+2)^0,f,c
  5886   0021A6  0E7F               	movlw	127
  5887   0021A8  1204               	iorwf	(___fldiv@b+3)^0,f,c
  5888   0021AA                     l3101:
  5889   0021AA  5011               	movf	___fldiv@sign^0,w,c
  5890   0021AC  1204               	iorwf	(___fldiv@b+3)^0,f,c
  5891   0021AE  C001  F001         	movff	___fldiv@b,?___fldiv
  5892   0021B2  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  5893   0021B6  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  5894   0021BA  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  5895   0021BE  EF24  F012         	goto	l707
  5896   0021C2                     l3107:
  5897   0021C2  5018               	movf	___fldiv@bexp^0,w,c
  5898   0021C4  A4D8               	btfss	status,2,c
  5899   0021C6  EFE7  F010         	goto	u2911
  5900   0021CA  EFE9  F010         	goto	u2910
  5901   0021CE                     u2911:
  5902   0021CE  EFF3  F010         	goto	l3115
  5903   0021D2                     u2910:
  5904   0021D2  0E00               	movlw	0
  5905   0021D4  6E01               	movwf	?___fldiv^0,c
  5906   0021D6  0E00               	movlw	0
  5907   0021D8  6E02               	movwf	(?___fldiv+1)^0,c
  5908   0021DA  0E00               	movlw	0
  5909   0021DC  6E03               	movwf	(?___fldiv+2)^0,c
  5910   0021DE  0E00               	movlw	0
  5911   0021E0  6E04               	movwf	(?___fldiv+3)^0,c
  5912   0021E2  EF24  F012         	goto	l707
  5913   0021E6                     l3115:
  5914   0021E6  5019               	movf	___fldiv@aexp^0,w,c
  5915   0021E8  C018  F009         	movff	___fldiv@bexp,??___fldiv
  5916   0021EC  6A0A               	clrf	(??___fldiv+1)^0,c
  5917   0021EE  5E09               	subwf	??___fldiv^0,f,c
  5918   0021F0  0E00               	movlw	0
  5919   0021F2  5A0A               	subwfb	(??___fldiv+1)^0,f,c
  5920   0021F4  0E7F               	movlw	127
  5921   0021F6  2409               	addwf	??___fldiv^0,w,c
  5922   0021F8  6E12               	movwf	___fldiv@new_exp^0,c
  5923   0021FA  0E00               	movlw	0
  5924   0021FC  200A               	addwfc	(??___fldiv+1)^0,w,c
  5925   0021FE  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  5926   002200  C001  F00D         	movff	___fldiv@b,___fldiv@rem
  5927   002204  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
  5928   002208  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
  5929   00220C  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
  5930   002210  0E00               	movlw	0
  5931   002212  6E01               	movwf	___fldiv@b^0,c
  5932   002214  0E00               	movlw	0
  5933   002216  6E02               	movwf	(___fldiv@b+1)^0,c
  5934   002218  0E00               	movlw	0
  5935   00221A  6E03               	movwf	(___fldiv@b+2)^0,c
  5936   00221C  0E00               	movlw	0
  5937   00221E  6E04               	movwf	(___fldiv@b+3)^0,c
  5938   002220  0E00               	movlw	0
  5939   002222  6E14               	movwf	___fldiv@grs^0,c
  5940   002224  0E00               	movlw	0
  5941   002226  6E15               	movwf	(___fldiv@grs+1)^0,c
  5942   002228  0E00               	movlw	0
  5943   00222A  6E16               	movwf	(___fldiv@grs+2)^0,c
  5944   00222C  0E00               	movlw	0
  5945   00222E  6E17               	movwf	(___fldiv@grs+3)^0,c
  5946   002230  0E00               	movlw	0
  5947   002232  6E19               	movwf	___fldiv@aexp^0,c
  5948   002234  EF54  F011         	goto	l709
  5949   002238                     l3125:
  5950   002238  5019               	movf	___fldiv@aexp^0,w,c
  5951   00223A  B4D8               	btfsc	status,2,c
  5952   00223C  EF22  F011         	goto	u2921
  5953   002240  EF24  F011         	goto	u2920
  5954   002244                     u2921:
  5955   002244  EF3B  F011         	goto	l3133
  5956   002248                     u2920:
  5957   002248  90D8               	bcf	status,0,c
  5958   00224A  360D               	rlcf	___fldiv@rem^0,f,c
  5959   00224C  360E               	rlcf	(___fldiv@rem+1)^0,f,c
  5960   00224E  360F               	rlcf	(___fldiv@rem+2)^0,f,c
  5961   002250  3610               	rlcf	(___fldiv@rem+3)^0,f,c
  5962   002252  90D8               	bcf	status,0,c
  5963   002254  3601               	rlcf	___fldiv@b^0,f,c
  5964   002256  3602               	rlcf	(___fldiv@b+1)^0,f,c
  5965   002258  3603               	rlcf	(___fldiv@b+2)^0,f,c
  5966   00225A  3604               	rlcf	(___fldiv@b+3)^0,f,c
  5967   00225C  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  5968   00225E  EF33  F011         	goto	u2931
  5969   002262  EF35  F011         	goto	u2930
  5970   002266                     u2931:
  5971   002266  EF36  F011         	goto	l712
  5972   00226A                     u2930:
  5973   00226A  8001               	bsf	___fldiv@b^0,0,c
  5974   00226C                     l712:
  5975   00226C  90D8               	bcf	status,0,c
  5976   00226E  3614               	rlcf	___fldiv@grs^0,f,c
  5977   002270  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  5978   002272  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  5979   002274  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  5980   002276                     l3133:
  5981   002276  5005               	movf	___fldiv@a^0,w,c
  5982   002278  5C0D               	subwf	___fldiv@rem^0,w,c
  5983   00227A  5006               	movf	(___fldiv@a+1)^0,w,c
  5984   00227C  580E               	subwfb	(___fldiv@rem+1)^0,w,c
  5985   00227E  5007               	movf	(___fldiv@a+2)^0,w,c
  5986   002280  580F               	subwfb	(___fldiv@rem+2)^0,w,c
  5987   002282  5008               	movf	(___fldiv@a+3)^0,w,c
  5988   002284  5810               	subwfb	(___fldiv@rem+3)^0,w,c
  5989   002286  A0D8               	btfss	status,0,c
  5990   002288  EF48  F011         	goto	u2941
  5991   00228C  EF4A  F011         	goto	u2940
  5992   002290                     u2941:
  5993   002290  EF53  F011         	goto	l3139
  5994   002294                     u2940:
  5995   002294  8C17               	bsf	(___fldiv@grs+3)^0,6,c
  5996   002296  5005               	movf	___fldiv@a^0,w,c
  5997   002298  5E0D               	subwf	___fldiv@rem^0,f,c
  5998   00229A  5006               	movf	(___fldiv@a+1)^0,w,c
  5999   00229C  5A0E               	subwfb	(___fldiv@rem+1)^0,f,c
  6000   00229E  5007               	movf	(___fldiv@a+2)^0,w,c
  6001   0022A0  5A0F               	subwfb	(___fldiv@rem+2)^0,f,c
  6002   0022A2  5008               	movf	(___fldiv@a+3)^0,w,c
  6003   0022A4  5A10               	subwfb	(___fldiv@rem+3)^0,f,c
  6004   0022A6                     l3139:
  6005   0022A6  2A19               	incf	___fldiv@aexp^0,f,c
  6006   0022A8                     l709:
  6007   0022A8  0E19               	movlw	25
  6008   0022AA  6419               	cpfsgt	___fldiv@aexp^0,c
  6009   0022AC  EF5A  F011         	goto	u2951
  6010   0022B0  EF5C  F011         	goto	u2950
  6011   0022B4                     u2951:
  6012   0022B4  EF1C  F011         	goto	l3125
  6013   0022B8                     u2950:
  6014   0022B8  500D               	movf	___fldiv@rem^0,w,c
  6015   0022BA  100E               	iorwf	(___fldiv@rem+1)^0,w,c
  6016   0022BC  100F               	iorwf	(___fldiv@rem+2)^0,w,c
  6017   0022BE  1010               	iorwf	(___fldiv@rem+3)^0,w,c
  6018   0022C0  B4D8               	btfsc	status,2,c
  6019   0022C2  EF65  F011         	goto	u2961
  6020   0022C6  EF67  F011         	goto	u2960
  6021   0022CA                     u2961:
  6022   0022CA  EF7F  F011         	goto	l3151
  6023   0022CE                     u2960:
  6024   0022CE  8014               	bsf	___fldiv@grs^0,0,c
  6025   0022D0  EF7F  F011         	goto	l3151
  6026   0022D4                     l3145:
  6027   0022D4  90D8               	bcf	status,0,c
  6028   0022D6  3601               	rlcf	___fldiv@b^0,f,c
  6029   0022D8  3602               	rlcf	(___fldiv@b+1)^0,f,c
  6030   0022DA  3603               	rlcf	(___fldiv@b+2)^0,f,c
  6031   0022DC  3604               	rlcf	(___fldiv@b+3)^0,f,c
  6032   0022DE  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  6033   0022E0  EF74  F011         	goto	u2971
  6034   0022E4  EF76  F011         	goto	u2970
  6035   0022E8                     u2971:
  6036   0022E8  EF77  F011         	goto	l718
  6037   0022EC                     u2970:
  6038   0022EC  8001               	bsf	___fldiv@b^0,0,c
  6039   0022EE                     l718:
  6040   0022EE  90D8               	bcf	status,0,c
  6041   0022F0  3614               	rlcf	___fldiv@grs^0,f,c
  6042   0022F2  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  6043   0022F4  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  6044   0022F6  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  6045   0022F8  0612               	decf	___fldiv@new_exp^0,f,c
  6046   0022FA  A0D8               	btfss	status,0,c
  6047   0022FC  0613               	decf	(___fldiv@new_exp+1)^0,f,c
  6048   0022FE                     l3151:
  6049   0022FE  AE03               	btfss	(___fldiv@b+2)^0,7,c
  6050   002300  EF84  F011         	goto	u2981
  6051   002304  EF86  F011         	goto	u2980
  6052   002308                     u2981:
  6053   002308  EF6A  F011         	goto	l3145
  6054   00230C                     u2980:
  6055   00230C  0E00               	movlw	0
  6056   00230E  6E19               	movwf	___fldiv@aexp^0,c
  6057   002310  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  6058   002312  EF8D  F011         	goto	u2991
  6059   002316  EF8F  F011         	goto	u2990
  6060   00231A                     u2991:
  6061   00231A  EFB3  F011         	goto	l720
  6062   00231E                     u2990:
  6063   00231E  0EFF               	movlw	255
  6064   002320  1414               	andwf	___fldiv@grs^0,w,c
  6065   002322  6E09               	movwf	??___fldiv^0,c
  6066   002324  0EFF               	movlw	255
  6067   002326  1415               	andwf	(___fldiv@grs+1)^0,w,c
  6068   002328  6E0A               	movwf	(??___fldiv+1)^0,c
  6069   00232A  0EFF               	movlw	255
  6070   00232C  1416               	andwf	(___fldiv@grs+2)^0,w,c
  6071   00232E  6E0B               	movwf	(??___fldiv+2)^0,c
  6072   002330  0E7F               	movlw	127
  6073   002332  1417               	andwf	(___fldiv@grs+3)^0,w,c
  6074   002334  6E0C               	movwf	(??___fldiv+3)^0,c
  6075   002336  5009               	movf	??___fldiv^0,w,c
  6076   002338  100A               	iorwf	(??___fldiv+1)^0,w,c
  6077   00233A  100B               	iorwf	(??___fldiv+2)^0,w,c
  6078   00233C  100C               	iorwf	(??___fldiv+3)^0,w,c
  6079   00233E  B4D8               	btfsc	status,2,c
  6080   002340  EFA4  F011         	goto	u3001
  6081   002344  EFA6  F011         	goto	u3000
  6082   002348                     u3001:
  6083   002348  EFAA  F011         	goto	l721
  6084   00234C                     u3000:
  6085   00234C                     l3159:
  6086   00234C  0E01               	movlw	1
  6087   00234E  6E19               	movwf	___fldiv@aexp^0,c
  6088   002350  EFB3  F011         	goto	l720
  6089   002354                     l721:
  6090   002354  A001               	btfss	___fldiv@b^0,0,c
  6091   002356  EFAF  F011         	goto	u3011
  6092   00235A  EFB1  F011         	goto	u3010
  6093   00235E                     u3011:
  6094   00235E  EFB3  F011         	goto	l720
  6095   002362                     u3010:
  6096   002362  EFA6  F011         	goto	l3159
  6097   002366                     l720:
  6098   002366  5019               	movf	___fldiv@aexp^0,w,c
  6099   002368  B4D8               	btfsc	status,2,c
  6100   00236A  EFB9  F011         	goto	u3021
  6101   00236E  EFBB  F011         	goto	u3020
  6102   002372                     u3021:
  6103   002372  EFDF  F011         	goto	l3171
  6104   002376                     u3020:
  6105   002376  0E01               	movlw	1
  6106   002378  2601               	addwf	___fldiv@b^0,f,c
  6107   00237A  0E00               	movlw	0
  6108   00237C  2202               	addwfc	(___fldiv@b+1)^0,f,c
  6109   00237E  2203               	addwfc	(___fldiv@b+2)^0,f,c
  6110   002380  2204               	addwfc	(___fldiv@b+3)^0,f,c
  6111   002382  A004               	btfss	(___fldiv@b+3)^0,0,c
  6112   002384  EFC6  F011         	goto	u3031
  6113   002388  EFC8  F011         	goto	u3030
  6114   00238C                     u3031:
  6115   00238C  EFDF  F011         	goto	l3171
  6116   002390                     u3030:
  6117   002390  C001  F009         	movff	___fldiv@b,??___fldiv
  6118   002394  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
  6119   002398  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
  6120   00239C  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
  6121   0023A0  340C               	rlcf	(??___fldiv+3)^0,w,c
  6122   0023A2  320C               	rrcf	(??___fldiv+3)^0,f,c
  6123   0023A4  320B               	rrcf	(??___fldiv+2)^0,f,c
  6124   0023A6  320A               	rrcf	(??___fldiv+1)^0,f,c
  6125   0023A8  3209               	rrcf	??___fldiv^0,f,c
  6126   0023AA  C009  F001         	movff	??___fldiv,___fldiv@b
  6127   0023AE  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
  6128   0023B2  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
  6129   0023B6  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
  6130   0023BA  4A12               	infsnz	___fldiv@new_exp^0,f,c
  6131   0023BC  2A13               	incf	(___fldiv@new_exp+1)^0,f,c
  6132   0023BE                     l3171:
  6133   0023BE  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6134   0023C0  EFEA  F011         	goto	u3041
  6135   0023C4  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  6136   0023C6  E108               	bnz	u3040
  6137   0023C8  2812               	incf	___fldiv@new_exp^0,w,c
  6138   0023CA  A0D8               	btfss	status,0,c
  6139   0023CC  EFEA  F011         	goto	u3041
  6140   0023D0  EFEC  F011         	goto	u3040
  6141   0023D4                     u3041:
  6142   0023D4  EFF7  F011         	goto	l3175
  6143   0023D8                     u3040:
  6144   0023D8  0E00               	movlw	0
  6145   0023DA  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  6146   0023DC  6812               	setf	___fldiv@new_exp^0,c
  6147   0023DE  0E00               	movlw	0
  6148   0023E0  6E01               	movwf	___fldiv@b^0,c
  6149   0023E2  0E00               	movlw	0
  6150   0023E4  6E02               	movwf	(___fldiv@b+1)^0,c
  6151   0023E6  0E00               	movlw	0
  6152   0023E8  6E03               	movwf	(___fldiv@b+2)^0,c
  6153   0023EA  0E00               	movlw	0
  6154   0023EC  6E04               	movwf	(___fldiv@b+3)^0,c
  6155   0023EE                     l3175:
  6156   0023EE  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6157   0023F0  EF04  F012         	goto	u3050
  6158   0023F4  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  6159   0023F6  E106               	bnz	u3051
  6160   0023F8  0412               	decf	___fldiv@new_exp^0,w,c
  6161   0023FA  B0D8               	btfsc	status,0,c
  6162   0023FC  EF02  F012         	goto	u3051
  6163   002400  EF04  F012         	goto	u3050
  6164   002404                     u3051:
  6165   002404  EF12  F012         	goto	l3179
  6166   002408                     u3050:
  6167   002408  0E00               	movlw	0
  6168   00240A  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  6169   00240C  0E00               	movlw	0
  6170   00240E  6E12               	movwf	___fldiv@new_exp^0,c
  6171   002410  0E00               	movlw	0
  6172   002412  6E01               	movwf	___fldiv@b^0,c
  6173   002414  0E00               	movlw	0
  6174   002416  6E02               	movwf	(___fldiv@b+1)^0,c
  6175   002418  0E00               	movlw	0
  6176   00241A  6E03               	movwf	(___fldiv@b+2)^0,c
  6177   00241C  0E00               	movlw	0
  6178   00241E  6E04               	movwf	(___fldiv@b+3)^0,c
  6179   002420  0E00               	movlw	0
  6180   002422  6E11               	movwf	___fldiv@sign^0,c
  6181   002424                     l3179:
  6182   002424  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
  6183   002428  A018               	btfss	___fldiv@bexp^0,0,c
  6184   00242A  EF19  F012         	goto	u3061
  6185   00242E  EF1B  F012         	goto	u3060
  6186   002432                     u3061:
  6187   002432  EF1E  F012         	goto	l3185
  6188   002436                     u3060:
  6189   002436  8E03               	bsf	(___fldiv@b+2)^0,7,c
  6190   002438  EF1F  F012         	goto	l3187
  6191   00243C                     l3185:
  6192   00243C  9E03               	bcf	(___fldiv@b+2)^0,7,c
  6193   00243E                     l3187:
  6194   00243E  90D8               	bcf	status,0,c
  6195   002440  3018               	rrcf	___fldiv@bexp^0,w,c
  6196   002442  6E04               	movwf	(___fldiv@b+3)^0,c
  6197   002444  EFD5  F010         	goto	l3101
  6198   002448                     l707:
  6199   002448  0012               	return		;funcret
  6200   00244A                     __end_of___fldiv:
  6201                           	callstack 0
  6202                           
  6203 ;; *************** function _dtoa *****************
  6204 ;; Defined at:
  6205 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  6206 ;; Parameters:    Size  Location     Type
  6207 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  6208 ;;		 -> sprintf@f(11), 
  6209 ;;  d               8   29[COMRAM] long long 
  6210 ;; Auto vars:     Size  Location     Type
  6211 ;;  n               8   51[COMRAM] long long 
  6212 ;;  i               2   59[COMRAM] int 
  6213 ;;  w               2   49[COMRAM] int 
  6214 ;;  p               2   47[COMRAM] int 
  6215 ;;  s               1   61[COMRAM] unsigned char 
  6216 ;; Return value:  Size  Location     Type
  6217 ;;                  1    wreg      void 
  6218 ;; Registers used:
  6219 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6220 ;; Tracked objects:
  6221 ;;		On entry : 0/0
  6222 ;;		On exit  : 0/0
  6223 ;;		Unchanged: 0/0
  6224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6225 ;;      Params:        10       0       0       0       0       0       0       0       0
  6226 ;;      Locals:        17       0       0       0       0       0       0       0       0
  6227 ;;      Temps:          8       0       0       0       0       0       0       0       0
  6228 ;;      Totals:        35       0       0       0       0       0       0       0       0
  6229 ;;Total ram usage:       35 bytes
  6230 ;; Hardware stack levels used: 1
  6231 ;; Hardware stack levels required when called: 4
  6232 ;; This function calls:
  6233 ;;		___aodiv
  6234 ;;		___aomod
  6235 ;;		_abs
  6236 ;;		_pad
  6237 ;; This function is called by:
  6238 ;;		_vfpfcnvrt
  6239 ;; This function uses a non-reentrant model
  6240 ;;
  6241                           
  6242                           	psect	text18
  6243   00244A                     __ptext18:
  6244                           	callstack 0
  6245   00244A                     _dtoa:
  6246                           	callstack 23
  6247   00244A                     
  6248                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  6249   00244A  C01E  F034         	movff	dtoa@d,dtoa@n
  6250   00244E  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  6251   002452  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  6252   002456  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  6253   00245A  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  6254   00245E  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  6255   002462  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  6256   002466  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  6257   00246A                     
  6258                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  6259   00246A  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  6260   00246C  EF3A  F012         	goto	u3711
  6261   002470  EF3D  F012         	goto	u3710
  6262   002474                     u3711:
  6263   002474  0E01               	movlw	1
  6264   002476  EF3E  F012         	goto	u3720
  6265   00247A                     u3710:
  6266   00247A  0E00               	movlw	0
  6267   00247C                     u3720:
  6268   00247C  6E3E               	movwf	dtoa@s^0,c
  6269   00247E                     
  6270                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  6271   00247E  503E               	movf	dtoa@s^0,w,c
  6272   002480  B4D8               	btfsc	status,2,c
  6273   002482  EF45  F012         	goto	u3731
  6274   002486  EF47  F012         	goto	u3730
  6275   00248A                     u3731:
  6276   00248A  EF57  F012         	goto	l3537
  6277   00248E                     u3730:
  6278   00248E                     
  6279                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  6280   00248E  1E3B               	comf	(dtoa@n+7)^0,f,c
  6281   002490  1E3A               	comf	(dtoa@n+6)^0,f,c
  6282   002492  1E39               	comf	(dtoa@n+5)^0,f,c
  6283   002494  1E38               	comf	(dtoa@n+4)^0,f,c
  6284   002496  1E37               	comf	(dtoa@n+3)^0,f,c
  6285   002498  1E36               	comf	(dtoa@n+2)^0,f,c
  6286   00249A  1E35               	comf	(dtoa@n+1)^0,f,c
  6287   00249C  6C34               	negf	dtoa@n^0,c
  6288   00249E  0E00               	movlw	0
  6289   0024A0  2235               	addwfc	(dtoa@n+1)^0,f,c
  6290   0024A2  2236               	addwfc	(dtoa@n+2)^0,f,c
  6291   0024A4  2237               	addwfc	(dtoa@n+3)^0,f,c
  6292   0024A6  2238               	addwfc	(dtoa@n+4)^0,f,c
  6293   0024A8  2239               	addwfc	(dtoa@n+5)^0,f,c
  6294   0024AA  223A               	addwfc	(dtoa@n+6)^0,f,c
  6295   0024AC  223B               	addwfc	(dtoa@n+7)^0,f,c
  6296   0024AE                     l3537:
  6297                           
  6298                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 458:     if (!(pr
      +                          ec < 0)) {
  6299   0024AE  0100               	movlb	0	; () banked
  6300   0024B0  BFB5               	btfsc	(_prec+1)& (0+255),7,b
  6301   0024B2  EF5D  F012         	goto	u3741
  6302   0024B6  EF5F  F012         	goto	u3740
  6303   0024BA                     u3741:
  6304   0024BA  EF60  F012         	goto	l3541
  6305   0024BE                     u3740:
  6306   0024BE                     
  6307                           ; BSR set to: 0
  6308                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 459:         flag
      +                          s &= ~(1 << 1);
  6309   0024BE  925F               	bcf	_flags^0,1,c
  6310   0024C0                     l3541:
  6311                           
  6312                           ; BSR set to: 0
  6313                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  6314   0024C0  BFB5               	btfsc	(_prec+1)& (0+255),7,b
  6315   0024C2  EF6D  F012         	goto	u3750
  6316   0024C6  51B5               	movf	(_prec+1)& (0+255),w,b
  6317   0024C8  E106               	bnz	u3751
  6318   0024CA  05B4               	decf	_prec& (0+255),w,b
  6319   0024CC  B0D8               	btfsc	status,0,c
  6320   0024CE  EF6B  F012         	goto	u3751
  6321   0024D2  EF6D  F012         	goto	u3750
  6322   0024D6                     u3751:
  6323   0024D6  EF73  F012         	goto	l851
  6324   0024DA                     u3750:
  6325   0024DA                     
  6326                           ; BSR set to: 0
  6327   0024DA  0E00               	movlw	0
  6328   0024DC  6E31               	movwf	(dtoa@p+1)^0,c
  6329   0024DE  0E01               	movlw	1
  6330   0024E0  6E30               	movwf	dtoa@p^0,c
  6331   0024E2  EF77  F012         	goto	l853
  6332   0024E6                     l851:
  6333                           
  6334                           ; BSR set to: 0
  6335   0024E6  C0B4  F030         	movff	_prec,dtoa@p
  6336   0024EA  C0B5  F031         	movff	_prec+1,dtoa@p+1
  6337   0024EE                     l853:
  6338                           
  6339                           ; BSR set to: 0
  6340                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  6341   0024EE  C0B2  F032         	movff	_width,dtoa@w
  6342   0024F2  C0B3  F033         	movff	_width+1,dtoa@w+1
  6343   0024F6                     
  6344                           ; BSR set to: 0
  6345                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  6346   0024F6  503E               	movf	dtoa@s^0,w,c
  6347   0024F8  B4D8               	btfsc	status,2,c
  6348   0024FA  EF81  F012         	goto	u3761
  6349   0024FE  EF83  F012         	goto	u3760
  6350   002502                     u3761:
  6351   002502  EF9A  F012         	goto	l854
  6352   002506                     u3760:
  6353   002506                     
  6354                           ; BSR set to: 0
  6355                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  6356   002506  0632               	decf	dtoa@w^0,f,c
  6357   002508  A0D8               	btfss	status,0,c
  6358   00250A  0633               	decf	(dtoa@w+1)^0,f,c
  6359   00250C                     
  6360                           ; BSR set to: 0
  6361                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  6362   00250C  503E               	movf	dtoa@s^0,w,c
  6363   00250E  A4D8               	btfss	status,2,c
  6364   002510  EF8C  F012         	goto	u3771
  6365   002514  EF8E  F012         	goto	u3770
  6366   002518                     u3771:
  6367   002518  EF94  F012         	goto	l3553
  6368   00251C                     u3770:
  6369   00251C                     
  6370                           ; BSR set to: 0
  6371   00251C  0E00               	movlw	0
  6372   00251E  6E2F               	movwf	(_dtoa$1018+1)^0,c
  6373   002520  0E2B               	movlw	43
  6374   002522  6E2E               	movwf	_dtoa$1018^0,c
  6375   002524  EF98  F012         	goto	l3555
  6376   002528                     l3553:
  6377                           
  6378                           ; BSR set to: 0
  6379   002528  0E00               	movlw	0
  6380   00252A  6E2F               	movwf	(_dtoa$1018+1)^0,c
  6381   00252C  0E2D               	movlw	45
  6382   00252E  6E2E               	movwf	_dtoa$1018^0,c
  6383   002530                     l3555:
  6384                           
  6385                           ; BSR set to: 0
  6386   002530  C02E  F03E         	movff	_dtoa$1018,dtoa@s
  6387   002534                     l854:
  6388                           
  6389                           ; BSR set to: 0
  6390                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  6391   002534  0E00               	movlw	0
  6392   002536  6E3D               	movwf	(dtoa@i+1)^0,c
  6393   002538  0E4F               	movlw	79
  6394   00253A  6E3C               	movwf	dtoa@i^0,c
  6395   00253C                     
  6396                           ; BSR set to: 0
  6397                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  6398   00253C  0E00               	movlw	0
  6399   00253E  0101               	movlb	1	; () banked
  6400   002540  6F4F               	movwf	(_dbuf+79)& (0+255),b
  6401                           
  6402                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  6403   002542  EF1F  F013         	goto	l3569
  6404   002546                     l3559:
  6405                           
  6406                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  6407   002546  063C               	decf	dtoa@i^0,f,c
  6408   002548  A0D8               	btfss	status,0,c
  6409   00254A  063D               	decf	(dtoa@i+1)^0,f,c
  6410   00254C                     
  6411                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  6412   00254C  0E00               	movlw	low _dbuf
  6413   00254E  243C               	addwf	dtoa@i^0,w,c
  6414   002550  6ED9               	movwf	fsr2l,c
  6415   002552  0E01               	movlw	high _dbuf
  6416   002554  203D               	addwfc	(dtoa@i+1)^0,w,c
  6417   002556  6EDA               	movwf	fsr2h,c
  6418   002558  C034  F001         	movff	dtoa@n,___aomod@dividend
  6419   00255C  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  6420   002560  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  6421   002564  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  6422   002568  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  6423   00256C  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  6424   002570  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  6425   002574  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  6426   002578  0E0A               	movlw	10
  6427   00257A  6E09               	movwf	___aomod@divisor^0,c
  6428   00257C  0E00               	movlw	0
  6429   00257E  6E0A               	movwf	(___aomod@divisor+1)^0,c
  6430   002580  0E00               	movlw	0
  6431   002582  6E0B               	movwf	(___aomod@divisor+2)^0,c
  6432   002584  0E00               	movlw	0
  6433   002586  6E0C               	movwf	(___aomod@divisor+3)^0,c
  6434   002588  0E00               	movlw	0
  6435   00258A  6E0D               	movwf	(___aomod@divisor+4)^0,c
  6436   00258C  0E00               	movlw	0
  6437   00258E  6E0E               	movwf	(___aomod@divisor+5)^0,c
  6438   002590  0E00               	movlw	0
  6439   002592  6E0F               	movwf	(___aomod@divisor+6)^0,c
  6440   002594  0E00               	movlw	0
  6441   002596  6E10               	movwf	(___aomod@divisor+7)^0,c
  6442   002598  ECDB  F016         	call	___aomod	;wreg free
  6443   00259C  C001  F026         	movff	?___aomod,??_dtoa
  6444   0025A0  C002  F027         	movff	?___aomod+1,??_dtoa+1
  6445   0025A4  C003  F028         	movff	?___aomod+2,??_dtoa+2
  6446   0025A8  C004  F029         	movff	?___aomod+3,??_dtoa+3
  6447   0025AC  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  6448   0025B0  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  6449   0025B4  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  6450   0025B8  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  6451   0025BC  C026  F013         	movff	??_dtoa,abs@a
  6452   0025C0  C027  F014         	movff	??_dtoa+1,abs@a+1
  6453   0025C4  EC95  F01C         	call	_abs	;wreg free
  6454   0025C8  5013               	movf	?_abs^0,w,c
  6455   0025CA  0F30               	addlw	48
  6456   0025CC  6EDF               	movwf	indf2,c
  6457   0025CE                     
  6458                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  6459   0025CE  0630               	decf	dtoa@p^0,f,c
  6460   0025D0  A0D8               	btfss	status,0,c
  6461   0025D2  0631               	decf	(dtoa@p+1)^0,f,c
  6462   0025D4                     
  6463                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  6464   0025D4  0632               	decf	dtoa@w^0,f,c
  6465   0025D6  A0D8               	btfss	status,0,c
  6466   0025D8  0633               	decf	(dtoa@w+1)^0,f,c
  6467   0025DA                     
  6468                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  6469   0025DA  C034  F001         	movff	dtoa@n,___aodiv@dividend
  6470   0025DE  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  6471   0025E2  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  6472   0025E6  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  6473   0025EA  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  6474   0025EE  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  6475   0025F2  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  6476   0025F6  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  6477   0025FA  0E0A               	movlw	10
  6478   0025FC  6E09               	movwf	___aodiv@divisor^0,c
  6479   0025FE  0E00               	movlw	0
  6480   002600  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  6481   002602  0E00               	movlw	0
  6482   002604  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  6483   002606  0E00               	movlw	0
  6484   002608  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  6485   00260A  0E00               	movlw	0
  6486   00260C  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  6487   00260E  0E00               	movlw	0
  6488   002610  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  6489   002612  0E00               	movlw	0
  6490   002614  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  6491   002616  0E00               	movlw	0
  6492   002618  6E10               	movwf	(___aodiv@divisor+7)^0,c
  6493   00261A  EC63  F015         	call	___aodiv	;wreg free
  6494   00261E  C001  F034         	movff	?___aodiv,dtoa@n
  6495   002622  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  6496   002626  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  6497   00262A  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  6498   00262E  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  6499   002632  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  6500   002636  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  6501   00263A  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  6502   00263E                     l3569:
  6503                           
  6504                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  6505   00263E  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  6506   002640  EF2A  F013         	goto	u3781
  6507   002644  503D               	movf	(dtoa@i+1)^0,w,c
  6508   002646  E108               	bnz	u3780
  6509   002648  043C               	decf	dtoa@i^0,w,c
  6510   00264A  A0D8               	btfss	status,0,c
  6511   00264C  EF2A  F013         	goto	u3781
  6512   002650  EF2C  F013         	goto	u3780
  6513   002654                     u3781:
  6514   002654  EF5C  F013         	goto	l3579
  6515   002658                     u3780:
  6516   002658  5034               	movf	dtoa@n^0,w,c
  6517   00265A  1035               	iorwf	(dtoa@n+1)^0,w,c
  6518   00265C  1036               	iorwf	(dtoa@n+2)^0,w,c
  6519   00265E  1037               	iorwf	(dtoa@n+3)^0,w,c
  6520   002660  1038               	iorwf	(dtoa@n+4)^0,w,c
  6521   002662  1039               	iorwf	(dtoa@n+5)^0,w,c
  6522   002664  103A               	iorwf	(dtoa@n+6)^0,w,c
  6523   002666  103B               	iorwf	(dtoa@n+7)^0,w,c
  6524   002668  A4D8               	btfss	status,2,c
  6525   00266A  EF39  F013         	goto	u3791
  6526   00266E  EF3B  F013         	goto	u3790
  6527   002672                     u3791:
  6528   002672  EFA3  F012         	goto	l3559
  6529   002676                     u3790:
  6530   002676  BE31               	btfsc	(dtoa@p+1)^0,7,c
  6531   002678  EF48  F013         	goto	u3800
  6532   00267C  5031               	movf	(dtoa@p+1)^0,w,c
  6533   00267E  E106               	bnz	u3801
  6534   002680  0430               	decf	dtoa@p^0,w,c
  6535   002682  B0D8               	btfsc	status,0,c
  6536   002684  EF46  F013         	goto	u3801
  6537   002688  EF48  F013         	goto	u3800
  6538   00268C                     u3801:
  6539   00268C  EFA3  F012         	goto	l3559
  6540   002690                     u3800:
  6541   002690  BE33               	btfsc	(dtoa@w+1)^0,7,c
  6542   002692  EF53  F013         	goto	u3811
  6543   002696  5033               	movf	(dtoa@w+1)^0,w,c
  6544   002698  E108               	bnz	u3810
  6545   00269A  0432               	decf	dtoa@w^0,w,c
  6546   00269C  A0D8               	btfss	status,0,c
  6547   00269E  EF53  F013         	goto	u3811
  6548   0026A2  EF55  F013         	goto	u3810
  6549   0026A6                     u3811:
  6550   0026A6  EF5C  F013         	goto	l3579
  6551   0026AA                     u3810:
  6552   0026AA  B25F               	btfsc	_flags^0,1,c
  6553   0026AC  EF5A  F013         	goto	u3821
  6554   0026B0  EF5C  F013         	goto	u3820
  6555   0026B4                     u3821:
  6556   0026B4  EFA3  F012         	goto	l3559
  6557   0026B8                     u3820:
  6558   0026B8                     l3579:
  6559                           
  6560                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  6561   0026B8  503E               	movf	dtoa@s^0,w,c
  6562   0026BA  B4D8               	btfsc	status,2,c
  6563   0026BC  EF62  F013         	goto	u3831
  6564   0026C0  EF64  F013         	goto	u3830
  6565   0026C4                     u3831:
  6566   0026C4  EF6F  F013         	goto	l3585
  6567   0026C8                     u3830:
  6568   0026C8                     
  6569                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  6570   0026C8  063C               	decf	dtoa@i^0,f,c
  6571   0026CA  A0D8               	btfss	status,0,c
  6572   0026CC  063D               	decf	(dtoa@i+1)^0,f,c
  6573   0026CE                     
  6574                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  6575   0026CE  0E00               	movlw	low _dbuf
  6576   0026D0  243C               	addwf	dtoa@i^0,w,c
  6577   0026D2  6ED9               	movwf	fsr2l,c
  6578   0026D4  0E01               	movlw	high _dbuf
  6579   0026D6  203D               	addwfc	(dtoa@i+1)^0,w,c
  6580   0026D8  6EDA               	movwf	fsr2h,c
  6581   0026DA  C03E  FFDF         	movff	dtoa@s,indf2
  6582   0026DE                     l3585:
  6583                           
  6584                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  6585   0026DE  C01C  F011         	movff	dtoa@fp,pad@fp
  6586   0026E2  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  6587   0026E6  0E00               	movlw	low _dbuf
  6588   0026E8  243C               	addwf	dtoa@i^0,w,c
  6589   0026EA  6E13               	movwf	pad@buf^0,c
  6590   0026EC  0E01               	movlw	high _dbuf
  6591   0026EE  203D               	addwfc	(dtoa@i+1)^0,w,c
  6592   0026F0  6E14               	movwf	(pad@buf+1)^0,c
  6593   0026F2  C032  F015         	movff	dtoa@w,pad@p
  6594   0026F6  C033  F016         	movff	dtoa@w+1,pad@p+1
  6595   0026FA  EC70  F01A         	call	_pad	;wreg free
  6596   0026FE  0012               	return		;funcret
  6597   002700                     __end_of_dtoa:
  6598                           	callstack 0
  6599                           
  6600 ;; *************** function _pad *****************
  6601 ;; Defined at:
  6602 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  6603 ;; Parameters:    Size  Location     Type
  6604 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  6605 ;;		 -> sprintf@f(11), 
  6606 ;;  buf             2   18[COMRAM] PTR unsigned char 
  6607 ;;		 -> dbuf(80), 
  6608 ;;  p               2   20[COMRAM] int 
  6609 ;; Auto vars:     Size  Location     Type
  6610 ;;  w               2   25[COMRAM] int 
  6611 ;;  i               2   23[COMRAM] int 
  6612 ;; Return value:  Size  Location     Type
  6613 ;;                  1    wreg      void 
  6614 ;; Registers used:
  6615 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6616 ;; Tracked objects:
  6617 ;;		On entry : 0/0
  6618 ;;		On exit  : 0/0
  6619 ;;		Unchanged: 0/0
  6620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6621 ;;      Params:         6       0       0       0       0       0       0       0       0
  6622 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6623 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6624 ;;      Totals:        11       0       0       0       0       0       0       0       0
  6625 ;;Total ram usage:       11 bytes
  6626 ;; Hardware stack levels used: 1
  6627 ;; Hardware stack levels required when called: 3
  6628 ;; This function calls:
  6629 ;;		_fputc
  6630 ;;		_fputs
  6631 ;; This function is called by:
  6632 ;;		_dtoa
  6633 ;;		_efgtoa
  6634 ;; This function uses a non-reentrant model
  6635 ;;
  6636                           
  6637                           	psect	text19
  6638   0034E0                     __ptext19:
  6639                           	callstack 0
  6640   0034E0                     _pad:
  6641                           	callstack 23
  6642   0034E0                     
  6643                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 139:     if (flags & (1 << 0)) {
  6644   0034E0  A05F               	btfss	_flags^0,0,c
  6645   0034E2  EF75  F01A         	goto	u3421
  6646   0034E6  EF77  F01A         	goto	u3420
  6647   0034EA                     u3421:
  6648   0034EA  EF81  F01A         	goto	l3425
  6649   0034EE                     u3420:
  6650   0034EE                     
  6651                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 140:         fput
      +                          s((const char *)buf, fp);
  6652   0034EE  C013  F00A         	movff	pad@buf,fputs@s
  6653   0034F2  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6654   0034F6  C011  F00C         	movff	pad@fp,fputs@fp
  6655   0034FA  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6656   0034FE  EC53  F01C         	call	_fputs	;wreg free
  6657   003502                     l3425:
  6658                           
  6659                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 145:     w = (p <
      +                           0) ? 0 : p;
  6660   003502  BE16               	btfsc	(pad@p+1)^0,7,c
  6661   003504  EF86  F01A         	goto	u3431
  6662   003508  EF88  F01A         	goto	u3430
  6663   00350C                     u3431:
  6664   00350C  EF8E  F01A         	goto	l3429
  6665   003510                     u3430:
  6666   003510  C015  F01A         	movff	pad@p,pad@w
  6667   003514  C016  F01B         	movff	pad@p+1,pad@w+1
  6668   003518  EF92  F01A         	goto	l840
  6669   00351C                     l3429:
  6670   00351C  0E00               	movlw	0
  6671   00351E  6E1B               	movwf	(pad@w+1)^0,c
  6672   003520  0E00               	movlw	0
  6673   003522  6E1A               	movwf	pad@w^0,c
  6674   003524                     l840:
  6675                           
  6676                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  6677   003524  0E00               	movlw	0
  6678   003526  6E19               	movwf	(pad@i+1)^0,c
  6679   003528  0E00               	movlw	0
  6680   00352A  6E18               	movwf	pad@i^0,c
  6681                           
  6682                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  6683   00352C  EFA4  F01A         	goto	l3435
  6684   003530                     l3431:
  6685                           
  6686                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  6687   003530  0E00               	movlw	0
  6688   003532  6E02               	movwf	(fputc@c+1)^0,c
  6689   003534  0E20               	movlw	32
  6690   003536  6E01               	movwf	fputc@c^0,c
  6691   003538  C011  F003         	movff	pad@fp,fputc@fp
  6692   00353C  C012  F004         	movff	pad@fp+1,fputc@fp+1
  6693   003540  ECB6  F019         	call	_fputc	;wreg free
  6694   003544                     
  6695                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  6696   003544  4A18               	infsnz	pad@i^0,f,c
  6697   003546  2A19               	incf	(pad@i+1)^0,f,c
  6698   003548                     l3435:
  6699                           
  6700                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  6701   003548  501A               	movf	pad@w^0,w,c
  6702   00354A  5C18               	subwf	pad@i^0,w,c
  6703   00354C  5019               	movf	(pad@i+1)^0,w,c
  6704   00354E  0A80               	xorlw	128
  6705   003550  6E17               	movwf	??_pad^0,c
  6706   003552  501B               	movf	(pad@w+1)^0,w,c
  6707   003554  0A80               	xorlw	128
  6708   003556  5817               	subwfb	??_pad^0,w,c
  6709   003558  A0D8               	btfss	status,0,c
  6710   00355A  EFB1  F01A         	goto	u3441
  6711   00355E  EFB3  F01A         	goto	u3440
  6712   003562                     u3441:
  6713   003562  EF98  F01A         	goto	l3431
  6714   003566                     u3440:
  6715   003566                     
  6716                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 154:     if (!(fl
      +                          ags & (1 << 0))) {
  6717   003566  B05F               	btfsc	_flags^0,0,c
  6718   003568  EFB8  F01A         	goto	u3451
  6719   00356C  EFBA  F01A         	goto	u3450
  6720   003570                     u3451:
  6721   003570  EFC4  F01A         	goto	l845
  6722   003574                     u3450:
  6723   003574                     
  6724                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  6725   003574  C013  F00A         	movff	pad@buf,fputs@s
  6726   003578  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6727   00357C  C011  F00C         	movff	pad@fp,fputs@fp
  6728   003580  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6729   003584  EC53  F01C         	call	_fputs	;wreg free
  6730   003588                     l845:
  6731   003588  0012               	return		;funcret
  6732   00358A                     __end_of_pad:
  6733                           	callstack 0
  6734                           
  6735 ;; *************** function _fputs *****************
  6736 ;; Defined at:
  6737 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  6738 ;; Parameters:    Size  Location     Type
  6739 ;;  s               2    9[COMRAM] PTR const unsigned char 
  6740 ;;		 -> dbuf(80), 
  6741 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  6742 ;;		 -> sprintf@f(11), 
  6743 ;; Auto vars:     Size  Location     Type
  6744 ;;  i               2   14[COMRAM] int 
  6745 ;;  c               1   13[COMRAM] unsigned char 
  6746 ;; Return value:  Size  Location     Type
  6747 ;;                  2    9[COMRAM] int 
  6748 ;; Registers used:
  6749 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6750 ;; Tracked objects:
  6751 ;;		On entry : 0/0
  6752 ;;		On exit  : 0/0
  6753 ;;		Unchanged: 0/0
  6754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6755 ;;      Params:         4       0       0       0       0       0       0       0       0
  6756 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6757 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6758 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6759 ;;Total ram usage:        7 bytes
  6760 ;; Hardware stack levels used: 1
  6761 ;; Hardware stack levels required when called: 2
  6762 ;; This function calls:
  6763 ;;		_fputc
  6764 ;; This function is called by:
  6765 ;;		_pad
  6766 ;; This function uses a non-reentrant model
  6767 ;;
  6768                           
  6769                           	psect	text20
  6770   0038A6                     __ptext20:
  6771                           	callstack 0
  6772   0038A6                     _fputs:
  6773                           	callstack 23
  6774   0038A6  0E00               	movlw	0
  6775   0038A8  6E10               	movwf	(fputs@i+1)^0,c
  6776   0038AA  0E00               	movlw	0
  6777   0038AC  6E0F               	movwf	fputs@i^0,c
  6778   0038AE  EF64  F01C         	goto	l2969
  6779   0038B2                     l2965:
  6780   0038B2  C00E  F001         	movff	fputs@c,fputc@c
  6781   0038B6  6A02               	clrf	(fputc@c+1)^0,c
  6782   0038B8  C00C  F003         	movff	fputs@fp,fputc@fp
  6783   0038BC  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  6784   0038C0  ECB6  F019         	call	_fputc	;wreg free
  6785   0038C4  4A0F               	infsnz	fputs@i^0,f,c
  6786   0038C6  2A10               	incf	(fputs@i+1)^0,f,c
  6787   0038C8                     l2969:
  6788   0038C8  500F               	movf	fputs@i^0,w,c
  6789   0038CA  240A               	addwf	fputs@s^0,w,c
  6790   0038CC  6ED9               	movwf	fsr2l,c
  6791   0038CE  5010               	movf	(fputs@i+1)^0,w,c
  6792   0038D0  200B               	addwfc	(fputs@s+1)^0,w,c
  6793   0038D2  6EDA               	movwf	fsr2h,c
  6794   0038D4  50DF               	movf	indf2,w,c
  6795   0038D6  6E0E               	movwf	fputs@c^0,c
  6796   0038D8  500E               	movf	fputs@c^0,w,c
  6797   0038DA  A4D8               	btfss	status,2,c
  6798   0038DC  EF72  F01C         	goto	u2701
  6799   0038E0  EF74  F01C         	goto	u2700
  6800   0038E4                     u2701:
  6801   0038E4  EF59  F01C         	goto	l2965
  6802   0038E8                     u2700:
  6803   0038E8  0012               	return		;funcret
  6804   0038EA                     __end_of_fputs:
  6805                           	callstack 0
  6806                           
  6807 ;; *************** function _fputc *****************
  6808 ;; Defined at:
  6809 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  6810 ;; Parameters:    Size  Location     Type
  6811 ;;  c               2    0[COMRAM] int 
  6812 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  6813 ;;		 -> sprintf@f(11), 
  6814 ;; Auto vars:     Size  Location     Type
  6815 ;;		None
  6816 ;; Return value:  Size  Location     Type
  6817 ;;                  2    0[COMRAM] int 
  6818 ;; Registers used:
  6819 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6820 ;; Tracked objects:
  6821 ;;		On entry : 0/0
  6822 ;;		On exit  : 0/0
  6823 ;;		Unchanged: 0/0
  6824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6825 ;;      Params:         4       0       0       0       0       0       0       0       0
  6826 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6827 ;;      Temps:          5       0       0       0       0       0       0       0       0
  6828 ;;      Totals:         9       0       0       0       0       0       0       0       0
  6829 ;;Total ram usage:        9 bytes
  6830 ;; Hardware stack levels used: 1
  6831 ;; Hardware stack levels required when called: 1
  6832 ;; This function calls:
  6833 ;;		_putch
  6834 ;; This function is called by:
  6835 ;;		_pad
  6836 ;;		_vfpfcnvrt
  6837 ;;		_fputs
  6838 ;; This function uses a non-reentrant model
  6839 ;;
  6840                           
  6841                           	psect	text21
  6842   00336C                     __ptext21:
  6843                           	callstack 0
  6844   00336C                     _fputc:
  6845                           	callstack 26
  6846   00336C  5003               	movf	fputc@fp^0,w,c
  6847   00336E  1004               	iorwf	(fputc@fp+1)^0,w,c
  6848   003370  B4D8               	btfsc	status,2,c
  6849   003372  EFBD  F019         	goto	u2271
  6850   003376  EFBF  F019         	goto	u2270
  6851   00337A                     u2271:
  6852   00337A  EFC8  F019         	goto	l2751
  6853   00337E                     u2270:
  6854   00337E  5003               	movf	fputc@fp^0,w,c
  6855   003380  1004               	iorwf	(fputc@fp+1)^0,w,c
  6856   003382  A4D8               	btfss	status,2,c
  6857   003384  EFC6  F019         	goto	u2281
  6858   003388  EFC8  F019         	goto	u2280
  6859   00338C                     u2281:
  6860   00338C  EFCD  F019         	goto	l2753
  6861   003390                     u2280:
  6862   003390                     l2751:
  6863   003390  5001               	movf	fputc@c^0,w,c
  6864   003392  EC9F  F01D         	call	_putch
  6865   003396  EF1A  F01A         	goto	l1072
  6866   00339A                     l2753:
  6867   00339A  EE20 F009          	lfsr	2,9
  6868   00339E  5003               	movf	fputc@fp^0,w,c
  6869   0033A0  26D9               	addwf	fsr2l,f,c
  6870   0033A2  5004               	movf	(fputc@fp+1)^0,w,c
  6871   0033A4  22DA               	addwfc	fsr2h,f,c
  6872   0033A6  50DE               	movf	postinc2,w,c
  6873   0033A8  10DE               	iorwf	postinc2,w,c
  6874   0033AA  B4D8               	btfsc	status,2,c
  6875   0033AC  EFDA  F019         	goto	u2291
  6876   0033B0  EFDC  F019         	goto	u2290
  6877   0033B4                     u2291:
  6878   0033B4  EFF7  F019         	goto	l2757
  6879   0033B8                     u2290:
  6880   0033B8  EE20 F009          	lfsr	2,9
  6881   0033BC  5003               	movf	fputc@fp^0,w,c
  6882   0033BE  26D9               	addwf	fsr2l,f,c
  6883   0033C0  5004               	movf	(fputc@fp+1)^0,w,c
  6884   0033C2  22DA               	addwfc	fsr2h,f,c
  6885   0033C4  EE10 F003          	lfsr	1,3
  6886   0033C8  5003               	movf	fputc@fp^0,w,c
  6887   0033CA  26E1               	addwf	fsr1l,f,c
  6888   0033CC  5004               	movf	(fputc@fp+1)^0,w,c
  6889   0033CE  22E2               	addwfc	fsr1h,f,c
  6890   0033D0  50DE               	movf	postinc2,w,c
  6891   0033D2  5CE6               	subwf	postinc1,w,c
  6892   0033D4  50E6               	movf	postinc1,w,c
  6893   0033D6  0A80               	xorlw	128
  6894   0033D8  6E09               	movwf	(??_fputc+4)^0,c
  6895   0033DA  50DE               	movf	postinc2,w,c
  6896   0033DC  0A80               	xorlw	128
  6897   0033DE  5809               	subwfb	(??_fputc+4)^0,w,c
  6898   0033E0  B0D8               	btfsc	status,0,c
  6899   0033E2  EFF5  F019         	goto	u2301
  6900   0033E6  EFF7  F019         	goto	u2300
  6901   0033EA                     u2301:
  6902   0033EA  EF1A  F01A         	goto	l1072
  6903   0033EE                     u2300:
  6904   0033EE                     l2757:
  6905   0033EE  EE20 F003          	lfsr	2,3
  6906   0033F2  5003               	movf	fputc@fp^0,w,c
  6907   0033F4  26D9               	addwf	fsr2l,f,c
  6908   0033F6  5004               	movf	(fputc@fp+1)^0,w,c
  6909   0033F8  22DA               	addwfc	fsr2h,f,c
  6910   0033FA  CFDE F005          	movff	postinc2,??_fputc
  6911   0033FE  CFDD F006          	movff	postdec2,??_fputc+1
  6912   003402  C003  FFD9         	movff	fputc@fp,fsr2l
  6913   003406  C004  FFDA         	movff	fputc@fp+1,fsr2h
  6914   00340A  CFDE F007          	movff	postinc2,??_fputc+2
  6915   00340E  CFDD F008          	movff	postdec2,??_fputc+3
  6916   003412  5005               	movf	??_fputc^0,w,c
  6917   003414  2407               	addwf	(??_fputc+2)^0,w,c
  6918   003416  6ED9               	movwf	fsr2l,c
  6919   003418  5006               	movf	(??_fputc+1)^0,w,c
  6920   00341A  2008               	addwfc	(??_fputc+3)^0,w,c
  6921   00341C  6EDA               	movwf	fsr2h,c
  6922   00341E  C001  FFDF         	movff	fputc@c,indf2
  6923   003422  EE20 F003          	lfsr	2,3
  6924   003426  5003               	movf	fputc@fp^0,w,c
  6925   003428  26D9               	addwf	fsr2l,f,c
  6926   00342A  5004               	movf	(fputc@fp+1)^0,w,c
  6927   00342C  22DA               	addwfc	fsr2h,f,c
  6928   00342E  2ADE               	incf	postinc2,f,c
  6929   003430  0E00               	movlw	0
  6930   003432  22DD               	addwfc	postdec2,f,c
  6931   003434                     l1072:
  6932   003434  0012               	return		;funcret
  6933   003436                     __end_of_fputc:
  6934                           	callstack 0
  6935                           
  6936 ;; *************** function _putch *****************
  6937 ;; Defined at:
  6938 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  6939 ;; Parameters:    Size  Location     Type
  6940 ;;  c               1    wreg     unsigned char 
  6941 ;; Auto vars:     Size  Location     Type
  6942 ;;  c               1    0[COMRAM] unsigned char 
  6943 ;; Return value:  Size  Location     Type
  6944 ;;                  1    wreg      void 
  6945 ;; Registers used:
  6946 ;;		wreg
  6947 ;; Tracked objects:
  6948 ;;		On entry : 0/0
  6949 ;;		On exit  : 0/0
  6950 ;;		Unchanged: 0/0
  6951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6952 ;;      Params:         0       0       0       0       0       0       0       0       0
  6953 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6954 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6955 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6956 ;;Total ram usage:        0 bytes
  6957 ;; Hardware stack levels used: 1
  6958 ;; This function calls:
  6959 ;;		Nothing
  6960 ;; This function is called by:
  6961 ;;		_fputc
  6962 ;; This function uses a non-reentrant model
  6963 ;;
  6964                           
  6965                           	psect	text22
  6966   003B3E                     __ptext22:
  6967                           	callstack 0
  6968   003B3E                     _putch:
  6969                           	callstack 26
  6970   003B3E  0012               	return		;funcret
  6971   003B40                     __end_of_putch:
  6972                           	callstack 0
  6973                           
  6974 ;; *************** function _abs *****************
  6975 ;; Defined at:
  6976 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  6977 ;; Parameters:    Size  Location     Type
  6978 ;;  a               2   18[COMRAM] int 
  6979 ;; Auto vars:     Size  Location     Type
  6980 ;;		None
  6981 ;; Return value:  Size  Location     Type
  6982 ;;                  2   18[COMRAM] int 
  6983 ;; Registers used:
  6984 ;;		wreg, status,2, status,0
  6985 ;; Tracked objects:
  6986 ;;		On entry : 0/0
  6987 ;;		On exit  : 0/0
  6988 ;;		Unchanged: 0/0
  6989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6990 ;;      Params:         2       0       0       0       0       0       0       0       0
  6991 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6992 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6993 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6994 ;;Total ram usage:        4 bytes
  6995 ;; Hardware stack levels used: 1
  6996 ;; This function calls:
  6997 ;;		Nothing
  6998 ;; This function is called by:
  6999 ;;		_dtoa
  7000 ;; This function uses a non-reentrant model
  7001 ;;
  7002                           
  7003                           	psect	text23
  7004   00392A                     __ptext23:
  7005                           	callstack 0
  7006   00392A                     _abs:
  7007                           	callstack 26
  7008   00392A  BE14               	btfsc	(abs@a+1)^0,7,c
  7009   00392C  EFA2  F01C         	goto	u3460
  7010   003930  5014               	movf	(abs@a+1)^0,w,c
  7011   003932  E106               	bnz	u3461
  7012   003934  0413               	decf	abs@a^0,w,c
  7013   003936  B0D8               	btfsc	status,0,c
  7014   003938  EFA0  F01C         	goto	u3461
  7015   00393C  EFA2  F01C         	goto	u3460
  7016   003940                     u3461:
  7017   003940  EFB0  F01C         	goto	l992
  7018   003944                     u3460:
  7019   003944  C013  F015         	movff	abs@a,??_abs
  7020   003948  C014  F016         	movff	abs@a+1,??_abs+1
  7021   00394C  1E15               	comf	??_abs^0,f,c
  7022   00394E  1E16               	comf	(??_abs+1)^0,f,c
  7023   003950  4A15               	infsnz	??_abs^0,f,c
  7024   003952  2A16               	incf	(??_abs+1)^0,f,c
  7025   003954  C015  F013         	movff	??_abs,?_abs
  7026   003958  C016  F014         	movff	??_abs+1,?_abs+1
  7027   00395C  EFB4  F01C         	goto	l995
  7028   003960                     l992:
  7029   003960  C013  F013         	movff	abs@a,?_abs
  7030   003964  C014  F014         	movff	abs@a+1,?_abs+1
  7031   003968                     l995:
  7032   003968  0012               	return		;funcret
  7033   00396A                     __end_of_abs:
  7034                           	callstack 0
  7035                           
  7036 ;; *************** function ___aomod *****************
  7037 ;; Defined at:
  7038 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  7039 ;; Parameters:    Size  Location     Type
  7040 ;;  dividend        8    0[COMRAM] long long 
  7041 ;;  divisor         8    8[COMRAM] long long 
  7042 ;; Auto vars:     Size  Location     Type
  7043 ;;  sign            1   17[COMRAM] unsigned char 
  7044 ;;  counter         1   16[COMRAM] unsigned char 
  7045 ;; Return value:  Size  Location     Type
  7046 ;;                  8    0[COMRAM] long long 
  7047 ;; Registers used:
  7048 ;;		wreg, status,2, status,0
  7049 ;; Tracked objects:
  7050 ;;		On entry : 0/0
  7051 ;;		On exit  : 0/0
  7052 ;;		Unchanged: 0/0
  7053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7054 ;;      Params:        16       0       0       0       0       0       0       0       0
  7055 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7056 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7057 ;;      Totals:        18       0       0       0       0       0       0       0       0
  7058 ;;Total ram usage:       18 bytes
  7059 ;; Hardware stack levels used: 1
  7060 ;; This function calls:
  7061 ;;		Nothing
  7062 ;; This function is called by:
  7063 ;;		_dtoa
  7064 ;; This function uses a non-reentrant model
  7065 ;;
  7066                           
  7067                           	psect	text24
  7068   002DB6                     __ptext24:
  7069                           	callstack 0
  7070   002DB6                     ___aomod:
  7071                           	callstack 26
  7072   002DB6  0E00               	movlw	0
  7073   002DB8  6E12               	movwf	___aomod@sign^0,c
  7074   002DBA  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  7075   002DBC  EFE4  F016         	goto	u2780
  7076   002DC0  EFE2  F016         	goto	u2781
  7077   002DC4                     u2781:
  7078   002DC4  EFF6  F016         	goto	l3029
  7079   002DC8                     u2780:
  7080   002DC8  1E08               	comf	(___aomod@dividend+7)^0,f,c
  7081   002DCA  1E07               	comf	(___aomod@dividend+6)^0,f,c
  7082   002DCC  1E06               	comf	(___aomod@dividend+5)^0,f,c
  7083   002DCE  1E05               	comf	(___aomod@dividend+4)^0,f,c
  7084   002DD0  1E04               	comf	(___aomod@dividend+3)^0,f,c
  7085   002DD2  1E03               	comf	(___aomod@dividend+2)^0,f,c
  7086   002DD4  1E02               	comf	(___aomod@dividend+1)^0,f,c
  7087   002DD6  6C01               	negf	___aomod@dividend^0,c
  7088   002DD8  0E00               	movlw	0
  7089   002DDA  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  7090   002DDC  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  7091   002DDE  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  7092   002DE0  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  7093   002DE2  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  7094   002DE4  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  7095   002DE6  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  7096   002DE8  0E01               	movlw	1
  7097   002DEA  6E12               	movwf	___aomod@sign^0,c
  7098   002DEC                     l3029:
  7099   002DEC  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  7100   002DEE  EFFD  F016         	goto	u2790
  7101   002DF2  EFFB  F016         	goto	u2791
  7102   002DF6                     u2791:
  7103   002DF6  EF0D  F017         	goto	l3033
  7104   002DFA                     u2790:
  7105   002DFA  1E10               	comf	(___aomod@divisor+7)^0,f,c
  7106   002DFC  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  7107   002DFE  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  7108   002E00  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  7109   002E02  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  7110   002E04  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  7111   002E06  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  7112   002E08  6C09               	negf	___aomod@divisor^0,c
  7113   002E0A  0E00               	movlw	0
  7114   002E0C  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  7115   002E0E  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  7116   002E10  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  7117   002E12  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  7118   002E14  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  7119   002E16  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  7120   002E18  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  7121   002E1A                     l3033:
  7122   002E1A  5009               	movf	___aomod@divisor^0,w,c
  7123   002E1C  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  7124   002E1E  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  7125   002E20  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  7126   002E22  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  7127   002E24  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  7128   002E26  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  7129   002E28  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  7130   002E2A  B4D8               	btfsc	status,2,c
  7131   002E2C  EF1A  F017         	goto	u2801
  7132   002E30  EF1C  F017         	goto	u2800
  7133   002E34                     u2801:
  7134   002E34  EF64  F017         	goto	l3049
  7135   002E38                     u2800:
  7136   002E38  0E01               	movlw	1
  7137   002E3A  6E11               	movwf	___aomod@counter^0,c
  7138   002E3C  EF2A  F017         	goto	l3039
  7139   002E40                     l3037:
  7140   002E40  90D8               	bcf	status,0,c
  7141   002E42  3609               	rlcf	___aomod@divisor^0,f,c
  7142   002E44  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  7143   002E46  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  7144   002E48  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  7145   002E4A  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  7146   002E4C  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  7147   002E4E  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  7148   002E50  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  7149   002E52  2A11               	incf	___aomod@counter^0,f,c
  7150   002E54                     l3039:
  7151   002E54  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  7152   002E56  EF2F  F017         	goto	u2811
  7153   002E5A  EF31  F017         	goto	u2810
  7154   002E5E                     u2811:
  7155   002E5E  EF20  F017         	goto	l3037
  7156   002E62                     u2810:
  7157   002E62                     l3041:
  7158   002E62  5009               	movf	___aomod@divisor^0,w,c
  7159   002E64  5C01               	subwf	___aomod@dividend^0,w,c
  7160   002E66  500A               	movf	(___aomod@divisor+1)^0,w,c
  7161   002E68  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  7162   002E6A  500B               	movf	(___aomod@divisor+2)^0,w,c
  7163   002E6C  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  7164   002E6E  500C               	movf	(___aomod@divisor+3)^0,w,c
  7165   002E70  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  7166   002E72  500D               	movf	(___aomod@divisor+4)^0,w,c
  7167   002E74  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  7168   002E76  500E               	movf	(___aomod@divisor+5)^0,w,c
  7169   002E78  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  7170   002E7A  500F               	movf	(___aomod@divisor+6)^0,w,c
  7171   002E7C  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  7172   002E7E  5010               	movf	(___aomod@divisor+7)^0,w,c
  7173   002E80  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  7174   002E82  A0D8               	btfss	status,0,c
  7175   002E84  EF46  F017         	goto	u2821
  7176   002E88  EF48  F017         	goto	u2820
  7177   002E8C                     u2821:
  7178   002E8C  EF58  F017         	goto	l3045
  7179   002E90                     u2820:
  7180   002E90  5009               	movf	___aomod@divisor^0,w,c
  7181   002E92  5E01               	subwf	___aomod@dividend^0,f,c
  7182   002E94  500A               	movf	(___aomod@divisor+1)^0,w,c
  7183   002E96  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  7184   002E98  500B               	movf	(___aomod@divisor+2)^0,w,c
  7185   002E9A  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  7186   002E9C  500C               	movf	(___aomod@divisor+3)^0,w,c
  7187   002E9E  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  7188   002EA0  500D               	movf	(___aomod@divisor+4)^0,w,c
  7189   002EA2  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  7190   002EA4  500E               	movf	(___aomod@divisor+5)^0,w,c
  7191   002EA6  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  7192   002EA8  500F               	movf	(___aomod@divisor+6)^0,w,c
  7193   002EAA  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  7194   002EAC  5010               	movf	(___aomod@divisor+7)^0,w,c
  7195   002EAE  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  7196   002EB0                     l3045:
  7197   002EB0  90D8               	bcf	status,0,c
  7198   002EB2  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  7199   002EB4  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  7200   002EB6  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  7201   002EB8  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  7202   002EBA  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  7203   002EBC  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  7204   002EBE  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  7205   002EC0  3209               	rrcf	___aomod@divisor^0,f,c
  7206   002EC2  2E11               	decfsz	___aomod@counter^0,f,c
  7207   002EC4  EF31  F017         	goto	l3041
  7208   002EC8                     l3049:
  7209   002EC8  5012               	movf	___aomod@sign^0,w,c
  7210   002ECA  B4D8               	btfsc	status,2,c
  7211   002ECC  EF6A  F017         	goto	u2831
  7212   002ED0  EF6C  F017         	goto	u2830
  7213   002ED4                     u2831:
  7214   002ED4  EF7C  F017         	goto	l3053
  7215   002ED8                     u2830:
  7216   002ED8  1E08               	comf	(___aomod@dividend+7)^0,f,c
  7217   002EDA  1E07               	comf	(___aomod@dividend+6)^0,f,c
  7218   002EDC  1E06               	comf	(___aomod@dividend+5)^0,f,c
  7219   002EDE  1E05               	comf	(___aomod@dividend+4)^0,f,c
  7220   002EE0  1E04               	comf	(___aomod@dividend+3)^0,f,c
  7221   002EE2  1E03               	comf	(___aomod@dividend+2)^0,f,c
  7222   002EE4  1E02               	comf	(___aomod@dividend+1)^0,f,c
  7223   002EE6  6C01               	negf	___aomod@dividend^0,c
  7224   002EE8  0E00               	movlw	0
  7225   002EEA  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  7226   002EEC  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  7227   002EEE  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  7228   002EF0  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  7229   002EF2  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  7230   002EF4  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  7231   002EF6  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  7232   002EF8                     l3053:
  7233   002EF8  C001  F001         	movff	___aomod@dividend,?___aomod
  7234   002EFC  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  7235   002F00  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  7236   002F04  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  7237   002F08  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  7238   002F0C  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  7239   002F10  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  7240   002F14  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  7241   002F18  0012               	return		;funcret
  7242   002F1A                     __end_of___aomod:
  7243                           	callstack 0
  7244                           
  7245 ;; *************** function ___aodiv *****************
  7246 ;; Defined at:
  7247 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  7248 ;; Parameters:    Size  Location     Type
  7249 ;;  dividend        8    0[COMRAM] long long 
  7250 ;;  divisor         8    8[COMRAM] long long 
  7251 ;; Auto vars:     Size  Location     Type
  7252 ;;  quotient        8   18[COMRAM] long long 
  7253 ;;  sign            1   17[COMRAM] unsigned char 
  7254 ;;  counter         1   16[COMRAM] unsigned char 
  7255 ;; Return value:  Size  Location     Type
  7256 ;;                  8    0[COMRAM] long long 
  7257 ;; Registers used:
  7258 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7259 ;; Tracked objects:
  7260 ;;		On entry : 0/0
  7261 ;;		On exit  : 0/0
  7262 ;;		Unchanged: 0/0
  7263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7264 ;;      Params:        16       0       0       0       0       0       0       0       0
  7265 ;;      Locals:        10       0       0       0       0       0       0       0       0
  7266 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7267 ;;      Totals:        26       0       0       0       0       0       0       0       0
  7268 ;;Total ram usage:       26 bytes
  7269 ;; Hardware stack levels used: 1
  7270 ;; This function calls:
  7271 ;;		Nothing
  7272 ;; This function is called by:
  7273 ;;		_dtoa
  7274 ;; This function uses a non-reentrant model
  7275 ;;
  7276                           
  7277                           	psect	text25
  7278   002AC6                     __ptext25:
  7279                           	callstack 0
  7280   002AC6                     ___aodiv:
  7281                           	callstack 26
  7282   002AC6  0E00               	movlw	0
  7283   002AC8  6E12               	movwf	___aodiv@sign^0,c
  7284   002ACA  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  7285   002ACC  EF6C  F015         	goto	u2710
  7286   002AD0  EF6A  F015         	goto	u2711
  7287   002AD4                     u2711:
  7288   002AD4  EF7E  F015         	goto	l2985
  7289   002AD8                     u2710:
  7290   002AD8  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  7291   002ADA  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  7292   002ADC  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  7293   002ADE  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  7294   002AE0  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  7295   002AE2  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  7296   002AE4  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  7297   002AE6  6C09               	negf	___aodiv@divisor^0,c
  7298   002AE8  0E00               	movlw	0
  7299   002AEA  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  7300   002AEC  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  7301   002AEE  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  7302   002AF0  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  7303   002AF2  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  7304   002AF4  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  7305   002AF6  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  7306   002AF8  0E01               	movlw	1
  7307   002AFA  6E12               	movwf	___aodiv@sign^0,c
  7308   002AFC                     l2985:
  7309   002AFC  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  7310   002AFE  EF85  F015         	goto	u2720
  7311   002B02  EF83  F015         	goto	u2721
  7312   002B06                     u2721:
  7313   002B06  EF97  F015         	goto	l2991
  7314   002B0A                     u2720:
  7315   002B0A  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  7316   002B0C  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  7317   002B0E  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  7318   002B10  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  7319   002B12  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  7320   002B14  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  7321   002B16  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  7322   002B18  6C01               	negf	___aodiv@dividend^0,c
  7323   002B1A  0E00               	movlw	0
  7324   002B1C  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  7325   002B1E  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  7326   002B20  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  7327   002B22  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  7328   002B24  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  7329   002B26  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  7330   002B28  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  7331   002B2A  0E01               	movlw	1
  7332   002B2C  1A12               	xorwf	___aodiv@sign^0,f,c
  7333   002B2E                     l2991:
  7334   002B2E  EE20  F013         	lfsr	2,___aodiv@quotient
  7335   002B32  0E07               	movlw	7
  7336   002B34                     u2731:
  7337   002B34  6ADE               	clrf	postinc2,c
  7338   002B36  06E8               	decf	wreg,f,c
  7339   002B38  E2FD               	bc	u2731
  7340   002B3A  5009               	movf	___aodiv@divisor^0,w,c
  7341   002B3C  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  7342   002B3E  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  7343   002B40  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  7344   002B42  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  7345   002B44  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  7346   002B46  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  7347   002B48  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  7348   002B4A  B4D8               	btfsc	status,2,c
  7349   002B4C  EFAA  F015         	goto	u2741
  7350   002B50  EFAC  F015         	goto	u2740
  7351   002B54                     u2741:
  7352   002B54  EFFE  F015         	goto	l3013
  7353   002B58                     u2740:
  7354   002B58  0E01               	movlw	1
  7355   002B5A  6E11               	movwf	___aodiv@counter^0,c
  7356   002B5C  EFBA  F015         	goto	l2999
  7357   002B60                     l2997:
  7358   002B60  90D8               	bcf	status,0,c
  7359   002B62  3609               	rlcf	___aodiv@divisor^0,f,c
  7360   002B64  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  7361   002B66  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  7362   002B68  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  7363   002B6A  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  7364   002B6C  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  7365   002B6E  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  7366   002B70  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  7367   002B72  2A11               	incf	___aodiv@counter^0,f,c
  7368   002B74                     l2999:
  7369   002B74  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  7370   002B76  EFBF  F015         	goto	u2751
  7371   002B7A  EFC1  F015         	goto	u2750
  7372   002B7E                     u2751:
  7373   002B7E  EFB0  F015         	goto	l2997
  7374   002B82                     u2750:
  7375   002B82                     l3001:
  7376   002B82  90D8               	bcf	status,0,c
  7377   002B84  3613               	rlcf	___aodiv@quotient^0,f,c
  7378   002B86  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  7379   002B88  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  7380   002B8A  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  7381   002B8C  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  7382   002B8E  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  7383   002B90  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  7384   002B92  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  7385   002B94  5009               	movf	___aodiv@divisor^0,w,c
  7386   002B96  5C01               	subwf	___aodiv@dividend^0,w,c
  7387   002B98  500A               	movf	(___aodiv@divisor+1)^0,w,c
  7388   002B9A  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  7389   002B9C  500B               	movf	(___aodiv@divisor+2)^0,w,c
  7390   002B9E  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  7391   002BA0  500C               	movf	(___aodiv@divisor+3)^0,w,c
  7392   002BA2  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  7393   002BA4  500D               	movf	(___aodiv@divisor+4)^0,w,c
  7394   002BA6  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  7395   002BA8  500E               	movf	(___aodiv@divisor+5)^0,w,c
  7396   002BAA  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  7397   002BAC  500F               	movf	(___aodiv@divisor+6)^0,w,c
  7398   002BAE  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  7399   002BB0  5010               	movf	(___aodiv@divisor+7)^0,w,c
  7400   002BB2  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  7401   002BB4  A0D8               	btfss	status,0,c
  7402   002BB6  EFDF  F015         	goto	u2761
  7403   002BBA  EFE1  F015         	goto	u2760
  7404   002BBE                     u2761:
  7405   002BBE  EFF2  F015         	goto	l3009
  7406   002BC2                     u2760:
  7407   002BC2  5009               	movf	___aodiv@divisor^0,w,c
  7408   002BC4  5E01               	subwf	___aodiv@dividend^0,f,c
  7409   002BC6  500A               	movf	(___aodiv@divisor+1)^0,w,c
  7410   002BC8  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  7411   002BCA  500B               	movf	(___aodiv@divisor+2)^0,w,c
  7412   002BCC  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  7413   002BCE  500C               	movf	(___aodiv@divisor+3)^0,w,c
  7414   002BD0  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  7415   002BD2  500D               	movf	(___aodiv@divisor+4)^0,w,c
  7416   002BD4  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  7417   002BD6  500E               	movf	(___aodiv@divisor+5)^0,w,c
  7418   002BD8  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  7419   002BDA  500F               	movf	(___aodiv@divisor+6)^0,w,c
  7420   002BDC  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  7421   002BDE  5010               	movf	(___aodiv@divisor+7)^0,w,c
  7422   002BE0  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  7423   002BE2  8013               	bsf	___aodiv@quotient^0,0,c
  7424   002BE4                     l3009:
  7425   002BE4  90D8               	bcf	status,0,c
  7426   002BE6  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  7427   002BE8  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  7428   002BEA  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  7429   002BEC  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  7430   002BEE  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  7431   002BF0  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  7432   002BF2  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  7433   002BF4  3209               	rrcf	___aodiv@divisor^0,f,c
  7434   002BF6  2E11               	decfsz	___aodiv@counter^0,f,c
  7435   002BF8  EFC1  F015         	goto	l3001
  7436   002BFC                     l3013:
  7437   002BFC  5012               	movf	___aodiv@sign^0,w,c
  7438   002BFE  B4D8               	btfsc	status,2,c
  7439   002C00  EF04  F016         	goto	u2771
  7440   002C04  EF06  F016         	goto	u2770
  7441   002C08                     u2771:
  7442   002C08  EF16  F016         	goto	l3017
  7443   002C0C                     u2770:
  7444   002C0C  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  7445   002C0E  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  7446   002C10  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  7447   002C12  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  7448   002C14  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  7449   002C16  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  7450   002C18  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  7451   002C1A  6C13               	negf	___aodiv@quotient^0,c
  7452   002C1C  0E00               	movlw	0
  7453   002C1E  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  7454   002C20  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  7455   002C22  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  7456   002C24  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  7457   002C26  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  7458   002C28  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  7459   002C2A  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  7460   002C2C                     l3017:
  7461   002C2C  C013  F001         	movff	___aodiv@quotient,?___aodiv
  7462   002C30  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  7463   002C34  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  7464   002C38  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  7465   002C3C  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  7466   002C40  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  7467   002C44  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  7468   002C48  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  7469   002C4C  0012               	return		;funcret
  7470   002C4E                     __end_of___aodiv:
  7471                           	callstack 0
  7472                           
  7473 ;; *************** function _atoi *****************
  7474 ;; Defined at:
  7475 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\atoi.c"
  7476 ;; Parameters:    Size  Location     Type
  7477 ;;  s               2    6[COMRAM] PTR const unsigned char 
  7478 ;;		 -> STR_2(17), STR_1(17), 
  7479 ;; Auto vars:     Size  Location     Type
  7480 ;;  n               2   13[COMRAM] int 
  7481 ;;  neg             2   11[COMRAM] int 
  7482 ;; Return value:  Size  Location     Type
  7483 ;;                  2    6[COMRAM] int 
  7484 ;; Registers used:
  7485 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7486 ;; Tracked objects:
  7487 ;;		On entry : 0/0
  7488 ;;		On exit  : 0/0
  7489 ;;		Unchanged: 0/0
  7490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7491 ;;      Params:         2       0       0       0       0       0       0       0       0
  7492 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7493 ;;      Temps:          3       0       0       0       0       0       0       0       0
  7494 ;;      Totals:         9       0       0       0       0       0       0       0       0
  7495 ;;Total ram usage:        9 bytes
  7496 ;; Hardware stack levels used: 1
  7497 ;; Hardware stack levels required when called: 1
  7498 ;; This function calls:
  7499 ;;		___wmul
  7500 ;;		_isdigit
  7501 ;;		_isspace
  7502 ;; This function is called by:
  7503 ;;		_vfpfcnvrt
  7504 ;; This function uses a non-reentrant model
  7505 ;;
  7506                           
  7507                           	psect	text26
  7508   002F1A                     __ptext26:
  7509                           	callstack 0
  7510   002F1A                     _atoi:
  7511                           	callstack 26
  7512   002F1A  0E00               	movlw	0
  7513   002F1C  6E0F               	movwf	(atoi@n+1)^0,c
  7514   002F1E  0E00               	movlw	0
  7515   002F20  6E0E               	movwf	atoi@n^0,c
  7516   002F22  0E00               	movlw	0
  7517   002F24  6E0D               	movwf	(atoi@neg+1)^0,c
  7518   002F26  0E00               	movlw	0
  7519   002F28  6E0C               	movwf	atoi@neg^0,c
  7520   002F2A  EF99  F017         	goto	l3829
  7521   002F2E                     l3825:
  7522   002F2E  4A07               	infsnz	atoi@s^0,f,c
  7523   002F30  2A08               	incf	(atoi@s+1)^0,f,c
  7524   002F32                     l3829:
  7525   002F32  C007  FFF6         	movff	atoi@s,tblptrl
  7526   002F36  C008  FFF7         	movff	atoi@s+1,tblptrh
  7527   002F3A                     	if	0	;tblptru may be non-zero
  7528   002F3A                     	endif
  7529   002F3A                     	if	0	;tblptru may be non-zero
  7530   002F3A                     	endif
  7531   002F3A  0008               	tblrd		*
  7532   002F3C  50F5               	movf	tablat,w,c
  7533   002F3E  0A20               	xorlw	32
  7534   002F40  B4D8               	btfsc	status,2,c
  7535   002F42  EFA5  F017         	goto	u4191
  7536   002F46  EFA7  F017         	goto	u4190
  7537   002F4A                     u4191:
  7538   002F4A  EF97  F017         	goto	l3825
  7539   002F4E                     u4190:
  7540   002F4E  C007  FFF6         	movff	atoi@s,tblptrl
  7541   002F52  C008  FFF7         	movff	atoi@s+1,tblptrh
  7542   002F56                     	if	0	;tblptru may be non-zero
  7543   002F56                     	endif
  7544   002F56                     	if	0	;tblptru may be non-zero
  7545   002F56                     	endif
  7546   002F56  0008               	tblrd		*
  7547   002F58  CFF5 F009          	movff	tablat,??_atoi
  7548   002F5C  0EF7               	movlw	247
  7549   002F5E  2409               	addwf	??_atoi^0,w,c
  7550   002F60  6E0A               	movwf	(??_atoi+1)^0,c
  7551   002F62  6A0B               	clrf	(??_atoi+2)^0,c
  7552   002F64  0EFF               	movlw	255
  7553   002F66  220B               	addwfc	(??_atoi+2)^0,f,c
  7554   002F68  500B               	movf	(??_atoi+2)^0,w,c
  7555   002F6A  E109               	bnz	u4200
  7556   002F6C  0E05               	movlw	5
  7557   002F6E  5C0A               	subwf	(??_atoi+1)^0,w,c
  7558   002F70  A0D8               	btfss	status,0,c
  7559   002F72  EFBD  F017         	goto	u4201
  7560   002F76  EFBF  F017         	goto	u4200
  7561   002F7A                     u4201:
  7562   002F7A  EF97  F017         	goto	l3825
  7563   002F7E                     u4200:
  7564   002F7E  EFC9  F017         	goto	l3837
  7565   002F82                     l3833:
  7566   002F82  0E00               	movlw	0
  7567   002F84  6E0D               	movwf	(atoi@neg+1)^0,c
  7568   002F86  0E01               	movlw	1
  7569   002F88  6E0C               	movwf	atoi@neg^0,c
  7570   002F8A                     l3835:
  7571   002F8A  4A07               	infsnz	atoi@s^0,f,c
  7572   002F8C  2A08               	incf	(atoi@s+1)^0,f,c
  7573   002F8E  EFFE  F017         	goto	l3845
  7574   002F92                     l3837:
  7575   002F92  C007  FFF6         	movff	atoi@s,tblptrl
  7576   002F96  C008  FFF7         	movff	atoi@s+1,tblptrh
  7577   002F9A                     	if	0	;tblptru may be non-zero
  7578   002F9A                     	endif
  7579   002F9A                     	if	0	;tblptru may be non-zero
  7580   002F9A                     	endif
  7581   002F9A  0008               	tblrd		*
  7582   002F9C  50F5               	movf	tablat,w,c
  7583   002F9E  6E09               	movwf	??_atoi^0,c
  7584   002FA0  6A0A               	clrf	(??_atoi+1)^0,c
  7585                           
  7586                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7587                           ; Switch size 1, requested type "simple"
  7588                           ; Number of cases is 1, Range of values is 0 to 0
  7589                           ; switch strategies available:
  7590                           ; Name         Instructions Cycles
  7591                           ; simple_byte            4     3 (average)
  7592                           ;	Chosen strategy is simple_byte
  7593   002FA2  500A               	movf	(??_atoi+1)^0,w,c
  7594   002FA4  0A00               	xorlw	0	; case 0
  7595   002FA6  B4D8               	btfsc	status,2,c
  7596   002FA8  EFD8  F017         	goto	l4315
  7597   002FAC  EFFE  F017         	goto	l3845
  7598   002FB0                     l4315:
  7599                           
  7600                           ; Switch size 1, requested type "simple"
  7601                           ; Number of cases is 2, Range of values is 43 to 45
  7602                           ; switch strategies available:
  7603                           ; Name         Instructions Cycles
  7604                           ; simple_byte            7     4 (average)
  7605                           ;	Chosen strategy is simple_byte
  7606   002FB0  5009               	movf	??_atoi^0,w,c
  7607   002FB2  0A2B               	xorlw	43	; case 43
  7608   002FB4  B4D8               	btfsc	status,2,c
  7609   002FB6  EFC5  F017         	goto	l3835
  7610   002FBA  0A06               	xorlw	6	; case 45
  7611   002FBC  B4D8               	btfsc	status,2,c
  7612   002FBE  EFC1  F017         	goto	l3833
  7613   002FC2  EFFE  F017         	goto	l3845
  7614   002FC6                     l3839:
  7615   002FC6  C00E  F001         	movff	atoi@n,___wmul@multiplier
  7616   002FCA  C00F  F002         	movff	atoi@n+1,___wmul@multiplier+1
  7617   002FCE  0E00               	movlw	0
  7618   002FD0  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7619   002FD2  0E0A               	movlw	10
  7620   002FD4  6E03               	movwf	___wmul@multiplicand^0,c
  7621   002FD6  EC3F  F01D         	call	___wmul	;wreg free
  7622   002FDA  C007  FFF6         	movff	atoi@s,tblptrl
  7623   002FDE  C008  FFF7         	movff	atoi@s+1,tblptrh
  7624   002FE2                     	if	0	;tblptru may be non-zero
  7625   002FE2                     	endif
  7626   002FE2                     	if	0	;tblptru may be non-zero
  7627   002FE2                     	endif
  7628   002FE2  0008               	tblrd		*
  7629   002FE4  50F5               	movf	tablat,w,c
  7630   002FE6  5E01               	subwf	?___wmul^0,f,c
  7631   002FE8  0E00               	movlw	0
  7632   002FEA  5A02               	subwfb	(?___wmul+1)^0,f,c
  7633   002FEC  0E30               	movlw	48
  7634   002FEE  2401               	addwf	?___wmul^0,w,c
  7635   002FF0  6E0E               	movwf	atoi@n^0,c
  7636   002FF2  0E00               	movlw	0
  7637   002FF4  2002               	addwfc	(?___wmul+1)^0,w,c
  7638   002FF6  6E0F               	movwf	(atoi@n+1)^0,c
  7639   002FF8  EFC5  F017         	goto	l3835
  7640   002FFC                     l3845:
  7641   002FFC  C007  FFF6         	movff	atoi@s,tblptrl
  7642   003000  C008  FFF7         	movff	atoi@s+1,tblptrh
  7643   003004                     	if	0	;tblptru may be non-zero
  7644   003004                     	endif
  7645   003004                     	if	0	;tblptru may be non-zero
  7646   003004                     	endif
  7647   003004  0008               	tblrd		*
  7648   003006  CFF5 F009          	movff	tablat,??_atoi
  7649   00300A  0ED0               	movlw	208
  7650   00300C  2409               	addwf	??_atoi^0,w,c
  7651   00300E  6E0A               	movwf	(??_atoi+1)^0,c
  7652   003010  6A0B               	clrf	(??_atoi+2)^0,c
  7653   003012  0EFF               	movlw	255
  7654   003014  220B               	addwfc	(??_atoi+2)^0,f,c
  7655   003016  500B               	movf	(??_atoi+2)^0,w,c
  7656   003018  E109               	bnz	u4210
  7657   00301A  0E0A               	movlw	10
  7658   00301C  5C0A               	subwf	(??_atoi+1)^0,w,c
  7659   00301E  A0D8               	btfss	status,0,c
  7660   003020  EF14  F018         	goto	u4211
  7661   003024  EF16  F018         	goto	u4210
  7662   003028                     u4211:
  7663   003028  EFE3  F017         	goto	l3839
  7664   00302C                     u4210:
  7665   00302C  500C               	movf	atoi@neg^0,w,c
  7666   00302E  100D               	iorwf	(atoi@neg+1)^0,w,c
  7667   003030  A4D8               	btfss	status,2,c
  7668   003032  EF1D  F018         	goto	u4221
  7669   003036  EF1F  F018         	goto	u4220
  7670   00303A                     u4221:
  7671   00303A  EF2D  F018         	goto	l1017
  7672   00303E                     u4220:
  7673   00303E  C00E  F009         	movff	atoi@n,??_atoi
  7674   003042  C00F  F00A         	movff	atoi@n+1,??_atoi+1
  7675   003046  1E09               	comf	??_atoi^0,f,c
  7676   003048  1E0A               	comf	(??_atoi+1)^0,f,c
  7677   00304A  4A09               	infsnz	??_atoi^0,f,c
  7678   00304C  2A0A               	incf	(??_atoi+1)^0,f,c
  7679   00304E  C009  F007         	movff	??_atoi,?_atoi
  7680   003052  C00A  F008         	movff	??_atoi+1,?_atoi+1
  7681   003056  EF31  F018         	goto	l1020
  7682   00305A                     l1017:
  7683   00305A  C00E  F007         	movff	atoi@n,?_atoi
  7684   00305E  C00F  F008         	movff	atoi@n+1,?_atoi+1
  7685   003062                     l1020:
  7686   003062  0012               	return		;funcret
  7687   003064                     __end_of_atoi:
  7688                           	callstack 0
  7689                           
  7690 ;; *************** function _isspace *****************
  7691 ;; Defined at:
  7692 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isspace.c"
  7693 ;; Parameters:    Size  Location     Type
  7694 ;;  c               2    0[COMRAM] int 
  7695 ;; Auto vars:     Size  Location     Type
  7696 ;;		None
  7697 ;; Return value:  Size  Location     Type
  7698 ;;                  2    0[COMRAM] int 
  7699 ;; Registers used:
  7700 ;;		wreg, status,2, status,0
  7701 ;; Tracked objects:
  7702 ;;		On entry : 0/0
  7703 ;;		On exit  : 0/0
  7704 ;;		Unchanged: 0/0
  7705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7706 ;;      Params:         2       0       0       0       0       0       0       0       0
  7707 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7708 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7709 ;;      Totals:         5       0       0       0       0       0       0       0       0
  7710 ;;Total ram usage:        5 bytes
  7711 ;; Hardware stack levels used: 1
  7712 ;; This function calls:
  7713 ;;		Nothing
  7714 ;; This function is called by:
  7715 ;;		_atoi
  7716 ;; This function uses a non-reentrant model
  7717 ;;
  7718                           
  7719                           	psect	text27
  7720   003860                     __ptext27:
  7721                           	callstack 0
  7722   003860                     _isspace:
  7723                           	callstack 26
  7724   003860  0E01               	movlw	1
  7725   003862  6E05               	movwf	_isspace$1129^0,c
  7726   003864  0E20               	movlw	32
  7727   003866  1801               	xorwf	isspace@c^0,w,c
  7728   003868  1002               	iorwf	(isspace@c+1)^0,w,c
  7729   00386A  B4D8               	btfsc	status,2,c
  7730   00386C  EF3A  F01C         	goto	u3691
  7731   003870  EF3C  F01C         	goto	u3690
  7732   003874                     u3691:
  7733   003874  EF4F  F01C         	goto	l3525
  7734   003878                     u3690:
  7735   003878  0EF7               	movlw	247
  7736   00387A  2401               	addwf	isspace@c^0,w,c
  7737   00387C  6E03               	movwf	??_isspace^0,c
  7738   00387E  0EFF               	movlw	255
  7739   003880  2002               	addwfc	(isspace@c+1)^0,w,c
  7740   003882  6E04               	movwf	(??_isspace+1)^0,c
  7741   003884  5004               	movf	(??_isspace+1)^0,w,c
  7742   003886  E109               	bnz	u3700
  7743   003888  0E05               	movlw	5
  7744   00388A  5C03               	subwf	??_isspace^0,w,c
  7745   00388C  A0D8               	btfss	status,0,c
  7746   00388E  EF4B  F01C         	goto	u3701
  7747   003892  EF4D  F01C         	goto	u3700
  7748   003896                     u3701:
  7749   003896  EF4F  F01C         	goto	l3525
  7750   00389A                     u3700:
  7751   00389A  0E00               	movlw	0
  7752   00389C  6E05               	movwf	_isspace$1129^0,c
  7753   00389E                     l3525:
  7754   00389E  C005  F001         	movff	_isspace$1129,?_isspace
  7755   0038A2  6A02               	clrf	(?_isspace+1)^0,c
  7756   0038A4  0012               	return		;funcret
  7757   0038A6                     __end_of_isspace:
  7758                           	callstack 0
  7759                           
  7760 ;; *************** function _isdigit *****************
  7761 ;; Defined at:
  7762 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isdigit.c"
  7763 ;; Parameters:    Size  Location     Type
  7764 ;;  c               2    0[COMRAM] int 
  7765 ;; Auto vars:     Size  Location     Type
  7766 ;;		None
  7767 ;; Return value:  Size  Location     Type
  7768 ;;                  2    0[COMRAM] int 
  7769 ;; Registers used:
  7770 ;;		wreg, status,2, status,0
  7771 ;; Tracked objects:
  7772 ;;		On entry : 0/0
  7773 ;;		On exit  : 0/0
  7774 ;;		Unchanged: 0/0
  7775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7776 ;;      Params:         2       0       0       0       0       0       0       0       0
  7777 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7778 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7779 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7780 ;;Total ram usage:        4 bytes
  7781 ;; Hardware stack levels used: 1
  7782 ;; This function calls:
  7783 ;;		Nothing
  7784 ;; This function is called by:
  7785 ;;		_vfpfcnvrt
  7786 ;;		_atoi
  7787 ;; This function uses a non-reentrant model
  7788 ;;
  7789                           
  7790                           	psect	text28
  7791   003A52                     __ptext28:
  7792                           	callstack 0
  7793   003A52                     _isdigit:
  7794                           	callstack 27
  7795   003A52  0ED0               	movlw	208
  7796   003A54  2401               	addwf	isdigit@c^0,w,c
  7797   003A56  6E03               	movwf	??_isdigit^0,c
  7798   003A58  0EFF               	movlw	255
  7799   003A5A  2002               	addwfc	(isdigit@c+1)^0,w,c
  7800   003A5C  6E04               	movwf	(??_isdigit+1)^0,c
  7801   003A5E  5004               	movf	(??_isdigit+1)^0,w,c
  7802   003A60  E10A               	bnz	u3670
  7803   003A62  0E0A               	movlw	10
  7804   003A64  5C03               	subwf	??_isdigit^0,w,c
  7805   003A66  A0D8               	btfss	status,0,c
  7806   003A68  EF38  F01D         	goto	u3671
  7807   003A6C  EF3B  F01D         	goto	u3670
  7808   003A70                     u3671:
  7809   003A70  0E01               	movlw	1
  7810   003A72  EF3C  F01D         	goto	u3680
  7811   003A76                     u3670:
  7812   003A76  0E00               	movlw	0
  7813   003A78                     u3680:
  7814   003A78  6E01               	movwf	?_isdigit^0,c
  7815   003A7A  6A02               	clrf	(?_isdigit+1)^0,c
  7816   003A7C  0012               	return		;funcret
  7817   003A7E                     __end_of_isdigit:
  7818                           	callstack 0
  7819                           
  7820 ;; *************** function ___wmul *****************
  7821 ;; Defined at:
  7822 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  7823 ;; Parameters:    Size  Location     Type
  7824 ;;  multiplier      2    0[COMRAM] unsigned int 
  7825 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7826 ;; Auto vars:     Size  Location     Type
  7827 ;;  product         2    4[COMRAM] unsigned int 
  7828 ;; Return value:  Size  Location     Type
  7829 ;;                  2    0[COMRAM] unsigned int 
  7830 ;; Registers used:
  7831 ;;		wreg, status,2, status,0, prodl, prodh
  7832 ;; Tracked objects:
  7833 ;;		On entry : 0/0
  7834 ;;		On exit  : 0/0
  7835 ;;		Unchanged: 0/0
  7836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7837 ;;      Params:         4       0       0       0       0       0       0       0       0
  7838 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7839 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7840 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7841 ;;Total ram usage:        6 bytes
  7842 ;; Hardware stack levels used: 1
  7843 ;; This function calls:
  7844 ;;		Nothing
  7845 ;; This function is called by:
  7846 ;;		_atoi
  7847 ;; This function uses a non-reentrant model
  7848 ;;
  7849                           
  7850                           	psect	text29
  7851   003A7E                     __ptext29:
  7852                           	callstack 0
  7853   003A7E                     ___wmul:
  7854                           	callstack 26
  7855   003A7E  5001               	movf	___wmul@multiplier^0,w,c
  7856   003A80  0203               	mulwf	___wmul@multiplicand^0,c
  7857   003A82  CFF3 F005          	movff	prodl,___wmul@product
  7858   003A86  CFF4 F006          	movff	prodh,___wmul@product+1
  7859   003A8A  5001               	movf	___wmul@multiplier^0,w,c
  7860   003A8C  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  7861   003A8E  50F3               	movf	243,w,c
  7862   003A90  2606               	addwf	(___wmul@product+1)^0,f,c
  7863   003A92  5002               	movf	(___wmul@multiplier+1)^0,w,c
  7864   003A94  0203               	mulwf	___wmul@multiplicand^0,c
  7865   003A96  50F3               	movf	243,w,c
  7866   003A98  2606               	addwf	(___wmul@product+1)^0,f,c
  7867   003A9A  C005  F001         	movff	___wmul@product,?___wmul
  7868   003A9E  C006  F002         	movff	___wmul@product+1,?___wmul+1
  7869   003AA2  0012               	return		;funcret
  7870   003AA4                     __end_of___wmul:
  7871                           	callstack 0
  7872                           
  7873 ;; *************** function ___xxtofl *****************
  7874 ;; Defined at:
  7875 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  7876 ;; Parameters:    Size  Location     Type
  7877 ;;  sign            1    wreg     unsigned char 
  7878 ;;  val             4    0[COMRAM] long 
  7879 ;; Auto vars:     Size  Location     Type
  7880 ;;  sign            1    8[COMRAM] unsigned char 
  7881 ;;  arg             4   10[COMRAM] unsigned long 
  7882 ;;  exp             1    9[COMRAM] unsigned char 
  7883 ;; Return value:  Size  Location     Type
  7884 ;;                  4    0[COMRAM] unsigned char 
  7885 ;; Registers used:
  7886 ;;		wreg, status,2, status,0
  7887 ;; Tracked objects:
  7888 ;;		On entry : 0/0
  7889 ;;		On exit  : 0/0
  7890 ;;		Unchanged: 0/0
  7891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7892 ;;      Params:         4       0       0       0       0       0       0       0       0
  7893 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7894 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7895 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7896 ;;Total ram usage:       14 bytes
  7897 ;; Hardware stack levels used: 1
  7898 ;; This function calls:
  7899 ;;		Nothing
  7900 ;; This function is called by:
  7901 ;;		_main
  7902 ;; This function uses a non-reentrant model
  7903 ;;
  7904                           
  7905                           	psect	text30
  7906   002912                     __ptext30:
  7907                           	callstack 0
  7908   002912                     ___xxtofl:
  7909                           	callstack 30
  7910                           
  7911                           ;incstack = 0
  7912                           ;___xxtofl@sign stored from wreg
  7913   002912  6E09               	movwf	___xxtofl@sign^0,c
  7914   002914  5009               	movf	___xxtofl@sign^0,w,c
  7915   002916  B4D8               	btfsc	status,2,c
  7916   002918  EF90  F014         	goto	u4431
  7917   00291C  EF92  F014         	goto	u4430
  7918   002920                     u4431:
  7919   002920  EFB4  F014         	goto	l780
  7920   002924                     u4430:
  7921   002924  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7922   002926  EF99  F014         	goto	u4440
  7923   00292A  EF97  F014         	goto	u4441
  7924   00292E                     u4441:
  7925   00292E  EFB4  F014         	goto	l780
  7926   002932                     u4440:
  7927   002932  C001  F005         	movff	___xxtofl@val,??___xxtofl
  7928   002936  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  7929   00293A  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  7930   00293E  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  7931   002942  1E05               	comf	??___xxtofl^0,f,c
  7932   002944  1E06               	comf	(??___xxtofl+1)^0,f,c
  7933   002946  1E07               	comf	(??___xxtofl+2)^0,f,c
  7934   002948  1E08               	comf	(??___xxtofl+3)^0,f,c
  7935   00294A  2A05               	incf	??___xxtofl^0,f,c
  7936   00294C  0E00               	movlw	0
  7937   00294E  2206               	addwfc	(??___xxtofl+1)^0,f,c
  7938   002950  2207               	addwfc	(??___xxtofl+2)^0,f,c
  7939   002952  2208               	addwfc	(??___xxtofl+3)^0,f,c
  7940   002954  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  7941   002958  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  7942   00295C  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  7943   002960  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  7944   002964  EFBC  F014         	goto	l4137
  7945   002968                     l780:
  7946   002968  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  7947   00296C  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7948   002970  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7949   002974  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7950   002978                     l4137:
  7951   002978  5001               	movf	___xxtofl@val^0,w,c
  7952   00297A  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  7953   00297C  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  7954   00297E  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  7955   002980  A4D8               	btfss	status,2,c
  7956   002982  EFC5  F014         	goto	u4451
  7957   002986  EFC7  F014         	goto	u4450
  7958   00298A                     u4451:
  7959   00298A  EFD1  F014         	goto	l4143
  7960   00298E                     u4450:
  7961   00298E  0E00               	movlw	0
  7962   002990  6E01               	movwf	?___xxtofl^0,c
  7963   002992  0E00               	movlw	0
  7964   002994  6E02               	movwf	(?___xxtofl+1)^0,c
  7965   002996  0E00               	movlw	0
  7966   002998  6E03               	movwf	(?___xxtofl+2)^0,c
  7967   00299A  0E00               	movlw	0
  7968   00299C  6E04               	movwf	(?___xxtofl+3)^0,c
  7969   00299E  EF62  F015         	goto	l783
  7970   0029A2                     l4143:
  7971   0029A2  0E96               	movlw	150
  7972   0029A4  6E0A               	movwf	___xxtofl@exp^0,c
  7973   0029A6  EFDB  F014         	goto	l4147
  7974   0029AA                     l4145:
  7975   0029AA  2A0A               	incf	___xxtofl@exp^0,f,c
  7976   0029AC  90D8               	bcf	status,0,c
  7977   0029AE  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7978   0029B0  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7979   0029B2  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7980   0029B4  320B               	rrcf	___xxtofl@arg^0,f,c
  7981   0029B6                     l4147:
  7982   0029B6  0E00               	movlw	0
  7983   0029B8  140B               	andwf	___xxtofl@arg^0,w,c
  7984   0029BA  6E05               	movwf	??___xxtofl^0,c
  7985   0029BC  0E00               	movlw	0
  7986   0029BE  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7987   0029C0  6E06               	movwf	(??___xxtofl+1)^0,c
  7988   0029C2  0E00               	movlw	0
  7989   0029C4  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7990   0029C6  6E07               	movwf	(??___xxtofl+2)^0,c
  7991   0029C8  0EFE               	movlw	254
  7992   0029CA  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7993   0029CC  6E08               	movwf	(??___xxtofl+3)^0,c
  7994   0029CE  5005               	movf	??___xxtofl^0,w,c
  7995   0029D0  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7996   0029D2  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7997   0029D4  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7998   0029D6  A4D8               	btfss	status,2,c
  7999   0029D8  EFF0  F014         	goto	u4461
  8000   0029DC  EFF2  F014         	goto	u4460
  8001   0029E0                     u4461:
  8002   0029E0  EFD5  F014         	goto	l4145
  8003   0029E4                     u4460:
  8004   0029E4  EF00  F015         	goto	l787
  8005   0029E8                     l4149:
  8006   0029E8  2A0A               	incf	___xxtofl@exp^0,f,c
  8007   0029EA  0E01               	movlw	1
  8008   0029EC  260B               	addwf	___xxtofl@arg^0,f,c
  8009   0029EE  0E00               	movlw	0
  8010   0029F0  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  8011   0029F2  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  8012   0029F4  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  8013   0029F6  90D8               	bcf	status,0,c
  8014   0029F8  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  8015   0029FA  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  8016   0029FC  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  8017   0029FE  320B               	rrcf	___xxtofl@arg^0,f,c
  8018   002A00                     l787:
  8019   002A00  0E00               	movlw	0
  8020   002A02  140B               	andwf	___xxtofl@arg^0,w,c
  8021   002A04  6E05               	movwf	??___xxtofl^0,c
  8022   002A06  0E00               	movlw	0
  8023   002A08  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  8024   002A0A  6E06               	movwf	(??___xxtofl+1)^0,c
  8025   002A0C  0E00               	movlw	0
  8026   002A0E  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  8027   002A10  6E07               	movwf	(??___xxtofl+2)^0,c
  8028   002A12  0EFF               	movlw	255
  8029   002A14  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  8030   002A16  6E08               	movwf	(??___xxtofl+3)^0,c
  8031   002A18  5005               	movf	??___xxtofl^0,w,c
  8032   002A1A  1006               	iorwf	(??___xxtofl+1)^0,w,c
  8033   002A1C  1007               	iorwf	(??___xxtofl+2)^0,w,c
  8034   002A1E  1008               	iorwf	(??___xxtofl+3)^0,w,c
  8035   002A20  A4D8               	btfss	status,2,c
  8036   002A22  EF15  F015         	goto	u4471
  8037   002A26  EF17  F015         	goto	u4470
  8038   002A2A                     u4471:
  8039   002A2A  EFF4  F014         	goto	l4149
  8040   002A2E                     u4470:
  8041   002A2E  EF1F  F015         	goto	l4157
  8042   002A32                     l4155:
  8043   002A32  060A               	decf	___xxtofl@exp^0,f,c
  8044   002A34  90D8               	bcf	status,0,c
  8045   002A36  360B               	rlcf	___xxtofl@arg^0,f,c
  8046   002A38  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  8047   002A3A  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  8048   002A3C  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  8049   002A3E                     l4157:
  8050   002A3E  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  8051   002A40  EF24  F015         	goto	u4481
  8052   002A44  EF26  F015         	goto	u4480
  8053   002A48                     u4481:
  8054   002A48  EF2E  F015         	goto	l794
  8055   002A4C                     u4480:
  8056   002A4C  0E02               	movlw	2
  8057   002A4E  600A               	cpfslt	___xxtofl@exp^0,c
  8058   002A50  EF2C  F015         	goto	u4491
  8059   002A54  EF2E  F015         	goto	u4490
  8060   002A58                     u4491:
  8061   002A58  EF19  F015         	goto	l4155
  8062   002A5C                     u4490:
  8063   002A5C                     l794:
  8064   002A5C  B00A               	btfsc	___xxtofl@exp^0,0,c
  8065   002A5E  EF33  F015         	goto	u4501
  8066   002A62  EF35  F015         	goto	u4500
  8067   002A66                     u4501:
  8068   002A66  EF36  F015         	goto	l4163
  8069   002A6A                     u4500:
  8070   002A6A  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  8071   002A6C                     l4163:
  8072   002A6C  90D8               	bcf	status,0,c
  8073   002A6E  320A               	rrcf	___xxtofl@exp^0,f,c
  8074   002A70  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  8075   002A74  6A06               	clrf	(??___xxtofl+1)^0,c
  8076   002A76  6A07               	clrf	(??___xxtofl+2)^0,c
  8077   002A78  6A08               	clrf	(??___xxtofl+3)^0,c
  8078   002A7A  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  8079   002A7E  6A07               	clrf	(??___xxtofl+2)^0,c
  8080   002A80  6A06               	clrf	(??___xxtofl+1)^0,c
  8081   002A82  6A05               	clrf	??___xxtofl^0,c
  8082   002A84  5005               	movf	??___xxtofl^0,w,c
  8083   002A86  120B               	iorwf	___xxtofl@arg^0,f,c
  8084   002A88  5006               	movf	(??___xxtofl+1)^0,w,c
  8085   002A8A  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  8086   002A8C  5007               	movf	(??___xxtofl+2)^0,w,c
  8087   002A8E  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  8088   002A90  5008               	movf	(??___xxtofl+3)^0,w,c
  8089   002A92  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  8090   002A94  5009               	movf	___xxtofl@sign^0,w,c
  8091   002A96  B4D8               	btfsc	status,2,c
  8092   002A98  EF50  F015         	goto	u4511
  8093   002A9C  EF52  F015         	goto	u4510
  8094   002AA0                     u4511:
  8095   002AA0  EF5A  F015         	goto	l4173
  8096   002AA4                     u4510:
  8097   002AA4  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  8098   002AA6  EF59  F015         	goto	u4520
  8099   002AAA  EF57  F015         	goto	u4521
  8100   002AAE                     u4521:
  8101   002AAE  EF5A  F015         	goto	l4173
  8102   002AB2                     u4520:
  8103   002AB2  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  8104   002AB4                     l4173:
  8105   002AB4  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  8106   002AB8  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  8107   002ABC  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  8108   002AC0  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  8109   002AC4                     l783:
  8110   002AC4  0012               	return		;funcret
  8111   002AC6                     __end_of___xxtofl:
  8112                           	callstack 0
  8113                           
  8114 ;; *************** function _Lcd_Write_String *****************
  8115 ;; Defined at:
  8116 ;;		line 97 in file "lcd.c"
  8117 ;; Parameters:    Size  Location     Type
  8118 ;;  a               2    4[COMRAM] PTR unsigned char 
  8119 ;;		 -> str_buffeLcd(16), 
  8120 ;; Auto vars:     Size  Location     Type
  8121 ;;  i               2    6[COMRAM] int 
  8122 ;; Return value:  Size  Location     Type
  8123 ;;                  1    wreg      void 
  8124 ;; Registers used:
  8125 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8126 ;; Tracked objects:
  8127 ;;		On entry : 0/0
  8128 ;;		On exit  : 0/0
  8129 ;;		Unchanged: 0/0
  8130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8131 ;;      Params:         2       0       0       0       0       0       0       0       0
  8132 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8133 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8134 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8135 ;;Total ram usage:        4 bytes
  8136 ;; Hardware stack levels used: 1
  8137 ;; Hardware stack levels required when called: 2
  8138 ;; This function calls:
  8139 ;;		_Lcd_Write_Char
  8140 ;; This function is called by:
  8141 ;;		_main
  8142 ;; This function uses a non-reentrant model
  8143 ;;
  8144                           
  8145                           	psect	text31
  8146   00396A                     __ptext31:
  8147                           	callstack 0
  8148   00396A                     _Lcd_Write_String:
  8149                           	callstack 28
  8150   00396A                     
  8151                           ;lcd.c: 97: void Lcd_Write_String(unsigned char *a);lcd.c: 98: {;lcd.c: 99:  int i;;lcd.
      +                          c: 100:  for(i=0;a[i]!='\0';i++)
  8152   00396A  0E00               	movlw	0
  8153   00396C  6E08               	movwf	(Lcd_Write_String@i+1)^0,c
  8154   00396E  0E00               	movlw	0
  8155   003970  6E07               	movwf	Lcd_Write_String@i^0,c
  8156   003972  EFC6  F01C         	goto	l4129
  8157   003976                     l4125:
  8158                           
  8159                           ;lcd.c: 101:     Lcd_Write_Char(a[i]);
  8160   003976  5007               	movf	Lcd_Write_String@i^0,w,c
  8161   003978  2405               	addwf	Lcd_Write_String@a^0,w,c
  8162   00397A  6ED9               	movwf	fsr2l,c
  8163   00397C  5008               	movf	(Lcd_Write_String@i+1)^0,w,c
  8164   00397E  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
  8165   003980  6EDA               	movwf	fsr2h,c
  8166   003982  50DF               	movf	indf2,w,c
  8167   003984  ECF1  F01C         	call	_Lcd_Write_Char
  8168   003988  4A07               	infsnz	Lcd_Write_String@i^0,f,c
  8169   00398A  2A08               	incf	(Lcd_Write_String@i+1)^0,f,c
  8170   00398C                     l4129:
  8171   00398C  5007               	movf	Lcd_Write_String@i^0,w,c
  8172   00398E  2405               	addwf	Lcd_Write_String@a^0,w,c
  8173   003990  6ED9               	movwf	fsr2l,c
  8174   003992  5008               	movf	(Lcd_Write_String@i+1)^0,w,c
  8175   003994  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
  8176   003996  6EDA               	movwf	fsr2h,c
  8177   003998  50DF               	movf	indf2,w,c
  8178   00399A  A4D8               	btfss	status,2,c
  8179   00399C  EFD2  F01C         	goto	u4421
  8180   0039A0  EFD4  F01C         	goto	u4420
  8181   0039A4                     u4421:
  8182   0039A4  EFBB  F01C         	goto	l4125
  8183   0039A8                     u4420:
  8184   0039A8  0012               	return		;funcret
  8185   0039AA                     __end_of_Lcd_Write_String:
  8186                           	callstack 0
  8187                           
  8188 ;; *************** function _Lcd_Write_Char *****************
  8189 ;; Defined at:
  8190 ;;		line 81 in file "lcd.c"
  8191 ;; Parameters:    Size  Location     Type
  8192 ;;  a               1    wreg     unsigned char 
  8193 ;; Auto vars:     Size  Location     Type
  8194 ;;  a               1    3[COMRAM] unsigned char 
  8195 ;;  y               1    2[COMRAM] unsigned char 
  8196 ;;  temp            1    1[COMRAM] unsigned char 
  8197 ;; Return value:  Size  Location     Type
  8198 ;;                  1    wreg      void 
  8199 ;; Registers used:
  8200 ;;		wreg, status,2, status,0, cstack
  8201 ;; Tracked objects:
  8202 ;;		On entry : 0/0
  8203 ;;		On exit  : 0/0
  8204 ;;		Unchanged: 0/0
  8205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8206 ;;      Params:         0       0       0       0       0       0       0       0       0
  8207 ;;      Locals:         3       0       0       0       0       0       0       0       0
  8208 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8209 ;;      Totals:         3       0       0       0       0       0       0       0       0
  8210 ;;Total ram usage:        3 bytes
  8211 ;; Hardware stack levels used: 1
  8212 ;; Hardware stack levels required when called: 1
  8213 ;; This function calls:
  8214 ;;		_Lcd_Port
  8215 ;; This function is called by:
  8216 ;;		_Lcd_Write_String
  8217 ;; This function uses a non-reentrant model
  8218 ;;
  8219                           
  8220                           	psect	text32
  8221   0039E2                     __ptext32:
  8222                           	callstack 0
  8223   0039E2                     _Lcd_Write_Char:
  8224                           	callstack 28
  8225                           
  8226                           ;incstack = 0
  8227                           ;Lcd_Write_Char@a stored from wreg
  8228   0039E2  6E04               	movwf	Lcd_Write_Char@a^0,c
  8229   0039E4                     
  8230                           ;lcd.c: 81: void Lcd_Write_Char(unsigned char a);lcd.c: 82: {;lcd.c: 83:    char temp,y;
      +                          ;lcd.c: 84:    temp = a&0x0F;
  8231   0039E4  5004               	movf	Lcd_Write_Char@a^0,w,c
  8232   0039E6  0B0F               	andlw	15
  8233   0039E8  6E02               	movwf	Lcd_Write_Char@temp^0,c
  8234                           
  8235                           ;lcd.c: 85:    y = a&0xF0;
  8236   0039EA  5004               	movf	Lcd_Write_Char@a^0,w,c
  8237   0039EC  0BF0               	andlw	240
  8238   0039EE  6E03               	movwf	Lcd_Write_Char@y^0,c
  8239   0039F0                     
  8240                           ;lcd.c: 86:    LATDbits.LATD2 = 1;
  8241   0039F0  848C               	bsf	140,2,c	;volatile
  8242   0039F2                     
  8243                           ;lcd.c: 87:    Lcd_Port(y>>4);
  8244   0039F2  3803               	swapf	Lcd_Write_Char@y^0,w,c
  8245   0039F4  0B0F               	andlw	15
  8246   0039F6  EC65  F01B         	call	_Lcd_Port
  8247   0039FA                     
  8248                           ;lcd.c: 88:    LATDbits.LATD3 = 1;
  8249   0039FA  868C               	bsf	140,3,c	;volatile
  8250   0039FC                     
  8251                           ;lcd.c: 89:    _delay((unsigned long)((40)*(16000000/4000000.0)));
  8252   0039FC  0E35               	movlw	53
  8253   0039FE                     u4557:
  8254   0039FE  2EE8               	decfsz	wreg,f,c
  8255   003A00  D7FE               	bra	u4557
  8256   003A02  F000               	nop	
  8257   003A04                     
  8258                           ;lcd.c: 90:    LATDbits.LATD3 = 0;
  8259   003A04  968C               	bcf	140,3,c	;volatile
  8260   003A06                     
  8261                           ;lcd.c: 91:    Lcd_Port(temp);
  8262   003A06  5002               	movf	Lcd_Write_Char@temp^0,w,c
  8263   003A08  EC65  F01B         	call	_Lcd_Port
  8264   003A0C                     
  8265                           ;lcd.c: 92:    LATDbits.LATD3 = 1;
  8266   003A0C  868C               	bsf	140,3,c	;volatile
  8267   003A0E                     
  8268                           ;lcd.c: 93:    _delay((unsigned long)((40)*(16000000/4000000.0)));
  8269   003A0E  0E35               	movlw	53
  8270   003A10                     u4567:
  8271   003A10  2EE8               	decfsz	wreg,f,c
  8272   003A12  D7FE               	bra	u4567
  8273   003A14  F000               	nop	
  8274   003A16                     
  8275                           ;lcd.c: 94:    LATDbits.LATD3 = 0;
  8276   003A16  968C               	bcf	140,3,c	;volatile
  8277   003A18  0012               	return		;funcret
  8278   003A1A                     __end_of_Lcd_Write_Char:
  8279                           	callstack 0
  8280                           
  8281 ;; *************** function _Lcd_Set_Cursor *****************
  8282 ;; Defined at:
  8283 ;;		line 41 in file "lcd.c"
  8284 ;; Parameters:    Size  Location     Type
  8285 ;;  a               1    wreg     unsigned char 
  8286 ;;  b               1    3[COMRAM] unsigned char 
  8287 ;; Auto vars:     Size  Location     Type
  8288 ;;  a               1    4[COMRAM] unsigned char 
  8289 ;;  temp            1    7[COMRAM] unsigned char 
  8290 ;;  y               1    6[COMRAM] unsigned char 
  8291 ;;  z               1    5[COMRAM] unsigned char 
  8292 ;; Return value:  Size  Location     Type
  8293 ;;                  1    wreg      void 
  8294 ;; Registers used:
  8295 ;;		wreg, status,2, status,0, cstack
  8296 ;; Tracked objects:
  8297 ;;		On entry : 0/0
  8298 ;;		On exit  : 0/0
  8299 ;;		Unchanged: 0/0
  8300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8301 ;;      Params:         1       0       0       0       0       0       0       0       0
  8302 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8303 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8304 ;;      Totals:         5       0       0       0       0       0       0       0       0
  8305 ;;Total ram usage:        5 bytes
  8306 ;; Hardware stack levels used: 1
  8307 ;; Hardware stack levels required when called: 2
  8308 ;; This function calls:
  8309 ;;		_Lcd_Cmd
  8310 ;; This function is called by:
  8311 ;;		_main
  8312 ;; This function uses a non-reentrant model
  8313 ;;
  8314                           
  8315                           	psect	text33
  8316   003664                     __ptext33:
  8317                           	callstack 0
  8318   003664                     _Lcd_Set_Cursor:
  8319                           	callstack 28
  8320                           
  8321                           ;incstack = 0
  8322                           ;Lcd_Set_Cursor@a stored from wreg
  8323   003664  6E05               	movwf	Lcd_Set_Cursor@a^0,c
  8324   003666                     
  8325                           ;lcd.c: 41: void Lcd_Set_Cursor(unsigned char a, unsigned char b);lcd.c: 42: {;lcd.c: 43
      +                          :  char temp,z,y;;lcd.c: 44:  if(a == 1)
  8326   003666  0405               	decf	Lcd_Set_Cursor@a^0,w,c
  8327   003668  A4D8               	btfss	status,2,c
  8328   00366A  EF39  F01B         	goto	u4401
  8329   00366E  EF3B  F01B         	goto	u4400
  8330   003672                     u4401:
  8331   003672  EF4C  F01B         	goto	l4115
  8332   003676                     u4400:
  8333   003676                     
  8334                           ;lcd.c: 45:  {;lcd.c: 46:    temp = 0x80 + b - 1;
  8335   003676  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  8336   003678  0F7F               	addlw	127
  8337   00367A  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  8338                           
  8339                           ;lcd.c: 47:   z = temp>>4;
  8340   00367C  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  8341   00367E  0B0F               	andlw	15
  8342   003680  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  8343                           
  8344                           ;lcd.c: 48:   y = temp & 0x0F;
  8345   003682  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  8346   003684  0B0F               	andlw	15
  8347   003686  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  8348   003688                     
  8349                           ;lcd.c: 49:   Lcd_Cmd(z);
  8350   003688  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  8351   00368A  EC64  F01D         	call	_Lcd_Cmd
  8352   00368E                     
  8353                           ;lcd.c: 50:   Lcd_Cmd(y);
  8354   00368E  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  8355   003690  EC64  F01D         	call	_Lcd_Cmd
  8356                           
  8357                           ;lcd.c: 51:  }
  8358   003694  EF64  F01B         	goto	l104
  8359   003698                     l4115:
  8360   003698  0E02               	movlw	2
  8361   00369A  1805               	xorwf	Lcd_Set_Cursor@a^0,w,c
  8362   00369C  A4D8               	btfss	status,2,c
  8363   00369E  EF53  F01B         	goto	u4411
  8364   0036A2  EF55  F01B         	goto	u4410
  8365   0036A6                     u4411:
  8366   0036A6  EF64  F01B         	goto	l104
  8367   0036AA                     u4410:
  8368   0036AA                     
  8369                           ;lcd.c: 53:  {;lcd.c: 54:   temp = 0xC0 + b - 1;
  8370   0036AA  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  8371   0036AC  0FBF               	addlw	191
  8372   0036AE  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  8373                           
  8374                           ;lcd.c: 55:   z = temp>>4;
  8375   0036B0  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  8376   0036B2  0B0F               	andlw	15
  8377   0036B4  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  8378                           
  8379                           ;lcd.c: 56:   y = temp & 0x0F;
  8380   0036B6  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  8381   0036B8  0B0F               	andlw	15
  8382   0036BA  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  8383   0036BC                     
  8384                           ;lcd.c: 57:   Lcd_Cmd(z);
  8385   0036BC  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  8386   0036BE  EC64  F01D         	call	_Lcd_Cmd
  8387   0036C2                     
  8388                           ;lcd.c: 58:   Lcd_Cmd(y);
  8389   0036C2  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  8390   0036C4  EC64  F01D         	call	_Lcd_Cmd
  8391   0036C8                     l104:
  8392   0036C8  0012               	return		;funcret
  8393   0036CA                     __end_of_Lcd_Set_Cursor:
  8394                           	callstack 0
  8395                           
  8396 ;; *************** function _Lcd_Init *****************
  8397 ;; Defined at:
  8398 ;;		line 62 in file "lcd.c"
  8399 ;; Parameters:    Size  Location     Type
  8400 ;;		None
  8401 ;; Auto vars:     Size  Location     Type
  8402 ;;		None
  8403 ;; Return value:  Size  Location     Type
  8404 ;;                  1    wreg      void 
  8405 ;; Registers used:
  8406 ;;		wreg, status,2, cstack
  8407 ;; Tracked objects:
  8408 ;;		On entry : 0/0
  8409 ;;		On exit  : 0/0
  8410 ;;		Unchanged: 0/0
  8411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8412 ;;      Params:         0       0       0       0       0       0       0       0       0
  8413 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8414 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8415 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8416 ;;Total ram usage:        1 bytes
  8417 ;; Hardware stack levels used: 1
  8418 ;; Hardware stack levels required when called: 2
  8419 ;; This function calls:
  8420 ;;		_Lcd_Cmd
  8421 ;;		_Lcd_Port
  8422 ;; This function is called by:
  8423 ;;		_main
  8424 ;; This function uses a non-reentrant model
  8425 ;;
  8426                           
  8427                           	psect	text34
  8428   00358A                     __ptext34:
  8429                           	callstack 0
  8430   00358A                     _Lcd_Init:
  8431                           	callstack 28
  8432   00358A                     
  8433                           ;lcd.c: 64:   Lcd_Port(0x00);
  8434   00358A  0E00               	movlw	0
  8435   00358C  EC65  F01B         	call	_Lcd_Port
  8436   003590                     
  8437                           ;lcd.c: 65:    _delay((unsigned long)((20)*(16000000/4000.0)));
  8438   003590  0E68               	movlw	104
  8439   003592  6E04               	movwf	??_Lcd_Init^0,c
  8440   003594  0EE4               	movlw	228
  8441   003596                     u4577:
  8442   003596  2EE8               	decfsz	wreg,f,c
  8443   003598  D7FE               	bra	u4577
  8444   00359A  2E04               	decfsz	??_Lcd_Init^0,f,c
  8445   00359C  D7FC               	bra	u4577
  8446   00359E  D000               	nop2	
  8447   0035A0                     
  8448                           ;lcd.c: 66:   Lcd_Cmd(0x03);
  8449   0035A0  0E03               	movlw	3
  8450   0035A2  EC64  F01D         	call	_Lcd_Cmd
  8451   0035A6                     
  8452                           ;lcd.c: 67:  _delay((unsigned long)((5)*(16000000/4000.0)));
  8453   0035A6  0E1A               	movlw	26
  8454   0035A8  6E04               	movwf	??_Lcd_Init^0,c
  8455   0035AA  0EF8               	movlw	248
  8456   0035AC                     u4587:
  8457   0035AC  2EE8               	decfsz	wreg,f,c
  8458   0035AE  D7FE               	bra	u4587
  8459   0035B0  2E04               	decfsz	??_Lcd_Init^0,f,c
  8460   0035B2  D7FC               	bra	u4587
  8461   0035B4  D000               	nop2	
  8462   0035B6                     
  8463                           ;lcd.c: 68:   Lcd_Cmd(0x03);
  8464   0035B6  0E03               	movlw	3
  8465   0035B8  EC64  F01D         	call	_Lcd_Cmd
  8466   0035BC                     
  8467                           ;lcd.c: 69:  _delay((unsigned long)((11)*(16000000/4000.0)));
  8468   0035BC  0E3A               	movlw	58
  8469   0035BE  6E04               	movwf	??_Lcd_Init^0,c
  8470   0035C0  0E23               	movlw	35
  8471   0035C2                     u4597:
  8472   0035C2  2EE8               	decfsz	wreg,f,c
  8473   0035C4  D7FE               	bra	u4597
  8474   0035C6  2E04               	decfsz	??_Lcd_Init^0,f,c
  8475   0035C8  D7FC               	bra	u4597
  8476   0035CA  F000               	nop	
  8477   0035CC                     
  8478                           ;lcd.c: 70:   Lcd_Cmd(0x03);
  8479   0035CC  0E03               	movlw	3
  8480   0035CE  EC64  F01D         	call	_Lcd_Cmd
  8481   0035D2                     
  8482                           ;lcd.c: 72:   Lcd_Cmd(0x02);
  8483   0035D2  0E02               	movlw	2
  8484   0035D4  EC64  F01D         	call	_Lcd_Cmd
  8485   0035D8                     
  8486                           ;lcd.c: 73:   Lcd_Cmd(0x02);
  8487   0035D8  0E02               	movlw	2
  8488   0035DA  EC64  F01D         	call	_Lcd_Cmd
  8489   0035DE                     
  8490                           ;lcd.c: 74:   Lcd_Cmd(0x08);
  8491   0035DE  0E08               	movlw	8
  8492   0035E0  EC64  F01D         	call	_Lcd_Cmd
  8493   0035E4                     
  8494                           ;lcd.c: 75:   Lcd_Cmd(0x00);
  8495   0035E4  0E00               	movlw	0
  8496   0035E6  EC64  F01D         	call	_Lcd_Cmd
  8497   0035EA                     
  8498                           ;lcd.c: 76:   Lcd_Cmd(0x0C);
  8499   0035EA  0E0C               	movlw	12
  8500   0035EC  EC64  F01D         	call	_Lcd_Cmd
  8501   0035F0                     
  8502                           ;lcd.c: 77:   Lcd_Cmd(0x00);
  8503   0035F0  0E00               	movlw	0
  8504   0035F2  EC64  F01D         	call	_Lcd_Cmd
  8505   0035F6                     
  8506                           ;lcd.c: 78:   Lcd_Cmd(0x06);
  8507   0035F6  0E06               	movlw	6
  8508   0035F8  EC64  F01D         	call	_Lcd_Cmd
  8509   0035FC  0012               	return		;funcret
  8510   0035FE                     __end_of_Lcd_Init:
  8511                           	callstack 0
  8512                           
  8513 ;; *************** function _Lcd_Clear *****************
  8514 ;; Defined at:
  8515 ;;		line 35 in file "lcd.c"
  8516 ;; Parameters:    Size  Location     Type
  8517 ;;		None
  8518 ;; Auto vars:     Size  Location     Type
  8519 ;;		None
  8520 ;; Return value:  Size  Location     Type
  8521 ;;                  1    wreg      void 
  8522 ;; Registers used:
  8523 ;;		wreg, status,2, cstack
  8524 ;; Tracked objects:
  8525 ;;		On entry : 0/0
  8526 ;;		On exit  : 0/0
  8527 ;;		Unchanged: 0/0
  8528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8529 ;;      Params:         0       0       0       0       0       0       0       0       0
  8530 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8531 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8532 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8533 ;;Total ram usage:        0 bytes
  8534 ;; Hardware stack levels used: 1
  8535 ;; Hardware stack levels required when called: 2
  8536 ;; This function calls:
  8537 ;;		_Lcd_Cmd
  8538 ;; This function is called by:
  8539 ;;		_main
  8540 ;; This function uses a non-reentrant model
  8541 ;;
  8542                           
  8543                           	psect	text35
  8544   003B22                     __ptext35:
  8545                           	callstack 0
  8546   003B22                     _Lcd_Clear:
  8547                           	callstack 28
  8548   003B22                     
  8549                           ;lcd.c: 37:  Lcd_Cmd(0);
  8550   003B22  0E00               	movlw	0
  8551   003B24  EC64  F01D         	call	_Lcd_Cmd
  8552                           
  8553                           ;lcd.c: 38:  Lcd_Cmd(1);
  8554   003B28  0E01               	movlw	1
  8555   003B2A  EC64  F01D         	call	_Lcd_Cmd
  8556   003B2E  0012               	return		;funcret
  8557   003B30                     __end_of_Lcd_Clear:
  8558                           	callstack 0
  8559                           
  8560 ;; *************** function _Lcd_Cmd *****************
  8561 ;; Defined at:
  8562 ;;		line 26 in file "lcd.c"
  8563 ;; Parameters:    Size  Location     Type
  8564 ;;  a               1    wreg     unsigned char 
  8565 ;; Auto vars:     Size  Location     Type
  8566 ;;  a               1    2[COMRAM] unsigned char 
  8567 ;; Return value:  Size  Location     Type
  8568 ;;                  1    wreg      void 
  8569 ;; Registers used:
  8570 ;;		wreg, status,2, cstack
  8571 ;; Tracked objects:
  8572 ;;		On entry : 0/0
  8573 ;;		On exit  : 0/0
  8574 ;;		Unchanged: 0/0
  8575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8576 ;;      Params:         0       0       0       0       0       0       0       0       0
  8577 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8578 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8579 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8580 ;;Total ram usage:        2 bytes
  8581 ;; Hardware stack levels used: 1
  8582 ;; Hardware stack levels required when called: 1
  8583 ;; This function calls:
  8584 ;;		_Lcd_Port
  8585 ;; This function is called by:
  8586 ;;		_Lcd_Clear
  8587 ;;		_Lcd_Set_Cursor
  8588 ;;		_Lcd_Init
  8589 ;;		_Lcd_Shift_Right
  8590 ;;		_Lcd_Shift_Left
  8591 ;; This function uses a non-reentrant model
  8592 ;;
  8593                           
  8594                           	psect	text36
  8595   003AC8                     __ptext36:
  8596                           	callstack 0
  8597   003AC8                     _Lcd_Cmd:
  8598                           	callstack 28
  8599                           
  8600                           ;incstack = 0
  8601                           ;Lcd_Cmd@a stored from wreg
  8602   003AC8  6E03               	movwf	Lcd_Cmd@a^0,c
  8603   003ACA                     
  8604                           ;lcd.c: 26: void Lcd_Cmd(unsigned char a);lcd.c: 27: {;lcd.c: 28:  LATDbits.LATD2 = 0;
  8605   003ACA  948C               	bcf	140,2,c	;volatile
  8606   003ACC                     
  8607                           ;lcd.c: 29:  Lcd_Port(a);
  8608   003ACC  5003               	movf	Lcd_Cmd@a^0,w,c
  8609   003ACE  EC65  F01B         	call	_Lcd_Port
  8610   003AD2                     
  8611                           ;lcd.c: 30:  LATDbits.LATD3 = 1;
  8612   003AD2  868C               	bsf	140,3,c	;volatile
  8613   003AD4                     
  8614                           ;lcd.c: 31:         _delay((unsigned long)((4)*(16000000/4000.0)));
  8615   003AD4  0E15               	movlw	21
  8616   003AD6  6E02               	movwf	??_Lcd_Cmd^0,c
  8617   003AD8  0EC6               	movlw	198
  8618   003ADA                     u4607:
  8619   003ADA  2EE8               	decfsz	wreg,f,c
  8620   003ADC  D7FE               	bra	u4607
  8621   003ADE  2E02               	decfsz	??_Lcd_Cmd^0,f,c
  8622   003AE0  D7FC               	bra	u4607
  8623   003AE2  D000               	nop2	
  8624   003AE4                     
  8625                           ;lcd.c: 32:         LATDbits.LATD3 = 0;
  8626   003AE4  968C               	bcf	140,3,c	;volatile
  8627   003AE6  0012               	return		;funcret
  8628   003AE8                     __end_of_Lcd_Cmd:
  8629                           	callstack 0
  8630                           
  8631 ;; *************** function _Lcd_Port *****************
  8632 ;; Defined at:
  8633 ;;		line 3 in file "lcd.c"
  8634 ;; Parameters:    Size  Location     Type
  8635 ;;  a               1    wreg     unsigned char 
  8636 ;; Auto vars:     Size  Location     Type
  8637 ;;  a               1    0[COMRAM] unsigned char 
  8638 ;; Return value:  Size  Location     Type
  8639 ;;                  1    wreg      void 
  8640 ;; Registers used:
  8641 ;;		wreg
  8642 ;; Tracked objects:
  8643 ;;		On entry : 0/0
  8644 ;;		On exit  : 0/0
  8645 ;;		Unchanged: 0/0
  8646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8647 ;;      Params:         0       0       0       0       0       0       0       0       0
  8648 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8649 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8650 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8651 ;;Total ram usage:        1 bytes
  8652 ;; Hardware stack levels used: 1
  8653 ;; This function calls:
  8654 ;;		Nothing
  8655 ;; This function is called by:
  8656 ;;		_Lcd_Cmd
  8657 ;;		_Lcd_Init
  8658 ;;		_Lcd_Write_Char
  8659 ;; This function uses a non-reentrant model
  8660 ;;
  8661                           
  8662                           	psect	text37
  8663   0036CA                     __ptext37:
  8664                           	callstack 0
  8665   0036CA                     _Lcd_Port:
  8666                           	callstack 28
  8667                           
  8668                           ;incstack = 0
  8669                           ;Lcd_Port@a stored from wreg
  8670   0036CA  6E01               	movwf	Lcd_Port@a^0,c
  8671   0036CC                     
  8672                           ;lcd.c: 3: void Lcd_Port(unsigned char a);lcd.c: 4: {;lcd.c: 5:  if(a & 1)
  8673   0036CC  A001               	btfss	Lcd_Port@a^0,0,c
  8674   0036CE  EF6B  F01B         	goto	u4231
  8675   0036D2  EF6D  F01B         	goto	u4230
  8676   0036D6                     u4231:
  8677   0036D6  EF70  F01B         	goto	l84
  8678   0036DA                     u4230:
  8679   0036DA                     
  8680                           ;lcd.c: 6:   LATDbits.LATD4 = 1;
  8681   0036DA  888C               	bsf	140,4,c	;volatile
  8682   0036DC  EF71  F01B         	goto	l3859
  8683   0036E0                     l84:
  8684                           
  8685                           ;lcd.c: 8:   LATDbits.LATD4 = 0;
  8686   0036E0  988C               	bcf	140,4,c	;volatile
  8687   0036E2                     l3859:
  8688                           
  8689                           ;lcd.c: 10:  if(a & 2)
  8690   0036E2  A201               	btfss	Lcd_Port@a^0,1,c
  8691   0036E4  EF76  F01B         	goto	u4241
  8692   0036E8  EF78  F01B         	goto	u4240
  8693   0036EC                     u4241:
  8694   0036EC  EF7B  F01B         	goto	l86
  8695   0036F0                     u4240:
  8696   0036F0                     
  8697                           ;lcd.c: 11:   LATDbits.LATD5 = 1;
  8698   0036F0  8A8C               	bsf	140,5,c	;volatile
  8699   0036F2  EF7C  F01B         	goto	l3863
  8700   0036F6                     l86:
  8701                           
  8702                           ;lcd.c: 13:   LATDbits.LATD5 = 0;
  8703   0036F6  9A8C               	bcf	140,5,c	;volatile
  8704   0036F8                     l3863:
  8705                           
  8706                           ;lcd.c: 15:  if(a & 4)
  8707   0036F8  A401               	btfss	Lcd_Port@a^0,2,c
  8708   0036FA  EF81  F01B         	goto	u4251
  8709   0036FE  EF83  F01B         	goto	u4250
  8710   003702                     u4251:
  8711   003702  EF86  F01B         	goto	l88
  8712   003706                     u4250:
  8713   003706                     
  8714                           ;lcd.c: 16:   LATDbits.LATD6 = 1;
  8715   003706  8C8C               	bsf	140,6,c	;volatile
  8716   003708  EF87  F01B         	goto	l3867
  8717   00370C                     l88:
  8718                           
  8719                           ;lcd.c: 18:   LATDbits.LATD6 = 0;
  8720   00370C  9C8C               	bcf	140,6,c	;volatile
  8721   00370E                     l3867:
  8722                           
  8723                           ;lcd.c: 20:  if(a & 8)
  8724   00370E  A601               	btfss	Lcd_Port@a^0,3,c
  8725   003710  EF8C  F01B         	goto	u4261
  8726   003714  EF8E  F01B         	goto	u4260
  8727   003718                     u4261:
  8728   003718  EF91  F01B         	goto	l90
  8729   00371C                     u4260:
  8730   00371C                     
  8731                           ;lcd.c: 21:   LATDbits.LATD7 = 1;
  8732   00371C  8E8C               	bsf	140,7,c	;volatile
  8733   00371E  EF92  F01B         	goto	l92
  8734   003722                     l90:
  8735                           
  8736                           ;lcd.c: 23:   LATDbits.LATD7 = 0;
  8737   003722  9E8C               	bcf	140,7,c	;volatile
  8738   003724                     l92:
  8739   003724  0012               	return		;funcret
  8740   003726                     __end_of_Lcd_Port:
  8741                           	callstack 0
  8742                           
  8743 ;; *************** function _Config_Port *****************
  8744 ;; Defined at:
  8745 ;;		line 59 in file "main.c"
  8746 ;; Parameters:    Size  Location     Type
  8747 ;;		None
  8748 ;; Auto vars:     Size  Location     Type
  8749 ;;		None
  8750 ;; Return value:  Size  Location     Type
  8751 ;;                  1    wreg      void 
  8752 ;; Registers used:
  8753 ;;		wreg, status,2
  8754 ;; Tracked objects:
  8755 ;;		On entry : 0/0
  8756 ;;		On exit  : 0/0
  8757 ;;		Unchanged: 0/0
  8758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8759 ;;      Params:         0       0       0       0       0       0       0       0       0
  8760 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8761 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8762 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8763 ;;Total ram usage:        0 bytes
  8764 ;; Hardware stack levels used: 1
  8765 ;; This function calls:
  8766 ;;		Nothing
  8767 ;; This function is called by:
  8768 ;;		_main
  8769 ;; This function uses a non-reentrant model
  8770 ;;
  8771                           
  8772                           	psect	text38
  8773   003B06                     __ptext38:
  8774                           	callstack 0
  8775   003B06                     _Config_Port:
  8776                           	callstack 30
  8777   003B06                     
  8778                           ;main.c: 61:     LATD=0x00;
  8779   003B06  0E00               	movlw	0
  8780   003B08  6E8C               	movwf	140,c	;volatile
  8781                           
  8782                           ;main.c: 64:     SLRCON=0b00000000;
  8783   003B0A  0E00               	movlw	0
  8784   003B0C  6E7A               	movwf	122,c	;volatile
  8785   003B0E                     
  8786                           ;main.c: 67:     ANSELAbits.ANSA0=1;
  8787   003B0E  010F               	movlb	15	; () banked
  8788   003B10  815B               	bsf	91,0,b	;volatile
  8789   003B12                     
  8790                           ; BSR set to: 15
  8791                           ;main.c: 68:     ANSELAbits.ANSA1=1;
  8792   003B12  835B               	bsf	91,1,b	;volatile
  8793                           
  8794                           ;main.c: 70:     ANSELD = 0x00;
  8795   003B14  0E00               	movlw	0
  8796   003B16  6F5E               	movwf	94,b	;volatile
  8797                           
  8798                           ;main.c: 73:     TRISD=0x00;
  8799   003B18  0E00               	movlw	0
  8800   003B1A  6E95               	movwf	149,c	;volatile
  8801   003B1C                     
  8802                           ; BSR set to: 15
  8803                           ;main.c: 75:     TRISAbits.TRISA0 = 1;
  8804   003B1C  8092               	bsf	146,0,c	;volatile
  8805   003B1E                     
  8806                           ; BSR set to: 15
  8807                           ;main.c: 76:     TRISAbits.TRISA1 = 1;
  8808   003B1E  8292               	bsf	146,1,c	;volatile
  8809   003B20                     
  8810                           ; BSR set to: 15
  8811   003B20  0012               	return		;funcret
  8812   003B22                     __end_of_Config_Port:
  8813                           	callstack 0
  8814                           
  8815 ;; *************** function _Config_Clock *****************
  8816 ;; Defined at:
  8817 ;;		line 54 in file "main.c"
  8818 ;; Parameters:    Size  Location     Type
  8819 ;;		None
  8820 ;; Auto vars:     Size  Location     Type
  8821 ;;		None
  8822 ;; Return value:  Size  Location     Type
  8823 ;;                  1    wreg      void 
  8824 ;; Registers used:
  8825 ;;		wreg, status,2
  8826 ;; Tracked objects:
  8827 ;;		On entry : 0/0
  8828 ;;		On exit  : 0/0
  8829 ;;		Unchanged: 0/0
  8830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8831 ;;      Params:         0       0       0       0       0       0       0       0       0
  8832 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8833 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8834 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8835 ;;Total ram usage:        0 bytes
  8836 ;; Hardware stack levels used: 1
  8837 ;; This function calls:
  8838 ;;		Nothing
  8839 ;; This function is called by:
  8840 ;;		_main
  8841 ;; This function uses a non-reentrant model
  8842 ;;
  8843                           
  8844                           	psect	text39
  8845   003B30                     __ptext39:
  8846                           	callstack 0
  8847   003B30                     _Config_Clock:
  8848                           	callstack 30
  8849   003B30                     
  8850                           ;main.c: 55:     OSCCONbits.IRCF=0b111;
  8851   003B30  0E70               	movlw	112
  8852   003B32  12D3               	iorwf	211,f,c	;volatile
  8853                           
  8854                           ;main.c: 56:     OSCCONbits.SCS=0b10;
  8855   003B34  50D3               	movf	211,w,c	;volatile
  8856   003B36  0BFC               	andlw	-4
  8857   003B38  0902               	iorlw	2
  8858   003B3A  6ED3               	movwf	211,c	;volatile
  8859   003B3C  0012               	return		;funcret
  8860   003B3E                     __end_of_Config_Clock:
  8861                           	callstack 0
  8862                           
  8863 ;; *************** function _ADC_Read *****************
  8864 ;; Defined at:
  8865 ;;		line 15 in file "ADC_libreria.c"
  8866 ;; Parameters:    Size  Location     Type
  8867 ;;  channel         1    wreg     enum E4854
  8868 ;; Auto vars:     Size  Location     Type
  8869 ;;  channel         1    4[COMRAM] enum E4854
  8870 ;; Return value:  Size  Location     Type
  8871 ;;                  2    0[COMRAM] unsigned short 
  8872 ;; Registers used:
  8873 ;;		wreg, status,2, status,0
  8874 ;; Tracked objects:
  8875 ;;		On entry : 0/0
  8876 ;;		On exit  : 0/0
  8877 ;;		Unchanged: 0/0
  8878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8879 ;;      Params:         2       0       0       0       0       0       0       0       0
  8880 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8881 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8882 ;;      Totals:         5       0       0       0       0       0       0       0       0
  8883 ;;Total ram usage:        5 bytes
  8884 ;; Hardware stack levels used: 1
  8885 ;; This function calls:
  8886 ;;		Nothing
  8887 ;; This function is called by:
  8888 ;;		_main
  8889 ;; This function uses a non-reentrant model
  8890 ;;
  8891                           
  8892                           	psect	text40
  8893   003A1A                     __ptext40:
  8894                           	callstack 0
  8895   003A1A                     _ADC_Read:
  8896                           	callstack 30
  8897                           
  8898                           ;incstack = 0
  8899                           ;ADC_Read@channel stored from wreg
  8900   003A1A  6E05               	movwf	ADC_Read@channel^0,c
  8901   003A1C                     
  8902                           ;ADC_libreria.c: 17:     ADCON0bits.CHS =channel;
  8903   003A1C  C005  F003         	movff	ADC_Read@channel,??_ADC_Read
  8904   003A20  4603               	rlncf	??_ADC_Read^0,f,c
  8905   003A22  4603               	rlncf	??_ADC_Read^0,f,c
  8906   003A24  50C2               	movf	194,w,c	;volatile
  8907   003A26  1803               	xorwf	??_ADC_Read^0,w,c
  8908   003A28  0B83               	andlw	-125
  8909   003A2A  1803               	xorwf	??_ADC_Read^0,w,c
  8910   003A2C  6EC2               	movwf	194,c	;volatile
  8911   003A2E                     
  8912                           ;ADC_libreria.c: 18:     ADCON0bits.GO_DONE=1;
  8913   003A2E  82C2               	bsf	194,1,c	;volatile
  8914   003A30                     l74:
  8915   003A30  B2C2               	btfsc	194,1,c	;volatile
  8916   003A32  EF1D  F01D         	goto	u4391
  8917   003A36  EF1F  F01D         	goto	u4390
  8918   003A3A                     u4391:
  8919   003A3A  EF18  F01D         	goto	l74
  8920   003A3E                     u4390:
  8921   003A3E                     
  8922                           ;ADC_libreria.c: 20:     return (uint16_t)((ADRESH<<8)+(ADRESL));
  8923   003A3E  50C4               	movf	196,w,c	;volatile
  8924   003A40  6E04               	movwf	(??_ADC_Read+1)^0,c
  8925   003A42  6A03               	clrf	??_ADC_Read^0,c
  8926   003A44  50C3               	movf	195,w,c	;volatile
  8927   003A46  2403               	addwf	??_ADC_Read^0,w,c
  8928   003A48  6E01               	movwf	?_ADC_Read^0,c
  8929   003A4A  0E00               	movlw	0
  8930   003A4C  2004               	addwfc	(??_ADC_Read+1)^0,w,c
  8931   003A4E  6E02               	movwf	(?_ADC_Read+1)^0,c
  8932   003A50  0012               	return		;funcret
  8933   003A52                     __end_of_ADC_Read:
  8934                           	callstack 0
  8935                           
  8936 ;; *************** function _ADC_Init *****************
  8937 ;; Defined at:
  8938 ;;		line 4 in file "ADC_libreria.c"
  8939 ;; Parameters:    Size  Location     Type
  8940 ;;		None
  8941 ;; Auto vars:     Size  Location     Type
  8942 ;;		None
  8943 ;; Return value:  Size  Location     Type
  8944 ;;                  1    wreg      void 
  8945 ;; Registers used:
  8946 ;;		wreg, status,2
  8947 ;; Tracked objects:
  8948 ;;		On entry : 0/0
  8949 ;;		On exit  : 0/0
  8950 ;;		Unchanged: 0/0
  8951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8952 ;;      Params:         0       0       0       0       0       0       0       0       0
  8953 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8954 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8955 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8956 ;;Total ram usage:        0 bytes
  8957 ;; Hardware stack levels used: 1
  8958 ;; This function calls:
  8959 ;;		Nothing
  8960 ;; This function is called by:
  8961 ;;		_main
  8962 ;; This function uses a non-reentrant model
  8963 ;;
  8964                           
  8965                           	psect	text41
  8966   003AE8                     __ptext41:
  8967                           	callstack 0
  8968   003AE8                     _ADC_Init:
  8969                           	callstack 30
  8970   003AE8                     
  8971                           ;ADC_libreria.c: 6:     ADCON1bits.PVCFG = 0b00;
  8972   003AE8  0EF3               	movlw	-13
  8973   003AEA  16C1               	andwf	193,f,c	;volatile
  8974                           
  8975                           ;ADC_libreria.c: 7:     ADCON1bits.NVCFG = 0b00;
  8976   003AEC  0EFC               	movlw	-4
  8977   003AEE  16C1               	andwf	193,f,c	;volatile
  8978   003AF0                     
  8979                           ;ADC_libreria.c: 8:     ADCON2bits.ADFM = 1;
  8980   003AF0  8EC0               	bsf	192,7,c	;volatile
  8981                           
  8982                           ;ADC_libreria.c: 9:     ADCON2bits.ACQT = 0b100;
  8983   003AF2  50C0               	movf	192,w,c	;volatile
  8984   003AF4  0BC7               	andlw	-57
  8985   003AF6  0920               	iorlw	32
  8986   003AF8  6EC0               	movwf	192,c	;volatile
  8987                           
  8988                           ;ADC_libreria.c: 10:     ADCON2bits.ADCS = 0b101;
  8989   003AFA  50C0               	movf	192,w,c	;volatile
  8990   003AFC  0BF8               	andlw	-8
  8991   003AFE  0905               	iorlw	5
  8992   003B00  6EC0               	movwf	192,c	;volatile
  8993   003B02                     
  8994                           ;ADC_libreria.c: 11:     ADCON0bits.ADON = 1;
  8995   003B02  80C2               	bsf	194,0,c	;volatile
  8996   003B04  0012               	return		;funcret
  8997   003B06                     __end_of_ADC_Init:
  8998                           	callstack 0
  8999                           
  9000                           	psect	rparam
  9001   000000                     
  9002                           	psect	idloc
  9003                           
  9004                           ;Config register IDLOC0 @ 0x200000
  9005                           ;	unspecified, using default values
  9006   200000                     	org	2097152
  9007   200000  FF                 	db	255
  9008                           
  9009                           ;Config register IDLOC1 @ 0x200001
  9010                           ;	unspecified, using default values
  9011   200001                     	org	2097153
  9012   200001  FF                 	db	255
  9013                           
  9014                           ;Config register IDLOC2 @ 0x200002
  9015                           ;	unspecified, using default values
  9016   200002                     	org	2097154
  9017   200002  FF                 	db	255
  9018                           
  9019                           ;Config register IDLOC3 @ 0x200003
  9020                           ;	unspecified, using default values
  9021   200003                     	org	2097155
  9022   200003  FF                 	db	255
  9023                           
  9024                           ;Config register IDLOC4 @ 0x200004
  9025                           ;	unspecified, using default values
  9026   200004                     	org	2097156
  9027   200004  FF                 	db	255
  9028                           
  9029                           ;Config register IDLOC5 @ 0x200005
  9030                           ;	unspecified, using default values
  9031   200005                     	org	2097157
  9032   200005  FF                 	db	255
  9033                           
  9034                           ;Config register IDLOC6 @ 0x200006
  9035                           ;	unspecified, using default values
  9036   200006                     	org	2097158
  9037   200006  FF                 	db	255
  9038                           
  9039                           ;Config register IDLOC7 @ 0x200007
  9040                           ;	unspecified, using default values
  9041   200007                     	org	2097159
  9042   200007  FF                 	db	255
  9043                           
  9044                           	psect	config
  9045                           
  9046                           ;Config register CONFIG1L @ 0x300000
  9047                           ;	PLL Selection
  9048                           ;	PLLSEL = PLL4X, 4x clock multiplier
  9049                           ;	PLL Enable Configuration bit
  9050                           ;	CFGPLLEN = OFF, PLL Disabled (firmware controlled)
  9051                           ;	CPU System Clock Postscaler
  9052                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
  9053                           ;	Low Speed USB mode with 48 MHz system clock
  9054                           ;	LS48MHZ = SYS24X4, System clock at 24 MHz, USB clock divider is set to 4
  9055   300000                     	org	3145728
  9056   300000  00                 	db	0
  9057                           
  9058                           ;Config register CONFIG1H @ 0x300001
  9059                           ;	Oscillator Selection
  9060                           ;	FOSC = INTOSCIO, Internal oscillator
  9061                           ;	Primary Oscillator Shutdown
  9062                           ;	PCLKEN = ON, Primary oscillator enabled
  9063                           ;	Fail-Safe Clock Monitor
  9064                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  9065                           ;	Internal/External Oscillator Switchover
  9066                           ;	IESO = OFF, Oscillator Switchover mode disabled
  9067   300001                     	org	3145729
  9068   300001  28                 	db	40
  9069                           
  9070                           ;Config register CONFIG2L @ 0x300002
  9071                           ;	Power-up Timer Enable
  9072                           ;	nPWRTEN = ON, Power up timer enabled
  9073                           ;	Brown-out Reset Enable
  9074                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
  9075                           ;	Brown-out Reset Voltage
  9076                           ;	BORV = 190, BOR set to 1.9V nominal
  9077                           ;	Low-Power Brown-out Reset
  9078                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  9079   300002                     	org	3145730
  9080   300002  5E                 	db	94
  9081                           
  9082                           ;Config register CONFIG2H @ 0x300003
  9083                           ;	Watchdog Timer Enable bits
  9084                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  9085                           ;	Watchdog Timer Postscaler
  9086                           ;	WDTPS = 32768, 1:32768
  9087   300003                     	org	3145731
  9088   300003  3C                 	db	60
  9089                           
  9090                           ; Padding undefined space
  9091   300004                     	org	3145732
  9092   300004  FF                 	db	255
  9093                           
  9094                           ;Config register CONFIG3H @ 0x300005
  9095                           ;	CCP2 MUX bit
  9096                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  9097                           ;	PORTB A/D Enable bit
  9098                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  9099                           ;	Timer3 Clock Input MUX bit
  9100                           ;	T3CMX = RC0, T3CKI function is on RC0
  9101                           ;	SDO Output MUX bit
  9102                           ;	SDOMX = RB3, SDO function is on RB3
  9103                           ;	Master Clear Reset Pin Enable
  9104                           ;	MCLRE = OFF, RE3 input pin enabled; external MCLR disabled
  9105   300005                     	org	3145733
  9106   300005  53                 	db	83
  9107                           
  9108                           ;Config register CONFIG4L @ 0x300006
  9109                           ;	Stack Full/Underflow Reset
  9110                           ;	STVREN = ON, Stack full/underflow will cause Reset
  9111                           ;	Single-Supply ICSP Enable bit
  9112                           ;	LVP = OFF, Single-Supply ICSP disabled
  9113                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  9114                           ;	ICPRT = OFF, ICPORT disabled
  9115                           ;	Extended Instruction Set Enable bit
  9116                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  9117                           ;	Background Debugger Enable bit
  9118                           ;	DEBUG = 0x1, unprogrammed default
  9119   300006                     	org	3145734
  9120   300006  81                 	db	129
  9121                           
  9122                           ; Padding undefined space
  9123   300007                     	org	3145735
  9124   300007  FF                 	db	255
  9125                           
  9126                           ;Config register CONFIG5L @ 0x300008
  9127                           ;	Block 0 Code Protect
  9128                           ;	CP0 = OFF, Block 0 is not code-protected
  9129                           ;	Block 1 Code Protect
  9130                           ;	CP1 = OFF, Block 1 is not code-protected
  9131                           ;	Block 2 Code Protect
  9132                           ;	CP2 = OFF, Block 2 is not code-protected
  9133                           ;	Block 3 Code Protect
  9134                           ;	CP3 = OFF, Block 3 is not code-protected
  9135   300008                     	org	3145736
  9136   300008  0F                 	db	15
  9137                           
  9138                           ;Config register CONFIG5H @ 0x300009
  9139                           ;	Boot Block Code Protect
  9140                           ;	CPB = OFF, Boot block is not code-protected
  9141                           ;	Data EEPROM Code Protect
  9142                           ;	CPD = OFF, Data EEPROM is not code-protected
  9143   300009                     	org	3145737
  9144   300009  C0                 	db	192
  9145                           
  9146                           ;Config register CONFIG6L @ 0x30000A
  9147                           ;	Block 0 Write Protect
  9148                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
  9149                           ;	Block 1 Write Protect
  9150                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
  9151                           ;	Block 2 Write Protect
  9152                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
  9153                           ;	Block 3 Write Protect
  9154                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
  9155   30000A                     	org	3145738
  9156   30000A  0F                 	db	15
  9157                           
  9158                           ;Config register CONFIG6H @ 0x30000B
  9159                           ;	Configuration Registers Write Protect
  9160                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  9161                           ;	Boot Block Write Protect
  9162                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
  9163                           ;	Data EEPROM Write Protect
  9164                           ;	WRTD = OFF, Data EEPROM is not write-protected
  9165   30000B                     	org	3145739
  9166   30000B  E0                 	db	224
  9167                           
  9168                           ;Config register CONFIG7L @ 0x30000C
  9169                           ;	Block 0 Table Read Protect
  9170                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
  9171                           ;	Block 1 Table Read Protect
  9172                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
  9173                           ;	Block 2 Table Read Protect
  9174                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
  9175                           ;	Block 3 Table Read Protect
  9176                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
  9177   30000C                     	org	3145740
  9178   30000C  0F                 	db	15
  9179                           
  9180                           ;Config register CONFIG7H @ 0x30000D
  9181                           ;	Boot Block Table Read Protect
  9182                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
  9183   30000D                     	org	3145741
  9184   30000D  40                 	db	64
  9185                           tosu	equ	0xFFF
  9186                           tosh	equ	0xFFE
  9187                           tosl	equ	0xFFD
  9188                           stkptr	equ	0xFFC
  9189                           pclatu	equ	0xFFB
  9190                           pclath	equ	0xFFA
  9191                           pcl	equ	0xFF9
  9192                           tblptru	equ	0xFF8
  9193                           tblptrh	equ	0xFF7
  9194                           tblptrl	equ	0xFF6
  9195                           tablat	equ	0xFF5
  9196                           prodh	equ	0xFF4
  9197                           prodl	equ	0xFF3
  9198                           indf0	equ	0xFEF
  9199                           postinc0	equ	0xFEE
  9200                           postdec0	equ	0xFED
  9201                           preinc0	equ	0xFEC
  9202                           plusw0	equ	0xFEB
  9203                           fsr0h	equ	0xFEA
  9204                           fsr0l	equ	0xFE9
  9205                           wreg	equ	0xFE8
  9206                           indf1	equ	0xFE7
  9207                           postinc1	equ	0xFE6
  9208                           postdec1	equ	0xFE5
  9209                           preinc1	equ	0xFE4
  9210                           plusw1	equ	0xFE3
  9211                           fsr1h	equ	0xFE2
  9212                           fsr1l	equ	0xFE1
  9213                           bsr	equ	0xFE0
  9214                           indf2	equ	0xFDF
  9215                           postinc2	equ	0xFDE
  9216                           postdec2	equ	0xFDD
  9217                           preinc2	equ	0xFDC
  9218                           plusw2	equ	0xFDB
  9219                           fsr2h	equ	0xFDA
  9220                           fsr2l	equ	0xFD9
  9221                           status	equ	0xFD8

Data Sizes:
    Strings     42
    Constant    0
    Data        0
    BSS         121
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      95
    BANK0           160     66     106
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_6(CODE[4]), STR_3(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_6(CODE[4]), STR_3(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_2(CODE[17]), STR_1(CODE[17]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_2(CODE[17]), STR_1(CODE[17]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 17
		 -> STR_2(CODE[17]), STR_1(CODE[17]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 17
		 -> STR_2(CODE[17]), STR_1(CODE[17]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S980$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_2(CODE[17]), STR_1(CODE[17]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> str_buffeLcd(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S896$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S896$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 16
		 -> str_buffeLcd(BANK0[16]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _efgtoa->___flge
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->___wmul
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   32899
                                             93 COMRAM     1     1      0
                           _ADC_Init
                           _ADC_Read
                       _Config_Clock
                        _Config_Port
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___flmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             25    15     10   28335
                                             80 COMRAM    13    13      0
                                             56 BANK0     10     0     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   27824
                                             78 COMRAM     2     2      0
                                             50 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           24    18      6   27449
                                             62 COMRAM    16    16      0
                                             44 BANK0      6     0      6
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              54    47      7   19420
                                             51 COMRAM     9     2      7
                                              0 BANK0     44    44      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     4      4     400
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     371
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     294
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             25 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     457
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2889
                                             39 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2808
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     790
                                             39 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2007
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    4551
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2879
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1083
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 9     7      2    1232
                                              6 COMRAM     9     7      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              5     3      2     207
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              4     2      2     313
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     474
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     4     2      2     420
                                              4 COMRAM     4     2      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       3     3      0     178
                                              1 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       5     4      1     532
                                              3 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     198
                                              3 COMRAM     1     1      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     2      0     110
                                              1 COMRAM     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Config_Port                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Config_Clock                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_Read
   _Config_Clock
   _Config_Port
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   ___flmul
     ___xxtofl (ARG)
   ___xxtofl
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
           _strcpy
         _fputc
         _isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      30        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     42      6A       5       66.2%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5F       1      100.0%
BITBIGSFRh          2C      0       0      20        0.0%
BITBIGSFRlhhl       2A      0       0      22        0.0%
BITBIGSFRlllhh      1B      0       0      26        0.0%
BITBIGSFRllh        11      0       0      25        0.0%
BITBIGSFRlhhhh       E      0       0      21        0.0%
BITBIGSFRllll        8      0       0      28        0.0%
BITBIGSFRlhll        5      0       0      24        0.0%
BITBIGSFRlhlh        2      0       0      23        0.0%
BITBIGSFRlllhl       2      0       0      27        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     119      29        0.0%
DATA                 0      0     119       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Aug 10 22:33:45 2022

            ___fldiv@aexp 0019              ___fldiv@bexp 0018              ___fldiv@sign 0011  
                      l71 3B04                        l55 3B3C                        l74 3A30  
                      l58 3B20                        l90 3722                        l92 3724  
                      l84 36E0                        l77 3A50                        l86 36F6  
                      l95 3AE6                        l88 370C                        l98 3B2E  
     ___wmul@multiplicand 0003                       l110 3A18                       l104 36C8  
                     l107 35FC                       l116 39A8                       l125 3AA2  
                     l252 2F18                       l422 3168                       l239 2C4C  
                     l390 3226                       l720 2366                       l712 226C  
                     l384 34DE                       l721 2354                       l707 2448  
                     l395 326C                       l803 3776                       l709 22A8  
                     l653 19B4                       l718 22EE                       l670 1ACE  
                     l662 1C84                       l654 19A2                       l743 20AE  
                     l399 39E0                       l655 1968                       l911 1006  
                     l840 3524                       l680 1B8C                       l746 1F40  
                     l843 3566                       l851 24E6                       l739 1D4A  
                     l780 2968                       l756 2070                       l748 1FB8  
                     l845 3588                       l853 24EE                       l749 1FA6  
                     l854 2534                       l783 2AC4                       l679 1B9E  
                     l695 385E                       l881 0BBE                       l794 2A5C  
                     l787 2A00                       l867 26FE                       l883 0A04  
                     l955 17C4                       l878 128E                       l992 3960  
                     l977 37C8                       l995 3968                       l987 336A  
                     _abs 392A                       _pad 34E0                       wreg 000FE8  
            ___flmul@aexp 0020              ___flmul@bexp 0021              ___flmul@sign 001B  
            ___flmul@temp 0026              ___flmul@prod 0022              ___fltol@exp1 000A  
                    l1020 3062                      l1017 305A                      l1026 2910  
                    l1051 3652                      ?_abs 0013                      l1036 3A7C  
                    l1044 38A4                      l1060 3818                      l1029 2854  
                    l1054 3662                      l1072 3434                      l1080 38E8  
                    l3001 2B82                      l3011 2BF6                      l3003 2B94  
                    l1083 3B3E                      l3005 2BC2                      l3013 2BFC  
                    l3021 2DB6                      l3101 21AA                      l3015 2C0C  
                    l3007 2BE2                      l3031 2DFA                      l3023 2DBA  
                    l3111 21D2                      l3103 21AE                      l4001 3ACC  
                    l3017 2C2C                      l3009 2BE4                      l3041 2E62  
                    l3033 2E1A                      l3025 2DC8                      l3121 2220  
                    l3201 1CA2                      l1089 3928                      l4003 3AD2  
                    l4011 39F0                      l3051 2ED8                      l3043 2E90  
                    l3035 2E38                      l3027 2DE8                      l3131 226A  
                    l3123 2230                      l3115 21E6                      l3107 21C2  
                    l3211 1CE8                      l3203 1CB2                      l4005 3AD4  
                    l4021 3A06                      l4013 39F2                      l3053 2EF8  
                    l3045 2EB0                      l3037 2E40                      l3029 2DEC  
                    l3141 22B8                      l3133 2276                      l3125 2238  
                    l3117 2200                      l3109 21D2                      l3061 20CA  
                    l3301 200C                      l3221 1D14                      l3213 1CEE  
                    l3205 1CC2                      l4101 3746                      l4007 3AE4  
                    l4111 3688                      l4023 3A0C                      l4015 39FA  
                    l3047 2EC2                      l3039 2E54                      l3143 22CE  
                    l3151 22FE                      l3135 2294                      l3127 2248  
                    l3119 2210                      l3071 20FE                      l3063 20CC  
                    l3311 2074                      l3303 2010                      l3231 1D6A  
                    l3223 1D24                      l3215 1CF4                      l3207 1CD2  
                    l4031 3784                      l4103 3764                      l4041 3B06  
                    l4121 36C2                      l4113 368E                      l4025 3A0E  
                    l4017 39FC                      l4009 39E4                      l3049 2EC8  
                    l3153 230C                      l3145 22D4                      l3137 2296  
                    l3129 225C                      l3081 2130                      l3065 20DC  
                    l3073 2106                      l3057 20B0                      l3321 209E  
                    l3313 2084                      l3305 202A                      l3241 1DAA  
                    l3225 1D34                      l3217 1D02                      l3209 1CD8  
                    l3401 30FE                      l4033 37A2                      l4201 2DA0  
                    l4043 3B0E                      l4051 358A                      l4115 3698  
                    l4107 3666                      l4027 3A16                      l4019 3A04  
                    l4123 396A                      l4131 2914                      l3163 2376  
                    l3171 23BE                      l3155 2310                      l3147 22DE  
                    l3139 22A6                      l3091 2164                      l3083 2132  
                    l3075 2116                      l3067 20EC                      l3059 20BC  
                    l3331 3436                      l3315 2092                      l3307 203E  
                    l3251 1DF4                      l3243 1DB6                      l3235 1D7E  
                    l3227 1D3A                      l3219 1D04                      l3411 3128  
                    l3403 3108                      l4035 37BE                      l4045 3B12  
                    l4061 35BC                      l4053 3590                      l4117 36AA  
                    l4109 3676                      l4125 3976                      l4133 2924  
                    l3421 34E0                      l3181 2428                      l3173 23D8  
                    l3165 2382                      l3157 231E                      l3149 22EC  
                    l3085 2142                      l3093 216C                      l3077 211C  
                    l3069 20FC                      l3341 34D6                      l3333 3464  
                    l3317 2094                      l3309 2058                      l3261 1E46  
                    l3253 1E00                      l3245 1DCE                      l3237 1D8A  
                    l3229 1D5A                      l3325 381A                      l3413 3138  
                    l3501 37CA                      l4029 3778                      l4039 3B30  
                    l4047 3B1C                      l4071 35E4                      l4063 35CC  
                    l4055 35A0                      l4119 36BC                      l4127 3988  
                    l4151 29EA                      l4143 29A2                      l4135 2932  
                    l3431 3530                      l3423 34EE                      l3183 2436  
                    l3175 23EE                      l3167 2390                      l3159 234C  
                    l3095 217C                      l3087 2152                      l3079 2122  
                    l3343 34DC                      l3335 3474                      l3351 31A8  
                    l3319 209A                      l3271 1EC4                      l3263 1E56  
                    l3255 1E10                      l3247 1DDA                      l3239 1D94  
                    l3327 382A                      l3415 3148                      l3503 37DE  
                    l3511 37FE                      l4311 16FA                      l4081 3AE8  
                    l4049 3B1E                      l4073 35EA                      l4065 35D2  
                    l4057 35A6                      l4129 398C                      l4161 2A6A  
                    l4153 29F6                      l4145 29AA                      l4137 2978  
                    l3513 3A52                      l3521 3878                      l3441 3944  
                    l3433 3544                      l3425 3502                      l3185 243C  
                    l3177 2408                      l3169 23BA                      l3097 2192  
                    l3089 2162                      l3337 34A2                      l3361 3214  
                    l3353 31D6                      l3281 1F3E                      l3273 1EFA  
                    l3265 1E72                      l3257 1E1C                      l3249 1DE6  
                    l2801 1896                      l3417 3158                      l3409 311C  
                    l3505 37EA                      l3601 0882                      l4313 177C  
                    l4083 3AF0                      l4091 3A3E                      l4075 35F0  
                    l4067 35D8                      l4059 35B6                      l4171 2AB2  
                    l4163 2A6C                      l4155 2A32                      l4147 29B6  
                    l4139 298E                      l3523 389A                      l4315 2FB0  
                    l3435 3548                      l3427 3510                      l3531 246A  
                    l3187 243E                      l3179 2424                      l3099 21A2  
                    l3339 34B2                      l3363 3264                      l3355 31E6  
                    l3347 316A                      l3291 1F9E                      l3283 1F50  
                    l3275 1F08                      l3267 1E7E                      l3259 1E2C  
                    l3195 1C86                      l3371 39C0                      l2811 18CE  
                    l2803 18A6                      l3451 3300                      l3443 326E  
                    l3507 37EE                      l3611 08BE                      l3603 088A  
                    l4307 1326                      l4085 3B02                      l4077 35F6  
                    l4069 35DE                      l4173 2AB4                      l4165 2A70  
                    l4157 2A3E                      l4149 29E8                      l3525 389E  
                    l3517 3860                      l3437 3574                      l3429 351C  
                    l3541 24C0                      l3533 247E                      l3365 326A  
                    l3357 31F4                      l3349 3198                      l3285 1F5E  
                    l3277 1F26                      l3269 1E9A                      l3197 1C92  
                    l3373 39D0                      l2821 18E2                      l2813 18D2  
                    l2805 18B8                      l3461 3362                      l3445 328E  
                    l3509 37FA                      l3701 0C60                      l3621 0904  
                    l3605 089A                      l3613 08C2                      l4309 1640  
                    l4181 2C70                      l4087 3A1C                      l4079 3B22  
                    l4167 2A94                      l4159 2A4C                      l3519 3864  
                    l3439 392A                      l2751 3390                      l3551 251C  
                    l3543 24DA                      l3535 248E                      l3359 3206  
                    l3295 1FC8                      l3287 1F62                      l3279 1F30  
                    l3199 1CA0                      l2911 1B30                      l2903 1B08  
                    l2831 18F6                      l2823 18E6                      l2815 18D6  
                    l2807 18C6                      l3391 30CE                      l3383 308E  
                    l3447 32CC                      l3455 330C                      l3471 361C  
                    l3703 0C74                      l3711 0D6A                      l3623 090C  
                    l3615 08E8                      l3631 094E                      l3607 08AA  
                    l4095 3726                      l4191 2D08                      l4183 2CB6  
                    l4089 3A2E                      l4169 2AA4                      l2753 339A  
                    l3561 254C                      l3553 2528                      l3545 24F6  
                    l3537 24AE                      l3529 244A                      l3297 1FD4  
                    l3289 1F70                      l3369 39AA                      l2913 1B38  
                    l2905 1B12                      l2921 1B5C                      l2841 190A  
                    l2833 18FA                      l2825 18EA                      l2817 18DA  
                    l2809 18CA                      l2761 17C6                      l3393 30DC  
                    l3385 30B8                      l3377 3064                      l3457 331E  
                    l3449 32F4                      l3481 2798                      l3473 2700  
                    l3465 38EA                      l3801 11D6                      l3721 0E36  
                    l3713 0D88                      l3705 0CD8                      l3641 0998  
                    l3633 0974                      l3625 0924                      l3617 08FA  
                    l3609 08B6                      l4097 3736                      l4193 2D16  
                    l4185 2CE4                      l4177 2C4E                      l2755 33B8  
                    l2747 336C                      l3571 2658                      l3563 25CE  
                    l3555 2530                      l3547 2506                      l3539 24BE  
                    l3299 1FE2                      l2931 1BAE                      l2923 1B60  
                    l2915 1B3C                      l2907 1B20                      l2851 1982  
                    l2843 1934                      l2835 18FE                      l2827 18EE  
                    l2819 18DE                      l2771 1802                      l2763 17D2  
                    l3387 30BA                      l3379 307A                      l3491 28B4  
                    l3475 2720                      l3467 38FA                      l3811 1222  
                    l3731 0EE6                      l3723 0E46                      l3715 0DBC  
                    l3707 0D30                      l3651 09CE                      l3635 0986  
                    l3627 092E                      l3619 08FE                      l4099 373E  
                    l4195 2D5C                      l4187 2CEE                      l4179 2C62  
                    l2757 33EE                      l2749 337E                      l3581 26C8  
                    l3573 2676                      l3565 25D4                      l3557 253C  
                    l3549 250C                      l2941 1C14                      l2933 1BBA  
                    l2925 1B6E                      l2917 1B4C                      l2909 1B22  
                    l2861 19C2                      l2853 1986                      l2845 1950  
                    l2837 1902                      l2829 18F2                      l2781 1832  
                    l2773 1812                      l2765 17E0                      l3389 30CA  
                    l3493 28C8                      l3485 2808                      l3477 2776  
                    l3469 35FE                      l3805 11E8                      l3813 1240  
                    l3741 0F4A                      l3733 0F1A                      l3725 0E56  
                    l3717 0DEE                      l3709 0D64                      l3661 0A8C  
                    l3637 098A                      l3901 13BE                      l4197 2D8A  
                    l4189 2CFA                      ?_pad 0011                      l3831 2F4E  
                    l3823 2F1A                      l3583 26CE                      l3575 2690  
                    l3567 25DA                      l3559 2546                      l2951 1C5C  
                    l2943 1C24                      l2935 1BC8                      l2927 1B84  
                    l2919 1B4E                      l2871 1A04                      l2863 19D2  
                    l2855 1994                      l2847 1960                      l2839 1906  
                    l2791 185C                      l2783 1844                      l2775 1814  
                    l2767 17E2                      l3399 30F4                      l3495 28F0  
                    l3487 2844                      l3479 278A                      l3815 1250  
                    l3807 11FE                      l3751 0FFC                      l3743 0F50  
                    l3735 0F2E                      l3727 0E8A                      l3719 0E04  
                    l3671 0B4C                      l3663 0ABE                      l3655 0A14  
                    l3639 0990                      l3591 0832                      l3911 1448  
                    l3903 13DE                      l4199 2D94                      l3833 2F82  
                    l3825 2F2E                      l3585 26DE                      l3577 26AA  
                    l3569 263E                      l2953 1C5E                      l2945 1C44  
                    l2937 1C02                      l2881 1A32                      l2873 1A12  
                    l2857 1996                      l2849 1976                      l2793 186C  
                    l2785 1846                      l2769 17F2                      l2777 181C  
                    l3497 2900                      l3489 2878                      l3817 1266  
                    l3809 1204                      l3761 1040                      l3753 1018  
                    l3745 0F58                      l3729 0EE0                      l3737 0F32  
                    l3681 0BE2                      l3665 0AFC                      l3657 0A1A  
                    l3649 09B4                      l3593 0842                      l3921 14DE  
                    l3913 1452                      l2971 3A7E                      l3835 2F8A  
                    l2963 38A6                      l3579 26B8                      l2955 1C64  
                    l2947 1C48                      l2939 1C04                      l2891 1A9E  
                    l2883 1A3C                      l2875 1A1E                      l2867 19E6  
                    l2859 19A0                      l2795 187C                      l2787 184C  
                    l2779 182C                      l3819 126E                      l3763 1048  
                    l3755 1026                      l3771 1068                      l3747 0F64  
                    l3739 0F42                      l3691 0C16                      l3683 0BEA  
                    l3667 0B10                      l3675 0B8C                      l3659 0A4E  
                    l3595 0850                      l3931 1550                      l3915 1460  
                    l3907 13EC                      l3861 36F0                      l2973 3A9A  
                    l3845 2FFC                      l3837 2F92                      l3829 2F32  
                    l2981 2AD8                      l2965 38B2                      l2957 1C72  
                    l2949 1C56                      l2893 1AAE                      l2877 1A22  
                    l2869 19F6                      l2885 1A42                      l2797 188C  
                    l2789 185A                      l3781 10EE                      l3773 107A  
                    l3765 1058                      l3757 1036                      l3749 0FDC  
                    l3693 0C2E                      l3685 0BF2                      l3677 0BC6  
                    l3669 0B44                      l3597 0854                      l3589 082C  
                    l3941 1602                      l3933 156C                      l3925 14EC  
                    l3917 1484                      l3909 1424                      l3863 36F8  
                    l3855 36CC                      l3847 302C                      l3839 2FC6  
                    l2991 2B2E                      l2983 2AF8                      l2967 38C4  
                    l2959 1C74                      l2887 1A68                      l2895 1ABE  
                    l2879 1A30                      l2799 188E                      l3791 1168  
                    l3783 1122                      l3775 108C                      l3767 105C  
                    l3759 103A                      l3695 0C40                      l3687 0BF6  
                    l3679 0BD6                      l3599 0878                      l3943 1614  
                    l3951 162C                      l3935 15C2                      l3919 14BE  
                    l3927 1524                      l3871 1290                      l3865 3706  
                    l3857 36DA                      l3849 303E                      l2993 2B3A  
                    l2985 2AFC                      l2977 2AC6                      l2969 38C8  
                    l2897 1AE4                      l2889 1A9C                      l3793 1170  
                    l3785 112A                      l3777 1090                      l3769 1062  
                    l3689 0C08                      l3697 0C48                      l3961 16E6  
                    l3945 161C                      l3953 165E                      l3929 1534  
                    l3881 12E0                      l3873 12B4                      l3867 370E  
                    l3859 36E2                      l2995 2B58                      l2987 2B0A  
                    l2979 2ACA                      l2899 1AF4                      l3795 1180  
                    l3779 1096                      l3787 112E                      l3699 0C50  
                    l3971 175E                      l3963 1710                      l3955 167E  
                    l3947 1624                      l3939 15F2                      l3883 12E2  
                    l3891 1334                      l3875 12C2                      l3869 371C  
                    l2997 2B60                      l2989 2B2A                      l3797 11B0  
                    l3789 114C                      l3965 1730                      l3957 16B2  
                    l3973 178A                      l3893 1346                      l3885 12F4  
                    l3877 12D0                      l2999 2B74                      l3799 11BE  
                    l3895 136A                      l3879 12D4                      l3897 13A0  
                    l3889 1300                      l3977 179C                      l3899 13B0  
                    l3999 3ACA                      STR_1 0801                      STR_2 0812  
                    STR_3 0823                      STR_6 0827                      u3000 234C  
                    u3001 2348                      u3010 2362                      u3011 235E  
                    u2300 33EE                      u3020 2376                      u3100 1D02  
                    u2301 33EA                      u3021 2372                      u3101 1CFE  
                    u3030 2390                      u3110 1D14                      u2310 17E0  
                    u3031 238C                      u3111 1D10                      u2311 17DC  
                    u3040 23D8                      u3200 1FB4                      u3120 1D24  
                    u2400 1934                      u2320 17F2                      u4000 0C40  
                    _LATD 000F8C                      u3041 23D4                      u3201 1FB0  
                    u3121 1D20                      u2401 1930                      u2321 17EE  
                    u4001 0C3C                      u3050 2408                      u3210 1FC8  
                    u3130 1D5A                      u2410 194C                      u2330 1802  
                    u4010 0D88                      u3051 2404                      u3211 1FC4  
                    u3131 1D56                      u2411 1946                      u2331 17FE  
                    u4011 0D84                      u3060 2436                      u3300 31D6  
                    u3220 1FE2                      u3140 1D6A                      u2500 1A30  
                    u2420 194E                      u2340 1844                      u4100 107A  
                    u4020 0DEE                      u3061 2432                      u3301 31D2  
                    u3221 1FDE                      u3141 1D66                      u2501 1A2C  
                    u2341 1840                      u4101 1076                      u4021 0DEA  
                    u2270 337E                      u3310 31F4                      u3230 202A  
                    u3150 1EE4                      u3070 1CA0                      u2510 1A68  
                    u2430 1976                      u2350 185A                      u4110 114C  
                    u4030 0E36                      u2271 337A                      u3311 31F0  
                    u3231 2026                      u3071 1C9C                      u2511 1A64  
                    u2431 1972                      u2351 1856                      u4111 1148  
                    u4031 0E32                      u4200 2F7E                      u2280 3390  
                    u3320 3214                      u3240 2058                      u3160 1F3E  
                    u3080 1CB2                      u2600 1B84                      u2520 1AAE  
                    u2440 1994                      u2360 186C                      u3400 3138  
                    u4120 1168                      u4040 0E46                      u4201 2F7A  
                    u2281 338C                      u3321 3210                      u3241 2054  
                    u3161 1F3A                      u3081 1CAE                      u2601 1B80  
                    u2521 1AAA                      u2441 1990                      u2361 1868  
                    u3401 3134                      u4121 1164                      u4041 0E42  
                    u4210 302C                      u2290 33B8                      u3330 3264  
                    u3250 2092                      u3170 1F5E                      u3090 1CC2  
                    u2610 1B9A                      u2530 1AE4                      u2450 19B4  
                    u2370 187C                      u3410 3148                      u4130 11D0  
                    u4050 0EE0                      u4211 3028                      u2291 33B4  
                    u3331 3260                      u3251 208E                      u3171 1F5A  
                    u3155 1EDA                      u3091 1CBE                      u2611 1B96  
                    u2531 1AE0                      u2451 19B0                      u2371 1878  
                    u3411 3144                      u4131 11CA                      u4051 0EDC  
                    u4220 303E                      u2700 38E8                      u3420 34EE  
                    u3260 3464                      u3180 1F70                      u3340 39C0  
                    u2620 1BAE                      u2540 1AF4                      u2460 19C2  
                    u2380 18B8                      u3500 331E                      u4140 11D2  
                    u4060 0F2E                      u4300 13B0                      u4221 303A  
                    u2701 38E4                      u3421 34EA                      u3261 3460  
                    u3181 1F6C                      u3341 39BC                      u2621 1BAA  
                    u2541 1AF0                      u2461 19BE                      u2381 18B4  
                    u3501 331A                      u4061 0F2A                      u4301 13AC  
                    u4230 36DA                      u2710 2AD8                      u3430 3510  
                    u3270 34A2                      u3190 1F9E                      u2630 1BC8  
                    u2550 1B20                      u2470 19D2                      u2390 18C6  
                    u3350 307A                      u4150 11E4                      u4070 0FDC  
                    u4310 1424                      u4231 36D6                      u2711 2AD4  
                    u3431 350C                      u3271 349E                      u3191 1F9A  
                    u2631 1BC4                      u2551 1B1C                      u2471 19CE  
                    u2391 18C2                      u3351 3076                      u4151 11E0  
                    u4071 0FD8                      u4311 1420                      u4240 36F0  
                    u4400 3676                      u2720 2B0A                      u2800 2E38  
                    u3440 3566                      u3280 34D6                      u2640 1C02  
                    u2560 1B30                      u2480 1A04                      u3360 30AE  
                    u3520 3358                      u3600 2804                      u4160 1222  
                    u4080 1018                      u4320 1448                      u4241 36EC  
                    u4401 3672                      u2721 2B06                      u2801 2E34  
                    u3441 3562                      u3281 34D2                      u2641 1BFE  
                    u2561 1B2C                      u2481 1A00                      u3521 3352  
                    u3601 2800                      u4161 121E                      u4081 1014  
                    u4321 1444                      u4250 3706                      u4410 36AA  
                    u2810 2E62                      u3450 3574                      u3290 3198  
                    u2650 1C14                      u2570 1B4C                      u2490 1A12  
                    u3370 30DC                      u3530 335A                      u3610 2828  
                    u4170 1240                      u4090 1026                      u4330 1484  
                    u4251 3702                      u4411 36A6                      u2731 2B34  
                    u2811 2E5E                      u3451 3570                      u3291 3194  
                    u2651 1C10                      u2571 1B48                      u2491 1A0E  
                    u3371 30D8                      u3515 3330                      u4171 123C  
                    u4091 1022                      u4331 1480                      u4260 371C  
                    u4420 39A8                      u4500 2A6A                      u3700 389A  
                    u2740 2B58                      u2820 2E90                      u3460 3944  
                    u2900 2192                      u2660 1C24                      u2580 1B5C  
                    u3380 30F0                      u3620 2844                      u3540 3928  
                    u4180 1250                      u4340 1524                      u4261 3718  
                    u4421 39A4                      u4501 2A66                      u3701 3896  
                    u2741 2B54                      u2821 2E8C                      u3461 3940  
                    u2901 218E                      u2661 1C20                      u2581 1B58  
                    u3381 30EC                      u3365 30A4                      u3621 2840  
                    u3541 3924                      u4181 124C                      u4341 1520  
                    u4510 2AA4                      u4430 2924                      u4190 2F4E  
                    u2750 2B82                      u2830 2ED8                      u3710 247A  
                    u2910 21D2                      u2670 1C44                      u2590 1B6E  
                    u3390 3118                      u3470 32AE                      u3630 2898  
                    u3550 361C                      u4350 1550                      u4270 12B4  
                    u4511 2AA0                      u4431 2920                      u4191 2F4A  
                    u2751 2B7E                      u2831 2ED4                      u3711 2474  
                    u2911 21CE                      u2671 1C40                      u2591 1B6A  
                    u3391 3114                      u3615 281E                      u3551 3618  
                    u4351 154C                      u4271 12B0                      u4520 2AB2  
                    u4440 2932                      u2760 2BC2                      u3800 2690  
                    u3720 247C                      u2920 2248                      u2840 20CA  
                    u2680 1C56                      u3480 32CC                      u3640 28B4  
                    u3560 2748                      u4360 156C                      u4280 1346  
                    u4521 2AAE                      u4441 292E                      u2761 2BBE  
                    u3801 268C                      u2921 2244                      u2841 20C6  
                    u2681 1C52                      u3481 32C8                      u3641 28B0  
                    u4361 1568                      u4281 1342                      u4450 298E  
                    u2770 2C0C                      u3810 26AA                      u3730 248E  
                    u2930 226A                      u2850 20DC                      u2690 1C72  
                    u3490 32F4                      u3650 28F0                      u3570 2776  
                    u4370 167A                      u4290 136A                      u4451 298A  
                    u2771 2C08                      u3811 26A6                      u3731 248A  
                    u2931 2266                      u2851 20D8                      u2691 1C6E  
                    u3491 32F0                      u3475 32A4                      u3651 28EC  
                    u3635 288E                      u3571 2772                      u4371 1676  
                    u4291 1366                      u4460 29E4                      u2780 2DC8  
                    u3820 26B8                      u3740 24BE                      u2940 2294  
                    u2860 20EC                      u3580 2798                      u3660 3818  
                    u3900 0986                      u4380 37BE                      u4461 29E0  
                    u2781 2DC4                      u3821 26B4                      u3741 24BA  
                    u2941 2290                      u2861 20E8                      u3581 2794  
                    u3565 273E                      u3661 3814                      u3901 0982  
                    u4381 37BA                      u4390 3A3E                      u4470 2A2E  
                    u3670 3A76                      u2790 2DFA                      u3830 26C8  
                    u3750 24DA                      u2950 22B8                      u2870 2130  
                    u3910 0A00                      u4391 3A3A                      u4607 3ADA  
                    u4471 2A2A                      u3671 3A70                      u2791 2DF6  
                    u3831 26C4                      u3751 24D6                      u2951 22B4  
                    u2871 212C                      u3911 09FC                      u4480 2A4C  
                    u3680 3A78                      u3760 2506                      u2960 22CE  
                    u2880 2142                      u3920 0A8C                      u3840 0850  
                    u4481 2A48                      u3761 2502                      u2961 22CA  
                    u2881 213E                      u3921 0A88                      u3841 084C  
                    u4537 2D00                      u4490 2A5C                      u3690 3878  
                    u3770 251C                      u2970 22EC                      u2890 2152  
                    u3930 0ABE                      u3850 089A                      u4491 2A58  
                    u3691 3874                      u3771 2518                      u2971 22E8  
                    u2891 214E                      u3595 27AC                      u3931 0ABA  
                    u3851 0896                      u4547 2DA6                      u3780 2658  
                    u2980 230C                      u3596 27B6                      u3940 0AFC  
                    u3860 08AA                      u4557 39FE                      u3781 2654  
                    u2981 2308                      u3597 27C6                      u3941 0AF8  
                    u3861 08A6                      u3790 2676                      u2990 231E  
                    u3950 0B88                      u3870 08E8                      u4567 3A10  
                    u3791 2672                      u2991 231A                      u3951 0B84  
                    u3871 08E4                      u3960 0BBE                      u3880 08FA  
                    u4577 3596                      u3961 0BBA                      u3881 08F6  
                    u3970 0BD6                      u3890 0974                      u4587 35AC  
                    u3971 0BD2                      u3891 0970                      u3980 0C08  
                    u4597 35C2                      u3981 0C04                      u3990 0C16  
                    u3991 0C12                      abs@a 0013         ?_Lcd_Write_String 0005  
                    _dbuf 0100                      _labs 35FE                      _atoi 2F1A  
                    _main 2C4E                      _dtoa 244A                      _prec 00B4  
                    pad@i 0018                      pad@p 0015                      fsr1h 000FE2  
                    fsr2h 000FDA                      indf2 000FDF                      fsr1l 000FE1  
                    pad@w 001A                      fsr2l 000FD9          __end_of_ADC_Init 3B06  
        __end_of_ADC_Read 3A52             ___fpclassifyf 326E                      prodh 000FF4  
                    prodl 000FF3                      start 0000        ??_Lcd_Write_String 0007  
         ___fldiv@new_exp 0012           __end_of_Lcd_Cmd 3AE8              ___param_bank 000000  
     __end_of_Config_Port 3B22                     ??_abs 0015                     ??_pad 0017  
           ___fltol@sign1 0009           __end_of___aodiv 2C4E                     ?_labs 0001  
                   ?_atoi 0007           __end_of___fladd 1C86                     ?_main 0001  
                   ?_dtoa 001C           __end_of___aomod 2F1A           __end_of___fldiv 244A  
         __end_of___flneg 39E2           __end_of___flmul 20B0           __end_of___flsub 3860  
         __end_of___fltol 316A              vfpfcnvrt@fmt 008E              _str_buffeLcd 00BA  
                   _TRISD 000F95                     _dato1 00B8                     _dato2 00B6  
                   _flags 005F                     _fputc 336C                     _fputs 38A6  
         __end_of_isdigit 3A7E                     labs@a 0001                     atoi@n 000E  
                   pad@fp 0011                     atoi@s 0007                     _width 00B2  
                   _putch 3B3E                     dtoa@d 001E                     dtoa@i 003C  
                   dtoa@n 0034                     dtoa@p 0030                     dtoa@s 003E  
                   dtoa@w 0032           __end_of_isspace 38A6                     tablat 000FF5  
                   status 000FD8           __end_of_sprintf 3778            ?___fpclassifyf 0001  
        __end_of_Lcd_Init 35FE          __end_of_Lcd_Port 3726           __initialization 3AA4  
    __end_of_Config_Clock 3B3E              __end_of_labs 3664              __end_of_atoi 3064  
            __end_of_main 2DB6              __end_of_dtoa 2700                    ??_labs 0005  
                  ??_atoi 0009                    ??_main 005E                    ??_dtoa 0026  
           __activetblptr 000002                    ?_fputc 0001                    ?_fputs 000A  
                  _ADRESH 000FC4                    _ADRESL 000FC3                    ?_putch 0001  
                  _ANSELD 000F5E                 ??_Lcd_Cmd 0002             vfpfcnvrt@done 0042  
                  _SLRCON 000F7A               _Config_Port 3B06          __end_of___xxtofl 2AC6  
            vfprintf@cfmt 004F                    ___flge 316A                    ___fleq 3436  
               ??___aodiv 0011                 ??___fladd 0009                 ??___aomod 0011  
                  ___wmul 3A7E                 ??___fldiv 0009                 ??___flneg 0005  
               ??___flmul 0017                 ??___flsub 0030                 ??___fltol 0005  
                  _efgtoa 082C           ADC_Read@channel 0005                    _floorf 2700  
                  _memcpy 37CA                    clear_0 3AAA                    clear_1 3AB6  
                  isa$std 000001                    pad@buf 0013                    dtoa@fp 001C  
                  _strcpy 38EA                    fputc@c 0001                    fputs@c 000E  
                  fputs@i 000F                    fputs@s 000A                 ??_isdigit 0003  
         ___fpclassifyf@e 0009                 ?_ADC_Init 0001           ___fpclassifyf@u 000B  
               ?_ADC_Read 0001           ___fpclassifyf@x 0001              __mediumconst 0000  
               ??_isspace 0003                    tblptrh 000FF7                    tblptrl 000FF6  
                  tblptru 000FF8                    putch@c 0001          __end_of_vfprintf 37CA  
               ??_sprintf 0051           Lcd_Set_Cursor@a 0005           Lcd_Set_Cursor@b 0004  
         Lcd_Set_Cursor@y 0007           Lcd_Set_Cursor@z 0006                ___flge@ff1 0028  
              ___flge@ff2 002C           ??___fpclassifyf 0005              ___xxtofl@arg 000B  
            ___xxtofl@exp 000A              ___xxtofl@val 0001                ___fleq@ff1 0001  
              ___fleq@ff2 0005                __accesstop 0060   __end_of__initialization 3ABE  
              ___flneg@f1 0001         __end_of_Lcd_Clear 3B30             ___rparam_used 000001  
              ___fltol@f1 0001            __pcstackCOMRAM 0001             __end_of_fputc 3436  
           __end_of_fputs 38EA             __end_of_putch 3B40            _Lcd_Set_Cursor 3664  
              ??_ADC_Init 0001                ??_ADC_Read 0003                 ?_Lcd_Init 0001  
               ?_Lcd_Port 0001                   ??_fputc 0005                   ??_fputs 000E  
                 ??_putch 0001                __pbssBANK0 00A2                __pbssBANK1 0100  
                 ?___flge 0028                   ?___fleq 0001                   ?___wmul 0001  
                 ?_efgtoa 0034                   ?_floorf 001A                   ?_memcpy 0001  
  __end_of_Lcd_Set_Cursor 36CA                   ?_strcpy 0001                 ?___xxtofl 0001  
              ??_Lcd_Init 0004              _Config_Clock 3B30                ??_Lcd_Port 0001  
          _Lcd_Write_Char 39E2                   _Lcd_Cmd 3AC8                   __Hparam 0000  
                 __Lparam 0000                   ___aodiv 2AC6                   ___fladd 17C6  
                 ___aomod 2DB6                   ___fldiv 20B0                   ___flneg 39AA  
                 ___flmul 1C86                   ___flsub 381A                   ___fltol 3064  
               ?_vfprintf 0092              __psmallconst 0800                   __pcinit 3AA4  
                 __ramtop 0800           ?_Lcd_Set_Cursor 0004                   __ptext0 2C4E  
                 __ptext1 3726                   __ptext2 3778                   __ptext3 1290  
                 __ptext4 082C                   __ptext5 38EA                   __ptext6 37CA  
                 __ptext7 35FE                   __ptext8 2700                   __ptext9 326E  
                 _isdigit 3A52                ??___xxtofl 0005                   _isspace 3860  
                 efgtoa@c 003A                   efgtoa@d 006B                   efgtoa@e 006F  
                 efgtoa@f 0036                   efgtoa@g 0082                   efgtoa@h 0077  
                 efgtoa@i 007F                   efgtoa@l 007B                   efgtoa@m 006D  
                 efgtoa@n 0086                   efgtoa@p 0062                   efgtoa@t 0064  
                 efgtoa@u 0088                   efgtoa@w 0071                   atoi@neg 000C  
                 _sprintf 3726    __end_of_Lcd_Write_Char 3A1A      end_of_initialization 3ABE  
                 floorf@e 0028                   floorf@m 0024                   floorf@u 002A  
                 floorf@x 001A                   memcpy@d 0007                   memcpy@n 0005  
                 memcpy@s 0009                   fputc@fp 0003             __Lmediumconst 0000  
            ?_Config_Port 0001                   fputs@fp 000C         __end_of_vfpfcnvrt 17C6  
              efgtoa@mode 0069                efgtoa@sign 0081                   postdec2 000FDD  
                 postinc0 000FEE                   postinc1 000FE6                   postinc2 000FDE  
        vfpfcnvrt@convarg 0044                 Lcd_Port@a 0001                ??_vfprintf 004F  
                 strcpy@d 0007                   strcpy@s 0005               ___fladd@grs 0010  
           ___xxtofl@sign 0009                 _TRISAbits 000F92               ___fldiv@grs 0014  
             ___fldiv@rem 000D           ?_Lcd_Write_Char 0001         Lcd_Write_String@a 0005  
       Lcd_Write_String@i 0007               ___flmul@grs 001C                 _Lcd_Clear 3B22  
          __end_of___flge 326E            __end_of___fleq 34E0               vfpfcnvrt@ap 0090  
             vfpfcnvrt@cp 004D               vfpfcnvrt@fp 008C            __end_of___wmul 3AA4  
        _Lcd_Write_String 396A            __end_of_efgtoa 1290            __end_of_floorf 2912  
          __end_of_memcpy 381A                floorf@F526 00A2            __end_of_strcpy 392A  
     start_initialization 3AA4               __end_of_abs 396A               __end_of_pad 358A  
   __end_of___fpclassifyf 336C               vfprintf@fmt 0094                ?_Lcd_Clear 0001  
                ??___flge 0030                  ??___fleq 0009                  ??___wmul 0005  
                ??_efgtoa 003B                  ??_floorf 001E                  ??_memcpy 0007  
         Lcd_Write_Char@a 0004           Lcd_Write_Char@y 0003                  ??_strcpy 0005  
               ___fladd@a 0005                 ___fladd@b 0001                 ___fldiv@a 0005  
               ___fldiv@b 0001                 ___flmul@a 0013                 ___flmul@b 000F  
             __pbssCOMRAM 005F                 ___flsub@a 002C                 ___flsub@b 0028  
           __pcstackBANK0 0060          ___aodiv@dividend 0001                  ?_Lcd_Cmd 0001  
             _efgtoa$1049 0066                 _dtoa$1018 002E          ??_Lcd_Set_Cursor 0005  
                ?___aodiv 0001                  ?___fladd 0001                  ?___aomod 0001  
                ?___fldiv 0001          ___aodiv@quotient 0013                  ?___flneg 0001  
                ?___flmul 000F                  ?___flsub 0028                  ?___fltol 0001  
             __smallconst 0800                  ?_isdigit 0001                  _ADC_Init 3AE8  
                _ADC_Read 3A1A                  ?_isspace 0001                  ?_sprintf 0098  
          ___wmul@product 0005                  _LATDbits 000F8C                  Lcd_Cmd@a 0003  
             ??_Lcd_Clear 0004                 _vfpfcnvrt 1290                _ADCON0bits 000FC2  
              _ADCON1bits 000FC1                _ADCON2bits 000FC0         ___wmul@multiplier 0001  
        ??_Lcd_Write_Char 0002              _isspace$1129 0005                  _Lcd_Init 358A  
                _Lcd_Port 36CA                vfpfcnvrt@c 004C  __end_of_Lcd_Write_String 39AA  
                __Hrparam 0000                 memcpy@tmp 000B                vfprintf@ap 0096  
                __Lrparam 0000                vfprintf@fp 0092                ?_vfpfcnvrt 008C  
         ___aodiv@divisor 0009           ___aodiv@counter 0011                _ANSELAbits 000F5B  
      ___fpclassifyf@F465 00A6                sprintf@fmt 009A                  ___xxtofl 2912  
                __ptext10 3064                  __ptext11 381A                  __ptext20 38A6  
                __ptext12 17C6                  __ptext21 336C                  __ptext13 39AA  
                __ptext30 2912                  __ptext22 3B3E                  __ptext14 1C86  
                __ptext31 396A                  __ptext23 392A                  __ptext15 316A  
                __ptext40 3A1A                  __ptext32 39E2                  __ptext24 2DB6  
                __ptext16 3436                  __ptext41 3AE8                  __ptext33 3664  
                __ptext25 2AC6                  __ptext17 20B0                  __ptext34 358A  
                __ptext26 2F1A                  __ptext18 244A                  __ptext35 3B22  
                __ptext27 3860                  __ptext19 34E0                  __ptext36 3AC8  
                __ptext28 3A52                  __ptext37 36CA                  __ptext29 3A7E  
                __ptext38 3B06                  __ptext39 3B30                strcpy@dest 0001  
                efgtoa@fp 0034                  efgtoa@ne 0060                  efgtoa@pp 0068  
                efgtoa@ou 0073                  isa$xinst 000000                  _vfprintf 3778  
                _voltaje1 00AE                  _voltaje2 00AA          ___aomod@dividend 0001  
                memcpy@d1 0001                  memcpy@s1 0003             ?_Config_Clock 0001  
                isdigit@c 0001        Lcd_Write_Char@temp 0002                 sprintf@ap 0051  
                isspace@c 0001                 strcpy@src 0003                _OSCCONbits 000FD3  
             efgtoa@nmode 006A           ___aomod@divisor 0009               ??_vfpfcnvrt 003F  
         ___aomod@counter 0011        Lcd_Set_Cursor@temp 0008                  sprintf@f 0053  
                sprintf@s 0098            ??_Config_Clock 0001             ___fladd@signs 000D  
            ___aodiv@sign 0012             ??_Config_Port 0001              ___fladd@aexp 000E  
            ___fladd@bexp 000F              ___aomod@sign 0012  
