

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sun Jul 10 19:33:29 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    22                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    24  0000                     
    25                           ; Version 2.35
    26                           ; Generated 05/05/2021 GMT
    27                           ; 
    28                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution. Publication is not required when
    42                           ;        this file is used in an embedded application.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC18F45K50 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     
    61                           	psect	idataCOMRAM
    62  0002DE                     __pidataCOMRAM:
    63                           	callstack 0
    64                           
    65                           ;initializer for _display_catodo
    66  0002DE  3F                 	db	63
    67  0002DF  06                 	db	6
    68  0002E0  5B                 	db	91
    69  0002E1  4F                 	db	79
    70  0002E2  66                 	db	102
    71  0002E3  6D                 	db	109
    72  0002E4  7D                 	db	125
    73  0002E5  07                 	db	7
    74  0002E6  7F                 	db	127
    75  0002E7  67                 	db	103
    76                           
    77                           ;initializer for _display_anodo
    78  0002E8  C0                 	db	192
    79  0002E9  F9                 	db	249
    80  0002EA  A4                 	db	164
    81  0002EB  B0                 	db	176
    82  0002EC  99                 	db	153
    83  0002ED  92                 	db	146
    84  0002EE  82                 	db	130
    85  0002EF  F8                 	db	248
    86  0002F0  80                 	db	128
    87  0002F1  90                 	db	144
    88  0000                     _LATAbits	set	3977
    89  0000                     _TMR0	set	4054
    90  0000                     _ANSELAbits	set	3931
    91  0000                     _ANSELD	set	3934
    92  0000                     _SLRCON	set	3962
    93  0000                     _LATA	set	3977
    94  0000                     _LATD	set	3980
    95  0000                     _OSCCONbits	set	4051
    96  0000                     _INTCONbits	set	4082
    97  0000                     _T0CONbits	set	4053
    98  0000                     _TRISAbits	set	3986
    99  0000                     _TRISD	set	3989
   100                           
   101                           ; #config settings
   102                           
   103                           	psect	cinit
   104  000264                     __pcinit:
   105                           	callstack 0
   106  000264                     start_initialization:
   107                           	callstack 0
   108  000264                     __initialization:
   109                           	callstack 0
   110                           
   111                           ; Initialize objects allocated to COMRAM (20 bytes)
   112                           ; load TBLPTR registers with __pidataCOMRAM
   113  000264  0EDE               	movlw	low __pidataCOMRAM
   114  000266  6EF6               	movwf	tblptrl,c
   115  000268  0E02               	movlw	high __pidataCOMRAM
   116  00026A  6EF7               	movwf	tblptrh,c
   117  00026C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   118  00026E  6EF8               	movwf	tblptru,c
   119  000270  EE00  F001         	lfsr	0,__pdataCOMRAM
   120  000274  EE10 F014          	lfsr	1,20
   121  000278                     copy_data0:
   122  000278  0009               	tblrd		*+
   123  00027A  CFF5 FFEE          	movff	tablat,postinc0
   124  00027E  50E5               	movf	postdec1,w,c
   125  000280  50E1               	movf	fsr1l,w,c
   126  000282  E1FA               	bnz	copy_data0
   127                           
   128                           ; Clear objects allocated to COMRAM (6 bytes)
   129  000284  6A29               	clrf	(__pbssCOMRAM+5)& (0+255),c
   130  000286  6A28               	clrf	(__pbssCOMRAM+4)& (0+255),c
   131  000288  6A27               	clrf	(__pbssCOMRAM+3)& (0+255),c
   132  00028A  6A26               	clrf	(__pbssCOMRAM+2)& (0+255),c
   133  00028C  6A25               	clrf	(__pbssCOMRAM+1)& (0+255),c
   134  00028E  6A24               	clrf	__pbssCOMRAM& (0+255),c
   135  000290                     end_of_initialization:
   136                           	callstack 0
   137  000290                     __end_of__initialization:
   138                           	callstack 0
   139  000290  902A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   140  000292  922A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   141  000294  0100               	movlb	0
   142  000296  EF10  F001         	goto	_main	;jump to C main() function
   143                           
   144                           	psect	bssCOMRAM
   145  000024                     __pbssCOMRAM:
   146                           	callstack 0
   147  000024                     _cuenta:
   148                           	callstack 0
   149  000024                     	ds	2
   150  000026                     _miles:
   151                           	callstack 0
   152  000026                     	ds	1
   153  000027                     _centenas:
   154                           	callstack 0
   155  000027                     	ds	1
   156  000028                     _decenas:
   157                           	callstack 0
   158  000028                     	ds	1
   159  000029                     _unidades:
   160                           	callstack 0
   161  000029                     	ds	1
   162                           
   163                           	psect	dataCOMRAM
   164  000001                     __pdataCOMRAM:
   165                           	callstack 0
   166  000001                     _display_catodo:
   167                           	callstack 0
   168  000001                     	ds	10
   169  00000B                     _display_anodo:
   170                           	callstack 0
   171  00000B                     	ds	10
   172                           
   173                           	psect	cstackCOMRAM
   174  000015                     __pcstackCOMRAM:
   175                           	callstack 0
   176  000015                     ?___lwdiv:
   177                           	callstack 0
   178  000015                     ___lwdiv@dividend:
   179                           	callstack 0
   180                           
   181                           ; 2 bytes @ 0x0
   182  000015                     	ds	2
   183  000017                     ___lwdiv@divisor:
   184                           	callstack 0
   185                           
   186                           ; 2 bytes @ 0x2
   187  000017                     	ds	2
   188  000019                     ___lwdiv@quotient:
   189                           	callstack 0
   190                           
   191                           ; 2 bytes @ 0x4
   192  000019                     	ds	2
   193  00001B                     ___lwdiv@counter:
   194                           	callstack 0
   195                           
   196                           ; 1 bytes @ 0x6
   197  00001B                     	ds	1
   198  00001C                     ?___lwmod:
   199                           	callstack 0
   200  00001C                     ___lwmod@dividend:
   201                           	callstack 0
   202                           
   203                           ; 2 bytes @ 0x7
   204  00001C                     	ds	2
   205  00001E                     ___lwmod@divisor:
   206                           	callstack 0
   207                           
   208                           ; 2 bytes @ 0x9
   209  00001E                     	ds	2
   210  000020                     ___lwmod@counter:
   211                           	callstack 0
   212                           
   213                           ; 1 bytes @ 0xB
   214  000020                     	ds	1
   215  000021                     Imprimir_display@dato:
   216                           	callstack 0
   217                           
   218                           ; 2 bytes @ 0xC
   219  000021                     	ds	2
   220  000023                     ??_Imprimir_display:
   221                           
   222                           ; 1 bytes @ 0xE
   223  000023                     	ds	1
   224  000024                     
   225                           ; 1 bytes @ 0xF
   226 ;;
   227 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   228 ;;
   229 ;; *************** function _main *****************
   230 ;; Defined at:
   231 ;;		line 35 in file "main.c"
   232 ;; Parameters:    Size  Location     Type
   233 ;;		None
   234 ;; Auto vars:     Size  Location     Type
   235 ;;		None
   236 ;; Return value:  Size  Location     Type
   237 ;;                  1    wreg      void 
   238 ;; Registers used:
   239 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   240 ;; Tracked objects:
   241 ;;		On entry : 0/0
   242 ;;		On exit  : 0/0
   243 ;;		Unchanged: 0/0
   244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   245 ;;      Params:         0       0       0       0       0       0       0       0       0
   246 ;;      Locals:         0       0       0       0       0       0       0       0       0
   247 ;;      Temps:          0       0       0       0       0       0       0       0       0
   248 ;;      Totals:         0       0       0       0       0       0       0       0       0
   249 ;;Total ram usage:        0 bytes
   250 ;; Hardware stack levels required when called: 3
   251 ;; This function calls:
   252 ;;		_Config_Clock
   253 ;;		_Config_Port
   254 ;;		_Config_TMR0_Temp
   255 ;;		_Config_TMRS_Interrupt
   256 ;;		_Imprimir_display
   257 ;; This function is called by:
   258 ;;		Startup code after reset
   259 ;; This function uses a non-reentrant model
   260 ;;
   261                           
   262                           	psect	text0
   263  000220                     __ptext0:
   264                           	callstack 0
   265  000220                     _main:
   266                           	callstack 28
   267  000220                     
   268                           ;main.c: 37:     Config_Clock();
   269  000220  EC79  F001         	call	_Config_Clock	;wreg free
   270                           
   271                           ;main.c: 38:     Config_Port();
   272  000224  EC4D  F001         	call	_Config_Port	;wreg free
   273                           
   274                           ;main.c: 40:     Config_TMR0_Temp();
   275  000228  EC61  F001         	call	_Config_TMR0_Temp	;wreg free
   276  00022C                     
   277                           ;main.c: 41:     Config_TMRS_Interrupt();
   278  00022C  EC80  F001         	call	_Config_TMRS_Interrupt	;wreg free
   279  000230                     l950:
   280                           
   281                           ;main.c: 45:         if(cuenta==520)cuenta=0;
   282  000230  0E08               	movlw	8
   283  000232  1824               	xorwf	_cuenta^0,w,c
   284  000234  E107               	bnz	u151
   285  000236  0E02               	movlw	2
   286  000238  1825               	xorwf	(_cuenta+1)^0,w,c
   287  00023A  A4D8               	btfss	status,2,c
   288  00023C  EF22  F001         	goto	u151
   289  000240  EF24  F001         	goto	u150
   290  000244                     u151:
   291  000244  EF28  F001         	goto	l954
   292  000248                     u150:
   293  000248  0E00               	movlw	0
   294  00024A  6E25               	movwf	(_cuenta+1)^0,c
   295  00024C  0E00               	movlw	0
   296  00024E  6E24               	movwf	_cuenta^0,c
   297  000250                     l954:
   298                           
   299                           ;main.c: 46:         Imprimir_display(cuenta);
   300  000250  C024  F021         	movff	_cuenta,Imprimir_display@dato
   301  000254  C025  F022         	movff	_cuenta+1,Imprimir_display@dato+1
   302  000258  EC17  F000         	call	_Imprimir_display	;wreg free
   303  00025C  EF18  F001         	goto	l950
   304  000260  EF15  F000         	goto	start
   305  000264                     __end_of_main:
   306                           	callstack 0
   307                           
   308 ;; *************** function _Imprimir_display *****************
   309 ;; Defined at:
   310 ;;		line 93 in file "main.c"
   311 ;; Parameters:    Size  Location     Type
   312 ;;  dato            2   12[COMRAM] unsigned short 
   313 ;; Auto vars:     Size  Location     Type
   314 ;;		None
   315 ;; Return value:  Size  Location     Type
   316 ;;                  1    wreg      void 
   317 ;; Registers used:
   318 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   319 ;; Tracked objects:
   320 ;;		On entry : 0/0
   321 ;;		On exit  : 0/0
   322 ;;		Unchanged: 0/0
   323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   324 ;;      Params:         2       0       0       0       0       0       0       0       0
   325 ;;      Locals:         0       0       0       0       0       0       0       0       0
   326 ;;      Temps:          1       0       0       0       0       0       0       0       0
   327 ;;      Totals:         3       0       0       0       0       0       0       0       0
   328 ;;Total ram usage:        3 bytes
   329 ;; Hardware stack levels used: 1
   330 ;; Hardware stack levels required when called: 2
   331 ;; This function calls:
   332 ;;		___lwdiv
   333 ;;		___lwmod
   334 ;; This function is called by:
   335 ;;		_main
   336 ;; This function uses a non-reentrant model
   337 ;;
   338                           
   339                           	psect	text1
   340  00002E                     __ptext1:
   341                           	callstack 0
   342  00002E                     _Imprimir_display:
   343                           	callstack 28
   344  00002E                     
   345                           ;main.c: 93: void Imprimir_display(uint16_t dato);main.c: 94: {;main.c: 95:     unidades
      +                          =dato%10;
   346  00002E  C021  F01C         	movff	Imprimir_display@dato,___lwmod@dividend
   347  000032  C022  F01D         	movff	Imprimir_display@dato+1,___lwmod@dividend+1
   348  000036  0E00               	movlw	0
   349  000038  6E1F               	movwf	(___lwmod@divisor+1)^0,c
   350  00003A  0E0A               	movlw	10
   351  00003C  6E1E               	movwf	___lwmod@divisor^0,c
   352  00003E  ECDE  F000         	call	___lwmod	;wreg free
   353  000042  501C               	movf	?___lwmod^0,w,c
   354  000044  6E29               	movwf	_unidades^0,c
   355                           
   356                           ;main.c: 96:     decenas=(dato/10)%10;
   357  000046  0E00               	movlw	0
   358  000048  6E18               	movwf	(___lwdiv@divisor+1)^0,c
   359  00004A  0E0A               	movlw	10
   360  00004C  6E17               	movwf	___lwdiv@divisor^0,c
   361  00004E  C021  F015         	movff	Imprimir_display@dato,___lwdiv@dividend
   362  000052  C022  F016         	movff	Imprimir_display@dato+1,___lwdiv@dividend+1
   363  000056  ECA4  F000         	call	___lwdiv	;wreg free
   364  00005A  C015  F01C         	movff	?___lwdiv,___lwmod@dividend
   365  00005E  C016  F01D         	movff	?___lwdiv+1,___lwmod@dividend+1
   366  000062  0E00               	movlw	0
   367  000064  6E1F               	movwf	(___lwmod@divisor+1)^0,c
   368  000066  0E0A               	movlw	10
   369  000068  6E1E               	movwf	___lwmod@divisor^0,c
   370  00006A  ECDE  F000         	call	___lwmod	;wreg free
   371  00006E  501C               	movf	?___lwmod^0,w,c
   372  000070  6E28               	movwf	_decenas^0,c
   373                           
   374                           ;main.c: 97:     centenas=(dato/100)%10;
   375  000072  0E00               	movlw	0
   376  000074  6E18               	movwf	(___lwdiv@divisor+1)^0,c
   377  000076  0E64               	movlw	100
   378  000078  6E17               	movwf	___lwdiv@divisor^0,c
   379  00007A  C021  F015         	movff	Imprimir_display@dato,___lwdiv@dividend
   380  00007E  C022  F016         	movff	Imprimir_display@dato+1,___lwdiv@dividend+1
   381  000082  ECA4  F000         	call	___lwdiv	;wreg free
   382  000086  C015  F01C         	movff	?___lwdiv,___lwmod@dividend
   383  00008A  C016  F01D         	movff	?___lwdiv+1,___lwmod@dividend+1
   384  00008E  0E00               	movlw	0
   385  000090  6E1F               	movwf	(___lwmod@divisor+1)^0,c
   386  000092  0E0A               	movlw	10
   387  000094  6E1E               	movwf	___lwmod@divisor^0,c
   388  000096  ECDE  F000         	call	___lwmod	;wreg free
   389  00009A  501C               	movf	?___lwmod^0,w,c
   390  00009C  6E27               	movwf	_centenas^0,c
   391                           
   392                           ;main.c: 98:     miles=(dato/1000);
   393  00009E  C021  F015         	movff	Imprimir_display@dato,___lwdiv@dividend
   394  0000A2  C022  F016         	movff	Imprimir_display@dato+1,___lwdiv@dividend+1
   395  0000A6  0E03               	movlw	3
   396  0000A8  6E18               	movwf	(___lwdiv@divisor+1)^0,c
   397  0000AA  0EE8               	movlw	232
   398  0000AC  6E17               	movwf	___lwdiv@divisor^0,c
   399  0000AE  ECA4  F000         	call	___lwdiv	;wreg free
   400  0000B2  5015               	movf	?___lwdiv^0,w,c
   401  0000B4  6E26               	movwf	_miles^0,c
   402  0000B6                     
   403                           ;main.c: 101:     LATD=display_anodo[unidades];
   404  0000B6  0E0B               	movlw	low _display_anodo
   405  0000B8  2429               	addwf	_unidades^0,w,c
   406  0000BA  6ED9               	movwf	fsr2l,c
   407  0000BC  6ADA               	clrf	fsr2h,c
   408  0000BE  0E00               	movlw	high _display_anodo
   409  0000C0  22DA               	addwfc	fsr2h,f,c
   410  0000C2  50DF               	movf	indf2,w,c
   411  0000C4  6E8C               	movwf	140,c	;volatile
   412  0000C6                     
   413                           ;main.c: 102:     LATAbits.LATA3=0;
   414  0000C6  9689               	bcf	137,3,c	;volatile
   415  0000C8                     
   416                           ;main.c: 103:     _delay((unsigned long)((2)*(16000000UL/4000.0)));
   417  0000C8  0E0B               	movlw	11
   418  0000CA  6E23               	movwf	??_Imprimir_display^0,c
   419  0000CC  0E62               	movlw	98
   420  0000CE                     u167:
   421  0000CE  2EE8               	decfsz	wreg,f,c
   422  0000D0  D7FE               	bra	u167
   423  0000D2  2E23               	decfsz	??_Imprimir_display^0,f,c
   424  0000D4  D7FC               	bra	u167
   425  0000D6  D000               	nop2	
   426  0000D8                     
   427                           ;main.c: 104:     LATAbits.LATA3=1;
   428  0000D8  8689               	bsf	137,3,c	;volatile
   429  0000DA                     
   430                           ;main.c: 107:     LATD=display_anodo[decenas];
   431  0000DA  0E0B               	movlw	low _display_anodo
   432  0000DC  2428               	addwf	_decenas^0,w,c
   433  0000DE  6ED9               	movwf	fsr2l,c
   434  0000E0  6ADA               	clrf	fsr2h,c
   435  0000E2  0E00               	movlw	high _display_anodo
   436  0000E4  22DA               	addwfc	fsr2h,f,c
   437  0000E6  50DF               	movf	indf2,w,c
   438  0000E8  6E8C               	movwf	140,c	;volatile
   439  0000EA                     
   440                           ;main.c: 108:     LATAbits.LATA2=0;
   441  0000EA  9489               	bcf	137,2,c	;volatile
   442  0000EC                     
   443                           ;main.c: 109:     _delay((unsigned long)((2)*(16000000UL/4000.0)));
   444  0000EC  0E0B               	movlw	11
   445  0000EE  6E23               	movwf	??_Imprimir_display^0,c
   446  0000F0  0E62               	movlw	98
   447  0000F2                     u177:
   448  0000F2  2EE8               	decfsz	wreg,f,c
   449  0000F4  D7FE               	bra	u177
   450  0000F6  2E23               	decfsz	??_Imprimir_display^0,f,c
   451  0000F8  D7FC               	bra	u177
   452  0000FA  D000               	nop2	
   453  0000FC                     
   454                           ;main.c: 110:     LATAbits.LATA2=1;
   455  0000FC  8489               	bsf	137,2,c	;volatile
   456  0000FE                     
   457                           ;main.c: 113:     LATD=display_anodo[centenas];
   458  0000FE  0E0B               	movlw	low _display_anodo
   459  000100  2427               	addwf	_centenas^0,w,c
   460  000102  6ED9               	movwf	fsr2l,c
   461  000104  6ADA               	clrf	fsr2h,c
   462  000106  0E00               	movlw	high _display_anodo
   463  000108  22DA               	addwfc	fsr2h,f,c
   464  00010A  50DF               	movf	indf2,w,c
   465  00010C  6E8C               	movwf	140,c	;volatile
   466  00010E                     
   467                           ;main.c: 114:     LATAbits.LATA1=0;
   468  00010E  9289               	bcf	137,1,c	;volatile
   469  000110                     
   470                           ;main.c: 115:     _delay((unsigned long)((2)*(16000000UL/4000.0)));
   471  000110  0E0B               	movlw	11
   472  000112  6E23               	movwf	??_Imprimir_display^0,c
   473  000114  0E62               	movlw	98
   474  000116                     u187:
   475  000116  2EE8               	decfsz	wreg,f,c
   476  000118  D7FE               	bra	u187
   477  00011A  2E23               	decfsz	??_Imprimir_display^0,f,c
   478  00011C  D7FC               	bra	u187
   479  00011E  D000               	nop2	
   480  000120                     
   481                           ;main.c: 116:     LATAbits.LATA1=1;
   482  000120  8289               	bsf	137,1,c	;volatile
   483  000122                     
   484                           ;main.c: 119:     LATD=display_anodo[miles];
   485  000122  0E0B               	movlw	low _display_anodo
   486  000124  2426               	addwf	_miles^0,w,c
   487  000126  6ED9               	movwf	fsr2l,c
   488  000128  6ADA               	clrf	fsr2h,c
   489  00012A  0E00               	movlw	high _display_anodo
   490  00012C  22DA               	addwfc	fsr2h,f,c
   491  00012E  50DF               	movf	indf2,w,c
   492  000130  6E8C               	movwf	140,c	;volatile
   493  000132                     
   494                           ;main.c: 120:     LATAbits.LATA0=0;
   495  000132  9089               	bcf	137,0,c	;volatile
   496  000134                     
   497                           ;main.c: 121:     _delay((unsigned long)((2)*(16000000UL/4000.0)));
   498  000134  0E0B               	movlw	11
   499  000136  6E23               	movwf	??_Imprimir_display^0,c
   500  000138  0E62               	movlw	98
   501  00013A                     u197:
   502  00013A  2EE8               	decfsz	wreg,f,c
   503  00013C  D7FE               	bra	u197
   504  00013E  2E23               	decfsz	??_Imprimir_display^0,f,c
   505  000140  D7FC               	bra	u197
   506  000142  D000               	nop2	
   507  000144                     
   508                           ;main.c: 122:     LATAbits.LATA0=1;
   509  000144  8089               	bsf	137,0,c	;volatile
   510  000146  0012               	return		;funcret
   511  000148                     __end_of_Imprimir_display:
   512                           	callstack 0
   513                           
   514 ;; *************** function ___lwmod *****************
   515 ;; Defined at:
   516 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lwmod.c"
   517 ;; Parameters:    Size  Location     Type
   518 ;;  dividend        2    7[COMRAM] unsigned int 
   519 ;;  divisor         2    9[COMRAM] unsigned int 
   520 ;; Auto vars:     Size  Location     Type
   521 ;;  counter         1   11[COMRAM] unsigned char 
   522 ;; Return value:  Size  Location     Type
   523 ;;                  2    7[COMRAM] unsigned int 
   524 ;; Registers used:
   525 ;;		wreg, status,2, status,0
   526 ;; Tracked objects:
   527 ;;		On entry : 0/0
   528 ;;		On exit  : 0/0
   529 ;;		Unchanged: 0/0
   530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   531 ;;      Params:         4       0       0       0       0       0       0       0       0
   532 ;;      Locals:         1       0       0       0       0       0       0       0       0
   533 ;;      Temps:          0       0       0       0       0       0       0       0       0
   534 ;;      Totals:         5       0       0       0       0       0       0       0       0
   535 ;;Total ram usage:        5 bytes
   536 ;; Hardware stack levels used: 1
   537 ;; Hardware stack levels required when called: 1
   538 ;; This function calls:
   539 ;;		Nothing
   540 ;; This function is called by:
   541 ;;		_Imprimir_display
   542 ;; This function uses a non-reentrant model
   543 ;;
   544                           
   545                           	psect	text2
   546  0001BC                     __ptext2:
   547                           	callstack 0
   548  0001BC                     ___lwmod:
   549                           	callstack 28
   550  0001BC  501E               	movf	___lwmod@divisor^0,w,c
   551  0001BE  101F               	iorwf	(___lwmod@divisor+1)^0,w,c
   552  0001C0  B4D8               	btfsc	status,2,c
   553  0001C2  EFE5  F000         	goto	u121
   554  0001C6  EFE7  F000         	goto	u120
   555  0001CA                     u121:
   556  0001CA  EF0B  F001         	goto	l584
   557  0001CE                     u120:
   558  0001CE  0E01               	movlw	1
   559  0001D0  6E20               	movwf	___lwmod@counter^0,c
   560  0001D2  EFEF  F000         	goto	l902
   561  0001D6                     l900:
   562  0001D6  90D8               	bcf	status,0,c
   563  0001D8  361E               	rlcf	___lwmod@divisor^0,f,c
   564  0001DA  361F               	rlcf	(___lwmod@divisor+1)^0,f,c
   565  0001DC  2A20               	incf	___lwmod@counter^0,f,c
   566  0001DE                     l902:
   567  0001DE  AE1F               	btfss	(___lwmod@divisor+1)^0,7,c
   568  0001E0  EFF4  F000         	goto	u131
   569  0001E4  EFF6  F000         	goto	u130
   570  0001E8                     u131:
   571  0001E8  EFEB  F000         	goto	l900
   572  0001EC                     u130:
   573  0001EC                     l904:
   574  0001EC  501E               	movf	___lwmod@divisor^0,w,c
   575  0001EE  5C1C               	subwf	___lwmod@dividend^0,w,c
   576  0001F0  501F               	movf	(___lwmod@divisor+1)^0,w,c
   577  0001F2  581D               	subwfb	(___lwmod@dividend+1)^0,w,c
   578  0001F4  A0D8               	btfss	status,0,c
   579  0001F6  EFFF  F000         	goto	u141
   580  0001FA  EF01  F001         	goto	u140
   581  0001FE                     u141:
   582  0001FE  EF05  F001         	goto	l908
   583  000202                     u140:
   584  000202  501E               	movf	___lwmod@divisor^0,w,c
   585  000204  5E1C               	subwf	___lwmod@dividend^0,f,c
   586  000206  501F               	movf	(___lwmod@divisor+1)^0,w,c
   587  000208  5A1D               	subwfb	(___lwmod@dividend+1)^0,f,c
   588  00020A                     l908:
   589  00020A  90D8               	bcf	status,0,c
   590  00020C  321F               	rrcf	(___lwmod@divisor+1)^0,f,c
   591  00020E  321E               	rrcf	___lwmod@divisor^0,f,c
   592  000210  2E20               	decfsz	___lwmod@counter^0,f,c
   593  000212  EFF6  F000         	goto	l904
   594  000216                     l584:
   595  000216  C01C  F01C         	movff	___lwmod@dividend,?___lwmod
   596  00021A  C01D  F01D         	movff	___lwmod@dividend+1,?___lwmod+1
   597  00021E  0012               	return		;funcret
   598  000220                     __end_of___lwmod:
   599                           	callstack 0
   600                           
   601 ;; *************** function ___lwdiv *****************
   602 ;; Defined at:
   603 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lwdiv.c"
   604 ;; Parameters:    Size  Location     Type
   605 ;;  dividend        2    0[COMRAM] unsigned int 
   606 ;;  divisor         2    2[COMRAM] unsigned int 
   607 ;; Auto vars:     Size  Location     Type
   608 ;;  quotient        2    4[COMRAM] unsigned int 
   609 ;;  counter         1    6[COMRAM] unsigned char 
   610 ;; Return value:  Size  Location     Type
   611 ;;                  2    0[COMRAM] unsigned int 
   612 ;; Registers used:
   613 ;;		wreg, status,2, status,0
   614 ;; Tracked objects:
   615 ;;		On entry : 0/0
   616 ;;		On exit  : 0/0
   617 ;;		Unchanged: 0/0
   618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   619 ;;      Params:         4       0       0       0       0       0       0       0       0
   620 ;;      Locals:         3       0       0       0       0       0       0       0       0
   621 ;;      Temps:          0       0       0       0       0       0       0       0       0
   622 ;;      Totals:         7       0       0       0       0       0       0       0       0
   623 ;;Total ram usage:        7 bytes
   624 ;; Hardware stack levels used: 1
   625 ;; Hardware stack levels required when called: 1
   626 ;; This function calls:
   627 ;;		Nothing
   628 ;; This function is called by:
   629 ;;		_Imprimir_display
   630 ;; This function uses a non-reentrant model
   631 ;;
   632                           
   633                           	psect	text3
   634  000148                     __ptext3:
   635                           	callstack 0
   636  000148                     ___lwdiv:
   637                           	callstack 28
   638  000148  0E00               	movlw	0
   639  00014A  6E1A               	movwf	(___lwdiv@quotient+1)^0,c
   640  00014C  0E00               	movlw	0
   641  00014E  6E19               	movwf	___lwdiv@quotient^0,c
   642  000150  5017               	movf	___lwdiv@divisor^0,w,c
   643  000152  1018               	iorwf	(___lwdiv@divisor+1)^0,w,c
   644  000154  B4D8               	btfsc	status,2,c
   645  000156  EFAF  F000         	goto	u91
   646  00015A  EFB1  F000         	goto	u90
   647  00015E                     u91:
   648  00015E  EFD9  F000         	goto	l574
   649  000162                     u90:
   650  000162  0E01               	movlw	1
   651  000164  6E1B               	movwf	___lwdiv@counter^0,c
   652  000166  EFB9  F000         	goto	l882
   653  00016A                     l880:
   654  00016A  90D8               	bcf	status,0,c
   655  00016C  3617               	rlcf	___lwdiv@divisor^0,f,c
   656  00016E  3618               	rlcf	(___lwdiv@divisor+1)^0,f,c
   657  000170  2A1B               	incf	___lwdiv@counter^0,f,c
   658  000172                     l882:
   659  000172  AE18               	btfss	(___lwdiv@divisor+1)^0,7,c
   660  000174  EFBE  F000         	goto	u101
   661  000178  EFC0  F000         	goto	u100
   662  00017C                     u101:
   663  00017C  EFB5  F000         	goto	l880
   664  000180                     u100:
   665  000180                     l884:
   666  000180  90D8               	bcf	status,0,c
   667  000182  3619               	rlcf	___lwdiv@quotient^0,f,c
   668  000184  361A               	rlcf	(___lwdiv@quotient+1)^0,f,c
   669  000186  5017               	movf	___lwdiv@divisor^0,w,c
   670  000188  5C15               	subwf	___lwdiv@dividend^0,w,c
   671  00018A  5018               	movf	(___lwdiv@divisor+1)^0,w,c
   672  00018C  5816               	subwfb	(___lwdiv@dividend+1)^0,w,c
   673  00018E  A0D8               	btfss	status,0,c
   674  000190  EFCC  F000         	goto	u111
   675  000194  EFCE  F000         	goto	u110
   676  000198                     u111:
   677  000198  EFD3  F000         	goto	l892
   678  00019C                     u110:
   679  00019C  5017               	movf	___lwdiv@divisor^0,w,c
   680  00019E  5E15               	subwf	___lwdiv@dividend^0,f,c
   681  0001A0  5018               	movf	(___lwdiv@divisor+1)^0,w,c
   682  0001A2  5A16               	subwfb	(___lwdiv@dividend+1)^0,f,c
   683  0001A4  8019               	bsf	___lwdiv@quotient^0,0,c
   684  0001A6                     l892:
   685  0001A6  90D8               	bcf	status,0,c
   686  0001A8  3218               	rrcf	(___lwdiv@divisor+1)^0,f,c
   687  0001AA  3217               	rrcf	___lwdiv@divisor^0,f,c
   688  0001AC  2E1B               	decfsz	___lwdiv@counter^0,f,c
   689  0001AE  EFC0  F000         	goto	l884
   690  0001B2                     l574:
   691  0001B2  C019  F015         	movff	___lwdiv@quotient,?___lwdiv
   692  0001B6  C01A  F016         	movff	___lwdiv@quotient+1,?___lwdiv+1
   693  0001BA  0012               	return		;funcret
   694  0001BC                     __end_of___lwdiv:
   695                           	callstack 0
   696                           
   697 ;; *************** function _Config_TMRS_Interrupt *****************
   698 ;; Defined at:
   699 ;;		line 127 in file "main.c"
   700 ;; Parameters:    Size  Location     Type
   701 ;;		None
   702 ;; Auto vars:     Size  Location     Type
   703 ;;		None
   704 ;; Return value:  Size  Location     Type
   705 ;;                  1    wreg      void 
   706 ;; Registers used:
   707 ;;		None
   708 ;; Tracked objects:
   709 ;;		On entry : 0/0
   710 ;;		On exit  : 0/0
   711 ;;		Unchanged: 0/0
   712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   713 ;;      Params:         0       0       0       0       0       0       0       0       0
   714 ;;      Locals:         0       0       0       0       0       0       0       0       0
   715 ;;      Temps:          0       0       0       0       0       0       0       0       0
   716 ;;      Totals:         0       0       0       0       0       0       0       0       0
   717 ;;Total ram usage:        0 bytes
   718 ;; Hardware stack levels used: 1
   719 ;; Hardware stack levels required when called: 1
   720 ;; This function calls:
   721 ;;		Nothing
   722 ;; This function is called by:
   723 ;;		_main
   724 ;; This function uses a non-reentrant model
   725 ;;
   726                           
   727                           	psect	text4
   728  000300                     __ptext4:
   729                           	callstack 0
   730  000300                     _Config_TMRS_Interrupt:
   731                           	callstack 29
   732  000300                     
   733                           ;main.c: 128:     INTCONbits.GIE = 1;
   734  000300  8EF2               	bsf	242,7,c	;volatile
   735                           
   736                           ;main.c: 129:     INTCONbits.PEIE = 1;
   737  000302  8CF2               	bsf	242,6,c	;volatile
   738                           
   739                           ;main.c: 132:     INTCONbits.TMR0IF = 0;
   740  000304  94F2               	bcf	242,2,c	;volatile
   741                           
   742                           ;main.c: 133:     INTCONbits.TMR0IE = 1;
   743  000306  8AF2               	bsf	242,5,c	;volatile
   744  000308  0012               	return		;funcret
   745  00030A                     __end_of_Config_TMRS_Interrupt:
   746                           	callstack 0
   747                           
   748 ;; *************** function _Config_TMR0_Temp *****************
   749 ;; Defined at:
   750 ;;		line 137 in file "main.c"
   751 ;; Parameters:    Size  Location     Type
   752 ;;		None
   753 ;; Auto vars:     Size  Location     Type
   754 ;;		None
   755 ;; Return value:  Size  Location     Type
   756 ;;                  1    wreg      void 
   757 ;; Registers used:
   758 ;;		wreg, status,2
   759 ;; Tracked objects:
   760 ;;		On entry : 0/0
   761 ;;		On exit  : 0/0
   762 ;;		Unchanged: 0/0
   763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   764 ;;      Params:         0       0       0       0       0       0       0       0       0
   765 ;;      Locals:         0       0       0       0       0       0       0       0       0
   766 ;;      Temps:          0       0       0       0       0       0       0       0       0
   767 ;;      Totals:         0       0       0       0       0       0       0       0       0
   768 ;;Total ram usage:        0 bytes
   769 ;; Hardware stack levels used: 1
   770 ;; Hardware stack levels required when called: 1
   771 ;; This function calls:
   772 ;;		Nothing
   773 ;; This function is called by:
   774 ;;		_main
   775 ;; This function uses a non-reentrant model
   776 ;;
   777                           
   778                           	psect	text5
   779  0002C2                     __ptext5:
   780                           	callstack 0
   781  0002C2                     _Config_TMR0_Temp:
   782                           	callstack 29
   783  0002C2                     
   784                           ;main.c: 139:     T0CONbits.TMR0ON = 0;
   785  0002C2  9ED5               	bcf	213,7,c	;volatile
   786                           
   787                           ;main.c: 140:     T0CONbits.T08BIT = 0;
   788  0002C4  9CD5               	bcf	213,6,c	;volatile
   789                           
   790                           ;main.c: 141:     T0CONbits.T0CS = 0;
   791  0002C6  9AD5               	bcf	213,5,c	;volatile
   792                           
   793                           ;main.c: 149:     T0CONbits.PSA = 0;
   794  0002C8  96D5               	bcf	213,3,c	;volatile
   795  0002CA                     
   796                           ;main.c: 150:     T0CONbits.T0PS = 0b110;
   797  0002CA  50D5               	movf	213,w,c	;volatile
   798  0002CC  0BF8               	andlw	-8
   799  0002CE  0906               	iorlw	6
   800  0002D0  6ED5               	movwf	213,c	;volatile
   801                           
   802                           ;main.c: 151:     TMR0 = 62411;
   803  0002D2  0EF3               	movlw	243
   804  0002D4  6ED7               	movwf	215,c	;volatile
   805  0002D6  0ECB               	movlw	203
   806  0002D8  6ED6               	movwf	214,c	;volatile
   807  0002DA                     
   808                           ;main.c: 152:     T0CONbits.TMR0ON = 1;
   809  0002DA  8ED5               	bsf	213,7,c	;volatile
   810  0002DC  0012               	return		;funcret
   811  0002DE                     __end_of_Config_TMR0_Temp:
   812                           	callstack 0
   813                           
   814 ;; *************** function _Config_Port *****************
   815 ;; Defined at:
   816 ;;		line 67 in file "main.c"
   817 ;; Parameters:    Size  Location     Type
   818 ;;		None
   819 ;; Auto vars:     Size  Location     Type
   820 ;;		None
   821 ;; Return value:  Size  Location     Type
   822 ;;                  1    wreg      void 
   823 ;; Registers used:
   824 ;;		wreg, status,2
   825 ;; Tracked objects:
   826 ;;		On entry : 0/0
   827 ;;		On exit  : 0/0
   828 ;;		Unchanged: 0/0
   829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   830 ;;      Params:         0       0       0       0       0       0       0       0       0
   831 ;;      Locals:         0       0       0       0       0       0       0       0       0
   832 ;;      Temps:          0       0       0       0       0       0       0       0       0
   833 ;;      Totals:         0       0       0       0       0       0       0       0       0
   834 ;;Total ram usage:        0 bytes
   835 ;; Hardware stack levels used: 1
   836 ;; Hardware stack levels required when called: 1
   837 ;; This function calls:
   838 ;;		Nothing
   839 ;; This function is called by:
   840 ;;		_main
   841 ;; This function uses a non-reentrant model
   842 ;;
   843                           
   844                           	psect	text6
   845  00029A                     __ptext6:
   846                           	callstack 0
   847  00029A                     _Config_Port:
   848                           	callstack 29
   849  00029A                     
   850                           ;main.c: 69:     LATD= 0b00000000;
   851  00029A  0E00               	movlw	0
   852  00029C  6E8C               	movwf	140,c	;volatile
   853                           
   854                           ;main.c: 70:     LATA= 0b00000000;
   855  00029E  0E00               	movlw	0
   856  0002A0  6E89               	movwf	137,c	;volatile
   857                           
   858                           ;main.c: 72:     SLRCON=0b00000000;
   859  0002A2  0E00               	movlw	0
   860  0002A4  6E7A               	movwf	122,c	;volatile
   861                           
   862                           ;main.c: 75:     ANSELD=0b00000000;
   863  0002A6  0E00               	movlw	0
   864  0002A8  010F               	movlb	15	; () banked
   865  0002AA  6F5E               	movwf	94,b	;volatile
   866  0002AC                     
   867                           ; BSR set to: 15
   868                           ;main.c: 77:     ANSELAbits.ANSA0=0;
   869  0002AC  915B               	bcf	91,0,b	;volatile
   870  0002AE                     
   871                           ; BSR set to: 15
   872                           ;main.c: 78:     ANSELAbits.ANSA1=0;
   873  0002AE  935B               	bcf	91,1,b	;volatile
   874  0002B0                     
   875                           ; BSR set to: 15
   876                           ;main.c: 79:     ANSELAbits.ANSA2=0;
   877  0002B0  955B               	bcf	91,2,b	;volatile
   878  0002B2                     
   879                           ; BSR set to: 15
   880                           ;main.c: 80:     ANSELAbits.ANSA3=0;
   881  0002B2  975B               	bcf	91,3,b	;volatile
   882                           
   883                           ;main.c: 83:     TRISD=0b00000000;
   884  0002B4  0E00               	movlw	0
   885  0002B6  6E95               	movwf	149,c	;volatile
   886  0002B8                     
   887                           ; BSR set to: 15
   888                           ;main.c: 86:     TRISAbits.TRISA0=0;
   889  0002B8  9092               	bcf	146,0,c	;volatile
   890  0002BA                     
   891                           ; BSR set to: 15
   892                           ;main.c: 87:     TRISAbits.TRISA1=0;
   893  0002BA  9292               	bcf	146,1,c	;volatile
   894  0002BC                     
   895                           ; BSR set to: 15
   896                           ;main.c: 88:     TRISAbits.TRISA2=0;
   897  0002BC  9492               	bcf	146,2,c	;volatile
   898  0002BE                     
   899                           ; BSR set to: 15
   900                           ;main.c: 89:     TRISAbits.TRISA3=0;
   901  0002BE  9692               	bcf	146,3,c	;volatile
   902  0002C0                     
   903                           ; BSR set to: 15
   904  0002C0  0012               	return		;funcret
   905  0002C2                     __end_of_Config_Port:
   906                           	callstack 0
   907                           
   908 ;; *************** function _Config_Clock *****************
   909 ;; Defined at:
   910 ;;		line 62 in file "main.c"
   911 ;; Parameters:    Size  Location     Type
   912 ;;		None
   913 ;; Auto vars:     Size  Location     Type
   914 ;;		None
   915 ;; Return value:  Size  Location     Type
   916 ;;                  1    wreg      void 
   917 ;; Registers used:
   918 ;;		wreg, status,2
   919 ;; Tracked objects:
   920 ;;		On entry : 0/0
   921 ;;		On exit  : 0/0
   922 ;;		Unchanged: 0/0
   923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   924 ;;      Params:         0       0       0       0       0       0       0       0       0
   925 ;;      Locals:         0       0       0       0       0       0       0       0       0
   926 ;;      Temps:          0       0       0       0       0       0       0       0       0
   927 ;;      Totals:         0       0       0       0       0       0       0       0       0
   928 ;;Total ram usage:        0 bytes
   929 ;; Hardware stack levels used: 1
   930 ;; Hardware stack levels required when called: 1
   931 ;; This function calls:
   932 ;;		Nothing
   933 ;; This function is called by:
   934 ;;		_main
   935 ;; This function uses a non-reentrant model
   936 ;;
   937                           
   938                           	psect	text7
   939  0002F2                     __ptext7:
   940                           	callstack 0
   941  0002F2                     _Config_Clock:
   942                           	callstack 29
   943  0002F2                     
   944                           ;main.c: 63:     OSCCONbits.IRCF=0b111;
   945  0002F2  0E70               	movlw	112
   946  0002F4  12D3               	iorwf	211,f,c	;volatile
   947                           
   948                           ;main.c: 64:     OSCCONbits.SCS=0b10;
   949  0002F6  50D3               	movf	211,w,c	;volatile
   950  0002F8  0BFC               	andlw	-4
   951  0002FA  0902               	iorlw	2
   952  0002FC  6ED3               	movwf	211,c	;volatile
   953  0002FE  0012               	return		;funcret
   954  000300                     __end_of_Config_Clock:
   955                           	callstack 0
   956                           
   957 ;; *************** function _ISR_TMR0 *****************
   958 ;; Defined at:
   959 ;;		line 52 in file "main.c"
   960 ;; Parameters:    Size  Location     Type
   961 ;;		None
   962 ;; Auto vars:     Size  Location     Type
   963 ;;		None
   964 ;; Return value:  Size  Location     Type
   965 ;;                  1    wreg      void 
   966 ;; Registers used:
   967 ;;		wreg, status,2, status,0
   968 ;; Tracked objects:
   969 ;;		On entry : 0/0
   970 ;;		On exit  : 0/0
   971 ;;		Unchanged: 0/0
   972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   973 ;;      Params:         0       0       0       0       0       0       0       0       0
   974 ;;      Locals:         0       0       0       0       0       0       0       0       0
   975 ;;      Temps:          0       0       0       0       0       0       0       0       0
   976 ;;      Totals:         0       0       0       0       0       0       0       0       0
   977 ;;Total ram usage:        0 bytes
   978 ;; Hardware stack levels used: 1
   979 ;; This function calls:
   980 ;;		Nothing
   981 ;; This function is called by:
   982 ;;		Interrupt level 2
   983 ;; This function uses a non-reentrant model
   984 ;;
   985                           
   986                           	psect	intcode
   987  000008                     __pintcode:
   988                           	callstack 0
   989  000008                     _ISR_TMR0:
   990                           	callstack 28
   991                           
   992                           ;incstack = 0
   993  000008  822A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   994  00000A                     
   995                           ;main.c: 53:     if(INTCONbits.TMR0IF){
   996  00000A  A4F2               	btfss	242,2,c	;volatile
   997  00000C  EF0A  F000         	goto	i2u8_41
   998  000010  EF0C  F000         	goto	i2u8_40
   999  000014                     i2u8_41:
  1000  000014  EF13  F000         	goto	i2l65
  1001  000018                     i2u8_40:
  1002  000018                     
  1003                           ;main.c: 54:         TMR0 = 62411;
  1004  000018  0EF3               	movlw	243
  1005  00001A  6ED7               	movwf	215,c	;volatile
  1006  00001C  0ECB               	movlw	203
  1007  00001E  6ED6               	movwf	214,c	;volatile
  1008  000020                     
  1009                           ;main.c: 55:         INTCONbits.TMR0IF=0;
  1010  000020  94F2               	bcf	242,2,c	;volatile
  1011  000022                     
  1012                           ;main.c: 56:         cuenta++;
  1013  000022  4A24               	infsnz	_cuenta^0,f,c
  1014  000024  2A25               	incf	(_cuenta+1)^0,f,c
  1015  000026                     i2l65:
  1016  000026  922A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1017  000028  0011               	retfie		f
  1018  00002A                     __end_of_ISR_TMR0:
  1019                           	callstack 0
  1020  0000                     
  1021                           	psect	rparam
  1022  0000                     
  1023                           	psect	temp
  1024  00002A                     btemp:
  1025                           	callstack 0
  1026  00002A                     	ds	1
  1027  0000                     int$flags	set	btemp
  1028  0000                     wtemp8	set	btemp+1
  1029  0000                     ttemp5	set	btemp+1
  1030  0000                     ttemp6	set	btemp+4
  1031  0000                     ttemp7	set	btemp+8
  1032                           
  1033                           	psect	idloc
  1034                           
  1035                           ;Config register IDLOC0 @ 0x200000
  1036                           ;	unspecified, using default values
  1037  200000                     	org	2097152
  1038  200000  FF                 	db	255
  1039                           
  1040                           ;Config register IDLOC1 @ 0x200001
  1041                           ;	unspecified, using default values
  1042  200001                     	org	2097153
  1043  200001  FF                 	db	255
  1044                           
  1045                           ;Config register IDLOC2 @ 0x200002
  1046                           ;	unspecified, using default values
  1047  200002                     	org	2097154
  1048  200002  FF                 	db	255
  1049                           
  1050                           ;Config register IDLOC3 @ 0x200003
  1051                           ;	unspecified, using default values
  1052  200003                     	org	2097155
  1053  200003  FF                 	db	255
  1054                           
  1055                           ;Config register IDLOC4 @ 0x200004
  1056                           ;	unspecified, using default values
  1057  200004                     	org	2097156
  1058  200004  FF                 	db	255
  1059                           
  1060                           ;Config register IDLOC5 @ 0x200005
  1061                           ;	unspecified, using default values
  1062  200005                     	org	2097157
  1063  200005  FF                 	db	255
  1064                           
  1065                           ;Config register IDLOC6 @ 0x200006
  1066                           ;	unspecified, using default values
  1067  200006                     	org	2097158
  1068  200006  FF                 	db	255
  1069                           
  1070                           ;Config register IDLOC7 @ 0x200007
  1071                           ;	unspecified, using default values
  1072  200007                     	org	2097159
  1073  200007  FF                 	db	255
  1074                           
  1075                           	psect	config
  1076                           
  1077                           ;Config register CONFIG1L @ 0x300000
  1078                           ;	PLL Selection
  1079                           ;	PLLSEL = PLL4X, 4x clock multiplier
  1080                           ;	PLL Enable Configuration bit
  1081                           ;	CFGPLLEN = OFF, PLL Disabled (firmware controlled)
  1082                           ;	CPU System Clock Postscaler
  1083                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
  1084                           ;	Low Speed USB mode with 48 MHz system clock
  1085                           ;	LS48MHZ = SYS24X4, System clock at 24 MHz, USB clock divider is set to 4
  1086  300000                     	org	3145728
  1087  300000  00                 	db	0
  1088                           
  1089                           ;Config register CONFIG1H @ 0x300001
  1090                           ;	Oscillator Selection
  1091                           ;	FOSC = INTOSCIO, Internal oscillator
  1092                           ;	Primary Oscillator Shutdown
  1093                           ;	PCLKEN = ON, Primary oscillator enabled
  1094                           ;	Fail-Safe Clock Monitor
  1095                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1096                           ;	Internal/External Oscillator Switchover
  1097                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1098  300001                     	org	3145729
  1099  300001  28                 	db	40
  1100                           
  1101                           ;Config register CONFIG2L @ 0x300002
  1102                           ;	Power-up Timer Enable
  1103                           ;	nPWRTEN = ON, Power up timer enabled
  1104                           ;	Brown-out Reset Enable
  1105                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
  1106                           ;	Brown-out Reset Voltage
  1107                           ;	BORV = 190, BOR set to 1.9V nominal
  1108                           ;	Low-Power Brown-out Reset
  1109                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  1110  300002                     	org	3145730
  1111  300002  5E                 	db	94
  1112                           
  1113                           ;Config register CONFIG2H @ 0x300003
  1114                           ;	Watchdog Timer Enable bits
  1115                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  1116                           ;	Watchdog Timer Postscaler
  1117                           ;	WDTPS = 32768, 1:32768
  1118  300003                     	org	3145731
  1119  300003  3C                 	db	60
  1120                           
  1121                           ; Padding undefined space
  1122  300004                     	org	3145732
  1123  300004  FF                 	db	255
  1124                           
  1125                           ;Config register CONFIG3H @ 0x300005
  1126                           ;	CCP2 MUX bit
  1127                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  1128                           ;	PORTB A/D Enable bit
  1129                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  1130                           ;	Timer3 Clock Input MUX bit
  1131                           ;	T3CMX = RC0, T3CKI function is on RC0
  1132                           ;	SDO Output MUX bit
  1133                           ;	SDOMX = RB3, SDO function is on RB3
  1134                           ;	Master Clear Reset Pin Enable
  1135                           ;	MCLRE = OFF, RE3 input pin enabled; external MCLR disabled
  1136  300005                     	org	3145733
  1137  300005  53                 	db	83
  1138                           
  1139                           ;Config register CONFIG4L @ 0x300006
  1140                           ;	Stack Full/Underflow Reset
  1141                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1142                           ;	Single-Supply ICSP Enable bit
  1143                           ;	LVP = OFF, Single-Supply ICSP disabled
  1144                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  1145                           ;	ICPRT = OFF, ICPORT disabled
  1146                           ;	Extended Instruction Set Enable bit
  1147                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  1148                           ;	Background Debugger Enable bit
  1149                           ;	DEBUG = 0x1, unprogrammed default
  1150  300006                     	org	3145734
  1151  300006  81                 	db	129
  1152                           
  1153                           ; Padding undefined space
  1154  300007                     	org	3145735
  1155  300007  FF                 	db	255
  1156                           
  1157                           ;Config register CONFIG5L @ 0x300008
  1158                           ;	Block 0 Code Protect
  1159                           ;	CP0 = OFF, Block 0 is not code-protected
  1160                           ;	Block 1 Code Protect
  1161                           ;	CP1 = OFF, Block 1 is not code-protected
  1162                           ;	Block 2 Code Protect
  1163                           ;	CP2 = OFF, Block 2 is not code-protected
  1164                           ;	Block 3 Code Protect
  1165                           ;	CP3 = OFF, Block 3 is not code-protected
  1166  300008                     	org	3145736
  1167  300008  0F                 	db	15
  1168                           
  1169                           ;Config register CONFIG5H @ 0x300009
  1170                           ;	Boot Block Code Protect
  1171                           ;	CPB = OFF, Boot block is not code-protected
  1172                           ;	Data EEPROM Code Protect
  1173                           ;	CPD = OFF, Data EEPROM is not code-protected
  1174  300009                     	org	3145737
  1175  300009  C0                 	db	192
  1176                           
  1177                           ;Config register CONFIG6L @ 0x30000A
  1178                           ;	Block 0 Write Protect
  1179                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
  1180                           ;	Block 1 Write Protect
  1181                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
  1182                           ;	Block 2 Write Protect
  1183                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
  1184                           ;	Block 3 Write Protect
  1185                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
  1186  30000A                     	org	3145738
  1187  30000A  0F                 	db	15
  1188                           
  1189                           ;Config register CONFIG6H @ 0x30000B
  1190                           ;	Configuration Registers Write Protect
  1191                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1192                           ;	Boot Block Write Protect
  1193                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
  1194                           ;	Data EEPROM Write Protect
  1195                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1196  30000B                     	org	3145739
  1197  30000B  E0                 	db	224
  1198                           
  1199                           ;Config register CONFIG7L @ 0x30000C
  1200                           ;	Block 0 Table Read Protect
  1201                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
  1202                           ;	Block 1 Table Read Protect
  1203                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
  1204                           ;	Block 2 Table Read Protect
  1205                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
  1206                           ;	Block 3 Table Read Protect
  1207                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
  1208  30000C                     	org	3145740
  1209  30000C  0F                 	db	15
  1210                           
  1211                           ;Config register CONFIG7H @ 0x30000D
  1212                           ;	Boot Block Table Read Protect
  1213                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
  1214  30000D                     	org	3145741
  1215  30000D  40                 	db	64
  1216                           tosu	equ	0xFFF
  1217                           tosh	equ	0xFFE
  1218                           tosl	equ	0xFFD
  1219                           stkptr	equ	0xFFC
  1220                           pclatu	equ	0xFFB
  1221                           pclath	equ	0xFFA
  1222                           pcl	equ	0xFF9
  1223                           tblptru	equ	0xFF8
  1224                           tblptrh	equ	0xFF7
  1225                           tblptrl	equ	0xFF6
  1226                           tablat	equ	0xFF5
  1227                           prodh	equ	0xFF4
  1228                           prodl	equ	0xFF3
  1229                           indf0	equ	0xFEF
  1230                           postinc0	equ	0xFEE
  1231                           postdec0	equ	0xFED
  1232                           preinc0	equ	0xFEC
  1233                           plusw0	equ	0xFEB
  1234                           fsr0h	equ	0xFEA
  1235                           fsr0l	equ	0xFE9
  1236                           wreg	equ	0xFE8
  1237                           indf1	equ	0xFE7
  1238                           postinc1	equ	0xFE6
  1239                           postdec1	equ	0xFE5
  1240                           preinc1	equ	0xFE4
  1241                           plusw1	equ	0xFE3
  1242                           fsr1h	equ	0xFE2
  1243                           fsr1l	equ	0xFE1
  1244                           bsr	equ	0xFE0
  1245                           indf2	equ	0xFDF
  1246                           postinc2	equ	0xFDE
  1247                           postdec2	equ	0xFDD
  1248                           preinc2	equ	0xFDC
  1249                           plusw2	equ	0xFDB
  1250                           fsr2h	equ	0xFDA
  1251                           fsr2l	equ	0xFD9
  1252                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     15      41
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_Imprimir_display
    _Imprimir_display->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _ISR_TMR0 in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR_TMR0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_TMR0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_TMR0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_TMR0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_TMR0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_TMR0 in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_TMR0 in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_TMR0 in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1397
                       _Config_Clock
                        _Config_Port
                   _Config_TMR0_Temp
              _Config_TMRS_Interrupt
                   _Imprimir_display
 ---------------------------------------------------------------------------------
 (1) _Imprimir_display                                     3     1      2    1397
                                             12 COMRAM     3     1      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     615
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     618
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _Config_TMRS_Interrupt                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Config_TMR0_Temp                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Config_Port                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Config_Clock                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR_TMR0                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Config_Clock
   _Config_Port
   _Config_TMR0_Temp
   _Config_TMRS_Interrupt
   _Imprimir_display
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 _ISR_TMR0 (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      32        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      F      29       1       43.6%
BITBIGSFRlllhh      3D      0       0      23        0.0%
BITBIGSFRllllll     1B      0       0      28        0.0%
BITBIGSFRlh         1A      0       0      21        0.0%
BITBIGSFRlllllh      E      0       0      27        0.0%
BITBIGSFRh           D      0       0      20        0.0%
BITBIGSFRllllll      8      0       0      30        0.0%
BITBIGSFRlllhll      5      0       0      25        0.0%
BITBIGSFRlllhlh      2      0       0      24        0.0%
BITBIGSFRllllll      2      0       0      29        0.0%
BITBIGSFRllllh       2      0       0      26        0.0%
BITBIGSFRllh         1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      29      31        0.0%
DATA                 0      0      29       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sun Jul 10 19:33:29 2022

                           l71 02C0                             l80 02DC                             l74 0146  
                           l68 02FE                             l77 0308                             u90 0162  
                           u91 015E                            l800 02AE                            l810 02BC  
                          l802 02B0                            l812 02BE                            l804 02B2  
                          l820 0300                            l900 01D6                            l581 01BA  
                          l806 02B8                            l814 02C2                            l574 01B2  
                          l910 0210                            l902 01DE                            l591 021E  
                          l808 02BA                            l816 02CA                            l904 01EC  
                          l584 0216                            l920 00D8                            l912 002E  
                          l818 02DA                            l906 0202                            l930 00FE  
                          l922 00DA                            l914 00B6                            l908 020A  
                          l940 0132                            l932 010E                            l924 00EA  
                          l916 00C6                            l942 0134                            l934 0110  
                          l926 00EC                            l918 00C8                            l950 0230  
                          l880 016A                            l944 0144                            l936 0120  
                          l928 00FC                            l952 0248                            l794 02F2  
                          l890 01A4                            l882 0172                            l874 0148  
                          l938 0122                            l954 0250                            l946 0220  
                          l796 029A                            l892 01A6                            l884 0180  
                          l876 0150                            l948 022C                            l798 02AC  
                          l894 01AC                            l886 0186                            l878 0162  
                          l888 019C                            l896 01BC                            l898 01CE  
                          u100 0180                            u101 017C                            u110 019C  
                          u111 0198                            u120 01CE                            u121 01CA  
                          u130 01EC                            u131 01E8                            u140 0202  
                          u141 01FE                            u150 0248                            u151 0244  
                          u167 00CE                            u177 00F2                            u187 0116  
                          u197 013A                            wreg 000FE8                           _LATA 000F89  
                         _LATD 000F8C                           i2l65 0026                           _TMR0 000FD6  
                         _main 0220                           indf2 000FDF                           fsr1l 000FE1  
                         fsr2l 000FD9                           btemp 002A                           start 002A  
             _Imprimir_display 002E                   ___param_bank 000000            __end_of_Config_Port 02C2  
                        ?_main 0015                __end_of___lwdiv 01BC                __end_of___lwmod 0220  
                        i2l870 0020                          i2l872 0022                          i2l866 000A  
                        i2l868 0018                          _TRISD 000F95               __end_of_ISR_TMR0 002A  
     __end_of_Config_TMR0_Temp 02DE                          _miles 0026                          tablat 000FF5  
                        ttemp5 002B                          ttemp6 002E                          ttemp7 0032  
                        status 000FD8                          wtemp8 002B                __initialization 0264  
         __end_of_Config_Clock 0300                   __end_of_main 0264          _Config_TMRS_Interrupt 0300  
                       ??_main 0024                  __activetblptr 000000                         _ANSELD 000F5E  
                       _SLRCON 000F7A                         i2u8_40 0018                         i2u8_41 0014  
                  _Config_Port 029A                      ??___lwdiv 0019                      ??___lwmod 0020  
                       _cuenta 0024                         isa$std 000001                   __pdataCOMRAM 0001  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
                   __accesstop 0060        __end_of__initialization 0290                  ___rparam_used 000001  
                    ?_ISR_TMR0 0015         ?_Config_TMRS_Interrupt 0015                 __pcstackCOMRAM 0015  
     __end_of_Imprimir_display 0148                     ??_ISR_TMR0 0015              ?_Config_TMR0_Temp 0015  
                 _Config_Clock 02F2             ??_Config_TMR0_Temp 0015                        __Hparam 0000  
                      __Lparam 0000                        ___lwdiv 0148                        ___lwmod 01BC  
                      _decenas 0028                        __pcinit 0264                        __ramtop 0800  
                      __ptext0 0220                        __ptext1 002E                        __ptext2 01BC  
                      __ptext3 0148                        __ptext4 0300                        __ptext5 02C2  
                      __ptext6 029A                        __ptext7 02F2                      _T0CONbits 000FD5  
         end_of_initialization 0290                   ?_Config_Port 0015                        postdec1 000FE5  
                      postinc0 000FEE                      _TRISAbits 000F92        ??_Config_TMRS_Interrupt 0015  
                __pidataCOMRAM 02DE            start_initialization 0264              ?_Imprimir_display 0021  
         Imprimir_display@dato 0021             ??_Imprimir_display 0023                    __pbssCOMRAM 0024  
             ___lwdiv@dividend 0015                      __pintcode 0008                       ?___lwdiv 0015  
                     ?___lwmod 001C               ___lwdiv@quotient 0019                       _LATAbits 000F89  
                     _ISR_TMR0 0008                      copy_data0 0278                       __Hrparam 0000  
__end_of_Config_TMRS_Interrupt 030A                       __Lrparam 0000                     _ANSELAbits 000F5B  
              ___lwdiv@divisor 0017                       _centenas 0027                ___lwdiv@counter 001B  
             _Config_TMR0_Temp 02C2                       isa$xinst 000000                       int$flags 002A  
                     _unidades 0029                     _INTCONbits 000FF2                  ?_Config_Clock 0015  
                     intlevel2 0000               ___lwmod@dividend 001C                     _OSCCONbits 000FD3  
               _display_catodo 0001                ___lwmod@divisor 001E                ___lwmod@counter 0020  
               ??_Config_Clock 0015                  _display_anodo 000B                  ??_Config_Port 0015  
