

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sun Jul 10 15:23:30 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    40                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    41                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    42                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    43  0000                     
    44                           ; Version 2.35
    45                           ; Generated 05/05/2021 GMT
    46                           ; 
    47                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution. Publication is not required when
    61                           ;        this file is used in an embedded application.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC18F45K50 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79  0000                     _TRISCbits	set	3988
    80  0000                     _LATCbits	set	3979
    81  0000                     _LATD	set	3980
    82  0000                     _OSCCONbits	set	4051
    83  0000                     _LATDbits	set	3980
    84  0000                     _LATC	set	3979
    85  0000                     _TMR0	set	4054
    86  0000                     _ANSELB	set	3932
    87  0000                     _ANSELD	set	3934
    88  0000                     _SLRCON	set	3962
    89  0000                     _LATB	set	3978
    90  0000                     _INTCONbits	set	4082
    91  0000                     _T0CONbits	set	4053
    92  0000                     _TRISB	set	3987
    93  0000                     _TRISD	set	3989
    94                           
    95                           	psect	smallconst
    96  000800                     __psmallconst:
    97                           	callstack 0
    98  000800  00                 	db	0
    99  000801                     STR_1:
   100  000801  54                 	db	84	;'T'
   101  000802  4D                 	db	77	;'M'
   102  000803  52                 	db	82	;'R'
   103  000804  30                 	db	48	;'0'
   104  000805  3A                 	db	58	;':'
   105  000806  20                 	db	32
   106  000807  25                 	db	37
   107  000808  30                 	db	48	;'0'
   108  000809  35                 	db	53	;'5'
   109  00080A  75                 	db	117	;'u'
   110  00080B  00                 	db	0
   111  00080C  00                 	db	0	; dummy byte at the end
   112  0000                     
   113                           ; #config settings
   114                           
   115                           	psect	cinit
   116  001638                     __pcinit:
   117                           	callstack 0
   118  001638                     start_initialization:
   119                           	callstack 0
   120  001638                     __initialization:
   121                           	callstack 0
   122                           
   123                           ; Clear objects allocated to BANK0 (58 bytes)
   124  001638  EE00  F060         	lfsr	0,__pbssBANK0
   125  00163C  0E3A               	movlw	58
   126  00163E                     clear_0:
   127  00163E  6AEE               	clrf	postinc0,c
   128  001640  06E8               	decf	wreg,f,c
   129  001642  E1FD               	bnz	clear_0
   130  001644                     end_of_initialization:
   131                           	callstack 0
   132  001644                     __end_of__initialization:
   133                           	callstack 0
   134  001644  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   135  001646  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   136  001648  0E00               	movlw	low (__Lmediumconst shr (0+16))
   137  00164A  6EF8               	movwf	tblptru,c
   138  00164C  0100               	movlb	0
   139  00164E  EFF8  F008         	goto	_main	;jump to C main() function
   140                           
   141                           	psect	bssBANK0
   142  000060                     __pbssBANK0:
   143                           	callstack 0
   144  000060                     _nout:
   145                           	callstack 0
   146  000060                     	ds	2
   147  000062                     _width:
   148                           	callstack 0
   149  000062                     	ds	2
   150  000064                     _prec:
   151                           	callstack 0
   152  000064                     	ds	2
   153  000066                     _flags:
   154                           	callstack 0
   155  000066                     	ds	2
   156  000068                     _contador:
   157                           	callstack 0
   158  000068                     	ds	2
   159  00006A                     _dbuf:
   160                           	callstack 0
   161  00006A                     	ds	32
   162  00008A                     _str_contador:
   163                           	callstack 0
   164  00008A                     	ds	16
   165                           
   166                           	psect	cstackBANK0
   167  00009A                     __pcstackBANK0:
   168                           	callstack 0
   169  00009A                     sprintf@ap:
   170                           	callstack 0
   171                           
   172                           ; 2 bytes @ 0x0
   173  00009A                     	ds	2
   174  00009C                     sprintf@f:
   175                           	callstack 0
   176                           
   177                           ; 11 bytes @ 0x2
   178  00009C                     	ds	11
   179  0000A7                     ??_main:
   180                           
   181                           ; 1 bytes @ 0xD
   182  0000A7                     	ds	2
   183                           
   184                           	psect	cstackCOMRAM
   185  000001                     __pcstackCOMRAM:
   186                           	callstack 0
   187  000001                     ?_strlen:
   188                           	callstack 0
   189  000001                     ?_isdigit:
   190                           	callstack 0
   191  000001                     ?_isspace:
   192                           	callstack 0
   193  000001                     ?___wmul:
   194                           	callstack 0
   195  000001                     ?___lodiv:
   196                           	callstack 0
   197  000001                     ?___lomod:
   198                           	callstack 0
   199  000001                     Lcd_Port@a:
   200                           	callstack 0
   201  000001                     ___wmul@multiplier:
   202                           	callstack 0
   203  000001                     isdigit@c:
   204                           	callstack 0
   205  000001                     isspace@c:
   206                           	callstack 0
   207  000001                     fputc@c:
   208                           	callstack 0
   209  000001                     strlen@s:
   210                           	callstack 0
   211  000001                     ___lodiv@dividend:
   212                           	callstack 0
   213  000001                     ___lomod@dividend:
   214                           	callstack 0
   215                           
   216                           ; 8 bytes @ 0x0
   217  000001                     	ds	1
   218  000002                     ??_Lcd_Cmd:
   219  000002                     Lcd_Write_Char@temp:
   220                           	callstack 0
   221                           
   222                           ; 1 bytes @ 0x1
   223  000002                     	ds	1
   224  000003                     ??_isdigit:
   225  000003                     ??_isspace:
   226  000003                     Lcd_Cmd@a:
   227                           	callstack 0
   228  000003                     Lcd_Write_Char@y:
   229                           	callstack 0
   230  000003                     ___wmul@multiplicand:
   231                           	callstack 0
   232  000003                     fputc@fp:
   233                           	callstack 0
   234  000003                     strlen@a:
   235                           	callstack 0
   236                           
   237                           ; 2 bytes @ 0x2
   238  000003                     	ds	1
   239  000004                     ??_Lcd_Init:
   240  000004                     Lcd_Set_Cursor@b:
   241                           	callstack 0
   242  000004                     Lcd_Write_Char@a:
   243                           	callstack 0
   244                           
   245                           ; 1 bytes @ 0x3
   246  000004                     	ds	1
   247  000005                     ??_fputc:
   248  000005                     Lcd_Set_Cursor@a:
   249                           	callstack 0
   250  000005                     Lcd_Write_String@a:
   251                           	callstack 0
   252  000005                     ___wmul@product:
   253                           	callstack 0
   254                           
   255                           ; 2 bytes @ 0x4
   256  000005                     	ds	1
   257  000006                     Lcd_Set_Cursor@z:
   258                           	callstack 0
   259                           
   260                           ; 1 bytes @ 0x5
   261  000006                     	ds	1
   262  000007                     Lcd_Set_Cursor@y:
   263                           	callstack 0
   264  000007                     _isspace$968:
   265                           	callstack 0
   266  000007                     Lcd_Write_String@i:
   267                           	callstack 0
   268                           
   269                           ; 2 bytes @ 0x6
   270  000007                     	ds	1
   271  000008                     ?_atoi:
   272                           	callstack 0
   273  000008                     Lcd_Set_Cursor@temp:
   274                           	callstack 0
   275  000008                     atoi@s:
   276                           	callstack 0
   277                           
   278                           ; 2 bytes @ 0x7
   279  000008                     	ds	1
   280  000009                     ___lodiv@divisor:
   281                           	callstack 0
   282  000009                     ___lomod@divisor:
   283                           	callstack 0
   284                           
   285                           ; 8 bytes @ 0x8
   286  000009                     	ds	1
   287  00000A                     ??_atoi:
   288  00000A                     fputs@s:
   289                           	callstack 0
   290                           
   291                           ; 2 bytes @ 0x9
   292  00000A                     	ds	2
   293  00000C                     fputs@fp:
   294                           	callstack 0
   295                           
   296                           ; 2 bytes @ 0xB
   297  00000C                     	ds	2
   298  00000E                     fputs@c:
   299                           	callstack 0
   300  00000E                     atoi@neg:
   301                           	callstack 0
   302                           
   303                           ; 2 bytes @ 0xD
   304  00000E                     	ds	1
   305  00000F                     fputs@i:
   306                           	callstack 0
   307                           
   308                           ; 2 bytes @ 0xE
   309  00000F                     	ds	1
   310  000010                     atoi@n:
   311                           	callstack 0
   312                           
   313                           ; 2 bytes @ 0xF
   314  000010                     	ds	1
   315  000011                     ?_pad:
   316                           	callstack 0
   317  000011                     ___lomod@counter:
   318                           	callstack 0
   319  000011                     pad@fp:
   320                           	callstack 0
   321  000011                     ___lodiv@quotient:
   322                           	callstack 0
   323                           
   324                           ; 8 bytes @ 0x10
   325  000011                     	ds	2
   326  000013                     pad@buf:
   327                           	callstack 0
   328                           
   329                           ; 2 bytes @ 0x12
   330  000013                     	ds	2
   331  000015                     pad@p:
   332                           	callstack 0
   333                           
   334                           ; 2 bytes @ 0x14
   335  000015                     	ds	2
   336  000017                     ??_pad:
   337                           
   338                           ; 1 bytes @ 0x16
   339  000017                     	ds	1
   340  000018                     pad@i:
   341                           	callstack 0
   342                           
   343                           ; 2 bytes @ 0x17
   344  000018                     	ds	1
   345  000019                     ___lodiv@counter:
   346                           	callstack 0
   347                           
   348                           ; 1 bytes @ 0x18
   349  000019                     	ds	1
   350  00001A                     pad@w:
   351                           	callstack 0
   352                           
   353                           ; 2 bytes @ 0x19
   354  00001A                     	ds	2
   355  00001C                     ?_utoa:
   356                           	callstack 0
   357  00001C                     utoa@fp:
   358                           	callstack 0
   359                           
   360                           ; 2 bytes @ 0x1B
   361  00001C                     	ds	2
   362  00001E                     utoa@d:
   363                           	callstack 0
   364                           
   365                           ; 8 bytes @ 0x1D
   366  00001E                     	ds	8
   367  000026                     ??_utoa:
   368                           
   369                           ; 1 bytes @ 0x25
   370  000026                     	ds	8
   371  00002E                     utoa@p:
   372                           	callstack 0
   373                           
   374                           ; 2 bytes @ 0x2D
   375  00002E                     	ds	2
   376  000030                     utoa@w:
   377                           	callstack 0
   378                           
   379                           ; 2 bytes @ 0x2F
   380  000030                     	ds	2
   381  000032                     utoa@n:
   382                           	callstack 0
   383                           
   384                           ; 8 bytes @ 0x31
   385  000032                     	ds	8
   386  00003A                     utoa@i:
   387                           	callstack 0
   388                           
   389                           ; 2 bytes @ 0x39
   390  00003A                     	ds	2
   391  00003C                     ?_vfpfcnvrt:
   392                           	callstack 0
   393  00003C                     vfpfcnvrt@fp:
   394                           	callstack 0
   395                           
   396                           ; 2 bytes @ 0x3B
   397  00003C                     	ds	2
   398  00003E                     vfpfcnvrt@fmt:
   399                           	callstack 0
   400                           
   401                           ; 2 bytes @ 0x3D
   402  00003E                     	ds	2
   403  000040                     vfpfcnvrt@ap:
   404                           	callstack 0
   405                           
   406                           ; 2 bytes @ 0x3F
   407  000040                     	ds	2
   408  000042                     ??_vfpfcnvrt:
   409                           
   410                           ; 1 bytes @ 0x41
   411  000042                     	ds	4
   412  000046                     vfpfcnvrt@llu:
   413                           	callstack 0
   414                           
   415                           ; 8 bytes @ 0x45
   416  000046                     	ds	8
   417  00004E                     vfpfcnvrt@done:
   418                           	callstack 0
   419                           
   420                           ; 2 bytes @ 0x4D
   421  00004E                     	ds	2
   422  000050                     ?_vfprintf:
   423                           	callstack 0
   424  000050                     vfprintf@fp:
   425                           	callstack 0
   426                           
   427                           ; 2 bytes @ 0x4F
   428  000050                     	ds	2
   429  000052                     vfprintf@fmt:
   430                           	callstack 0
   431                           
   432                           ; 2 bytes @ 0x51
   433  000052                     	ds	2
   434  000054                     vfprintf@ap:
   435                           	callstack 0
   436                           
   437                           ; 2 bytes @ 0x53
   438  000054                     	ds	2
   439  000056                     vfprintf@cfmt:
   440                           	callstack 0
   441                           
   442                           ; 2 bytes @ 0x55
   443  000056                     	ds	2
   444  000058                     ?_sprintf:
   445                           	callstack 0
   446  000058                     sprintf@s:
   447                           	callstack 0
   448                           
   449                           ; 2 bytes @ 0x57
   450  000058                     	ds	2
   451  00005A                     sprintf@fmt:
   452                           	callstack 0
   453                           
   454                           ; 2 bytes @ 0x59
   455  00005A                     	ds	4
   456  00005E                     
   457                           ; 1 bytes @ 0x5D
   458 ;;
   459 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   460 ;;
   461 ;; *************** function _main *****************
   462 ;; Defined at:
   463 ;;		line 27 in file "main.c"
   464 ;; Parameters:    Size  Location     Type
   465 ;;		None
   466 ;; Auto vars:     Size  Location     Type
   467 ;;		None
   468 ;; Return value:  Size  Location     Type
   469 ;;                  1    wreg      void 
   470 ;; Registers used:
   471 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   472 ;; Tracked objects:
   473 ;;		On entry : 0/0
   474 ;;		On exit  : 0/0
   475 ;;		Unchanged: 0/0
   476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   477 ;;      Params:         0       0       0       0       0       0       0       0       0
   478 ;;      Locals:         0       0       0       0       0       0       0       0       0
   479 ;;      Temps:          0       2       0       0       0       0       0       0       0
   480 ;;      Totals:         0       2       0       0       0       0       0       0       0
   481 ;;Total ram usage:        2 bytes
   482 ;; Hardware stack levels required when called: 9
   483 ;; This function calls:
   484 ;;		_Config_Clock
   485 ;;		_Config_Port
   486 ;;		_Config_TMR0_Counter_16bits_prescaler
   487 ;;		_Config_TMR0_Interrupt
   488 ;;		_Lcd_Clear
   489 ;;		_Lcd_Init
   490 ;;		_Lcd_Set_Cursor
   491 ;;		_Lcd_Write_String
   492 ;;		_sprintf
   493 ;; This function is called by:
   494 ;;		Startup code after reset
   495 ;; This function uses a non-reentrant model
   496 ;;
   497                           
   498                           	psect	text0
   499  0011F0                     __ptext0:
   500                           	callstack 0
   501  0011F0                     _main:
   502                           	callstack 22
   503  0011F0                     
   504                           ;main.c: 29:     Config_Clock();
   505  0011F0  EC3C  F00B         	call	_Config_Clock	;wreg free
   506                           
   507                           ;main.c: 30:     Config_Port();
   508  0011F4  ECFA  F00A         	call	_Config_Port	;wreg free
   509                           
   510                           ;main.c: 31:     Lcd_Init();
   511  0011F8  EC34  F009         	call	_Lcd_Init	;wreg free
   512                           
   513                           ;main.c: 32:     Lcd_Clear();
   514  0011FC  EC35  F00B         	call	_Lcd_Clear	;wreg free
   515  001200                     
   516                           ;main.c: 33:     Config_TMR0_Interrupt();
   517  001200  EC43  F00B         	call	_Config_TMR0_Interrupt	;wreg free
   518  001204                     
   519                           ;main.c: 37:     Config_TMR0_Counter_16bits_prescaler();
   520  001204  EC29  F00B         	call	_Config_TMR0_Counter_16bits_prescaler	;wreg free
   521  001208                     l1861:
   522                           
   523                           ;main.c: 40:         contador=TMR0;
   524  001208  CFD6 F068          	movff	4054,_contador	;volatile
   525  00120C  CFD7 F069          	movff	4055,_contador+1	;volatile
   526  001210                     
   527                           ;main.c: 41:         sprintf(str_contador,"TMR0: %05u",contador);
   528  001210  0E8A               	movlw	low _str_contador
   529  001212  6E58               	movwf	sprintf@s^0,c
   530  001214  0E00               	movlw	high _str_contador
   531  001216  6E59               	movwf	(sprintf@s+1)^0,c
   532  001218  0E01               	movlw	low STR_1
   533  00121A  6E5A               	movwf	sprintf@fmt^0,c
   534  00121C  0E08               	movlw	high STR_1
   535  00121E  6E5B               	movwf	(sprintf@fmt+1)^0,c
   536  001220  C068  F05C         	movff	_contador,?_sprintf+4
   537  001224  C069  F05D         	movff	_contador+1,?_sprintf+5
   538  001228  EC00  F00A         	call	_sprintf	;wreg free
   539  00122C                     
   540                           ;main.c: 42:         Lcd_Set_Cursor(1,4);
   541  00122C  0E04               	movlw	4
   542  00122E  6E04               	movwf	Lcd_Set_Cursor@b^0,c
   543  001230  0E01               	movlw	1
   544  001232  EC6E  F009         	call	_Lcd_Set_Cursor
   545  001236                     
   546                           ;main.c: 43:         Lcd_Write_String(str_contador);
   547  001236  0E8A               	movlw	low _str_contador
   548  001238  6E05               	movwf	Lcd_Write_String@a^0,c
   549  00123A  0E00               	movlw	high _str_contador
   550  00123C  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
   551  00123E  EC74  F00A         	call	_Lcd_Write_String	;wreg free
   552  001242                     
   553                           ;main.c: 44:         LATB=(uint8_t)contador;
   554  001242  C068  FF8A         	movff	_contador,3978	;volatile
   555  001246                     
   556                           ;main.c: 45:         _delay((unsigned long)((50)*(16000000UL/4000.0)));
   557  001246  0E02               	movlw	2
   558  001248  0100               	movlb	0	; () banked
   559  00124A  6FA8               	movwf	(??_main+1)& (0+255),b
   560  00124C  0E04               	movlw	4
   561  00124E  6FA7               	movwf	??_main& (0+255),b
   562  001250  0EBA               	movlw	186
   563  001252                     u987:
   564  001252  2EE8               	decfsz	wreg,f,c
   565  001254  D7FE               	bra	u987
   566  001256  2FA7               	decfsz	??_main& (0+255),f,b
   567  001258  D7FC               	bra	u987
   568  00125A  2FA8               	decfsz	(??_main+1)& (0+255),f,b
   569  00125C  D7FA               	bra	u987
   570  00125E  F000               	nop	
   571  001260  EF04  F009         	goto	l1861
   572  001264  EF15  F000         	goto	start
   573  001268                     __end_of_main:
   574                           	callstack 0
   575                           
   576 ;; *************** function _sprintf *****************
   577 ;; Defined at:
   578 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_sprintf.c"
   579 ;; Parameters:    Size  Location     Type
   580 ;;  s               2   87[COMRAM] PTR unsigned char 
   581 ;;		 -> str_contador(16), 
   582 ;;  fmt             2   89[COMRAM] PTR const unsigned char 
   583 ;;		 -> STR_1(11), 
   584 ;; Auto vars:     Size  Location     Type
   585 ;;  f              11    2[BANK0 ] struct _IO_FILE
   586 ;;  ap              2    0[BANK0 ] PTR void [1]
   587 ;;		 -> ?_sprintf(2), 
   588 ;;  ret             2    0        int 
   589 ;; Return value:  Size  Location     Type
   590 ;;                  2   87[COMRAM] int 
   591 ;; Registers used:
   592 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   593 ;; Tracked objects:
   594 ;;		On entry : 0/0
   595 ;;		On exit  : 0/0
   596 ;;		Unchanged: 0/0
   597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   598 ;;      Params:         6       0       0       0       0       0       0       0       0
   599 ;;      Locals:         0      13       0       0       0       0       0       0       0
   600 ;;      Temps:          0       0       0       0       0       0       0       0       0
   601 ;;      Totals:         6      13       0       0       0       0       0       0       0
   602 ;;Total ram usage:       19 bytes
   603 ;; Hardware stack levels used: 1
   604 ;; Hardware stack levels required when called: 8
   605 ;; This function calls:
   606 ;;		_vfprintf
   607 ;; This function is called by:
   608 ;;		_main
   609 ;; This function uses a non-reentrant model
   610 ;;
   611                           
   612                           	psect	text1
   613  001400                     __ptext1:
   614                           	callstack 0
   615  001400                     _sprintf:
   616                           	callstack 22
   617  001400  0E5C               	movlw	low (?_sprintf+4)
   618  001402  0100               	movlb	0	; () banked
   619  001404  6F9A               	movwf	sprintf@ap& (0+255),b
   620  001406  0E00               	movlw	high (?_sprintf+4)
   621  001408  6F9B               	movwf	(sprintf@ap+1)& (0+255),b
   622  00140A  C058  F09C         	movff	sprintf@s,sprintf@f
   623  00140E  C059  F09D         	movff	sprintf@s+1,sprintf@f+1
   624  001412                     
   625                           ; BSR set to: 0
   626  001412  0E00               	movlw	0
   627  001414  6FA0               	movwf	(sprintf@f+4)& (0+255),b
   628  001416  0E00               	movlw	0
   629  001418  6F9F               	movwf	(sprintf@f+3)& (0+255),b
   630  00141A                     
   631                           ; BSR set to: 0
   632  00141A  0E00               	movlw	0
   633  00141C  6FA6               	movwf	(sprintf@f+10)& (0+255),b
   634  00141E  0E00               	movlw	0
   635  001420  6FA5               	movwf	(sprintf@f+9)& (0+255),b
   636  001422                     
   637                           ; BSR set to: 0
   638  001422  0E9C               	movlw	low sprintf@f
   639  001424  6E50               	movwf	vfprintf@fp^0,c
   640  001426  0E00               	movlw	high sprintf@f
   641  001428  6E51               	movwf	(vfprintf@fp+1)^0,c
   642  00142A  C05A  F052         	movff	sprintf@fmt,vfprintf@fmt
   643  00142E  C05B  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
   644  001432  0E9A               	movlw	low sprintf@ap
   645  001434  6E54               	movwf	vfprintf@ap^0,c
   646  001436  0E00               	movlw	high sprintf@ap
   647  001438  6E55               	movwf	(vfprintf@ap+1)^0,c
   648  00143A  ECA1  F009         	call	_vfprintf	;wreg free
   649  00143E  0100               	movlb	0	; () banked
   650  001440  519F               	movf	(sprintf@f+3)& (0+255),w,b
   651  001442  2458               	addwf	sprintf@s^0,w,c
   652  001444  6ED9               	movwf	fsr2l,c
   653  001446  51A0               	movf	(sprintf@f+4)& (0+255),w,b
   654  001448  2059               	addwfc	(sprintf@s+1)^0,w,c
   655  00144A  6EDA               	movwf	fsr2h,c
   656  00144C  0E00               	movlw	0
   657  00144E  6EDF               	movwf	indf2,c
   658  001450                     
   659                           ; BSR set to: 0
   660  001450  0012               	return		;funcret
   661  001452                     __end_of_sprintf:
   662                           	callstack 0
   663                           
   664 ;; *************** function _vfprintf *****************
   665 ;; Defined at:
   666 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
   667 ;; Parameters:    Size  Location     Type
   668 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
   669 ;;		 -> sprintf@f(11), 
   670 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
   671 ;;		 -> STR_1(11), 
   672 ;;  ap              2   83[COMRAM] PTR PTR void 
   673 ;;		 -> sprintf@ap(2), 
   674 ;; Auto vars:     Size  Location     Type
   675 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
   676 ;;		 -> STR_1(11), 
   677 ;; Return value:  Size  Location     Type
   678 ;;                  2   79[COMRAM] int 
   679 ;; Registers used:
   680 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   681 ;; Tracked objects:
   682 ;;		On entry : 0/0
   683 ;;		On exit  : 0/0
   684 ;;		Unchanged: 0/0
   685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   686 ;;      Params:         6       0       0       0       0       0       0       0       0
   687 ;;      Locals:         2       0       0       0       0       0       0       0       0
   688 ;;      Temps:          0       0       0       0       0       0       0       0       0
   689 ;;      Totals:         8       0       0       0       0       0       0       0       0
   690 ;;Total ram usage:        8 bytes
   691 ;; Hardware stack levels used: 1
   692 ;; Hardware stack levels required when called: 7
   693 ;; This function calls:
   694 ;;		_vfpfcnvrt
   695 ;; This function is called by:
   696 ;;		_sprintf
   697 ;; This function uses a non-reentrant model
   698 ;;
   699                           
   700                           	psect	text2
   701  001342                     __ptext2:
   702                           	callstack 0
   703  001342                     _vfprintf:
   704                           	callstack 22
   705  001342                     
   706                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
   707  001342  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
   708  001346  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   709  00134A                     
   710                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
   711  00134A  0E00               	movlw	0
   712  00134C  0100               	movlb	0	; () banked
   713  00134E  6F61               	movwf	(_nout+1)& (0+255),b
   714  001350  0E00               	movlw	0
   715  001352  6F60               	movwf	_nout& (0+255),b
   716                           
   717                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
   718  001354  EFBF  F009         	goto	l1773
   719  001358                     l1771:
   720                           
   721                           ; BSR set to: 0
   722                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
   723  001358  C050  F03C         	movff	vfprintf@fp,vfpfcnvrt@fp
   724  00135C  C051  F03D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   725  001360  0E56               	movlw	low vfprintf@cfmt
   726  001362  6E3E               	movwf	vfpfcnvrt@fmt^0,c
   727  001364  0E00               	movlw	high vfprintf@cfmt
   728  001366  6E3F               	movwf	(vfpfcnvrt@fmt+1)^0,c
   729  001368  C054  F040         	movff	vfprintf@ap,vfpfcnvrt@ap
   730  00136C  C055  F041         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   731  001370  EC07  F004         	call	_vfpfcnvrt	;wreg free
   732  001374  503C               	movf	?_vfpfcnvrt^0,w,c
   733  001376  0100               	movlb	0	; () banked
   734  001378  2760               	addwf	_nout& (0+255),f,b
   735  00137A  503D               	movf	(?_vfpfcnvrt+1)^0,w,c
   736  00137C  2361               	addwfc	(_nout+1)& (0+255),f,b
   737  00137E                     l1773:
   738                           
   739                           ; BSR set to: 0
   740                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
   741  00137E  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
   742  001382  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   743  001386                     	if	0	;tblptru may be non-zero
   744  001386                     	endif
   745  001386                     	if	0	;tblptru may be non-zero
   746  001386                     	endif
   747  001386  0008               	tblrd		*
   748  001388  50F5               	movf	tablat,w,c
   749  00138A  0900               	iorlw	0
   750  00138C  A4D8               	btfss	status,2,c
   751  00138E  EFCB  F009         	goto	u941
   752  001392  EFCD  F009         	goto	u940
   753  001396                     u941:
   754  001396  EFAC  F009         	goto	l1771
   755  00139A                     u940:
   756  00139A                     
   757                           ; BSR set to: 0
   758                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
   759  00139A  C060  F050         	movff	_nout,?_vfprintf
   760  00139E  C061  F051         	movff	_nout+1,?_vfprintf+1
   761  0013A2                     
   762                           ; BSR set to: 0
   763  0013A2  0012               	return		;funcret
   764  0013A4                     __end_of_vfprintf:
   765                           	callstack 0
   766                           
   767 ;; *************** function _vfpfcnvrt *****************
   768 ;; Defined at:
   769 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
   770 ;; Parameters:    Size  Location     Type
   771 ;;  fp              2   59[COMRAM] PTR struct _IO_FILE
   772 ;;		 -> sprintf@f(11), 
   773 ;;  fmt             2   61[COMRAM] PTR PTR unsigned char 
   774 ;;		 -> vfprintf@cfmt(2), 
   775 ;;  ap              2   63[COMRAM] PTR PTR void 
   776 ;;		 -> sprintf@ap(2), 
   777 ;; Auto vars:     Size  Location     Type
   778 ;;  llu             8   69[COMRAM] unsigned long long 
   779 ;;  ll              8    0        long long 
   780 ;;  f               4    0        long long 
   781 ;;  vp              3    0        PTR void 
   782 ;;  ct              3    0        unsigned char [3]
   783 ;;  cp              3    0        PTR unsigned char 
   784 ;;  done            2   77[COMRAM] int 
   785 ;;  i               2    0        int 
   786 ;;  c               1    0        unsigned char 
   787 ;; Return value:  Size  Location     Type
   788 ;;                  2   59[COMRAM] int 
   789 ;; Registers used:
   790 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   791 ;; Tracked objects:
   792 ;;		On entry : 0/0
   793 ;;		On exit  : 0/0
   794 ;;		Unchanged: 0/0
   795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   796 ;;      Params:         6       0       0       0       0       0       0       0       0
   797 ;;      Locals:        10       0       0       0       0       0       0       0       0
   798 ;;      Temps:          4       0       0       0       0       0       0       0       0
   799 ;;      Totals:        20       0       0       0       0       0       0       0       0
   800 ;;Total ram usage:       20 bytes
   801 ;; Hardware stack levels used: 1
   802 ;; Hardware stack levels required when called: 6
   803 ;; This function calls:
   804 ;;		_atoi
   805 ;;		_fputc
   806 ;;		_isdigit
   807 ;;		_utoa
   808 ;; This function is called by:
   809 ;;		_vfprintf
   810 ;; This function uses a non-reentrant model
   811 ;;
   812                           
   813                           	psect	text3
   814  00080E                     __ptext3:
   815                           	callstack 0
   816  00080E                     _vfpfcnvrt:
   817                           	callstack 22
   818  00080E                     
   819                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.36\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
   820  00080E  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   821  000812  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   822  000816  CFDE FFF6          	movff	postinc2,tblptrl
   823  00081A  CFDD FFF7          	movff	postdec2,tblptrh
   824  00081E                     	if	0	;tblptru may be non-zero
   825  00081E                     	endif
   826  00081E                     	if	0	;tblptru may be non-zero
   827  00081E                     	endif
   828  00081E  0008               	tblrd		*
   829  000820  50F5               	movf	tablat,w,c
   830  000822  0A25               	xorlw	37
   831  000824  A4D8               	btfss	status,2,c
   832  000826  EF17  F004         	goto	u861
   833  00082A  EF19  F004         	goto	u860
   834  00082E                     u861:
   835  00082E  EF88  F005         	goto	l1723
   836  000832                     u860:
   837  000832                     
   838                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
   839  000832  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   840  000836  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   841  00083A  2ADE               	incf	postinc2,f,c
   842  00083C  0E00               	movlw	0
   843  00083E  22DD               	addwfc	postdec2,f,c
   844  000840                     
   845                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
   846  000840  0E00               	movlw	0
   847  000842  0100               	movlb	0	; () banked
   848  000844  6F63               	movwf	(_width+1)& (0+255),b
   849  000846  0E00               	movlw	0
   850  000848  6F62               	movwf	_width& (0+255),b
   851  00084A  C062  F066         	movff	_width,_flags
   852  00084E  C063  F067         	movff	_width+1,_flags+1
   853  000852                     
   854                           ; BSR set to: 0
   855                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
   856  000852  6964               	setf	_prec& (0+255),b
   857  000854  6965               	setf	(_prec+1)& (0+255),b
   858  000856                     
   859                           ; BSR set to: 0
   860                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
   861  000856  0E00               	movlw	0
   862  000858  6E4F               	movwf	(vfpfcnvrt@done+1)^0,c
   863  00085A  0E00               	movlw	0
   864  00085C  6E4E               	movwf	vfpfcnvrt@done^0,c
   865                           
   866                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
   867  00085E  EF7C  F004         	goto	l1679
   868  000862                     l1653:
   869                           
   870                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
   871  000862  0100               	movlb	0	; () banked
   872  000864  8166               	bsf	_flags& (0+255),0,b
   873  000866                     l1655:
   874                           
   875                           ; BSR set to: 0
   876                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
   877  000866  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   878  00086A  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   879  00086E  2ADE               	incf	postinc2,f,c
   880  000870  0E00               	movlw	0
   881  000872  22DD               	addwfc	postdec2,f,c
   882                           
   883                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
   884  000874  EF7C  F004         	goto	l1679
   885  000878                     l1657:
   886                           
   887                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
   888  000878  0100               	movlb	0	; () banked
   889  00087A  8366               	bsf	_flags& (0+255),1,b
   890  00087C  EF33  F004         	goto	l1655
   891  000880                     l1661:
   892                           
   893                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
   894  000880  0100               	movlb	0	; () banked
   895  000882  8566               	bsf	_flags& (0+255),2,b
   896  000884  EF33  F004         	goto	l1655
   897  000888                     l1665:
   898                           
   899                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
   900  000888  0100               	movlb	0	; () banked
   901  00088A  8766               	bsf	_flags& (0+255),3,b
   902  00088C  EF33  F004         	goto	l1655
   903  000890                     l1669:
   904                           
   905                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
   906  000890  0100               	movlb	0	; () banked
   907  000892  8966               	bsf	_flags& (0+255),4,b
   908  000894  EF33  F004         	goto	l1655
   909  000898                     l1673:
   910                           
   911                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
   912  000898  0E00               	movlw	0
   913  00089A  6E4F               	movwf	(vfpfcnvrt@done+1)^0,c
   914  00089C  0E01               	movlw	1
   915  00089E  6E4E               	movwf	vfpfcnvrt@done^0,c
   916                           
   917                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
   918  0008A0  EF7C  F004         	goto	l1679
   919  0008A4                     l1677:
   920  0008A4  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   921  0008A8  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   922  0008AC  CFDE FFF6          	movff	postinc2,tblptrl
   923  0008B0  CFDD FFF7          	movff	postdec2,tblptrh
   924  0008B4                     	if	0	;tblptru may be non-zero
   925  0008B4                     	endif
   926  0008B4                     	if	0	;tblptru may be non-zero
   927  0008B4                     	endif
   928  0008B4  0008               	tblrd		*
   929  0008B6  50F5               	movf	tablat,w,c
   930  0008B8  6E42               	movwf	??_vfpfcnvrt^0,c
   931  0008BA  6A43               	clrf	(??_vfpfcnvrt+1)^0,c
   932                           
   933                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   934                           ; Switch size 1, requested type "simple"
   935                           ; Number of cases is 1, Range of values is 0 to 0
   936                           ; switch strategies available:
   937                           ; Name         Instructions Cycles
   938                           ; simple_byte            4     3 (average)
   939                           ;	Chosen strategy is simple_byte
   940  0008BC  5043               	movf	(??_vfpfcnvrt+1)^0,w,c
   941  0008BE  0A00               	xorlw	0	; case 0
   942  0008C0  B4D8               	btfsc	status,2,c
   943  0008C2  EF65  F004         	goto	l1927
   944  0008C6  EF4C  F004         	goto	l1673
   945  0008CA                     l1927:
   946                           
   947                           ; Switch size 1, requested type "simple"
   948                           ; Number of cases is 5, Range of values is 32 to 48
   949                           ; switch strategies available:
   950                           ; Name         Instructions Cycles
   951                           ; simple_byte           16     9 (average)
   952                           ;	Chosen strategy is simple_byte
   953  0008CA  5042               	movf	??_vfpfcnvrt^0,w,c
   954  0008CC  0A20               	xorlw	32	; case 32
   955  0008CE  B4D8               	btfsc	status,2,c
   956  0008D0  EF44  F004         	goto	l1665
   957  0008D4  0A03               	xorlw	3	; case 35
   958  0008D6  B4D8               	btfsc	status,2,c
   959  0008D8  EF48  F004         	goto	l1669
   960  0008DC  0A08               	xorlw	8	; case 43
   961  0008DE  B4D8               	btfsc	status,2,c
   962  0008E0  EF40  F004         	goto	l1661
   963  0008E4  0A06               	xorlw	6	; case 45
   964  0008E6  B4D8               	btfsc	status,2,c
   965  0008E8  EF31  F004         	goto	l1653
   966  0008EC  0A1D               	xorlw	29	; case 48
   967  0008EE  B4D8               	btfsc	status,2,c
   968  0008F0  EF3C  F004         	goto	l1657
   969  0008F4  EF4C  F004         	goto	l1673
   970  0008F8                     l1679:
   971                           
   972                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
   973  0008F8  504E               	movf	vfpfcnvrt@done^0,w,c
   974  0008FA  104F               	iorwf	(vfpfcnvrt@done+1)^0,w,c
   975  0008FC  B4D8               	btfsc	status,2,c
   976  0008FE  EF83  F004         	goto	u871
   977  000902  EF85  F004         	goto	u870
   978  000906                     u871:
   979  000906  EF52  F004         	goto	l1677
   980  00090A                     u870:
   981  00090A                     
   982                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
   983  00090A  0100               	movlb	0	; () banked
   984  00090C  A166               	btfss	_flags& (0+255),0,b
   985  00090E  EF8B  F004         	goto	u881
   986  000912  EF8D  F004         	goto	u880
   987  000916                     u881:
   988  000916  EF8E  F004         	goto	l1683
   989  00091A                     u880:
   990  00091A                     
   991                           ; BSR set to: 0
   992                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
   993  00091A  9366               	bcf	_flags& (0+255),1,b
   994  00091C                     l1683:
   995                           
   996                           ; BSR set to: 0
   997                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
   998  00091C  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   999  000920  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1000  000924  CFDE FFF6          	movff	postinc2,tblptrl
  1001  000928  CFDD FFF7          	movff	postdec2,tblptrh
  1002  00092C                     	if	0	;tblptru may be non-zero
  1003  00092C                     	endif
  1004  00092C                     	if	0	;tblptru may be non-zero
  1005  00092C                     	endif
  1006  00092C  0008               	tblrd		*
  1007  00092E  50F5               	movf	tablat,w,c
  1008  000930  0A2A               	xorlw	42
  1009  000932  A4D8               	btfss	status,2,c
  1010  000934  EF9E  F004         	goto	u891
  1011  000938  EFA0  F004         	goto	u890
  1012  00093C                     u891:
  1013  00093C  EFC9  F004         	goto	l1691
  1014  000940                     u890:
  1015  000940                     
  1016                           ; BSR set to: 0
  1017                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  1018  000940  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1019  000944  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1020  000948  2ADE               	incf	postinc2,f,c
  1021  00094A  0E00               	movlw	0
  1022  00094C  22DD               	addwfc	postdec2,f,c
  1023                           
  1024                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  1025  00094E  C040  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1026  000952  C041  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1027  000956  CFDF F042          	movff	indf2,??_vfpfcnvrt
  1028  00095A  0E02               	movlw	2
  1029  00095C  26DE               	addwf	postinc2,f,c
  1030  00095E  CFDF F043          	movff	indf2,??_vfpfcnvrt+1
  1031  000962  0E00               	movlw	0
  1032  000964  22DD               	addwfc	postdec2,f,c
  1033  000966  C042  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1034  00096A  C043  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1035  00096E  CFDE F062          	movff	postinc2,_width
  1036  000972  CFDD F063          	movff	postdec2,_width+1
  1037  000976                     
  1038                           ; BSR set to: 0
  1039                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  1040  000976  BF63               	btfsc	(_width+1)& (0+255),7,b
  1041  000978  EFC2  F004         	goto	u900
  1042  00097C  EFC0  F004         	goto	u901
  1043  000980                     u901:
  1044  000980  EFFF  F004         	goto	l1699
  1045  000984                     u900:
  1046  000984                     
  1047                           ; BSR set to: 0
  1048                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  1049  000984  8166               	bsf	_flags& (0+255),0,b
  1050                           
  1051                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  1052  000986  6D62               	negf	_width& (0+255),b
  1053  000988  1F63               	comf	(_width+1)& (0+255),f,b
  1054  00098A  B0D8               	btfsc	status,0,c
  1055  00098C  2B63               	incf	(_width+1)& (0+255),f,b
  1056  00098E  EFFF  F004         	goto	l1699
  1057  000992                     l1691:
  1058                           
  1059                           ; BSR set to: 0
  1060                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  1061  000992  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1062  000996  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1063  00099A  CFDE F008          	movff	postinc2,atoi@s
  1064  00099E  CFDD F009          	movff	postdec2,atoi@s+1
  1065  0009A2  ECA5  F006         	call	_atoi	;wreg free
  1066  0009A6  C008  F062         	movff	?_atoi,_width
  1067  0009AA  C009  F063         	movff	?_atoi+1,_width+1
  1068                           
  1069                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  1070  0009AE  EFE0  F004         	goto	l1697
  1071  0009B2                     l1693:
  1072                           
  1073                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  1074  0009B2  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1075  0009B6  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1076  0009BA  2ADE               	incf	postinc2,f,c
  1077  0009BC  0E00               	movlw	0
  1078  0009BE  22DD               	addwfc	postdec2,f,c
  1079  0009C0                     l1697:
  1080  0009C0  0ED0               	movlw	208
  1081  0009C2  6E42               	movwf	??_vfpfcnvrt^0,c
  1082  0009C4  0EFF               	movlw	255
  1083  0009C6  6E43               	movwf	(??_vfpfcnvrt+1)^0,c
  1084  0009C8  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1085  0009CC  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1086  0009D0  CFDE FFF6          	movff	postinc2,tblptrl
  1087  0009D4  CFDD FFF7          	movff	postdec2,tblptrh
  1088  0009D8                     	if	0	;tblptru may be non-zero
  1089  0009D8                     	endif
  1090  0009D8                     	if	0	;tblptru may be non-zero
  1091  0009D8                     	endif
  1092  0009D8  0008               	tblrd		*
  1093  0009DA  50F5               	movf	tablat,w,c
  1094  0009DC  6E44               	movwf	(??_vfpfcnvrt+2)^0,c
  1095  0009DE  6A45               	clrf	(??_vfpfcnvrt+3)^0,c
  1096  0009E0  5042               	movf	??_vfpfcnvrt^0,w,c
  1097  0009E2  2644               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1098  0009E4  5043               	movf	(??_vfpfcnvrt+1)^0,w,c
  1099  0009E6  2245               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1100  0009E8  5045               	movf	(??_vfpfcnvrt+3)^0,w,c
  1101  0009EA  E109               	bnz	u910
  1102  0009EC  0E0A               	movlw	10
  1103  0009EE  5C44               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1104  0009F0  A0D8               	btfss	status,0,c
  1105  0009F2  EFFD  F004         	goto	u911
  1106  0009F6  EFFF  F004         	goto	u910
  1107  0009FA                     u911:
  1108  0009FA  EFD9  F004         	goto	l1693
  1109  0009FE                     u910:
  1110  0009FE                     l1699:
  1111                           
  1112                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1204:         if 
      +                          (*fmt[0] == 'u') {
  1113  0009FE  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1114  000A02  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1115  000A06  CFDE FFF6          	movff	postinc2,tblptrl
  1116  000A0A  CFDD FFF7          	movff	postdec2,tblptrh
  1117  000A0E                     	if	0	;tblptru may be non-zero
  1118  000A0E                     	endif
  1119  000A0E                     	if	0	;tblptru may be non-zero
  1120  000A0E                     	endif
  1121  000A0E  0008               	tblrd		*
  1122  000A10  50F5               	movf	tablat,w,c
  1123  000A12  0A75               	xorlw	117
  1124  000A14  A4D8               	btfss	status,2,c
  1125  000A16  EF0F  F005         	goto	u921
  1126  000A1A  EF11  F005         	goto	u920
  1127  000A1E                     u921:
  1128  000A1E  EF52  F005         	goto	l1707
  1129  000A22                     u920:
  1130  000A22                     
  1131                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1206:            
      +                           ++*fmt;
  1132  000A22  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1133  000A26  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1134  000A2A  2ADE               	incf	postinc2,f,c
  1135  000A2C  0E00               	movlw	0
  1136  000A2E  22DD               	addwfc	postdec2,f,c
  1137                           
  1138                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1207:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  1139  000A30  C040  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1140  000A34  C041  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1141  000A38  CFDF F042          	movff	indf2,??_vfpfcnvrt
  1142  000A3C  0E02               	movlw	2
  1143  000A3E  26DE               	addwf	postinc2,f,c
  1144  000A40  CFDF F043          	movff	indf2,??_vfpfcnvrt+1
  1145  000A44  0E00               	movlw	0
  1146  000A46  22DD               	addwfc	postdec2,f,c
  1147  000A48  C042  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1148  000A4C  C043  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1149  000A50  CFDE F044          	movff	postinc2,??_vfpfcnvrt+2
  1150  000A54  CFDD F045          	movff	postdec2,??_vfpfcnvrt+3
  1151  000A58  C044  F046         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  1152  000A5C  C045  F047         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  1153  000A60  6A48               	clrf	(vfpfcnvrt@llu+2)^0,c
  1154  000A62  6A49               	clrf	(vfpfcnvrt@llu+3)^0,c
  1155  000A64  6A4A               	clrf	(vfpfcnvrt@llu+4)^0,c
  1156  000A66  6A4B               	clrf	(vfpfcnvrt@llu+5)^0,c
  1157  000A68  6A4C               	clrf	(vfpfcnvrt@llu+6)^0,c
  1158  000A6A  6A4D               	clrf	(vfpfcnvrt@llu+7)^0,c
  1159  000A6C                     
  1160                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1209:            
      +                           return utoa(fp, llu);
  1161  000A6C  C03C  F01C         	movff	vfpfcnvrt@fp,utoa@fp
  1162  000A70  C03D  F01D         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  1163  000A74  C046  F01E         	movff	vfpfcnvrt@llu,utoa@d
  1164  000A78  C047  F01F         	movff	vfpfcnvrt@llu+1,utoa@d+1
  1165  000A7C  C048  F020         	movff	vfpfcnvrt@llu+2,utoa@d+2
  1166  000A80  C049  F021         	movff	vfpfcnvrt@llu+3,utoa@d+3
  1167  000A84  C04A  F022         	movff	vfpfcnvrt@llu+4,utoa@d+4
  1168  000A88  C04B  F023         	movff	vfpfcnvrt@llu+5,utoa@d+5
  1169  000A8C  C04C  F024         	movff	vfpfcnvrt@llu+6,utoa@d+6
  1170  000A90  C04D  F025         	movff	vfpfcnvrt@llu+7,utoa@d+7
  1171  000A94  ECA4  F005         	call	_utoa	;wreg free
  1172  000A98  C01C  F03C         	movff	?_utoa,?_vfpfcnvrt
  1173  000A9C  C01D  F03D         	movff	?_utoa+1,?_vfpfcnvrt+1
  1174  000AA0  EFA3  F005         	goto	l884
  1175  000AA4                     l1707:
  1176                           
  1177                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1178  000AA4  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1179  000AA8  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1180  000AAC  CFDE FFF6          	movff	postinc2,tblptrl
  1181  000AB0  CFDD FFF7          	movff	postdec2,tblptrh
  1182  000AB4                     	if	0	;tblptru may be non-zero
  1183  000AB4                     	endif
  1184  000AB4                     	if	0	;tblptru may be non-zero
  1185  000AB4                     	endif
  1186  000AB4  0008               	tblrd		*
  1187  000AB6  50F5               	movf	tablat,w,c
  1188  000AB8  0A25               	xorlw	37
  1189  000ABA  A4D8               	btfss	status,2,c
  1190  000ABC  EF62  F005         	goto	u931
  1191  000AC0  EF64  F005         	goto	u930
  1192  000AC4                     u931:
  1193  000AC4  EF7B  F005         	goto	l1717
  1194  000AC8                     u930:
  1195  000AC8                     
  1196                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1197  000AC8  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1198  000ACC  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1199  000AD0  2ADE               	incf	postinc2,f,c
  1200  000AD2  0E00               	movlw	0
  1201  000AD4  22DD               	addwfc	postdec2,f,c
  1202  000AD6                     
  1203                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1204  000AD6  0E00               	movlw	0
  1205  000AD8  6E02               	movwf	(fputc@c+1)^0,c
  1206  000ADA  0E25               	movlw	37
  1207  000ADC  6E01               	movwf	fputc@c^0,c
  1208  000ADE  C03C  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1209  000AE2  C03D  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1210  000AE6  EC30  F008         	call	_fputc	;wreg free
  1211  000AEA                     l1713:
  1212                           
  1213                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1214  000AEA  0E00               	movlw	0
  1215  000AEC  6E3D               	movwf	(?_vfpfcnvrt+1)^0,c
  1216  000AEE  0E01               	movlw	1
  1217  000AF0  6E3C               	movwf	?_vfpfcnvrt^0,c
  1218  000AF2  EFA3  F005         	goto	l884
  1219  000AF6                     l1717:
  1220                           
  1221                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1222  000AF6  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1223  000AFA  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1224  000AFE  2ADE               	incf	postinc2,f,c
  1225  000B00  0E00               	movlw	0
  1226  000B02  22DD               	addwfc	postdec2,f,c
  1227  000B04                     
  1228                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1229  000B04  0E00               	movlw	0
  1230  000B06  6E3D               	movwf	(?_vfpfcnvrt+1)^0,c
  1231  000B08  0E00               	movlw	0
  1232  000B0A  6E3C               	movwf	?_vfpfcnvrt^0,c
  1233  000B0C  EFA3  F005         	goto	l884
  1234  000B10                     l1723:
  1235                           
  1236                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1237  000B10  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1238  000B14  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1239  000B18  CFDE FFF6          	movff	postinc2,tblptrl
  1240  000B1C  CFDD FFF7          	movff	postdec2,tblptrh
  1241  000B20                     	if	0	;tblptru may be non-zero
  1242  000B20                     	endif
  1243  000B20                     	if	0	;tblptru may be non-zero
  1244  000B20                     	endif
  1245  000B20  0008               	tblrd		*
  1246  000B22  50F5               	movf	tablat,w,c
  1247  000B24  6E01               	movwf	fputc@c^0,c
  1248  000B26  6A02               	clrf	(fputc@c+1)^0,c
  1249  000B28  C03C  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1250  000B2C  C03D  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1251  000B30  EC30  F008         	call	_fputc	;wreg free
  1252  000B34                     
  1253                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1254  000B34  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1255  000B38  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1256  000B3C  2ADE               	incf	postinc2,f,c
  1257  000B3E  0E00               	movlw	0
  1258  000B40  22DD               	addwfc	postdec2,f,c
  1259  000B42  EF75  F005         	goto	l1713
  1260  000B46                     l884:
  1261  000B46  0012               	return		;funcret
  1262  000B48                     __end_of_vfpfcnvrt:
  1263                           	callstack 0
  1264                           
  1265 ;; *************** function _utoa *****************
  1266 ;; Defined at:
  1267 ;;		line 615 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1268 ;; Parameters:    Size  Location     Type
  1269 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1270 ;;		 -> sprintf@f(11), 
  1271 ;;  d               8   29[COMRAM] unsigned long long 
  1272 ;; Auto vars:     Size  Location     Type
  1273 ;;  n               8   49[COMRAM] unsigned long long 
  1274 ;;  i               2   57[COMRAM] int 
  1275 ;;  w               2   47[COMRAM] int 
  1276 ;;  p               2   45[COMRAM] int 
  1277 ;; Return value:  Size  Location     Type
  1278 ;;                  2   27[COMRAM] int 
  1279 ;; Registers used:
  1280 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1281 ;; Tracked objects:
  1282 ;;		On entry : 0/0
  1283 ;;		On exit  : 0/0
  1284 ;;		Unchanged: 0/0
  1285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1286 ;;      Params:        10       0       0       0       0       0       0       0       0
  1287 ;;      Locals:        14       0       0       0       0       0       0       0       0
  1288 ;;      Temps:          8       0       0       0       0       0       0       0       0
  1289 ;;      Totals:        32       0       0       0       0       0       0       0       0
  1290 ;;Total ram usage:       32 bytes
  1291 ;; Hardware stack levels used: 1
  1292 ;; Hardware stack levels required when called: 5
  1293 ;; This function calls:
  1294 ;;		___lodiv
  1295 ;;		___lomod
  1296 ;;		_pad
  1297 ;; This function is called by:
  1298 ;;		_vfpfcnvrt
  1299 ;; This function uses a non-reentrant model
  1300 ;;
  1301                           
  1302                           	psect	text4
  1303  000B48                     __ptext4:
  1304                           	callstack 0
  1305  000B48                     _utoa:
  1306                           	callstack 22
  1307  000B48                     
  1308                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 615: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99
      +                          \common\doprnt.c: 616: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\dop
      +                          rnt.c: 617:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common
      +                          \doprnt.c: 618:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.36\pic\sourc
      +                          es\c99\common\doprnt.c: 621:     if (!(prec < 0)) {
  1309  000B48  0100               	movlb	0	; () banked
  1310  000B4A  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1311  000B4C  EFAA  F005         	goto	u711
  1312  000B50  EFAC  F005         	goto	u710
  1313  000B54                     u711:
  1314  000B54  EFAD  F005         	goto	l1563
  1315  000B58                     u710:
  1316  000B58                     
  1317                           ; BSR set to: 0
  1318                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 622:         flag
      +                          s &= ~(1 << 1);
  1319  000B58  9366               	bcf	_flags& (0+255),1,b
  1320  000B5A                     l1563:
  1321                           
  1322                           ; BSR set to: 0
  1323                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 624:     p = (0 <
      +                           prec) ? prec : 1;
  1324  000B5A  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1325  000B5C  EFBA  F005         	goto	u720
  1326  000B60  5165               	movf	(_prec+1)& (0+255),w,b
  1327  000B62  E106               	bnz	u721
  1328  000B64  0564               	decf	_prec& (0+255),w,b
  1329  000B66  B0D8               	btfsc	status,0,c
  1330  000B68  EFB8  F005         	goto	u721
  1331  000B6C  EFBA  F005         	goto	u720
  1332  000B70                     u721:
  1333  000B70  EFC0  F005         	goto	l849
  1334  000B74                     u720:
  1335  000B74                     
  1336                           ; BSR set to: 0
  1337  000B74  0E00               	movlw	0
  1338  000B76  6E2F               	movwf	(utoa@p+1)^0,c
  1339  000B78  0E01               	movlw	1
  1340  000B7A  6E2E               	movwf	utoa@p^0,c
  1341  000B7C  EFC4  F005         	goto	l851
  1342  000B80                     l849:
  1343                           
  1344                           ; BSR set to: 0
  1345  000B80  C064  F02E         	movff	_prec,utoa@p
  1346  000B84  C065  F02F         	movff	_prec+1,utoa@p+1
  1347  000B88                     l851:
  1348                           
  1349                           ; BSR set to: 0
  1350                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 625:     w = widt
      +                          h;
  1351  000B88  C062  F030         	movff	_width,utoa@w
  1352  000B8C  C063  F031         	movff	_width+1,utoa@w+1
  1353                           
  1354                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 628:     n = d;
  1355  000B90  C01E  F032         	movff	utoa@d,utoa@n
  1356  000B94  C01F  F033         	movff	utoa@d+1,utoa@n+1
  1357  000B98  C020  F034         	movff	utoa@d+2,utoa@n+2
  1358  000B9C  C021  F035         	movff	utoa@d+3,utoa@n+3
  1359  000BA0  C022  F036         	movff	utoa@d+4,utoa@n+4
  1360  000BA4  C023  F037         	movff	utoa@d+5,utoa@n+5
  1361  000BA8  C024  F038         	movff	utoa@d+6,utoa@n+6
  1362  000BAC  C025  F039         	movff	utoa@d+7,utoa@n+7
  1363  000BB0                     
  1364                           ; BSR set to: 0
  1365                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 629:     i = size
      +                          of(dbuf) - 1;
  1366  000BB0  0E00               	movlw	0
  1367  000BB2  6E3B               	movwf	(utoa@i+1)^0,c
  1368  000BB4  0E1F               	movlw	31
  1369  000BB6  6E3A               	movwf	utoa@i^0,c
  1370  000BB8                     
  1371                           ; BSR set to: 0
  1372                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 630:     dbuf[i] 
      +                          = '\0';
  1373  000BB8  0E00               	movlw	0
  1374  000BBA  6F89               	movwf	(_dbuf+31)& (0+255),b
  1375                           
  1376                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1377  000BBC  EF56  F006         	goto	l1581
  1378  000BC0                     l1571:
  1379                           
  1380                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 632:         --i;
  1381  000BC0  063A               	decf	utoa@i^0,f,c
  1382  000BC2  A0D8               	btfss	status,0,c
  1383  000BC4  063B               	decf	(utoa@i+1)^0,f,c
  1384  000BC6                     
  1385                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 633:         dbuf
      +                          [i] = '0' + (n % 10);
  1386  000BC6  0E6A               	movlw	low _dbuf
  1387  000BC8  243A               	addwf	utoa@i^0,w,c
  1388  000BCA  6ED9               	movwf	fsr2l,c
  1389  000BCC  0E00               	movlw	high _dbuf
  1390  000BCE  203B               	addwfc	(utoa@i+1)^0,w,c
  1391  000BD0  6EDA               	movwf	fsr2h,c
  1392  000BD2  C032  F001         	movff	utoa@n,___lomod@dividend
  1393  000BD6  C033  F002         	movff	utoa@n+1,___lomod@dividend+1
  1394  000BDA  C034  F003         	movff	utoa@n+2,___lomod@dividend+2
  1395  000BDE  C035  F004         	movff	utoa@n+3,___lomod@dividend+3
  1396  000BE2  C036  F005         	movff	utoa@n+4,___lomod@dividend+4
  1397  000BE6  C037  F006         	movff	utoa@n+5,___lomod@dividend+5
  1398  000BEA  C038  F007         	movff	utoa@n+6,___lomod@dividend+6
  1399  000BEE  C039  F008         	movff	utoa@n+7,___lomod@dividend+7
  1400  000BF2  0E0A               	movlw	10
  1401  000BF4  6E09               	movwf	___lomod@divisor^0,c
  1402  000BF6  0E00               	movlw	0
  1403  000BF8  6E0A               	movwf	(___lomod@divisor+1)^0,c
  1404  000BFA  0E00               	movlw	0
  1405  000BFC  6E0B               	movwf	(___lomod@divisor+2)^0,c
  1406  000BFE  0E00               	movlw	0
  1407  000C00  6E0C               	movwf	(___lomod@divisor+3)^0,c
  1408  000C02  0E00               	movlw	0
  1409  000C04  6E0D               	movwf	(___lomod@divisor+4)^0,c
  1410  000C06  0E00               	movlw	0
  1411  000C08  6E0E               	movwf	(___lomod@divisor+5)^0,c
  1412  000C0A  0E00               	movlw	0
  1413  000C0C  6E0F               	movwf	(___lomod@divisor+6)^0,c
  1414  000C0E  0E00               	movlw	0
  1415  000C10  6E10               	movwf	(___lomod@divisor+7)^0,c
  1416  000C12  ECC8  F007         	call	___lomod	;wreg free
  1417  000C16  C001  F026         	movff	?___lomod,??_utoa
  1418  000C1A  C002  F027         	movff	?___lomod+1,??_utoa+1
  1419  000C1E  C003  F028         	movff	?___lomod+2,??_utoa+2
  1420  000C22  C004  F029         	movff	?___lomod+3,??_utoa+3
  1421  000C26  C005  F02A         	movff	?___lomod+4,??_utoa+4
  1422  000C2A  C006  F02B         	movff	?___lomod+5,??_utoa+5
  1423  000C2E  C007  F02C         	movff	?___lomod+6,??_utoa+6
  1424  000C32  C008  F02D         	movff	?___lomod+7,??_utoa+7
  1425  000C36  5026               	movf	??_utoa^0,w,c
  1426  000C38  0F30               	addlw	48
  1427  000C3A  6EDF               	movwf	indf2,c
  1428  000C3C                     
  1429                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 634:         --p;
  1430  000C3C  062E               	decf	utoa@p^0,f,c
  1431  000C3E  A0D8               	btfss	status,0,c
  1432  000C40  062F               	decf	(utoa@p+1)^0,f,c
  1433  000C42                     
  1434                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 635:         --w;
  1435  000C42  0630               	decf	utoa@w^0,f,c
  1436  000C44  A0D8               	btfss	status,0,c
  1437  000C46  0631               	decf	(utoa@w+1)^0,f,c
  1438  000C48                     
  1439                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 636:         n = 
      +                          n / 10;
  1440  000C48  C032  F001         	movff	utoa@n,___lodiv@dividend
  1441  000C4C  C033  F002         	movff	utoa@n+1,___lodiv@dividend+1
  1442  000C50  C034  F003         	movff	utoa@n+2,___lodiv@dividend+2
  1443  000C54  C035  F004         	movff	utoa@n+3,___lodiv@dividend+3
  1444  000C58  C036  F005         	movff	utoa@n+4,___lodiv@dividend+4
  1445  000C5C  C037  F006         	movff	utoa@n+5,___lodiv@dividend+5
  1446  000C60  C038  F007         	movff	utoa@n+6,___lodiv@dividend+6
  1447  000C64  C039  F008         	movff	utoa@n+7,___lodiv@dividend+7
  1448  000C68  0E0A               	movlw	10
  1449  000C6A  6E09               	movwf	___lodiv@divisor^0,c
  1450  000C6C  0E00               	movlw	0
  1451  000C6E  6E0A               	movwf	(___lodiv@divisor+1)^0,c
  1452  000C70  0E00               	movlw	0
  1453  000C72  6E0B               	movwf	(___lodiv@divisor+2)^0,c
  1454  000C74  0E00               	movlw	0
  1455  000C76  6E0C               	movwf	(___lodiv@divisor+3)^0,c
  1456  000C78  0E00               	movlw	0
  1457  000C7A  6E0D               	movwf	(___lodiv@divisor+4)^0,c
  1458  000C7C  0E00               	movlw	0
  1459  000C7E  6E0E               	movwf	(___lodiv@divisor+5)^0,c
  1460  000C80  0E00               	movlw	0
  1461  000C82  6E0F               	movwf	(___lodiv@divisor+6)^0,c
  1462  000C84  0E00               	movlw	0
  1463  000C86  6E10               	movwf	(___lodiv@divisor+7)^0,c
  1464  000C88  EC50  F007         	call	___lodiv	;wreg free
  1465  000C8C  C001  F032         	movff	?___lodiv,utoa@n
  1466  000C90  C002  F033         	movff	?___lodiv+1,utoa@n+1
  1467  000C94  C003  F034         	movff	?___lodiv+2,utoa@n+2
  1468  000C98  C004  F035         	movff	?___lodiv+3,utoa@n+3
  1469  000C9C  C005  F036         	movff	?___lodiv+4,utoa@n+4
  1470  000CA0  C006  F037         	movff	?___lodiv+5,utoa@n+5
  1471  000CA4  C007  F038         	movff	?___lodiv+6,utoa@n+6
  1472  000CA8  C008  F039         	movff	?___lodiv+7,utoa@n+7
  1473  000CAC                     l1581:
  1474                           
  1475                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1476  000CAC  503A               	movf	utoa@i^0,w,c
  1477  000CAE  103B               	iorwf	(utoa@i+1)^0,w,c
  1478  000CB0  B4D8               	btfsc	status,2,c
  1479  000CB2  EF5D  F006         	goto	u731
  1480  000CB6  EF5F  F006         	goto	u730
  1481  000CBA                     u731:
  1482  000CBA  EF90  F006         	goto	l1591
  1483  000CBE                     u730:
  1484  000CBE  5032               	movf	utoa@n^0,w,c
  1485  000CC0  1033               	iorwf	(utoa@n+1)^0,w,c
  1486  000CC2  1034               	iorwf	(utoa@n+2)^0,w,c
  1487  000CC4  1035               	iorwf	(utoa@n+3)^0,w,c
  1488  000CC6  1036               	iorwf	(utoa@n+4)^0,w,c
  1489  000CC8  1037               	iorwf	(utoa@n+5)^0,w,c
  1490  000CCA  1038               	iorwf	(utoa@n+6)^0,w,c
  1491  000CCC  1039               	iorwf	(utoa@n+7)^0,w,c
  1492  000CCE  A4D8               	btfss	status,2,c
  1493  000CD0  EF6C  F006         	goto	u741
  1494  000CD4  EF6E  F006         	goto	u740
  1495  000CD8                     u741:
  1496  000CD8  EFE0  F005         	goto	l1571
  1497  000CDC                     u740:
  1498  000CDC  BE2F               	btfsc	(utoa@p+1)^0,7,c
  1499  000CDE  EF7B  F006         	goto	u750
  1500  000CE2  502F               	movf	(utoa@p+1)^0,w,c
  1501  000CE4  E106               	bnz	u751
  1502  000CE6  042E               	decf	utoa@p^0,w,c
  1503  000CE8  B0D8               	btfsc	status,0,c
  1504  000CEA  EF79  F006         	goto	u751
  1505  000CEE  EF7B  F006         	goto	u750
  1506  000CF2                     u751:
  1507  000CF2  EFE0  F005         	goto	l1571
  1508  000CF6                     u750:
  1509  000CF6  BE31               	btfsc	(utoa@w+1)^0,7,c
  1510  000CF8  EF86  F006         	goto	u761
  1511  000CFC  5031               	movf	(utoa@w+1)^0,w,c
  1512  000CFE  E108               	bnz	u760
  1513  000D00  0430               	decf	utoa@w^0,w,c
  1514  000D02  A0D8               	btfss	status,0,c
  1515  000D04  EF86  F006         	goto	u761
  1516  000D08  EF88  F006         	goto	u760
  1517  000D0C                     u761:
  1518  000D0C  EF90  F006         	goto	l1591
  1519  000D10                     u760:
  1520  000D10  0100               	movlb	0	; () banked
  1521  000D12  B366               	btfsc	_flags& (0+255),1,b
  1522  000D14  EF8E  F006         	goto	u771
  1523  000D18  EF90  F006         	goto	u770
  1524  000D1C                     u771:
  1525  000D1C  EFE0  F005         	goto	l1571
  1526  000D20                     u770:
  1527  000D20                     l1591:
  1528                           
  1529                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 640:     return p
      +                          ad(fp, &dbuf[i], w);
  1530  000D20  C01C  F011         	movff	utoa@fp,pad@fp
  1531  000D24  C01D  F012         	movff	utoa@fp+1,pad@fp+1
  1532  000D28  0E6A               	movlw	low _dbuf
  1533  000D2A  243A               	addwf	utoa@i^0,w,c
  1534  000D2C  6E13               	movwf	pad@buf^0,c
  1535  000D2E  0E00               	movlw	high _dbuf
  1536  000D30  203B               	addwfc	(utoa@i+1)^0,w,c
  1537  000D32  6E14               	movwf	(pad@buf+1)^0,c
  1538  000D34  C030  F015         	movff	utoa@w,pad@p
  1539  000D38  C031  F016         	movff	utoa@w+1,pad@p+1
  1540  000D3C  EC95  F008         	call	_pad	;wreg free
  1541  000D40  C011  F01C         	movff	?_pad,?_utoa
  1542  000D44  C012  F01D         	movff	?_pad+1,?_utoa+1
  1543  000D48  0012               	return		;funcret
  1544  000D4A                     __end_of_utoa:
  1545                           	callstack 0
  1546                           
  1547 ;; *************** function _pad *****************
  1548 ;; Defined at:
  1549 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1550 ;; Parameters:    Size  Location     Type
  1551 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  1552 ;;		 -> sprintf@f(11), 
  1553 ;;  buf             2   18[COMRAM] PTR unsigned char 
  1554 ;;		 -> dbuf(32), 
  1555 ;;  p               2   20[COMRAM] int 
  1556 ;; Auto vars:     Size  Location     Type
  1557 ;;  w               2   25[COMRAM] int 
  1558 ;;  i               2   23[COMRAM] int 
  1559 ;; Return value:  Size  Location     Type
  1560 ;;                  2   16[COMRAM] int 
  1561 ;; Registers used:
  1562 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1563 ;; Tracked objects:
  1564 ;;		On entry : 0/0
  1565 ;;		On exit  : 0/0
  1566 ;;		Unchanged: 0/0
  1567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1568 ;;      Params:         6       0       0       0       0       0       0       0       0
  1569 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1570 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1571 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1572 ;;Total ram usage:       11 bytes
  1573 ;; Hardware stack levels used: 1
  1574 ;; Hardware stack levels required when called: 4
  1575 ;; This function calls:
  1576 ;;		_fputc
  1577 ;;		_fputs
  1578 ;;		_strlen
  1579 ;; This function is called by:
  1580 ;;		_utoa
  1581 ;; This function uses a non-reentrant model
  1582 ;;
  1583                           
  1584                           	psect	text5
  1585  00112A                     __ptext5:
  1586                           	callstack 0
  1587  00112A                     _pad:
  1588                           	callstack 22
  1589  00112A                     
  1590                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  1591  00112A  0100               	movlb	0	; () banked
  1592  00112C  A166               	btfss	_flags& (0+255),0,b
  1593  00112E  EF9B  F008         	goto	u631
  1594  001132  EF9D  F008         	goto	u630
  1595  001136                     u631:
  1596  001136  EFA7  F008         	goto	l1525
  1597  00113A                     u630:
  1598  00113A                     
  1599                           ; BSR set to: 0
  1600                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  1601  00113A  C013  F00A         	movff	pad@buf,fputs@s
  1602  00113E  C014  F00B         	movff	pad@buf+1,fputs@s+1
  1603  001142  C011  F00C         	movff	pad@fp,fputs@fp
  1604  001146  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  1605  00114A  EC52  F00A         	call	_fputs	;wreg free
  1606  00114E                     l1525:
  1607                           
  1608                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  1609  00114E  BE16               	btfsc	(pad@p+1)^0,7,c
  1610  001150  EFAC  F008         	goto	u641
  1611  001154  EFAE  F008         	goto	u640
  1612  001158                     u641:
  1613  001158  EFB4  F008         	goto	l1529
  1614  00115C                     u640:
  1615  00115C  C015  F01A         	movff	pad@p,pad@w
  1616  001160  C016  F01B         	movff	pad@p+1,pad@w+1
  1617  001164  EFB8  F008         	goto	l839
  1618  001168                     l1529:
  1619  001168  0E00               	movlw	0
  1620  00116A  6E1B               	movwf	(pad@w+1)^0,c
  1621  00116C  0E00               	movlw	0
  1622  00116E  6E1A               	movwf	pad@w^0,c
  1623  001170                     l839:
  1624                           
  1625                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  1626  001170  0E00               	movlw	0
  1627  001172  6E19               	movwf	(pad@i+1)^0,c
  1628  001174  0E00               	movlw	0
  1629  001176  6E18               	movwf	pad@i^0,c
  1630                           
  1631                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  1632  001178  EFCA  F008         	goto	l1535
  1633  00117C                     l1531:
  1634                           
  1635                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  1636  00117C  0E00               	movlw	0
  1637  00117E  6E02               	movwf	(fputc@c+1)^0,c
  1638  001180  0E20               	movlw	32
  1639  001182  6E01               	movwf	fputc@c^0,c
  1640  001184  C011  F003         	movff	pad@fp,fputc@fp
  1641  001188  C012  F004         	movff	pad@fp+1,fputc@fp+1
  1642  00118C  EC30  F008         	call	_fputc	;wreg free
  1643  001190                     
  1644                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 86:         ++i;
  1645  001190  4A18               	infsnz	pad@i^0,f,c
  1646  001192  2A19               	incf	(pad@i+1)^0,f,c
  1647  001194                     l1535:
  1648                           
  1649                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  1650  001194  501A               	movf	pad@w^0,w,c
  1651  001196  5C18               	subwf	pad@i^0,w,c
  1652  001198  5019               	movf	(pad@i+1)^0,w,c
  1653  00119A  0A80               	xorlw	128
  1654  00119C  6E17               	movwf	??_pad^0,c
  1655  00119E  501B               	movf	(pad@w+1)^0,w,c
  1656  0011A0  0A80               	xorlw	128
  1657  0011A2  5817               	subwfb	??_pad^0,w,c
  1658  0011A4  A0D8               	btfss	status,0,c
  1659  0011A6  EFD7  F008         	goto	u651
  1660  0011AA  EFD9  F008         	goto	u650
  1661  0011AE                     u651:
  1662  0011AE  EFBE  F008         	goto	l1531
  1663  0011B2                     u650:
  1664  0011B2                     
  1665                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  1666  0011B2  0100               	movlb	0	; () banked
  1667  0011B4  B166               	btfsc	_flags& (0+255),0,b
  1668  0011B6  EFDF  F008         	goto	u661
  1669  0011BA  EFE1  F008         	goto	u660
  1670  0011BE                     u661:
  1671  0011BE  EFEB  F008         	goto	l1539
  1672  0011C2                     u660:
  1673  0011C2                     
  1674                           ; BSR set to: 0
  1675                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  1676  0011C2  C013  F00A         	movff	pad@buf,fputs@s
  1677  0011C6  C014  F00B         	movff	pad@buf+1,fputs@s+1
  1678  0011CA  C011  F00C         	movff	pad@fp,fputs@fp
  1679  0011CE  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  1680  0011D2  EC52  F00A         	call	_fputs	;wreg free
  1681  0011D6                     l1539:
  1682                           
  1683                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  1684  0011D6  C013  F001         	movff	pad@buf,strlen@s
  1685  0011DA  C014  F002         	movff	pad@buf+1,strlen@s+1
  1686  0011DE  ECCC  F00A         	call	_strlen	;wreg free
  1687  0011E2  501A               	movf	pad@w^0,w,c
  1688  0011E4  2401               	addwf	?_strlen^0,w,c
  1689  0011E6  6E11               	movwf	?_pad^0,c
  1690  0011E8  501B               	movf	(pad@w+1)^0,w,c
  1691  0011EA  2002               	addwfc	(?_strlen+1)^0,w,c
  1692  0011EC  6E12               	movwf	(?_pad+1)^0,c
  1693  0011EE  0012               	return		;funcret
  1694  0011F0                     __end_of_pad:
  1695                           	callstack 0
  1696                           
  1697 ;; *************** function _strlen *****************
  1698 ;; Defined at:
  1699 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  1700 ;; Parameters:    Size  Location     Type
  1701 ;;  s               2    0[COMRAM] PTR const unsigned char 
  1702 ;;		 -> dbuf(32), 
  1703 ;; Auto vars:     Size  Location     Type
  1704 ;;  a               2    2[COMRAM] PTR const unsigned char 
  1705 ;;		 -> dbuf(32), 
  1706 ;; Return value:  Size  Location     Type
  1707 ;;                  2    0[COMRAM] unsigned int 
  1708 ;; Registers used:
  1709 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1710 ;; Tracked objects:
  1711 ;;		On entry : 0/0
  1712 ;;		On exit  : 0/0
  1713 ;;		Unchanged: 0/0
  1714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1715 ;;      Params:         2       0       0       0       0       0       0       0       0
  1716 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1717 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1718 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1719 ;;Total ram usage:        4 bytes
  1720 ;; Hardware stack levels used: 1
  1721 ;; Hardware stack levels required when called: 1
  1722 ;; This function calls:
  1723 ;;		Nothing
  1724 ;; This function is called by:
  1725 ;;		_pad
  1726 ;; This function uses a non-reentrant model
  1727 ;;
  1728                           
  1729                           	psect	text6
  1730  001598                     __ptext6:
  1731                           	callstack 0
  1732  001598                     _strlen:
  1733                           	callstack 24
  1734  001598  C001  F003         	movff	strlen@s,strlen@a
  1735  00159C  C002  F004         	movff	strlen@s+1,strlen@a+1
  1736  0015A0  EFD4  F00A         	goto	l1471
  1737  0015A4                     l1469:
  1738  0015A4  4A01               	infsnz	strlen@s^0,f,c
  1739  0015A6  2A02               	incf	(strlen@s+1)^0,f,c
  1740  0015A8                     l1471:
  1741  0015A8  C001  FFD9         	movff	strlen@s,fsr2l
  1742  0015AC  C002  FFDA         	movff	strlen@s+1,fsr2h
  1743  0015B0  50DF               	movf	indf2,w,c
  1744  0015B2  A4D8               	btfss	status,2,c
  1745  0015B4  EFDE  F00A         	goto	u551
  1746  0015B8  EFE0  F00A         	goto	u550
  1747  0015BC                     u551:
  1748  0015BC  EFD2  F00A         	goto	l1469
  1749  0015C0                     u550:
  1750  0015C0  5003               	movf	strlen@a^0,w,c
  1751  0015C2  5C01               	subwf	strlen@s^0,w,c
  1752  0015C4  6E01               	movwf	?_strlen^0,c
  1753  0015C6  5004               	movf	(strlen@a+1)^0,w,c
  1754  0015C8  5802               	subwfb	(strlen@s+1)^0,w,c
  1755  0015CA  6E02               	movwf	(?_strlen+1)^0,c
  1756  0015CC  0012               	return		;funcret
  1757  0015CE                     __end_of_strlen:
  1758                           	callstack 0
  1759                           
  1760 ;; *************** function _fputs *****************
  1761 ;; Defined at:
  1762 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputs.c"
  1763 ;; Parameters:    Size  Location     Type
  1764 ;;  s               2    9[COMRAM] PTR const unsigned char 
  1765 ;;		 -> dbuf(32), 
  1766 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  1767 ;;		 -> sprintf@f(11), 
  1768 ;; Auto vars:     Size  Location     Type
  1769 ;;  i               2   14[COMRAM] int 
  1770 ;;  c               1   13[COMRAM] unsigned char 
  1771 ;; Return value:  Size  Location     Type
  1772 ;;                  2    9[COMRAM] int 
  1773 ;; Registers used:
  1774 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1775 ;; Tracked objects:
  1776 ;;		On entry : 0/0
  1777 ;;		On exit  : 0/0
  1778 ;;		Unchanged: 0/0
  1779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1780 ;;      Params:         4       0       0       0       0       0       0       0       0
  1781 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1782 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1783 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1784 ;;Total ram usage:        7 bytes
  1785 ;; Hardware stack levels used: 1
  1786 ;; Hardware stack levels required when called: 3
  1787 ;; This function calls:
  1788 ;;		_fputc
  1789 ;; This function is called by:
  1790 ;;		_pad
  1791 ;; This function uses a non-reentrant model
  1792 ;;
  1793                           
  1794                           	psect	text7
  1795  0014A4                     __ptext7:
  1796                           	callstack 0
  1797  0014A4                     _fputs:
  1798                           	callstack 22
  1799  0014A4  0E00               	movlw	0
  1800  0014A6  6E10               	movwf	(fputs@i+1)^0,c
  1801  0014A8  0E00               	movlw	0
  1802  0014AA  6E0F               	movwf	fputs@i^0,c
  1803  0014AC  EF63  F00A         	goto	l1465
  1804  0014B0                     l1461:
  1805  0014B0  C00E  F001         	movff	fputs@c,fputc@c
  1806  0014B4  6A02               	clrf	(fputc@c+1)^0,c
  1807  0014B6  C00C  F003         	movff	fputs@fp,fputc@fp
  1808  0014BA  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  1809  0014BE  EC30  F008         	call	_fputc	;wreg free
  1810  0014C2  4A0F               	infsnz	fputs@i^0,f,c
  1811  0014C4  2A10               	incf	(fputs@i+1)^0,f,c
  1812  0014C6                     l1465:
  1813  0014C6  500F               	movf	fputs@i^0,w,c
  1814  0014C8  240A               	addwf	fputs@s^0,w,c
  1815  0014CA  6ED9               	movwf	fsr2l,c
  1816  0014CC  5010               	movf	(fputs@i+1)^0,w,c
  1817  0014CE  200B               	addwfc	(fputs@s+1)^0,w,c
  1818  0014D0  6EDA               	movwf	fsr2h,c
  1819  0014D2  50DF               	movf	indf2,w,c
  1820  0014D4  6E0E               	movwf	fputs@c^0,c
  1821  0014D6  500E               	movf	fputs@c^0,w,c
  1822  0014D8  A4D8               	btfss	status,2,c
  1823  0014DA  EF71  F00A         	goto	u541
  1824  0014DE  EF73  F00A         	goto	u540
  1825  0014E2                     u541:
  1826  0014E2  EF58  F00A         	goto	l1461
  1827  0014E6                     u540:
  1828  0014E6  0012               	return		;funcret
  1829  0014E8                     __end_of_fputs:
  1830                           	callstack 0
  1831                           
  1832 ;; *************** function _fputc *****************
  1833 ;; Defined at:
  1834 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputc.c"
  1835 ;; Parameters:    Size  Location     Type
  1836 ;;  c               2    0[COMRAM] int 
  1837 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  1838 ;;		 -> sprintf@f(11), 
  1839 ;; Auto vars:     Size  Location     Type
  1840 ;;		None
  1841 ;; Return value:  Size  Location     Type
  1842 ;;                  2    0[COMRAM] int 
  1843 ;; Registers used:
  1844 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1845 ;; Tracked objects:
  1846 ;;		On entry : 0/0
  1847 ;;		On exit  : 0/0
  1848 ;;		Unchanged: 0/0
  1849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1850 ;;      Params:         4       0       0       0       0       0       0       0       0
  1851 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1852 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1853 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1854 ;;Total ram usage:        9 bytes
  1855 ;; Hardware stack levels used: 1
  1856 ;; Hardware stack levels required when called: 2
  1857 ;; This function calls:
  1858 ;;		_putch
  1859 ;; This function is called by:
  1860 ;;		_pad
  1861 ;;		_vfpfcnvrt
  1862 ;;		_fputs
  1863 ;; This function uses a non-reentrant model
  1864 ;;
  1865                           
  1866                           	psect	text8
  1867  001060                     __ptext8:
  1868                           	callstack 0
  1869  001060                     _fputc:
  1870                           	callstack 22
  1871  001060  5003               	movf	fputc@fp^0,w,c
  1872  001062  1004               	iorwf	(fputc@fp+1)^0,w,c
  1873  001064  B4D8               	btfsc	status,2,c
  1874  001066  EF37  F008         	goto	u501
  1875  00106A  EF39  F008         	goto	u500
  1876  00106E                     u501:
  1877  00106E  EF42  F008         	goto	l1449
  1878  001072                     u500:
  1879  001072  5003               	movf	fputc@fp^0,w,c
  1880  001074  1004               	iorwf	(fputc@fp+1)^0,w,c
  1881  001076  A4D8               	btfss	status,2,c
  1882  001078  EF40  F008         	goto	u511
  1883  00107C  EF42  F008         	goto	u510
  1884  001080                     u511:
  1885  001080  EF47  F008         	goto	l1451
  1886  001084                     u510:
  1887  001084                     l1449:
  1888  001084  5001               	movf	fputc@c^0,w,c
  1889  001086  EC48  F00B         	call	_putch
  1890  00108A  EF94  F008         	goto	l942
  1891  00108E                     l1451:
  1892  00108E  EE20 F009          	lfsr	2,9
  1893  001092  5003               	movf	fputc@fp^0,w,c
  1894  001094  26D9               	addwf	fsr2l,f,c
  1895  001096  5004               	movf	(fputc@fp+1)^0,w,c
  1896  001098  22DA               	addwfc	fsr2h,f,c
  1897  00109A  50DE               	movf	postinc2,w,c
  1898  00109C  10DE               	iorwf	postinc2,w,c
  1899  00109E  B4D8               	btfsc	status,2,c
  1900  0010A0  EF54  F008         	goto	u521
  1901  0010A4  EF56  F008         	goto	u520
  1902  0010A8                     u521:
  1903  0010A8  EF71  F008         	goto	l1455
  1904  0010AC                     u520:
  1905  0010AC  EE20 F009          	lfsr	2,9
  1906  0010B0  5003               	movf	fputc@fp^0,w,c
  1907  0010B2  26D9               	addwf	fsr2l,f,c
  1908  0010B4  5004               	movf	(fputc@fp+1)^0,w,c
  1909  0010B6  22DA               	addwfc	fsr2h,f,c
  1910  0010B8  EE10 F003          	lfsr	1,3
  1911  0010BC  5003               	movf	fputc@fp^0,w,c
  1912  0010BE  26E1               	addwf	fsr1l,f,c
  1913  0010C0  5004               	movf	(fputc@fp+1)^0,w,c
  1914  0010C2  22E2               	addwfc	fsr1h,f,c
  1915  0010C4  50DE               	movf	postinc2,w,c
  1916  0010C6  5CE6               	subwf	postinc1,w,c
  1917  0010C8  50E6               	movf	postinc1,w,c
  1918  0010CA  0A80               	xorlw	128
  1919  0010CC  6E09               	movwf	(??_fputc+4)^0,c
  1920  0010CE  50DE               	movf	postinc2,w,c
  1921  0010D0  0A80               	xorlw	128
  1922  0010D2  5809               	subwfb	(??_fputc+4)^0,w,c
  1923  0010D4  B0D8               	btfsc	status,0,c
  1924  0010D6  EF6F  F008         	goto	u531
  1925  0010DA  EF71  F008         	goto	u530
  1926  0010DE                     u531:
  1927  0010DE  EF94  F008         	goto	l942
  1928  0010E2                     u530:
  1929  0010E2                     l1455:
  1930  0010E2  EE20 F003          	lfsr	2,3
  1931  0010E6  5003               	movf	fputc@fp^0,w,c
  1932  0010E8  26D9               	addwf	fsr2l,f,c
  1933  0010EA  5004               	movf	(fputc@fp+1)^0,w,c
  1934  0010EC  22DA               	addwfc	fsr2h,f,c
  1935  0010EE  CFDE F005          	movff	postinc2,??_fputc
  1936  0010F2  CFDD F006          	movff	postdec2,??_fputc+1
  1937  0010F6  C003  FFD9         	movff	fputc@fp,fsr2l
  1938  0010FA  C004  FFDA         	movff	fputc@fp+1,fsr2h
  1939  0010FE  CFDE F007          	movff	postinc2,??_fputc+2
  1940  001102  CFDD F008          	movff	postdec2,??_fputc+3
  1941  001106  5005               	movf	??_fputc^0,w,c
  1942  001108  2407               	addwf	(??_fputc+2)^0,w,c
  1943  00110A  6ED9               	movwf	fsr2l,c
  1944  00110C  5006               	movf	(??_fputc+1)^0,w,c
  1945  00110E  2008               	addwfc	(??_fputc+3)^0,w,c
  1946  001110  6EDA               	movwf	fsr2h,c
  1947  001112  C001  FFDF         	movff	fputc@c,indf2
  1948  001116  EE20 F003          	lfsr	2,3
  1949  00111A  5003               	movf	fputc@fp^0,w,c
  1950  00111C  26D9               	addwf	fsr2l,f,c
  1951  00111E  5004               	movf	(fputc@fp+1)^0,w,c
  1952  001120  22DA               	addwfc	fsr2h,f,c
  1953  001122  2ADE               	incf	postinc2,f,c
  1954  001124  0E00               	movlw	0
  1955  001126  22DD               	addwfc	postdec2,f,c
  1956  001128                     l942:
  1957  001128  0012               	return		;funcret
  1958  00112A                     __end_of_fputc:
  1959                           	callstack 0
  1960                           
  1961 ;; *************** function _putch *****************
  1962 ;; Defined at:
  1963 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\putch.c"
  1964 ;; Parameters:    Size  Location     Type
  1965 ;;  c               1    wreg     unsigned char 
  1966 ;; Auto vars:     Size  Location     Type
  1967 ;;  c               1    0[COMRAM] unsigned char 
  1968 ;; Return value:  Size  Location     Type
  1969 ;;                  1    wreg      void 
  1970 ;; Registers used:
  1971 ;;		wreg
  1972 ;; Tracked objects:
  1973 ;;		On entry : 0/0
  1974 ;;		On exit  : 0/0
  1975 ;;		Unchanged: 0/0
  1976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1977 ;;      Params:         0       0       0       0       0       0       0       0       0
  1978 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1979 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1980 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1981 ;;Total ram usage:        0 bytes
  1982 ;; Hardware stack levels used: 1
  1983 ;; Hardware stack levels required when called: 1
  1984 ;; This function calls:
  1985 ;;		Nothing
  1986 ;; This function is called by:
  1987 ;;		_fputc
  1988 ;; This function uses a non-reentrant model
  1989 ;;
  1990                           
  1991                           	psect	text9
  1992  001690                     __ptext9:
  1993                           	callstack 0
  1994  001690                     _putch:
  1995                           	callstack 22
  1996  001690  0012               	return		;funcret
  1997  001692                     __end_of_putch:
  1998                           	callstack 0
  1999                           
  2000 ;; *************** function ___lomod *****************
  2001 ;; Defined at:
  2002 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lomod.c"
  2003 ;; Parameters:    Size  Location     Type
  2004 ;;  dividend        8    0[COMRAM] unsigned long long 
  2005 ;;  divisor         8    8[COMRAM] unsigned long long 
  2006 ;; Auto vars:     Size  Location     Type
  2007 ;;  counter         1   16[COMRAM] unsigned char 
  2008 ;; Return value:  Size  Location     Type
  2009 ;;                  8    0[COMRAM] unsigned long long 
  2010 ;; Registers used:
  2011 ;;		wreg, status,2, status,0
  2012 ;; Tracked objects:
  2013 ;;		On entry : 0/0
  2014 ;;		On exit  : 0/0
  2015 ;;		Unchanged: 0/0
  2016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2017 ;;      Params:        16       0       0       0       0       0       0       0       0
  2018 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2019 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2020 ;;      Totals:        17       0       0       0       0       0       0       0       0
  2021 ;;Total ram usage:       17 bytes
  2022 ;; Hardware stack levels used: 1
  2023 ;; Hardware stack levels required when called: 1
  2024 ;; This function calls:
  2025 ;;		Nothing
  2026 ;; This function is called by:
  2027 ;;		_utoa
  2028 ;; This function uses a non-reentrant model
  2029 ;;
  2030                           
  2031                           	psect	text10
  2032  000F90                     __ptext10:
  2033                           	callstack 0
  2034  000F90                     ___lomod:
  2035                           	callstack 25
  2036  000F90  5009               	movf	___lomod@divisor^0,w,c
  2037  000F92  100A               	iorwf	(___lomod@divisor+1)^0,w,c
  2038  000F94  100B               	iorwf	(___lomod@divisor+2)^0,w,c
  2039  000F96  100C               	iorwf	(___lomod@divisor+3)^0,w,c
  2040  000F98  100D               	iorwf	(___lomod@divisor+4)^0,w,c
  2041  000F9A  100E               	iorwf	(___lomod@divisor+5)^0,w,c
  2042  000F9C  100F               	iorwf	(___lomod@divisor+6)^0,w,c
  2043  000F9E  1010               	iorwf	(___lomod@divisor+7)^0,w,c
  2044  000FA0  B4D8               	btfsc	status,2,c
  2045  000FA2  EFD5  F007         	goto	u601
  2046  000FA6  EFD7  F007         	goto	u600
  2047  000FAA                     u601:
  2048  000FAA  EF1F  F008         	goto	l580
  2049  000FAE                     u600:
  2050  000FAE  0E01               	movlw	1
  2051  000FB0  6E11               	movwf	___lomod@counter^0,c
  2052  000FB2  EFE5  F007         	goto	l1511
  2053  000FB6                     l1509:
  2054  000FB6  90D8               	bcf	status,0,c
  2055  000FB8  3609               	rlcf	___lomod@divisor^0,f,c
  2056  000FBA  360A               	rlcf	(___lomod@divisor+1)^0,f,c
  2057  000FBC  360B               	rlcf	(___lomod@divisor+2)^0,f,c
  2058  000FBE  360C               	rlcf	(___lomod@divisor+3)^0,f,c
  2059  000FC0  360D               	rlcf	(___lomod@divisor+4)^0,f,c
  2060  000FC2  360E               	rlcf	(___lomod@divisor+5)^0,f,c
  2061  000FC4  360F               	rlcf	(___lomod@divisor+6)^0,f,c
  2062  000FC6  3610               	rlcf	(___lomod@divisor+7)^0,f,c
  2063  000FC8  2A11               	incf	___lomod@counter^0,f,c
  2064  000FCA                     l1511:
  2065  000FCA  AE10               	btfss	(___lomod@divisor+7)^0,7,c
  2066  000FCC  EFEA  F007         	goto	u611
  2067  000FD0  EFEC  F007         	goto	u610
  2068  000FD4                     u611:
  2069  000FD4  EFDB  F007         	goto	l1509
  2070  000FD8                     u610:
  2071  000FD8                     l1513:
  2072  000FD8  5009               	movf	___lomod@divisor^0,w,c
  2073  000FDA  5C01               	subwf	___lomod@dividend^0,w,c
  2074  000FDC  500A               	movf	(___lomod@divisor+1)^0,w,c
  2075  000FDE  5802               	subwfb	(___lomod@dividend+1)^0,w,c
  2076  000FE0  500B               	movf	(___lomod@divisor+2)^0,w,c
  2077  000FE2  5803               	subwfb	(___lomod@dividend+2)^0,w,c
  2078  000FE4  500C               	movf	(___lomod@divisor+3)^0,w,c
  2079  000FE6  5804               	subwfb	(___lomod@dividend+3)^0,w,c
  2080  000FE8  500D               	movf	(___lomod@divisor+4)^0,w,c
  2081  000FEA  5805               	subwfb	(___lomod@dividend+4)^0,w,c
  2082  000FEC  500E               	movf	(___lomod@divisor+5)^0,w,c
  2083  000FEE  5806               	subwfb	(___lomod@dividend+5)^0,w,c
  2084  000FF0  500F               	movf	(___lomod@divisor+6)^0,w,c
  2085  000FF2  5807               	subwfb	(___lomod@dividend+6)^0,w,c
  2086  000FF4  5010               	movf	(___lomod@divisor+7)^0,w,c
  2087  000FF6  5808               	subwfb	(___lomod@dividend+7)^0,w,c
  2088  000FF8  A0D8               	btfss	status,0,c
  2089  000FFA  EF01  F008         	goto	u621
  2090  000FFE  EF03  F008         	goto	u620
  2091  001002                     u621:
  2092  001002  EF13  F008         	goto	l1517
  2093  001006                     u620:
  2094  001006  5009               	movf	___lomod@divisor^0,w,c
  2095  001008  5E01               	subwf	___lomod@dividend^0,f,c
  2096  00100A  500A               	movf	(___lomod@divisor+1)^0,w,c
  2097  00100C  5A02               	subwfb	(___lomod@dividend+1)^0,f,c
  2098  00100E  500B               	movf	(___lomod@divisor+2)^0,w,c
  2099  001010  5A03               	subwfb	(___lomod@dividend+2)^0,f,c
  2100  001012  500C               	movf	(___lomod@divisor+3)^0,w,c
  2101  001014  5A04               	subwfb	(___lomod@dividend+3)^0,f,c
  2102  001016  500D               	movf	(___lomod@divisor+4)^0,w,c
  2103  001018  5A05               	subwfb	(___lomod@dividend+4)^0,f,c
  2104  00101A  500E               	movf	(___lomod@divisor+5)^0,w,c
  2105  00101C  5A06               	subwfb	(___lomod@dividend+5)^0,f,c
  2106  00101E  500F               	movf	(___lomod@divisor+6)^0,w,c
  2107  001020  5A07               	subwfb	(___lomod@dividend+6)^0,f,c
  2108  001022  5010               	movf	(___lomod@divisor+7)^0,w,c
  2109  001024  5A08               	subwfb	(___lomod@dividend+7)^0,f,c
  2110  001026                     l1517:
  2111  001026  90D8               	bcf	status,0,c
  2112  001028  3210               	rrcf	(___lomod@divisor+7)^0,f,c
  2113  00102A  320F               	rrcf	(___lomod@divisor+6)^0,f,c
  2114  00102C  320E               	rrcf	(___lomod@divisor+5)^0,f,c
  2115  00102E  320D               	rrcf	(___lomod@divisor+4)^0,f,c
  2116  001030  320C               	rrcf	(___lomod@divisor+3)^0,f,c
  2117  001032  320B               	rrcf	(___lomod@divisor+2)^0,f,c
  2118  001034  320A               	rrcf	(___lomod@divisor+1)^0,f,c
  2119  001036  3209               	rrcf	___lomod@divisor^0,f,c
  2120  001038  2E11               	decfsz	___lomod@counter^0,f,c
  2121  00103A  EFEC  F007         	goto	l1513
  2122  00103E                     l580:
  2123  00103E  C001  F001         	movff	___lomod@dividend,?___lomod
  2124  001042  C002  F002         	movff	___lomod@dividend+1,?___lomod+1
  2125  001046  C003  F003         	movff	___lomod@dividend+2,?___lomod+2
  2126  00104A  C004  F004         	movff	___lomod@dividend+3,?___lomod+3
  2127  00104E  C005  F005         	movff	___lomod@dividend+4,?___lomod+4
  2128  001052  C006  F006         	movff	___lomod@dividend+5,?___lomod+5
  2129  001056  C007  F007         	movff	___lomod@dividend+6,?___lomod+6
  2130  00105A  C008  F008         	movff	___lomod@dividend+7,?___lomod+7
  2131  00105E  0012               	return		;funcret
  2132  001060                     __end_of___lomod:
  2133                           	callstack 0
  2134                           
  2135 ;; *************** function ___lodiv *****************
  2136 ;; Defined at:
  2137 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lodiv.c"
  2138 ;; Parameters:    Size  Location     Type
  2139 ;;  dividend        8    0[COMRAM] unsigned long long 
  2140 ;;  divisor         8    8[COMRAM] unsigned long long 
  2141 ;; Auto vars:     Size  Location     Type
  2142 ;;  quotient        8   16[COMRAM] unsigned long long 
  2143 ;;  counter         1   24[COMRAM] unsigned char 
  2144 ;; Return value:  Size  Location     Type
  2145 ;;                  8    0[COMRAM] unsigned long long 
  2146 ;; Registers used:
  2147 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2148 ;; Tracked objects:
  2149 ;;		On entry : 0/0
  2150 ;;		On exit  : 0/0
  2151 ;;		Unchanged: 0/0
  2152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2153 ;;      Params:        16       0       0       0       0       0       0       0       0
  2154 ;;      Locals:         9       0       0       0       0       0       0       0       0
  2155 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2156 ;;      Totals:        25       0       0       0       0       0       0       0       0
  2157 ;;Total ram usage:       25 bytes
  2158 ;; Hardware stack levels used: 1
  2159 ;; Hardware stack levels required when called: 1
  2160 ;; This function calls:
  2161 ;;		Nothing
  2162 ;; This function is called by:
  2163 ;;		_utoa
  2164 ;; This function uses a non-reentrant model
  2165 ;;
  2166                           
  2167                           	psect	text11
  2168  000EA0                     __ptext11:
  2169                           	callstack 0
  2170  000EA0                     ___lodiv:
  2171                           	callstack 25
  2172  000EA0  EE20  F011         	lfsr	2,___lodiv@quotient
  2173  000EA4  0E07               	movlw	7
  2174  000EA6                     u561:
  2175  000EA6  6ADE               	clrf	postinc2,c
  2176  000EA8  06E8               	decf	wreg,f,c
  2177  000EAA  E2FD               	bc	u561
  2178  000EAC  5009               	movf	___lodiv@divisor^0,w,c
  2179  000EAE  100A               	iorwf	(___lodiv@divisor+1)^0,w,c
  2180  000EB0  100B               	iorwf	(___lodiv@divisor+2)^0,w,c
  2181  000EB2  100C               	iorwf	(___lodiv@divisor+3)^0,w,c
  2182  000EB4  100D               	iorwf	(___lodiv@divisor+4)^0,w,c
  2183  000EB6  100E               	iorwf	(___lodiv@divisor+5)^0,w,c
  2184  000EB8  100F               	iorwf	(___lodiv@divisor+6)^0,w,c
  2185  000EBA  1010               	iorwf	(___lodiv@divisor+7)^0,w,c
  2186  000EBC  B4D8               	btfsc	status,2,c
  2187  000EBE  EF63  F007         	goto	u571
  2188  000EC2  EF65  F007         	goto	u570
  2189  000EC6                     u571:
  2190  000EC6  EFB7  F007         	goto	l570
  2191  000ECA                     u570:
  2192  000ECA  0E01               	movlw	1
  2193  000ECC  6E19               	movwf	___lodiv@counter^0,c
  2194  000ECE  EF73  F007         	goto	l1491
  2195  000ED2                     l1489:
  2196  000ED2  90D8               	bcf	status,0,c
  2197  000ED4  3609               	rlcf	___lodiv@divisor^0,f,c
  2198  000ED6  360A               	rlcf	(___lodiv@divisor+1)^0,f,c
  2199  000ED8  360B               	rlcf	(___lodiv@divisor+2)^0,f,c
  2200  000EDA  360C               	rlcf	(___lodiv@divisor+3)^0,f,c
  2201  000EDC  360D               	rlcf	(___lodiv@divisor+4)^0,f,c
  2202  000EDE  360E               	rlcf	(___lodiv@divisor+5)^0,f,c
  2203  000EE0  360F               	rlcf	(___lodiv@divisor+6)^0,f,c
  2204  000EE2  3610               	rlcf	(___lodiv@divisor+7)^0,f,c
  2205  000EE4  2A19               	incf	___lodiv@counter^0,f,c
  2206  000EE6                     l1491:
  2207  000EE6  AE10               	btfss	(___lodiv@divisor+7)^0,7,c
  2208  000EE8  EF78  F007         	goto	u581
  2209  000EEC  EF7A  F007         	goto	u580
  2210  000EF0                     u581:
  2211  000EF0  EF69  F007         	goto	l1489
  2212  000EF4                     u580:
  2213  000EF4                     l1493:
  2214  000EF4  90D8               	bcf	status,0,c
  2215  000EF6  3611               	rlcf	___lodiv@quotient^0,f,c
  2216  000EF8  3612               	rlcf	(___lodiv@quotient+1)^0,f,c
  2217  000EFA  3613               	rlcf	(___lodiv@quotient+2)^0,f,c
  2218  000EFC  3614               	rlcf	(___lodiv@quotient+3)^0,f,c
  2219  000EFE  3615               	rlcf	(___lodiv@quotient+4)^0,f,c
  2220  000F00  3616               	rlcf	(___lodiv@quotient+5)^0,f,c
  2221  000F02  3617               	rlcf	(___lodiv@quotient+6)^0,f,c
  2222  000F04  3618               	rlcf	(___lodiv@quotient+7)^0,f,c
  2223  000F06  5009               	movf	___lodiv@divisor^0,w,c
  2224  000F08  5C01               	subwf	___lodiv@dividend^0,w,c
  2225  000F0A  500A               	movf	(___lodiv@divisor+1)^0,w,c
  2226  000F0C  5802               	subwfb	(___lodiv@dividend+1)^0,w,c
  2227  000F0E  500B               	movf	(___lodiv@divisor+2)^0,w,c
  2228  000F10  5803               	subwfb	(___lodiv@dividend+2)^0,w,c
  2229  000F12  500C               	movf	(___lodiv@divisor+3)^0,w,c
  2230  000F14  5804               	subwfb	(___lodiv@dividend+3)^0,w,c
  2231  000F16  500D               	movf	(___lodiv@divisor+4)^0,w,c
  2232  000F18  5805               	subwfb	(___lodiv@dividend+4)^0,w,c
  2233  000F1A  500E               	movf	(___lodiv@divisor+5)^0,w,c
  2234  000F1C  5806               	subwfb	(___lodiv@dividend+5)^0,w,c
  2235  000F1E  500F               	movf	(___lodiv@divisor+6)^0,w,c
  2236  000F20  5807               	subwfb	(___lodiv@dividend+6)^0,w,c
  2237  000F22  5010               	movf	(___lodiv@divisor+7)^0,w,c
  2238  000F24  5808               	subwfb	(___lodiv@dividend+7)^0,w,c
  2239  000F26  A0D8               	btfss	status,0,c
  2240  000F28  EF98  F007         	goto	u591
  2241  000F2C  EF9A  F007         	goto	u590
  2242  000F30                     u591:
  2243  000F30  EFAB  F007         	goto	l1501
  2244  000F34                     u590:
  2245  000F34  5009               	movf	___lodiv@divisor^0,w,c
  2246  000F36  5E01               	subwf	___lodiv@dividend^0,f,c
  2247  000F38  500A               	movf	(___lodiv@divisor+1)^0,w,c
  2248  000F3A  5A02               	subwfb	(___lodiv@dividend+1)^0,f,c
  2249  000F3C  500B               	movf	(___lodiv@divisor+2)^0,w,c
  2250  000F3E  5A03               	subwfb	(___lodiv@dividend+2)^0,f,c
  2251  000F40  500C               	movf	(___lodiv@divisor+3)^0,w,c
  2252  000F42  5A04               	subwfb	(___lodiv@dividend+3)^0,f,c
  2253  000F44  500D               	movf	(___lodiv@divisor+4)^0,w,c
  2254  000F46  5A05               	subwfb	(___lodiv@dividend+4)^0,f,c
  2255  000F48  500E               	movf	(___lodiv@divisor+5)^0,w,c
  2256  000F4A  5A06               	subwfb	(___lodiv@dividend+5)^0,f,c
  2257  000F4C  500F               	movf	(___lodiv@divisor+6)^0,w,c
  2258  000F4E  5A07               	subwfb	(___lodiv@dividend+6)^0,f,c
  2259  000F50  5010               	movf	(___lodiv@divisor+7)^0,w,c
  2260  000F52  5A08               	subwfb	(___lodiv@dividend+7)^0,f,c
  2261  000F54  8011               	bsf	___lodiv@quotient^0,0,c
  2262  000F56                     l1501:
  2263  000F56  90D8               	bcf	status,0,c
  2264  000F58  3210               	rrcf	(___lodiv@divisor+7)^0,f,c
  2265  000F5A  320F               	rrcf	(___lodiv@divisor+6)^0,f,c
  2266  000F5C  320E               	rrcf	(___lodiv@divisor+5)^0,f,c
  2267  000F5E  320D               	rrcf	(___lodiv@divisor+4)^0,f,c
  2268  000F60  320C               	rrcf	(___lodiv@divisor+3)^0,f,c
  2269  000F62  320B               	rrcf	(___lodiv@divisor+2)^0,f,c
  2270  000F64  320A               	rrcf	(___lodiv@divisor+1)^0,f,c
  2271  000F66  3209               	rrcf	___lodiv@divisor^0,f,c
  2272  000F68  2E19               	decfsz	___lodiv@counter^0,f,c
  2273  000F6A  EF7A  F007         	goto	l1493
  2274  000F6E                     l570:
  2275  000F6E  C011  F001         	movff	___lodiv@quotient,?___lodiv
  2276  000F72  C012  F002         	movff	___lodiv@quotient+1,?___lodiv+1
  2277  000F76  C013  F003         	movff	___lodiv@quotient+2,?___lodiv+2
  2278  000F7A  C014  F004         	movff	___lodiv@quotient+3,?___lodiv+3
  2279  000F7E  C015  F005         	movff	___lodiv@quotient+4,?___lodiv+4
  2280  000F82  C016  F006         	movff	___lodiv@quotient+5,?___lodiv+5
  2281  000F86  C017  F007         	movff	___lodiv@quotient+6,?___lodiv+6
  2282  000F8A  C018  F008         	movff	___lodiv@quotient+7,?___lodiv+7
  2283  000F8E  0012               	return		;funcret
  2284  000F90                     __end_of___lodiv:
  2285                           	callstack 0
  2286                           
  2287 ;; *************** function _atoi *****************
  2288 ;; Defined at:
  2289 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\atoi.c"
  2290 ;; Parameters:    Size  Location     Type
  2291 ;;  s               2    7[COMRAM] PTR const unsigned char 
  2292 ;;		 -> STR_1(11), 
  2293 ;; Auto vars:     Size  Location     Type
  2294 ;;  n               2   15[COMRAM] int 
  2295 ;;  neg             2   13[COMRAM] int 
  2296 ;; Return value:  Size  Location     Type
  2297 ;;                  2    7[COMRAM] int 
  2298 ;; Registers used:
  2299 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2300 ;; Tracked objects:
  2301 ;;		On entry : 0/0
  2302 ;;		On exit  : 0/0
  2303 ;;		Unchanged: 0/0
  2304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2305 ;;      Params:         2       0       0       0       0       0       0       0       0
  2306 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2307 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2308 ;;      Totals:        10       0       0       0       0       0       0       0       0
  2309 ;;Total ram usage:       10 bytes
  2310 ;; Hardware stack levels used: 1
  2311 ;; Hardware stack levels required when called: 2
  2312 ;; This function calls:
  2313 ;;		___wmul
  2314 ;;		_isdigit
  2315 ;;		_isspace
  2316 ;; This function is called by:
  2317 ;;		_vfpfcnvrt
  2318 ;; This function uses a non-reentrant model
  2319 ;;
  2320                           
  2321                           	psect	text12
  2322  000D4A                     __ptext12:
  2323                           	callstack 0
  2324  000D4A                     _atoi:
  2325                           	callstack 25
  2326  000D4A  0E00               	movlw	0
  2327  000D4C  6E11               	movwf	(atoi@n+1)^0,c
  2328  000D4E  0E00               	movlw	0
  2329  000D50  6E10               	movwf	atoi@n^0,c
  2330  000D52  0E00               	movlw	0
  2331  000D54  6E0F               	movwf	(atoi@neg+1)^0,c
  2332  000D56  0E00               	movlw	0
  2333  000D58  6E0E               	movwf	atoi@neg^0,c
  2334  000D5A  EFB1  F006         	goto	l1601
  2335  000D5E                     l1597:
  2336  000D5E  4A08               	infsnz	atoi@s^0,f,c
  2337  000D60  2A09               	incf	(atoi@s+1)^0,f,c
  2338  000D62                     l1601:
  2339  000D62  C008  FFF6         	movff	atoi@s,tblptrl
  2340  000D66  C009  FFF7         	movff	atoi@s+1,tblptrh
  2341  000D6A                     	if	0	;tblptru may be non-zero
  2342  000D6A                     	endif
  2343  000D6A                     	if	0	;tblptru may be non-zero
  2344  000D6A                     	endif
  2345  000D6A  0008               	tblrd		*
  2346  000D6C  50F5               	movf	tablat,w,c
  2347  000D6E  0A20               	xorlw	32
  2348  000D70  B4D8               	btfsc	status,2,c
  2349  000D72  EFBD  F006         	goto	u781
  2350  000D76  EFBF  F006         	goto	u780
  2351  000D7A                     u781:
  2352  000D7A  EFAF  F006         	goto	l1597
  2353  000D7E                     u780:
  2354  000D7E  0EF7               	movlw	247
  2355  000D80  6E0A               	movwf	??_atoi^0,c
  2356  000D82  0EFF               	movlw	255
  2357  000D84  6E0B               	movwf	(??_atoi+1)^0,c
  2358  000D86  C008  FFF6         	movff	atoi@s,tblptrl
  2359  000D8A  C009  FFF7         	movff	atoi@s+1,tblptrh
  2360  000D8E                     	if	0	;tblptru may be non-zero
  2361  000D8E                     	endif
  2362  000D8E                     	if	0	;tblptru may be non-zero
  2363  000D8E                     	endif
  2364  000D8E  0008               	tblrd		*
  2365  000D90  50F5               	movf	tablat,w,c
  2366  000D92  6E0C               	movwf	(??_atoi+2)^0,c
  2367  000D94  6A0D               	clrf	(??_atoi+3)^0,c
  2368  000D96  500A               	movf	??_atoi^0,w,c
  2369  000D98  260C               	addwf	(??_atoi+2)^0,f,c
  2370  000D9A  500B               	movf	(??_atoi+1)^0,w,c
  2371  000D9C  220D               	addwfc	(??_atoi+3)^0,f,c
  2372  000D9E  500D               	movf	(??_atoi+3)^0,w,c
  2373  000DA0  E109               	bnz	u790
  2374  000DA2  0E05               	movlw	5
  2375  000DA4  5C0C               	subwf	(??_atoi+2)^0,w,c
  2376  000DA6  A0D8               	btfss	status,0,c
  2377  000DA8  EFD8  F006         	goto	u791
  2378  000DAC  EFDA  F006         	goto	u790
  2379  000DB0                     u791:
  2380  000DB0  EFAF  F006         	goto	l1597
  2381  000DB4                     u790:
  2382  000DB4  EFE4  F006         	goto	l1609
  2383  000DB8                     l1605:
  2384  000DB8  0E00               	movlw	0
  2385  000DBA  6E0F               	movwf	(atoi@neg+1)^0,c
  2386  000DBC  0E01               	movlw	1
  2387  000DBE  6E0E               	movwf	atoi@neg^0,c
  2388  000DC0                     l1607:
  2389  000DC0  4A08               	infsnz	atoi@s^0,f,c
  2390  000DC2  2A09               	incf	(atoi@s+1)^0,f,c
  2391  000DC4  EF19  F007         	goto	l1617
  2392  000DC8                     l1609:
  2393  000DC8  C008  FFF6         	movff	atoi@s,tblptrl
  2394  000DCC  C009  FFF7         	movff	atoi@s+1,tblptrh
  2395  000DD0                     	if	0	;tblptru may be non-zero
  2396  000DD0                     	endif
  2397  000DD0                     	if	0	;tblptru may be non-zero
  2398  000DD0                     	endif
  2399  000DD0  0008               	tblrd		*
  2400  000DD2  50F5               	movf	tablat,w,c
  2401  000DD4  6E0A               	movwf	??_atoi^0,c
  2402  000DD6  6A0B               	clrf	(??_atoi+1)^0,c
  2403                           
  2404                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2405                           ; Switch size 1, requested type "simple"
  2406                           ; Number of cases is 1, Range of values is 0 to 0
  2407                           ; switch strategies available:
  2408                           ; Name         Instructions Cycles
  2409                           ; simple_byte            4     3 (average)
  2410                           ;	Chosen strategy is simple_byte
  2411  000DD8  500B               	movf	(??_atoi+1)^0,w,c
  2412  000DDA  0A00               	xorlw	0	; case 0
  2413  000DDC  B4D8               	btfsc	status,2,c
  2414  000DDE  EFF3  F006         	goto	l1929
  2415  000DE2  EF19  F007         	goto	l1617
  2416  000DE6                     l1929:
  2417                           
  2418                           ; Switch size 1, requested type "simple"
  2419                           ; Number of cases is 2, Range of values is 43 to 45
  2420                           ; switch strategies available:
  2421                           ; Name         Instructions Cycles
  2422                           ; simple_byte            7     4 (average)
  2423                           ;	Chosen strategy is simple_byte
  2424  000DE6  500A               	movf	??_atoi^0,w,c
  2425  000DE8  0A2B               	xorlw	43	; case 43
  2426  000DEA  B4D8               	btfsc	status,2,c
  2427  000DEC  EFE0  F006         	goto	l1607
  2428  000DF0  0A06               	xorlw	6	; case 45
  2429  000DF2  B4D8               	btfsc	status,2,c
  2430  000DF4  EFDC  F006         	goto	l1605
  2431  000DF8  EF19  F007         	goto	l1617
  2432  000DFC                     l1611:
  2433  000DFC  C010  F001         	movff	atoi@n,___wmul@multiplier
  2434  000E00  C011  F002         	movff	atoi@n+1,___wmul@multiplier+1
  2435  000E04  0E00               	movlw	0
  2436  000E06  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2437  000E08  0E0A               	movlw	10
  2438  000E0A  6E03               	movwf	___wmul@multiplicand^0,c
  2439  000E0C  ECE7  F00A         	call	___wmul	;wreg free
  2440  000E10  C008  FFF6         	movff	atoi@s,tblptrl
  2441  000E14  C009  FFF7         	movff	atoi@s+1,tblptrh
  2442  000E18                     	if	0	;tblptru may be non-zero
  2443  000E18                     	endif
  2444  000E18                     	if	0	;tblptru may be non-zero
  2445  000E18                     	endif
  2446  000E18  0008               	tblrd		*
  2447  000E1A  50F5               	movf	tablat,w,c
  2448  000E1C  5E01               	subwf	?___wmul^0,f,c
  2449  000E1E  0E00               	movlw	0
  2450  000E20  5A02               	subwfb	(?___wmul+1)^0,f,c
  2451  000E22  0E30               	movlw	48
  2452  000E24  2401               	addwf	?___wmul^0,w,c
  2453  000E26  6E10               	movwf	atoi@n^0,c
  2454  000E28  0E00               	movlw	0
  2455  000E2A  2002               	addwfc	(?___wmul+1)^0,w,c
  2456  000E2C  6E11               	movwf	(atoi@n+1)^0,c
  2457  000E2E  EFE0  F006         	goto	l1607
  2458  000E32                     l1617:
  2459  000E32  0ED0               	movlw	208
  2460  000E34  6E0A               	movwf	??_atoi^0,c
  2461  000E36  0EFF               	movlw	255
  2462  000E38  6E0B               	movwf	(??_atoi+1)^0,c
  2463  000E3A  C008  FFF6         	movff	atoi@s,tblptrl
  2464  000E3E  C009  FFF7         	movff	atoi@s+1,tblptrh
  2465  000E42                     	if	0	;tblptru may be non-zero
  2466  000E42                     	endif
  2467  000E42                     	if	0	;tblptru may be non-zero
  2468  000E42                     	endif
  2469  000E42  0008               	tblrd		*
  2470  000E44  50F5               	movf	tablat,w,c
  2471  000E46  6E0C               	movwf	(??_atoi+2)^0,c
  2472  000E48  6A0D               	clrf	(??_atoi+3)^0,c
  2473  000E4A  500A               	movf	??_atoi^0,w,c
  2474  000E4C  260C               	addwf	(??_atoi+2)^0,f,c
  2475  000E4E  500B               	movf	(??_atoi+1)^0,w,c
  2476  000E50  220D               	addwfc	(??_atoi+3)^0,f,c
  2477  000E52  500D               	movf	(??_atoi+3)^0,w,c
  2478  000E54  E109               	bnz	u800
  2479  000E56  0E0A               	movlw	10
  2480  000E58  5C0C               	subwf	(??_atoi+2)^0,w,c
  2481  000E5A  A0D8               	btfss	status,0,c
  2482  000E5C  EF32  F007         	goto	u801
  2483  000E60  EF34  F007         	goto	u800
  2484  000E64                     u801:
  2485  000E64  EFFE  F006         	goto	l1611
  2486  000E68                     u800:
  2487  000E68  500E               	movf	atoi@neg^0,w,c
  2488  000E6A  100F               	iorwf	(atoi@neg+1)^0,w,c
  2489  000E6C  A4D8               	btfss	status,2,c
  2490  000E6E  EF3B  F007         	goto	u811
  2491  000E72  EF3D  F007         	goto	u810
  2492  000E76                     u811:
  2493  000E76  EF4B  F007         	goto	l913
  2494  000E7A                     u810:
  2495  000E7A  C010  F00A         	movff	atoi@n,??_atoi
  2496  000E7E  C011  F00B         	movff	atoi@n+1,??_atoi+1
  2497  000E82  1E0A               	comf	??_atoi^0,f,c
  2498  000E84  1E0B               	comf	(??_atoi+1)^0,f,c
  2499  000E86  4A0A               	infsnz	??_atoi^0,f,c
  2500  000E88  2A0B               	incf	(??_atoi+1)^0,f,c
  2501  000E8A  C00A  F008         	movff	??_atoi,?_atoi
  2502  000E8E  C00B  F009         	movff	??_atoi+1,?_atoi+1
  2503  000E92  EF4F  F007         	goto	l916
  2504  000E96                     l913:
  2505  000E96  C010  F008         	movff	atoi@n,?_atoi
  2506  000E9A  C011  F009         	movff	atoi@n+1,?_atoi+1
  2507  000E9E                     l916:
  2508  000E9E  0012               	return		;funcret
  2509  000EA0                     __end_of_atoi:
  2510                           	callstack 0
  2511                           
  2512 ;; *************** function _isspace *****************
  2513 ;; Defined at:
  2514 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isspace.c"
  2515 ;; Parameters:    Size  Location     Type
  2516 ;;  c               2    0[COMRAM] int 
  2517 ;; Auto vars:     Size  Location     Type
  2518 ;;		None
  2519 ;; Return value:  Size  Location     Type
  2520 ;;                  2    0[COMRAM] int 
  2521 ;; Registers used:
  2522 ;;		wreg, status,2, status,0
  2523 ;; Tracked objects:
  2524 ;;		On entry : 0/0
  2525 ;;		On exit  : 0/0
  2526 ;;		Unchanged: 0/0
  2527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2528 ;;      Params:         2       0       0       0       0       0       0       0       0
  2529 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2530 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2531 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2532 ;;Total ram usage:        7 bytes
  2533 ;; Hardware stack levels used: 1
  2534 ;; Hardware stack levels required when called: 1
  2535 ;; This function calls:
  2536 ;;		Nothing
  2537 ;; This function is called by:
  2538 ;;		_atoi
  2539 ;; This function uses a non-reentrant model
  2540 ;;
  2541                           
  2542                           	psect	text13
  2543  001452                     __ptext13:
  2544                           	callstack 0
  2545  001452                     _isspace:
  2546                           	callstack 25
  2547  001452  0E01               	movlw	1
  2548  001454  6E07               	movwf	_isspace$968^0,c
  2549  001456  0E20               	movlw	32
  2550  001458  1801               	xorwf	isspace@c^0,w,c
  2551  00145A  1002               	iorwf	(isspace@c+1)^0,w,c
  2552  00145C  B4D8               	btfsc	status,2,c
  2553  00145E  EF33  F00A         	goto	u691
  2554  001462  EF35  F00A         	goto	u690
  2555  001466                     u691:
  2556  001466  EF4E  F00A         	goto	l1555
  2557  00146A                     u690:
  2558  00146A  0EF7               	movlw	247
  2559  00146C  6E03               	movwf	??_isspace^0,c
  2560  00146E  0EFF               	movlw	255
  2561  001470  6E04               	movwf	(??_isspace+1)^0,c
  2562  001472  C001  F005         	movff	isspace@c,??_isspace+2
  2563  001476  C002  F006         	movff	isspace@c+1,??_isspace+3
  2564  00147A  5003               	movf	??_isspace^0,w,c
  2565  00147C  2605               	addwf	(??_isspace+2)^0,f,c
  2566  00147E  5004               	movf	(??_isspace+1)^0,w,c
  2567  001480  2206               	addwfc	(??_isspace+3)^0,f,c
  2568  001482  5006               	movf	(??_isspace+3)^0,w,c
  2569  001484  E109               	bnz	u700
  2570  001486  0E05               	movlw	5
  2571  001488  5C05               	subwf	(??_isspace+2)^0,w,c
  2572  00148A  A0D8               	btfss	status,0,c
  2573  00148C  EF4A  F00A         	goto	u701
  2574  001490  EF4C  F00A         	goto	u700
  2575  001494                     u701:
  2576  001494  EF4E  F00A         	goto	l1555
  2577  001498                     u700:
  2578  001498  0E00               	movlw	0
  2579  00149A  6E07               	movwf	_isspace$968^0,c
  2580  00149C                     l1555:
  2581  00149C  C007  F001         	movff	_isspace$968,?_isspace
  2582  0014A0  6A02               	clrf	(?_isspace+1)^0,c
  2583  0014A2  0012               	return		;funcret
  2584  0014A4                     __end_of_isspace:
  2585                           	callstack 0
  2586                           
  2587 ;; *************** function _isdigit *****************
  2588 ;; Defined at:
  2589 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isdigit.c"
  2590 ;; Parameters:    Size  Location     Type
  2591 ;;  c               2    0[COMRAM] int 
  2592 ;; Auto vars:     Size  Location     Type
  2593 ;;		None
  2594 ;; Return value:  Size  Location     Type
  2595 ;;                  2    0[COMRAM] int 
  2596 ;; Registers used:
  2597 ;;		wreg, status,2, status,0
  2598 ;; Tracked objects:
  2599 ;;		On entry : 0/0
  2600 ;;		On exit  : 0/0
  2601 ;;		Unchanged: 0/0
  2602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2603 ;;      Params:         2       0       0       0       0       0       0       0       0
  2604 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2605 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2606 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2607 ;;Total ram usage:        6 bytes
  2608 ;; Hardware stack levels used: 1
  2609 ;; Hardware stack levels required when called: 1
  2610 ;; This function calls:
  2611 ;;		Nothing
  2612 ;; This function is called by:
  2613 ;;		_vfpfcnvrt
  2614 ;;		_atoi
  2615 ;; This function uses a non-reentrant model
  2616 ;;
  2617                           
  2618                           	psect	text14
  2619  001528                     __ptext14:
  2620                           	callstack 0
  2621  001528                     _isdigit:
  2622                           	callstack 26
  2623  001528  0ED0               	movlw	208
  2624  00152A  6E03               	movwf	??_isdigit^0,c
  2625  00152C  0EFF               	movlw	255
  2626  00152E  6E04               	movwf	(??_isdigit+1)^0,c
  2627  001530  C001  F005         	movff	isdigit@c,??_isdigit+2
  2628  001534  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  2629  001538  5003               	movf	??_isdigit^0,w,c
  2630  00153A  2605               	addwf	(??_isdigit+2)^0,f,c
  2631  00153C  5004               	movf	(??_isdigit+1)^0,w,c
  2632  00153E  2206               	addwfc	(??_isdigit+3)^0,f,c
  2633  001540  5006               	movf	(??_isdigit+3)^0,w,c
  2634  001542  E10A               	bnz	u670
  2635  001544  0E0A               	movlw	10
  2636  001546  5C05               	subwf	(??_isdigit+2)^0,w,c
  2637  001548  A0D8               	btfss	status,0,c
  2638  00154A  EFA9  F00A         	goto	u671
  2639  00154E  EFAC  F00A         	goto	u670
  2640  001552                     u671:
  2641  001552  0E01               	movlw	1
  2642  001554  EFAD  F00A         	goto	u680
  2643  001558                     u670:
  2644  001558  0E00               	movlw	0
  2645  00155A                     u680:
  2646  00155A  6E01               	movwf	?_isdigit^0,c
  2647  00155C  6A02               	clrf	(?_isdigit+1)^0,c
  2648  00155E  0012               	return		;funcret
  2649  001560                     __end_of_isdigit:
  2650                           	callstack 0
  2651                           
  2652 ;; *************** function ___wmul *****************
  2653 ;; Defined at:
  2654 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
  2655 ;; Parameters:    Size  Location     Type
  2656 ;;  multiplier      2    0[COMRAM] unsigned int 
  2657 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2658 ;; Auto vars:     Size  Location     Type
  2659 ;;  product         2    4[COMRAM] unsigned int 
  2660 ;; Return value:  Size  Location     Type
  2661 ;;                  2    0[COMRAM] unsigned int 
  2662 ;; Registers used:
  2663 ;;		wreg, status,2, status,0, prodl, prodh
  2664 ;; Tracked objects:
  2665 ;;		On entry : 0/0
  2666 ;;		On exit  : 0/0
  2667 ;;		Unchanged: 0/0
  2668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2669 ;;      Params:         4       0       0       0       0       0       0       0       0
  2670 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2671 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2672 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2673 ;;Total ram usage:        6 bytes
  2674 ;; Hardware stack levels used: 1
  2675 ;; Hardware stack levels required when called: 1
  2676 ;; This function calls:
  2677 ;;		Nothing
  2678 ;; This function is called by:
  2679 ;;		_atoi
  2680 ;; This function uses a non-reentrant model
  2681 ;;
  2682                           
  2683                           	psect	text15
  2684  0015CE                     __ptext15:
  2685                           	callstack 0
  2686  0015CE                     ___wmul:
  2687                           	callstack 25
  2688  0015CE  5001               	movf	___wmul@multiplier^0,w,c
  2689  0015D0  0203               	mulwf	___wmul@multiplicand^0,c
  2690  0015D2  CFF3 F005          	movff	prodl,___wmul@product
  2691  0015D6  CFF4 F006          	movff	prodh,___wmul@product+1
  2692  0015DA  5001               	movf	___wmul@multiplier^0,w,c
  2693  0015DC  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2694  0015DE  50F3               	movf	243,w,c
  2695  0015E0  2606               	addwf	(___wmul@product+1)^0,f,c
  2696  0015E2  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2697  0015E4  0203               	mulwf	___wmul@multiplicand^0,c
  2698  0015E6  50F3               	movf	243,w,c
  2699  0015E8  2606               	addwf	(___wmul@product+1)^0,f,c
  2700  0015EA  C005  F001         	movff	___wmul@product,?___wmul
  2701  0015EE  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2702  0015F2  0012               	return		;funcret
  2703  0015F4                     __end_of___wmul:
  2704                           	callstack 0
  2705                           
  2706 ;; *************** function _Lcd_Write_String *****************
  2707 ;; Defined at:
  2708 ;;		line 97 in file "lcd.c"
  2709 ;; Parameters:    Size  Location     Type
  2710 ;;  a               2    4[COMRAM] PTR unsigned char 
  2711 ;;		 -> str_contador(16), 
  2712 ;; Auto vars:     Size  Location     Type
  2713 ;;  i               2    6[COMRAM] int 
  2714 ;; Return value:  Size  Location     Type
  2715 ;;                  1    wreg      void 
  2716 ;; Registers used:
  2717 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2718 ;; Tracked objects:
  2719 ;;		On entry : 0/0
  2720 ;;		On exit  : 0/0
  2721 ;;		Unchanged: 0/0
  2722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2723 ;;      Params:         2       0       0       0       0       0       0       0       0
  2724 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2725 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2726 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2727 ;;Total ram usage:        4 bytes
  2728 ;; Hardware stack levels used: 1
  2729 ;; Hardware stack levels required when called: 3
  2730 ;; This function calls:
  2731 ;;		_Lcd_Write_Char
  2732 ;; This function is called by:
  2733 ;;		_main
  2734 ;; This function uses a non-reentrant model
  2735 ;;
  2736                           
  2737                           	psect	text16
  2738  0014E8                     __ptext16:
  2739                           	callstack 0
  2740  0014E8                     _Lcd_Write_String:
  2741                           	callstack 27
  2742  0014E8                     
  2743                           ;lcd.c: 97: void Lcd_Write_String(unsigned char *a);lcd.c: 98: {;lcd.c: 99:  int i;;lcd.
      +                          c: 100:  for(i=0;a[i]!='\0';i++)
  2744  0014E8  0E00               	movlw	0
  2745  0014EA  6E08               	movwf	(Lcd_Write_String@i+1)^0,c
  2746  0014EC  0E00               	movlw	0
  2747  0014EE  6E07               	movwf	Lcd_Write_String@i^0,c
  2748  0014F0  EF85  F00A         	goto	l1853
  2749  0014F4                     l1849:
  2750                           
  2751                           ;lcd.c: 101:     Lcd_Write_Char(a[i]);
  2752  0014F4  5007               	movf	Lcd_Write_String@i^0,w,c
  2753  0014F6  2405               	addwf	Lcd_Write_String@a^0,w,c
  2754  0014F8  6ED9               	movwf	fsr2l,c
  2755  0014FA  5008               	movf	(Lcd_Write_String@i+1)^0,w,c
  2756  0014FC  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
  2757  0014FE  6EDA               	movwf	fsr2h,c
  2758  001500  50DF               	movf	indf2,w,c
  2759  001502  ECB0  F00A         	call	_Lcd_Write_Char
  2760  001506  4A07               	infsnz	Lcd_Write_String@i^0,f,c
  2761  001508  2A08               	incf	(Lcd_Write_String@i+1)^0,f,c
  2762  00150A                     l1853:
  2763  00150A  5007               	movf	Lcd_Write_String@i^0,w,c
  2764  00150C  2405               	addwf	Lcd_Write_String@a^0,w,c
  2765  00150E  6ED9               	movwf	fsr2l,c
  2766  001510  5008               	movf	(Lcd_Write_String@i+1)^0,w,c
  2767  001512  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
  2768  001514  6EDA               	movwf	fsr2h,c
  2769  001516  50DF               	movf	indf2,w,c
  2770  001518  A4D8               	btfss	status,2,c
  2771  00151A  EF91  F00A         	goto	u971
  2772  00151E  EF93  F00A         	goto	u970
  2773  001522                     u971:
  2774  001522  EF7A  F00A         	goto	l1849
  2775  001526                     u970:
  2776  001526  0012               	return		;funcret
  2777  001528                     __end_of_Lcd_Write_String:
  2778                           	callstack 0
  2779                           
  2780 ;; *************** function _Lcd_Write_Char *****************
  2781 ;; Defined at:
  2782 ;;		line 81 in file "lcd.c"
  2783 ;; Parameters:    Size  Location     Type
  2784 ;;  a               1    wreg     unsigned char 
  2785 ;; Auto vars:     Size  Location     Type
  2786 ;;  a               1    3[COMRAM] unsigned char 
  2787 ;;  y               1    2[COMRAM] unsigned char 
  2788 ;;  temp            1    1[COMRAM] unsigned char 
  2789 ;; Return value:  Size  Location     Type
  2790 ;;                  1    wreg      void 
  2791 ;; Registers used:
  2792 ;;		wreg, status,2, status,0, cstack
  2793 ;; Tracked objects:
  2794 ;;		On entry : 0/0
  2795 ;;		On exit  : 0/0
  2796 ;;		Unchanged: 0/0
  2797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2798 ;;      Params:         0       0       0       0       0       0       0       0       0
  2799 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2800 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2801 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2802 ;;Total ram usage:        3 bytes
  2803 ;; Hardware stack levels used: 1
  2804 ;; Hardware stack levels required when called: 2
  2805 ;; This function calls:
  2806 ;;		_Lcd_Port
  2807 ;; This function is called by:
  2808 ;;		_Lcd_Write_String
  2809 ;; This function uses a non-reentrant model
  2810 ;;
  2811                           
  2812                           	psect	text17
  2813  001560                     __ptext17:
  2814                           	callstack 0
  2815  001560                     _Lcd_Write_Char:
  2816                           	callstack 27
  2817                           
  2818                           ;incstack = 0
  2819                           ;Lcd_Write_Char@a stored from wreg
  2820  001560  6E04               	movwf	Lcd_Write_Char@a^0,c
  2821  001562                     
  2822                           ;lcd.c: 81: void Lcd_Write_Char(unsigned char a);lcd.c: 82: {;lcd.c: 83:    char temp,y;
      +                          ;lcd.c: 84:    temp = a&0x0F;
  2823  001562  5004               	movf	Lcd_Write_Char@a^0,w,c
  2824  001564  0B0F               	andlw	15
  2825  001566  6E02               	movwf	Lcd_Write_Char@temp^0,c
  2826                           
  2827                           ;lcd.c: 85:    y = a&0xF0;
  2828  001568  5004               	movf	Lcd_Write_Char@a^0,w,c
  2829  00156A  0BF0               	andlw	240
  2830  00156C  6E03               	movwf	Lcd_Write_Char@y^0,c
  2831  00156E                     
  2832                           ;lcd.c: 86:    LATDbits.LATD2 = 1;
  2833  00156E  848C               	bsf	140,2,c	;volatile
  2834  001570                     
  2835                           ;lcd.c: 87:    Lcd_Port(y>>4);
  2836  001570  3803               	swapf	Lcd_Write_Char@y^0,w,c
  2837  001572  0B0F               	andlw	15
  2838  001574  ECD2  F009         	call	_Lcd_Port
  2839  001578                     
  2840                           ;lcd.c: 88:    LATDbits.LATD3 = 1;
  2841  001578  868C               	bsf	140,3,c	;volatile
  2842  00157A                     
  2843                           ;lcd.c: 89:    _delay((unsigned long)((40)*(16000000/4000000.0)));
  2844  00157A  0E35               	movlw	53
  2845  00157C                     u997:
  2846  00157C  2EE8               	decfsz	wreg,f,c
  2847  00157E  D7FE               	bra	u997
  2848  001580  F000               	nop	
  2849  001582                     
  2850                           ;lcd.c: 90:    LATDbits.LATD3 = 0;
  2851  001582  968C               	bcf	140,3,c	;volatile
  2852  001584                     
  2853                           ;lcd.c: 91:    Lcd_Port(temp);
  2854  001584  5002               	movf	Lcd_Write_Char@temp^0,w,c
  2855  001586  ECD2  F009         	call	_Lcd_Port
  2856  00158A                     
  2857                           ;lcd.c: 92:    LATDbits.LATD3 = 1;
  2858  00158A  868C               	bsf	140,3,c	;volatile
  2859  00158C                     
  2860                           ;lcd.c: 93:    _delay((unsigned long)((40)*(16000000/4000000.0)));
  2861  00158C  0E35               	movlw	53
  2862  00158E                     u1007:
  2863  00158E  2EE8               	decfsz	wreg,f,c
  2864  001590  D7FE               	bra	u1007
  2865  001592  F000               	nop	
  2866  001594                     
  2867                           ;lcd.c: 94:    LATDbits.LATD3 = 0;
  2868  001594  968C               	bcf	140,3,c	;volatile
  2869  001596  0012               	return		;funcret
  2870  001598                     __end_of_Lcd_Write_Char:
  2871                           	callstack 0
  2872                           
  2873 ;; *************** function _Lcd_Set_Cursor *****************
  2874 ;; Defined at:
  2875 ;;		line 41 in file "lcd.c"
  2876 ;; Parameters:    Size  Location     Type
  2877 ;;  a               1    wreg     unsigned char 
  2878 ;;  b               1    3[COMRAM] unsigned char 
  2879 ;; Auto vars:     Size  Location     Type
  2880 ;;  a               1    4[COMRAM] unsigned char 
  2881 ;;  temp            1    7[COMRAM] unsigned char 
  2882 ;;  y               1    6[COMRAM] unsigned char 
  2883 ;;  z               1    5[COMRAM] unsigned char 
  2884 ;; Return value:  Size  Location     Type
  2885 ;;                  1    wreg      void 
  2886 ;; Registers used:
  2887 ;;		wreg, status,2, status,0, cstack
  2888 ;; Tracked objects:
  2889 ;;		On entry : 0/0
  2890 ;;		On exit  : 0/0
  2891 ;;		Unchanged: 0/0
  2892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2893 ;;      Params:         1       0       0       0       0       0       0       0       0
  2894 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2895 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2896 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2897 ;;Total ram usage:        5 bytes
  2898 ;; Hardware stack levels used: 1
  2899 ;; Hardware stack levels required when called: 3
  2900 ;; This function calls:
  2901 ;;		_Lcd_Cmd
  2902 ;; This function is called by:
  2903 ;;		_main
  2904 ;; This function uses a non-reentrant model
  2905 ;;
  2906                           
  2907                           	psect	text18
  2908  0012DC                     __ptext18:
  2909                           	callstack 0
  2910  0012DC                     _Lcd_Set_Cursor:
  2911                           	callstack 27
  2912                           
  2913                           ;incstack = 0
  2914                           ;Lcd_Set_Cursor@a stored from wreg
  2915  0012DC  6E05               	movwf	Lcd_Set_Cursor@a^0,c
  2916  0012DE                     
  2917                           ;lcd.c: 41: void Lcd_Set_Cursor(unsigned char a, unsigned char b);lcd.c: 42: {;lcd.c: 43
      +                          :  char temp,z,y;;lcd.c: 44:  if(a == 1)
  2918  0012DE  0405               	decf	Lcd_Set_Cursor@a^0,w,c
  2919  0012E0  A4D8               	btfss	status,2,c
  2920  0012E2  EF75  F009         	goto	u951
  2921  0012E6  EF77  F009         	goto	u950
  2922  0012EA                     u951:
  2923  0012EA  EF88  F009         	goto	l1839
  2924  0012EE                     u950:
  2925  0012EE                     
  2926                           ;lcd.c: 45:  {;lcd.c: 46:    temp = 0x80 + b - 1;
  2927  0012EE  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  2928  0012F0  0F7F               	addlw	127
  2929  0012F2  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  2930                           
  2931                           ;lcd.c: 47:   z = temp>>4;
  2932  0012F4  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  2933  0012F6  0B0F               	andlw	15
  2934  0012F8  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  2935                           
  2936                           ;lcd.c: 48:   y = temp & 0x0F;
  2937  0012FA  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  2938  0012FC  0B0F               	andlw	15
  2939  0012FE  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  2940  001300                     
  2941                           ;lcd.c: 49:   Lcd_Cmd(z);
  2942  001300  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  2943  001302  EC0C  F00B         	call	_Lcd_Cmd
  2944  001306                     
  2945                           ;lcd.c: 50:   Lcd_Cmd(y);
  2946  001306  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  2947  001308  EC0C  F00B         	call	_Lcd_Cmd
  2948                           
  2949                           ;lcd.c: 51:  }
  2950  00130C  EFA0  F009         	goto	l111
  2951  001310                     l1839:
  2952  001310  0E02               	movlw	2
  2953  001312  1805               	xorwf	Lcd_Set_Cursor@a^0,w,c
  2954  001314  A4D8               	btfss	status,2,c
  2955  001316  EF8F  F009         	goto	u961
  2956  00131A  EF91  F009         	goto	u960
  2957  00131E                     u961:
  2958  00131E  EFA0  F009         	goto	l111
  2959  001322                     u960:
  2960  001322                     
  2961                           ;lcd.c: 53:  {;lcd.c: 54:   temp = 0xC0 + b - 1;
  2962  001322  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  2963  001324  0FBF               	addlw	191
  2964  001326  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  2965                           
  2966                           ;lcd.c: 55:   z = temp>>4;
  2967  001328  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  2968  00132A  0B0F               	andlw	15
  2969  00132C  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  2970                           
  2971                           ;lcd.c: 56:   y = temp & 0x0F;
  2972  00132E  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  2973  001330  0B0F               	andlw	15
  2974  001332  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  2975  001334                     
  2976                           ;lcd.c: 57:   Lcd_Cmd(z);
  2977  001334  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  2978  001336  EC0C  F00B         	call	_Lcd_Cmd
  2979  00133A                     
  2980                           ;lcd.c: 58:   Lcd_Cmd(y);
  2981  00133A  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  2982  00133C  EC0C  F00B         	call	_Lcd_Cmd
  2983  001340                     l111:
  2984  001340  0012               	return		;funcret
  2985  001342                     __end_of_Lcd_Set_Cursor:
  2986                           	callstack 0
  2987                           
  2988 ;; *************** function _Lcd_Init *****************
  2989 ;; Defined at:
  2990 ;;		line 62 in file "lcd.c"
  2991 ;; Parameters:    Size  Location     Type
  2992 ;;		None
  2993 ;; Auto vars:     Size  Location     Type
  2994 ;;		None
  2995 ;; Return value:  Size  Location     Type
  2996 ;;                  1    wreg      void 
  2997 ;; Registers used:
  2998 ;;		wreg, status,2, cstack
  2999 ;; Tracked objects:
  3000 ;;		On entry : 0/0
  3001 ;;		On exit  : 0/0
  3002 ;;		Unchanged: 0/0
  3003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3004 ;;      Params:         0       0       0       0       0       0       0       0       0
  3005 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3006 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3007 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3008 ;;Total ram usage:        1 bytes
  3009 ;; Hardware stack levels used: 1
  3010 ;; Hardware stack levels required when called: 3
  3011 ;; This function calls:
  3012 ;;		_Lcd_Cmd
  3013 ;;		_Lcd_Port
  3014 ;; This function is called by:
  3015 ;;		_main
  3016 ;; This function uses a non-reentrant model
  3017 ;;
  3018                           
  3019                           	psect	text19
  3020  001268                     __ptext19:
  3021                           	callstack 0
  3022  001268                     _Lcd_Init:
  3023                           	callstack 27
  3024  001268                     
  3025                           ;lcd.c: 64:   Lcd_Port(0x00);
  3026  001268  0E00               	movlw	0
  3027  00126A  ECD2  F009         	call	_Lcd_Port
  3028  00126E                     
  3029                           ;lcd.c: 65:    _delay((unsigned long)((20)*(16000000/4000.0)));
  3030  00126E  0E68               	movlw	104
  3031  001270  6E04               	movwf	??_Lcd_Init^0,c
  3032  001272  0EE4               	movlw	228
  3033  001274                     u1017:
  3034  001274  2EE8               	decfsz	wreg,f,c
  3035  001276  D7FE               	bra	u1017
  3036  001278  2E04               	decfsz	??_Lcd_Init^0,f,c
  3037  00127A  D7FC               	bra	u1017
  3038  00127C  D000               	nop2	
  3039  00127E                     
  3040                           ;lcd.c: 66:   Lcd_Cmd(0x03);
  3041  00127E  0E03               	movlw	3
  3042  001280  EC0C  F00B         	call	_Lcd_Cmd
  3043  001284                     
  3044                           ;lcd.c: 67:  _delay((unsigned long)((5)*(16000000/4000.0)));
  3045  001284  0E1A               	movlw	26
  3046  001286  6E04               	movwf	??_Lcd_Init^0,c
  3047  001288  0EF8               	movlw	248
  3048  00128A                     u1027:
  3049  00128A  2EE8               	decfsz	wreg,f,c
  3050  00128C  D7FE               	bra	u1027
  3051  00128E  2E04               	decfsz	??_Lcd_Init^0,f,c
  3052  001290  D7FC               	bra	u1027
  3053  001292  D000               	nop2	
  3054  001294                     
  3055                           ;lcd.c: 68:   Lcd_Cmd(0x03);
  3056  001294  0E03               	movlw	3
  3057  001296  EC0C  F00B         	call	_Lcd_Cmd
  3058  00129A                     
  3059                           ;lcd.c: 69:  _delay((unsigned long)((11)*(16000000/4000.0)));
  3060  00129A  0E3A               	movlw	58
  3061  00129C  6E04               	movwf	??_Lcd_Init^0,c
  3062  00129E  0E23               	movlw	35
  3063  0012A0                     u1037:
  3064  0012A0  2EE8               	decfsz	wreg,f,c
  3065  0012A2  D7FE               	bra	u1037
  3066  0012A4  2E04               	decfsz	??_Lcd_Init^0,f,c
  3067  0012A6  D7FC               	bra	u1037
  3068  0012A8  F000               	nop	
  3069  0012AA                     
  3070                           ;lcd.c: 70:   Lcd_Cmd(0x03);
  3071  0012AA  0E03               	movlw	3
  3072  0012AC  EC0C  F00B         	call	_Lcd_Cmd
  3073  0012B0                     
  3074                           ;lcd.c: 72:   Lcd_Cmd(0x02);
  3075  0012B0  0E02               	movlw	2
  3076  0012B2  EC0C  F00B         	call	_Lcd_Cmd
  3077  0012B6                     
  3078                           ;lcd.c: 73:   Lcd_Cmd(0x02);
  3079  0012B6  0E02               	movlw	2
  3080  0012B8  EC0C  F00B         	call	_Lcd_Cmd
  3081  0012BC                     
  3082                           ;lcd.c: 74:   Lcd_Cmd(0x08);
  3083  0012BC  0E08               	movlw	8
  3084  0012BE  EC0C  F00B         	call	_Lcd_Cmd
  3085  0012C2                     
  3086                           ;lcd.c: 75:   Lcd_Cmd(0x00);
  3087  0012C2  0E00               	movlw	0
  3088  0012C4  EC0C  F00B         	call	_Lcd_Cmd
  3089  0012C8                     
  3090                           ;lcd.c: 76:   Lcd_Cmd(0x0C);
  3091  0012C8  0E0C               	movlw	12
  3092  0012CA  EC0C  F00B         	call	_Lcd_Cmd
  3093  0012CE                     
  3094                           ;lcd.c: 77:   Lcd_Cmd(0x00);
  3095  0012CE  0E00               	movlw	0
  3096  0012D0  EC0C  F00B         	call	_Lcd_Cmd
  3097  0012D4                     
  3098                           ;lcd.c: 78:   Lcd_Cmd(0x06);
  3099  0012D4  0E06               	movlw	6
  3100  0012D6  EC0C  F00B         	call	_Lcd_Cmd
  3101  0012DA  0012               	return		;funcret
  3102  0012DC                     __end_of_Lcd_Init:
  3103                           	callstack 0
  3104                           
  3105 ;; *************** function _Lcd_Clear *****************
  3106 ;; Defined at:
  3107 ;;		line 35 in file "lcd.c"
  3108 ;; Parameters:    Size  Location     Type
  3109 ;;		None
  3110 ;; Auto vars:     Size  Location     Type
  3111 ;;		None
  3112 ;; Return value:  Size  Location     Type
  3113 ;;                  1    wreg      void 
  3114 ;; Registers used:
  3115 ;;		wreg, status,2, cstack
  3116 ;; Tracked objects:
  3117 ;;		On entry : 0/0
  3118 ;;		On exit  : 0/0
  3119 ;;		Unchanged: 0/0
  3120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3121 ;;      Params:         0       0       0       0       0       0       0       0       0
  3122 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3123 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3124 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3125 ;;Total ram usage:        0 bytes
  3126 ;; Hardware stack levels used: 1
  3127 ;; Hardware stack levels required when called: 3
  3128 ;; This function calls:
  3129 ;;		_Lcd_Cmd
  3130 ;; This function is called by:
  3131 ;;		_main
  3132 ;; This function uses a non-reentrant model
  3133 ;;
  3134                           
  3135                           	psect	text20
  3136  00166A                     __ptext20:
  3137                           	callstack 0
  3138  00166A                     _Lcd_Clear:
  3139                           	callstack 27
  3140  00166A                     
  3141                           ;lcd.c: 37:  Lcd_Cmd(0);
  3142  00166A  0E00               	movlw	0
  3143  00166C  EC0C  F00B         	call	_Lcd_Cmd
  3144                           
  3145                           ;lcd.c: 38:  Lcd_Cmd(1);
  3146  001670  0E01               	movlw	1
  3147  001672  EC0C  F00B         	call	_Lcd_Cmd
  3148  001676  0012               	return		;funcret
  3149  001678                     __end_of_Lcd_Clear:
  3150                           	callstack 0
  3151                           
  3152 ;; *************** function _Lcd_Cmd *****************
  3153 ;; Defined at:
  3154 ;;		line 26 in file "lcd.c"
  3155 ;; Parameters:    Size  Location     Type
  3156 ;;  a               1    wreg     unsigned char 
  3157 ;; Auto vars:     Size  Location     Type
  3158 ;;  a               1    2[COMRAM] unsigned char 
  3159 ;; Return value:  Size  Location     Type
  3160 ;;                  1    wreg      void 
  3161 ;; Registers used:
  3162 ;;		wreg, status,2, cstack
  3163 ;; Tracked objects:
  3164 ;;		On entry : 0/0
  3165 ;;		On exit  : 0/0
  3166 ;;		Unchanged: 0/0
  3167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3168 ;;      Params:         0       0       0       0       0       0       0       0       0
  3169 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3170 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3171 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3172 ;;Total ram usage:        2 bytes
  3173 ;; Hardware stack levels used: 1
  3174 ;; Hardware stack levels required when called: 2
  3175 ;; This function calls:
  3176 ;;		_Lcd_Port
  3177 ;; This function is called by:
  3178 ;;		_Lcd_Clear
  3179 ;;		_Lcd_Set_Cursor
  3180 ;;		_Lcd_Init
  3181 ;;		_Lcd_Shift_Right
  3182 ;;		_Lcd_Shift_Left
  3183 ;; This function uses a non-reentrant model
  3184 ;;
  3185                           
  3186                           	psect	text21
  3187  001618                     __ptext21:
  3188                           	callstack 0
  3189  001618                     _Lcd_Cmd:
  3190                           	callstack 27
  3191                           
  3192                           ;incstack = 0
  3193                           ;Lcd_Cmd@a stored from wreg
  3194  001618  6E03               	movwf	Lcd_Cmd@a^0,c
  3195  00161A                     
  3196                           ;lcd.c: 26: void Lcd_Cmd(unsigned char a);lcd.c: 27: {;lcd.c: 28:  LATDbits.LATD2 = 0;
  3197  00161A  948C               	bcf	140,2,c	;volatile
  3198  00161C                     
  3199                           ;lcd.c: 29:  Lcd_Port(a);
  3200  00161C  5003               	movf	Lcd_Cmd@a^0,w,c
  3201  00161E  ECD2  F009         	call	_Lcd_Port
  3202  001622                     
  3203                           ;lcd.c: 30:  LATDbits.LATD3 = 1;
  3204  001622  868C               	bsf	140,3,c	;volatile
  3205  001624                     
  3206                           ;lcd.c: 31:         _delay((unsigned long)((4)*(16000000/4000.0)));
  3207  001624  0E15               	movlw	21
  3208  001626  6E02               	movwf	??_Lcd_Cmd^0,c
  3209  001628  0EC6               	movlw	198
  3210  00162A                     u1047:
  3211  00162A  2EE8               	decfsz	wreg,f,c
  3212  00162C  D7FE               	bra	u1047
  3213  00162E  2E02               	decfsz	??_Lcd_Cmd^0,f,c
  3214  001630  D7FC               	bra	u1047
  3215  001632  D000               	nop2	
  3216  001634                     
  3217                           ;lcd.c: 32:         LATDbits.LATD3 = 0;
  3218  001634  968C               	bcf	140,3,c	;volatile
  3219  001636  0012               	return		;funcret
  3220  001638                     __end_of_Lcd_Cmd:
  3221                           	callstack 0
  3222                           
  3223 ;; *************** function _Lcd_Port *****************
  3224 ;; Defined at:
  3225 ;;		line 3 in file "lcd.c"
  3226 ;; Parameters:    Size  Location     Type
  3227 ;;  a               1    wreg     unsigned char 
  3228 ;; Auto vars:     Size  Location     Type
  3229 ;;  a               1    0[COMRAM] unsigned char 
  3230 ;; Return value:  Size  Location     Type
  3231 ;;                  1    wreg      void 
  3232 ;; Registers used:
  3233 ;;		wreg
  3234 ;; Tracked objects:
  3235 ;;		On entry : 0/0
  3236 ;;		On exit  : 0/0
  3237 ;;		Unchanged: 0/0
  3238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3239 ;;      Params:         0       0       0       0       0       0       0       0       0
  3240 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3241 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3242 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3243 ;;Total ram usage:        1 bytes
  3244 ;; Hardware stack levels used: 1
  3245 ;; Hardware stack levels required when called: 1
  3246 ;; This function calls:
  3247 ;;		Nothing
  3248 ;; This function is called by:
  3249 ;;		_Lcd_Cmd
  3250 ;;		_Lcd_Init
  3251 ;;		_Lcd_Write_Char
  3252 ;; This function uses a non-reentrant model
  3253 ;;
  3254                           
  3255                           	psect	text22
  3256  0013A4                     __ptext22:
  3257                           	callstack 0
  3258  0013A4                     _Lcd_Port:
  3259                           	callstack 27
  3260                           
  3261                           ;incstack = 0
  3262                           ;Lcd_Port@a stored from wreg
  3263  0013A4  6E01               	movwf	Lcd_Port@a^0,c
  3264  0013A6                     
  3265                           ;lcd.c: 3: void Lcd_Port(unsigned char a);lcd.c: 4: {;lcd.c: 5:  if(a & 1)
  3266  0013A6  A001               	btfss	Lcd_Port@a^0,0,c
  3267  0013A8  EFD8  F009         	goto	u821
  3268  0013AC  EFDA  F009         	goto	u820
  3269  0013B0                     u821:
  3270  0013B0  EFDD  F009         	goto	l91
  3271  0013B4                     u820:
  3272  0013B4                     
  3273                           ;lcd.c: 6:   LATDbits.LATD4 = 1;
  3274  0013B4  888C               	bsf	140,4,c	;volatile
  3275  0013B6  EFDE  F009         	goto	l1631
  3276  0013BA                     l91:
  3277                           
  3278                           ;lcd.c: 8:   LATDbits.LATD4 = 0;
  3279  0013BA  988C               	bcf	140,4,c	;volatile
  3280  0013BC                     l1631:
  3281                           
  3282                           ;lcd.c: 10:  if(a & 2)
  3283  0013BC  A201               	btfss	Lcd_Port@a^0,1,c
  3284  0013BE  EFE3  F009         	goto	u831
  3285  0013C2  EFE5  F009         	goto	u830
  3286  0013C6                     u831:
  3287  0013C6  EFE8  F009         	goto	l93
  3288  0013CA                     u830:
  3289  0013CA                     
  3290                           ;lcd.c: 11:   LATDbits.LATD5 = 1;
  3291  0013CA  8A8C               	bsf	140,5,c	;volatile
  3292  0013CC  EFE9  F009         	goto	l1635
  3293  0013D0                     l93:
  3294                           
  3295                           ;lcd.c: 13:   LATDbits.LATD5 = 0;
  3296  0013D0  9A8C               	bcf	140,5,c	;volatile
  3297  0013D2                     l1635:
  3298                           
  3299                           ;lcd.c: 15:  if(a & 4)
  3300  0013D2  A401               	btfss	Lcd_Port@a^0,2,c
  3301  0013D4  EFEE  F009         	goto	u841
  3302  0013D8  EFF0  F009         	goto	u840
  3303  0013DC                     u841:
  3304  0013DC  EFF3  F009         	goto	l95
  3305  0013E0                     u840:
  3306  0013E0                     
  3307                           ;lcd.c: 16:   LATDbits.LATD6 = 1;
  3308  0013E0  8C8C               	bsf	140,6,c	;volatile
  3309  0013E2  EFF4  F009         	goto	l1639
  3310  0013E6                     l95:
  3311                           
  3312                           ;lcd.c: 18:   LATDbits.LATD6 = 0;
  3313  0013E6  9C8C               	bcf	140,6,c	;volatile
  3314  0013E8                     l1639:
  3315                           
  3316                           ;lcd.c: 20:  if(a & 8)
  3317  0013E8  A601               	btfss	Lcd_Port@a^0,3,c
  3318  0013EA  EFF9  F009         	goto	u851
  3319  0013EE  EFFB  F009         	goto	u850
  3320  0013F2                     u851:
  3321  0013F2  EFFE  F009         	goto	l97
  3322  0013F6                     u850:
  3323  0013F6                     
  3324                           ;lcd.c: 21:   LATDbits.LATD7 = 1;
  3325  0013F6  8E8C               	bsf	140,7,c	;volatile
  3326  0013F8  EFFF  F009         	goto	l99
  3327  0013FC                     l97:
  3328                           
  3329                           ;lcd.c: 23:   LATDbits.LATD7 = 0;
  3330  0013FC  9E8C               	bcf	140,7,c	;volatile
  3331  0013FE                     l99:
  3332  0013FE  0012               	return		;funcret
  3333  001400                     __end_of_Lcd_Port:
  3334                           	callstack 0
  3335                           
  3336 ;; *************** function _Config_TMR0_Interrupt *****************
  3337 ;; Defined at:
  3338 ;;		line 74 in file "main.c"
  3339 ;; Parameters:    Size  Location     Type
  3340 ;;		None
  3341 ;; Auto vars:     Size  Location     Type
  3342 ;;		None
  3343 ;; Return value:  Size  Location     Type
  3344 ;;                  1    wreg      void 
  3345 ;; Registers used:
  3346 ;;		None
  3347 ;; Tracked objects:
  3348 ;;		On entry : 0/0
  3349 ;;		On exit  : 0/0
  3350 ;;		Unchanged: 0/0
  3351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3352 ;;      Params:         0       0       0       0       0       0       0       0       0
  3353 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3354 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3355 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3356 ;;Total ram usage:        0 bytes
  3357 ;; Hardware stack levels used: 1
  3358 ;; Hardware stack levels required when called: 1
  3359 ;; This function calls:
  3360 ;;		Nothing
  3361 ;; This function is called by:
  3362 ;;		_main
  3363 ;; This function uses a non-reentrant model
  3364 ;;
  3365                           
  3366                           	psect	text23
  3367  001686                     __ptext23:
  3368                           	callstack 0
  3369  001686                     _Config_TMR0_Interrupt:
  3370                           	callstack 29
  3371  001686                     
  3372                           ;main.c: 75:     INTCONbits.GIE = 1;
  3373  001686  8EF2               	bsf	242,7,c	;volatile
  3374                           
  3375                           ;main.c: 76:     INTCONbits.PEIE = 1;
  3376  001688  8CF2               	bsf	242,6,c	;volatile
  3377                           
  3378                           ;main.c: 78:     INTCONbits.TMR0IF = 0;
  3379  00168A  94F2               	bcf	242,2,c	;volatile
  3380                           
  3381                           ;main.c: 79:     INTCONbits.TMR0IE = 1;
  3382  00168C  8AF2               	bsf	242,5,c	;volatile
  3383  00168E  0012               	return		;funcret
  3384  001690                     __end_of_Config_TMR0_Interrupt:
  3385                           	callstack 0
  3386                           
  3387 ;; *************** function _Config_TMR0_Counter_16bits_prescaler *****************
  3388 ;; Defined at:
  3389 ;;		line 118 in file "main.c"
  3390 ;; Parameters:    Size  Location     Type
  3391 ;;		None
  3392 ;; Auto vars:     Size  Location     Type
  3393 ;;		None
  3394 ;; Return value:  Size  Location     Type
  3395 ;;                  1    wreg      void 
  3396 ;; Registers used:
  3397 ;;		wreg, status,2
  3398 ;; Tracked objects:
  3399 ;;		On entry : 0/0
  3400 ;;		On exit  : 0/0
  3401 ;;		Unchanged: 0/0
  3402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3403 ;;      Params:         0       0       0       0       0       0       0       0       0
  3404 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3405 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3406 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3407 ;;Total ram usage:        0 bytes
  3408 ;; Hardware stack levels used: 1
  3409 ;; Hardware stack levels required when called: 1
  3410 ;; This function calls:
  3411 ;;		Nothing
  3412 ;; This function is called by:
  3413 ;;		_main
  3414 ;; This function uses a non-reentrant model
  3415 ;;
  3416                           
  3417                           	psect	text24
  3418  001652                     __ptext24:
  3419                           	callstack 0
  3420  001652                     _Config_TMR0_Counter_16bits_prescaler:
  3421                           	callstack 29
  3422  001652                     
  3423                           ;main.c: 119:     T0CONbits.TMR0ON = 1;
  3424  001652  8ED5               	bsf	213,7,c	;volatile
  3425                           
  3426                           ;main.c: 120:     T0CONbits.T08BIT = 0;
  3427  001654  9CD5               	bcf	213,6,c	;volatile
  3428                           
  3429                           ;main.c: 121:     T0CONbits.T0CS = 1;
  3430  001656  8AD5               	bsf	213,5,c	;volatile
  3431                           
  3432                           ;main.c: 122:     T0CONbits.T0SE = 0;
  3433  001658  98D5               	bcf	213,4,c	;volatile
  3434                           
  3435                           ;main.c: 123:     T0CONbits.PSA = 0;
  3436  00165A  96D5               	bcf	213,3,c	;volatile
  3437  00165C                     
  3438                           ;main.c: 124:     T0CONbits.T0PS = 0b000;
  3439  00165C  0EF8               	movlw	-8
  3440  00165E  16D5               	andwf	213,f,c	;volatile
  3441                           
  3442                           ;main.c: 126:     TMR0=65530;
  3443  001660  0EFF               	movlw	255
  3444  001662  6ED7               	movwf	215,c	;volatile
  3445  001664  0EFA               	movlw	250
  3446  001666  6ED6               	movwf	214,c	;volatile
  3447  001668  0012               	return		;funcret
  3448  00166A                     __end_of_Config_TMR0_Counter_16bits_prescaler:
  3449                           	callstack 0
  3450                           
  3451 ;; *************** function _Config_Port *****************
  3452 ;; Defined at:
  3453 ;;		line 55 in file "main.c"
  3454 ;; Parameters:    Size  Location     Type
  3455 ;;		None
  3456 ;; Auto vars:     Size  Location     Type
  3457 ;;		None
  3458 ;; Return value:  Size  Location     Type
  3459 ;;                  1    wreg      void 
  3460 ;; Registers used:
  3461 ;;		wreg, status,2
  3462 ;; Tracked objects:
  3463 ;;		On entry : 0/0
  3464 ;;		On exit  : 0/0
  3465 ;;		Unchanged: 0/0
  3466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3467 ;;      Params:         0       0       0       0       0       0       0       0       0
  3468 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3469 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3470 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3471 ;;Total ram usage:        0 bytes
  3472 ;; Hardware stack levels used: 1
  3473 ;; Hardware stack levels required when called: 1
  3474 ;; This function calls:
  3475 ;;		Nothing
  3476 ;; This function is called by:
  3477 ;;		_main
  3478 ;; This function uses a non-reentrant model
  3479 ;;
  3480                           
  3481                           	psect	text25
  3482  0015F4                     __ptext25:
  3483                           	callstack 0
  3484  0015F4                     _Config_Port:
  3485                           	callstack 29
  3486  0015F4                     
  3487                           ;main.c: 57:     LATD= 0b00000000;
  3488  0015F4  0E00               	movlw	0
  3489  0015F6  6E8C               	movwf	140,c	;volatile
  3490                           
  3491                           ;main.c: 58:     LATB= 0b00000000;
  3492  0015F8  0E00               	movlw	0
  3493  0015FA  6E8A               	movwf	138,c	;volatile
  3494  0015FC                     
  3495                           ;main.c: 59:     LATCbits.LATC0 = 0;
  3496  0015FC  908B               	bcf	139,0,c	;volatile
  3497                           
  3498                           ;main.c: 62:     SLRCON=0b00000000;
  3499  0015FE  0E00               	movlw	0
  3500  001600  6E7A               	movwf	122,c	;volatile
  3501                           
  3502                           ;main.c: 65:     ANSELD=0b00000000;
  3503  001602  0E00               	movlw	0
  3504  001604  010F               	movlb	15	; () banked
  3505  001606  6F5E               	movwf	94,b	;volatile
  3506                           
  3507                           ;main.c: 66:     ANSELB=0b00000000;
  3508  001608  0E00               	movlw	0
  3509  00160A  6F5C               	movwf	92,b	;volatile
  3510                           
  3511                           ;main.c: 69:     TRISD=0b00000000;
  3512  00160C  0E00               	movlw	0
  3513  00160E  6E95               	movwf	149,c	;volatile
  3514                           
  3515                           ;main.c: 70:     TRISB=0b00000000;
  3516  001610  0E00               	movlw	0
  3517  001612  6E93               	movwf	147,c	;volatile
  3518  001614                     
  3519                           ; BSR set to: 15
  3520                           ;main.c: 71:     TRISCbits.TRISC0 = 0;
  3521  001614  9094               	bcf	148,0,c	;volatile
  3522  001616                     
  3523                           ; BSR set to: 15
  3524  001616  0012               	return		;funcret
  3525  001618                     __end_of_Config_Port:
  3526                           	callstack 0
  3527                           
  3528 ;; *************** function _Config_Clock *****************
  3529 ;; Defined at:
  3530 ;;		line 50 in file "main.c"
  3531 ;; Parameters:    Size  Location     Type
  3532 ;;		None
  3533 ;; Auto vars:     Size  Location     Type
  3534 ;;		None
  3535 ;; Return value:  Size  Location     Type
  3536 ;;                  1    wreg      void 
  3537 ;; Registers used:
  3538 ;;		wreg, status,2
  3539 ;; Tracked objects:
  3540 ;;		On entry : 0/0
  3541 ;;		On exit  : 0/0
  3542 ;;		Unchanged: 0/0
  3543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3544 ;;      Params:         0       0       0       0       0       0       0       0       0
  3545 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3546 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3547 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3548 ;;Total ram usage:        0 bytes
  3549 ;; Hardware stack levels used: 1
  3550 ;; Hardware stack levels required when called: 1
  3551 ;; This function calls:
  3552 ;;		Nothing
  3553 ;; This function is called by:
  3554 ;;		_main
  3555 ;; This function uses a non-reentrant model
  3556 ;;
  3557                           
  3558                           	psect	text26
  3559  001678                     __ptext26:
  3560                           	callstack 0
  3561  001678                     _Config_Clock:
  3562                           	callstack 29
  3563  001678                     
  3564                           ;main.c: 51:     OSCCONbits.IRCF=0b111;
  3565  001678  0E70               	movlw	112
  3566  00167A  12D3               	iorwf	211,f,c	;volatile
  3567                           
  3568                           ;main.c: 52:     OSCCONbits.SCS=0b10;
  3569  00167C  50D3               	movf	211,w,c	;volatile
  3570  00167E  0BFC               	andlw	-4
  3571  001680  0902               	iorlw	2
  3572  001682  6ED3               	movwf	211,c	;volatile
  3573  001684  0012               	return		;funcret
  3574  001686                     __end_of_Config_Clock:
  3575                           	callstack 0
  3576                           
  3577 ;; *************** function _ISR *****************
  3578 ;; Defined at:
  3579 ;;		line 83 in file "main.c"
  3580 ;; Parameters:    Size  Location     Type
  3581 ;;		None
  3582 ;; Auto vars:     Size  Location     Type
  3583 ;;		None
  3584 ;; Return value:  Size  Location     Type
  3585 ;;                  1    wreg      void 
  3586 ;; Registers used:
  3587 ;;		wreg, status,2, status,0
  3588 ;; Tracked objects:
  3589 ;;		On entry : 0/0
  3590 ;;		On exit  : 0/0
  3591 ;;		Unchanged: 0/0
  3592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3593 ;;      Params:         0       0       0       0       0       0       0       0       0
  3594 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3595 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3596 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3597 ;;Total ram usage:        0 bytes
  3598 ;; Hardware stack levels used: 1
  3599 ;; This function calls:
  3600 ;;		Nothing
  3601 ;; This function is called by:
  3602 ;;		Interrupt level 2
  3603 ;; This function uses a non-reentrant model
  3604 ;;
  3605                           
  3606                           	psect	intcode
  3607  000008                     __pintcode:
  3608                           	callstack 0
  3609  000008                     _ISR:
  3610                           	callstack 22
  3611                           
  3612                           ;incstack = 0
  3613  000008  825E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3614  00000A                     
  3615                           ;main.c: 84:     if(INTCONbits.TMR0IF){
  3616  00000A  A4F2               	btfss	242,2,c	;volatile
  3617  00000C  EF0A  F000         	goto	i2u49_41
  3618  000010  EF0C  F000         	goto	i2u49_40
  3619  000014                     i2u49_41:
  3620  000014  EF13  F000         	goto	i2l75
  3621  000018                     i2u49_40:
  3622  000018                     
  3623                           ;main.c: 85:         INTCONbits.TMR0IF =0;
  3624  000018  94F2               	bcf	242,2,c	;volatile
  3625  00001A                     
  3626                           ;main.c: 86:         LATC ^= (1<<0);
  3627  00001A  0E01               	movlw	1
  3628  00001C  1A8B               	xorwf	139,f,c	;volatile
  3629  00001E                     
  3630                           ;main.c: 91:         TMR0 = 65530;
  3631  00001E  0EFF               	movlw	255
  3632  000020  6ED7               	movwf	215,c	;volatile
  3633  000022  0EFA               	movlw	250
  3634  000024  6ED6               	movwf	214,c	;volatile
  3635  000026                     i2l75:
  3636  000026  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3637  000028  0011               	retfie		f
  3638  00002A                     __end_of_ISR:
  3639                           	callstack 0
  3640                           
  3641                           	psect	rparam
  3642  0000                     
  3643                           	psect	temp
  3644  00005E                     btemp:
  3645                           	callstack 0
  3646  00005E                     	ds	1
  3647  0000                     int$flags	set	btemp
  3648  0000                     wtemp8	set	btemp+1
  3649  0000                     ttemp5	set	btemp+1
  3650  0000                     ttemp6	set	btemp+4
  3651  0000                     ttemp7	set	btemp+8
  3652                           
  3653                           	psect	idloc
  3654                           
  3655                           ;Config register IDLOC0 @ 0x200000
  3656                           ;	unspecified, using default values
  3657  200000                     	org	2097152
  3658  200000  FF                 	db	255
  3659                           
  3660                           ;Config register IDLOC1 @ 0x200001
  3661                           ;	unspecified, using default values
  3662  200001                     	org	2097153
  3663  200001  FF                 	db	255
  3664                           
  3665                           ;Config register IDLOC2 @ 0x200002
  3666                           ;	unspecified, using default values
  3667  200002                     	org	2097154
  3668  200002  FF                 	db	255
  3669                           
  3670                           ;Config register IDLOC3 @ 0x200003
  3671                           ;	unspecified, using default values
  3672  200003                     	org	2097155
  3673  200003  FF                 	db	255
  3674                           
  3675                           ;Config register IDLOC4 @ 0x200004
  3676                           ;	unspecified, using default values
  3677  200004                     	org	2097156
  3678  200004  FF                 	db	255
  3679                           
  3680                           ;Config register IDLOC5 @ 0x200005
  3681                           ;	unspecified, using default values
  3682  200005                     	org	2097157
  3683  200005  FF                 	db	255
  3684                           
  3685                           ;Config register IDLOC6 @ 0x200006
  3686                           ;	unspecified, using default values
  3687  200006                     	org	2097158
  3688  200006  FF                 	db	255
  3689                           
  3690                           ;Config register IDLOC7 @ 0x200007
  3691                           ;	unspecified, using default values
  3692  200007                     	org	2097159
  3693  200007  FF                 	db	255
  3694                           
  3695                           	psect	config
  3696                           
  3697                           ;Config register CONFIG1L @ 0x300000
  3698                           ;	PLL Selection
  3699                           ;	PLLSEL = PLL4X, 4x clock multiplier
  3700                           ;	PLL Enable Configuration bit
  3701                           ;	CFGPLLEN = OFF, PLL Disabled (firmware controlled)
  3702                           ;	CPU System Clock Postscaler
  3703                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
  3704                           ;	Low Speed USB mode with 48 MHz system clock
  3705                           ;	LS48MHZ = SYS24X4, System clock at 24 MHz, USB clock divider is set to 4
  3706  300000                     	org	3145728
  3707  300000  00                 	db	0
  3708                           
  3709                           ;Config register CONFIG1H @ 0x300001
  3710                           ;	Oscillator Selection
  3711                           ;	FOSC = INTOSCIO, Internal oscillator
  3712                           ;	Primary Oscillator Shutdown
  3713                           ;	PCLKEN = ON, Primary oscillator enabled
  3714                           ;	Fail-Safe Clock Monitor
  3715                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3716                           ;	Internal/External Oscillator Switchover
  3717                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3718  300001                     	org	3145729
  3719  300001  28                 	db	40
  3720                           
  3721                           ;Config register CONFIG2L @ 0x300002
  3722                           ;	Power-up Timer Enable
  3723                           ;	nPWRTEN = ON, Power up timer enabled
  3724                           ;	Brown-out Reset Enable
  3725                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
  3726                           ;	Brown-out Reset Voltage
  3727                           ;	BORV = 190, BOR set to 1.9V nominal
  3728                           ;	Low-Power Brown-out Reset
  3729                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  3730  300002                     	org	3145730
  3731  300002  5E                 	db	94
  3732                           
  3733                           ;Config register CONFIG2H @ 0x300003
  3734                           ;	Watchdog Timer Enable bits
  3735                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  3736                           ;	Watchdog Timer Postscaler
  3737                           ;	WDTPS = 32768, 1:32768
  3738  300003                     	org	3145731
  3739  300003  3C                 	db	60
  3740                           
  3741                           ; Padding undefined space
  3742  300004                     	org	3145732
  3743  300004  FF                 	db	255
  3744                           
  3745                           ;Config register CONFIG3H @ 0x300005
  3746                           ;	CCP2 MUX bit
  3747                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  3748                           ;	PORTB A/D Enable bit
  3749                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  3750                           ;	Timer3 Clock Input MUX bit
  3751                           ;	T3CMX = RC0, T3CKI function is on RC0
  3752                           ;	SDO Output MUX bit
  3753                           ;	SDOMX = RB3, SDO function is on RB3
  3754                           ;	Master Clear Reset Pin Enable
  3755                           ;	MCLRE = OFF, RE3 input pin enabled; external MCLR disabled
  3756  300005                     	org	3145733
  3757  300005  53                 	db	83
  3758                           
  3759                           ;Config register CONFIG4L @ 0x300006
  3760                           ;	Stack Full/Underflow Reset
  3761                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3762                           ;	Single-Supply ICSP Enable bit
  3763                           ;	LVP = OFF, Single-Supply ICSP disabled
  3764                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  3765                           ;	ICPRT = OFF, ICPORT disabled
  3766                           ;	Extended Instruction Set Enable bit
  3767                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  3768                           ;	Background Debugger Enable bit
  3769                           ;	DEBUG = 0x1, unprogrammed default
  3770  300006                     	org	3145734
  3771  300006  81                 	db	129
  3772                           
  3773                           ; Padding undefined space
  3774  300007                     	org	3145735
  3775  300007  FF                 	db	255
  3776                           
  3777                           ;Config register CONFIG5L @ 0x300008
  3778                           ;	Block 0 Code Protect
  3779                           ;	CP0 = OFF, Block 0 is not code-protected
  3780                           ;	Block 1 Code Protect
  3781                           ;	CP1 = OFF, Block 1 is not code-protected
  3782                           ;	Block 2 Code Protect
  3783                           ;	CP2 = OFF, Block 2 is not code-protected
  3784                           ;	Block 3 Code Protect
  3785                           ;	CP3 = OFF, Block 3 is not code-protected
  3786  300008                     	org	3145736
  3787  300008  0F                 	db	15
  3788                           
  3789                           ;Config register CONFIG5H @ 0x300009
  3790                           ;	Boot Block Code Protect
  3791                           ;	CPB = OFF, Boot block is not code-protected
  3792                           ;	Data EEPROM Code Protect
  3793                           ;	CPD = OFF, Data EEPROM is not code-protected
  3794  300009                     	org	3145737
  3795  300009  C0                 	db	192
  3796                           
  3797                           ;Config register CONFIG6L @ 0x30000A
  3798                           ;	Block 0 Write Protect
  3799                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
  3800                           ;	Block 1 Write Protect
  3801                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
  3802                           ;	Block 2 Write Protect
  3803                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
  3804                           ;	Block 3 Write Protect
  3805                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
  3806  30000A                     	org	3145738
  3807  30000A  0F                 	db	15
  3808                           
  3809                           ;Config register CONFIG6H @ 0x30000B
  3810                           ;	Configuration Registers Write Protect
  3811                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  3812                           ;	Boot Block Write Protect
  3813                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
  3814                           ;	Data EEPROM Write Protect
  3815                           ;	WRTD = OFF, Data EEPROM is not write-protected
  3816  30000B                     	org	3145739
  3817  30000B  E0                 	db	224
  3818                           
  3819                           ;Config register CONFIG7L @ 0x30000C
  3820                           ;	Block 0 Table Read Protect
  3821                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
  3822                           ;	Block 1 Table Read Protect
  3823                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
  3824                           ;	Block 2 Table Read Protect
  3825                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
  3826                           ;	Block 3 Table Read Protect
  3827                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
  3828  30000C                     	org	3145740
  3829  30000C  0F                 	db	15
  3830                           
  3831                           ;Config register CONFIG7H @ 0x30000D
  3832                           ;	Boot Block Table Read Protect
  3833                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
  3834  30000D                     	org	3145741
  3835  30000D  40                 	db	64
  3836                           tosu	equ	0xFFF
  3837                           tosh	equ	0xFFE
  3838                           tosl	equ	0xFFD
  3839                           stkptr	equ	0xFFC
  3840                           pclatu	equ	0xFFB
  3841                           pclath	equ	0xFFA
  3842                           pcl	equ	0xFF9
  3843                           tblptru	equ	0xFF8
  3844                           tblptrh	equ	0xFF7
  3845                           tblptrl	equ	0xFF6
  3846                           tablat	equ	0xFF5
  3847                           prodh	equ	0xFF4
  3848                           prodl	equ	0xFF3
  3849                           indf0	equ	0xFEF
  3850                           postinc0	equ	0xFEE
  3851                           postdec0	equ	0xFED
  3852                           preinc0	equ	0xFEC
  3853                           plusw0	equ	0xFEB
  3854                           fsr0h	equ	0xFEA
  3855                           fsr0l	equ	0xFE9
  3856                           wreg	equ	0xFE8
  3857                           indf1	equ	0xFE7
  3858                           postinc1	equ	0xFE6
  3859                           postdec1	equ	0xFE5
  3860                           preinc1	equ	0xFE4
  3861                           plusw1	equ	0xFE3
  3862                           fsr1h	equ	0xFE2
  3863                           fsr1l	equ	0xFE1
  3864                           bsr	equ	0xFE0
  3865                           indf2	equ	0xFDF
  3866                           postinc2	equ	0xFDE
  3867                           postdec2	equ	0xFDD
  3868                           preinc2	equ	0xFDC
  3869                           plusw2	equ	0xFDB
  3870                           fsr2h	equ	0xFDA
  3871                           fsr2l	equ	0xFD9
  3872                           status	equ	0xFD8

Data Sizes:
    Strings     11
    Constant    0
    Data        0
    BSS         58
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      93
    BANK0           160     15      73
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_1(CODE[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_1(CODE[11]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 11
		 -> STR_1(CODE[11]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_1(CODE[11]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> str_contador(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S836$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S836$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 16
		 -> str_contador(BANK0[16]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    8636
                                             13 BANK0      2     2      0
                       _Config_Clock
                        _Config_Port
_Config_TMR0_Counter_16bits_prescale
              _Config_TMR0_Interrupt
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    15      6    7528
                                             87 COMRAM     6     0      6
                                              0 BANK0     13    13      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    7175
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           44    38      6    6803
                                             59 COMRAM    20    14      6
                               _atoi
                              _fputc
                            _isdigit
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    3759
                                             27 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                10     8      2    1126
                                              7 COMRAM    10     8      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     357
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     4     2      2     344
                                              4 COMRAM     4     2      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       3     3      0     178
                                              1 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       5     4      1     456
                                              3 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     198
                                              3 COMRAM     1     1      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     2      0     110
                                              1 COMRAM     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Config_TMR0_Interrupt                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Config_TMR0_Counter_16bits_prescaler                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Config_Port                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Config_Clock                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Config_Clock
   _Config_Port
   _Config_TMR0_Counter_16bits_prescaler
   _Config_TMR0_Interrupt
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _fputc
           _putch
         _isdigit
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
             _fputs
               _fputc
             _strlen

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      30        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      F      49       5       45.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5D      5D       1       98.9%
BITBIGSFRlhlhh      3D      0       0      23        0.0%
BITBIGSFRlllh       1B      0       0      26        0.0%
BITBIGSFRhl         1A      0       0      21        0.0%
BITBIGSFRllh         F      0       0      25        0.0%
BITBIGSFRhh          D      0       0      20        0.0%
BITBIGSFRlllll       9      0       0      28        0.0%
BITBIGSFRlhlhll      6      0       0      24        0.0%
BITBIGSFRllllh       1      0       0      27        0.0%
BITBIGSFRlhh         1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A6      29        0.0%
DATA                 0      0      A6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sun Jul 10 15:23:30 2022

                                          l63 1684                                            l66 1616  
                                          l91 13BA                                            l84 1668  
                                          l69 168E                                            l93 13D0  
                                          l95 13E6                                            l97 13FC  
                                          l99 13FE                           ___wmul@multiplicand 0003  
                                         l102 1636                                           l111 1340  
                                         l105 1676                                           l114 12DA  
                                         l123 1526                                           l132 15F2  
                                         l117 1596                                           l570 0F6E  
                                         l810 1450                                           l580 103E  
                                         l913 0E96                                           l577 0F8E  
                                         l842 11B2                                           l587 105E  
                                         l851 0B88                                           l916 0E9E  
                                         l844 11EE                                           l942 1128  
                                         l950 14E6                                           l919 155E  
                                         l927 14A2                                           l839 1170  
                                         l953 1690                                           l849 0B80  
                                         l873 090A                                           l890 139A  
                                         l859 0D48                                           l891 13A2  
                                         l884 0B46                                           l959 15CC  
                                         u500 1072                                           u501 106E  
                                         u510 1084                                           u511 1080  
                                         u600 0FAE                                           u520 10AC  
                                         u601 0FAA                                           u521 10A8  
                                         u610 0FD8                                           u530 10E2  
                                         u611 0FD4                                           u531 10DE  
                                         u700 1498                                           u620 1006  
                                         u540 14E6                                           _ISR 0008  
                                         u701 1494                                           u621 1002  
                                         u541 14E2                                           u550 15C0  
                                         u630 113A                                           u710 0B58  
                                         u551 15BC                                           u631 1136  
                                         u711 0B54                                           u800 0E68  
                                         u640 115C                                           u720 0B74  
                                         u801 0E64                                           u561 0EA6  
                                         u641 1158                                           u721 0B70  
                                         u810 0E7A                                           u570 0ECA  
                                         u650 11B2                                           u730 0CBE  
                                         u811 0E76                                           u571 0EC6  
                                         u651 11AE                                           u731 0CBA  
                                         u820 13B4                                           u580 0EF4  
                                         u660 11C2                                           u740 0CDC  
                                         u900 0984                                           u821 13B0  
                                         u581 0EF0                                           u661 11BE  
                                         u741 0CD8                                           u901 0980  
                                         u830 13CA                                           u670 1558  
                                         u590 0F34                                           u750 0CF6  
                                         u910 09FE                                           u831 13C6  
                                         u671 1552                                           u591 0F30  
                                         u751 0CF2                                           u911 09FA  
                                         u840 13E0                                           u680 155A  
                                         u760 0D10                                           u920 0A22  
                                         u841 13DC                                           u761 0D0C  
                                         u921 0A1E                                           u850 13F6  
                                         u690 146A                                           u770 0D20  
                                         u930 0AC8                                           u851 13F2  
                                         u691 1466                                           u771 0D1C  
                                         u931 0AC4                                           u780 0D7E  
                                         u860 0832                                           u940 139A  
                                         u781 0D7A                                           u861 082E  
                                         u941 1396                                           u950 12EE  
                                         u790 0DB4                                           u870 090A  
                                         u951 12EA                                           u791 0DB0  
                                         u871 0906                                           u960 1322  
                                         u880 091A                                           u961 131E  
                                         u881 0916                                           u970 1526  
                                         u890 0940                                           u971 1522  
                                         u891 093C                                           u987 1252  
                                         u997 157C                                           _pad 112A  
                                         wreg 000FE8                                          ?_ISR 0001  
                                        l1501 0F56                                          l1503 0F68  
                                        l1511 0FCA                                          l1601 0D62  
                                        l1513 0FD8                                          l1505 0F90  
                                        l1521 112A                                          l1611 0DFC  
                                        l1603 0D7E                                          l1515 1006  
                                        l1507 0FAE                                          l1451 108E  
                                        l1531 117C                                          l1523 113A  
                                        l1621 0E7A                                          l1605 0DB8  
                                        l1517 1026                                          l1509 0FB6  
                                        l1453 10AC                                          l1445 1060  
                                        l1461 14B0                                          l1533 1190  
                                        l1525 114E                                          l1701 0A22  
                                        l1631 13BC                                          l1543 1528  
                                        l1551 146A                                          l1607 0DC0  
                                        l1519 1038                                          l1455 10E2  
                                        l1447 1072                                          l1463 14C2  
                                        l1471 15A8                                          l1535 1194  
                                        l1527 115C                                          l1711 0AD6  
                                        l1703 0A6C                                          l1641 13F6  
                                        l1633 13CA                                          l1801 12BC  
                                        l1553 1498                                          l1617 0E32  
                                        l1609 0DC8                                          l1449 1084  
                                        l1465 14C6                                          l1473 15C0  
                                        l1537 11C2                                          l1529 1168  
                                        l1561 0B58                                          l1713 0AEA  
                                        l1635 13D2                                          l1627 13A6  
                                        l1811 166A                                          l1803 12C2  
                                        l1555 149C                                          l1547 1452  
                                        l1619 0E68                                          l1491 0EE6  
                                        l1483 0EA0                                          l1459 14A4  
                                        l1467 1598                                          l1539 11D6  
                                        l1571 0BC0                                          l1563 0B5A  
                                        l1707 0AA4                                          l1651 0856  
                                        l1723 0B10                                          l1643 080E  
                                        l1813 1686                                          l1637 13E0  
                                        l1629 13B4                                          l1741 1622  
                                        l1805 12C8                                          l1477 15CE  
                                        l1549 1456                                          l1493 0EF4  
                                        l1485 0EAC                                          l1469 15A4  
                                        l1573 0BC6                                          l1581 0CAC  
                                        l1565 0B74                                          l1725 0B34  
                                        l1709 0AC8                                          l1717 0AF6  
                                        l1661 0880                                          l1653 0862  
                                        l1645 0832                                          l1821 1412  
                                        l1815 1652                                          l1639 13E8  
                                        l1743 1624                                          l1807 12CE  
                                        l1831 12DE                                          l1751 1570  
                                        l1479 15EA                                          l1495 0F06  
                                        l1487 0ECA                                          l1583 0CBE  
                                        l1591 0D20                                          l1575 0C3C  
                                        l1567 0BB0                                          l1559 0B48  
                                        l1719 0B04                                          l1655 0866  
                                        l1647 0840                                          l1823 141A  
                                        l1817 165C                                          l1745 1634  
                                        l1737 161A                                          l1809 12D4  
                                        l1841 1322                                          l1833 12EE  
                                        l1761 158A                                          l1753 1578  
                                        l1497 0F34                                          l1489 0ED2  
                                        l1585 0CDC                                          l1577 0C42  
                                        l1569 0BB8                                          l1681 091A  
                                        l1673 0898                                          l1665 0888  
                                        l1657 0878                                          l1649 0852  
                                        l1825 1422                                          l1739 161C  
                                        l1843 1334                                          l1835 1300  
                                        l1763 158C                                          l1755 157A  
                                        l1747 1562                                          l1851 1506  
                                        l1595 0D4A                                          l1499 0F54  
                                        l1587 0CF6                                          l1579 0C48  
                                        l1691 0992                                          l1683 091C  
                                        l1771 1358                                          l1827 143E  
                                        l1819 1400                                          l1781 1614  
                                        l1845 133A                                          l1837 1306  
                                        l1765 1594                                          l1757 1582  
                                        l1749 156E                                          l1853 150A  
                                        l1597 0D5E                                          l1589 0D10  
                                        l1693 09B2                                          l1685 0940  
                                        l1677 08A4                                          l1669 0890  
                                        l1773 137E                                          l1861 1208  
                                        l1775 1678                                          l1791 1294  
                                        l1783 1268                                          l1839 1310  
                                        l1759 1584                                          l1847 14E8  
                                        l1687 0976                                          l1927 08CA  
                                        l1679 08F8                                          l1767 1342  
                                        l1871 1246                                          l1863 1210  
                                        l1855 11F0                                          l1777 15F4  
                                        l1793 129A                                          l1785 126E  
                                        l1849 14F4                                          l1929 0DE6  
                                        l1697 09C0                                          l1689 0984  
                                        l1769 134A                                          l1865 122C  
                                        l1857 1200                                          l1779 15FC  
                                        l1795 12AA                                          l1787 127E  
                                        l1699 09FE                                          l1867 1236  
                                        l1859 1204                                          l1797 12B0  
                                        l1789 1284                                          l1869 1242  
                                        ?_pad 0011                                          l1799 12B6  
                                        STR_1 0801                                          u1007 158E  
                                        u1017 1274                                          u1027 128A  
                                        u1037 12A0                                          u1047 162A  
                                        _LATB 000F8A                                          _LATC 000F8B  
                                        _LATD 000F8C                                          i2l75 0026  
                                        _TMR0 000FD6                             ?_Lcd_Write_String 0005  
                                        _dbuf 006A                                          _atoi 0D4A  
                                        _main 11F0                                          _prec 0064  
                                        _nout 0060                                          pad@i 0018  
                                        pad@p 0015                                          fsr1h 000FE2  
                                        fsr2h 000FDA                                          indf2 000FDF  
                                        fsr1l 000FE1                                          pad@w 001A  
                                        fsr2l 000FD9                                          btemp 005E  
                                        _utoa 0B48                                          prodh 000FF4  
                                        prodl 000FF3                                          start 002A  
                          ??_Lcd_Write_String 0007                               __end_of_Lcd_Cmd 1638  
                                ___param_bank 000000                           __end_of_Config_Port 1618  
                                       ??_ISR 0001                                         ??_pad 0017  
                                       ?_atoi 0008                                         ?_main 0001  
                                       ?_utoa 001C                               __end_of___lodiv 0F90  
                             __end_of___lomod 1060                                  vfpfcnvrt@fmt 003E  
                                vfpfcnvrt@llu 0046                                         _TRISB 000F93  
                                       _TRISD 000F95                                  _str_contador 008A  
                                       _flags 0066                                         _fputc 1060  
                                       _fputs 14A4                               __end_of_isdigit 1560  
                                       atoi@n 0010                                         pad@fp 0011  
                                       atoi@s 0008                                         _width 0062  
                                       _putch 1690                               __end_of_isspace 14A4  
                                       tablat 000FF5                                         ttemp5 005F  
                                       ttemp6 0062                                         ttemp7 0066  
                                       utoa@d 001E                                         utoa@i 003A  
                                       utoa@n 0032                                         utoa@p 002E  
                                       utoa@w 0030                                         status 000FD8  
                                       wtemp8 005F                               __end_of_sprintf 1452  
                            ___lodiv@dividend 0001                              __end_of_Lcd_Init 12DC  
                            __end_of_Lcd_Port 1400                               __initialization 1638  
                        __end_of_Config_Clock 1686                                  __end_of_atoi 0EA0  
                                __end_of_main 1268                                  __end_of_utoa 0D4A  
                                      ??_atoi 000A                                        ??_main 00A7  
                                      ??_utoa 0026                                 __activetblptr 000002  
                            ___lodiv@quotient 0011                                        ?_fputc 0001  
                                      ?_fputs 000A                                        ?_putch 0001  
                                      _ANSELB 000F5C                                        _ANSELD 000F5E  
                                      i2l1391 001A                                        i2l1393 001E  
                                      i2l1387 000A                                        i2l1389 0018  
                                   ??_Lcd_Cmd 0002                                 vfpfcnvrt@done 004E  
                                      _SLRCON 000F7A                                   _Config_Port 15F4  
                                vfprintf@cfmt 0056                                        ___wmul 15CE  
               __end_of_Config_TMR0_Interrupt 1690                                     ??___lodiv 0011  
                                   ??___lomod 0011                                        clear_0 163E  
                                      isa$std 000001                                        pad@buf 0013  
                                      _strlen 1598                                        fputc@c 0001  
                                      fputs@c 000E                                        fputs@i 000F  
                                      fputs@s 000A                                     ??_isdigit 0003  
                                __mediumconst 0000                                     ??_isspace 0003  
                                      tblptrh 000FF7                                        tblptrl 000FF6  
                                      tblptru 000FF8                                        putch@c 0001  
                            __end_of_vfprintf 13A4                                        utoa@fp 001C  
                                   ??_sprintf 005E                               Lcd_Set_Cursor@a 0005  
                             Lcd_Set_Cursor@b 0004                               Lcd_Set_Cursor@y 0007  
                             Lcd_Set_Cursor@z 0006                                    __accesstop 0060  
                     __end_of__initialization 1644                             __end_of_Lcd_Clear 1678  
                               ___rparam_used 000001                                __pcstackCOMRAM 0001  
                               __end_of_fputc 112A                                 __end_of_fputs 14E8  
                               __end_of_putch 1692                                _Lcd_Set_Cursor 12DC  
                                   ?_Lcd_Init 0001                                     ?_Lcd_Port 0001  
                                     ??_fputc 0005                                       ??_fputs 000E  
                                     ??_putch 0001                                    __pbssBANK0 0060  
                                     ?___wmul 0001                        __end_of_Lcd_Set_Cursor 1342  
                                     ?_strlen 0001                                       i2u49_40 0018  
                                     i2u49_41 0014                                    ??_Lcd_Init 0004  
                                _Config_Clock 1678                                    ??_Lcd_Port 0001  
                            ___lomod@dividend 0001                                _Lcd_Write_Char 1560  
                                     _Lcd_Cmd 1618                                       __Hparam 0000  
                                     __Lparam 0000  __end_of_Config_TMR0_Counter_16bits_prescaler 166A  
      ??_Config_TMR0_Counter_16bits_prescaler 0001         ?_Config_TMR0_Counter_16bits_prescaler 0001  
        _Config_TMR0_Counter_16bits_prescaler 1652                                       ___lodiv 0EA0  
                                     ___lomod 0F90                                     ?_vfprintf 0050  
                                __psmallconst 0800                                       __pcinit 1638  
                                     __ramtop 0800                               ?_Lcd_Set_Cursor 0004  
                                     __ptext0 11F0                                       __ptext1 1400  
                                     __ptext2 1342                                       __ptext3 080E  
                                     __ptext4 0B48                                       __ptext5 112A  
                                     __ptext6 1598                                       __ptext7 14A4  
                                     __ptext8 1060                                       __ptext9 1690  
                                   _T0CONbits 000FD5                                       _isdigit 1528  
                                     _isspace 1452                                       atoi@neg 000E  
                                     _sprintf 1400                        __end_of_Lcd_Write_Char 1598  
                        end_of_initialization 1644                                       fputc@fp 0003  
                               __Lmediumconst 0000                                  ?_Config_Port 0001  
                                     fputs@fp 000C                             __end_of_vfpfcnvrt 0B48  
                                     postdec2 000FDD                                       postinc0 000FEE  
                                     postinc1 000FE6                                       postinc2 000FDE  
                                   Lcd_Port@a 0001                                    ??_vfprintf 0056  
                                     strlen@a 0003                                       strlen@s 0001  
                                   _TRISCbits 000F94                               ?_Lcd_Write_Char 0001  
                           Lcd_Write_String@a 0005                             Lcd_Write_String@i 0007  
                                   _Lcd_Clear 166A                                   vfpfcnvrt@ap 0040  
                                 vfpfcnvrt@fp 003C                                __end_of___wmul 15F4  
                            _Lcd_Write_String 14E8                         _Config_TMR0_Interrupt 1686  
                              __end_of_strlen 15CE                           start_initialization 1638  
                             ___lodiv@divisor 0009                               ___lodiv@counter 0019  
                                 __end_of_ISR 002A                                   __end_of_pad 11F0  
                                 vfprintf@fmt 0052                                    ?_Lcd_Clear 0001  
                                    ??___wmul 0005                               Lcd_Write_Char@a 0004  
                             Lcd_Write_Char@y 0003                                      ??_strlen 0003  
                               __pcstackBANK0 009A                                      ?_Lcd_Cmd 0001  
                            ??_Lcd_Set_Cursor 0005                                     __pintcode 0008  
                                    ?___lodiv 0001                                      ?___lomod 0001  
                      ?_Config_TMR0_Interrupt 0001                               ___lomod@divisor 0009  
                                 __smallconst 0800                               ___lomod@counter 0011  
                                    ?_isdigit 0001                                      ?_isspace 0001  
                                    ?_sprintf 0058                                ___wmul@product 0005  
                                    _LATCbits 000F8B                                      _LATDbits 000F8C  
                                    Lcd_Cmd@a 0003                                   ??_Lcd_Clear 0004  
                                   _vfpfcnvrt 080E                             ___wmul@multiplier 0001  
                            ??_Lcd_Write_Char 0002                                      _Lcd_Init 1268  
                                    _Lcd_Port 13A4                      __end_of_Lcd_Write_String 1528  
                                    __Hrparam 0000                                    vfprintf@ap 0054  
                                    __Lrparam 0000                                    vfprintf@fp 0050  
                                  ?_vfpfcnvrt 003C                                    sprintf@fmt 005A  
                                    __ptext10 0F90                                      __ptext11 0EA0  
                                    __ptext20 166A                                      __ptext12 0D4A  
                                    __ptext21 1618                                      __ptext13 1452  
                                    __ptext22 13A4                                      __ptext14 1528  
                                    __ptext23 1686                                      __ptext15 15CE  
                                    __ptext24 1652                                      __ptext16 14E8  
                                    __ptext25 15F4                                      __ptext17 1560  
                                    __ptext26 1678                                      __ptext18 12DC  
                                    __ptext19 1268                                      _contador 0068  
                                    isa$xinst 000000                                      int$flags 005E  
                                    _vfprintf 1342                                   _isspace$968 0007  
                                  _INTCONbits 000FF2                                 ?_Config_Clock 0001  
                                    isdigit@c 0001                            Lcd_Write_Char@temp 0002  
                                    intlevel2 0000                                     sprintf@ap 009A  
                                    isspace@c 0001                                    _OSCCONbits 000FD3  
                     ??_Config_TMR0_Interrupt 0001                                   ??_vfpfcnvrt 0042  
                          Lcd_Set_Cursor@temp 0008                                      sprintf@f 009C  
                                    sprintf@s 0058                                ??_Config_Clock 0001  
                               ??_Config_Port 0001  
