

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed Jul 20 17:57:49 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    57                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    58                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    59                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    60  0000                     
    61                           ; Version 2.35
    62                           ; Generated 05/05/2021 GMT
    63                           ; 
    64                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    65                           ; All rights reserved.
    66                           ; 
    67                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    68                           ; 
    69                           ; Redistribution and use in source and binary forms, with or without modification, are
    70                           ; permitted provided that the following conditions are met:
    71                           ; 
    72                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    73                           ;        conditions and the following disclaimer.
    74                           ; 
    75                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    76                           ;        of conditions and the following disclaimer in the documentation and/or other
    77                           ;        materials provided with the distribution. Publication is not required when
    78                           ;        this file is used in an embedded application.
    79                           ; 
    80                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    81                           ;        software without specific prior written permission.
    82                           ; 
    83                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    84                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    85                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    86                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    87                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    88                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    89                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    90                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    91                           ; 
    92                           ; 
    93                           ; Code-generator required, PIC18F45K50 Definitions
    94                           ; 
    95                           ; SFR Addresses
    96  0000                     
    97                           	psect	idataBANK0
    98  00386A                     __pidataBANK0:
    99                           	callstack 0
   100                           
   101                           ;initializer for _str_buffer
   102  00386A  20                 	db	32
   103  00386B  00                 	db	0
   104  00386C  00                 	db	0
   105  00386D  00                 	db	0
   106  00386E  00                 	db	0
   107  00386F  00                 	db	0
   108  003870  00                 	db	0
   109  003871  00                 	db	0
   110  003872  00                 	db	0
   111  003873  00                 	db	0
   112  003874  00                 	db	0
   113  003875  00                 	db	0
   114  003876  00                 	db	0
   115  003877  00                 	db	0
   116  003878  00                 	db	0
   117  003879  00                 	db	0
   118  0000                     _LATD	set	3980
   119  0000                     _ANSELD	set	3934
   120  0000                     _SLRCON	set	3962
   121  0000                     _LATDbits	set	3980
   122  0000                     _TRISBbits	set	3987
   123  0000                     _TRISD	set	3989
   124  0000                     _OSCCONbits	set	4051
   125  0000                     _T0CONbits	set	4053
   126  0000                     _PORTBbits	set	3969
   127  0000                     _LATBbits	set	3978
   128  0000                     _TMR0	set	4054
   129  0000                     _INTCONbits	set	4082
   130                           
   131                           	psect	smallconst
   132  000800                     __psmallconst:
   133                           	callstack 0
   134  000800  00                 	db	0
   135  000801                     STR_1:
   136  000801  44                 	db	68	;'D'
   137  000802  69                 	db	105	;'i'
   138  000803  73                 	db	115	;'s'
   139  000804  74                 	db	116	;'t'
   140  000805  61                 	db	97	;'a'
   141  000806  6E                 	db	110	;'n'
   142  000807  63                 	db	99	;'c'
   143  000808  69                 	db	105	;'i'
   144  000809  61                 	db	97	;'a'
   145  00080A  3A                 	db	58	;':'
   146  00080B  20                 	db	32
   147  00080C  00                 	db	0
   148  00080D                     STR_2:
   149  00080D  25                 	db	37
   150  00080E  2E                 	db	46
   151  00080F  32                 	db	50	;'2'
   152  000810  66                 	db	102	;'f'
   153  000811  20                 	db	32
   154  000812  63                 	db	99	;'c'
   155  000813  6D                 	db	109	;'m'
   156  000814  00                 	db	0
   157  000815                     STR_3:
   158  000815  49                 	db	73	;'I'
   159  000816  4E                 	db	78	;'N'
   160  000817  46                 	db	70	;'F'
   161  000818  00                 	db	0
   162  000819                     STR_7:
   163  000819  4E                 	db	78	;'N'
   164  00081A  41                 	db	65	;'A'
   165  00081B  4E                 	db	78	;'N'
   166  00081C  00                 	db	0
   167  00081D                     STR_4:
   168  00081D  69                 	db	105	;'i'
   169  00081E  6E                 	db	110	;'n'
   170  00081F  66                 	db	102	;'f'
   171  000820  00                 	db	0
   172  000821                     STR_8:
   173  000821  6E                 	db	110	;'n'
   174  000822  61                 	db	97	;'a'
   175  000823  6E                 	db	110	;'n'
   176  000824  00                 	db	0
   177  000825                     STR_11:
   178  000825  6C                 	db	108	;'l'
   179  000826  66                 	db	102	;'f'
   180  000827  00                 	db	0
   181  000828  00                 	db	0	; dummy byte at the end
   182  0000                     
   183                           ; #config settings
   184                           
   185                           	psect	cinit
   186  0035C2                     __pcinit:
   187                           	callstack 0
   188  0035C2                     start_initialization:
   189                           	callstack 0
   190  0035C2                     __initialization:
   191                           	callstack 0
   192                           
   193                           ; Initialize objects allocated to BANK0 (16 bytes)
   194                           ; load TBLPTR registers with __pidataBANK0
   195  0035C2  0E6A               	movlw	low __pidataBANK0
   196  0035C4  6EF6               	movwf	tblptrl,c
   197  0035C6  0E38               	movlw	high __pidataBANK0
   198  0035C8  6EF7               	movwf	tblptrh,c
   199  0035CA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   200  0035CC  6EF8               	movwf	tblptru,c
   201  0035CE  EE00  F0A6         	lfsr	0,__pdataBANK0
   202  0035D2  EE10 F010          	lfsr	1,16
   203  0035D6                     copy_data0:
   204  0035D6  0009               	tblrd		*+
   205  0035D8  CFF5 FFEE          	movff	tablat,postinc0
   206  0035DC  50E5               	movf	postdec1,w,c
   207  0035DE  50E1               	movf	fsr1l,w,c
   208  0035E0  E1FA               	bnz	copy_data0
   209                           
   210                           ; Clear objects allocated to BANK1 (80 bytes)
   211  0035E2  EE01  F000         	lfsr	0,__pbssBANK1
   212  0035E6  0E50               	movlw	80
   213  0035E8                     clear_0:
   214  0035E8  6AEE               	clrf	postinc0,c
   215  0035EA  06E8               	decf	wreg,f,c
   216  0035EC  E1FD               	bnz	clear_0
   217                           
   218                           ; Clear objects allocated to BANK0 (10 bytes)
   219  0035EE  EE00  F0B6         	lfsr	0,__pbssBANK0
   220  0035F2  0E0A               	movlw	10
   221  0035F4                     clear_1:
   222  0035F4  6AEE               	clrf	postinc0,c
   223  0035F6  06E8               	decf	wreg,f,c
   224  0035F8  E1FD               	bnz	clear_1
   225                           
   226                           ; Clear objects allocated to COMRAM (10 bytes)
   227  0035FA  EE00  F056         	lfsr	0,__pbssCOMRAM
   228  0035FE  0E0A               	movlw	10
   229  003600                     clear_2:
   230  003600  6AEE               	clrf	postinc0,c
   231  003602  06E8               	decf	wreg,f,c
   232  003604  E1FD               	bnz	clear_2
   233  003606                     end_of_initialization:
   234                           	callstack 0
   235  003606                     __end_of__initialization:
   236                           	callstack 0
   237  003606  0E00               	movlw	low (__Lmediumconst shr (0+16))
   238  003608  6EF8               	movwf	tblptru,c
   239  00360A  0100               	movlb	0
   240  00360C  EFC8  F018         	goto	_main	;jump to C main() function
   241                           
   242                           	psect	bssCOMRAM
   243  000056                     __pbssCOMRAM:
   244                           	callstack 0
   245  000056                     ___fpclassifyf@F465:
   246                           	callstack 0
   247  000056                     	ds	4
   248  00005A                     _width:
   249                           	callstack 0
   250  00005A                     	ds	2
   251  00005C                     _prec:
   252                           	callstack 0
   253  00005C                     	ds	2
   254  00005E                     _flags:
   255                           	callstack 0
   256  00005E                     	ds	2
   257                           
   258                           	psect	bssBANK0
   259  0000B6                     __pbssBANK0:
   260                           	callstack 0
   261  0000B6                     floorf@F526:
   262                           	callstack 0
   263  0000B6                     	ds	4
   264  0000BA                     _distancia:
   265                           	callstack 0
   266  0000BA                     	ds	4
   267  0000BE                     _nout:
   268                           	callstack 0
   269  0000BE                     	ds	2
   270                           
   271                           	psect	dataBANK0
   272  0000A6                     __pdataBANK0:
   273                           	callstack 0
   274  0000A6                     _str_buffer:
   275                           	callstack 0
   276  0000A6                     	ds	16
   277                           
   278                           	psect	bssBANK1
   279  000100                     __pbssBANK1:
   280                           	callstack 0
   281  000100                     _dbuf:
   282                           	callstack 0
   283  000100                     	ds	80
   284                           
   285                           	psect	cstackBANK0
   286  000060                     __pcstackBANK0:
   287                           	callstack 0
   288  000060                     _efgtoa$999:
   289                           	callstack 0
   290                           
   291                           ; 2 bytes @ 0x0
   292  000060                     	ds	2
   293  000062                     _efgtoa$1007:
   294                           	callstack 0
   295                           
   296                           ; 2 bytes @ 0x2
   297  000062                     	ds	2
   298  000064                     _efgtoa$1008:
   299                           	callstack 0
   300                           
   301                           ; 2 bytes @ 0x4
   302  000064                     	ds	2
   303  000066                     efgtoa@t:
   304                           	callstack 0
   305                           
   306                           ; 2 bytes @ 0x6
   307  000066                     	ds	2
   308  000068                     efgtoa@pp:
   309                           	callstack 0
   310                           
   311                           ; 2 bytes @ 0x8
   312  000068                     	ds	2
   313  00006A                     efgtoa@ne:
   314                           	callstack 0
   315                           
   316                           ; 2 bytes @ 0xA
   317  00006A                     	ds	2
   318  00006C                     efgtoa@m:
   319                           	callstack 0
   320                           
   321                           ; 2 bytes @ 0xC
   322  00006C                     	ds	2
   323  00006E                     efgtoa@ou:
   324                           	callstack 0
   325                           
   326                           ; 4 bytes @ 0xE
   327  00006E                     	ds	4
   328  000072                     efgtoa@d:
   329                           	callstack 0
   330                           
   331                           ; 2 bytes @ 0x12
   332  000072                     	ds	2
   333  000074                     efgtoa@sign:
   334                           	callstack 0
   335                           
   336                           ; 2 bytes @ 0x14
   337  000074                     	ds	2
   338  000076                     efgtoa@p:
   339                           	callstack 0
   340                           
   341                           ; 2 bytes @ 0x16
   342  000076                     	ds	2
   343  000078                     efgtoa@w:
   344                           	callstack 0
   345                           
   346                           ; 2 bytes @ 0x18
   347  000078                     	ds	2
   348  00007A                     efgtoa@nmode:
   349                           	callstack 0
   350                           
   351                           ; 1 bytes @ 0x1A
   352  00007A                     	ds	1
   353  00007B                     efgtoa@mode:
   354                           	callstack 0
   355                           
   356                           ; 1 bytes @ 0x1B
   357  00007B                     	ds	1
   358  00007C                     efgtoa@h:
   359                           	callstack 0
   360                           
   361                           ; 4 bytes @ 0x1C
   362  00007C                     	ds	4
   363  000080                     efgtoa@l:
   364                           	callstack 0
   365                           
   366                           ; 4 bytes @ 0x20
   367  000080                     	ds	4
   368  000084                     efgtoa@i:
   369                           	callstack 0
   370                           
   371                           ; 2 bytes @ 0x24
   372  000084                     	ds	2
   373  000086                     efgtoa@g:
   374                           	callstack 0
   375                           
   376                           ; 4 bytes @ 0x26
   377  000086                     	ds	4
   378  00008A                     efgtoa@e:
   379                           	callstack 0
   380                           
   381                           ; 2 bytes @ 0x2A
   382  00008A                     	ds	2
   383  00008C                     efgtoa@n:
   384                           	callstack 0
   385                           
   386                           ; 2 bytes @ 0x2C
   387  00008C                     	ds	2
   388  00008E                     efgtoa@u:
   389                           	callstack 0
   390                           
   391                           ; 4 bytes @ 0x2E
   392  00008E                     	ds	4
   393  000092                     ?_vfpfcnvrt:
   394                           	callstack 0
   395  000092                     vfpfcnvrt@fp:
   396                           	callstack 0
   397                           
   398                           ; 2 bytes @ 0x32
   399  000092                     	ds	2
   400  000094                     vfpfcnvrt@fmt:
   401                           	callstack 0
   402                           
   403                           ; 2 bytes @ 0x34
   404  000094                     	ds	2
   405  000096                     vfpfcnvrt@ap:
   406                           	callstack 0
   407                           
   408                           ; 2 bytes @ 0x36
   409  000096                     	ds	2
   410  000098                     ?_vfprintf:
   411                           	callstack 0
   412  000098                     vfprintf@fp:
   413                           	callstack 0
   414                           
   415                           ; 2 bytes @ 0x38
   416  000098                     	ds	2
   417  00009A                     vfprintf@fmt:
   418                           	callstack 0
   419                           
   420                           ; 2 bytes @ 0x3A
   421  00009A                     	ds	2
   422  00009C                     vfprintf@ap:
   423                           	callstack 0
   424                           
   425                           ; 2 bytes @ 0x3C
   426  00009C                     	ds	2
   427  00009E                     ?_sprintf:
   428                           	callstack 0
   429  00009E                     sprintf@s:
   430                           	callstack 0
   431                           
   432                           ; 2 bytes @ 0x3E
   433  00009E                     	ds	2
   434  0000A0                     sprintf@fmt:
   435                           	callstack 0
   436                           
   437                           ; 2 bytes @ 0x40
   438  0000A0                     	ds	6
   439                           
   440                           	psect	cstackCOMRAM
   441  000001                     __pcstackCOMRAM:
   442                           	callstack 0
   443  000001                     ?_strlen:
   444                           	callstack 0
   445  000001                     ?___fpclassifyf:
   446                           	callstack 0
   447  000001                     ?_isupper:
   448                           	callstack 0
   449  000001                     ?_isdigit:
   450                           	callstack 0
   451  000001                     ?_strncmp:
   452                           	callstack 0
   453  000001                     ?_isspace:
   454                           	callstack 0
   455  000001                     ?___wmul:
   456                           	callstack 0
   457  000001                     ?___awdiv:
   458                           	callstack 0
   459  000001                     ?___awmod:
   460                           	callstack 0
   461  000001                     ?___fladd:
   462                           	callstack 0
   463  000001                     ?___fldiv:
   464                           	callstack 0
   465  000001                     ?___flmul:
   466                           	callstack 0
   467  000001                     ?___flneg:
   468                           	callstack 0
   469  000001                     ?___fltol:
   470                           	callstack 0
   471  000001                     ?___xxtofl:
   472                           	callstack 0
   473  000001                     Lcd_Port@a:
   474                           	callstack 0
   475  000001                     ___wmul@multiplier:
   476                           	callstack 0
   477  000001                     ___awdiv@dividend:
   478                           	callstack 0
   479  000001                     ___awmod@dividend:
   480                           	callstack 0
   481  000001                     isdigit@c:
   482                           	callstack 0
   483  000001                     isspace@c:
   484                           	callstack 0
   485  000001                     isupper@c:
   486                           	callstack 0
   487  000001                     fputc@c:
   488                           	callstack 0
   489  000001                     strcpy@dest:
   490                           	callstack 0
   491  000001                     strlen@s:
   492                           	callstack 0
   493  000001                     strncmp@_l:
   494                           	callstack 0
   495  000001                     ___fleq@ff1:
   496                           	callstack 0
   497  000001                     ___flneg@f1:
   498                           	callstack 0
   499  000001                     ___fltol@f1:
   500                           	callstack 0
   501  000001                     ___fladd@b:
   502                           	callstack 0
   503  000001                     ___fldiv@b:
   504                           	callstack 0
   505  000001                     ___flmul@b:
   506                           	callstack 0
   507  000001                     ___xxtofl@val:
   508                           	callstack 0
   509  000001                     ___fpclassifyf@x:
   510                           	callstack 0
   511                           
   512                           ; 4 bytes @ 0x0
   513  000001                     	ds	1
   514  000002                     ??_Lcd_Cmd:
   515  000002                     Lcd_Write_Char@temp:
   516                           	callstack 0
   517                           
   518                           ; 1 bytes @ 0x1
   519  000002                     	ds	1
   520  000003                     ??_isupper:
   521  000003                     ??_isdigit:
   522  000003                     ??_isspace:
   523  000003                     Lcd_Cmd@a:
   524                           	callstack 0
   525  000003                     Lcd_Write_Char@y:
   526                           	callstack 0
   527  000003                     ___wmul@multiplicand:
   528                           	callstack 0
   529  000003                     ___awdiv@divisor:
   530                           	callstack 0
   531  000003                     ___awmod@divisor:
   532                           	callstack 0
   533  000003                     fputc@fp:
   534                           	callstack 0
   535  000003                     strcpy@src:
   536                           	callstack 0
   537  000003                     strlen@a:
   538                           	callstack 0
   539  000003                     strncmp@_r:
   540                           	callstack 0
   541                           
   542                           ; 2 bytes @ 0x2
   543  000003                     	ds	1
   544  000004                     ??_Lcd_Init:
   545  000004                     Lcd_Set_Cursor@b:
   546                           	callstack 0
   547  000004                     Lcd_Write_Char@a:
   548                           	callstack 0
   549                           
   550                           ; 1 bytes @ 0x3
   551  000004                     	ds	1
   552  000005                     ??_fputc:
   553  000005                     ??___fpclassifyf:
   554  000005                     ??_strcpy:
   555  000005                     ??___fltol:
   556  000005                     ??___xxtofl:
   557  000005                     Lcd_Set_Cursor@a:
   558                           	callstack 0
   559  000005                     ___awdiv@counter:
   560                           	callstack 0
   561  000005                     ___awmod@counter:
   562                           	callstack 0
   563  000005                     Lcd_Write_String@a:
   564                           	callstack 0
   565  000005                     ___wmul@product:
   566                           	callstack 0
   567  000005                     strncmp@n:
   568                           	callstack 0
   569  000005                     ___fleq@ff2:
   570                           	callstack 0
   571  000005                     ___fladd@a:
   572                           	callstack 0
   573  000005                     ___fldiv@a:
   574                           	callstack 0
   575  000005                     ___flmul@a:
   576                           	callstack 0
   577                           
   578                           ; 4 bytes @ 0x4
   579  000005                     	ds	1
   580  000006                     Lcd_Set_Cursor@z:
   581                           	callstack 0
   582  000006                     ___awdiv@sign:
   583                           	callstack 0
   584  000006                     ___awmod@sign:
   585                           	callstack 0
   586                           
   587                           ; 1 bytes @ 0x5
   588  000006                     	ds	1
   589  000007                     ??_strncmp:
   590  000007                     ??_Lcd_Write_String:
   591  000007                     ?_tolower:
   592                           	callstack 0
   593  000007                     Lcd_Set_Cursor@y:
   594                           	callstack 0
   595  000007                     _isspace$1086:
   596                           	callstack 0
   597  000007                     ___awdiv@quotient:
   598                           	callstack 0
   599  000007                     strcpy@s:
   600                           	callstack 0
   601  000007                     tolower@c:
   602                           	callstack 0
   603                           
   604                           ; 2 bytes @ 0x6
   605  000007                     	ds	1
   606  000008                     ?_atoi:
   607                           	callstack 0
   608  000008                     Lcd_Set_Cursor@temp:
   609                           	callstack 0
   610  000008                     atoi@s:
   611                           	callstack 0
   612  000008                     strncmp@l:
   613                           	callstack 0
   614                           
   615                           ; 2 bytes @ 0x7
   616  000008                     	ds	1
   617  000009                     ??___fladd:
   618  000009                     ??___fldiv:
   619  000009                     ??___flmul:
   620  000009                     ??_tolower:
   621  000009                     ??___fleq:
   622  000009                     ___fltol@sign1:
   623                           	callstack 0
   624  000009                     ___xxtofl@sign:
   625                           	callstack 0
   626  000009                     Lcd_Write_String@i:
   627                           	callstack 0
   628  000009                     ___fpclassifyf@e:
   629                           	callstack 0
   630  000009                     strcpy@d:
   631                           	callstack 0
   632                           
   633                           ; 2 bytes @ 0x8
   634  000009                     	ds	1
   635  00000A                     ??_atoi:
   636  00000A                     ___fltol@exp1:
   637                           	callstack 0
   638  00000A                     ___xxtofl@exp:
   639                           	callstack 0
   640  00000A                     fputs@s:
   641                           	callstack 0
   642  00000A                     strncmp@r:
   643                           	callstack 0
   644                           
   645                           ; 2 bytes @ 0x9
   646  00000A                     	ds	1
   647  00000B                     ___xxtofl@arg:
   648                           	callstack 0
   649  00000B                     ___fpclassifyf@u:
   650                           	callstack 0
   651                           
   652                           ; 4 bytes @ 0xA
   653  00000B                     	ds	1
   654  00000C                     fputs@fp:
   655                           	callstack 0
   656                           
   657                           ; 2 bytes @ 0xB
   658  00000C                     	ds	1
   659  00000D                     ___fladd@signs:
   660                           	callstack 0
   661  00000D                     ___flmul@sign:
   662                           	callstack 0
   663  00000D                     ___fldiv@rem:
   664                           	callstack 0
   665                           
   666                           ; 4 bytes @ 0xC
   667  00000D                     	ds	1
   668  00000E                     ___fladd@aexp:
   669                           	callstack 0
   670  00000E                     fputs@c:
   671                           	callstack 0
   672  00000E                     atoi@neg:
   673                           	callstack 0
   674  00000E                     ___flmul@grs:
   675                           	callstack 0
   676                           
   677                           ; 4 bytes @ 0xD
   678  00000E                     	ds	1
   679  00000F                     ___fladd@bexp:
   680                           	callstack 0
   681  00000F                     fputs@i:
   682                           	callstack 0
   683                           
   684                           ; 2 bytes @ 0xE
   685  00000F                     	ds	1
   686  000010                     ___fladd@grs:
   687                           	callstack 0
   688  000010                     atoi@n:
   689                           	callstack 0
   690                           
   691                           ; 2 bytes @ 0xF
   692  000010                     	ds	1
   693  000011                     ?_pad:
   694                           	callstack 0
   695  000011                     ___fldiv@sign:
   696                           	callstack 0
   697  000011                     pad@fp:
   698                           	callstack 0
   699                           
   700                           ; 2 bytes @ 0x10
   701  000011                     	ds	1
   702  000012                     ___flmul@aexp:
   703                           	callstack 0
   704  000012                     ___fldiv@new_exp:
   705                           	callstack 0
   706                           
   707                           ; 2 bytes @ 0x11
   708  000012                     	ds	1
   709  000013                     ___flmul@bexp:
   710                           	callstack 0
   711  000013                     pad@buf:
   712                           	callstack 0
   713                           
   714                           ; 2 bytes @ 0x12
   715  000013                     	ds	1
   716  000014                     ___fldiv@grs:
   717                           	callstack 0
   718  000014                     ___flmul@prod:
   719                           	callstack 0
   720                           
   721                           ; 4 bytes @ 0x13
   722  000014                     	ds	1
   723  000015                     pad@p:
   724                           	callstack 0
   725                           
   726                           ; 2 bytes @ 0x14
   727  000015                     	ds	2
   728  000017                     ??_pad:
   729                           
   730                           ; 1 bytes @ 0x16
   731  000017                     	ds	1
   732  000018                     ___fldiv@bexp:
   733                           	callstack 0
   734  000018                     ___flmul@temp:
   735                           	callstack 0
   736  000018                     pad@i:
   737                           	callstack 0
   738                           
   739                           ; 2 bytes @ 0x17
   740  000018                     	ds	1
   741  000019                     ___fldiv@aexp:
   742                           	callstack 0
   743                           
   744                           ; 1 bytes @ 0x18
   745  000019                     	ds	1
   746  00001A                     ?_ReadUltrasonic:
   747                           	callstack 0
   748  00001A                     ?___flsub:
   749                           	callstack 0
   750  00001A                     ?_floorf:
   751                           	callstack 0
   752  00001A                     pad@w:
   753                           	callstack 0
   754  00001A                     ___flge@ff1:
   755                           	callstack 0
   756  00001A                     ___flsub@b:
   757                           	callstack 0
   758  00001A                     floorf@x:
   759                           	callstack 0
   760                           
   761                           ; 4 bytes @ 0x19
   762  00001A                     	ds	4
   763  00001E                     ??_floorf:
   764  00001E                     ReadUltrasonic@tiempo:
   765                           	callstack 0
   766  00001E                     ___flge@ff2:
   767                           	callstack 0
   768  00001E                     ___flsub@a:
   769                           	callstack 0
   770                           
   771                           ; 4 bytes @ 0x1D
   772  00001E                     	ds	4
   773  000022                     ??___flge:
   774                           
   775                           ; 1 bytes @ 0x21
   776  000022                     	ds	2
   777  000024                     floorf@m:
   778                           	callstack 0
   779                           
   780                           ; 4 bytes @ 0x23
   781  000024                     	ds	4
   782  000028                     floorf@e:
   783                           	callstack 0
   784                           
   785                           ; 2 bytes @ 0x27
   786  000028                     	ds	2
   787  00002A                     floorf@u:
   788                           	callstack 0
   789                           
   790                           ; 4 bytes @ 0x29
   791  00002A                     	ds	4
   792  00002E                     ?_efgtoa:
   793                           	callstack 0
   794  00002E                     efgtoa@fp:
   795                           	callstack 0
   796                           
   797                           ; 2 bytes @ 0x2D
   798  00002E                     	ds	2
   799  000030                     efgtoa@f:
   800                           	callstack 0
   801                           
   802                           ; 4 bytes @ 0x2F
   803  000030                     	ds	4
   804  000034                     efgtoa@c:
   805                           	callstack 0
   806                           
   807                           ; 1 bytes @ 0x33
   808  000034                     	ds	1
   809  000035                     ??_efgtoa:
   810                           
   811                           ; 1 bytes @ 0x34
   812  000035                     	ds	5
   813  00003A                     ??_vfpfcnvrt:
   814                           
   815                           ; 1 bytes @ 0x39
   816  00003A                     	ds	4
   817  00003E                     vfpfcnvrt@f:
   818                           	callstack 0
   819                           
   820                           ; 4 bytes @ 0x3D
   821  00003E                     	ds	4
   822  000042                     vfpfcnvrt@ct:
   823                           	callstack 0
   824                           
   825                           ; 3 bytes @ 0x41
   826  000042                     	ds	3
   827  000045                     vfpfcnvrt@c:
   828                           	callstack 0
   829                           
   830                           ; 1 bytes @ 0x44
   831  000045                     	ds	1
   832  000046                     vfprintf@cfmt:
   833                           	callstack 0
   834                           
   835                           ; 2 bytes @ 0x45
   836  000046                     	ds	2
   837  000048                     sprintf@ap:
   838                           	callstack 0
   839                           
   840                           ; 2 bytes @ 0x47
   841  000048                     	ds	2
   842  00004A                     sprintf@f:
   843                           	callstack 0
   844                           
   845                           ; 11 bytes @ 0x49
   846  00004A                     	ds	11
   847  000055                     ??_main:
   848                           
   849                           ; 1 bytes @ 0x54
   850  000055                     	ds	1
   851                           
   852 ;;
   853 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   854 ;;
   855 ;; *************** function _main *****************
   856 ;; Defined at:
   857 ;;		line 24 in file "main.c"
   858 ;; Parameters:    Size  Location     Type
   859 ;;		None
   860 ;; Auto vars:     Size  Location     Type
   861 ;;		None
   862 ;; Return value:  Size  Location     Type
   863 ;;                  1    wreg      void 
   864 ;; Registers used:
   865 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   866 ;; Tracked objects:
   867 ;;		On entry : 0/0
   868 ;;		On exit  : 0/0
   869 ;;		Unchanged: 0/0
   870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   871 ;;      Params:         0       0       0       0       0       0       0       0       0
   872 ;;      Locals:         0       0       0       0       0       0       0       0       0
   873 ;;      Temps:          1       0       0       0       0       0       0       0       0
   874 ;;      Totals:         1       0       0       0       0       0       0       0       0
   875 ;;Total ram usage:        1 bytes
   876 ;; Hardware stack levels required when called: 8
   877 ;; This function calls:
   878 ;;		_Config_Clock
   879 ;;		_Config_Port
   880 ;;		_InitUltrasonic
   881 ;;		_Lcd_Clear
   882 ;;		_Lcd_Init
   883 ;;		_Lcd_Set_Cursor
   884 ;;		_Lcd_Write_String
   885 ;;		_ReadUltrasonic
   886 ;;		_sprintf
   887 ;; This function is called by:
   888 ;;		Startup code after reset
   889 ;; This function uses a non-reentrant model
   890 ;;
   891                           
   892                           	psect	text0
   893  003190                     __ptext0:
   894                           	callstack 0
   895  003190                     _main:
   896                           	callstack 23
   897  003190                     
   898                           ;main.c: 26:     Config_Clock();
   899  003190  EC44  F01C         	call	_Config_Clock	;wreg free
   900                           
   901                           ;main.c: 27:     Config_Port();
   902  003194  EC2B  F01C         	call	_Config_Port	;wreg free
   903                           
   904                           ;main.c: 29:     Lcd_Init();
   905  003198  EC95  F019         	call	_Lcd_Init	;wreg free
   906                           
   907                           ;main.c: 30:     Lcd_Clear();
   908  00319C  EC3D  F01C         	call	_Lcd_Clear	;wreg free
   909                           
   910                           ;main.c: 31:     InitUltrasonic();
   911  0031A0  EC1E  F01C         	call	_InitUltrasonic	;wreg free
   912  0031A4                     
   913                           ;main.c: 32:     Lcd_Set_Cursor(1,1);
   914  0031A4  0E01               	movlw	1
   915  0031A6  6E04               	movwf	Lcd_Set_Cursor@b^0,c
   916  0031A8  0E01               	movlw	1
   917  0031AA  ECCF  F019         	call	_Lcd_Set_Cursor
   918  0031AE                     
   919                           ;main.c: 33:     Lcd_Write_String("Distancia: ");
   920  0031AE  0E01               	movlw	low STR_1
   921  0031B0  6E05               	movwf	Lcd_Write_String@a^0,c
   922  0031B2  0E08               	movlw	high STR_1
   923  0031B4  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
   924  0031B6  EC56  F019         	call	_Lcd_Write_String	;wreg free
   925  0031BA                     l3986:
   926                           
   927                           ;main.c: 35:         distancia=ReadUltrasonic();
   928  0031BA  EC10  F019         	call	_ReadUltrasonic	;wreg free
   929  0031BE  C01A  F0BA         	movff	?_ReadUltrasonic,_distancia
   930  0031C2  C01B  F0BB         	movff	?_ReadUltrasonic+1,_distancia+1
   931  0031C6  C01C  F0BC         	movff	?_ReadUltrasonic+2,_distancia+2
   932  0031CA  C01D  F0BD         	movff	?_ReadUltrasonic+3,_distancia+3
   933  0031CE                     
   934                           ;main.c: 36:         sprintf(str_buffer,"%.2f cm",distancia);
   935  0031CE  0EA6               	movlw	low _str_buffer
   936  0031D0  0100               	movlb	0	; () banked
   937  0031D2  6F9E               	movwf	sprintf@s& (0+255),b
   938  0031D4  0E00               	movlw	high _str_buffer
   939  0031D6  6F9F               	movwf	(sprintf@s+1)& (0+255),b
   940  0031D8  0E0D               	movlw	low STR_2
   941  0031DA  6FA0               	movwf	sprintf@fmt& (0+255),b
   942  0031DC  0E08               	movlw	high STR_2
   943  0031DE  6FA1               	movwf	(sprintf@fmt+1)& (0+255),b
   944  0031E0  C0BA  F0A2         	movff	_distancia,?_sprintf+4
   945  0031E4  C0BB  F0A3         	movff	_distancia+1,?_sprintf+5
   946  0031E8  C0BC  F0A4         	movff	_distancia+2,?_sprintf+6
   947  0031EC  C0BD  F0A5         	movff	_distancia+3,?_sprintf+7
   948  0031F0  EC8F  F01A         	call	_sprintf	;wreg free
   949  0031F4                     
   950                           ;main.c: 37:         Lcd_Set_Cursor(2,1);
   951  0031F4  0E01               	movlw	1
   952  0031F6  6E04               	movwf	Lcd_Set_Cursor@b^0,c
   953  0031F8  0E02               	movlw	2
   954  0031FA  ECCF  F019         	call	_Lcd_Set_Cursor
   955  0031FE                     
   956                           ;main.c: 38:         Lcd_Write_String(str_buffer);
   957  0031FE  0EA6               	movlw	low _str_buffer
   958  003200  6E05               	movwf	Lcd_Write_String@a^0,c
   959  003202  0E00               	movlw	high _str_buffer
   960  003204  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
   961  003206  EC56  F019         	call	_Lcd_Write_String	;wreg free
   962  00320A                     
   963                           ;main.c: 39:         _delay((unsigned long)((10)*(16000000UL/4000.0)));
   964  00320A  0E34               	movlw	52
   965  00320C  6E55               	movwf	??_main^0,c
   966  00320E  0EF2               	movlw	242
   967  003210                     u4697:
   968  003210  2EE8               	decfsz	wreg,f,c
   969  003212  D7FE               	bra	u4697
   970  003214  2E55               	decfsz	??_main^0,f,c
   971  003216  D7FC               	bra	u4697
   972  003218  EFDD  F018         	goto	l3986
   973  00321C  EF00  F000         	goto	start
   974  003220                     __end_of_main:
   975                           	callstack 0
   976                           
   977 ;; *************** function _sprintf *****************
   978 ;; Defined at:
   979 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_sprintf.c"
   980 ;; Parameters:    Size  Location     Type
   981 ;;  s               2   62[BANK0 ] PTR unsigned char 
   982 ;;		 -> str_buffer(16), 
   983 ;;  fmt             2   64[BANK0 ] PTR const unsigned char 
   984 ;;		 -> STR_2(8), 
   985 ;; Auto vars:     Size  Location     Type
   986 ;;  f              11   73[COMRAM] struct _IO_FILE
   987 ;;  ap              2   71[COMRAM] PTR void [1]
   988 ;;		 -> ?_sprintf(2), 
   989 ;;  ret             2    0        int 
   990 ;; Return value:  Size  Location     Type
   991 ;;                  2   62[BANK0 ] int 
   992 ;; Registers used:
   993 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   994 ;; Tracked objects:
   995 ;;		On entry : 0/0
   996 ;;		On exit  : 0/0
   997 ;;		Unchanged: 0/0
   998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   999 ;;      Params:         0       8       0       0       0       0       0       0       0
  1000 ;;      Locals:        13       0       0       0       0       0       0       0       0
  1001 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1002 ;;      Totals:        13       8       0       0       0       0       0       0       0
  1003 ;;Total ram usage:       21 bytes
  1004 ;; Hardware stack levels used: 1
  1005 ;; Hardware stack levels required when called: 7
  1006 ;; This function calls:
  1007 ;;		_vfprintf
  1008 ;; This function is called by:
  1009 ;;		_main
  1010 ;; This function uses a non-reentrant model
  1011 ;;
  1012                           
  1013                           	psect	text1
  1014  00351E                     __ptext1:
  1015                           	callstack 0
  1016  00351E                     _sprintf:
  1017                           	callstack 23
  1018  00351E  0EA2               	movlw	low (?_sprintf+4)
  1019  003520  6E48               	movwf	sprintf@ap^0,c
  1020  003522  0E00               	movlw	high (?_sprintf+4)
  1021  003524  6E49               	movwf	(sprintf@ap+1)^0,c
  1022  003526  C09E  F04A         	movff	sprintf@s,sprintf@f
  1023  00352A  C09F  F04B         	movff	sprintf@s+1,sprintf@f+1
  1024  00352E  0E00               	movlw	0
  1025  003530  6E4E               	movwf	(sprintf@f+4)^0,c
  1026  003532  0E00               	movlw	0
  1027  003534  6E4D               	movwf	(sprintf@f+3)^0,c
  1028  003536  0E00               	movlw	0
  1029  003538  6E54               	movwf	(sprintf@f+10)^0,c
  1030  00353A  0E00               	movlw	0
  1031  00353C  6E53               	movwf	(sprintf@f+9)^0,c
  1032  00353E  0E4A               	movlw	low sprintf@f
  1033  003540  0100               	movlb	0	; () banked
  1034  003542  6F98               	movwf	vfprintf@fp& (0+255),b
  1035  003544  0E00               	movlw	high sprintf@f
  1036  003546  6F99               	movwf	(vfprintf@fp+1)& (0+255),b
  1037  003548  C0A0  F09A         	movff	sprintf@fmt,vfprintf@fmt
  1038  00354C  C0A1  F09B         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1039  003550  0E48               	movlw	low sprintf@ap
  1040  003552  6F9C               	movwf	vfprintf@ap& (0+255),b
  1041  003554  0E00               	movlw	high sprintf@ap
  1042  003556  6F9D               	movwf	(vfprintf@ap+1)& (0+255),b
  1043  003558  EC02  F01A         	call	_vfprintf	;wreg free
  1044  00355C  504D               	movf	(sprintf@f+3)^0,w,c
  1045  00355E  0100               	movlb	0	; () banked
  1046  003560  259E               	addwf	sprintf@s& (0+255),w,b
  1047  003562  6ED9               	movwf	fsr2l,c
  1048  003564  504E               	movf	(sprintf@f+4)^0,w,c
  1049  003566  219F               	addwfc	(sprintf@s+1)& (0+255),w,b
  1050  003568  6EDA               	movwf	fsr2h,c
  1051  00356A  0E00               	movlw	0
  1052  00356C  6EDF               	movwf	indf2,c
  1053  00356E                     
  1054                           ; BSR set to: 0
  1055  00356E  0012               	return		;funcret
  1056  003570                     __end_of_sprintf:
  1057                           	callstack 0
  1058                           
  1059 ;; *************** function _vfprintf *****************
  1060 ;; Defined at:
  1061 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1062 ;; Parameters:    Size  Location     Type
  1063 ;;  fp              2   56[BANK0 ] PTR struct _IO_FILE
  1064 ;;		 -> sprintf@f(11), 
  1065 ;;  fmt             2   58[BANK0 ] PTR const unsigned char 
  1066 ;;		 -> STR_2(8), 
  1067 ;;  ap              2   60[BANK0 ] PTR PTR void 
  1068 ;;		 -> sprintf@ap(2), 
  1069 ;; Auto vars:     Size  Location     Type
  1070 ;;  cfmt            2   69[COMRAM] PTR unsigned char 
  1071 ;;		 -> STR_2(8), 
  1072 ;; Return value:  Size  Location     Type
  1073 ;;                  2   56[BANK0 ] int 
  1074 ;; Registers used:
  1075 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1076 ;; Tracked objects:
  1077 ;;		On entry : 0/0
  1078 ;;		On exit  : 0/0
  1079 ;;		Unchanged: 0/0
  1080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1081 ;;      Params:         0       6       0       0       0       0       0       0       0
  1082 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1083 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1084 ;;      Totals:         2       6       0       0       0       0       0       0       0
  1085 ;;Total ram usage:        8 bytes
  1086 ;; Hardware stack levels used: 1
  1087 ;; Hardware stack levels required when called: 6
  1088 ;; This function calls:
  1089 ;;		_vfpfcnvrt
  1090 ;; This function is called by:
  1091 ;;		_sprintf
  1092 ;; This function uses a non-reentrant model
  1093 ;;
  1094                           
  1095                           	psect	text2
  1096  003404                     __ptext2:
  1097                           	callstack 0
  1098  003404                     _vfprintf:
  1099                           	callstack 23
  1100  003404                     
  1101                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1102  003404  C09A  F046         	movff	vfprintf@fmt,vfprintf@cfmt
  1103  003408  C09B  F047         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1104  00340C                     
  1105                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1106  00340C  0E00               	movlw	0
  1107  00340E  0100               	movlb	0	; () banked
  1108  003410  6FBF               	movwf	(_nout+1)& (0+255),b
  1109  003412  0E00               	movlw	0
  1110  003414  6FBE               	movwf	_nout& (0+255),b
  1111                           
  1112                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1113  003416  EF20  F01A         	goto	l3884
  1114  00341A                     l3882:
  1115                           
  1116                           ; BSR set to: 0
  1117                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1118  00341A  C098  F092         	movff	vfprintf@fp,vfpfcnvrt@fp
  1119  00341E  C099  F093         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1120  003422  0E46               	movlw	low vfprintf@cfmt
  1121  003424  6F94               	movwf	vfpfcnvrt@fmt& (0+255),b
  1122  003426  0E00               	movlw	high vfprintf@cfmt
  1123  003428  6F95               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1124  00342A  C09C  F096         	movff	vfprintf@ap,vfpfcnvrt@ap
  1125  00342E  C09D  F097         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1126  003432  EC7D  F00C         	call	_vfpfcnvrt	;wreg free
  1127  003436  0100               	movlb	0	; () banked
  1128  003438  5192               	movf	?_vfpfcnvrt& (0+255),w,b
  1129  00343A  27BE               	addwf	_nout& (0+255),f,b
  1130  00343C  5193               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1131  00343E  23BF               	addwfc	(_nout+1)& (0+255),f,b
  1132  003440                     l3884:
  1133                           
  1134                           ; BSR set to: 0
  1135                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1136  003440  C046  FFF6         	movff	vfprintf@cfmt,tblptrl
  1137  003444  C047  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1138  003448                     	if	0	;tblptru may be non-zero
  1139  003448                     	endif
  1140  003448                     	if	0	;tblptru may be non-zero
  1141  003448                     	endif
  1142  003448  0008               	tblrd		*
  1143  00344A  50F5               	movf	tablat,w,c
  1144  00344C  0900               	iorlw	0
  1145  00344E  A4D8               	btfss	status,2,c
  1146  003450  EF2C  F01A         	goto	u4611
  1147  003454  EF2E  F01A         	goto	u4610
  1148  003458                     u4611:
  1149  003458  EF0D  F01A         	goto	l3882
  1150  00345C                     u4610:
  1151  00345C                     
  1152                           ; BSR set to: 0
  1153                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1154  00345C  C0BE  F098         	movff	_nout,?_vfprintf
  1155  003460  C0BF  F099         	movff	_nout+1,?_vfprintf+1
  1156  003464                     
  1157                           ; BSR set to: 0
  1158  003464  0012               	return		;funcret
  1159  003466                     __end_of_vfprintf:
  1160                           	callstack 0
  1161                           
  1162 ;; *************** function _vfpfcnvrt *****************
  1163 ;; Defined at:
  1164 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1165 ;; Parameters:    Size  Location     Type
  1166 ;;  fp              2   50[BANK0 ] PTR struct _IO_FILE
  1167 ;;		 -> sprintf@f(11), 
  1168 ;;  fmt             2   52[BANK0 ] PTR PTR unsigned char 
  1169 ;;		 -> vfprintf@cfmt(2), 
  1170 ;;  ap              2   54[BANK0 ] PTR PTR void 
  1171 ;;		 -> sprintf@ap(2), 
  1172 ;; Auto vars:     Size  Location     Type
  1173 ;;  llu             8    0        unsigned long long 
  1174 ;;  ll              8    0        long long 
  1175 ;;  f               4   61[COMRAM] long long 
  1176 ;;  ct              3   65[COMRAM] unsigned char [3]
  1177 ;;  vp              3    0        PTR void 
  1178 ;;  cp              3    0        PTR unsigned char 
  1179 ;;  i               2    0        int 
  1180 ;;  done            2    0        int 
  1181 ;;  c               1   68[COMRAM] unsigned char 
  1182 ;; Return value:  Size  Location     Type
  1183 ;;                  2   50[BANK0 ] int 
  1184 ;; Registers used:
  1185 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1186 ;; Tracked objects:
  1187 ;;		On entry : 0/0
  1188 ;;		On exit  : 0/0
  1189 ;;		Unchanged: 0/0
  1190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1191 ;;      Params:         0       6       0       0       0       0       0       0       0
  1192 ;;      Locals:         8       0       0       0       0       0       0       0       0
  1193 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1194 ;;      Totals:        12       6       0       0       0       0       0       0       0
  1195 ;;Total ram usage:       18 bytes
  1196 ;; Hardware stack levels used: 1
  1197 ;; Hardware stack levels required when called: 5
  1198 ;; This function calls:
  1199 ;;		_atoi
  1200 ;;		_efgtoa
  1201 ;;		_fputc
  1202 ;;		_isdigit
  1203 ;;		_isupper
  1204 ;;		_strncmp
  1205 ;;		_tolower
  1206 ;; This function is called by:
  1207 ;;		_vfprintf
  1208 ;; This function uses a non-reentrant model
  1209 ;;
  1210                           
  1211                           	psect	text3
  1212  0018FA                     __ptext3:
  1213                           	callstack 0
  1214  0018FA                     _vfpfcnvrt:
  1215                           	callstack 23
  1216  0018FA                     
  1217                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.36\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1218  0018FA  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1219  0018FE  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1220  001902  CFDE FFF6          	movff	postinc2,tblptrl
  1221  001906  CFDD FFF7          	movff	postdec2,tblptrh
  1222  00190A                     	if	0	;tblptru may be non-zero
  1223  00190A                     	endif
  1224  00190A                     	if	0	;tblptru may be non-zero
  1225  00190A                     	endif
  1226  00190A  0008               	tblrd		*
  1227  00190C  50F5               	movf	tablat,w,c
  1228  00190E  0A25               	xorlw	37
  1229  001910  A4D8               	btfss	status,2,c
  1230  001912  EF8D  F00C         	goto	u4411
  1231  001916  EF8F  F00C         	goto	u4410
  1232  00191A                     u4411:
  1233  00191A  EF78  F00E         	goto	l3794
  1234  00191E                     u4410:
  1235  00191E                     
  1236                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1237  00191E  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1238  001922  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1239  001926  2ADE               	incf	postinc2,f,c
  1240  001928  0E00               	movlw	0
  1241  00192A  22DD               	addwfc	postdec2,f,c
  1242  00192C                     
  1243                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1244  00192C  0E00               	movlw	0
  1245  00192E  6E5B               	movwf	(_width+1)^0,c
  1246  001930  0E00               	movlw	0
  1247  001932  6E5A               	movwf	_width^0,c
  1248  001934  C05A  F05E         	movff	_width,_flags
  1249  001938  C05B  F05F         	movff	_width+1,_flags+1
  1250  00193C                     
  1251                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1252  00193C  685C               	setf	_prec^0,c
  1253  00193E  685D               	setf	(_prec+1)^0,c
  1254  001940                     
  1255                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  1256  001940  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1257  001944  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1258  001948  CFDE FFF6          	movff	postinc2,tblptrl
  1259  00194C  CFDD FFF7          	movff	postdec2,tblptrh
  1260  001950                     	if	0	;tblptru may be non-zero
  1261  001950                     	endif
  1262  001950                     	if	0	;tblptru may be non-zero
  1263  001950                     	endif
  1264  001950  0008               	tblrd		*
  1265  001952  50F5               	movf	tablat,w,c
  1266  001954  0A2E               	xorlw	46
  1267  001956  A4D8               	btfss	status,2,c
  1268  001958  EFB0  F00C         	goto	u4421
  1269  00195C  EFB2  F00C         	goto	u4420
  1270  001960                     u4421:
  1271  001960  EF22  F00D         	goto	l3740
  1272  001964                     u4420:
  1273  001964                     
  1274                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  1275  001964  0E00               	movlw	0
  1276  001966  6E5D               	movwf	(_prec+1)^0,c
  1277  001968  0E00               	movlw	0
  1278  00196A  6E5C               	movwf	_prec^0,c
  1279  00196C                     
  1280                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  1281  00196C  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1282  001970  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1283  001974  2ADE               	incf	postinc2,f,c
  1284  001976  0E00               	movlw	0
  1285  001978  22DD               	addwfc	postdec2,f,c
  1286  00197A                     
  1287                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  1288  00197A  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1289  00197E  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1290  001982  CFDE FFF6          	movff	postinc2,tblptrl
  1291  001986  CFDD FFF7          	movff	postdec2,tblptrh
  1292  00198A                     	if	0	;tblptru may be non-zero
  1293  00198A                     	endif
  1294  00198A                     	if	0	;tblptru may be non-zero
  1295  00198A                     	endif
  1296  00198A  0008               	tblrd		*
  1297  00198C  50F5               	movf	tablat,w,c
  1298  00198E  0A2A               	xorlw	42
  1299  001990  A4D8               	btfss	status,2,c
  1300  001992  EFCD  F00C         	goto	u4431
  1301  001996  EFCF  F00C         	goto	u4430
  1302  00199A                     u4431:
  1303  00199A  EFEC  F00C         	goto	l3732
  1304  00199E                     u4430:
  1305  00199E                     
  1306                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  1307  00199E  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1308  0019A2  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1309  0019A6  2ADE               	incf	postinc2,f,c
  1310  0019A8  0E00               	movlw	0
  1311  0019AA  22DD               	addwfc	postdec2,f,c
  1312                           
  1313                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1314  0019AC  C096  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1315  0019B0  C097  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1316  0019B4  CFDF F03A          	movff	indf2,??_vfpfcnvrt
  1317  0019B8  0E02               	movlw	2
  1318  0019BA  26DE               	addwf	postinc2,f,c
  1319  0019BC  CFDF F03B          	movff	indf2,??_vfpfcnvrt+1
  1320  0019C0  0E00               	movlw	0
  1321  0019C2  22DD               	addwfc	postdec2,f,c
  1322  0019C4  C03A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1323  0019C8  C03B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1324  0019CC  CFDE F05C          	movff	postinc2,_prec
  1325  0019D0  CFDD F05D          	movff	postdec2,_prec+1
  1326                           
  1327                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  1328  0019D4  EF22  F00D         	goto	l3740
  1329  0019D8                     l3732:
  1330                           
  1331                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  1332  0019D8  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1333  0019DC  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1334  0019E0  CFDE F008          	movff	postinc2,atoi@s
  1335  0019E4  CFDD F009          	movff	postdec2,atoi@s+1
  1336  0019E8  EC59  F014         	call	_atoi	;wreg free
  1337  0019EC  C008  F05C         	movff	?_atoi,_prec
  1338  0019F0  C009  F05D         	movff	?_atoi+1,_prec+1
  1339                           
  1340                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  1341  0019F4  EF03  F00D         	goto	l3738
  1342  0019F8                     l3734:
  1343                           
  1344                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  1345  0019F8  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1346  0019FC  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1347  001A00  2ADE               	incf	postinc2,f,c
  1348  001A02  0E00               	movlw	0
  1349  001A04  22DD               	addwfc	postdec2,f,c
  1350  001A06                     l3738:
  1351  001A06  0ED0               	movlw	208
  1352  001A08  6E3A               	movwf	??_vfpfcnvrt^0,c
  1353  001A0A  0EFF               	movlw	255
  1354  001A0C  6E3B               	movwf	(??_vfpfcnvrt+1)^0,c
  1355  001A0E  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1356  001A12  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1357  001A16  CFDE FFF6          	movff	postinc2,tblptrl
  1358  001A1A  CFDD FFF7          	movff	postdec2,tblptrh
  1359  001A1E                     	if	0	;tblptru may be non-zero
  1360  001A1E                     	endif
  1361  001A1E                     	if	0	;tblptru may be non-zero
  1362  001A1E                     	endif
  1363  001A1E  0008               	tblrd		*
  1364  001A20  50F5               	movf	tablat,w,c
  1365  001A22  6E3C               	movwf	(??_vfpfcnvrt+2)^0,c
  1366  001A24  6A3D               	clrf	(??_vfpfcnvrt+3)^0,c
  1367  001A26  503A               	movf	??_vfpfcnvrt^0,w,c
  1368  001A28  263C               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1369  001A2A  503B               	movf	(??_vfpfcnvrt+1)^0,w,c
  1370  001A2C  223D               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1371  001A2E  503D               	movf	(??_vfpfcnvrt+3)^0,w,c
  1372  001A30  E109               	bnz	u4440
  1373  001A32  0E0A               	movlw	10
  1374  001A34  5C3C               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1375  001A36  A0D8               	btfss	status,0,c
  1376  001A38  EF20  F00D         	goto	u4441
  1377  001A3C  EF22  F00D         	goto	u4440
  1378  001A40                     u4441:
  1379  001A40  EFFC  F00C         	goto	l3734
  1380  001A44                     u4440:
  1381  001A44                     l3740:
  1382                           
  1383                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  1384  001A44  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1385  001A48  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1386  001A4C  CFDE FFF6          	movff	postinc2,tblptrl
  1387  001A50  CFDD FFF7          	movff	postdec2,tblptrh
  1388  001A54                     	if	0	;tblptru may be non-zero
  1389  001A54                     	endif
  1390  001A54                     	if	0	;tblptru may be non-zero
  1391  001A54                     	endif
  1392  001A54  0008               	tblrd		*
  1393  001A56  50F5               	movf	tablat,w,c
  1394  001A58  6E07               	movwf	tolower@c^0,c
  1395  001A5A  6A08               	clrf	(tolower@c+1)^0,c
  1396  001A5C  EC08  F01B         	call	_tolower	;wreg free
  1397  001A60  5007               	movf	?_tolower^0,w,c
  1398  001A62  6E42               	movwf	vfpfcnvrt@ct^0,c
  1399  001A64                     
  1400                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  1401  001A64  5042               	movf	vfpfcnvrt@ct^0,w,c
  1402  001A66  B4D8               	btfsc	status,2,c
  1403  001A68  EF38  F00D         	goto	u4451
  1404  001A6C  EF3A  F00D         	goto	u4450
  1405  001A70                     u4451:
  1406  001A70  EF72  F00D         	goto	l3750
  1407  001A74                     u4450:
  1408  001A74                     
  1409                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  1410  001A74  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1411  001A78  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1412  001A7C  CFDE F03A          	movff	postinc2,??_vfpfcnvrt
  1413  001A80  CFDD F03B          	movff	postdec2,??_vfpfcnvrt+1
  1414  001A84  0E01               	movlw	1
  1415  001A86  263A               	addwf	??_vfpfcnvrt^0,f,c
  1416  001A88  0E00               	movlw	0
  1417  001A8A  223B               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1418  001A8C  C03A  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1419  001A90  C03B  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1420  001A94                     	if	0	;tblptru may be non-zero
  1421  001A94                     	endif
  1422  001A94                     	if	0	;tblptru may be non-zero
  1423  001A94                     	endif
  1424  001A94  0008               	tblrd		*
  1425  001A96  50F5               	movf	tablat,w,c
  1426  001A98  6E07               	movwf	tolower@c^0,c
  1427  001A9A  6A08               	clrf	(tolower@c+1)^0,c
  1428  001A9C  EC08  F01B         	call	_tolower	;wreg free
  1429  001AA0  5007               	movf	?_tolower^0,w,c
  1430  001AA2  6E43               	movwf	(vfpfcnvrt@ct+1)^0,c
  1431  001AA4                     
  1432                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  1433  001AA4  5043               	movf	(vfpfcnvrt@ct+1)^0,w,c
  1434  001AA6  B4D8               	btfsc	status,2,c
  1435  001AA8  EF58  F00D         	goto	u4461
  1436  001AAC  EF5A  F00D         	goto	u4460
  1437  001AB0                     u4461:
  1438  001AB0  EF72  F00D         	goto	l3750
  1439  001AB4                     u4460:
  1440  001AB4                     
  1441                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  1442  001AB4  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1443  001AB8  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1444  001ABC  CFDE F03A          	movff	postinc2,??_vfpfcnvrt
  1445  001AC0  CFDD F03B          	movff	postdec2,??_vfpfcnvrt+1
  1446  001AC4  0E02               	movlw	2
  1447  001AC6  263A               	addwf	??_vfpfcnvrt^0,f,c
  1448  001AC8  0E00               	movlw	0
  1449  001ACA  223B               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1450  001ACC  C03A  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1451  001AD0  C03B  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1452  001AD4                     	if	0	;tblptru may be non-zero
  1453  001AD4                     	endif
  1454  001AD4                     	if	0	;tblptru may be non-zero
  1455  001AD4                     	endif
  1456  001AD4  0008               	tblrd		*
  1457  001AD6  50F5               	movf	tablat,w,c
  1458  001AD8  6E07               	movwf	tolower@c^0,c
  1459  001ADA  6A08               	clrf	(tolower@c+1)^0,c
  1460  001ADC  EC08  F01B         	call	_tolower	;wreg free
  1461  001AE0  5007               	movf	?_tolower^0,w,c
  1462  001AE2  6E44               	movwf	(vfpfcnvrt@ct+2)^0,c
  1463  001AE4                     l3750:
  1464                           
  1465                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  1466  001AE4  0E66               	movlw	102
  1467  001AE6  1842               	xorwf	vfpfcnvrt@ct^0,w,c
  1468  001AE8  A4D8               	btfss	status,2,c
  1469  001AEA  EF79  F00D         	goto	u4471
  1470  001AEE  EF7B  F00D         	goto	u4470
  1471  001AF2                     u4471:
  1472  001AF2  EFBB  F00D         	goto	l3762
  1473  001AF6                     u4470:
  1474  001AF6                     
  1475                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  1476  001AF6  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1477  001AFA  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1478  001AFE  CFDE FFF6          	movff	postinc2,tblptrl
  1479  001B02  CFDD FFF7          	movff	postdec2,tblptrh
  1480  001B06                     	if	0	;tblptru may be non-zero
  1481  001B06                     	endif
  1482  001B06                     	if	0	;tblptru may be non-zero
  1483  001B06                     	endif
  1484  001B06  0008               	tblrd		*
  1485  001B08  CFF5 F045          	movff	tablat,vfpfcnvrt@c
  1486  001B0C                     
  1487                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  1488  001B0C  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1489  001B10  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1490  001B14  2ADE               	incf	postinc2,f,c
  1491  001B16  0E00               	movlw	0
  1492  001B18  22DD               	addwfc	postdec2,f,c
  1493  001B1A                     
  1494                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1495  001B1A  C096  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1496  001B1E  C097  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1497  001B22  CFDF F03A          	movff	indf2,??_vfpfcnvrt
  1498  001B26  0E04               	movlw	4
  1499  001B28  26DE               	addwf	postinc2,f,c
  1500  001B2A  CFDF F03B          	movff	indf2,??_vfpfcnvrt+1
  1501  001B2E  0E00               	movlw	0
  1502  001B30  22DD               	addwfc	postdec2,f,c
  1503  001B32  C03A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1504  001B36  C03B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1505  001B3A  CFDE F03E          	movff	postinc2,vfpfcnvrt@f
  1506  001B3E  CFDE F03F          	movff	postinc2,vfpfcnvrt@f+1
  1507  001B42  CFDE F040          	movff	postinc2,vfpfcnvrt@f+2
  1508  001B46  CFDE F041          	movff	postinc2,vfpfcnvrt@f+3
  1509  001B4A                     l3758:
  1510                           
  1511                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  1512  001B4A  C092  F02E         	movff	vfpfcnvrt@fp,efgtoa@fp
  1513  001B4E  C093  F02F         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  1514  001B52  C03E  F030         	movff	vfpfcnvrt@f,efgtoa@f
  1515  001B56  C03F  F031         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  1516  001B5A  C040  F032         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  1517  001B5E  C041  F033         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  1518  001B62  C045  F034         	movff	vfpfcnvrt@c,efgtoa@c
  1519  001B66  EC15  F004         	call	_efgtoa	;wreg free
  1520  001B6A  C02E  F092         	movff	?_efgtoa,?_vfpfcnvrt
  1521  001B6E  C02F  F093         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  1522  001B72  EF93  F00E         	goto	l946
  1523  001B76                     l3762:
  1524                           
  1525                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  1526  001B76  0E42               	movlw	low vfpfcnvrt@ct
  1527  001B78  6E01               	movwf	strncmp@_l^0,c
  1528  001B7A  0E00               	movlw	high vfpfcnvrt@ct
  1529  001B7C  6E02               	movwf	(strncmp@_l+1)^0,c
  1530  001B7E  0E25               	movlw	low STR_11
  1531  001B80  6E03               	movwf	strncmp@_r^0,c
  1532  001B82  0E08               	movlw	high STR_11
  1533  001B84  6E04               	movwf	(strncmp@_r+1)^0,c
  1534  001B86  0E00               	movlw	0
  1535  001B88  6E06               	movwf	(strncmp@n+1)^0,c
  1536  001B8A  0E02               	movlw	2
  1537  001B8C  6E05               	movwf	strncmp@n^0,c
  1538  001B8E  EC88  F016         	call	_strncmp	;wreg free
  1539  001B92  5001               	movf	?_strncmp^0,w,c
  1540  001B94  1002               	iorwf	(?_strncmp+1)^0,w,c
  1541  001B96  A4D8               	btfss	status,2,c
  1542  001B98  EFD0  F00D         	goto	u4481
  1543  001B9C  EFD2  F00D         	goto	u4480
  1544  001BA0                     u4481:
  1545  001BA0  EF40  F00E         	goto	l3778
  1546  001BA4                     u4480:
  1547  001BA4                     
  1548                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 952:             
      +                          c = (*fmt)[1];
  1549  001BA4  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1550  001BA8  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1551  001BAC  CFDE F03A          	movff	postinc2,??_vfpfcnvrt
  1552  001BB0  CFDD F03B          	movff	postdec2,??_vfpfcnvrt+1
  1553  001BB4  0E01               	movlw	1
  1554  001BB6  263A               	addwf	??_vfpfcnvrt^0,f,c
  1555  001BB8  0E00               	movlw	0
  1556  001BBA  223B               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1557  001BBC  C03A  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1558  001BC0  C03B  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1559  001BC4                     	if	0	;tblptru may be non-zero
  1560  001BC4                     	endif
  1561  001BC4                     	if	0	;tblptru may be non-zero
  1562  001BC4                     	endif
  1563  001BC4  0008               	tblrd		*
  1564  001BC6  CFF5 F045          	movff	tablat,vfpfcnvrt@c
  1565  001BCA  0EBF               	movlw	191
  1566  001BCC  6E3A               	movwf	??_vfpfcnvrt^0,c
  1567  001BCE  0EFF               	movlw	255
  1568  001BD0  6E3B               	movwf	(??_vfpfcnvrt+1)^0,c
  1569  001BD2  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1570  001BD6  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1571  001BDA  CFDE FFF6          	movff	postinc2,tblptrl
  1572  001BDE  CFDD FFF7          	movff	postdec2,tblptrh
  1573  001BE2                     	if	0	;tblptru may be non-zero
  1574  001BE2                     	endif
  1575  001BE2                     	if	0	;tblptru may be non-zero
  1576  001BE2                     	endif
  1577  001BE2  0008               	tblrd		*
  1578  001BE4  50F5               	movf	tablat,w,c
  1579  001BE6  6E3C               	movwf	(??_vfpfcnvrt+2)^0,c
  1580  001BE8  6A3D               	clrf	(??_vfpfcnvrt+3)^0,c
  1581  001BEA  503A               	movf	??_vfpfcnvrt^0,w,c
  1582  001BEC  263C               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1583  001BEE  503B               	movf	(??_vfpfcnvrt+1)^0,w,c
  1584  001BF0  223D               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1585  001BF2  503D               	movf	(??_vfpfcnvrt+3)^0,w,c
  1586  001BF4  E107               	bnz	u4491
  1587  001BF6  0E1A               	movlw	26
  1588  001BF8  5C3C               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1589  001BFA  B0D8               	btfsc	status,0,c
  1590  001BFC  EF02  F00E         	goto	u4491
  1591  001C00  EF04  F00E         	goto	u4490
  1592  001C04                     u4491:
  1593  001C04  EF1E  F00E         	goto	l3772
  1594  001C08                     u4490:
  1595  001C08                     
  1596                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  1597  001C08  C096  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1598  001C0C  C097  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1599  001C10  CFDF F03A          	movff	indf2,??_vfpfcnvrt
  1600  001C14  0E04               	movlw	4
  1601  001C16  26DE               	addwf	postinc2,f,c
  1602  001C18  CFDF F03B          	movff	indf2,??_vfpfcnvrt+1
  1603  001C1C  0E00               	movlw	0
  1604  001C1E  22DD               	addwfc	postdec2,f,c
  1605  001C20  C03A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1606  001C24  C03B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1607  001C28  CFDE F03E          	movff	postinc2,vfpfcnvrt@f
  1608  001C2C  CFDE F03F          	movff	postinc2,vfpfcnvrt@f+1
  1609  001C30  CFDE F040          	movff	postinc2,vfpfcnvrt@f+2
  1610  001C34  CFDE F041          	movff	postinc2,vfpfcnvrt@f+3
  1611                           
  1612                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  1613  001C38  EF36  F00E         	goto	l951
  1614  001C3C                     l3772:
  1615                           
  1616                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1617  001C3C  C096  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1618  001C40  C097  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1619  001C44  CFDF F03A          	movff	indf2,??_vfpfcnvrt
  1620  001C48  0E04               	movlw	4
  1621  001C4A  26DE               	addwf	postinc2,f,c
  1622  001C4C  CFDF F03B          	movff	indf2,??_vfpfcnvrt+1
  1623  001C50  0E00               	movlw	0
  1624  001C52  22DD               	addwfc	postdec2,f,c
  1625  001C54  C03A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1626  001C58  C03B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1627  001C5C  CFDE F03E          	movff	postinc2,vfpfcnvrt@f
  1628  001C60  CFDE F03F          	movff	postinc2,vfpfcnvrt@f+1
  1629  001C64  CFDE F040          	movff	postinc2,vfpfcnvrt@f+2
  1630  001C68  CFDE F041          	movff	postinc2,vfpfcnvrt@f+3
  1631  001C6C                     l951:
  1632                           
  1633                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  1634  001C6C  0E02               	movlw	2
  1635  001C6E  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1636  001C72  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1637  001C76  26DE               	addwf	postinc2,f,c
  1638  001C78  0E00               	movlw	0
  1639  001C7A  22DD               	addwfc	postdec2,f,c
  1640  001C7C  EFA5  F00D         	goto	l3758
  1641  001C80                     l3778:
  1642                           
  1643                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1644  001C80  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1645  001C84  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1646  001C88  CFDE FFF6          	movff	postinc2,tblptrl
  1647  001C8C  CFDD FFF7          	movff	postdec2,tblptrh
  1648  001C90                     	if	0	;tblptru may be non-zero
  1649  001C90                     	endif
  1650  001C90                     	if	0	;tblptru may be non-zero
  1651  001C90                     	endif
  1652  001C90  0008               	tblrd		*
  1653  001C92  50F5               	movf	tablat,w,c
  1654  001C94  0A25               	xorlw	37
  1655  001C96  A4D8               	btfss	status,2,c
  1656  001C98  EF50  F00E         	goto	u4501
  1657  001C9C  EF52  F00E         	goto	u4500
  1658  001CA0                     u4501:
  1659  001CA0  EF6A  F00E         	goto	l3788
  1660  001CA4                     u4500:
  1661  001CA4                     
  1662                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1663  001CA4  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1664  001CA8  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1665  001CAC  2ADE               	incf	postinc2,f,c
  1666  001CAE  0E00               	movlw	0
  1667  001CB0  22DD               	addwfc	postdec2,f,c
  1668  001CB2                     
  1669                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1670  001CB2  0E00               	movlw	0
  1671  001CB4  6E02               	movwf	(fputc@c+1)^0,c
  1672  001CB6  0E25               	movlw	37
  1673  001CB8  6E01               	movwf	fputc@c^0,c
  1674  001CBA  C092  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1675  001CBE  C093  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1676  001CC2  ECF3  F016         	call	_fputc	;wreg free
  1677  001CC6                     l3784:
  1678                           
  1679                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1680  001CC6  0E00               	movlw	0
  1681  001CC8  0100               	movlb	0	; () banked
  1682  001CCA  6F93               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  1683  001CCC  0E01               	movlw	1
  1684  001CCE  6F92               	movwf	?_vfpfcnvrt& (0+255),b
  1685  001CD0  EF93  F00E         	goto	l946
  1686  001CD4                     l3788:
  1687                           
  1688                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1689  001CD4  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1690  001CD8  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1691  001CDC  2ADE               	incf	postinc2,f,c
  1692  001CDE  0E00               	movlw	0
  1693  001CE0  22DD               	addwfc	postdec2,f,c
  1694  001CE2                     
  1695                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1696  001CE2  0E00               	movlw	0
  1697  001CE4  0100               	movlb	0	; () banked
  1698  001CE6  6F93               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  1699  001CE8  0E00               	movlw	0
  1700  001CEA  6F92               	movwf	?_vfpfcnvrt& (0+255),b
  1701  001CEC  EF93  F00E         	goto	l946
  1702  001CF0                     l3794:
  1703                           
  1704                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1705  001CF0  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1706  001CF4  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1707  001CF8  CFDE FFF6          	movff	postinc2,tblptrl
  1708  001CFC  CFDD FFF7          	movff	postdec2,tblptrh
  1709  001D00                     	if	0	;tblptru may be non-zero
  1710  001D00                     	endif
  1711  001D00                     	if	0	;tblptru may be non-zero
  1712  001D00                     	endif
  1713  001D00  0008               	tblrd		*
  1714  001D02  50F5               	movf	tablat,w,c
  1715  001D04  6E01               	movwf	fputc@c^0,c
  1716  001D06  6A02               	clrf	(fputc@c+1)^0,c
  1717  001D08  C092  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1718  001D0C  C093  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1719  001D10  ECF3  F016         	call	_fputc	;wreg free
  1720  001D14                     
  1721                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1722  001D14  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1723  001D18  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1724  001D1C  2ADE               	incf	postinc2,f,c
  1725  001D1E  0E00               	movlw	0
  1726  001D20  22DD               	addwfc	postdec2,f,c
  1727  001D22  EF63  F00E         	goto	l3784
  1728  001D26                     l946:
  1729  001D26  0012               	return		;funcret
  1730  001D28                     __end_of_vfpfcnvrt:
  1731                           	callstack 0
  1732                           
  1733 ;; *************** function _strncmp *****************
  1734 ;; Defined at:
  1735 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strncmp.c"
  1736 ;; Parameters:    Size  Location     Type
  1737 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  1738 ;;		 -> vfpfcnvrt@ct(3), 
  1739 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  1740 ;;		 -> STR_13(3), 
  1741 ;;  n               2    4[COMRAM] unsigned int 
  1742 ;; Auto vars:     Size  Location     Type
  1743 ;;  r               2    9[COMRAM] PTR const unsigned char 
  1744 ;;		 -> STR_13(3), 
  1745 ;;  l               2    7[COMRAM] PTR const unsigned char 
  1746 ;;		 -> vfpfcnvrt@ct(3), 
  1747 ;; Return value:  Size  Location     Type
  1748 ;;                  2    0[COMRAM] int 
  1749 ;; Registers used:
  1750 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1751 ;; Tracked objects:
  1752 ;;		On entry : 0/0
  1753 ;;		On exit  : 0/0
  1754 ;;		Unchanged: 0/0
  1755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1756 ;;      Params:         6       0       0       0       0       0       0       0       0
  1757 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1758 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1759 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1760 ;;Total ram usage:       11 bytes
  1761 ;; Hardware stack levels used: 1
  1762 ;; This function calls:
  1763 ;;		Nothing
  1764 ;; This function is called by:
  1765 ;;		_vfpfcnvrt
  1766 ;; This function uses a non-reentrant model
  1767 ;;
  1768                           
  1769                           	psect	text4
  1770  002D10                     __ptext4:
  1771                           	callstack 0
  1772  002D10                     _strncmp:
  1773                           	callstack 27
  1774  002D10  C001  F008         	movff	strncmp@_l,strncmp@l
  1775  002D14  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  1776  002D18  C003  F00A         	movff	strncmp@_r,strncmp@r
  1777  002D1C  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  1778  002D20  0605               	decf	strncmp@n^0,f,c
  1779  002D22  A0D8               	btfss	status,0,c
  1780  002D24  0606               	decf	(strncmp@n+1)^0,f,c
  1781  002D26  2805               	incf	strncmp@n^0,w,c
  1782  002D28  E106               	bnz	u4321
  1783  002D2A  2806               	incf	(strncmp@n+1)^0,w,c
  1784  002D2C  A4D8               	btfss	status,2,c
  1785  002D2E  EF9B  F016         	goto	u4321
  1786  002D32  EF9D  F016         	goto	u4320
  1787  002D36                     u4321:
  1788  002D36  EFAA  F016         	goto	l3686
  1789  002D3A                     u4320:
  1790  002D3A  0E00               	movlw	0
  1791  002D3C  6E02               	movwf	(?_strncmp+1)^0,c
  1792  002D3E  0E00               	movlw	0
  1793  002D40  6E01               	movwf	?_strncmp^0,c
  1794  002D42  EFF2  F016         	goto	l1066
  1795  002D46                     l3684:
  1796  002D46  4A08               	infsnz	strncmp@l^0,f,c
  1797  002D48  2A09               	incf	(strncmp@l+1)^0,f,c
  1798  002D4A  4A0A               	infsnz	strncmp@r^0,f,c
  1799  002D4C  2A0B               	incf	(strncmp@r+1)^0,f,c
  1800  002D4E  0605               	decf	strncmp@n^0,f,c
  1801  002D50  A0D8               	btfss	status,0,c
  1802  002D52  0606               	decf	(strncmp@n+1)^0,f,c
  1803  002D54                     l3686:
  1804  002D54  C008  FFD9         	movff	strncmp@l,fsr2l
  1805  002D58  C009  FFDA         	movff	strncmp@l+1,fsr2h
  1806  002D5C  50DF               	movf	indf2,w,c
  1807  002D5E  B4D8               	btfsc	status,2,c
  1808  002D60  EFB4  F016         	goto	u4331
  1809  002D64  EFB6  F016         	goto	u4330
  1810  002D68                     u4331:
  1811  002D68  EFE1  F016         	goto	l3694
  1812  002D6C                     u4330:
  1813  002D6C  C00A  FFF6         	movff	strncmp@r,tblptrl
  1814  002D70  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  1815  002D74                     	if	0	;tblptru may be non-zero
  1816  002D74                     	endif
  1817  002D74                     	if	0	;tblptru may be non-zero
  1818  002D74                     	endif
  1819  002D74  0008               	tblrd		*
  1820  002D76  50F5               	movf	tablat,w,c
  1821  002D78  0900               	iorlw	0
  1822  002D7A  B4D8               	btfsc	status,2,c
  1823  002D7C  EFC2  F016         	goto	u4341
  1824  002D80  EFC4  F016         	goto	u4340
  1825  002D84                     u4341:
  1826  002D84  EFE1  F016         	goto	l3694
  1827  002D88                     u4340:
  1828  002D88  5005               	movf	strncmp@n^0,w,c
  1829  002D8A  1006               	iorwf	(strncmp@n+1)^0,w,c
  1830  002D8C  B4D8               	btfsc	status,2,c
  1831  002D8E  EFCB  F016         	goto	u4351
  1832  002D92  EFCD  F016         	goto	u4350
  1833  002D96                     u4351:
  1834  002D96  EFE1  F016         	goto	l3694
  1835  002D9A                     u4350:
  1836  002D9A  C008  FFD9         	movff	strncmp@l,fsr2l
  1837  002D9E  C009  FFDA         	movff	strncmp@l+1,fsr2h
  1838  002DA2  50DF               	movf	indf2,w,c
  1839  002DA4  6E07               	movwf	??_strncmp^0,c
  1840  002DA6  C00A  FFF6         	movff	strncmp@r,tblptrl
  1841  002DAA  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  1842  002DAE                     	if	0	;tblptru may be non-zero
  1843  002DAE                     	endif
  1844  002DAE                     	if	0	;tblptru may be non-zero
  1845  002DAE                     	endif
  1846  002DAE  0008               	tblrd		*
  1847  002DB0  50F5               	movf	tablat,w,c
  1848  002DB2  1807               	xorwf	??_strncmp^0,w,c
  1849  002DB4  B4D8               	btfsc	status,2,c
  1850  002DB6  EFDF  F016         	goto	u4361
  1851  002DBA  EFE1  F016         	goto	u4360
  1852  002DBE                     u4361:
  1853  002DBE  EFA3  F016         	goto	l3684
  1854  002DC2                     u4360:
  1855  002DC2                     l3694:
  1856  002DC2  C008  FFD9         	movff	strncmp@l,fsr2l
  1857  002DC6  C009  FFDA         	movff	strncmp@l+1,fsr2h
  1858  002DCA  50DF               	movf	indf2,w,c
  1859  002DCC  6E07               	movwf	??_strncmp^0,c
  1860  002DCE  C00A  FFF6         	movff	strncmp@r,tblptrl
  1861  002DD2  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  1862  002DD6                     	if	0	;tblptru may be non-zero
  1863  002DD6                     	endif
  1864  002DD6                     	if	0	;tblptru may be non-zero
  1865  002DD6                     	endif
  1866  002DD6  0008               	tblrd		*
  1867  002DD8  50F5               	movf	tablat,w,c
  1868  002DDA  5C07               	subwf	??_strncmp^0,w,c
  1869  002DDC  6E01               	movwf	?_strncmp^0,c
  1870  002DDE  6A02               	clrf	(?_strncmp+1)^0,c
  1871  002DE0  A0D8               	btfss	status,0,c
  1872  002DE2  0602               	decf	(?_strncmp+1)^0,f,c
  1873  002DE4                     l1066:
  1874  002DE4  0012               	return		;funcret
  1875  002DE6                     __end_of_strncmp:
  1876                           	callstack 0
  1877                           
  1878 ;; *************** function _efgtoa *****************
  1879 ;; Defined at:
  1880 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1881 ;; Parameters:    Size  Location     Type
  1882 ;;  fp              2   45[COMRAM] PTR struct _IO_FILE
  1883 ;;		 -> sprintf@f(11), 
  1884 ;;  f               4   47[COMRAM] PTR struct _IO_FILE
  1885 ;;  c               1   51[COMRAM] unsigned char 
  1886 ;; Auto vars:     Size  Location     Type
  1887 ;;  u               4   46[BANK0 ] unsigned char 
  1888 ;;  g               4   38[BANK0 ] unsigned char 
  1889 ;;  l               4   32[BANK0 ] unsigned char 
  1890 ;;  h               4   28[BANK0 ] unsigned char 
  1891 ;;  ou              4   14[BANK0 ] unsigned char 
  1892 ;;  n               2   44[BANK0 ] int 
  1893 ;;  e               2   42[BANK0 ] int 
  1894 ;;  i               2   36[BANK0 ] int 
  1895 ;;  w               2   24[BANK0 ] int 
  1896 ;;  p               2   22[BANK0 ] int 
  1897 ;;  sign            2   20[BANK0 ] int 
  1898 ;;  d               2   18[BANK0 ] int 
  1899 ;;  m               2   12[BANK0 ] int 
  1900 ;;  ne              2   10[BANK0 ] int 
  1901 ;;  pp              2    8[BANK0 ] int 
  1902 ;;  t               2    6[BANK0 ] int 
  1903 ;;  mode            1   27[BANK0 ] unsigned char 
  1904 ;;  nmode           1   26[BANK0 ] unsigned char 
  1905 ;; Return value:  Size  Location     Type
  1906 ;;                  2   45[COMRAM] int 
  1907 ;; Registers used:
  1908 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1909 ;; Tracked objects:
  1910 ;;		On entry : 0/0
  1911 ;;		On exit  : 0/0
  1912 ;;		Unchanged: 0/0
  1913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1914 ;;      Params:         7       0       0       0       0       0       0       0       0
  1915 ;;      Locals:         0      50       0       0       0       0       0       0       0
  1916 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1917 ;;      Totals:        12      50       0       0       0       0       0       0       0
  1918 ;;Total ram usage:       62 bytes
  1919 ;; Hardware stack levels used: 1
  1920 ;; Hardware stack levels required when called: 4
  1921 ;; This function calls:
  1922 ;;		___awdiv
  1923 ;;		___awmod
  1924 ;;		___fladd
  1925 ;;		___fldiv
  1926 ;;		___fleq
  1927 ;;		___flge
  1928 ;;		___flmul
  1929 ;;		___flneg
  1930 ;;		___flsub
  1931 ;;		___fltol
  1932 ;;		___fpclassifyf
  1933 ;;		_floorf
  1934 ;;		_isupper
  1935 ;;		_pad
  1936 ;;		_strcpy
  1937 ;;		_tolower
  1938 ;; This function is called by:
  1939 ;;		_vfpfcnvrt
  1940 ;; This function uses a non-reentrant model
  1941 ;;
  1942                           
  1943                           	psect	text5
  1944  00082A                     __ptext5:
  1945                           	callstack 0
  1946  00082A                     _efgtoa:
  1947                           	callstack 23
  1948  00082A                     
  1949                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.36\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  1950  00082A  0E00               	movlw	0
  1951  00082C  0100               	movlb	0	; () banked
  1952  00082E  6F75               	movwf	(efgtoa@sign+1)& (0+255),b
  1953  000830  0E00               	movlw	0
  1954  000832  6F74               	movwf	efgtoa@sign& (0+255),b
  1955  000834                     
  1956                           ; BSR set to: 0
  1957                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 340:     g = f;
  1958  000834  C030  F086         	movff	efgtoa@f,efgtoa@g
  1959  000838  C031  F087         	movff	efgtoa@f+1,efgtoa@g+1
  1960  00083C  C032  F088         	movff	efgtoa@f+2,efgtoa@g+2
  1961  000840  C033  F089         	movff	efgtoa@f+3,efgtoa@g+3
  1962  000844                     
  1963                           ; BSR set to: 0
  1964                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  1965  000844  BF89               	btfsc	(efgtoa@g+3)& (0+255),7,b
  1966  000846  EF29  F004         	goto	u3800
  1967  00084A  EF27  F004         	goto	u3801
  1968  00084E                     u3801:
  1969  00084E  EF3F  F004         	goto	l3350
  1970  000852                     u3800:
  1971  000852                     
  1972                           ; BSR set to: 0
  1973                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  1974  000852  0E00               	movlw	0
  1975  000854  6F75               	movwf	(efgtoa@sign+1)& (0+255),b
  1976  000856  0E01               	movlw	1
  1977  000858  6F74               	movwf	efgtoa@sign& (0+255),b
  1978  00085A                     
  1979                           ; BSR set to: 0
  1980                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  1981  00085A  C086  F001         	movff	efgtoa@g,___flneg@f1
  1982  00085E  C087  F002         	movff	efgtoa@g+1,___flneg@f1+1
  1983  000862  C088  F003         	movff	efgtoa@g+2,___flneg@f1+2
  1984  000866  C089  F004         	movff	efgtoa@g+3,___flneg@f1+3
  1985  00086A  EC8C  F01B         	call	___flneg	;wreg free
  1986  00086E  C001  F086         	movff	?___flneg,efgtoa@g
  1987  000872  C002  F087         	movff	?___flneg+1,efgtoa@g+1
  1988  000876  C003  F088         	movff	?___flneg+2,efgtoa@g+2
  1989  00087A  C004  F089         	movff	?___flneg+3,efgtoa@g+3
  1990  00087E                     l3350:
  1991                           
  1992                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  1993  00087E  0E00               	movlw	0
  1994  000880  0100               	movlb	0	; () banked
  1995  000882  6F8D               	movwf	(efgtoa@n+1)& (0+255),b
  1996  000884  0E00               	movlw	0
  1997  000886  6F8C               	movwf	efgtoa@n& (0+255),b
  1998  000888                     
  1999                           ; BSR set to: 0
  2000                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  2001  000888  C05A  F078         	movff	_width,efgtoa@w
  2002  00088C  C05B  F079         	movff	_width+1,efgtoa@w+1
  2003  000890                     
  2004                           ; BSR set to: 0
  2005                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  2006  000890  5174               	movf	efgtoa@sign& (0+255),w,b
  2007  000892  1175               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2008  000894  A4D8               	btfss	status,2,c
  2009  000896  EF4F  F004         	goto	u3811
  2010  00089A  EF51  F004         	goto	u3810
  2011  00089E                     u3811:
  2012  00089E  EF58  F004         	goto	l3358
  2013  0008A2                     u3810:
  2014  0008A2                     
  2015                           ; BSR set to: 0
  2016  0008A2  A45E               	btfss	_flags^0,2,c
  2017  0008A4  EF56  F004         	goto	u3821
  2018  0008A8  EF58  F004         	goto	u3820
  2019  0008AC                     u3821:
  2020  0008AC  EF72  F004         	goto	l3370
  2021  0008B0                     u3820:
  2022  0008B0                     l3358:
  2023                           
  2024                           ; BSR set to: 0
  2025                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  2026  0008B0  5174               	movf	efgtoa@sign& (0+255),w,b
  2027  0008B2  1175               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2028  0008B4  A4D8               	btfss	status,2,c
  2029  0008B6  EF5F  F004         	goto	u3831
  2030  0008BA  EF61  F004         	goto	u3830
  2031  0008BE                     u3831:
  2032  0008BE  EF67  F004         	goto	l3362
  2033  0008C2                     u3830:
  2034  0008C2                     
  2035                           ; BSR set to: 0
  2036  0008C2  0E00               	movlw	0
  2037  0008C4  6F61               	movwf	(_efgtoa$999+1)& (0+255),b
  2038  0008C6  0E2B               	movlw	43
  2039  0008C8  6F60               	movwf	_efgtoa$999& (0+255),b
  2040  0008CA  EF6B  F004         	goto	l3364
  2041  0008CE                     l3362:
  2042                           
  2043                           ; BSR set to: 0
  2044  0008CE  0E00               	movlw	0
  2045  0008D0  6F61               	movwf	(_efgtoa$999+1)& (0+255),b
  2046  0008D2  0E2D               	movlw	45
  2047  0008D4  6F60               	movwf	_efgtoa$999& (0+255),b
  2048  0008D6                     l3364:
  2049                           
  2050                           ; BSR set to: 0
  2051  0008D6  C060  F100         	movff	_efgtoa$999,_dbuf
  2052  0008DA                     
  2053                           ; BSR set to: 0
  2054                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 351:         ++n;
  2055  0008DA  4B8C               	infsnz	efgtoa@n& (0+255),f,b
  2056  0008DC  2B8D               	incf	(efgtoa@n+1)& (0+255),f,b
  2057  0008DE                     
  2058                           ; BSR set to: 0
  2059                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 352:         --w;
  2060  0008DE  0778               	decf	efgtoa@w& (0+255),f,b
  2061  0008E0  A0D8               	btfss	status,0,c
  2062  0008E2  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  2063  0008E4                     l3370:
  2064                           
  2065                           ; BSR set to: 0
  2066                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 356:     if (( __
      +                          fpclassifyf(g) == 1 )) {
  2067  0008E4  C086  F001         	movff	efgtoa@g,___fpclassifyf@x
  2068  0008E8  C087  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2069  0008EC  C088  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2070  0008F0  C089  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2071  0008F4  EC09  F016         	call	___fpclassifyf	;wreg free
  2072  0008F8  0401               	decf	?___fpclassifyf^0,w,c
  2073  0008FA  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2074  0008FC  A4D8               	btfss	status,2,c
  2075  0008FE  EF83  F004         	goto	u3841
  2076  000902  EF85  F004         	goto	u3840
  2077  000906                     u3841:
  2078  000906  EFD0  F004         	goto	l3388
  2079  00090A                     u3840:
  2080  00090A  0EBF               	movlw	191
  2081  00090C  6E35               	movwf	??_efgtoa^0,c
  2082  00090E  0EFF               	movlw	255
  2083  000910  6E36               	movwf	(??_efgtoa+1)^0,c
  2084  000912  5034               	movf	efgtoa@c^0,w,c
  2085  000914  6E37               	movwf	(??_efgtoa+2)^0,c
  2086  000916  6A38               	clrf	(??_efgtoa+3)^0,c
  2087  000918  5035               	movf	??_efgtoa^0,w,c
  2088  00091A  2637               	addwf	(??_efgtoa+2)^0,f,c
  2089  00091C  5036               	movf	(??_efgtoa+1)^0,w,c
  2090  00091E  2238               	addwfc	(??_efgtoa+3)^0,f,c
  2091  000920  5038               	movf	(??_efgtoa+3)^0,w,c
  2092  000922  E107               	bnz	u3851
  2093  000924  0E1A               	movlw	26
  2094  000926  5C37               	subwf	(??_efgtoa+2)^0,w,c
  2095  000928  B0D8               	btfsc	status,0,c
  2096  00092A  EF99  F004         	goto	u3851
  2097  00092E  EF9B  F004         	goto	u3850
  2098  000932                     u3851:
  2099  000932  EFAA  F004         	goto	l3380
  2100  000936                     u3850:
  2101  000936                     
  2102                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  2103  000936  0E00               	movlw	low _dbuf
  2104  000938  0100               	movlb	0	; () banked
  2105  00093A  258C               	addwf	efgtoa@n& (0+255),w,b
  2106  00093C  6E01               	movwf	strcpy@dest^0,c
  2107  00093E  0E01               	movlw	high _dbuf
  2108  000940  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2109  000942  6E02               	movwf	(strcpy@dest+1)^0,c
  2110  000944  0E15               	movlw	low STR_3
  2111  000946  6E03               	movwf	strcpy@src^0,c
  2112  000948  0E08               	movlw	high STR_3
  2113  00094A  6E04               	movwf	(strcpy@src+1)^0,c
  2114  00094C  EC33  F01A         	call	_strcpy	;wreg free
  2115                           
  2116                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  2117  000950  EFB7  F004         	goto	l3382
  2118  000954                     l3380:
  2119                           
  2120                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  2121  000954  0E00               	movlw	low _dbuf
  2122  000956  0100               	movlb	0	; () banked
  2123  000958  258C               	addwf	efgtoa@n& (0+255),w,b
  2124  00095A  6E01               	movwf	strcpy@dest^0,c
  2125  00095C  0E01               	movlw	high _dbuf
  2126  00095E  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2127  000960  6E02               	movwf	(strcpy@dest+1)^0,c
  2128  000962  0E1D               	movlw	low STR_4
  2129  000964  6E03               	movwf	strcpy@src^0,c
  2130  000966  0E08               	movlw	high STR_4
  2131  000968  6E04               	movwf	(strcpy@src+1)^0,c
  2132  00096A  EC33  F01A         	call	_strcpy	;wreg free
  2133  00096E                     l3382:
  2134                           
  2135                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  2136  00096E  0100               	movlb	0	; () banked
  2137  000970  0EFD               	movlw	253
  2138  000972  2778               	addwf	efgtoa@w& (0+255),f,b
  2139  000974  0EFF               	movlw	255
  2140  000976  2379               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2141  000978                     l3384:
  2142                           
  2143                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  2144  000978  C02E  F011         	movff	efgtoa@fp,pad@fp
  2145  00097C  C02F  F012         	movff	efgtoa@fp+1,pad@fp+1
  2146  000980  0E00               	movlw	low _dbuf
  2147  000982  6E13               	movwf	pad@buf^0,c
  2148  000984  0E01               	movlw	high _dbuf
  2149  000986  6E14               	movwf	(pad@buf+1)^0,c
  2150  000988  C078  F015         	movff	efgtoa@w,pad@p
  2151  00098C  C079  F016         	movff	efgtoa@w+1,pad@p+1
  2152  000990  ECBA  F017         	call	_pad	;wreg free
  2153  000994  C011  F02E         	movff	?_pad,?_efgtoa
  2154  000998  C012  F02F         	movff	?_pad+1,?_efgtoa+1
  2155  00099C  EF1C  F00A         	goto	l860
  2156  0009A0                     l3388:
  2157                           
  2158                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 365:     if (( __
      +                          fpclassifyf(g) == 0 )) {
  2159  0009A0  C086  F001         	movff	efgtoa@g,___fpclassifyf@x
  2160  0009A4  C087  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2161  0009A8  C088  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2162  0009AC  C089  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2163  0009B0  EC09  F016         	call	___fpclassifyf	;wreg free
  2164  0009B4  5001               	movf	?___fpclassifyf^0,w,c
  2165  0009B6  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2166  0009B8  A4D8               	btfss	status,2,c
  2167  0009BA  EFE1  F004         	goto	u3861
  2168  0009BE  EFE3  F004         	goto	u3860
  2169  0009C2                     u3861:
  2170  0009C2  EF17  F005         	goto	l3406
  2171  0009C6                     u3860:
  2172  0009C6  0EBF               	movlw	191
  2173  0009C8  6E35               	movwf	??_efgtoa^0,c
  2174  0009CA  0EFF               	movlw	255
  2175  0009CC  6E36               	movwf	(??_efgtoa+1)^0,c
  2176  0009CE  5034               	movf	efgtoa@c^0,w,c
  2177  0009D0  6E37               	movwf	(??_efgtoa+2)^0,c
  2178  0009D2  6A38               	clrf	(??_efgtoa+3)^0,c
  2179  0009D4  5035               	movf	??_efgtoa^0,w,c
  2180  0009D6  2637               	addwf	(??_efgtoa+2)^0,f,c
  2181  0009D8  5036               	movf	(??_efgtoa+1)^0,w,c
  2182  0009DA  2238               	addwfc	(??_efgtoa+3)^0,f,c
  2183  0009DC  5038               	movf	(??_efgtoa+3)^0,w,c
  2184  0009DE  E107               	bnz	u3871
  2185  0009E0  0E1A               	movlw	26
  2186  0009E2  5C37               	subwf	(??_efgtoa+2)^0,w,c
  2187  0009E4  B0D8               	btfsc	status,0,c
  2188  0009E6  EFF7  F004         	goto	u3871
  2189  0009EA  EFF9  F004         	goto	u3870
  2190  0009EE                     u3871:
  2191  0009EE  EF08  F005         	goto	l3398
  2192  0009F2                     u3870:
  2193  0009F2                     
  2194                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  2195  0009F2  0E00               	movlw	low _dbuf
  2196  0009F4  0100               	movlb	0	; () banked
  2197  0009F6  258C               	addwf	efgtoa@n& (0+255),w,b
  2198  0009F8  6E01               	movwf	strcpy@dest^0,c
  2199  0009FA  0E01               	movlw	high _dbuf
  2200  0009FC  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2201  0009FE  6E02               	movwf	(strcpy@dest+1)^0,c
  2202  000A00  0E19               	movlw	low STR_7
  2203  000A02  6E03               	movwf	strcpy@src^0,c
  2204  000A04  0E08               	movlw	high STR_7
  2205  000A06  6E04               	movwf	(strcpy@src+1)^0,c
  2206  000A08  EC33  F01A         	call	_strcpy	;wreg free
  2207                           
  2208                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  2209  000A0C  EFB7  F004         	goto	l3382
  2210  000A10                     l3398:
  2211                           
  2212                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  2213  000A10  0E00               	movlw	low _dbuf
  2214  000A12  0100               	movlb	0	; () banked
  2215  000A14  258C               	addwf	efgtoa@n& (0+255),w,b
  2216  000A16  6E01               	movwf	strcpy@dest^0,c
  2217  000A18  0E01               	movlw	high _dbuf
  2218  000A1A  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2219  000A1C  6E02               	movwf	(strcpy@dest+1)^0,c
  2220  000A1E  0E21               	movlw	low STR_8
  2221  000A20  6E03               	movwf	strcpy@src^0,c
  2222  000A22  0E08               	movlw	high STR_8
  2223  000A24  6E04               	movwf	(strcpy@src+1)^0,c
  2224  000A26  EC33  F01A         	call	_strcpy	;wreg free
  2225  000A2A  EFB7  F004         	goto	l3382
  2226  000A2E                     l3406:
  2227                           
  2228                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  2229  000A2E  0E00               	movlw	0
  2230  000A30  0100               	movlb	0	; () banked
  2231  000A32  6F8E               	movwf	efgtoa@u& (0+255),b
  2232  000A34  0E00               	movlw	0
  2233  000A36  6F8F               	movwf	(efgtoa@u+1)& (0+255),b
  2234  000A38  0E80               	movlw	128
  2235  000A3A  6F90               	movwf	(efgtoa@u+2)& (0+255),b
  2236  000A3C  0E3F               	movlw	63
  2237  000A3E  6F91               	movwf	(efgtoa@u+3)& (0+255),b
  2238                           
  2239                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  2240  000A40  0E00               	movlw	0
  2241  000A42  6F8B               	movwf	(efgtoa@e+1)& (0+255),b
  2242  000A44  0E00               	movlw	0
  2243  000A46  6F8A               	movwf	efgtoa@e& (0+255),b
  2244  000A48                     
  2245                           ; BSR set to: 0
  2246                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  2247  000A48  C086  F001         	movff	efgtoa@g,___fleq@ff1
  2248  000A4C  C087  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  2249  000A50  C088  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  2250  000A54  C089  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  2251  000A58  0E00               	movlw	0
  2252  000A5A  6E05               	movwf	___fleq@ff2^0,c
  2253  000A5C  0E00               	movlw	0
  2254  000A5E  6E06               	movwf	(___fleq@ff2+1)^0,c
  2255  000A60  0E00               	movlw	0
  2256  000A62  6E07               	movwf	(___fleq@ff2+2)^0,c
  2257  000A64  0E00               	movlw	0
  2258  000A66  6E08               	movwf	(___fleq@ff2+3)^0,c
  2259  000A68  EC73  F018         	call	___fleq	;wreg free
  2260  000A6C  B0D8               	btfsc	status,0,c
  2261  000A6E  EF3B  F005         	goto	u3881
  2262  000A72  EF3D  F005         	goto	u3880
  2263  000A76                     u3881:
  2264  000A76  EFC0  F005         	goto	l3424
  2265  000A7A                     u3880:
  2266  000A7A  EF5C  F005         	goto	l3416
  2267  000A7E                     l3412:
  2268                           
  2269                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  2270  000A7E  C08E  F001         	movff	efgtoa@u,___flmul@b
  2271  000A82  C08F  F002         	movff	efgtoa@u+1,___flmul@b+1
  2272  000A86  C090  F003         	movff	efgtoa@u+2,___flmul@b+2
  2273  000A8A  C091  F004         	movff	efgtoa@u+3,___flmul@b+3
  2274  000A8E  0E00               	movlw	0
  2275  000A90  6E05               	movwf	___flmul@a^0,c
  2276  000A92  0E00               	movlw	0
  2277  000A94  6E06               	movwf	(___flmul@a+1)^0,c
  2278  000A96  0E20               	movlw	32
  2279  000A98  6E07               	movwf	(___flmul@a+2)^0,c
  2280  000A9A  0E41               	movlw	65
  2281  000A9C  6E08               	movwf	(___flmul@a+3)^0,c
  2282  000A9E  EC94  F00E         	call	___flmul	;wreg free
  2283  000AA2  C001  F08E         	movff	?___flmul,efgtoa@u
  2284  000AA6  C002  F08F         	movff	?___flmul+1,efgtoa@u+1
  2285  000AAA  C003  F090         	movff	?___flmul+2,efgtoa@u+2
  2286  000AAE  C004  F091         	movff	?___flmul+3,efgtoa@u+3
  2287  000AB2                     
  2288                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  2289  000AB2  0100               	movlb	0	; () banked
  2290  000AB4  4B8A               	infsnz	efgtoa@e& (0+255),f,b
  2291  000AB6  2B8B               	incf	(efgtoa@e+1)& (0+255),f,b
  2292  000AB8                     l3416:
  2293                           
  2294                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  2295  000AB8  C086  F01A         	movff	efgtoa@g,___flge@ff1
  2296  000ABC  C087  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  2297  000AC0  C088  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  2298  000AC4  C089  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  2299  000AC8  0E00               	movlw	0
  2300  000ACA  6E05               	movwf	___flmul@a^0,c
  2301  000ACC  0E00               	movlw	0
  2302  000ACE  6E06               	movwf	(___flmul@a+1)^0,c
  2303  000AD0  0E20               	movlw	32
  2304  000AD2  6E07               	movwf	(___flmul@a+2)^0,c
  2305  000AD4  0E41               	movlw	65
  2306  000AD6  6E08               	movwf	(___flmul@a+3)^0,c
  2307  000AD8  C08E  F001         	movff	efgtoa@u,___flmul@b
  2308  000ADC  C08F  F002         	movff	efgtoa@u+1,___flmul@b+1
  2309  000AE0  C090  F003         	movff	efgtoa@u+2,___flmul@b+2
  2310  000AE4  C091  F004         	movff	efgtoa@u+3,___flmul@b+3
  2311  000AE8  EC94  F00E         	call	___flmul	;wreg free
  2312  000AEC  C001  F01E         	movff	?___flmul,___flge@ff2
  2313  000AF0  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  2314  000AF4  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  2315  000AF8  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  2316  000AFC  EC87  F015         	call	___flge	;wreg free
  2317  000B00  B0D8               	btfsc	status,0,c
  2318  000B02  EF85  F005         	goto	u3891
  2319  000B06  EF87  F005         	goto	u3890
  2320  000B0A                     u3891:
  2321  000B0A  EF3F  F005         	goto	l3412
  2322  000B0E                     u3890:
  2323  000B0E  EFA7  F005         	goto	l3422
  2324  000B12                     l3418:
  2325                           
  2326                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  2327  000B12  C08E  F001         	movff	efgtoa@u,___fldiv@b
  2328  000B16  C08F  F002         	movff	efgtoa@u+1,___fldiv@b+1
  2329  000B1A  C090  F003         	movff	efgtoa@u+2,___fldiv@b+2
  2330  000B1E  C091  F004         	movff	efgtoa@u+3,___fldiv@b+3
  2331  000B22  0E00               	movlw	0
  2332  000B24  6E05               	movwf	___fldiv@a^0,c
  2333  000B26  0E00               	movlw	0
  2334  000B28  6E06               	movwf	(___fldiv@a+1)^0,c
  2335  000B2A  0E20               	movlw	32
  2336  000B2C  6E07               	movwf	(___fldiv@a+2)^0,c
  2337  000B2E  0E41               	movlw	65
  2338  000B30  6E08               	movwf	(___fldiv@a+3)^0,c
  2339  000B32  ECA9  F010         	call	___fldiv	;wreg free
  2340  000B36  C001  F08E         	movff	?___fldiv,efgtoa@u
  2341  000B3A  C002  F08F         	movff	?___fldiv+1,efgtoa@u+1
  2342  000B3E  C003  F090         	movff	?___fldiv+2,efgtoa@u+2
  2343  000B42  C004  F091         	movff	?___fldiv+3,efgtoa@u+3
  2344  000B46                     
  2345                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  2346  000B46  0100               	movlb	0	; () banked
  2347  000B48  078A               	decf	efgtoa@e& (0+255),f,b
  2348  000B4A  A0D8               	btfss	status,0,c
  2349  000B4C  078B               	decf	(efgtoa@e+1)& (0+255),f,b
  2350  000B4E                     l3422:
  2351                           
  2352                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  2353  000B4E  C086  F01A         	movff	efgtoa@g,___flge@ff1
  2354  000B52  C087  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  2355  000B56  C088  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  2356  000B5A  C089  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  2357  000B5E  C08E  F01E         	movff	efgtoa@u,___flge@ff2
  2358  000B62  C08F  F01F         	movff	efgtoa@u+1,___flge@ff2+1
  2359  000B66  C090  F020         	movff	efgtoa@u+2,___flge@ff2+2
  2360  000B6A  C091  F021         	movff	efgtoa@u+3,___flge@ff2+3
  2361  000B6E  EC87  F015         	call	___flge	;wreg free
  2362  000B72  A0D8               	btfss	status,0,c
  2363  000B74  EFBE  F005         	goto	u3901
  2364  000B78  EFC0  F005         	goto	u3900
  2365  000B7C                     u3901:
  2366  000B7C  EF89  F005         	goto	l3418
  2367  000B80                     u3900:
  2368  000B80                     l3424:
  2369                           
  2370                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  2371  000B80  C034  F007         	movff	efgtoa@c,tolower@c
  2372  000B84  6A08               	clrf	(tolower@c+1)^0,c
  2373  000B86  EC08  F01B         	call	_tolower	;wreg free
  2374  000B8A  5007               	movf	?_tolower^0,w,c
  2375  000B8C  0100               	movlb	0	; () banked
  2376  000B8E  6F7B               	movwf	efgtoa@mode& (0+255),b
  2377  000B90                     
  2378                           ; BSR set to: 0
  2379                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  2380  000B90  C07B  F07A         	movff	efgtoa@mode,efgtoa@nmode
  2381  000B94                     
  2382                           ; BSR set to: 0
  2383                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  2384  000B94  0E67               	movlw	103
  2385  000B96  197B               	xorwf	efgtoa@mode& (0+255),w,b
  2386  000B98  A4D8               	btfss	status,2,c
  2387  000B9A  EFD1  F005         	goto	u3911
  2388  000B9E  EFD3  F005         	goto	u3910
  2389  000BA2                     u3911:
  2390  000BA2  EFF9  F005         	goto	l3438
  2391  000BA6                     u3910:
  2392  000BA6                     
  2393                           ; BSR set to: 0
  2394                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  2395  000BA6  505C               	movf	_prec^0,w,c
  2396  000BA8  105D               	iorwf	(_prec+1)^0,w,c
  2397  000BAA  A4D8               	btfss	status,2,c
  2398  000BAC  EFDA  F005         	goto	u3921
  2399  000BB0  EFDC  F005         	goto	u3920
  2400  000BB4                     u3921:
  2401  000BB4  EFE0  F005         	goto	l3434
  2402  000BB8                     u3920:
  2403  000BB8                     
  2404                           ; BSR set to: 0
  2405                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  2406  000BB8  0E00               	movlw	0
  2407  000BBA  6E5D               	movwf	(_prec+1)^0,c
  2408  000BBC  0E01               	movlw	1
  2409  000BBE  6E5C               	movwf	_prec^0,c
  2410  000BC0                     l3434:
  2411                           
  2412                           ; BSR set to: 0
  2413                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  2414  000BC0  BE5D               	btfsc	(_prec+1)^0,7,c
  2415  000BC2  EFED  F005         	goto	u3930
  2416  000BC6  505D               	movf	(_prec+1)^0,w,c
  2417  000BC8  E106               	bnz	u3931
  2418  000BCA  045C               	decf	_prec^0,w,c
  2419  000BCC  B0D8               	btfsc	status,0,c
  2420  000BCE  EFEB  F005         	goto	u3931
  2421  000BD2  EFED  F005         	goto	u3930
  2422  000BD6                     u3931:
  2423  000BD6  EFF3  F005         	goto	l876
  2424  000BDA                     u3930:
  2425  000BDA                     l3436:
  2426                           
  2427                           ; BSR set to: 0
  2428  000BDA  0E00               	movlw	0
  2429  000BDC  6F77               	movwf	(efgtoa@p+1)& (0+255),b
  2430  000BDE  0E06               	movlw	6
  2431  000BE0  6F76               	movwf	efgtoa@p& (0+255),b
  2432  000BE2  EF02  F006         	goto	l3444
  2433  000BE6                     l876:
  2434                           
  2435                           ; BSR set to: 0
  2436  000BE6  C05C  F076         	movff	_prec,efgtoa@p
  2437  000BEA  C05D  F077         	movff	_prec+1,efgtoa@p+1
  2438  000BEE  EF02  F006         	goto	l3444
  2439  000BF2                     l3438:
  2440                           
  2441                           ; BSR set to: 0
  2442                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  2443  000BF2  BE5D               	btfsc	(_prec+1)^0,7,c
  2444  000BF4  EFFE  F005         	goto	u3941
  2445  000BF8  EF00  F006         	goto	u3940
  2446  000BFC                     u3941:
  2447  000BFC  EFED  F005         	goto	l3436
  2448  000C00                     u3940:
  2449  000C00  EFF3  F005         	goto	l876
  2450  000C04                     l3444:
  2451                           
  2452                           ; BSR set to: 0
  2453                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  2454  000C04  0E67               	movlw	103
  2455  000C06  197B               	xorwf	efgtoa@mode& (0+255),w,b
  2456  000C08  A4D8               	btfss	status,2,c
  2457  000C0A  EF09  F006         	goto	u3951
  2458  000C0E  EF0B  F006         	goto	u3950
  2459  000C12                     u3951:
  2460  000C12  EF3A  F006         	goto	l3454
  2461  000C16                     u3950:
  2462  000C16                     
  2463                           ; BSR set to: 0
  2464                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  2465  000C16  AF8B               	btfss	(efgtoa@e+1)& (0+255),7,b
  2466  000C18  EF19  F006         	goto	u3960
  2467  000C1C  0EFC               	movlw	252
  2468  000C1E  5D8A               	subwf	efgtoa@e& (0+255),w,b
  2469  000C20  0EFF               	movlw	255
  2470  000C22  598B               	subwfb	(efgtoa@e+1)& (0+255),w,b
  2471  000C24  A0D8               	btfss	status,0,c
  2472  000C26  EF17  F006         	goto	u3961
  2473  000C2A  EF19  F006         	goto	u3960
  2474  000C2E                     u3961:
  2475  000C2E  EF38  F006         	goto	l3452
  2476  000C32                     u3960:
  2477  000C32                     
  2478                           ; BSR set to: 0
  2479  000C32  0EFF               	movlw	255
  2480  000C34  6E35               	movwf	??_efgtoa^0,c
  2481  000C36  0EFF               	movlw	255
  2482  000C38  6E36               	movwf	(??_efgtoa+1)^0,c
  2483  000C3A  C076  F037         	movff	efgtoa@p,??_efgtoa+2
  2484  000C3E  C077  F038         	movff	efgtoa@p+1,??_efgtoa+3
  2485  000C42  5035               	movf	??_efgtoa^0,w,c
  2486  000C44  2637               	addwf	(??_efgtoa+2)^0,f,c
  2487  000C46  5036               	movf	(??_efgtoa+1)^0,w,c
  2488  000C48  2238               	addwfc	(??_efgtoa+3)^0,f,c
  2489  000C4A  518A               	movf	efgtoa@e& (0+255),w,b
  2490  000C4C  5C37               	subwf	(??_efgtoa+2)^0,w,c
  2491  000C4E  5038               	movf	(??_efgtoa+3)^0,w,c
  2492  000C50  0A80               	xorlw	128
  2493  000C52  6E39               	movwf	(??_efgtoa+4)^0,c
  2494  000C54  518B               	movf	(efgtoa@e+1)& (0+255),w,b
  2495  000C56  0A80               	xorlw	128
  2496  000C58  5839               	subwfb	(??_efgtoa+4)^0,w,c
  2497  000C5A  A0D8               	btfss	status,0,c
  2498  000C5C  EF32  F006         	goto	u3971
  2499  000C60  EF34  F006         	goto	u3970
  2500  000C64                     u3971:
  2501  000C64  EF38  F006         	goto	l3452
  2502  000C68                     u3970:
  2503  000C68                     
  2504                           ; BSR set to: 0
  2505                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  2506  000C68  0E66               	movlw	102
  2507  000C6A  6F7A               	movwf	efgtoa@nmode& (0+255),b
  2508                           
  2509                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  2510  000C6C  EF3A  F006         	goto	l3454
  2511  000C70                     l3452:
  2512                           
  2513                           ; BSR set to: 0
  2514                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  2515  000C70  0E65               	movlw	101
  2516  000C72  6F7A               	movwf	efgtoa@nmode& (0+255),b
  2517  000C74                     l3454:
  2518                           
  2519                           ; BSR set to: 0
  2520                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 411:     m = p;
  2521  000C74  C076  F06C         	movff	efgtoa@p,efgtoa@m
  2522  000C78  C077  F06D         	movff	efgtoa@p+1,efgtoa@m+1
  2523  000C7C                     
  2524                           ; BSR set to: 0
  2525                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  2526  000C7C  0E67               	movlw	103
  2527  000C7E  197B               	xorwf	efgtoa@mode& (0+255),w,b
  2528  000C80  A4D8               	btfss	status,2,c
  2529  000C82  EF45  F006         	goto	u3981
  2530  000C86  EF47  F006         	goto	u3980
  2531  000C8A                     u3981:
  2532  000C8A  EF57  F006         	goto	l3462
  2533  000C8E                     u3980:
  2534  000C8E                     
  2535                           ; BSR set to: 0
  2536  000C8E  0E66               	movlw	102
  2537  000C90  197A               	xorwf	efgtoa@nmode& (0+255),w,b
  2538  000C92  A4D8               	btfss	status,2,c
  2539  000C94  EF4E  F006         	goto	u3991
  2540  000C98  EF50  F006         	goto	u3990
  2541  000C9C                     u3991:
  2542  000C9C  EF59  F006         	goto	l3464
  2543  000CA0                     u3990:
  2544  000CA0                     
  2545                           ; BSR set to: 0
  2546  000CA0  BF8B               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2547  000CA2  EF57  F006         	goto	u4000
  2548  000CA6  EF55  F006         	goto	u4001
  2549  000CAA                     u4001:
  2550  000CAA  EF59  F006         	goto	l3464
  2551  000CAE                     u4000:
  2552  000CAE                     l3462:
  2553                           
  2554                           ; BSR set to: 0
  2555                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 413:         ++m;
  2556  000CAE  4B6C               	infsnz	efgtoa@m& (0+255),f,b
  2557  000CB0  2B6D               	incf	(efgtoa@m+1)& (0+255),f,b
  2558  000CB2                     l3464:
  2559                           
  2560                           ; BSR set to: 0
  2561                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  2562  000CB2  0E66               	movlw	102
  2563  000CB4  197A               	xorwf	efgtoa@nmode& (0+255),w,b
  2564  000CB6  A4D8               	btfss	status,2,c
  2565  000CB8  EF60  F006         	goto	u4011
  2566  000CBC  EF62  F006         	goto	u4010
  2567  000CC0                     u4011:
  2568  000CC0  EF82  F006         	goto	l3474
  2569  000CC4                     u4010:
  2570  000CC4                     
  2571                           ; BSR set to: 0
  2572                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  2573  000CC4  BF8B               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2574  000CC6  EF69  F006         	goto	u4020
  2575  000CCA  EF67  F006         	goto	u4021
  2576  000CCE                     u4021:
  2577  000CCE  EF75  F006         	goto	l3470
  2578  000CD2                     u4020:
  2579  000CD2                     
  2580                           ; BSR set to: 0
  2581                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  2582  000CD2  0E00               	movlw	0
  2583  000CD4  6F8E               	movwf	efgtoa@u& (0+255),b
  2584  000CD6  0E00               	movlw	0
  2585  000CD8  6F8F               	movwf	(efgtoa@u+1)& (0+255),b
  2586  000CDA  0E80               	movlw	128
  2587  000CDC  6F90               	movwf	(efgtoa@u+2)& (0+255),b
  2588  000CDE  0E3F               	movlw	63
  2589  000CE0  6F91               	movwf	(efgtoa@u+3)& (0+255),b
  2590                           
  2591                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  2592  000CE2  0E00               	movlw	0
  2593  000CE4  6F8B               	movwf	(efgtoa@e+1)& (0+255),b
  2594  000CE6  0E00               	movlw	0
  2595  000CE8  6F8A               	movwf	efgtoa@e& (0+255),b
  2596  000CEA                     l3470:
  2597                           
  2598                           ; BSR set to: 0
  2599                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  2600  000CEA  0E67               	movlw	103
  2601  000CEC  197B               	xorwf	efgtoa@mode& (0+255),w,b
  2602  000CEE  B4D8               	btfsc	status,2,c
  2603  000CF0  EF7C  F006         	goto	u4031
  2604  000CF4  EF7E  F006         	goto	u4030
  2605  000CF8                     u4031:
  2606  000CF8  EF82  F006         	goto	l3474
  2607  000CFC                     u4030:
  2608  000CFC                     
  2609                           ; BSR set to: 0
  2610                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  2611  000CFC  518A               	movf	efgtoa@e& (0+255),w,b
  2612  000CFE  276C               	addwf	efgtoa@m& (0+255),f,b
  2613  000D00  518B               	movf	(efgtoa@e+1)& (0+255),w,b
  2614  000D02  236D               	addwfc	(efgtoa@m+1)& (0+255),f,b
  2615  000D04                     l3474:
  2616                           
  2617                           ; BSR set to: 0
  2618                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  2619  000D04  0E00               	movlw	0
  2620  000D06  6F85               	movwf	(efgtoa@i+1)& (0+255),b
  2621  000D08  0E00               	movlw	0
  2622  000D0A  6F84               	movwf	efgtoa@i& (0+255),b
  2623  000D0C                     
  2624                           ; BSR set to: 0
  2625                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 429:     h = g;
  2626  000D0C  C086  F07C         	movff	efgtoa@g,efgtoa@h
  2627  000D10  C087  F07D         	movff	efgtoa@g+1,efgtoa@h+1
  2628  000D14  C088  F07E         	movff	efgtoa@g+2,efgtoa@h+2
  2629  000D18  C089  F07F         	movff	efgtoa@g+3,efgtoa@h+3
  2630  000D1C                     
  2631                           ; BSR set to: 0
  2632                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  2633  000D1C  C08E  F06E         	movff	efgtoa@u,efgtoa@ou
  2634  000D20  C08F  F06F         	movff	efgtoa@u+1,efgtoa@ou+1
  2635  000D24  C090  F070         	movff	efgtoa@u+2,efgtoa@ou+2
  2636  000D28  C091  F071         	movff	efgtoa@u+3,efgtoa@ou+3
  2637                           
  2638                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  2639  000D2C  EF13  F007         	goto	l3488
  2640  000D30                     l3480:
  2641                           
  2642                           ; BSR set to: 0
  2643                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  2644  000D30  C07C  F001         	movff	efgtoa@h,___fldiv@b
  2645  000D34  C07D  F002         	movff	efgtoa@h+1,___fldiv@b+1
  2646  000D38  C07E  F003         	movff	efgtoa@h+2,___fldiv@b+2
  2647  000D3C  C07F  F004         	movff	efgtoa@h+3,___fldiv@b+3
  2648  000D40  C08E  F005         	movff	efgtoa@u,___fldiv@a
  2649  000D44  C08F  F006         	movff	efgtoa@u+1,___fldiv@a+1
  2650  000D48  C090  F007         	movff	efgtoa@u+2,___fldiv@a+2
  2651  000D4C  C091  F008         	movff	efgtoa@u+3,___fldiv@a+3
  2652  000D50  ECA9  F010         	call	___fldiv	;wreg free
  2653  000D54  C001  F01A         	movff	?___fldiv,floorf@x
  2654  000D58  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  2655  000D5C  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  2656  000D60  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  2657  000D64  EC76  F012         	call	_floorf	;wreg free
  2658  000D68  C01A  F080         	movff	?_floorf,efgtoa@l
  2659  000D6C  C01B  F081         	movff	?_floorf+1,efgtoa@l+1
  2660  000D70  C01C  F082         	movff	?_floorf+2,efgtoa@l+2
  2661  000D74  C01D  F083         	movff	?_floorf+3,efgtoa@l+3
  2662                           
  2663                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  2664  000D78  C080  F001         	movff	efgtoa@l,___fltol@f1
  2665  000D7C  C081  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2666  000D80  C082  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2667  000D84  C083  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2668  000D88  EC04  F015         	call	___fltol	;wreg free
  2669  000D8C  C001  F072         	movff	?___fltol,efgtoa@d
  2670  000D90  C002  F073         	movff	?___fltol+1,efgtoa@d+1
  2671  000D94                     
  2672                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  2673  000D94  C07C  F01A         	movff	efgtoa@h,___flsub@b
  2674  000D98  C07D  F01B         	movff	efgtoa@h+1,___flsub@b+1
  2675  000D9C  C07E  F01C         	movff	efgtoa@h+2,___flsub@b+2
  2676  000DA0  C07F  F01D         	movff	efgtoa@h+3,___flsub@b+3
  2677  000DA4  C08E  F005         	movff	efgtoa@u,___flmul@a
  2678  000DA8  C08F  F006         	movff	efgtoa@u+1,___flmul@a+1
  2679  000DAC  C090  F007         	movff	efgtoa@u+2,___flmul@a+2
  2680  000DB0  C091  F008         	movff	efgtoa@u+3,___flmul@a+3
  2681  000DB4  C080  F001         	movff	efgtoa@l,___flmul@b
  2682  000DB8  C081  F002         	movff	efgtoa@l+1,___flmul@b+1
  2683  000DBC  C082  F003         	movff	efgtoa@l+2,___flmul@b+2
  2684  000DC0  C083  F004         	movff	efgtoa@l+3,___flmul@b+3
  2685  000DC4  EC94  F00E         	call	___flmul	;wreg free
  2686  000DC8  C001  F01E         	movff	?___flmul,___flsub@a
  2687  000DCC  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  2688  000DD0  C003  F020         	movff	?___flmul+2,___flsub@a+2
  2689  000DD4  C004  F021         	movff	?___flmul+3,___flsub@a+3
  2690  000DD8  EC2B  F01B         	call	___flsub	;wreg free
  2691  000DDC  C01A  F07C         	movff	?___flsub,efgtoa@h
  2692  000DE0  C01B  F07D         	movff	?___flsub+1,efgtoa@h+1
  2693  000DE4  C01C  F07E         	movff	?___flsub+2,efgtoa@h+2
  2694  000DE8  C01D  F07F         	movff	?___flsub+3,efgtoa@h+3
  2695  000DEC                     
  2696                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  2697  000DEC  C08E  F001         	movff	efgtoa@u,___fldiv@b
  2698  000DF0  C08F  F002         	movff	efgtoa@u+1,___fldiv@b+1
  2699  000DF4  C090  F003         	movff	efgtoa@u+2,___fldiv@b+2
  2700  000DF8  C091  F004         	movff	efgtoa@u+3,___fldiv@b+3
  2701  000DFC  0E00               	movlw	0
  2702  000DFE  6E05               	movwf	___fldiv@a^0,c
  2703  000E00  0E00               	movlw	0
  2704  000E02  6E06               	movwf	(___fldiv@a+1)^0,c
  2705  000E04  0E20               	movlw	32
  2706  000E06  6E07               	movwf	(___fldiv@a+2)^0,c
  2707  000E08  0E41               	movlw	65
  2708  000E0A  6E08               	movwf	(___fldiv@a+3)^0,c
  2709  000E0C  ECA9  F010         	call	___fldiv	;wreg free
  2710  000E10  C001  F08E         	movff	?___fldiv,efgtoa@u
  2711  000E14  C002  F08F         	movff	?___fldiv+1,efgtoa@u+1
  2712  000E18  C003  F090         	movff	?___fldiv+2,efgtoa@u+2
  2713  000E1C  C004  F091         	movff	?___fldiv+3,efgtoa@u+3
  2714  000E20                     
  2715                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 436:         ++i;
  2716  000E20  0100               	movlb	0	; () banked
  2717  000E22  4B84               	infsnz	efgtoa@i& (0+255),f,b
  2718  000E24  2B85               	incf	(efgtoa@i+1)& (0+255),f,b
  2719  000E26                     l3488:
  2720                           
  2721                           ; BSR set to: 0
  2722                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  2723  000E26  516C               	movf	efgtoa@m& (0+255),w,b
  2724  000E28  5D84               	subwf	efgtoa@i& (0+255),w,b
  2725  000E2A  5185               	movf	(efgtoa@i+1)& (0+255),w,b
  2726  000E2C  0A80               	xorlw	128
  2727  000E2E  6E35               	movwf	??_efgtoa^0,c
  2728  000E30  516D               	movf	(efgtoa@m+1)& (0+255),w,b
  2729  000E32  0A80               	xorlw	128
  2730  000E34  5835               	subwfb	??_efgtoa^0,w,c
  2731  000E36  A0D8               	btfss	status,0,c
  2732  000E38  EF20  F007         	goto	u4041
  2733  000E3C  EF22  F007         	goto	u4040
  2734  000E40                     u4041:
  2735  000E40  EF98  F006         	goto	l3480
  2736  000E44                     u4040:
  2737  000E44                     
  2738                           ; BSR set to: 0
  2739                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  2740  000E44  C08E  F001         	movff	efgtoa@u,___flmul@b
  2741  000E48  C08F  F002         	movff	efgtoa@u+1,___flmul@b+1
  2742  000E4C  C090  F003         	movff	efgtoa@u+2,___flmul@b+2
  2743  000E50  C091  F004         	movff	efgtoa@u+3,___flmul@b+3
  2744  000E54  0E00               	movlw	0
  2745  000E56  6E05               	movwf	___flmul@a^0,c
  2746  000E58  0E00               	movlw	0
  2747  000E5A  6E06               	movwf	(___flmul@a+1)^0,c
  2748  000E5C  0EA0               	movlw	160
  2749  000E5E  6E07               	movwf	(___flmul@a+2)^0,c
  2750  000E60  0E40               	movlw	64
  2751  000E62  6E08               	movwf	(___flmul@a+3)^0,c
  2752  000E64  EC94  F00E         	call	___flmul	;wreg free
  2753  000E68  C001  F080         	movff	?___flmul,efgtoa@l
  2754  000E6C  C002  F081         	movff	?___flmul+1,efgtoa@l+1
  2755  000E70  C003  F082         	movff	?___flmul+2,efgtoa@l+2
  2756  000E74  C004  F083         	movff	?___flmul+3,efgtoa@l+3
  2757  000E78                     
  2758                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  2759  000E78  C07C  F01A         	movff	efgtoa@h,___flge@ff1
  2760  000E7C  C07D  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  2761  000E80  C07E  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  2762  000E84  C07F  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  2763  000E88  C080  F01E         	movff	efgtoa@l,___flge@ff2
  2764  000E8C  C081  F01F         	movff	efgtoa@l+1,___flge@ff2+1
  2765  000E90  C082  F020         	movff	efgtoa@l+2,___flge@ff2+2
  2766  000E94  C083  F021         	movff	efgtoa@l+3,___flge@ff2+3
  2767  000E98  EC87  F015         	call	___flge	;wreg free
  2768  000E9C  B0D8               	btfsc	status,0,c
  2769  000E9E  EF53  F007         	goto	u4051
  2770  000EA2  EF55  F007         	goto	u4050
  2771  000EA6                     u4051:
  2772  000EA6  EF60  F007         	goto	l3496
  2773  000EAA                     u4050:
  2774  000EAA                     
  2775                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  2776  000EAA  0E00               	movlw	0
  2777  000EAC  0100               	movlb	0	; () banked
  2778  000EAE  6F80               	movwf	efgtoa@l& (0+255),b
  2779  000EB0  0E00               	movlw	0
  2780  000EB2  6F81               	movwf	(efgtoa@l+1)& (0+255),b
  2781  000EB4  0E00               	movlw	0
  2782  000EB6  6F82               	movwf	(efgtoa@l+2)& (0+255),b
  2783  000EB8  0E00               	movlw	0
  2784  000EBA  6F83               	movwf	(efgtoa@l+3)& (0+255),b
  2785                           
  2786                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 443:     } else {
  2787  000EBC  EF89  F007         	goto	l3502
  2788  000EC0                     l3496:
  2789                           
  2790                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  2791  000EC0  C07C  F001         	movff	efgtoa@h,___fleq@ff1
  2792  000EC4  C07D  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  2793  000EC8  C07E  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  2794  000ECC  C07F  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  2795  000ED0  C080  F005         	movff	efgtoa@l,___fleq@ff2
  2796  000ED4  C081  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  2797  000ED8  C082  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  2798  000EDC  C083  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  2799  000EE0  EC73  F018         	call	___fleq	;wreg free
  2800  000EE4  A0D8               	btfss	status,0,c
  2801  000EE6  EF77  F007         	goto	u4061
  2802  000EEA  EF79  F007         	goto	u4060
  2803  000EEE                     u4061:
  2804  000EEE  EF89  F007         	goto	l3502
  2805  000EF2                     u4060:
  2806  000EF2  0100               	movlb	0	; () banked
  2807  000EF4  B172               	btfsc	efgtoa@d& (0+255),0,b
  2808  000EF6  EF7F  F007         	goto	u4071
  2809  000EFA  EF81  F007         	goto	u4070
  2810  000EFE                     u4071:
  2811  000EFE  EF89  F007         	goto	l3502
  2812  000F02                     u4070:
  2813  000F02                     
  2814                           ; BSR set to: 0
  2815                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  2816  000F02  0E00               	movlw	0
  2817  000F04  6F80               	movwf	efgtoa@l& (0+255),b
  2818  000F06  0E00               	movlw	0
  2819  000F08  6F81               	movwf	(efgtoa@l+1)& (0+255),b
  2820  000F0A  0E00               	movlw	0
  2821  000F0C  6F82               	movwf	(efgtoa@l+2)& (0+255),b
  2822  000F0E  0E00               	movlw	0
  2823  000F10  6F83               	movwf	(efgtoa@l+3)& (0+255),b
  2824  000F12                     l3502:
  2825                           
  2826                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  2827  000F12  C086  F001         	movff	efgtoa@g,___fladd@b
  2828  000F16  C087  F002         	movff	efgtoa@g+1,___fladd@b+1
  2829  000F1A  C088  F003         	movff	efgtoa@g+2,___fladd@b+2
  2830  000F1E  C089  F004         	movff	efgtoa@g+3,___fladd@b+3
  2831  000F22  C080  F005         	movff	efgtoa@l,___fladd@a
  2832  000F26  C081  F006         	movff	efgtoa@l+1,___fladd@a+1
  2833  000F2A  C082  F007         	movff	efgtoa@l+2,___fladd@a+2
  2834  000F2E  C083  F008         	movff	efgtoa@l+3,___fladd@a+3
  2835  000F32  EC1D  F00A         	call	___fladd	;wreg free
  2836  000F36  C001  F07C         	movff	?___fladd,efgtoa@h
  2837  000F3A  C002  F07D         	movff	?___fladd+1,efgtoa@h+1
  2838  000F3E  C003  F07E         	movff	?___fladd+2,efgtoa@h+2
  2839  000F42  C004  F07F         	movff	?___fladd+3,efgtoa@h+3
  2840  000F46                     
  2841                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  2842  000F46  C07C  F01A         	movff	efgtoa@h,___flge@ff1
  2843  000F4A  C07D  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  2844  000F4E  C07E  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  2845  000F52  C07F  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  2846  000F56  0E00               	movlw	0
  2847  000F58  6E05               	movwf	___flmul@a^0,c
  2848  000F5A  0E00               	movlw	0
  2849  000F5C  6E06               	movwf	(___flmul@a+1)^0,c
  2850  000F5E  0E20               	movlw	32
  2851  000F60  6E07               	movwf	(___flmul@a+2)^0,c
  2852  000F62  0E41               	movlw	65
  2853  000F64  6E08               	movwf	(___flmul@a+3)^0,c
  2854  000F66  C06E  F001         	movff	efgtoa@ou,___flmul@b
  2855  000F6A  C06F  F002         	movff	efgtoa@ou+1,___flmul@b+1
  2856  000F6E  C070  F003         	movff	efgtoa@ou+2,___flmul@b+2
  2857  000F72  C071  F004         	movff	efgtoa@ou+3,___flmul@b+3
  2858  000F76  EC94  F00E         	call	___flmul	;wreg free
  2859  000F7A  C001  F01E         	movff	?___flmul,___flge@ff2
  2860  000F7E  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  2861  000F82  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  2862  000F86  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  2863  000F8A  EC87  F015         	call	___flge	;wreg free
  2864  000F8E  A0D8               	btfss	status,0,c
  2865  000F90  EFCC  F007         	goto	u4081
  2866  000F94  EFCE  F007         	goto	u4080
  2867  000F98                     u4081:
  2868  000F98  EFF7  F007         	goto	l3514
  2869  000F9C                     u4080:
  2870  000F9C                     
  2871                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 454:   e++;
  2872  000F9C  0100               	movlb	0	; () banked
  2873  000F9E  4B8A               	infsnz	efgtoa@e& (0+255),f,b
  2874  000FA0  2B8B               	incf	(efgtoa@e+1)& (0+255),f,b
  2875  000FA2                     
  2876                           ; BSR set to: 0
  2877                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  2878  000FA2  C06E  F001         	movff	efgtoa@ou,___flmul@b
  2879  000FA6  C06F  F002         	movff	efgtoa@ou+1,___flmul@b+1
  2880  000FAA  C070  F003         	movff	efgtoa@ou+2,___flmul@b+2
  2881  000FAE  C071  F004         	movff	efgtoa@ou+3,___flmul@b+3
  2882  000FB2  0E00               	movlw	0
  2883  000FB4  6E05               	movwf	___flmul@a^0,c
  2884  000FB6  0E00               	movlw	0
  2885  000FB8  6E06               	movwf	(___flmul@a+1)^0,c
  2886  000FBA  0E20               	movlw	32
  2887  000FBC  6E07               	movwf	(___flmul@a+2)^0,c
  2888  000FBE  0E41               	movlw	65
  2889  000FC0  6E08               	movwf	(___flmul@a+3)^0,c
  2890  000FC2  EC94  F00E         	call	___flmul	;wreg free
  2891  000FC6  C001  F06E         	movff	?___flmul,efgtoa@ou
  2892  000FCA  C002  F06F         	movff	?___flmul+1,efgtoa@ou+1
  2893  000FCE  C003  F070         	movff	?___flmul+2,efgtoa@ou+2
  2894  000FD2  C004  F071         	movff	?___flmul+3,efgtoa@ou+3
  2895  000FD6                     
  2896                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  2897  000FD6  0E66               	movlw	102
  2898  000FD8  0100               	movlb	0	; () banked
  2899  000FDA  197A               	xorwf	efgtoa@nmode& (0+255),w,b
  2900  000FDC  A4D8               	btfss	status,2,c
  2901  000FDE  EFF3  F007         	goto	u4091
  2902  000FE2  EFF5  F007         	goto	u4090
  2903  000FE6                     u4091:
  2904  000FE6  EFF7  F007         	goto	l3514
  2905  000FEA                     u4090:
  2906  000FEA                     
  2907                           ; BSR set to: 0
  2908                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 458:    m++;
  2909  000FEA  4B6C               	infsnz	efgtoa@m& (0+255),f,b
  2910  000FEC  2B6D               	incf	(efgtoa@m+1)& (0+255),f,b
  2911  000FEE                     l3514:
  2912                           
  2913                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  2914  000FEE  C06E  F08E         	movff	efgtoa@ou,efgtoa@u
  2915  000FF2  C06F  F08F         	movff	efgtoa@ou+1,efgtoa@u+1
  2916  000FF6  C070  F090         	movff	efgtoa@ou+2,efgtoa@u+2
  2917  000FFA  C071  F091         	movff	efgtoa@ou+3,efgtoa@u+3
  2918  000FFE                     
  2919                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  2920  000FFE  0E65               	movlw	101
  2921  001000  0100               	movlb	0	; () banked
  2922  001002  197A               	xorwf	efgtoa@nmode& (0+255),w,b
  2923  001004  B4D8               	btfsc	status,2,c
  2924  001006  EF07  F008         	goto	u4101
  2925  00100A  EF09  F008         	goto	u4100
  2926  00100E                     u4101:
  2927  00100E  EF0F  F008         	goto	l3520
  2928  001012                     u4100:
  2929  001012                     
  2930                           ; BSR set to: 0
  2931  001012  C08A  F06A         	movff	efgtoa@e,efgtoa@ne
  2932  001016  C08B  F06B         	movff	efgtoa@e+1,efgtoa@ne+1
  2933  00101A  EF13  F008         	goto	l904
  2934  00101E                     l3520:
  2935                           
  2936                           ; BSR set to: 0
  2937  00101E  0E00               	movlw	0
  2938  001020  6F6B               	movwf	(efgtoa@ne+1)& (0+255),b
  2939  001022  0E00               	movlw	0
  2940  001024  6F6A               	movwf	efgtoa@ne& (0+255),b
  2941  001026                     l904:
  2942                           
  2943                           ; BSR set to: 0
  2944                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  2945  001026  0E00               	movlw	0
  2946  001028  6F69               	movwf	(efgtoa@pp+1)& (0+255),b
  2947  00102A  0E00               	movlw	0
  2948  00102C  6F68               	movwf	efgtoa@pp& (0+255),b
  2949                           
  2950                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  2951  00102E  0E00               	movlw	0
  2952  001030  6F67               	movwf	(efgtoa@t+1)& (0+255),b
  2953  001032  0E00               	movlw	0
  2954  001034  6F66               	movwf	efgtoa@t& (0+255),b
  2955                           
  2956                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  2957  001036  0E00               	movlw	0
  2958  001038  6F85               	movwf	(efgtoa@i+1)& (0+255),b
  2959  00103A  0E00               	movlw	0
  2960  00103C  6F84               	movwf	efgtoa@i& (0+255),b
  2961                           
  2962                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  2963  00103E  EF0F  F009         	goto	l3570
  2964  001042                     l3522:
  2965                           
  2966                           ; BSR set to: 0
  2967                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  2968  001042  C07C  F001         	movff	efgtoa@h,___fldiv@b
  2969  001046  C07D  F002         	movff	efgtoa@h+1,___fldiv@b+1
  2970  00104A  C07E  F003         	movff	efgtoa@h+2,___fldiv@b+2
  2971  00104E  C07F  F004         	movff	efgtoa@h+3,___fldiv@b+3
  2972  001052  C08E  F005         	movff	efgtoa@u,___fldiv@a
  2973  001056  C08F  F006         	movff	efgtoa@u+1,___fldiv@a+1
  2974  00105A  C090  F007         	movff	efgtoa@u+2,___fldiv@a+2
  2975  00105E  C091  F008         	movff	efgtoa@u+3,___fldiv@a+3
  2976  001062  ECA9  F010         	call	___fldiv	;wreg free
  2977  001066  C001  F01A         	movff	?___fldiv,floorf@x
  2978  00106A  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  2979  00106E  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  2980  001072  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  2981  001076  EC76  F012         	call	_floorf	;wreg free
  2982  00107A  C01A  F080         	movff	?_floorf,efgtoa@l
  2983  00107E  C01B  F081         	movff	?_floorf+1,efgtoa@l+1
  2984  001082  C01C  F082         	movff	?_floorf+2,efgtoa@l+2
  2985  001086  C01D  F083         	movff	?_floorf+3,efgtoa@l+3
  2986                           
  2987                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  2988  00108A  C080  F001         	movff	efgtoa@l,___fltol@f1
  2989  00108E  C081  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2990  001092  C082  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2991  001096  C083  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2992  00109A  EC04  F015         	call	___fltol	;wreg free
  2993  00109E  C001  F072         	movff	?___fltol,efgtoa@d
  2994  0010A2  C002  F073         	movff	?___fltol+1,efgtoa@d+1
  2995  0010A6                     
  2996                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  2997  0010A6  B85E               	btfsc	_flags^0,4,c
  2998  0010A8  EF58  F008         	goto	u4111
  2999  0010AC  EF5A  F008         	goto	u4110
  3000  0010B0                     u4111:
  3001  0010B0  EF78  F008         	goto	l3534
  3002  0010B4                     u4110:
  3003  0010B4  0100               	movlb	0	; () banked
  3004  0010B6  5172               	movf	efgtoa@d& (0+255),w,b
  3005  0010B8  1173               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3006  0010BA  A4D8               	btfss	status,2,c
  3007  0010BC  EF62  F008         	goto	u4121
  3008  0010C0  EF64  F008         	goto	u4120
  3009  0010C4                     u4121:
  3010  0010C4  EF78  F008         	goto	l3534
  3011  0010C8                     u4120:
  3012  0010C8                     
  3013                           ; BSR set to: 0
  3014  0010C8  0E67               	movlw	103
  3015  0010CA  197B               	xorwf	efgtoa@mode& (0+255),w,b
  3016  0010CC  A4D8               	btfss	status,2,c
  3017  0010CE  EF6B  F008         	goto	u4131
  3018  0010D2  EF6D  F008         	goto	u4130
  3019  0010D6                     u4131:
  3020  0010D6  EF78  F008         	goto	l3534
  3021  0010DA                     u4130:
  3022  0010DA                     
  3023                           ; BSR set to: 0
  3024  0010DA  BF6B               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3025  0010DC  EF74  F008         	goto	u4140
  3026  0010E0  EF72  F008         	goto	u4141
  3027  0010E4                     u4141:
  3028  0010E4  EF78  F008         	goto	l3534
  3029  0010E8                     u4140:
  3030  0010E8                     
  3031                           ; BSR set to: 0
  3032                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  3033  0010E8  4B66               	infsnz	efgtoa@t& (0+255),f,b
  3034  0010EA  2B67               	incf	(efgtoa@t+1)& (0+255),f,b
  3035                           
  3036                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  3037  0010EC  EFC3  F008         	goto	l3562
  3038  0010F0                     l3534:
  3039                           
  3040                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  3041  0010F0  0100               	movlb	0	; () banked
  3042  0010F2  5168               	movf	efgtoa@pp& (0+255),w,b
  3043  0010F4  1169               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3044  0010F6  A4D8               	btfss	status,2,c
  3045  0010F8  EF80  F008         	goto	u4151
  3046  0010FC  EF82  F008         	goto	u4150
  3047  001100                     u4151:
  3048  001100  EFAC  F008         	goto	l3554
  3049  001104                     u4150:
  3050  001104                     
  3051                           ; BSR set to: 0
  3052  001104  BF6B               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3053  001106  EF89  F008         	goto	u4160
  3054  00110A  EF87  F008         	goto	u4161
  3055  00110E                     u4161:
  3056  00110E  EFAC  F008         	goto	l3554
  3057  001112                     u4160:
  3058  001112                     
  3059                           ; BSR set to: 0
  3060                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  3061  001112  0E00               	movlw	low _dbuf
  3062  001114  258C               	addwf	efgtoa@n& (0+255),w,b
  3063  001116  6ED9               	movwf	fsr2l,c
  3064  001118  0E01               	movlw	high _dbuf
  3065  00111A  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3066  00111C  6EDA               	movwf	fsr2h,c
  3067  00111E  0E2E               	movlw	46
  3068  001120  6EDF               	movwf	indf2,c
  3069  001122                     
  3070                           ; BSR set to: 0
  3071  001122  4B8C               	infsnz	efgtoa@n& (0+255),f,b
  3072  001124  2B8D               	incf	(efgtoa@n+1)& (0+255),f,b
  3073  001126                     
  3074                           ; BSR set to: 0
  3075                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  3076  001126  0778               	decf	efgtoa@w& (0+255),f,b
  3077  001128  A0D8               	btfss	status,0,c
  3078  00112A  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  3079  00112C                     
  3080                           ; BSR set to: 0
  3081                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  3082  00112C  0E00               	movlw	0
  3083  00112E  6F69               	movwf	(efgtoa@pp+1)& (0+255),b
  3084  001130  0E01               	movlw	1
  3085  001132  6F68               	movwf	efgtoa@pp& (0+255),b
  3086  001134  EFAC  F008         	goto	l3554
  3087  001138                     l3546:
  3088                           
  3089                           ; BSR set to: 0
  3090                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  3091  001138  0E00               	movlw	low _dbuf
  3092  00113A  258C               	addwf	efgtoa@n& (0+255),w,b
  3093  00113C  6ED9               	movwf	fsr2l,c
  3094  00113E  0E01               	movlw	high _dbuf
  3095  001140  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3096  001142  6EDA               	movwf	fsr2h,c
  3097  001144  0E30               	movlw	48
  3098  001146  6EDF               	movwf	indf2,c
  3099  001148                     
  3100                           ; BSR set to: 0
  3101  001148  4B8C               	infsnz	efgtoa@n& (0+255),f,b
  3102  00114A  2B8D               	incf	(efgtoa@n+1)& (0+255),f,b
  3103  00114C                     
  3104                           ; BSR set to: 0
  3105                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  3106  00114C  0778               	decf	efgtoa@w& (0+255),f,b
  3107  00114E  A0D8               	btfss	status,0,c
  3108  001150  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  3109  001152                     
  3110                           ; BSR set to: 0
  3111                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  3112  001152  0766               	decf	efgtoa@t& (0+255),f,b
  3113  001154  A0D8               	btfss	status,0,c
  3114  001156  0767               	decf	(efgtoa@t+1)& (0+255),f,b
  3115  001158                     l3554:
  3116                           
  3117                           ; BSR set to: 0
  3118                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  3119  001158  5166               	movf	efgtoa@t& (0+255),w,b
  3120  00115A  1167               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3121  00115C  A4D8               	btfss	status,2,c
  3122  00115E  EFB3  F008         	goto	u4171
  3123  001162  EFB5  F008         	goto	u4170
  3124  001166                     u4171:
  3125  001166  EF9C  F008         	goto	l3546
  3126  00116A                     u4170:
  3127  00116A                     
  3128                           ; BSR set to: 0
  3129                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3130  00116A  0E00               	movlw	low _dbuf
  3131  00116C  258C               	addwf	efgtoa@n& (0+255),w,b
  3132  00116E  6ED9               	movwf	fsr2l,c
  3133  001170  0E01               	movlw	high _dbuf
  3134  001172  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3135  001174  6EDA               	movwf	fsr2h,c
  3136  001176  5172               	movf	efgtoa@d& (0+255),w,b
  3137  001178  0F30               	addlw	48
  3138  00117A  6EDF               	movwf	indf2,c
  3139  00117C                     
  3140                           ; BSR set to: 0
  3141  00117C  4B8C               	infsnz	efgtoa@n& (0+255),f,b
  3142  00117E  2B8D               	incf	(efgtoa@n+1)& (0+255),f,b
  3143  001180                     
  3144                           ; BSR set to: 0
  3145                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  3146  001180  0778               	decf	efgtoa@w& (0+255),f,b
  3147  001182  A0D8               	btfss	status,0,c
  3148  001184  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  3149  001186                     l3562:
  3150                           
  3151                           ; BSR set to: 0
  3152                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  3153  001186  C07C  F01A         	movff	efgtoa@h,___flsub@b
  3154  00118A  C07D  F01B         	movff	efgtoa@h+1,___flsub@b+1
  3155  00118E  C07E  F01C         	movff	efgtoa@h+2,___flsub@b+2
  3156  001192  C07F  F01D         	movff	efgtoa@h+3,___flsub@b+3
  3157  001196  C08E  F005         	movff	efgtoa@u,___flmul@a
  3158  00119A  C08F  F006         	movff	efgtoa@u+1,___flmul@a+1
  3159  00119E  C090  F007         	movff	efgtoa@u+2,___flmul@a+2
  3160  0011A2  C091  F008         	movff	efgtoa@u+3,___flmul@a+3
  3161  0011A6  C080  F001         	movff	efgtoa@l,___flmul@b
  3162  0011AA  C081  F002         	movff	efgtoa@l+1,___flmul@b+1
  3163  0011AE  C082  F003         	movff	efgtoa@l+2,___flmul@b+2
  3164  0011B2  C083  F004         	movff	efgtoa@l+3,___flmul@b+3
  3165  0011B6  EC94  F00E         	call	___flmul	;wreg free
  3166  0011BA  C001  F01E         	movff	?___flmul,___flsub@a
  3167  0011BE  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  3168  0011C2  C003  F020         	movff	?___flmul+2,___flsub@a+2
  3169  0011C6  C004  F021         	movff	?___flmul+3,___flsub@a+3
  3170  0011CA  EC2B  F01B         	call	___flsub	;wreg free
  3171  0011CE  C01A  F07C         	movff	?___flsub,efgtoa@h
  3172  0011D2  C01B  F07D         	movff	?___flsub+1,efgtoa@h+1
  3173  0011D6  C01C  F07E         	movff	?___flsub+2,efgtoa@h+2
  3174  0011DA  C01D  F07F         	movff	?___flsub+3,efgtoa@h+3
  3175  0011DE                     
  3176                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  3177  0011DE  C08E  F001         	movff	efgtoa@u,___fldiv@b
  3178  0011E2  C08F  F002         	movff	efgtoa@u+1,___fldiv@b+1
  3179  0011E6  C090  F003         	movff	efgtoa@u+2,___fldiv@b+2
  3180  0011EA  C091  F004         	movff	efgtoa@u+3,___fldiv@b+3
  3181  0011EE  0E00               	movlw	0
  3182  0011F0  6E05               	movwf	___fldiv@a^0,c
  3183  0011F2  0E00               	movlw	0
  3184  0011F4  6E06               	movwf	(___fldiv@a+1)^0,c
  3185  0011F6  0E20               	movlw	32
  3186  0011F8  6E07               	movwf	(___fldiv@a+2)^0,c
  3187  0011FA  0E41               	movlw	65
  3188  0011FC  6E08               	movwf	(___fldiv@a+3)^0,c
  3189  0011FE  ECA9  F010         	call	___fldiv	;wreg free
  3190  001202  C001  F08E         	movff	?___fldiv,efgtoa@u
  3191  001206  C002  F08F         	movff	?___fldiv+1,efgtoa@u+1
  3192  00120A  C003  F090         	movff	?___fldiv+2,efgtoa@u+2
  3193  00120E  C004  F091         	movff	?___fldiv+3,efgtoa@u+3
  3194  001212                     
  3195                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  3196  001212  0100               	movlb	0	; () banked
  3197  001214  076A               	decf	efgtoa@ne& (0+255),f,b
  3198  001216  A0D8               	btfss	status,0,c
  3199  001218  076B               	decf	(efgtoa@ne+1)& (0+255),f,b
  3200  00121A                     
  3201                           ; BSR set to: 0
  3202                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 490:         ++i;
  3203  00121A  4B84               	infsnz	efgtoa@i& (0+255),f,b
  3204  00121C  2B85               	incf	(efgtoa@i+1)& (0+255),f,b
  3205  00121E                     l3570:
  3206                           
  3207                           ; BSR set to: 0
  3208                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3209  00121E  516C               	movf	efgtoa@m& (0+255),w,b
  3210  001220  5D84               	subwf	efgtoa@i& (0+255),w,b
  3211  001222  5185               	movf	(efgtoa@i+1)& (0+255),w,b
  3212  001224  0A80               	xorlw	128
  3213  001226  6E35               	movwf	??_efgtoa^0,c
  3214  001228  516D               	movf	(efgtoa@m+1)& (0+255),w,b
  3215  00122A  0A80               	xorlw	128
  3216  00122C  5835               	subwfb	??_efgtoa^0,w,c
  3217  00122E  B0D8               	btfsc	status,0,c
  3218  001230  EF1C  F009         	goto	u4181
  3219  001234  EF1E  F009         	goto	u4180
  3220  001238                     u4181:
  3221  001238  EF2C  F009         	goto	l3574
  3222  00123C                     u4180:
  3223  00123C                     
  3224                           ; BSR set to: 0
  3225  00123C  BF8D               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3226  00123E  EF2A  F009         	goto	u4191
  3227  001242  518D               	movf	(efgtoa@n+1)& (0+255),w,b
  3228  001244  E109               	bnz	u4190
  3229  001246  0E4B               	movlw	75
  3230  001248  5D8C               	subwf	efgtoa@n& (0+255),w,b
  3231  00124A  A0D8               	btfss	status,0,c
  3232  00124C  EF2A  F009         	goto	u4191
  3233  001250  EF2C  F009         	goto	u4190
  3234  001254                     u4191:
  3235  001254  EF21  F008         	goto	l3522
  3236  001258                     u4190:
  3237  001258                     l3574:
  3238                           
  3239                           ; BSR set to: 0
  3240                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  3241  001258  5168               	movf	efgtoa@pp& (0+255),w,b
  3242  00125A  1169               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3243  00125C  A4D8               	btfss	status,2,c
  3244  00125E  EF33  F009         	goto	u4201
  3245  001262  EF35  F009         	goto	u4200
  3246  001266                     u4201:
  3247  001266  EF46  F009         	goto	l3582
  3248  00126A                     u4200:
  3249  00126A                     
  3250                           ; BSR set to: 0
  3251  00126A  A85E               	btfss	_flags^0,4,c
  3252  00126C  EF3A  F009         	goto	u4211
  3253  001270  EF3C  F009         	goto	u4210
  3254  001274                     u4211:
  3255  001274  EF46  F009         	goto	l3582
  3256  001278                     u4210:
  3257  001278                     
  3258                           ; BSR set to: 0
  3259                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  3260  001278  0E00               	movlw	low _dbuf
  3261  00127A  258C               	addwf	efgtoa@n& (0+255),w,b
  3262  00127C  6ED9               	movwf	fsr2l,c
  3263  00127E  0E01               	movlw	high _dbuf
  3264  001280  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3265  001282  6EDA               	movwf	fsr2h,c
  3266  001284  0E2E               	movlw	46
  3267  001286  6EDF               	movwf	indf2,c
  3268  001288                     
  3269                           ; BSR set to: 0
  3270  001288  4B8C               	infsnz	efgtoa@n& (0+255),f,b
  3271  00128A  2B8D               	incf	(efgtoa@n+1)& (0+255),f,b
  3272  00128C                     l3582:
  3273                           
  3274                           ; BSR set to: 0
  3275                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  3276  00128C  0E00               	movlw	low _dbuf
  3277  00128E  258C               	addwf	efgtoa@n& (0+255),w,b
  3278  001290  6ED9               	movwf	fsr2l,c
  3279  001292  0E01               	movlw	high _dbuf
  3280  001294  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3281  001296  6EDA               	movwf	fsr2h,c
  3282  001298  0E00               	movlw	0
  3283  00129A  6EDF               	movwf	indf2,c
  3284  00129C                     
  3285                           ; BSR set to: 0
  3286                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  3287  00129C  0E65               	movlw	101
  3288  00129E  197A               	xorwf	efgtoa@nmode& (0+255),w,b
  3289  0012A0  A4D8               	btfss	status,2,c
  3290  0012A2  EF55  F009         	goto	u4221
  3291  0012A6  EF57  F009         	goto	u4220
  3292  0012AA                     u4221:
  3293  0012AA  EFBC  F004         	goto	l3384
  3294  0012AE                     u4220:
  3295  0012AE                     
  3296                           ; BSR set to: 0
  3297                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  3298  0012AE  0E00               	movlw	0
  3299  0012B0  6F85               	movwf	(efgtoa@i+1)& (0+255),b
  3300  0012B2  0E4F               	movlw	79
  3301  0012B4  6F84               	movwf	efgtoa@i& (0+255),b
  3302  0012B6                     
  3303                           ; BSR set to: 0
  3304                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  3305  0012B6  0E00               	movlw	low _dbuf
  3306  0012B8  2584               	addwf	efgtoa@i& (0+255),w,b
  3307  0012BA  6ED9               	movwf	fsr2l,c
  3308  0012BC  0E01               	movlw	high _dbuf
  3309  0012BE  2185               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3310  0012C0  6EDA               	movwf	fsr2h,c
  3311  0012C2  0E00               	movlw	0
  3312  0012C4  6EDF               	movwf	indf2,c
  3313  0012C6                     
  3314                           ; BSR set to: 0
  3315                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  3316  0012C6  0E00               	movlw	0
  3317  0012C8  6F75               	movwf	(efgtoa@sign+1)& (0+255),b
  3318  0012CA  0E00               	movlw	0
  3319  0012CC  6F74               	movwf	efgtoa@sign& (0+255),b
  3320  0012CE                     
  3321                           ; BSR set to: 0
  3322                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  3323  0012CE  BF8B               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3324  0012D0  EF6E  F009         	goto	u4230
  3325  0012D4  EF6C  F009         	goto	u4231
  3326  0012D8                     u4231:
  3327  0012D8  EF76  F009         	goto	l3598
  3328  0012DC                     u4230:
  3329  0012DC                     
  3330                           ; BSR set to: 0
  3331                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  3332  0012DC  0E00               	movlw	0
  3333  0012DE  6F75               	movwf	(efgtoa@sign+1)& (0+255),b
  3334  0012E0  0E01               	movlw	1
  3335  0012E2  6F74               	movwf	efgtoa@sign& (0+255),b
  3336  0012E4                     
  3337                           ; BSR set to: 0
  3338                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  3339  0012E4  6D8A               	negf	efgtoa@e& (0+255),b
  3340  0012E6  1F8B               	comf	(efgtoa@e+1)& (0+255),f,b
  3341  0012E8  B0D8               	btfsc	status,0,c
  3342  0012EA  2B8B               	incf	(efgtoa@e+1)& (0+255),f,b
  3343  0012EC                     l3598:
  3344                           
  3345                           ; BSR set to: 0
  3346                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  3347  0012EC  0E00               	movlw	0
  3348  0012EE  6F77               	movwf	(efgtoa@p+1)& (0+255),b
  3349  0012F0  0E02               	movlw	2
  3350  0012F2  6F76               	movwf	efgtoa@p& (0+255),b
  3351                           
  3352                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  3353  0012F4  EFA7  F009         	goto	l3610
  3354  0012F8                     l3600:
  3355                           
  3356                           ; BSR set to: 0
  3357                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  3358  0012F8  0784               	decf	efgtoa@i& (0+255),f,b
  3359  0012FA  A0D8               	btfss	status,0,c
  3360  0012FC  0785               	decf	(efgtoa@i+1)& (0+255),f,b
  3361  0012FE                     
  3362                           ; BSR set to: 0
  3363                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  3364  0012FE  0E00               	movlw	low _dbuf
  3365  001300  2584               	addwf	efgtoa@i& (0+255),w,b
  3366  001302  6ED9               	movwf	fsr2l,c
  3367  001304  0E01               	movlw	high _dbuf
  3368  001306  2185               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3369  001308  6EDA               	movwf	fsr2h,c
  3370  00130A  C08A  F001         	movff	efgtoa@e,___awmod@dividend
  3371  00130E  C08B  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  3372  001312  0E00               	movlw	0
  3373  001314  6E04               	movwf	(___awmod@divisor+1)^0,c
  3374  001316  0E0A               	movlw	10
  3375  001318  6E03               	movwf	___awmod@divisor^0,c
  3376  00131A  EC1B  F018         	call	___awmod	;wreg free
  3377  00131E  5001               	movf	?___awmod^0,w,c
  3378  001320  0F30               	addlw	48
  3379  001322  6EDF               	movwf	indf2,c
  3380  001324                     
  3381                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  3382  001324  C08A  F001         	movff	efgtoa@e,___awdiv@dividend
  3383  001328  C08B  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  3384  00132C  0E00               	movlw	0
  3385  00132E  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3386  001330  0E0A               	movlw	10
  3387  001332  6E03               	movwf	___awdiv@divisor^0,c
  3388  001334  EC58  F017         	call	___awdiv	;wreg free
  3389  001338  C001  F08A         	movff	?___awdiv,efgtoa@e
  3390  00133C  C002  F08B         	movff	?___awdiv+1,efgtoa@e+1
  3391  001340                     
  3392                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  3393  001340  0100               	movlb	0	; () banked
  3394  001342  0776               	decf	efgtoa@p& (0+255),f,b
  3395  001344  A0D8               	btfss	status,0,c
  3396  001346  0777               	decf	(efgtoa@p+1)& (0+255),f,b
  3397  001348                     
  3398                           ; BSR set to: 0
  3399                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  3400  001348  0778               	decf	efgtoa@w& (0+255),f,b
  3401  00134A  A0D8               	btfss	status,0,c
  3402  00134C  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  3403  00134E                     l3610:
  3404                           
  3405                           ; BSR set to: 0
  3406                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  3407  00134E  518A               	movf	efgtoa@e& (0+255),w,b
  3408  001350  118B               	iorwf	(efgtoa@e+1)& (0+255),w,b
  3409  001352  A4D8               	btfss	status,2,c
  3410  001354  EFAE  F009         	goto	u4241
  3411  001358  EFB0  F009         	goto	u4240
  3412  00135C                     u4241:
  3413  00135C  EF7C  F009         	goto	l3600
  3414  001360                     u4240:
  3415  001360                     
  3416                           ; BSR set to: 0
  3417  001360  BF77               	btfsc	(efgtoa@p+1)& (0+255),7,b
  3418  001362  EFBD  F009         	goto	u4250
  3419  001366  5177               	movf	(efgtoa@p+1)& (0+255),w,b
  3420  001368  E106               	bnz	u4251
  3421  00136A  0576               	decf	efgtoa@p& (0+255),w,b
  3422  00136C  B0D8               	btfsc	status,0,c
  3423  00136E  EFBB  F009         	goto	u4251
  3424  001372  EFBD  F009         	goto	u4250
  3425  001376                     u4251:
  3426  001376  EF7C  F009         	goto	l3600
  3427  00137A                     u4250:
  3428  00137A                     
  3429                           ; BSR set to: 0
  3430                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 514:         --i;
  3431  00137A  0784               	decf	efgtoa@i& (0+255),f,b
  3432  00137C  A0D8               	btfss	status,0,c
  3433  00137E  0785               	decf	(efgtoa@i+1)& (0+255),f,b
  3434  001380                     
  3435                           ; BSR set to: 0
  3436                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  3437  001380  5174               	movf	efgtoa@sign& (0+255),w,b
  3438  001382  1175               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3439  001384  A4D8               	btfss	status,2,c
  3440  001386  EFC7  F009         	goto	u4261
  3441  00138A  EFC9  F009         	goto	u4260
  3442  00138E                     u4261:
  3443  00138E  EFCF  F009         	goto	l3620
  3444  001392                     u4260:
  3445  001392                     
  3446                           ; BSR set to: 0
  3447  001392  0E00               	movlw	0
  3448  001394  6F63               	movwf	(_efgtoa$1007+1)& (0+255),b
  3449  001396  0E2B               	movlw	43
  3450  001398  6F62               	movwf	_efgtoa$1007& (0+255),b
  3451  00139A  EFD3  F009         	goto	l3622
  3452  00139E                     l3620:
  3453                           
  3454                           ; BSR set to: 0
  3455  00139E  0E00               	movlw	0
  3456  0013A0  6F63               	movwf	(_efgtoa$1007+1)& (0+255),b
  3457  0013A2  0E2D               	movlw	45
  3458  0013A4  6F62               	movwf	_efgtoa$1007& (0+255),b
  3459  0013A6                     l3622:
  3460                           
  3461                           ; BSR set to: 0
  3462  0013A6  0E00               	movlw	low _dbuf
  3463  0013A8  2584               	addwf	efgtoa@i& (0+255),w,b
  3464  0013AA  6ED9               	movwf	fsr2l,c
  3465  0013AC  0E01               	movlw	high _dbuf
  3466  0013AE  2185               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3467  0013B0  6EDA               	movwf	fsr2h,c
  3468  0013B2  C062  FFDF         	movff	_efgtoa$1007,indf2
  3469  0013B6                     
  3470                           ; BSR set to: 0
  3471                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 516:         --w;
  3472  0013B6  0778               	decf	efgtoa@w& (0+255),f,b
  3473  0013B8  A0D8               	btfss	status,0,c
  3474  0013BA  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  3475  0013BC                     
  3476                           ; BSR set to: 0
  3477                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 517:         --i;
  3478  0013BC  0784               	decf	efgtoa@i& (0+255),f,b
  3479  0013BE  A0D8               	btfss	status,0,c
  3480  0013C0  0785               	decf	(efgtoa@i+1)& (0+255),f,b
  3481  0013C2                     
  3482                           ; BSR set to: 0
  3483  0013C2  0EBF               	movlw	191
  3484  0013C4  6E35               	movwf	??_efgtoa^0,c
  3485  0013C6  0EFF               	movlw	255
  3486  0013C8  6E36               	movwf	(??_efgtoa+1)^0,c
  3487  0013CA  5034               	movf	efgtoa@c^0,w,c
  3488  0013CC  6E37               	movwf	(??_efgtoa+2)^0,c
  3489  0013CE  6A38               	clrf	(??_efgtoa+3)^0,c
  3490  0013D0  5035               	movf	??_efgtoa^0,w,c
  3491  0013D2  2637               	addwf	(??_efgtoa+2)^0,f,c
  3492  0013D4  5036               	movf	(??_efgtoa+1)^0,w,c
  3493  0013D6  2238               	addwfc	(??_efgtoa+3)^0,f,c
  3494  0013D8  5038               	movf	(??_efgtoa+3)^0,w,c
  3495  0013DA  E109               	bnz	u4270
  3496  0013DC  0E1A               	movlw	26
  3497  0013DE  5C37               	subwf	(??_efgtoa+2)^0,w,c
  3498  0013E0  A0D8               	btfss	status,0,c
  3499  0013E2  EFF5  F009         	goto	u4271
  3500  0013E6  EFF7  F009         	goto	u4270
  3501  0013EA                     u4271:
  3502  0013EA  EFFD  F009         	goto	l3634
  3503  0013EE                     u4270:
  3504  0013EE                     
  3505                           ; BSR set to: 0
  3506  0013EE  0E00               	movlw	0
  3507  0013F0  6F65               	movwf	(_efgtoa$1008+1)& (0+255),b
  3508  0013F2  0E65               	movlw	101
  3509  0013F4  6F64               	movwf	_efgtoa$1008& (0+255),b
  3510  0013F6  EF01  F00A         	goto	l3636
  3511  0013FA                     l3634:
  3512                           
  3513                           ; BSR set to: 0
  3514  0013FA  0E00               	movlw	0
  3515  0013FC  6F65               	movwf	(_efgtoa$1008+1)& (0+255),b
  3516  0013FE  0E45               	movlw	69
  3517  001400  6F64               	movwf	_efgtoa$1008& (0+255),b
  3518  001402                     l3636:
  3519                           
  3520                           ; BSR set to: 0
  3521  001402  0E00               	movlw	low _dbuf
  3522  001404  2584               	addwf	efgtoa@i& (0+255),w,b
  3523  001406  6ED9               	movwf	fsr2l,c
  3524  001408  0E01               	movlw	high _dbuf
  3525  00140A  2185               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3526  00140C  6EDA               	movwf	fsr2h,c
  3527  00140E  C064  FFDF         	movff	_efgtoa$1008,indf2
  3528  001412                     
  3529                           ; BSR set to: 0
  3530                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 519:         --w;
  3531  001412  0778               	decf	efgtoa@w& (0+255),f,b
  3532  001414  A0D8               	btfss	status,0,c
  3533  001416  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  3534  001418                     
  3535                           ; BSR set to: 0
  3536                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  3537  001418  0E00               	movlw	low _dbuf
  3538  00141A  258C               	addwf	efgtoa@n& (0+255),w,b
  3539  00141C  6E01               	movwf	strcpy@dest^0,c
  3540  00141E  0E01               	movlw	high _dbuf
  3541  001420  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3542  001422  6E02               	movwf	(strcpy@dest+1)^0,c
  3543  001424  0E00               	movlw	low _dbuf
  3544  001426  2584               	addwf	efgtoa@i& (0+255),w,b
  3545  001428  6E03               	movwf	strcpy@src^0,c
  3546  00142A  0E01               	movlw	high _dbuf
  3547  00142C  2185               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3548  00142E  6E04               	movwf	(strcpy@src+1)^0,c
  3549  001430  EC33  F01A         	call	_strcpy	;wreg free
  3550  001434  EFBC  F004         	goto	l3384
  3551  001438                     l860:
  3552  001438  0012               	return		;funcret
  3553  00143A                     __end_of_efgtoa:
  3554                           	callstack 0
  3555                           
  3556 ;; *************** function _tolower *****************
  3557 ;; Defined at:
  3558 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\tolower.c"
  3559 ;; Parameters:    Size  Location     Type
  3560 ;;  c               2    6[COMRAM] int 
  3561 ;; Auto vars:     Size  Location     Type
  3562 ;;		None
  3563 ;; Return value:  Size  Location     Type
  3564 ;;                  2    6[COMRAM] int 
  3565 ;; Registers used:
  3566 ;;		wreg, status,2, status,0
  3567 ;; Tracked objects:
  3568 ;;		On entry : 0/0
  3569 ;;		On exit  : 0/0
  3570 ;;		Unchanged: 0/0
  3571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3572 ;;      Params:         2       0       0       0       0       0       0       0       0
  3573 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3574 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3575 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3576 ;;Total ram usage:        6 bytes
  3577 ;; Hardware stack levels used: 1
  3578 ;; Hardware stack levels required when called: 1
  3579 ;; This function calls:
  3580 ;;		_isupper
  3581 ;; This function is called by:
  3582 ;;		_efgtoa
  3583 ;;		_vfpfcnvrt
  3584 ;; This function uses a non-reentrant model
  3585 ;;
  3586                           
  3587                           	psect	text6
  3588  003610                     __ptext6:
  3589                           	callstack 0
  3590  003610                     _tolower:
  3591                           	callstack 26
  3592  003610  0EBF               	movlw	191
  3593  003612  6E09               	movwf	??_tolower^0,c
  3594  003614  0EFF               	movlw	255
  3595  003616  6E0A               	movwf	(??_tolower+1)^0,c
  3596  003618  C007  F00B         	movff	tolower@c,??_tolower+2
  3597  00361C  C008  F00C         	movff	tolower@c+1,??_tolower+3
  3598  003620  5009               	movf	??_tolower^0,w,c
  3599  003622  260B               	addwf	(??_tolower+2)^0,f,c
  3600  003624  500A               	movf	(??_tolower+1)^0,w,c
  3601  003626  220C               	addwfc	(??_tolower+3)^0,f,c
  3602  003628  500C               	movf	(??_tolower+3)^0,w,c
  3603  00362A  E107               	bnz	u3651
  3604  00362C  0E1A               	movlw	26
  3605  00362E  5C0B               	subwf	(??_tolower+2)^0,w,c
  3606  003630  B0D8               	btfsc	status,0,c
  3607  003632  EF1D  F01B         	goto	u3651
  3608  003636  EF1F  F01B         	goto	u3650
  3609  00363A                     u3651:
  3610  00363A  EF26  F01B         	goto	l1076
  3611  00363E                     u3650:
  3612  00363E  0E20               	movlw	32
  3613  003640  1007               	iorwf	tolower@c^0,w,c
  3614  003642  6E07               	movwf	?_tolower^0,c
  3615  003644  5008               	movf	(tolower@c+1)^0,w,c
  3616  003646  6E08               	movwf	(?_tolower+1)^0,c
  3617  003648  EF2A  F01B         	goto	l1079
  3618  00364C                     l1076:
  3619  00364C  C007  F007         	movff	tolower@c,?_tolower
  3620  003650  C008  F008         	movff	tolower@c+1,?_tolower+1
  3621  003654                     l1079:
  3622  003654  0012               	return		;funcret
  3623  003656                     __end_of_tolower:
  3624                           	callstack 0
  3625                           
  3626 ;; *************** function _isupper *****************
  3627 ;; Defined at:
  3628 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isupper.c"
  3629 ;; Parameters:    Size  Location     Type
  3630 ;;  c               2    0[COMRAM] int 
  3631 ;; Auto vars:     Size  Location     Type
  3632 ;;		None
  3633 ;; Return value:  Size  Location     Type
  3634 ;;                  2    0[COMRAM] int 
  3635 ;; Registers used:
  3636 ;;		wreg, status,2, status,0
  3637 ;; Tracked objects:
  3638 ;;		On entry : 0/0
  3639 ;;		On exit  : 0/0
  3640 ;;		Unchanged: 0/0
  3641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3642 ;;      Params:         2       0       0       0       0       0       0       0       0
  3643 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3644 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3645 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3646 ;;Total ram usage:        6 bytes
  3647 ;; Hardware stack levels used: 1
  3648 ;; This function calls:
  3649 ;;		Nothing
  3650 ;; This function is called by:
  3651 ;;		_efgtoa
  3652 ;;		_vfpfcnvrt
  3653 ;;		_tolower
  3654 ;; This function uses a non-reentrant model
  3655 ;;
  3656                           
  3657                           	psect	text7
  3658  0036E0                     __ptext7:
  3659                           	callstack 0
  3660  0036E0                     _isupper:
  3661                           	callstack 26
  3662  0036E0  0EBF               	movlw	191
  3663  0036E2  6E03               	movwf	??_isupper^0,c
  3664  0036E4  0EFF               	movlw	255
  3665  0036E6  6E04               	movwf	(??_isupper+1)^0,c
  3666  0036E8  C001  F005         	movff	isupper@c,??_isupper+2
  3667  0036EC  C002  F006         	movff	isupper@c+1,??_isupper+3
  3668  0036F0  5003               	movf	??_isupper^0,w,c
  3669  0036F2  2605               	addwf	(??_isupper+2)^0,f,c
  3670  0036F4  5004               	movf	(??_isupper+1)^0,w,c
  3671  0036F6  2206               	addwfc	(??_isupper+3)^0,f,c
  3672  0036F8  5006               	movf	(??_isupper+3)^0,w,c
  3673  0036FA  E10A               	bnz	u2800
  3674  0036FC  0E1A               	movlw	26
  3675  0036FE  5C05               	subwf	(??_isupper+2)^0,w,c
  3676  003700  A0D8               	btfss	status,0,c
  3677  003702  EF85  F01B         	goto	u2801
  3678  003706  EF88  F01B         	goto	u2800
  3679  00370A                     u2801:
  3680  00370A  0E01               	movlw	1
  3681  00370C  EF89  F01B         	goto	u2810
  3682  003710                     u2800:
  3683  003710  0E00               	movlw	0
  3684  003712                     u2810:
  3685  003712  6E01               	movwf	?_isupper^0,c
  3686  003714  6A02               	clrf	(?_isupper+1)^0,c
  3687  003716  0012               	return		;funcret
  3688  003718                     __end_of_isupper:
  3689                           	callstack 0
  3690                           
  3691 ;; *************** function _strcpy *****************
  3692 ;; Defined at:
  3693 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strcpy.c"
  3694 ;; Parameters:    Size  Location     Type
  3695 ;;  dest            2    0[COMRAM] PTR unsigned char 
  3696 ;;		 -> dbuf(80), 
  3697 ;;  src             2    2[COMRAM] PTR const unsigned char 
  3698 ;;		 -> STR_8(4), STR_7(4), STR_4(4), STR_3(4), 
  3699 ;;		 -> dbuf(80), 
  3700 ;; Auto vars:     Size  Location     Type
  3701 ;;  d               2    8[COMRAM] PTR unsigned char 
  3702 ;;		 -> dbuf(80), 
  3703 ;;  s               2    6[COMRAM] PTR const unsigned char 
  3704 ;;		 -> STR_8(4), STR_7(4), STR_4(4), STR_3(4), 
  3705 ;;		 -> dbuf(80), 
  3706 ;; Return value:  Size  Location     Type
  3707 ;;                  2    0[COMRAM] PTR unsigned char 
  3708 ;; Registers used:
  3709 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3710 ;; Tracked objects:
  3711 ;;		On entry : 0/0
  3712 ;;		On exit  : 0/0
  3713 ;;		Unchanged: 0/0
  3714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3715 ;;      Params:         4       0       0       0       0       0       0       0       0
  3716 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3717 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3718 ;;      Totals:        10       0       0       0       0       0       0       0       0
  3719 ;;Total ram usage:       10 bytes
  3720 ;; Hardware stack levels used: 1
  3721 ;; This function calls:
  3722 ;;		Nothing
  3723 ;; This function is called by:
  3724 ;;		_efgtoa
  3725 ;; This function uses a non-reentrant model
  3726 ;;
  3727                           
  3728                           	psect	text8
  3729  003466                     __ptext8:
  3730                           	callstack 0
  3731  003466                     _strcpy:
  3732                           	callstack 26
  3733  003466  C003  F007         	movff	strcpy@src,strcpy@s
  3734  00346A  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  3735  00346E  C001  F009         	movff	strcpy@dest,strcpy@d
  3736  003472  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  3737  003476                     l3284:
  3738  003476  5007               	movf	strcpy@s^0,w,c
  3739  003478  6E05               	movwf	??_strcpy^0,c
  3740  00347A  5008               	movf	(strcpy@s+1)^0,w,c
  3741  00347C  6E06               	movwf	(??_strcpy+1)^0,c
  3742  00347E  4A07               	infsnz	strcpy@s^0,f,c
  3743  003480  2A08               	incf	(strcpy@s+1)^0,f,c
  3744  003482  C005  FFF6         	movff	??_strcpy,tblptrl
  3745  003486  C006  FFF7         	movff	??_strcpy+1,tblptrh
  3746  00348A  6AF8               	clrf	tblptru,c
  3747  00348C  C009  FFD9         	movff	strcpy@d,fsr2l
  3748  003490  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  3749  003494  4A09               	infsnz	strcpy@d^0,f,c
  3750  003496  2A0A               	incf	(strcpy@d+1)^0,f,c
  3751  003498  0E07               	movlw	(high __ramtop+-1)
  3752  00349A  64F7               	cpfsgt	tblptrh,c
  3753  00349C  D003               	bra	u3637
  3754  00349E  0008               	tblrd		*
  3755  0034A0  50F5               	movf	tablat,w,c
  3756  0034A2  D005               	bra	u3630
  3757  0034A4                     u3637:
  3758  0034A4  CFF6 FFE1          	movff	tblptrl,fsr1l
  3759  0034A8  CFF7 FFE2          	movff	tblptrh,fsr1h
  3760  0034AC  50E7               	movf	indf1,w,c
  3761  0034AE                     u3630:
  3762  0034AE  6EDF               	movwf	indf2,c
  3763  0034B0  50DF               	movf	indf2,w,c
  3764  0034B2  A4D8               	btfss	status,2,c
  3765  0034B4  EF5E  F01A         	goto	u3641
  3766  0034B8  EF60  F01A         	goto	u3640
  3767  0034BC                     u3641:
  3768  0034BC  EF3B  F01A         	goto	l3284
  3769  0034C0                     u3640:
  3770  0034C0  0012               	return		;funcret
  3771  0034C2                     __end_of_strcpy:
  3772                           	callstack 0
  3773                           
  3774 ;; *************** function _pad *****************
  3775 ;; Defined at:
  3776 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  3777 ;; Parameters:    Size  Location     Type
  3778 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  3779 ;;		 -> sprintf@f(11), 
  3780 ;;  buf             2   18[COMRAM] PTR unsigned char 
  3781 ;;		 -> dbuf(80), 
  3782 ;;  p               2   20[COMRAM] int 
  3783 ;; Auto vars:     Size  Location     Type
  3784 ;;  w               2   25[COMRAM] int 
  3785 ;;  i               2   23[COMRAM] int 
  3786 ;; Return value:  Size  Location     Type
  3787 ;;                  2   16[COMRAM] int 
  3788 ;; Registers used:
  3789 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3790 ;; Tracked objects:
  3791 ;;		On entry : 0/0
  3792 ;;		On exit  : 0/0
  3793 ;;		Unchanged: 0/0
  3794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3795 ;;      Params:         6       0       0       0       0       0       0       0       0
  3796 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3797 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3798 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3799 ;;Total ram usage:       11 bytes
  3800 ;; Hardware stack levels used: 1
  3801 ;; Hardware stack levels required when called: 3
  3802 ;; This function calls:
  3803 ;;		_fputc
  3804 ;;		_fputs
  3805 ;;		_strlen
  3806 ;; This function is called by:
  3807 ;;		_efgtoa
  3808 ;; This function uses a non-reentrant model
  3809 ;;
  3810                           
  3811                           	psect	text9
  3812  002F74                     __ptext9:
  3813                           	callstack 0
  3814  002F74                     _pad:
  3815                           	callstack 23
  3816  002F74                     
  3817                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  3818  002F74  A05E               	btfss	_flags^0,0,c
  3819  002F76  EFBF  F017         	goto	u3521
  3820  002F7A  EFC1  F017         	goto	u3520
  3821  002F7E                     u3521:
  3822  002F7E  EFCB  F017         	goto	l3242
  3823  002F82                     u3520:
  3824  002F82                     
  3825                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  3826  002F82  C013  F00A         	movff	pad@buf,fputs@s
  3827  002F86  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3828  002F8A  C011  F00C         	movff	pad@fp,fputs@fp
  3829  002F8E  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3830  002F92  EC4E  F01B         	call	_fputs	;wreg free
  3831  002F96                     l3242:
  3832                           
  3833                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  3834  002F96  BE16               	btfsc	(pad@p+1)^0,7,c
  3835  002F98  EFD0  F017         	goto	u3531
  3836  002F9C  EFD2  F017         	goto	u3530
  3837  002FA0                     u3531:
  3838  002FA0  EFD8  F017         	goto	l3246
  3839  002FA4                     u3530:
  3840  002FA4  C015  F01A         	movff	pad@p,pad@w
  3841  002FA8  C016  F01B         	movff	pad@p+1,pad@w+1
  3842  002FAC  EFDC  F017         	goto	l839
  3843  002FB0                     l3246:
  3844  002FB0  0E00               	movlw	0
  3845  002FB2  6E1B               	movwf	(pad@w+1)^0,c
  3846  002FB4  0E00               	movlw	0
  3847  002FB6  6E1A               	movwf	pad@w^0,c
  3848  002FB8                     l839:
  3849                           
  3850                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  3851  002FB8  0E00               	movlw	0
  3852  002FBA  6E19               	movwf	(pad@i+1)^0,c
  3853  002FBC  0E00               	movlw	0
  3854  002FBE  6E18               	movwf	pad@i^0,c
  3855                           
  3856                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3857  002FC0  EFEE  F017         	goto	l3252
  3858  002FC4                     l3248:
  3859                           
  3860                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  3861  002FC4  0E00               	movlw	0
  3862  002FC6  6E02               	movwf	(fputc@c+1)^0,c
  3863  002FC8  0E20               	movlw	32
  3864  002FCA  6E01               	movwf	fputc@c^0,c
  3865  002FCC  C011  F003         	movff	pad@fp,fputc@fp
  3866  002FD0  C012  F004         	movff	pad@fp+1,fputc@fp+1
  3867  002FD4  ECF3  F016         	call	_fputc	;wreg free
  3868  002FD8                     
  3869                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 86:         ++i;
  3870  002FD8  4A18               	infsnz	pad@i^0,f,c
  3871  002FDA  2A19               	incf	(pad@i+1)^0,f,c
  3872  002FDC                     l3252:
  3873                           
  3874                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3875  002FDC  501A               	movf	pad@w^0,w,c
  3876  002FDE  5C18               	subwf	pad@i^0,w,c
  3877  002FE0  5019               	movf	(pad@i+1)^0,w,c
  3878  002FE2  0A80               	xorlw	128
  3879  002FE4  6E17               	movwf	??_pad^0,c
  3880  002FE6  501B               	movf	(pad@w+1)^0,w,c
  3881  002FE8  0A80               	xorlw	128
  3882  002FEA  5817               	subwfb	??_pad^0,w,c
  3883  002FEC  A0D8               	btfss	status,0,c
  3884  002FEE  EFFB  F017         	goto	u3541
  3885  002FF2  EFFD  F017         	goto	u3540
  3886  002FF6                     u3541:
  3887  002FF6  EFE2  F017         	goto	l3248
  3888  002FFA                     u3540:
  3889  002FFA                     
  3890                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  3891  002FFA  B05E               	btfsc	_flags^0,0,c
  3892  002FFC  EF02  F018         	goto	u3551
  3893  003000  EF04  F018         	goto	u3550
  3894  003004                     u3551:
  3895  003004  EF0E  F018         	goto	l3256
  3896  003008                     u3550:
  3897  003008                     
  3898                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  3899  003008  C013  F00A         	movff	pad@buf,fputs@s
  3900  00300C  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3901  003010  C011  F00C         	movff	pad@fp,fputs@fp
  3902  003014  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3903  003018  EC4E  F01B         	call	_fputs	;wreg free
  3904  00301C                     l3256:
  3905                           
  3906                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  3907  00301C  C013  F001         	movff	pad@buf,strlen@s
  3908  003020  C014  F002         	movff	pad@buf+1,strlen@s+1
  3909  003024  ECE0  F01B         	call	_strlen	;wreg free
  3910  003028  501A               	movf	pad@w^0,w,c
  3911  00302A  2401               	addwf	?_strlen^0,w,c
  3912  00302C  6E11               	movwf	?_pad^0,c
  3913  00302E  501B               	movf	(pad@w+1)^0,w,c
  3914  003030  2002               	addwfc	(?_strlen+1)^0,w,c
  3915  003032  6E12               	movwf	(?_pad+1)^0,c
  3916  003034  0012               	return		;funcret
  3917  003036                     __end_of_pad:
  3918                           	callstack 0
  3919                           
  3920 ;; *************** function _strlen *****************
  3921 ;; Defined at:
  3922 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  3923 ;; Parameters:    Size  Location     Type
  3924 ;;  s               2    0[COMRAM] PTR const unsigned char 
  3925 ;;		 -> dbuf(80), 
  3926 ;; Auto vars:     Size  Location     Type
  3927 ;;  a               2    2[COMRAM] PTR const unsigned char 
  3928 ;;		 -> dbuf(80), 
  3929 ;; Return value:  Size  Location     Type
  3930 ;;                  2    0[COMRAM] unsigned int 
  3931 ;; Registers used:
  3932 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3933 ;; Tracked objects:
  3934 ;;		On entry : 0/0
  3935 ;;		On exit  : 0/0
  3936 ;;		Unchanged: 0/0
  3937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3938 ;;      Params:         2       0       0       0       0       0       0       0       0
  3939 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3940 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3941 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3942 ;;Total ram usage:        4 bytes
  3943 ;; Hardware stack levels used: 1
  3944 ;; This function calls:
  3945 ;;		Nothing
  3946 ;; This function is called by:
  3947 ;;		_pad
  3948 ;; This function uses a non-reentrant model
  3949 ;;
  3950                           
  3951                           	psect	text10
  3952  0037C0                     __ptext10:
  3953                           	callstack 0
  3954  0037C0                     _strlen:
  3955                           	callstack 25
  3956  0037C0  C001  F003         	movff	strlen@s,strlen@a
  3957  0037C4  C002  F004         	movff	strlen@s+1,strlen@a+1
  3958  0037C8  EFE8  F01B         	goto	l2778
  3959  0037CC                     l2776:
  3960  0037CC  4A01               	infsnz	strlen@s^0,f,c
  3961  0037CE  2A02               	incf	(strlen@s+1)^0,f,c
  3962  0037D0                     l2778:
  3963  0037D0  C001  FFD9         	movff	strlen@s,fsr2l
  3964  0037D4  C002  FFDA         	movff	strlen@s+1,fsr2h
  3965  0037D8  50DF               	movf	indf2,w,c
  3966  0037DA  A4D8               	btfss	status,2,c
  3967  0037DC  EFF2  F01B         	goto	u2791
  3968  0037E0  EFF4  F01B         	goto	u2790
  3969  0037E4                     u2791:
  3970  0037E4  EFE6  F01B         	goto	l2776
  3971  0037E8                     u2790:
  3972  0037E8  5003               	movf	strlen@a^0,w,c
  3973  0037EA  5C01               	subwf	strlen@s^0,w,c
  3974  0037EC  6E01               	movwf	?_strlen^0,c
  3975  0037EE  5004               	movf	(strlen@a+1)^0,w,c
  3976  0037F0  5802               	subwfb	(strlen@s+1)^0,w,c
  3977  0037F2  6E02               	movwf	(?_strlen+1)^0,c
  3978  0037F4  0012               	return		;funcret
  3979  0037F6                     __end_of_strlen:
  3980                           	callstack 0
  3981                           
  3982 ;; *************** function _fputs *****************
  3983 ;; Defined at:
  3984 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputs.c"
  3985 ;; Parameters:    Size  Location     Type
  3986 ;;  s               2    9[COMRAM] PTR const unsigned char 
  3987 ;;		 -> dbuf(80), 
  3988 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  3989 ;;		 -> sprintf@f(11), 
  3990 ;; Auto vars:     Size  Location     Type
  3991 ;;  i               2   14[COMRAM] int 
  3992 ;;  c               1   13[COMRAM] unsigned char 
  3993 ;; Return value:  Size  Location     Type
  3994 ;;                  2    9[COMRAM] int 
  3995 ;; Registers used:
  3996 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3997 ;; Tracked objects:
  3998 ;;		On entry : 0/0
  3999 ;;		On exit  : 0/0
  4000 ;;		Unchanged: 0/0
  4001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4002 ;;      Params:         4       0       0       0       0       0       0       0       0
  4003 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4004 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4005 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4006 ;;Total ram usage:        7 bytes
  4007 ;; Hardware stack levels used: 1
  4008 ;; Hardware stack levels required when called: 2
  4009 ;; This function calls:
  4010 ;;		_fputc
  4011 ;; This function is called by:
  4012 ;;		_pad
  4013 ;; This function uses a non-reentrant model
  4014 ;;
  4015                           
  4016                           	psect	text11
  4017  00369C                     __ptext11:
  4018                           	callstack 0
  4019  00369C                     _fputs:
  4020                           	callstack 23
  4021  00369C  0E00               	movlw	0
  4022  00369E  6E10               	movwf	(fputs@i+1)^0,c
  4023  0036A0  0E00               	movlw	0
  4024  0036A2  6E0F               	movwf	fputs@i^0,c
  4025  0036A4  EF5F  F01B         	goto	l2772
  4026  0036A8                     l2768:
  4027  0036A8  C00E  F001         	movff	fputs@c,fputc@c
  4028  0036AC  6A02               	clrf	(fputc@c+1)^0,c
  4029  0036AE  C00C  F003         	movff	fputs@fp,fputc@fp
  4030  0036B2  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  4031  0036B6  ECF3  F016         	call	_fputc	;wreg free
  4032  0036BA  4A0F               	infsnz	fputs@i^0,f,c
  4033  0036BC  2A10               	incf	(fputs@i+1)^0,f,c
  4034  0036BE                     l2772:
  4035  0036BE  500F               	movf	fputs@i^0,w,c
  4036  0036C0  240A               	addwf	fputs@s^0,w,c
  4037  0036C2  6ED9               	movwf	fsr2l,c
  4038  0036C4  5010               	movf	(fputs@i+1)^0,w,c
  4039  0036C6  200B               	addwfc	(fputs@s+1)^0,w,c
  4040  0036C8  6EDA               	movwf	fsr2h,c
  4041  0036CA  50DF               	movf	indf2,w,c
  4042  0036CC  6E0E               	movwf	fputs@c^0,c
  4043  0036CE  500E               	movf	fputs@c^0,w,c
  4044  0036D0  A4D8               	btfss	status,2,c
  4045  0036D2  EF6D  F01B         	goto	u2781
  4046  0036D6  EF6F  F01B         	goto	u2780
  4047  0036DA                     u2781:
  4048  0036DA  EF54  F01B         	goto	l2768
  4049  0036DE                     u2780:
  4050  0036DE  0012               	return		;funcret
  4051  0036E0                     __end_of_fputs:
  4052                           	callstack 0
  4053                           
  4054 ;; *************** function _fputc *****************
  4055 ;; Defined at:
  4056 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputc.c"
  4057 ;; Parameters:    Size  Location     Type
  4058 ;;  c               2    0[COMRAM] int 
  4059 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  4060 ;;		 -> sprintf@f(11), 
  4061 ;; Auto vars:     Size  Location     Type
  4062 ;;		None
  4063 ;; Return value:  Size  Location     Type
  4064 ;;                  2    0[COMRAM] int 
  4065 ;; Registers used:
  4066 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4067 ;; Tracked objects:
  4068 ;;		On entry : 0/0
  4069 ;;		On exit  : 0/0
  4070 ;;		Unchanged: 0/0
  4071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4072 ;;      Params:         4       0       0       0       0       0       0       0       0
  4073 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4074 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4075 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4076 ;;Total ram usage:        9 bytes
  4077 ;; Hardware stack levels used: 1
  4078 ;; Hardware stack levels required when called: 1
  4079 ;; This function calls:
  4080 ;;		_putch
  4081 ;; This function is called by:
  4082 ;;		_pad
  4083 ;;		_vfpfcnvrt
  4084 ;;		_fputs
  4085 ;; This function uses a non-reentrant model
  4086 ;;
  4087                           
  4088                           	psect	text12
  4089  002DE6                     __ptext12:
  4090                           	callstack 0
  4091  002DE6                     _fputc:
  4092                           	callstack 26
  4093  002DE6  5003               	movf	fputc@fp^0,w,c
  4094  002DE8  1004               	iorwf	(fputc@fp+1)^0,w,c
  4095  002DEA  B4D8               	btfsc	status,2,c
  4096  002DEC  EFFA  F016         	goto	u2351
  4097  002DF0  EFFC  F016         	goto	u2350
  4098  002DF4                     u2351:
  4099  002DF4  EF05  F017         	goto	l2554
  4100  002DF8                     u2350:
  4101  002DF8  5003               	movf	fputc@fp^0,w,c
  4102  002DFA  1004               	iorwf	(fputc@fp+1)^0,w,c
  4103  002DFC  A4D8               	btfss	status,2,c
  4104  002DFE  EF03  F017         	goto	u2361
  4105  002E02  EF05  F017         	goto	u2360
  4106  002E06                     u2361:
  4107  002E06  EF0A  F017         	goto	l2556
  4108  002E0A                     u2360:
  4109  002E0A                     l2554:
  4110  002E0A  5001               	movf	fputc@c^0,w,c
  4111  002E0C  EC4B  F01C         	call	_putch
  4112  002E10  EF57  F017         	goto	l1039
  4113  002E14                     l2556:
  4114  002E14  EE20 F009          	lfsr	2,9
  4115  002E18  5003               	movf	fputc@fp^0,w,c
  4116  002E1A  26D9               	addwf	fsr2l,f,c
  4117  002E1C  5004               	movf	(fputc@fp+1)^0,w,c
  4118  002E1E  22DA               	addwfc	fsr2h,f,c
  4119  002E20  50DE               	movf	postinc2,w,c
  4120  002E22  10DE               	iorwf	postinc2,w,c
  4121  002E24  B4D8               	btfsc	status,2,c
  4122  002E26  EF17  F017         	goto	u2371
  4123  002E2A  EF19  F017         	goto	u2370
  4124  002E2E                     u2371:
  4125  002E2E  EF34  F017         	goto	l2560
  4126  002E32                     u2370:
  4127  002E32  EE20 F009          	lfsr	2,9
  4128  002E36  5003               	movf	fputc@fp^0,w,c
  4129  002E38  26D9               	addwf	fsr2l,f,c
  4130  002E3A  5004               	movf	(fputc@fp+1)^0,w,c
  4131  002E3C  22DA               	addwfc	fsr2h,f,c
  4132  002E3E  EE10 F003          	lfsr	1,3
  4133  002E42  5003               	movf	fputc@fp^0,w,c
  4134  002E44  26E1               	addwf	fsr1l,f,c
  4135  002E46  5004               	movf	(fputc@fp+1)^0,w,c
  4136  002E48  22E2               	addwfc	fsr1h,f,c
  4137  002E4A  50DE               	movf	postinc2,w,c
  4138  002E4C  5CE6               	subwf	postinc1,w,c
  4139  002E4E  50E6               	movf	postinc1,w,c
  4140  002E50  0A80               	xorlw	128
  4141  002E52  6E09               	movwf	(??_fputc+4)^0,c
  4142  002E54  50DE               	movf	postinc2,w,c
  4143  002E56  0A80               	xorlw	128
  4144  002E58  5809               	subwfb	(??_fputc+4)^0,w,c
  4145  002E5A  B0D8               	btfsc	status,0,c
  4146  002E5C  EF32  F017         	goto	u2381
  4147  002E60  EF34  F017         	goto	u2380
  4148  002E64                     u2381:
  4149  002E64  EF57  F017         	goto	l1039
  4150  002E68                     u2380:
  4151  002E68                     l2560:
  4152  002E68  EE20 F003          	lfsr	2,3
  4153  002E6C  5003               	movf	fputc@fp^0,w,c
  4154  002E6E  26D9               	addwf	fsr2l,f,c
  4155  002E70  5004               	movf	(fputc@fp+1)^0,w,c
  4156  002E72  22DA               	addwfc	fsr2h,f,c
  4157  002E74  CFDE F005          	movff	postinc2,??_fputc
  4158  002E78  CFDD F006          	movff	postdec2,??_fputc+1
  4159  002E7C  C003  FFD9         	movff	fputc@fp,fsr2l
  4160  002E80  C004  FFDA         	movff	fputc@fp+1,fsr2h
  4161  002E84  CFDE F007          	movff	postinc2,??_fputc+2
  4162  002E88  CFDD F008          	movff	postdec2,??_fputc+3
  4163  002E8C  5005               	movf	??_fputc^0,w,c
  4164  002E8E  2407               	addwf	(??_fputc+2)^0,w,c
  4165  002E90  6ED9               	movwf	fsr2l,c
  4166  002E92  5006               	movf	(??_fputc+1)^0,w,c
  4167  002E94  2008               	addwfc	(??_fputc+3)^0,w,c
  4168  002E96  6EDA               	movwf	fsr2h,c
  4169  002E98  C001  FFDF         	movff	fputc@c,indf2
  4170  002E9C  EE20 F003          	lfsr	2,3
  4171  002EA0  5003               	movf	fputc@fp^0,w,c
  4172  002EA2  26D9               	addwf	fsr2l,f,c
  4173  002EA4  5004               	movf	(fputc@fp+1)^0,w,c
  4174  002EA6  22DA               	addwfc	fsr2h,f,c
  4175  002EA8  2ADE               	incf	postinc2,f,c
  4176  002EAA  0E00               	movlw	0
  4177  002EAC  22DD               	addwfc	postdec2,f,c
  4178  002EAE                     l1039:
  4179  002EAE  0012               	return		;funcret
  4180  002EB0                     __end_of_fputc:
  4181                           	callstack 0
  4182                           
  4183 ;; *************** function _putch *****************
  4184 ;; Defined at:
  4185 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\putch.c"
  4186 ;; Parameters:    Size  Location     Type
  4187 ;;  c               1    wreg     unsigned char 
  4188 ;; Auto vars:     Size  Location     Type
  4189 ;;  c               1    0[COMRAM] unsigned char 
  4190 ;; Return value:  Size  Location     Type
  4191 ;;                  1    wreg      void 
  4192 ;; Registers used:
  4193 ;;		wreg
  4194 ;; Tracked objects:
  4195 ;;		On entry : 0/0
  4196 ;;		On exit  : 0/0
  4197 ;;		Unchanged: 0/0
  4198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4199 ;;      Params:         0       0       0       0       0       0       0       0       0
  4200 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4201 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4202 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4203 ;;Total ram usage:        0 bytes
  4204 ;; Hardware stack levels used: 1
  4205 ;; This function calls:
  4206 ;;		Nothing
  4207 ;; This function is called by:
  4208 ;;		_fputc
  4209 ;; This function uses a non-reentrant model
  4210 ;;
  4211                           
  4212                           	psect	text13
  4213  003896                     __ptext13:
  4214                           	callstack 0
  4215  003896                     _putch:
  4216                           	callstack 26
  4217  003896  0012               	return		;funcret
  4218  003898                     __end_of_putch:
  4219                           	callstack 0
  4220                           
  4221 ;; *************** function _floorf *****************
  4222 ;; Defined at:
  4223 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\floorf.c"
  4224 ;; Parameters:    Size  Location     Type
  4225 ;;  x               4   25[COMRAM] float 
  4226 ;; Auto vars:     Size  Location     Type
  4227 ;;  u               4   41[COMRAM] struct .
  4228 ;;  m               4   35[COMRAM] unsigned long 
  4229 ;;  e               2   39[COMRAM] int 
  4230 ;; Return value:  Size  Location     Type
  4231 ;;                  4   25[COMRAM] float 
  4232 ;; Registers used:
  4233 ;;		wreg, status,2, status,0
  4234 ;; Tracked objects:
  4235 ;;		On entry : 0/0
  4236 ;;		On exit  : 0/0
  4237 ;;		Unchanged: 0/0
  4238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4239 ;;      Params:         4       0       0       0       0       0       0       0       0
  4240 ;;      Locals:        10       0       0       0       0       0       0       0       0
  4241 ;;      Temps:          6       0       0       0       0       0       0       0       0
  4242 ;;      Totals:        20       0       0       0       0       0       0       0       0
  4243 ;;Total ram usage:       20 bytes
  4244 ;; Hardware stack levels used: 1
  4245 ;; This function calls:
  4246 ;;		Nothing
  4247 ;; This function is called by:
  4248 ;;		_efgtoa
  4249 ;; This function uses a non-reentrant model
  4250 ;;
  4251                           
  4252                           	psect	text14
  4253  0024EC                     __ptext14:
  4254                           	callstack 0
  4255  0024EC                     _floorf:
  4256                           	callstack 26
  4257  0024EC  C0B6  F02A         	movff	floorf@F526,floorf@u
  4258  0024F0  C0B7  F02B         	movff	floorf@F526+1,floorf@u+1
  4259  0024F4  C0B8  F02C         	movff	floorf@F526+2,floorf@u+2
  4260  0024F8  C0B9  F02D         	movff	floorf@F526+3,floorf@u+3
  4261  0024FC  C01A  F02A         	movff	floorf@x,floorf@u
  4262  002500  C01B  F02B         	movff	floorf@x+1,floorf@u+1
  4263  002504  C01C  F02C         	movff	floorf@x+2,floorf@u+2
  4264  002508  C01D  F02D         	movff	floorf@x+3,floorf@u+3
  4265  00250C  0E81               	movlw	129
  4266  00250E  6E1E               	movwf	??_floorf^0,c
  4267  002510  0EFF               	movlw	255
  4268  002512  6E1F               	movwf	(??_floorf+1)^0,c
  4269  002514  C02A  F020         	movff	floorf@u,??_floorf+2
  4270  002518  C02B  F021         	movff	floorf@u+1,??_floorf+3
  4271  00251C  C02C  F022         	movff	floorf@u+2,??_floorf+4
  4272  002520  C02D  F023         	movff	floorf@u+3,??_floorf+5
  4273  002524  0E18               	movlw	24
  4274  002526  EF9A  F012         	goto	u3660
  4275  00252A                     u3665:
  4276  00252A  90D8               	bcf	status,0,c
  4277  00252C  3223               	rrcf	(??_floorf+5)^0,f,c
  4278  00252E  3222               	rrcf	(??_floorf+4)^0,f,c
  4279  002530  3221               	rrcf	(??_floorf+3)^0,f,c
  4280  002532  3220               	rrcf	(??_floorf+2)^0,f,c
  4281  002534                     u3660:
  4282  002534  2EE8               	decfsz	wreg,f,c
  4283  002536  EF95  F012         	goto	u3665
  4284  00253A  5020               	movf	(??_floorf+2)^0,w,c
  4285  00253C  241E               	addwf	??_floorf^0,w,c
  4286  00253E  6E28               	movwf	floorf@e^0,c
  4287  002540  0E00               	movlw	0
  4288  002542  201F               	addwfc	(??_floorf+1)^0,w,c
  4289  002544  6E29               	movwf	(floorf@e+1)^0,c
  4290  002546  BE29               	btfsc	(floorf@e+1)^0,7,c
  4291  002548  EFAF  F012         	goto	u3671
  4292  00254C  5029               	movf	(floorf@e+1)^0,w,c
  4293  00254E  E109               	bnz	u3670
  4294  002550  0E17               	movlw	23
  4295  002552  5C28               	subwf	floorf@e^0,w,c
  4296  002554  A0D8               	btfss	status,0,c
  4297  002556  EFAF  F012         	goto	u3671
  4298  00255A  EFB1  F012         	goto	u3670
  4299  00255E                     u3671:
  4300  00255E  EFBB  F012         	goto	l3302
  4301  002562                     u3670:
  4302  002562                     l3300:
  4303  002562  C01A  F01A         	movff	floorf@x,?_floorf
  4304  002566  C01B  F01B         	movff	floorf@x+1,?_floorf+1
  4305  00256A  C01C  F01C         	movff	floorf@x+2,?_floorf+2
  4306  00256E  C01D  F01D         	movff	floorf@x+3,?_floorf+3
  4307  002572  EF7E  F013         	goto	l1000
  4308  002576                     l3302:
  4309  002576  BE29               	btfsc	(floorf@e+1)^0,7,c
  4310  002578  EFC0  F012         	goto	u3681
  4311  00257C  EFC2  F012         	goto	u3680
  4312  002580                     u3681:
  4313  002580  EF32  F013         	goto	l3312
  4314  002584                     u3680:
  4315  002584  C028  F01E         	movff	floorf@e,??_floorf
  4316  002588  0EFF               	movlw	255
  4317  00258A  6E1F               	movwf	(??_floorf+1)^0,c
  4318  00258C  0EFF               	movlw	255
  4319  00258E  6E20               	movwf	(??_floorf+2)^0,c
  4320  002590  0E7F               	movlw	127
  4321  002592  6E21               	movwf	(??_floorf+3)^0,c
  4322  002594  0E00               	movlw	0
  4323  002596  6E22               	movwf	(??_floorf+4)^0,c
  4324  002598                     u3695:
  4325  002598  661E               	tstfsz	??_floorf^0,c
  4326  00259A  EFD1  F012         	goto	u3696
  4327  00259E  EFD9  F012         	goto	u3697
  4328  0025A2                     u3696:
  4329  0025A2  3422               	rlcf	(??_floorf+4)^0,w,c
  4330  0025A4  3222               	rrcf	(??_floorf+4)^0,f,c
  4331  0025A6  3221               	rrcf	(??_floorf+3)^0,f,c
  4332  0025A8  3220               	rrcf	(??_floorf+2)^0,f,c
  4333  0025AA  321F               	rrcf	(??_floorf+1)^0,f,c
  4334  0025AC  2E1E               	decfsz	??_floorf^0,f,c
  4335  0025AE  EFCC  F012         	goto	u3695
  4336  0025B2                     u3697:
  4337  0025B2  C01F  F024         	movff	??_floorf+1,floorf@m
  4338  0025B6  C020  F025         	movff	??_floorf+2,floorf@m+1
  4339  0025BA  C021  F026         	movff	??_floorf+3,floorf@m+2
  4340  0025BE  C022  F027         	movff	??_floorf+4,floorf@m+3
  4341  0025C2  5024               	movf	floorf@m^0,w,c
  4342  0025C4  142A               	andwf	floorf@u^0,w,c
  4343  0025C6  6E1E               	movwf	??_floorf^0,c
  4344  0025C8  5025               	movf	(floorf@m+1)^0,w,c
  4345  0025CA  142B               	andwf	(floorf@u+1)^0,w,c
  4346  0025CC  6E1F               	movwf	(??_floorf+1)^0,c
  4347  0025CE  5026               	movf	(floorf@m+2)^0,w,c
  4348  0025D0  142C               	andwf	(floorf@u+2)^0,w,c
  4349  0025D2  6E20               	movwf	(??_floorf+2)^0,c
  4350  0025D4  5027               	movf	(floorf@m+3)^0,w,c
  4351  0025D6  142D               	andwf	(floorf@u+3)^0,w,c
  4352  0025D8  6E21               	movwf	(??_floorf+3)^0,c
  4353  0025DA  501E               	movf	??_floorf^0,w,c
  4354  0025DC  101F               	iorwf	(??_floorf+1)^0,w,c
  4355  0025DE  1020               	iorwf	(??_floorf+2)^0,w,c
  4356  0025E0  1021               	iorwf	(??_floorf+3)^0,w,c
  4357  0025E2  A4D8               	btfss	status,2,c
  4358  0025E4  EFF6  F012         	goto	u3701
  4359  0025E8  EFF8  F012         	goto	u3700
  4360  0025EC                     u3701:
  4361  0025EC  EFFA  F012         	goto	l3308
  4362  0025F0                     u3700:
  4363  0025F0  EFB1  F012         	goto	l3300
  4364  0025F4                     l3308:
  4365  0025F4  C02A  F01E         	movff	floorf@u,??_floorf
  4366  0025F8  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  4367  0025FC  C02C  F020         	movff	floorf@u+2,??_floorf+2
  4368  002600  C02D  F021         	movff	floorf@u+3,??_floorf+3
  4369  002604  0E20               	movlw	32
  4370  002606  EF0A  F013         	goto	u3710
  4371  00260A                     u3715:
  4372  00260A  90D8               	bcf	status,0,c
  4373  00260C  3221               	rrcf	(??_floorf+3)^0,f,c
  4374  00260E  3220               	rrcf	(??_floorf+2)^0,f,c
  4375  002610  321F               	rrcf	(??_floorf+1)^0,f,c
  4376  002612  321E               	rrcf	??_floorf^0,f,c
  4377  002614                     u3710:
  4378  002614  2EE8               	decfsz	wreg,f,c
  4379  002616  EF05  F013         	goto	u3715
  4380  00261A  501E               	movf	??_floorf^0,w,c
  4381  00261C  101F               	iorwf	(??_floorf+1)^0,w,c
  4382  00261E  1020               	iorwf	(??_floorf+2)^0,w,c
  4383  002620  1021               	iorwf	(??_floorf+3)^0,w,c
  4384  002622  B4D8               	btfsc	status,2,c
  4385  002624  EF16  F013         	goto	u3721
  4386  002628  EF18  F013         	goto	u3720
  4387  00262C                     u3721:
  4388  00262C  EF20  F013         	goto	l1003
  4389  002630                     u3720:
  4390  002630  5024               	movf	floorf@m^0,w,c
  4391  002632  262A               	addwf	floorf@u^0,f,c
  4392  002634  5025               	movf	(floorf@m+1)^0,w,c
  4393  002636  222B               	addwfc	(floorf@u+1)^0,f,c
  4394  002638  5026               	movf	(floorf@m+2)^0,w,c
  4395  00263A  222C               	addwfc	(floorf@u+2)^0,f,c
  4396  00263C  5027               	movf	(floorf@m+3)^0,w,c
  4397  00263E  222D               	addwfc	(floorf@u+3)^0,f,c
  4398  002640                     l1003:
  4399  002640  1C24               	comf	floorf@m^0,w,c
  4400  002642  6E1E               	movwf	??_floorf^0,c
  4401  002644  1C25               	comf	(floorf@m+1)^0,w,c
  4402  002646  6E1F               	movwf	(??_floorf+1)^0,c
  4403  002648  1C26               	comf	(floorf@m+2)^0,w,c
  4404  00264A  6E20               	movwf	(??_floorf+2)^0,c
  4405  00264C  1C27               	comf	(floorf@m+3)^0,w,c
  4406  00264E  6E21               	movwf	(??_floorf+3)^0,c
  4407  002650  501E               	movf	??_floorf^0,w,c
  4408  002652  162A               	andwf	floorf@u^0,f,c
  4409  002654  501F               	movf	(??_floorf+1)^0,w,c
  4410  002656  162B               	andwf	(floorf@u+1)^0,f,c
  4411  002658  5020               	movf	(??_floorf+2)^0,w,c
  4412  00265A  162C               	andwf	(floorf@u+2)^0,f,c
  4413  00265C  5021               	movf	(??_floorf+3)^0,w,c
  4414  00265E  162D               	andwf	(floorf@u+3)^0,f,c
  4415  002660  EF76  F013         	goto	l3320
  4416  002664                     l3312:
  4417  002664  C02A  F01E         	movff	floorf@u,??_floorf
  4418  002668  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  4419  00266C  C02C  F020         	movff	floorf@u+2,??_floorf+2
  4420  002670  C02D  F021         	movff	floorf@u+3,??_floorf+3
  4421  002674  0E20               	movlw	32
  4422  002676  EF42  F013         	goto	u3730
  4423  00267A                     u3735:
  4424  00267A  90D8               	bcf	status,0,c
  4425  00267C  3221               	rrcf	(??_floorf+3)^0,f,c
  4426  00267E  3220               	rrcf	(??_floorf+2)^0,f,c
  4427  002680  321F               	rrcf	(??_floorf+1)^0,f,c
  4428  002682  321E               	rrcf	??_floorf^0,f,c
  4429  002684                     u3730:
  4430  002684  2EE8               	decfsz	wreg,f,c
  4431  002686  EF3D  F013         	goto	u3735
  4432  00268A  501E               	movf	??_floorf^0,w,c
  4433  00268C  101F               	iorwf	(??_floorf+1)^0,w,c
  4434  00268E  1020               	iorwf	(??_floorf+2)^0,w,c
  4435  002690  1021               	iorwf	(??_floorf+3)^0,w,c
  4436  002692  A4D8               	btfss	status,2,c
  4437  002694  EF4E  F013         	goto	u3741
  4438  002698  EF50  F013         	goto	u3740
  4439  00269C                     u3741:
  4440  00269C  EF5A  F013         	goto	l3316
  4441  0026A0                     u3740:
  4442  0026A0  0E00               	movlw	0
  4443  0026A2  6E2A               	movwf	floorf@u^0,c
  4444  0026A4  0E00               	movlw	0
  4445  0026A6  6E2B               	movwf	(floorf@u+1)^0,c
  4446  0026A8  0E00               	movlw	0
  4447  0026AA  6E2C               	movwf	(floorf@u+2)^0,c
  4448  0026AC  0E00               	movlw	0
  4449  0026AE  6E2D               	movwf	(floorf@u+3)^0,c
  4450  0026B0  EF76  F013         	goto	l3320
  4451  0026B4                     l3316:
  4452  0026B4  90D8               	bcf	status,0,c
  4453  0026B6  342A               	rlcf	floorf@u^0,w,c
  4454  0026B8  6E1E               	movwf	??_floorf^0,c
  4455  0026BA  342B               	rlcf	(floorf@u+1)^0,w,c
  4456  0026BC  6E1F               	movwf	(??_floorf+1)^0,c
  4457  0026BE  342C               	rlcf	(floorf@u+2)^0,w,c
  4458  0026C0  6E20               	movwf	(??_floorf+2)^0,c
  4459  0026C2  342D               	rlcf	(floorf@u+3)^0,w,c
  4460  0026C4  6E21               	movwf	(??_floorf+3)^0,c
  4461  0026C6  501E               	movf	??_floorf^0,w,c
  4462  0026C8  101F               	iorwf	(??_floorf+1)^0,w,c
  4463  0026CA  1020               	iorwf	(??_floorf+2)^0,w,c
  4464  0026CC  1021               	iorwf	(??_floorf+3)^0,w,c
  4465  0026CE  B4D8               	btfsc	status,2,c
  4466  0026D0  EF6C  F013         	goto	u3751
  4467  0026D4  EF6E  F013         	goto	u3750
  4468  0026D8                     u3751:
  4469  0026D8  EF76  F013         	goto	l3320
  4470  0026DC                     u3750:
  4471  0026DC  0E00               	movlw	0
  4472  0026DE  6E2A               	movwf	floorf@u^0,c
  4473  0026E0  0E00               	movlw	0
  4474  0026E2  6E2B               	movwf	(floorf@u+1)^0,c
  4475  0026E4  0E80               	movlw	128
  4476  0026E6  6E2C               	movwf	(floorf@u+2)^0,c
  4477  0026E8  0EBF               	movlw	191
  4478  0026EA  6E2D               	movwf	(floorf@u+3)^0,c
  4479  0026EC                     l3320:
  4480  0026EC  C02A  F01A         	movff	floorf@u,?_floorf
  4481  0026F0  C02B  F01B         	movff	floorf@u+1,?_floorf+1
  4482  0026F4  C02C  F01C         	movff	floorf@u+2,?_floorf+2
  4483  0026F8  C02D  F01D         	movff	floorf@u+3,?_floorf+3
  4484  0026FC                     l1000:
  4485  0026FC  0012               	return		;funcret
  4486  0026FE                     __end_of_floorf:
  4487                           	callstack 0
  4488                           
  4489 ;; *************** function ___fpclassifyf *****************
  4490 ;; Defined at:
  4491 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__fpclassifyf.c"
  4492 ;; Parameters:    Size  Location     Type
  4493 ;;  x               4    0[COMRAM] float 
  4494 ;; Auto vars:     Size  Location     Type
  4495 ;;  u               4   10[COMRAM] struct .
  4496 ;;  e               2    8[COMRAM] int 
  4497 ;; Return value:  Size  Location     Type
  4498 ;;                  2    0[COMRAM] int 
  4499 ;; Registers used:
  4500 ;;		wreg, status,2, status,0
  4501 ;; Tracked objects:
  4502 ;;		On entry : 0/0
  4503 ;;		On exit  : 0/0
  4504 ;;		Unchanged: 0/0
  4505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4506 ;;      Params:         4       0       0       0       0       0       0       0       0
  4507 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4508 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4509 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4510 ;;Total ram usage:       14 bytes
  4511 ;; Hardware stack levels used: 1
  4512 ;; This function calls:
  4513 ;;		Nothing
  4514 ;; This function is called by:
  4515 ;;		_efgtoa
  4516 ;; This function uses a non-reentrant model
  4517 ;;
  4518                           
  4519                           	psect	text15
  4520  002C12                     __ptext15:
  4521                           	callstack 0
  4522  002C12                     ___fpclassifyf:
  4523                           	callstack 26
  4524  002C12  C056  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4525  002C16  C057  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4526  002C1A  C058  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4527  002C1E  C059  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4528  002C22  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  4529  002C26  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4530  002C2A  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4531  002C2E  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4532  002C32  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4533  002C36  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4534  002C3A  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4535  002C3E  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4536  002C42  0E18               	movlw	24
  4537  002C44  EF29  F016         	goto	u3560
  4538  002C48                     u3565:
  4539  002C48  90D8               	bcf	status,0,c
  4540  002C4A  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  4541  002C4C  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  4542  002C4E  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  4543  002C50  3205               	rrcf	??___fpclassifyf^0,f,c
  4544  002C52                     u3560:
  4545  002C52  2EE8               	decfsz	wreg,f,c
  4546  002C54  EF24  F016         	goto	u3565
  4547  002C58  5005               	movf	??___fpclassifyf^0,w,c
  4548  002C5A  6E09               	movwf	___fpclassifyf@e^0,c
  4549  002C5C  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  4550  002C5E  5009               	movf	___fpclassifyf@e^0,w,c
  4551  002C60  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4552  002C62  A4D8               	btfss	status,2,c
  4553  002C64  EF36  F016         	goto	u3571
  4554  002C68  EF38  F016         	goto	u3570
  4555  002C6C                     u3571:
  4556  002C6C  EF58  F016         	goto	l3272
  4557  002C70                     u3570:
  4558  002C70  90D8               	bcf	status,0,c
  4559  002C72  340B               	rlcf	___fpclassifyf@u^0,w,c
  4560  002C74  6E05               	movwf	??___fpclassifyf^0,c
  4561  002C76  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4562  002C78  6E06               	movwf	(??___fpclassifyf+1)^0,c
  4563  002C7A  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4564  002C7C  6E07               	movwf	(??___fpclassifyf+2)^0,c
  4565  002C7E  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4566  002C80  6E08               	movwf	(??___fpclassifyf+3)^0,c
  4567  002C82  5005               	movf	??___fpclassifyf^0,w,c
  4568  002C84  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4569  002C86  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4570  002C88  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4571  002C8A  A4D8               	btfss	status,2,c
  4572  002C8C  EF4A  F016         	goto	u3581
  4573  002C90  EF4C  F016         	goto	u3580
  4574  002C94                     u3581:
  4575  002C94  EF52  F016         	goto	l3268
  4576  002C98                     u3580:
  4577  002C98  0E00               	movlw	0
  4578  002C9A  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4579  002C9C  0E02               	movlw	2
  4580  002C9E  6E01               	movwf	?___fpclassifyf^0,c
  4581  002CA0  EF87  F016         	goto	l968
  4582  002CA4                     l3268:
  4583  002CA4  0E00               	movlw	0
  4584  002CA6  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4585  002CA8  0E03               	movlw	3
  4586  002CAA  6E01               	movwf	?___fpclassifyf^0,c
  4587  002CAC  EF87  F016         	goto	l968
  4588  002CB0                     l3272:
  4589  002CB0  2809               	incf	___fpclassifyf@e^0,w,c
  4590  002CB2  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4591  002CB4  A4D8               	btfss	status,2,c
  4592  002CB6  EF5F  F016         	goto	u3591
  4593  002CBA  EF61  F016         	goto	u3590
  4594  002CBE                     u3591:
  4595  002CBE  EF83  F016         	goto	l3278
  4596  002CC2                     u3590:
  4597  002CC2  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4598  002CC6  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4599  002CCA  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4600  002CCE  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4601  002CD2  0E09               	movlw	9
  4602  002CD4                     u3605:
  4603  002CD4  90D8               	bcf	status,0,c
  4604  002CD6  3605               	rlcf	??___fpclassifyf^0,f,c
  4605  002CD8  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  4606  002CDA  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  4607  002CDC  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  4608  002CDE  2EE8               	decfsz	wreg,f,c
  4609  002CE0  EF6A  F016         	goto	u3605
  4610  002CE4  5005               	movf	??___fpclassifyf^0,w,c
  4611  002CE6  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4612  002CE8  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4613  002CEA  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4614  002CEC  B4D8               	btfsc	status,2,c
  4615  002CEE  EF7B  F016         	goto	u3611
  4616  002CF2  EF7E  F016         	goto	u3610
  4617  002CF6                     u3611:
  4618  002CF6  0E01               	movlw	1
  4619  002CF8  EF7F  F016         	goto	u3620
  4620  002CFC                     u3610:
  4621  002CFC  0E00               	movlw	0
  4622  002CFE                     u3620:
  4623  002CFE  6E01               	movwf	?___fpclassifyf^0,c
  4624  002D00  6A02               	clrf	(?___fpclassifyf+1)^0,c
  4625  002D02  EF87  F016         	goto	l968
  4626  002D06                     l3278:
  4627  002D06  0E00               	movlw	0
  4628  002D08  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4629  002D0A  0E04               	movlw	4
  4630  002D0C  6E01               	movwf	?___fpclassifyf^0,c
  4631  002D0E                     l968:
  4632  002D0E  0012               	return		;funcret
  4633  002D10                     __end_of___fpclassifyf:
  4634                           	callstack 0
  4635                           
  4636 ;; *************** function ___fltol *****************
  4637 ;; Defined at:
  4638 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fltol.c"
  4639 ;; Parameters:    Size  Location     Type
  4640 ;;  f1              4    0[COMRAM] int 
  4641 ;; Auto vars:     Size  Location     Type
  4642 ;;  exp1            1    9[COMRAM] unsigned char 
  4643 ;;  sign1           1    8[COMRAM] unsigned char 
  4644 ;; Return value:  Size  Location     Type
  4645 ;;                  4    0[COMRAM] long 
  4646 ;; Registers used:
  4647 ;;		wreg, status,2, status,0
  4648 ;; Tracked objects:
  4649 ;;		On entry : 0/0
  4650 ;;		On exit  : 0/0
  4651 ;;		Unchanged: 0/0
  4652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4653 ;;      Params:         4       0       0       0       0       0       0       0       0
  4654 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4655 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4656 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4657 ;;Total ram usage:       10 bytes
  4658 ;; Hardware stack levels used: 1
  4659 ;; This function calls:
  4660 ;;		Nothing
  4661 ;; This function is called by:
  4662 ;;		_efgtoa
  4663 ;; This function uses a non-reentrant model
  4664 ;;
  4665                           
  4666                           	psect	text16
  4667  002A08                     __ptext16:
  4668                           	callstack 0
  4669  002A08                     ___fltol:
  4670                           	callstack 26
  4671  002A08  3403               	rlcf	(___fltol@f1+2)^0,w,c
  4672  002A0A  3404               	rlcf	(___fltol@f1+3)^0,w,c
  4673  002A0C  6E0A               	movwf	___fltol@exp1^0,c
  4674  002A0E  500A               	movf	___fltol@exp1^0,w,c
  4675  002A10  A4D8               	btfss	status,2,c
  4676  002A12  EF0D  F015         	goto	u3451
  4677  002A16  EF0F  F015         	goto	u3450
  4678  002A1A                     u3451:
  4679  002A1A  EF19  F015         	goto	l3200
  4680  002A1E                     u3450:
  4681  002A1E                     l3196:
  4682  002A1E  0E00               	movlw	0
  4683  002A20  6E01               	movwf	?___fltol^0,c
  4684  002A22  0E00               	movlw	0
  4685  002A24  6E02               	movwf	(?___fltol+1)^0,c
  4686  002A26  0E00               	movlw	0
  4687  002A28  6E03               	movwf	(?___fltol+2)^0,c
  4688  002A2A  0E00               	movlw	0
  4689  002A2C  6E04               	movwf	(?___fltol+3)^0,c
  4690  002A2E  EF86  F015         	goto	l417
  4691  002A32                     l3200:
  4692  002A32  C001  F005         	movff	___fltol@f1,??___fltol
  4693  002A36  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  4694  002A3A  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  4695  002A3E  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  4696  002A42  0E20               	movlw	32
  4697  002A44  EF29  F015         	goto	u3460
  4698  002A48                     u3465:
  4699  002A48  90D8               	bcf	status,0,c
  4700  002A4A  3208               	rrcf	(??___fltol+3)^0,f,c
  4701  002A4C  3207               	rrcf	(??___fltol+2)^0,f,c
  4702  002A4E  3206               	rrcf	(??___fltol+1)^0,f,c
  4703  002A50  3205               	rrcf	??___fltol^0,f,c
  4704  002A52                     u3460:
  4705  002A52  2EE8               	decfsz	wreg,f,c
  4706  002A54  EF24  F015         	goto	u3465
  4707  002A58  5005               	movf	??___fltol^0,w,c
  4708  002A5A  6E09               	movwf	___fltol@sign1^0,c
  4709  002A5C  8E03               	bsf	(___fltol@f1+2)^0,7,c
  4710  002A5E  0EFF               	movlw	255
  4711  002A60  1601               	andwf	___fltol@f1^0,f,c
  4712  002A62  0EFF               	movlw	255
  4713  002A64  1602               	andwf	(___fltol@f1+1)^0,f,c
  4714  002A66  0EFF               	movlw	255
  4715  002A68  1603               	andwf	(___fltol@f1+2)^0,f,c
  4716  002A6A  0E00               	movlw	0
  4717  002A6C  1604               	andwf	(___fltol@f1+3)^0,f,c
  4718  002A6E  0E96               	movlw	150
  4719  002A70  5E0A               	subwf	___fltol@exp1^0,f,c
  4720  002A72  BE0A               	btfsc	___fltol@exp1^0,7,c
  4721  002A74  EF40  F015         	goto	u3470
  4722  002A78  EF3E  F015         	goto	u3471
  4723  002A7C                     u3471:
  4724  002A7C  EF56  F015         	goto	l3220
  4725  002A80                     u3470:
  4726  002A80  500A               	movf	___fltol@exp1^0,w,c
  4727  002A82  0A80               	xorlw	128
  4728  002A84  0F97               	addlw	151
  4729  002A86  B0D8               	btfsc	status,0,c
  4730  002A88  EF48  F015         	goto	u3481
  4731  002A8C  EF4A  F015         	goto	u3480
  4732  002A90                     u3481:
  4733  002A90  EF4C  F015         	goto	l3216
  4734  002A94                     u3480:
  4735  002A94  EF0F  F015         	goto	l3196
  4736  002A98                     l3216:
  4737  002A98  90D8               	bcf	status,0,c
  4738  002A9A  3204               	rrcf	(___fltol@f1+3)^0,f,c
  4739  002A9C  3203               	rrcf	(___fltol@f1+2)^0,f,c
  4740  002A9E  3202               	rrcf	(___fltol@f1+1)^0,f,c
  4741  002AA0  3201               	rrcf	___fltol@f1^0,f,c
  4742  002AA2  3E0A               	incfsz	___fltol@exp1^0,f,c
  4743  002AA4  EF4C  F015         	goto	l3216
  4744  002AA8  EF6E  F015         	goto	l3230
  4745  002AAC                     l3220:
  4746  002AAC  0E1F               	movlw	31
  4747  002AAE  640A               	cpfsgt	___fltol@exp1^0,c
  4748  002AB0  EF5C  F015         	goto	u3491
  4749  002AB4  EF5E  F015         	goto	u3490
  4750  002AB8                     u3491:
  4751  002AB8  EF66  F015         	goto	l3228
  4752  002ABC                     u3490:
  4753  002ABC  EF0F  F015         	goto	l3196
  4754  002AC0                     l3226:
  4755  002AC0  90D8               	bcf	status,0,c
  4756  002AC2  3601               	rlcf	___fltol@f1^0,f,c
  4757  002AC4  3602               	rlcf	(___fltol@f1+1)^0,f,c
  4758  002AC6  3603               	rlcf	(___fltol@f1+2)^0,f,c
  4759  002AC8  3604               	rlcf	(___fltol@f1+3)^0,f,c
  4760  002ACA  060A               	decf	___fltol@exp1^0,f,c
  4761  002ACC                     l3228:
  4762  002ACC  500A               	movf	___fltol@exp1^0,w,c
  4763  002ACE  A4D8               	btfss	status,2,c
  4764  002AD0  EF6C  F015         	goto	u3501
  4765  002AD4  EF6E  F015         	goto	u3500
  4766  002AD8                     u3501:
  4767  002AD8  EF60  F015         	goto	l3226
  4768  002ADC                     u3500:
  4769  002ADC                     l3230:
  4770  002ADC  5009               	movf	___fltol@sign1^0,w,c
  4771  002ADE  B4D8               	btfsc	status,2,c
  4772  002AE0  EF74  F015         	goto	u3511
  4773  002AE4  EF76  F015         	goto	u3510
  4774  002AE8                     u3511:
  4775  002AE8  EF7E  F015         	goto	l3234
  4776  002AEC                     u3510:
  4777  002AEC  1E04               	comf	(___fltol@f1+3)^0,f,c
  4778  002AEE  1E03               	comf	(___fltol@f1+2)^0,f,c
  4779  002AF0  1E02               	comf	(___fltol@f1+1)^0,f,c
  4780  002AF2  6C01               	negf	___fltol@f1^0,c
  4781  002AF4  0E00               	movlw	0
  4782  002AF6  2202               	addwfc	(___fltol@f1+1)^0,f,c
  4783  002AF8  2203               	addwfc	(___fltol@f1+2)^0,f,c
  4784  002AFA  2204               	addwfc	(___fltol@f1+3)^0,f,c
  4785  002AFC                     l3234:
  4786  002AFC  C001  F001         	movff	___fltol@f1,?___fltol
  4787  002B00  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  4788  002B04  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  4789  002B08  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  4790  002B0C                     l417:
  4791  002B0C  0012               	return		;funcret
  4792  002B0E                     __end_of___fltol:
  4793                           	callstack 0
  4794                           
  4795 ;; *************** function ___flsub *****************
  4796 ;; Defined at:
  4797 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  4798 ;; Parameters:    Size  Location     Type
  4799 ;;  b               4   25[COMRAM] long 
  4800 ;;  a               4   29[COMRAM] long 
  4801 ;; Auto vars:     Size  Location     Type
  4802 ;;		None
  4803 ;; Return value:  Size  Location     Type
  4804 ;;                  4   25[COMRAM] long 
  4805 ;; Registers used:
  4806 ;;		wreg, status,2, status,0, cstack
  4807 ;; Tracked objects:
  4808 ;;		On entry : 0/0
  4809 ;;		On exit  : 0/0
  4810 ;;		Unchanged: 0/0
  4811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4812 ;;      Params:         8       0       0       0       0       0       0       0       0
  4813 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4814 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4815 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4816 ;;Total ram usage:        8 bytes
  4817 ;; Hardware stack levels used: 1
  4818 ;; Hardware stack levels required when called: 1
  4819 ;; This function calls:
  4820 ;;		___fladd
  4821 ;; This function is called by:
  4822 ;;		_efgtoa
  4823 ;; This function uses a non-reentrant model
  4824 ;;
  4825                           
  4826                           	psect	text17
  4827  003656                     __ptext17:
  4828                           	callstack 0
  4829  003656                     ___flsub:
  4830                           	callstack 25
  4831  003656  0E00               	movlw	0
  4832  003658  1A1E               	xorwf	___flsub@a^0,f,c
  4833  00365A  0E00               	movlw	0
  4834  00365C  1A1F               	xorwf	(___flsub@a+1)^0,f,c
  4835  00365E  0E00               	movlw	0
  4836  003660  1A20               	xorwf	(___flsub@a+2)^0,f,c
  4837  003662  0E80               	movlw	128
  4838  003664  1A21               	xorwf	(___flsub@a+3)^0,f,c
  4839  003666  C01A  F001         	movff	___flsub@b,___fladd@b
  4840  00366A  C01B  F002         	movff	___flsub@b+1,___fladd@b+1
  4841  00366E  C01C  F003         	movff	___flsub@b+2,___fladd@b+2
  4842  003672  C01D  F004         	movff	___flsub@b+3,___fladd@b+3
  4843  003676  C01E  F005         	movff	___flsub@a,___fladd@a
  4844  00367A  C01F  F006         	movff	___flsub@a+1,___fladd@a+1
  4845  00367E  C020  F007         	movff	___flsub@a+2,___fladd@a+2
  4846  003682  C021  F008         	movff	___flsub@a+3,___fladd@a+3
  4847  003686  EC1D  F00A         	call	___fladd	;wreg free
  4848  00368A  C001  F01A         	movff	?___fladd,?___flsub
  4849  00368E  C002  F01B         	movff	?___fladd+1,?___flsub+1
  4850  003692  C003  F01C         	movff	?___fladd+2,?___flsub+2
  4851  003696  C004  F01D         	movff	?___fladd+3,?___flsub+3
  4852  00369A  0012               	return		;funcret
  4853  00369C                     __end_of___flsub:
  4854                           	callstack 0
  4855                           
  4856 ;; *************** function ___fladd *****************
  4857 ;; Defined at:
  4858 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  4859 ;; Parameters:    Size  Location     Type
  4860 ;;  b               4    0[COMRAM] long 
  4861 ;;  a               4    4[COMRAM] long 
  4862 ;; Auto vars:     Size  Location     Type
  4863 ;;  grs             1   15[COMRAM] unsigned char 
  4864 ;;  bexp            1   14[COMRAM] unsigned char 
  4865 ;;  aexp            1   13[COMRAM] unsigned char 
  4866 ;;  signs           1   12[COMRAM] unsigned char 
  4867 ;; Return value:  Size  Location     Type
  4868 ;;                  4    0[COMRAM] unsigned char 
  4869 ;; Registers used:
  4870 ;;		wreg, status,2, status,0
  4871 ;; Tracked objects:
  4872 ;;		On entry : 0/0
  4873 ;;		On exit  : 0/0
  4874 ;;		Unchanged: 0/0
  4875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4876 ;;      Params:         8       0       0       0       0       0       0       0       0
  4877 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4878 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4879 ;;      Totals:        16       0       0       0       0       0       0       0       0
  4880 ;;Total ram usage:       16 bytes
  4881 ;; Hardware stack levels used: 1
  4882 ;; This function calls:
  4883 ;;		Nothing
  4884 ;; This function is called by:
  4885 ;;		___flsub
  4886 ;;		_efgtoa
  4887 ;; This function uses a non-reentrant model
  4888 ;;
  4889                           
  4890                           	psect	text18
  4891  00143A                     __ptext18:
  4892                           	callstack 0
  4893  00143A                     ___fladd:
  4894                           	callstack 25
  4895  00143A  5004               	movf	(___fladd@b+3)^0,w,c
  4896  00143C  0B80               	andlw	128
  4897  00143E  6E0D               	movwf	___fladd@signs^0,c
  4898  001440  5004               	movf	(___fladd@b+3)^0,w,c
  4899  001442  2404               	addwf	(___fladd@b+3)^0,w,c
  4900  001444  6E0F               	movwf	___fladd@bexp^0,c
  4901  001446  AE03               	btfss	(___fladd@b+2)^0,7,c
  4902  001448  EF28  F00A         	goto	u2391
  4903  00144C  EF2A  F00A         	goto	u2390
  4904  001450                     u2391:
  4905  001450  EF2B  F00A         	goto	l2570
  4906  001454                     u2390:
  4907  001454  800F               	bsf	___fladd@bexp^0,0,c
  4908  001456                     l2570:
  4909  001456  500F               	movf	___fladd@bexp^0,w,c
  4910  001458  B4D8               	btfsc	status,2,c
  4911  00145A  EF31  F00A         	goto	u2401
  4912  00145E  EF33  F00A         	goto	u2400
  4913  001462                     u2401:
  4914  001462  EF48  F00A         	goto	l2580
  4915  001466                     u2400:
  4916  001466  280F               	incf	___fladd@bexp^0,w,c
  4917  001468  A4D8               	btfss	status,2,c
  4918  00146A  EF39  F00A         	goto	u2411
  4919  00146E  EF3B  F00A         	goto	u2410
  4920  001472                     u2411:
  4921  001472  EF43  F00A         	goto	l2576
  4922  001476                     u2410:
  4923  001476  0E00               	movlw	0
  4924  001478  6E01               	movwf	___fladd@b^0,c
  4925  00147A  0E00               	movlw	0
  4926  00147C  6E02               	movwf	(___fladd@b+1)^0,c
  4927  00147E  0E00               	movlw	0
  4928  001480  6E03               	movwf	(___fladd@b+2)^0,c
  4929  001482  0E00               	movlw	0
  4930  001484  6E04               	movwf	(___fladd@b+3)^0,c
  4931  001486                     l2576:
  4932  001486  8E03               	bsf	(___fladd@b+2)^0,7,c
  4933  001488  0E00               	movlw	0
  4934  00148A  6E04               	movwf	(___fladd@b+3)^0,c
  4935  00148C  EF50  F00A         	goto	l2582
  4936  001490                     l2580:
  4937  001490  0E00               	movlw	0
  4938  001492  6E01               	movwf	___fladd@b^0,c
  4939  001494  0E00               	movlw	0
  4940  001496  6E02               	movwf	(___fladd@b+1)^0,c
  4941  001498  0E00               	movlw	0
  4942  00149A  6E03               	movwf	(___fladd@b+2)^0,c
  4943  00149C  0E00               	movlw	0
  4944  00149E  6E04               	movwf	(___fladd@b+3)^0,c
  4945  0014A0                     l2582:
  4946  0014A0  5008               	movf	(___fladd@a+3)^0,w,c
  4947  0014A2  0B80               	andlw	128
  4948  0014A4  6E0E               	movwf	___fladd@aexp^0,c
  4949  0014A6  500D               	movf	___fladd@signs^0,w,c
  4950  0014A8  180E               	xorwf	___fladd@aexp^0,w,c
  4951  0014AA  B4D8               	btfsc	status,2,c
  4952  0014AC  EF5A  F00A         	goto	u2421
  4953  0014B0  EF5C  F00A         	goto	u2420
  4954  0014B4                     u2421:
  4955  0014B4  EF5D  F00A         	goto	l2588
  4956  0014B8                     u2420:
  4957  0014B8  8C0D               	bsf	___fladd@signs^0,6,c
  4958  0014BA                     l2588:
  4959  0014BA  5008               	movf	(___fladd@a+3)^0,w,c
  4960  0014BC  2408               	addwf	(___fladd@a+3)^0,w,c
  4961  0014BE  6E0E               	movwf	___fladd@aexp^0,c
  4962  0014C0  AE07               	btfss	(___fladd@a+2)^0,7,c
  4963  0014C2  EF65  F00A         	goto	u2431
  4964  0014C6  EF67  F00A         	goto	u2430
  4965  0014CA                     u2431:
  4966  0014CA  EF68  F00A         	goto	l2594
  4967  0014CE                     u2430:
  4968  0014CE  800E               	bsf	___fladd@aexp^0,0,c
  4969  0014D0                     l2594:
  4970  0014D0  500E               	movf	___fladd@aexp^0,w,c
  4971  0014D2  B4D8               	btfsc	status,2,c
  4972  0014D4  EF6E  F00A         	goto	u2441
  4973  0014D8  EF70  F00A         	goto	u2440
  4974  0014DC                     u2441:
  4975  0014DC  EF85  F00A         	goto	l2604
  4976  0014E0                     u2440:
  4977  0014E0  280E               	incf	___fladd@aexp^0,w,c
  4978  0014E2  A4D8               	btfss	status,2,c
  4979  0014E4  EF76  F00A         	goto	u2451
  4980  0014E8  EF78  F00A         	goto	u2450
  4981  0014EC                     u2451:
  4982  0014EC  EF80  F00A         	goto	l2600
  4983  0014F0                     u2450:
  4984  0014F0  0E00               	movlw	0
  4985  0014F2  6E05               	movwf	___fladd@a^0,c
  4986  0014F4  0E00               	movlw	0
  4987  0014F6  6E06               	movwf	(___fladd@a+1)^0,c
  4988  0014F8  0E00               	movlw	0
  4989  0014FA  6E07               	movwf	(___fladd@a+2)^0,c
  4990  0014FC  0E00               	movlw	0
  4991  0014FE  6E08               	movwf	(___fladd@a+3)^0,c
  4992  001500                     l2600:
  4993  001500  8E07               	bsf	(___fladd@a+2)^0,7,c
  4994  001502  0E00               	movlw	0
  4995  001504  6E08               	movwf	(___fladd@a+3)^0,c
  4996  001506  EF8D  F00A         	goto	l2606
  4997  00150A                     l2604:
  4998  00150A  0E00               	movlw	0
  4999  00150C  6E05               	movwf	___fladd@a^0,c
  5000  00150E  0E00               	movlw	0
  5001  001510  6E06               	movwf	(___fladd@a+1)^0,c
  5002  001512  0E00               	movlw	0
  5003  001514  6E07               	movwf	(___fladd@a+2)^0,c
  5004  001516  0E00               	movlw	0
  5005  001518  6E08               	movwf	(___fladd@a+3)^0,c
  5006  00151A                     l2606:
  5007  00151A  500F               	movf	___fladd@bexp^0,w,c
  5008  00151C  5C0E               	subwf	___fladd@aexp^0,w,c
  5009  00151E  B0D8               	btfsc	status,0,c
  5010  001520  EF94  F00A         	goto	u2461
  5011  001524  EF96  F00A         	goto	u2460
  5012  001528                     u2461:
  5013  001528  EFBD  F00A         	goto	l2642
  5014  00152C                     u2460:
  5015  00152C  AC0D               	btfss	___fladd@signs^0,6,c
  5016  00152E  EF9B  F00A         	goto	u2471
  5017  001532  EF9D  F00A         	goto	u2470
  5018  001536                     u2471:
  5019  001536  EF9F  F00A         	goto	l2612
  5020  00153A                     u2470:
  5021  00153A  0E80               	movlw	128
  5022  00153C  1A0D               	xorwf	___fladd@signs^0,f,c
  5023  00153E                     l2612:
  5024  00153E  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  5025  001542  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5026  001546  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  5027  00154A  C001  F010         	movff	___fladd@b,___fladd@grs
  5028  00154E  C005  F001         	movff	___fladd@a,___fladd@b
  5029  001552  C010  F005         	movff	___fladd@grs,___fladd@a
  5030  001556  C002  F010         	movff	___fladd@b+1,___fladd@grs
  5031  00155A  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  5032  00155E  C010  F006         	movff	___fladd@grs,___fladd@a+1
  5033  001562  C003  F010         	movff	___fladd@b+2,___fladd@grs
  5034  001566  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  5035  00156A  C010  F007         	movff	___fladd@grs,___fladd@a+2
  5036  00156E  C004  F010         	movff	___fladd@b+3,___fladd@grs
  5037  001572  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  5038  001576  C010  F008         	movff	___fladd@grs,___fladd@a+3
  5039  00157A                     l2642:
  5040  00157A  0E00               	movlw	0
  5041  00157C  6E10               	movwf	___fladd@grs^0,c
  5042  00157E  500F               	movf	___fladd@bexp^0,w,c
  5043  001580  C00E  F009         	movff	___fladd@aexp,??___fladd
  5044  001584  6A0A               	clrf	(??___fladd+1)^0,c
  5045  001586  5E09               	subwf	??___fladd^0,f,c
  5046  001588  0E00               	movlw	0
  5047  00158A  5A0A               	subwfb	(??___fladd+1)^0,f,c
  5048  00158C  BE0A               	btfsc	(??___fladd+1)^0,7,c
  5049  00158E  EFD2  F00A         	goto	u2481
  5050  001592  500A               	movf	(??___fladd+1)^0,w,c
  5051  001594  E109               	bnz	u2480
  5052  001596  0E1A               	movlw	26
  5053  001598  5C09               	subwf	??___fladd^0,w,c
  5054  00159A  A0D8               	btfss	status,0,c
  5055  00159C  EFD2  F00A         	goto	u2481
  5056  0015A0  EFD4  F00A         	goto	u2480
  5057  0015A4                     u2481:
  5058  0015A4  EF0B  F00B         	goto	l649
  5059  0015A8                     u2480:
  5060  0015A8  5001               	movf	___fladd@b^0,w,c
  5061  0015AA  1002               	iorwf	(___fladd@b+1)^0,w,c
  5062  0015AC  1003               	iorwf	(___fladd@b+2)^0,w,c
  5063  0015AE  1004               	iorwf	(___fladd@b+3)^0,w,c
  5064  0015B0  A4D8               	btfss	status,2,c
  5065  0015B2  EFDD  F00A         	goto	u2491
  5066  0015B6  EFE0  F00A         	goto	u2490
  5067  0015BA                     u2491:
  5068  0015BA  0E01               	movlw	1
  5069  0015BC  EFE1  F00A         	goto	u2500
  5070  0015C0                     u2490:
  5071  0015C0  0E00               	movlw	0
  5072  0015C2                     u2500:
  5073  0015C2  6E10               	movwf	___fladd@grs^0,c
  5074  0015C4  0E00               	movlw	0
  5075  0015C6  6E01               	movwf	___fladd@b^0,c
  5076  0015C8  0E00               	movlw	0
  5077  0015CA  6E02               	movwf	(___fladd@b+1)^0,c
  5078  0015CC  0E00               	movlw	0
  5079  0015CE  6E03               	movwf	(___fladd@b+2)^0,c
  5080  0015D0  0E00               	movlw	0
  5081  0015D2  6E04               	movwf	(___fladd@b+3)^0,c
  5082  0015D4  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5083  0015D8  EF14  F00B         	goto	l648
  5084  0015DC                     l650:
  5085  0015DC  A010               	btfss	___fladd@grs^0,0,c
  5086  0015DE  EFF3  F00A         	goto	u2511
  5087  0015E2  EFF5  F00A         	goto	u2510
  5088  0015E6                     u2511:
  5089  0015E6  EFFB  F00A         	goto	l2654
  5090  0015EA                     u2510:
  5091  0015EA  90D8               	bcf	status,0,c
  5092  0015EC  3010               	rrcf	___fladd@grs^0,w,c
  5093  0015EE  0901               	iorlw	1
  5094  0015F0  6E10               	movwf	___fladd@grs^0,c
  5095  0015F2  EFFD  F00A         	goto	l2656
  5096  0015F6                     l2654:
  5097  0015F6  90D8               	bcf	status,0,c
  5098  0015F8  3210               	rrcf	___fladd@grs^0,f,c
  5099  0015FA                     l2656:
  5100  0015FA  A001               	btfss	___fladd@b^0,0,c
  5101  0015FC  EF02  F00B         	goto	u2521
  5102  001600  EF04  F00B         	goto	u2520
  5103  001604                     u2521:
  5104  001604  EF05  F00B         	goto	l2660
  5105  001608                     u2520:
  5106  001608  8E10               	bsf	___fladd@grs^0,7,c
  5107  00160A                     l2660:
  5108  00160A  3404               	rlcf	(___fladd@b+3)^0,w,c
  5109  00160C  3204               	rrcf	(___fladd@b+3)^0,f,c
  5110  00160E  3203               	rrcf	(___fladd@b+2)^0,f,c
  5111  001610  3202               	rrcf	(___fladd@b+1)^0,f,c
  5112  001612  3201               	rrcf	___fladd@b^0,f,c
  5113  001614  2A0F               	incf	___fladd@bexp^0,f,c
  5114  001616                     l649:
  5115  001616  500E               	movf	___fladd@aexp^0,w,c
  5116  001618  5C0F               	subwf	___fladd@bexp^0,w,c
  5117  00161A  A0D8               	btfss	status,0,c
  5118  00161C  EF12  F00B         	goto	u2531
  5119  001620  EF14  F00B         	goto	u2530
  5120  001624                     u2531:
  5121  001624  EFEE  F00A         	goto	l650
  5122  001628                     u2530:
  5123  001628                     l648:
  5124  001628  BC0D               	btfsc	___fladd@signs^0,6,c
  5125  00162A  EF19  F00B         	goto	u2541
  5126  00162E  EF1B  F00B         	goto	u2540
  5127  001632                     u2541:
  5128  001632  EF5B  F00B         	goto	l2688
  5129  001636                     u2540:
  5130  001636  500F               	movf	___fladd@bexp^0,w,c
  5131  001638  A4D8               	btfss	status,2,c
  5132  00163A  EF21  F00B         	goto	u2551
  5133  00163E  EF23  F00B         	goto	u2550
  5134  001642                     u2551:
  5135  001642  EF2D  F00B         	goto	l2670
  5136  001646                     u2550:
  5137  001646  0E00               	movlw	0
  5138  001648  6E01               	movwf	?___fladd^0,c
  5139  00164A  0E00               	movlw	0
  5140  00164C  6E02               	movwf	(?___fladd+1)^0,c
  5141  00164E  0E00               	movlw	0
  5142  001650  6E03               	movwf	(?___fladd+2)^0,c
  5143  001652  0E00               	movlw	0
  5144  001654  6E04               	movwf	(?___fladd+3)^0,c
  5145  001656  EF7C  F00C         	goto	l657
  5146  00165A                     l2670:
  5147  00165A  5005               	movf	___fladd@a^0,w,c
  5148  00165C  2601               	addwf	___fladd@b^0,f,c
  5149  00165E  5006               	movf	(___fladd@a+1)^0,w,c
  5150  001660  2202               	addwfc	(___fladd@b+1)^0,f,c
  5151  001662  5007               	movf	(___fladd@a+2)^0,w,c
  5152  001664  2203               	addwfc	(___fladd@b+2)^0,f,c
  5153  001666  5008               	movf	(___fladd@a+3)^0,w,c
  5154  001668  2204               	addwfc	(___fladd@b+3)^0,f,c
  5155  00166A  A004               	btfss	(___fladd@b+3)^0,0,c
  5156  00166C  EF3A  F00B         	goto	u2561
  5157  001670  EF3C  F00B         	goto	u2560
  5158  001674                     u2561:
  5159  001674  EFE8  F00B         	goto	l2724
  5160  001678                     u2560:
  5161  001678  A010               	btfss	___fladd@grs^0,0,c
  5162  00167A  EF41  F00B         	goto	u2571
  5163  00167E  EF43  F00B         	goto	u2570
  5164  001682                     u2571:
  5165  001682  EF49  F00B         	goto	l2678
  5166  001686                     u2570:
  5167  001686  90D8               	bcf	status,0,c
  5168  001688  3010               	rrcf	___fladd@grs^0,w,c
  5169  00168A  0901               	iorlw	1
  5170  00168C  6E10               	movwf	___fladd@grs^0,c
  5171  00168E  EF4B  F00B         	goto	l2680
  5172  001692                     l2678:
  5173  001692  90D8               	bcf	status,0,c
  5174  001694  3210               	rrcf	___fladd@grs^0,f,c
  5175  001696                     l2680:
  5176  001696  A001               	btfss	___fladd@b^0,0,c
  5177  001698  EF50  F00B         	goto	u2581
  5178  00169C  EF52  F00B         	goto	u2580
  5179  0016A0                     u2581:
  5180  0016A0  EF53  F00B         	goto	l2684
  5181  0016A4                     u2580:
  5182  0016A4  8E10               	bsf	___fladd@grs^0,7,c
  5183  0016A6                     l2684:
  5184  0016A6  3404               	rlcf	(___fladd@b+3)^0,w,c
  5185  0016A8  3204               	rrcf	(___fladd@b+3)^0,f,c
  5186  0016AA  3203               	rrcf	(___fladd@b+2)^0,f,c
  5187  0016AC  3202               	rrcf	(___fladd@b+1)^0,f,c
  5188  0016AE  3201               	rrcf	___fladd@b^0,f,c
  5189  0016B0  2A0F               	incf	___fladd@bexp^0,f,c
  5190  0016B2  EFE8  F00B         	goto	l2724
  5191  0016B6                     l2688:
  5192  0016B6  5005               	movf	___fladd@a^0,w,c
  5193  0016B8  5C01               	subwf	___fladd@b^0,w,c
  5194  0016BA  5006               	movf	(___fladd@a+1)^0,w,c
  5195  0016BC  5802               	subwfb	(___fladd@b+1)^0,w,c
  5196  0016BE  5007               	movf	(___fladd@a+2)^0,w,c
  5197  0016C0  5803               	subwfb	(___fladd@b+2)^0,w,c
  5198  0016C2  5004               	movf	(___fladd@b+3)^0,w,c
  5199  0016C4  0A80               	xorlw	128
  5200  0016C6  6E09               	movwf	??___fladd^0,c
  5201  0016C8  5008               	movf	(___fladd@a+3)^0,w,c
  5202  0016CA  0A80               	xorlw	128
  5203  0016CC  5809               	subwfb	??___fladd^0,w,c
  5204  0016CE  B0D8               	btfsc	status,0,c
  5205  0016D0  EF6C  F00B         	goto	u2591
  5206  0016D4  EF6E  F00B         	goto	u2590
  5207  0016D8                     u2591:
  5208  0016D8  EF99  F00B         	goto	l2698
  5209  0016DC                     u2590:
  5210  0016DC  5001               	movf	___fladd@b^0,w,c
  5211  0016DE  5C05               	subwf	___fladd@a^0,w,c
  5212  0016E0  6E09               	movwf	??___fladd^0,c
  5213  0016E2  5002               	movf	(___fladd@b+1)^0,w,c
  5214  0016E4  5806               	subwfb	(___fladd@a+1)^0,w,c
  5215  0016E6  6E0A               	movwf	(??___fladd+1)^0,c
  5216  0016E8  5003               	movf	(___fladd@b+2)^0,w,c
  5217  0016EA  5807               	subwfb	(___fladd@a+2)^0,w,c
  5218  0016EC  6E0B               	movwf	(??___fladd+2)^0,c
  5219  0016EE  5004               	movf	(___fladd@b+3)^0,w,c
  5220  0016F0  5808               	subwfb	(___fladd@a+3)^0,w,c
  5221  0016F2  6E0C               	movwf	(??___fladd+3)^0,c
  5222  0016F4  0EFF               	movlw	255
  5223  0016F6  2409               	addwf	??___fladd^0,w,c
  5224  0016F8  6E01               	movwf	___fladd@b^0,c
  5225  0016FA  0EFF               	movlw	255
  5226  0016FC  200A               	addwfc	(??___fladd+1)^0,w,c
  5227  0016FE  6E02               	movwf	(___fladd@b+1)^0,c
  5228  001700  0EFF               	movlw	255
  5229  001702  200B               	addwfc	(??___fladd+2)^0,w,c
  5230  001704  6E03               	movwf	(___fladd@b+2)^0,c
  5231  001706  0EFF               	movlw	255
  5232  001708  200C               	addwfc	(??___fladd+3)^0,w,c
  5233  00170A  6E04               	movwf	(___fladd@b+3)^0,c
  5234  00170C  0E80               	movlw	128
  5235  00170E  1A0D               	xorwf	___fladd@signs^0,f,c
  5236  001710  6C10               	negf	___fladd@grs^0,c
  5237  001712  5010               	movf	___fladd@grs^0,w,c
  5238  001714  A4D8               	btfss	status,2,c
  5239  001716  EF8F  F00B         	goto	u2601
  5240  00171A  EF91  F00B         	goto	u2600
  5241  00171E                     u2601:
  5242  00171E  EFA1  F00B         	goto	l665
  5243  001722                     u2600:
  5244  001722  0E01               	movlw	1
  5245  001724  2601               	addwf	___fladd@b^0,f,c
  5246  001726  0E00               	movlw	0
  5247  001728  2202               	addwfc	(___fladd@b+1)^0,f,c
  5248  00172A  2203               	addwfc	(___fladd@b+2)^0,f,c
  5249  00172C  2204               	addwfc	(___fladd@b+3)^0,f,c
  5250  00172E  EFA1  F00B         	goto	l665
  5251  001732                     l2698:
  5252  001732  5005               	movf	___fladd@a^0,w,c
  5253  001734  5E01               	subwf	___fladd@b^0,f,c
  5254  001736  5006               	movf	(___fladd@a+1)^0,w,c
  5255  001738  5A02               	subwfb	(___fladd@b+1)^0,f,c
  5256  00173A  5007               	movf	(___fladd@a+2)^0,w,c
  5257  00173C  5A03               	subwfb	(___fladd@b+2)^0,f,c
  5258  00173E  5008               	movf	(___fladd@a+3)^0,w,c
  5259  001740  5A04               	subwfb	(___fladd@b+3)^0,f,c
  5260  001742                     l665:
  5261  001742  5001               	movf	___fladd@b^0,w,c
  5262  001744  1002               	iorwf	(___fladd@b+1)^0,w,c
  5263  001746  1003               	iorwf	(___fladd@b+2)^0,w,c
  5264  001748  1004               	iorwf	(___fladd@b+3)^0,w,c
  5265  00174A  A4D8               	btfss	status,2,c
  5266  00174C  EFAA  F00B         	goto	u2611
  5267  001750  EFAC  F00B         	goto	u2610
  5268  001754                     u2611:
  5269  001754  EFE1  F00B         	goto	l2722
  5270  001758                     u2610:
  5271  001758  5010               	movf	___fladd@grs^0,w,c
  5272  00175A  A4D8               	btfss	status,2,c
  5273  00175C  EFB2  F00B         	goto	u2621
  5274  001760  EFB4  F00B         	goto	u2620
  5275  001764                     u2621:
  5276  001764  EFE1  F00B         	goto	l2722
  5277  001768                     u2620:
  5278  001768  0E00               	movlw	0
  5279  00176A  6E01               	movwf	?___fladd^0,c
  5280  00176C  0E00               	movlw	0
  5281  00176E  6E02               	movwf	(?___fladd+1)^0,c
  5282  001770  0E00               	movlw	0
  5283  001772  6E03               	movwf	(?___fladd+2)^0,c
  5284  001774  0E00               	movlw	0
  5285  001776  6E04               	movwf	(?___fladd+3)^0,c
  5286  001778  EF7C  F00C         	goto	l657
  5287  00177C                     l2706:
  5288  00177C  90D8               	bcf	status,0,c
  5289  00177E  3601               	rlcf	___fladd@b^0,f,c
  5290  001780  3602               	rlcf	(___fladd@b+1)^0,f,c
  5291  001782  3603               	rlcf	(___fladd@b+2)^0,f,c
  5292  001784  3604               	rlcf	(___fladd@b+3)^0,f,c
  5293  001786  AE10               	btfss	___fladd@grs^0,7,c
  5294  001788  EFC8  F00B         	goto	u2631
  5295  00178C  EFCA  F00B         	goto	u2630
  5296  001790                     u2631:
  5297  001790  EFCB  F00B         	goto	l2712
  5298  001794                     u2630:
  5299  001794  8001               	bsf	___fladd@b^0,0,c
  5300  001796                     l2712:
  5301  001796  A010               	btfss	___fladd@grs^0,0,c
  5302  001798  EFD0  F00B         	goto	u2641
  5303  00179C  EFD2  F00B         	goto	u2640
  5304  0017A0                     u2641:
  5305  0017A0  EFD6  F00B         	goto	l2716
  5306  0017A4                     u2640:
  5307  0017A4  80D8               	bsf	status,0,c
  5308  0017A6  3610               	rlcf	___fladd@grs^0,f,c
  5309  0017A8  EFD8  F00B         	goto	l2718
  5310  0017AC                     l2716:
  5311  0017AC  90D8               	bcf	status,0,c
  5312  0017AE  3610               	rlcf	___fladd@grs^0,f,c
  5313  0017B0                     l2718:
  5314  0017B0  500F               	movf	___fladd@bexp^0,w,c
  5315  0017B2  B4D8               	btfsc	status,2,c
  5316  0017B4  EFDE  F00B         	goto	u2651
  5317  0017B8  EFE0  F00B         	goto	u2650
  5318  0017BC                     u2651:
  5319  0017BC  EFE1  F00B         	goto	l2722
  5320  0017C0                     u2650:
  5321  0017C0  060F               	decf	___fladd@bexp^0,f,c
  5322  0017C2                     l2722:
  5323  0017C2  AE03               	btfss	(___fladd@b+2)^0,7,c
  5324  0017C4  EFE6  F00B         	goto	u2661
  5325  0017C8  EFE8  F00B         	goto	u2660
  5326  0017CC                     u2661:
  5327  0017CC  EFBE  F00B         	goto	l2706
  5328  0017D0                     u2660:
  5329  0017D0                     l2724:
  5330  0017D0  0E00               	movlw	0
  5331  0017D2  6E0E               	movwf	___fladd@aexp^0,c
  5332  0017D4  AE10               	btfss	___fladd@grs^0,7,c
  5333  0017D6  EFEF  F00B         	goto	u2671
  5334  0017DA  EFF1  F00B         	goto	u2670
  5335  0017DE                     u2671:
  5336  0017DE  EF09  F00C         	goto	l674
  5337  0017E2                     u2670:
  5338  0017E2  C010  F009         	movff	___fladd@grs,??___fladd
  5339  0017E6  0E7F               	movlw	127
  5340  0017E8  1609               	andwf	??___fladd^0,f,c
  5341  0017EA  B4D8               	btfsc	status,2,c
  5342  0017EC  EFFA  F00B         	goto	u2681
  5343  0017F0  EFFC  F00B         	goto	u2680
  5344  0017F4                     u2681:
  5345  0017F4  EF00  F00C         	goto	l675
  5346  0017F8                     u2680:
  5347  0017F8                     l2730:
  5348  0017F8  0E01               	movlw	1
  5349  0017FA  6E0E               	movwf	___fladd@aexp^0,c
  5350  0017FC  EF09  F00C         	goto	l674
  5351  001800                     l675:
  5352  001800  A001               	btfss	___fladd@b^0,0,c
  5353  001802  EF05  F00C         	goto	u2691
  5354  001806  EF07  F00C         	goto	u2690
  5355  00180A                     u2691:
  5356  00180A  EF09  F00C         	goto	l674
  5357  00180E                     u2690:
  5358  00180E  EFFC  F00B         	goto	l2730
  5359  001812                     l674:
  5360  001812  500E               	movf	___fladd@aexp^0,w,c
  5361  001814  B4D8               	btfsc	status,2,c
  5362  001816  EF0F  F00C         	goto	u2701
  5363  00181A  EF11  F00C         	goto	u2700
  5364  00181E                     u2701:
  5365  00181E  EF3C  F00C         	goto	l2742
  5366  001822                     u2700:
  5367  001822  0E01               	movlw	1
  5368  001824  2601               	addwf	___fladd@b^0,f,c
  5369  001826  0E00               	movlw	0
  5370  001828  2202               	addwfc	(___fladd@b+1)^0,f,c
  5371  00182A  2203               	addwfc	(___fladd@b+2)^0,f,c
  5372  00182C  2204               	addwfc	(___fladd@b+3)^0,f,c
  5373  00182E  A004               	btfss	(___fladd@b+3)^0,0,c
  5374  001830  EF1C  F00C         	goto	u2711
  5375  001834  EF1E  F00C         	goto	u2710
  5376  001838                     u2711:
  5377  001838  EF3C  F00C         	goto	l2742
  5378  00183C                     u2710:
  5379  00183C  C001  F009         	movff	___fladd@b,??___fladd
  5380  001840  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  5381  001844  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  5382  001848  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  5383  00184C  340C               	rlcf	(??___fladd+3)^0,w,c
  5384  00184E  320C               	rrcf	(??___fladd+3)^0,f,c
  5385  001850  320B               	rrcf	(??___fladd+2)^0,f,c
  5386  001852  320A               	rrcf	(??___fladd+1)^0,f,c
  5387  001854  3209               	rrcf	??___fladd^0,f,c
  5388  001856  C009  F001         	movff	??___fladd,___fladd@b
  5389  00185A  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  5390  00185E  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  5391  001862  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  5392  001866  280F               	incf	___fladd@bexp^0,w,c
  5393  001868  B4D8               	btfsc	status,2,c
  5394  00186A  EF39  F00C         	goto	u2721
  5395  00186E  EF3B  F00C         	goto	u2720
  5396  001872                     u2721:
  5397  001872  EF3C  F00C         	goto	l2742
  5398  001876                     u2720:
  5399  001876  2A0F               	incf	___fladd@bexp^0,f,c
  5400  001878                     l2742:
  5401  001878  280F               	incf	___fladd@bexp^0,w,c
  5402  00187A  B4D8               	btfsc	status,2,c
  5403  00187C  EF42  F00C         	goto	u2731
  5404  001880  EF44  F00C         	goto	u2730
  5405  001884                     u2731:
  5406  001884  EF4C  F00C         	goto	l2746
  5407  001888                     u2730:
  5408  001888  500F               	movf	___fladd@bexp^0,w,c
  5409  00188A  A4D8               	btfss	status,2,c
  5410  00188C  EF4A  F00C         	goto	u2741
  5411  001890  EF4C  F00C         	goto	u2740
  5412  001894                     u2741:
  5413  001894  EF5E  F00C         	goto	l2750
  5414  001898                     u2740:
  5415  001898                     l2746:
  5416  001898  0E00               	movlw	0
  5417  00189A  6E01               	movwf	___fladd@b^0,c
  5418  00189C  0E00               	movlw	0
  5419  00189E  6E02               	movwf	(___fladd@b+1)^0,c
  5420  0018A0  0E00               	movlw	0
  5421  0018A2  6E03               	movwf	(___fladd@b+2)^0,c
  5422  0018A4  0E00               	movlw	0
  5423  0018A6  6E04               	movwf	(___fladd@b+3)^0,c
  5424  0018A8  500F               	movf	___fladd@bexp^0,w,c
  5425  0018AA  A4D8               	btfss	status,2,c
  5426  0018AC  EF5A  F00C         	goto	u2751
  5427  0018B0  EF5C  F00C         	goto	u2750
  5428  0018B4                     u2751:
  5429  0018B4  EF5E  F00C         	goto	l2750
  5430  0018B8                     u2750:
  5431  0018B8  0E00               	movlw	0
  5432  0018BA  6E0D               	movwf	___fladd@signs^0,c
  5433  0018BC                     l2750:
  5434  0018BC  A00F               	btfss	___fladd@bexp^0,0,c
  5435  0018BE  EF63  F00C         	goto	u2761
  5436  0018C2  EF65  F00C         	goto	u2760
  5437  0018C6                     u2761:
  5438  0018C6  EF68  F00C         	goto	l2754
  5439  0018CA                     u2760:
  5440  0018CA  8E03               	bsf	(___fladd@b+2)^0,7,c
  5441  0018CC  EF69  F00C         	goto	l2756
  5442  0018D0                     l2754:
  5443  0018D0  9E03               	bcf	(___fladd@b+2)^0,7,c
  5444  0018D2                     l2756:
  5445  0018D2  90D8               	bcf	status,0,c
  5446  0018D4  300F               	rrcf	___fladd@bexp^0,w,c
  5447  0018D6  6E04               	movwf	(___fladd@b+3)^0,c
  5448  0018D8  AE0D               	btfss	___fladd@signs^0,7,c
  5449  0018DA  EF71  F00C         	goto	u2771
  5450  0018DE  EF73  F00C         	goto	u2770
  5451  0018E2                     u2771:
  5452  0018E2  EF74  F00C         	goto	l2762
  5453  0018E6                     u2770:
  5454  0018E6  8E04               	bsf	(___fladd@b+3)^0,7,c
  5455  0018E8                     l2762:
  5456  0018E8  C001  F001         	movff	___fladd@b,?___fladd
  5457  0018EC  C002  F002         	movff	___fladd@b+1,?___fladd+1
  5458  0018F0  C003  F003         	movff	___fladd@b+2,?___fladd+2
  5459  0018F4  C004  F004         	movff	___fladd@b+3,?___fladd+3
  5460  0018F8                     l657:
  5461  0018F8  0012               	return		;funcret
  5462  0018FA                     __end_of___fladd:
  5463                           	callstack 0
  5464                           
  5465 ;; *************** function ___flneg *****************
  5466 ;; Defined at:
  5467 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flneg.c"
  5468 ;; Parameters:    Size  Location     Type
  5469 ;;  f1              4    0[COMRAM] unsigned char 
  5470 ;; Auto vars:     Size  Location     Type
  5471 ;;		None
  5472 ;; Return value:  Size  Location     Type
  5473 ;;                  4    0[COMRAM] unsigned char 
  5474 ;; Registers used:
  5475 ;;		wreg, status,2, status,0
  5476 ;; Tracked objects:
  5477 ;;		On entry : 0/0
  5478 ;;		On exit  : 0/0
  5479 ;;		Unchanged: 0/0
  5480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5481 ;;      Params:         4       0       0       0       0       0       0       0       0
  5482 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5483 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5484 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5485 ;;Total ram usage:        4 bytes
  5486 ;; Hardware stack levels used: 1
  5487 ;; This function calls:
  5488 ;;		Nothing
  5489 ;; This function is called by:
  5490 ;;		_efgtoa
  5491 ;; This function uses a non-reentrant model
  5492 ;;
  5493                           
  5494                           	psect	text19
  5495  003718                     __ptext19:
  5496                           	callstack 0
  5497  003718                     ___flneg:
  5498                           	callstack 26
  5499  003718  5001               	movf	___flneg@f1^0,w,c
  5500  00371A  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5501  00371C  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5502  00371E  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5503  003720  B4D8               	btfsc	status,2,c
  5504  003722  EF95  F01B         	goto	u3441
  5505  003726  EF97  F01B         	goto	u3440
  5506  00372A                     u3441:
  5507  00372A  EF9F  F01B         	goto	l3190
  5508  00372E                     u3440:
  5509  00372E  0E00               	movlw	0
  5510  003730  1A01               	xorwf	___flneg@f1^0,f,c
  5511  003732  0E00               	movlw	0
  5512  003734  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5513  003736  0E00               	movlw	0
  5514  003738  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5515  00373A  0E80               	movlw	128
  5516  00373C  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5517  00373E                     l3190:
  5518  00373E  C001  F001         	movff	___flneg@f1,?___flneg
  5519  003742  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5520  003746  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5521  00374A  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5522  00374E  0012               	return		;funcret
  5523  003750                     __end_of___flneg:
  5524                           	callstack 0
  5525                           
  5526 ;; *************** function ___flmul *****************
  5527 ;; Defined at:
  5528 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcmul.c"
  5529 ;; Parameters:    Size  Location     Type
  5530 ;;  b               4    0[COMRAM] unsigned char 
  5531 ;;  a               4    4[COMRAM] unsigned char 
  5532 ;; Auto vars:     Size  Location     Type
  5533 ;;  prod            4   19[COMRAM] struct .
  5534 ;;  grs             4   13[COMRAM] unsigned long 
  5535 ;;  temp            2   23[COMRAM] struct .
  5536 ;;  bexp            1   18[COMRAM] unsigned char 
  5537 ;;  aexp            1   17[COMRAM] unsigned char 
  5538 ;;  sign            1   12[COMRAM] unsigned char 
  5539 ;; Return value:  Size  Location     Type
  5540 ;;                  4    0[COMRAM] unsigned char 
  5541 ;; Registers used:
  5542 ;;		wreg, status,2, status,0, prodl, prodh
  5543 ;; Tracked objects:
  5544 ;;		On entry : 0/0
  5545 ;;		On exit  : 0/0
  5546 ;;		Unchanged: 0/0
  5547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5548 ;;      Params:         8       0       0       0       0       0       0       0       0
  5549 ;;      Locals:        13       0       0       0       0       0       0       0       0
  5550 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5551 ;;      Totals:        25       0       0       0       0       0       0       0       0
  5552 ;;Total ram usage:       25 bytes
  5553 ;; Hardware stack levels used: 1
  5554 ;; This function calls:
  5555 ;;		Nothing
  5556 ;; This function is called by:
  5557 ;;		_efgtoa
  5558 ;; This function uses a non-reentrant model
  5559 ;;
  5560                           
  5561                           	psect	text20
  5562  001D28                     __ptext20:
  5563                           	callstack 0
  5564  001D28                     ___flmul:
  5565                           	callstack 26
  5566  001D28  5004               	movf	(___flmul@b+3)^0,w,c
  5567  001D2A  0B80               	andlw	128
  5568  001D2C  6E0D               	movwf	___flmul@sign^0,c
  5569  001D2E  5004               	movf	(___flmul@b+3)^0,w,c
  5570  001D30  2404               	addwf	(___flmul@b+3)^0,w,c
  5571  001D32  6E13               	movwf	___flmul@bexp^0,c
  5572  001D34  AE03               	btfss	(___flmul@b+2)^0,7,c
  5573  001D36  EF9F  F00E         	goto	u3051
  5574  001D3A  EFA1  F00E         	goto	u3050
  5575  001D3E                     u3051:
  5576  001D3E  EFA2  F00E         	goto	l2938
  5577  001D42                     u3050:
  5578  001D42  8013               	bsf	___flmul@bexp^0,0,c
  5579  001D44                     l2938:
  5580  001D44  5013               	movf	___flmul@bexp^0,w,c
  5581  001D46  B4D8               	btfsc	status,2,c
  5582  001D48  EFA8  F00E         	goto	u3061
  5583  001D4C  EFAA  F00E         	goto	u3060
  5584  001D50                     u3061:
  5585  001D50  EFBD  F00E         	goto	l2946
  5586  001D54                     u3060:
  5587  001D54  2813               	incf	___flmul@bexp^0,w,c
  5588  001D56  A4D8               	btfss	status,2,c
  5589  001D58  EFB0  F00E         	goto	u3071
  5590  001D5C  EFB2  F00E         	goto	u3070
  5591  001D60                     u3071:
  5592  001D60  EFBA  F00E         	goto	l2944
  5593  001D64                     u3070:
  5594  001D64  0E00               	movlw	0
  5595  001D66  6E01               	movwf	___flmul@b^0,c
  5596  001D68  0E00               	movlw	0
  5597  001D6A  6E02               	movwf	(___flmul@b+1)^0,c
  5598  001D6C  0E00               	movlw	0
  5599  001D6E  6E03               	movwf	(___flmul@b+2)^0,c
  5600  001D70  0E00               	movlw	0
  5601  001D72  6E04               	movwf	(___flmul@b+3)^0,c
  5602  001D74                     l2944:
  5603  001D74  8E03               	bsf	(___flmul@b+2)^0,7,c
  5604  001D76  EFC5  F00E         	goto	l2948
  5605  001D7A                     l2946:
  5606  001D7A  0E00               	movlw	0
  5607  001D7C  6E01               	movwf	___flmul@b^0,c
  5608  001D7E  0E00               	movlw	0
  5609  001D80  6E02               	movwf	(___flmul@b+1)^0,c
  5610  001D82  0E00               	movlw	0
  5611  001D84  6E03               	movwf	(___flmul@b+2)^0,c
  5612  001D86  0E00               	movlw	0
  5613  001D88  6E04               	movwf	(___flmul@b+3)^0,c
  5614  001D8A                     l2948:
  5615  001D8A  5008               	movf	(___flmul@a+3)^0,w,c
  5616  001D8C  0B80               	andlw	128
  5617  001D8E  1A0D               	xorwf	___flmul@sign^0,f,c
  5618  001D90  5008               	movf	(___flmul@a+3)^0,w,c
  5619  001D92  2408               	addwf	(___flmul@a+3)^0,w,c
  5620  001D94  6E12               	movwf	___flmul@aexp^0,c
  5621  001D96  AE07               	btfss	(___flmul@a+2)^0,7,c
  5622  001D98  EFD0  F00E         	goto	u3081
  5623  001D9C  EFD2  F00E         	goto	u3080
  5624  001DA0                     u3081:
  5625  001DA0  EFD3  F00E         	goto	l2956
  5626  001DA4                     u3080:
  5627  001DA4  8012               	bsf	___flmul@aexp^0,0,c
  5628  001DA6                     l2956:
  5629  001DA6  5012               	movf	___flmul@aexp^0,w,c
  5630  001DA8  B4D8               	btfsc	status,2,c
  5631  001DAA  EFD9  F00E         	goto	u3091
  5632  001DAE  EFDB  F00E         	goto	u3090
  5633  001DB2                     u3091:
  5634  001DB2  EFEE  F00E         	goto	l2964
  5635  001DB6                     u3090:
  5636  001DB6  2812               	incf	___flmul@aexp^0,w,c
  5637  001DB8  A4D8               	btfss	status,2,c
  5638  001DBA  EFE1  F00E         	goto	u3101
  5639  001DBE  EFE3  F00E         	goto	u3100
  5640  001DC2                     u3101:
  5641  001DC2  EFEB  F00E         	goto	l2962
  5642  001DC6                     u3100:
  5643  001DC6  0E00               	movlw	0
  5644  001DC8  6E05               	movwf	___flmul@a^0,c
  5645  001DCA  0E00               	movlw	0
  5646  001DCC  6E06               	movwf	(___flmul@a+1)^0,c
  5647  001DCE  0E00               	movlw	0
  5648  001DD0  6E07               	movwf	(___flmul@a+2)^0,c
  5649  001DD2  0E00               	movlw	0
  5650  001DD4  6E08               	movwf	(___flmul@a+3)^0,c
  5651  001DD6                     l2962:
  5652  001DD6  8E07               	bsf	(___flmul@a+2)^0,7,c
  5653  001DD8  EFF6  F00E         	goto	l734
  5654  001DDC                     l2964:
  5655  001DDC  0E00               	movlw	0
  5656  001DDE  6E05               	movwf	___flmul@a^0,c
  5657  001DE0  0E00               	movlw	0
  5658  001DE2  6E06               	movwf	(___flmul@a+1)^0,c
  5659  001DE4  0E00               	movlw	0
  5660  001DE6  6E07               	movwf	(___flmul@a+2)^0,c
  5661  001DE8  0E00               	movlw	0
  5662  001DEA  6E08               	movwf	(___flmul@a+3)^0,c
  5663  001DEC                     l734:
  5664  001DEC  5012               	movf	___flmul@aexp^0,w,c
  5665  001DEE  B4D8               	btfsc	status,2,c
  5666  001DF0  EFFC  F00E         	goto	u3111
  5667  001DF4  EFFE  F00E         	goto	u3110
  5668  001DF8                     u3111:
  5669  001DF8  EF06  F00F         	goto	l2968
  5670  001DFC                     u3110:
  5671  001DFC  5013               	movf	___flmul@bexp^0,w,c
  5672  001DFE  A4D8               	btfss	status,2,c
  5673  001E00  EF04  F00F         	goto	u3121
  5674  001E04  EF06  F00F         	goto	u3120
  5675  001E08                     u3121:
  5676  001E08  EF10  F00F         	goto	l2972
  5677  001E0C                     u3120:
  5678  001E0C                     l2968:
  5679  001E0C  0E00               	movlw	0
  5680  001E0E  6E01               	movwf	?___flmul^0,c
  5681  001E10  0E00               	movlw	0
  5682  001E12  6E02               	movwf	(?___flmul+1)^0,c
  5683  001E14  0E00               	movlw	0
  5684  001E16  6E03               	movwf	(?___flmul+2)^0,c
  5685  001E18  0E00               	movlw	0
  5686  001E1A  6E04               	movwf	(?___flmul+3)^0,c
  5687  001E1C  EFA8  F010         	goto	l738
  5688  001E20                     l2972:
  5689  001E20  5007               	movf	(___flmul@a+2)^0,w,c
  5690  001E22  0201               	mulwf	___flmul@b^0,c
  5691  001E24  CFF3 F018          	movff	prodl,___flmul@temp
  5692  001E28  CFF4 F019          	movff	prodh,___flmul@temp+1
  5693  001E2C  5018               	movf	___flmul@temp^0,w,c
  5694  001E2E  6E0E               	movwf	___flmul@grs^0,c
  5695  001E30  6A0F               	clrf	(___flmul@grs+1)^0,c
  5696  001E32  6A10               	clrf	(___flmul@grs+2)^0,c
  5697  001E34  6A11               	clrf	(___flmul@grs+3)^0,c
  5698  001E36  5019               	movf	(___flmul@temp+1)^0,w,c
  5699  001E38  6E14               	movwf	___flmul@prod^0,c
  5700  001E3A  6A15               	clrf	(___flmul@prod+1)^0,c
  5701  001E3C  6A16               	clrf	(___flmul@prod+2)^0,c
  5702  001E3E  6A17               	clrf	(___flmul@prod+3)^0,c
  5703  001E40  5006               	movf	(___flmul@a+1)^0,w,c
  5704  001E42  0202               	mulwf	(___flmul@b+1)^0,c
  5705  001E44  CFF3 F018          	movff	prodl,___flmul@temp
  5706  001E48  CFF4 F019          	movff	prodh,___flmul@temp+1
  5707  001E4C  5018               	movf	___flmul@temp^0,w,c
  5708  001E4E  260E               	addwf	___flmul@grs^0,f,c
  5709  001E50  0E00               	movlw	0
  5710  001E52  220F               	addwfc	(___flmul@grs+1)^0,f,c
  5711  001E54  2210               	addwfc	(___flmul@grs+2)^0,f,c
  5712  001E56  2211               	addwfc	(___flmul@grs+3)^0,f,c
  5713  001E58  5019               	movf	(___flmul@temp+1)^0,w,c
  5714  001E5A  2614               	addwf	___flmul@prod^0,f,c
  5715  001E5C  0E00               	movlw	0
  5716  001E5E  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5717  001E60  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5718  001E62  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5719  001E64  5005               	movf	___flmul@a^0,w,c
  5720  001E66  0203               	mulwf	(___flmul@b+2)^0,c
  5721  001E68  CFF3 F018          	movff	prodl,___flmul@temp
  5722  001E6C  CFF4 F019          	movff	prodh,___flmul@temp+1
  5723  001E70  5018               	movf	___flmul@temp^0,w,c
  5724  001E72  260E               	addwf	___flmul@grs^0,f,c
  5725  001E74  0E00               	movlw	0
  5726  001E76  220F               	addwfc	(___flmul@grs+1)^0,f,c
  5727  001E78  2210               	addwfc	(___flmul@grs+2)^0,f,c
  5728  001E7A  2211               	addwfc	(___flmul@grs+3)^0,f,c
  5729  001E7C  5019               	movf	(___flmul@temp+1)^0,w,c
  5730  001E7E  2614               	addwf	___flmul@prod^0,f,c
  5731  001E80  0E00               	movlw	0
  5732  001E82  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5733  001E84  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5734  001E86  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5735  001E88  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  5736  001E8C  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  5737  001E90  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  5738  001E94  6A0E               	clrf	___flmul@grs^0,c
  5739  001E96  5005               	movf	___flmul@a^0,w,c
  5740  001E98  0202               	mulwf	(___flmul@b+1)^0,c
  5741  001E9A  CFF3 F018          	movff	prodl,___flmul@temp
  5742  001E9E  CFF4 F019          	movff	prodh,___flmul@temp+1
  5743  001EA2  5018               	movf	___flmul@temp^0,w,c
  5744  001EA4  260E               	addwf	___flmul@grs^0,f,c
  5745  001EA6  5019               	movf	(___flmul@temp+1)^0,w,c
  5746  001EA8  220F               	addwfc	(___flmul@grs+1)^0,f,c
  5747  001EAA  0E00               	movlw	0
  5748  001EAC  2210               	addwfc	(___flmul@grs+2)^0,f,c
  5749  001EAE  0E00               	movlw	0
  5750  001EB0  2211               	addwfc	(___flmul@grs+3)^0,f,c
  5751  001EB2  5006               	movf	(___flmul@a+1)^0,w,c
  5752  001EB4  0201               	mulwf	___flmul@b^0,c
  5753  001EB6  CFF3 F018          	movff	prodl,___flmul@temp
  5754  001EBA  CFF4 F019          	movff	prodh,___flmul@temp+1
  5755  001EBE  5018               	movf	___flmul@temp^0,w,c
  5756  001EC0  260E               	addwf	___flmul@grs^0,f,c
  5757  001EC2  5019               	movf	(___flmul@temp+1)^0,w,c
  5758  001EC4  220F               	addwfc	(___flmul@grs+1)^0,f,c
  5759  001EC6  0E00               	movlw	0
  5760  001EC8  2210               	addwfc	(___flmul@grs+2)^0,f,c
  5761  001ECA  0E00               	movlw	0
  5762  001ECC  2211               	addwfc	(___flmul@grs+3)^0,f,c
  5763  001ECE  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  5764  001ED2  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  5765  001ED6  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  5766  001EDA  6A0E               	clrf	___flmul@grs^0,c
  5767  001EDC  5005               	movf	___flmul@a^0,w,c
  5768  001EDE  0201               	mulwf	___flmul@b^0,c
  5769  001EE0  CFF3 F018          	movff	prodl,___flmul@temp
  5770  001EE4  CFF4 F019          	movff	prodh,___flmul@temp+1
  5771  001EE8  5018               	movf	___flmul@temp^0,w,c
  5772  001EEA  260E               	addwf	___flmul@grs^0,f,c
  5773  001EEC  5019               	movf	(___flmul@temp+1)^0,w,c
  5774  001EEE  220F               	addwfc	(___flmul@grs+1)^0,f,c
  5775  001EF0  0E00               	movlw	0
  5776  001EF2  2210               	addwfc	(___flmul@grs+2)^0,f,c
  5777  001EF4  0E00               	movlw	0
  5778  001EF6  2211               	addwfc	(___flmul@grs+3)^0,f,c
  5779  001EF8  5007               	movf	(___flmul@a+2)^0,w,c
  5780  001EFA  0202               	mulwf	(___flmul@b+1)^0,c
  5781  001EFC  CFF3 F018          	movff	prodl,___flmul@temp
  5782  001F00  CFF4 F019          	movff	prodh,___flmul@temp+1
  5783  001F04  5018               	movf	___flmul@temp^0,w,c
  5784  001F06  2614               	addwf	___flmul@prod^0,f,c
  5785  001F08  5019               	movf	(___flmul@temp+1)^0,w,c
  5786  001F0A  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5787  001F0C  0E00               	movlw	0
  5788  001F0E  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5789  001F10  0E00               	movlw	0
  5790  001F12  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5791  001F14  5006               	movf	(___flmul@a+1)^0,w,c
  5792  001F16  0203               	mulwf	(___flmul@b+2)^0,c
  5793  001F18  CFF3 F018          	movff	prodl,___flmul@temp
  5794  001F1C  CFF4 F019          	movff	prodh,___flmul@temp+1
  5795  001F20  5018               	movf	___flmul@temp^0,w,c
  5796  001F22  2614               	addwf	___flmul@prod^0,f,c
  5797  001F24  5019               	movf	(___flmul@temp+1)^0,w,c
  5798  001F26  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5799  001F28  0E00               	movlw	0
  5800  001F2A  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5801  001F2C  0E00               	movlw	0
  5802  001F2E  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5803  001F30  5007               	movf	(___flmul@a+2)^0,w,c
  5804  001F32  0203               	mulwf	(___flmul@b+2)^0,c
  5805  001F34  CFF3 F018          	movff	prodl,___flmul@temp
  5806  001F38  CFF4 F019          	movff	prodh,___flmul@temp+1
  5807  001F3C  5018               	movf	___flmul@temp^0,w,c
  5808  001F3E  6E09               	movwf	??___flmul^0,c
  5809  001F40  5019               	movf	(___flmul@temp+1)^0,w,c
  5810  001F42  6E0A               	movwf	(??___flmul+1)^0,c
  5811  001F44  6A0B               	clrf	(??___flmul+2)^0,c
  5812  001F46  6A0C               	clrf	(??___flmul+3)^0,c
  5813  001F48  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  5814  001F4C  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  5815  001F50  C009  F00A         	movff	??___flmul,??___flmul+1
  5816  001F54  6A09               	clrf	??___flmul^0,c
  5817  001F56  5009               	movf	??___flmul^0,w,c
  5818  001F58  2614               	addwf	___flmul@prod^0,f,c
  5819  001F5A  500A               	movf	(??___flmul+1)^0,w,c
  5820  001F5C  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5821  001F5E  500B               	movf	(??___flmul+2)^0,w,c
  5822  001F60  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5823  001F62  500C               	movf	(??___flmul+3)^0,w,c
  5824  001F64  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5825  001F66  C00E  F009         	movff	___flmul@grs,??___flmul
  5826  001F6A  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  5827  001F6E  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  5828  001F72  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  5829  001F76  0E19               	movlw	25
  5830  001F78  EFC3  F00F         	goto	u3130
  5831  001F7C                     u3135:
  5832  001F7C  90D8               	bcf	status,0,c
  5833  001F7E  320C               	rrcf	(??___flmul+3)^0,f,c
  5834  001F80  320B               	rrcf	(??___flmul+2)^0,f,c
  5835  001F82  320A               	rrcf	(??___flmul+1)^0,f,c
  5836  001F84  3209               	rrcf	??___flmul^0,f,c
  5837  001F86                     u3130:
  5838  001F86  2EE8               	decfsz	wreg,f,c
  5839  001F88  EFBE  F00F         	goto	u3135
  5840  001F8C  5009               	movf	??___flmul^0,w,c
  5841  001F8E  2614               	addwf	___flmul@prod^0,f,c
  5842  001F90  500A               	movf	(??___flmul+1)^0,w,c
  5843  001F92  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5844  001F94  500B               	movf	(??___flmul+2)^0,w,c
  5845  001F96  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5846  001F98  500C               	movf	(??___flmul+3)^0,w,c
  5847  001F9A  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5848  001F9C  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  5849  001FA0  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  5850  001FA4  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  5851  001FA8  6A0E               	clrf	___flmul@grs^0,c
  5852  001FAA  5012               	movf	___flmul@aexp^0,w,c
  5853  001FAC  C013  F009         	movff	___flmul@bexp,??___flmul
  5854  001FB0  6A0A               	clrf	(??___flmul+1)^0,c
  5855  001FB2  2609               	addwf	??___flmul^0,f,c
  5856  001FB4  0E00               	movlw	0
  5857  001FB6  220A               	addwfc	(??___flmul+1)^0,f,c
  5858  001FB8  0E82               	movlw	130
  5859  001FBA  2409               	addwf	??___flmul^0,w,c
  5860  001FBC  6E18               	movwf	___flmul@temp^0,c
  5861  001FBE  0EFF               	movlw	255
  5862  001FC0  200A               	addwfc	(??___flmul+1)^0,w,c
  5863  001FC2  6E19               	movwf	(___flmul@temp+1)^0,c
  5864  001FC4  EFF9  F00F         	goto	l3020
  5865  001FC8                     l3014:
  5866  001FC8  90D8               	bcf	status,0,c
  5867  001FCA  3614               	rlcf	___flmul@prod^0,f,c
  5868  001FCC  3615               	rlcf	(___flmul@prod+1)^0,f,c
  5869  001FCE  3616               	rlcf	(___flmul@prod+2)^0,f,c
  5870  001FD0  3617               	rlcf	(___flmul@prod+3)^0,f,c
  5871  001FD2  AE11               	btfss	(___flmul@grs+3)^0,7,c
  5872  001FD4  EFEE  F00F         	goto	u3141
  5873  001FD8  EFF0  F00F         	goto	u3140
  5874  001FDC                     u3141:
  5875  001FDC  EFF1  F00F         	goto	l741
  5876  001FE0                     u3140:
  5877  001FE0  8014               	bsf	___flmul@prod^0,0,c
  5878  001FE2                     l741:
  5879  001FE2  90D8               	bcf	status,0,c
  5880  001FE4  360E               	rlcf	___flmul@grs^0,f,c
  5881  001FE6  360F               	rlcf	(___flmul@grs+1)^0,f,c
  5882  001FE8  3610               	rlcf	(___flmul@grs+2)^0,f,c
  5883  001FEA  3611               	rlcf	(___flmul@grs+3)^0,f,c
  5884  001FEC  0618               	decf	___flmul@temp^0,f,c
  5885  001FEE  A0D8               	btfss	status,0,c
  5886  001FF0  0619               	decf	(___flmul@temp+1)^0,f,c
  5887  001FF2                     l3020:
  5888  001FF2  AE16               	btfss	(___flmul@prod+2)^0,7,c
  5889  001FF4  EFFE  F00F         	goto	u3151
  5890  001FF8  EF00  F010         	goto	u3150
  5891  001FFC                     u3151:
  5892  001FFC  EFE4  F00F         	goto	l3014
  5893  002000                     u3150:
  5894  002000  0E00               	movlw	0
  5895  002002  6E12               	movwf	___flmul@aexp^0,c
  5896  002004  AE11               	btfss	(___flmul@grs+3)^0,7,c
  5897  002006  EF07  F010         	goto	u3161
  5898  00200A  EF09  F010         	goto	u3160
  5899  00200E                     u3161:
  5900  00200E  EF2D  F010         	goto	l743
  5901  002012                     u3160:
  5902  002012  0EFF               	movlw	255
  5903  002014  140E               	andwf	___flmul@grs^0,w,c
  5904  002016  6E09               	movwf	??___flmul^0,c
  5905  002018  0EFF               	movlw	255
  5906  00201A  140F               	andwf	(___flmul@grs+1)^0,w,c
  5907  00201C  6E0A               	movwf	(??___flmul+1)^0,c
  5908  00201E  0EFF               	movlw	255
  5909  002020  1410               	andwf	(___flmul@grs+2)^0,w,c
  5910  002022  6E0B               	movwf	(??___flmul+2)^0,c
  5911  002024  0E7F               	movlw	127
  5912  002026  1411               	andwf	(___flmul@grs+3)^0,w,c
  5913  002028  6E0C               	movwf	(??___flmul+3)^0,c
  5914  00202A  5009               	movf	??___flmul^0,w,c
  5915  00202C  100A               	iorwf	(??___flmul+1)^0,w,c
  5916  00202E  100B               	iorwf	(??___flmul+2)^0,w,c
  5917  002030  100C               	iorwf	(??___flmul+3)^0,w,c
  5918  002032  B4D8               	btfsc	status,2,c
  5919  002034  EF1E  F010         	goto	u3171
  5920  002038  EF20  F010         	goto	u3170
  5921  00203C                     u3171:
  5922  00203C  EF24  F010         	goto	l744
  5923  002040                     u3170:
  5924  002040                     l3028:
  5925  002040  0E01               	movlw	1
  5926  002042  6E12               	movwf	___flmul@aexp^0,c
  5927  002044  EF2D  F010         	goto	l743
  5928  002048                     l744:
  5929  002048  A014               	btfss	___flmul@prod^0,0,c
  5930  00204A  EF29  F010         	goto	u3181
  5931  00204E  EF2B  F010         	goto	u3180
  5932  002052                     u3181:
  5933  002052  EF2D  F010         	goto	l743
  5934  002056                     u3180:
  5935  002056  EF20  F010         	goto	l3028
  5936  00205A                     l743:
  5937  00205A  5012               	movf	___flmul@aexp^0,w,c
  5938  00205C  B4D8               	btfsc	status,2,c
  5939  00205E  EF33  F010         	goto	u3191
  5940  002062  EF35  F010         	goto	u3190
  5941  002066                     u3191:
  5942  002066  EF59  F010         	goto	l3040
  5943  00206A                     u3190:
  5944  00206A  0E01               	movlw	1
  5945  00206C  2614               	addwf	___flmul@prod^0,f,c
  5946  00206E  0E00               	movlw	0
  5947  002070  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5948  002072  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5949  002074  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5950  002076  A017               	btfss	(___flmul@prod+3)^0,0,c
  5951  002078  EF40  F010         	goto	u3201
  5952  00207C  EF42  F010         	goto	u3200
  5953  002080                     u3201:
  5954  002080  EF59  F010         	goto	l3040
  5955  002084                     u3200:
  5956  002084  C014  F009         	movff	___flmul@prod,??___flmul
  5957  002088  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  5958  00208C  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  5959  002090  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  5960  002094  340C               	rlcf	(??___flmul+3)^0,w,c
  5961  002096  320C               	rrcf	(??___flmul+3)^0,f,c
  5962  002098  320B               	rrcf	(??___flmul+2)^0,f,c
  5963  00209A  320A               	rrcf	(??___flmul+1)^0,f,c
  5964  00209C  3209               	rrcf	??___flmul^0,f,c
  5965  00209E  C009  F014         	movff	??___flmul,___flmul@prod
  5966  0020A2  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  5967  0020A6  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  5968  0020AA  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  5969  0020AE  4A18               	infsnz	___flmul@temp^0,f,c
  5970  0020B0  2A19               	incf	(___flmul@temp+1)^0,f,c
  5971  0020B2                     l3040:
  5972  0020B2  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  5973  0020B4  EF64  F010         	goto	u3211
  5974  0020B8  5019               	movf	(___flmul@temp+1)^0,w,c
  5975  0020BA  E108               	bnz	u3210
  5976  0020BC  2818               	incf	___flmul@temp^0,w,c
  5977  0020BE  A0D8               	btfss	status,0,c
  5978  0020C0  EF64  F010         	goto	u3211
  5979  0020C4  EF66  F010         	goto	u3210
  5980  0020C8                     u3211:
  5981  0020C8  EF70  F010         	goto	l3044
  5982  0020CC                     u3210:
  5983  0020CC  0E00               	movlw	0
  5984  0020CE  6E14               	movwf	___flmul@prod^0,c
  5985  0020D0  0E00               	movlw	0
  5986  0020D2  6E15               	movwf	(___flmul@prod+1)^0,c
  5987  0020D4  0E80               	movlw	128
  5988  0020D6  6E16               	movwf	(___flmul@prod+2)^0,c
  5989  0020D8  0E7F               	movlw	127
  5990  0020DA  6E17               	movwf	(___flmul@prod+3)^0,c
  5991  0020DC  EF9E  F010         	goto	l3056
  5992  0020E0                     l3044:
  5993  0020E0  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  5994  0020E2  EF7D  F010         	goto	u3220
  5995  0020E6  5019               	movf	(___flmul@temp+1)^0,w,c
  5996  0020E8  E106               	bnz	u3221
  5997  0020EA  0418               	decf	___flmul@temp^0,w,c
  5998  0020EC  B0D8               	btfsc	status,0,c
  5999  0020EE  EF7B  F010         	goto	u3221
  6000  0020F2  EF7D  F010         	goto	u3220
  6001  0020F6                     u3221:
  6002  0020F6  EF89  F010         	goto	l751
  6003  0020FA                     u3220:
  6004  0020FA  0E00               	movlw	0
  6005  0020FC  6E14               	movwf	___flmul@prod^0,c
  6006  0020FE  0E00               	movlw	0
  6007  002100  6E15               	movwf	(___flmul@prod+1)^0,c
  6008  002102  0E00               	movlw	0
  6009  002104  6E16               	movwf	(___flmul@prod+2)^0,c
  6010  002106  0E00               	movlw	0
  6011  002108  6E17               	movwf	(___flmul@prod+3)^0,c
  6012  00210A  0E00               	movlw	0
  6013  00210C  6E0D               	movwf	___flmul@sign^0,c
  6014  00210E  EF9E  F010         	goto	l3056
  6015  002112                     l751:
  6016  002112  C018  F013         	movff	___flmul@temp,___flmul@bexp
  6017  002116  0EFF               	movlw	255
  6018  002118  1614               	andwf	___flmul@prod^0,f,c
  6019  00211A  0EFF               	movlw	255
  6020  00211C  1615               	andwf	(___flmul@prod+1)^0,f,c
  6021  00211E  0E7F               	movlw	127
  6022  002120  1616               	andwf	(___flmul@prod+2)^0,f,c
  6023  002122  0E00               	movlw	0
  6024  002124  1617               	andwf	(___flmul@prod+3)^0,f,c
  6025  002126  A013               	btfss	___flmul@bexp^0,0,c
  6026  002128  EF98  F010         	goto	u3231
  6027  00212C  EF9A  F010         	goto	u3230
  6028  002130                     u3231:
  6029  002130  EF9B  F010         	goto	l3054
  6030  002134                     u3230:
  6031  002134  8E16               	bsf	(___flmul@prod+2)^0,7,c
  6032  002136                     l3054:
  6033  002136  90D8               	bcf	status,0,c
  6034  002138  3013               	rrcf	___flmul@bexp^0,w,c
  6035  00213A  6E17               	movwf	(___flmul@prod+3)^0,c
  6036  00213C                     l3056:
  6037  00213C  500D               	movf	___flmul@sign^0,w,c
  6038  00213E  1217               	iorwf	(___flmul@prod+3)^0,f,c
  6039  002140  C014  F001         	movff	___flmul@prod,?___flmul
  6040  002144  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  6041  002148  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  6042  00214C  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  6043  002150                     l738:
  6044  002150  0012               	return		;funcret
  6045  002152                     __end_of___flmul:
  6046                           	callstack 0
  6047                           
  6048 ;; *************** function ___flge *****************
  6049 ;; Defined at:
  6050 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flge.c"
  6051 ;; Parameters:    Size  Location     Type
  6052 ;;  ff1             4   25[COMRAM] unsigned char 
  6053 ;;  ff2             4   29[COMRAM] unsigned char 
  6054 ;; Auto vars:     Size  Location     Type
  6055 ;;		None
  6056 ;; Return value:  Size  Location     Type
  6057 ;;		None               void
  6058 ;; Registers used:
  6059 ;;		wreg, status,2, status,0
  6060 ;; Tracked objects:
  6061 ;;		On entry : 0/0
  6062 ;;		On exit  : 0/0
  6063 ;;		Unchanged: 0/0
  6064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6065 ;;      Params:         8       0       0       0       0       0       0       0       0
  6066 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6067 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6068 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6069 ;;Total ram usage:       12 bytes
  6070 ;; Hardware stack levels used: 1
  6071 ;; This function calls:
  6072 ;;		Nothing
  6073 ;; This function is called by:
  6074 ;;		_efgtoa
  6075 ;; This function uses a non-reentrant model
  6076 ;;
  6077                           
  6078                           	psect	text21
  6079  002B0E                     __ptext21:
  6080                           	callstack 0
  6081  002B0E                     ___flge:
  6082                           	callstack 26
  6083  002B0E  0E00               	movlw	0
  6084  002B10  141A               	andwf	___flge@ff1^0,w,c
  6085  002B12  6E22               	movwf	??___flge^0,c
  6086  002B14  0E00               	movlw	0
  6087  002B16  141B               	andwf	(___flge@ff1+1)^0,w,c
  6088  002B18  6E23               	movwf	(??___flge+1)^0,c
  6089  002B1A  0E80               	movlw	128
  6090  002B1C  141C               	andwf	(___flge@ff1+2)^0,w,c
  6091  002B1E  6E24               	movwf	(??___flge+2)^0,c
  6092  002B20  0E7F               	movlw	127
  6093  002B22  141D               	andwf	(___flge@ff1+3)^0,w,c
  6094  002B24  6E25               	movwf	(??___flge+3)^0,c
  6095  002B26  5022               	movf	??___flge^0,w,c
  6096  002B28  1023               	iorwf	(??___flge+1)^0,w,c
  6097  002B2A  1024               	iorwf	(??___flge+2)^0,w,c
  6098  002B2C  1025               	iorwf	(??___flge+3)^0,w,c
  6099  002B2E  A4D8               	btfss	status,2,c
  6100  002B30  EF9C  F015         	goto	u3391
  6101  002B34  EF9E  F015         	goto	u3390
  6102  002B38                     u3391:
  6103  002B38  EFA6  F015         	goto	l3168
  6104  002B3C                     u3390:
  6105  002B3C  0E00               	movlw	0
  6106  002B3E  6E1A               	movwf	___flge@ff1^0,c
  6107  002B40  0E00               	movlw	0
  6108  002B42  6E1B               	movwf	(___flge@ff1+1)^0,c
  6109  002B44  0E00               	movlw	0
  6110  002B46  6E1C               	movwf	(___flge@ff1+2)^0,c
  6111  002B48  0E00               	movlw	0
  6112  002B4A  6E1D               	movwf	(___flge@ff1+3)^0,c
  6113  002B4C                     l3168:
  6114  002B4C  0E00               	movlw	0
  6115  002B4E  141E               	andwf	___flge@ff2^0,w,c
  6116  002B50  6E22               	movwf	??___flge^0,c
  6117  002B52  0E00               	movlw	0
  6118  002B54  141F               	andwf	(___flge@ff2+1)^0,w,c
  6119  002B56  6E23               	movwf	(??___flge+1)^0,c
  6120  002B58  0E80               	movlw	128
  6121  002B5A  1420               	andwf	(___flge@ff2+2)^0,w,c
  6122  002B5C  6E24               	movwf	(??___flge+2)^0,c
  6123  002B5E  0E7F               	movlw	127
  6124  002B60  1421               	andwf	(___flge@ff2+3)^0,w,c
  6125  002B62  6E25               	movwf	(??___flge+3)^0,c
  6126  002B64  5022               	movf	??___flge^0,w,c
  6127  002B66  1023               	iorwf	(??___flge+1)^0,w,c
  6128  002B68  1024               	iorwf	(??___flge+2)^0,w,c
  6129  002B6A  1025               	iorwf	(??___flge+3)^0,w,c
  6130  002B6C  A4D8               	btfss	status,2,c
  6131  002B6E  EFBB  F015         	goto	u3401
  6132  002B72  EFBD  F015         	goto	u3400
  6133  002B76                     u3401:
  6134  002B76  EFC5  F015         	goto	l3172
  6135  002B7A                     u3400:
  6136  002B7A  0E00               	movlw	0
  6137  002B7C  6E1E               	movwf	___flge@ff2^0,c
  6138  002B7E  0E00               	movlw	0
  6139  002B80  6E1F               	movwf	(___flge@ff2+1)^0,c
  6140  002B82  0E00               	movlw	0
  6141  002B84  6E20               	movwf	(___flge@ff2+2)^0,c
  6142  002B86  0E00               	movlw	0
  6143  002B88  6E21               	movwf	(___flge@ff2+3)^0,c
  6144  002B8A                     l3172:
  6145  002B8A  AE1D               	btfss	(___flge@ff1+3)^0,7,c
  6146  002B8C  EFCA  F015         	goto	u3411
  6147  002B90  EFCC  F015         	goto	u3410
  6148  002B94                     u3411:
  6149  002B94  EFD5  F015         	goto	l3176
  6150  002B98                     u3410:
  6151  002B98  6C1A               	negf	___flge@ff1^0,c
  6152  002B9A  1E1B               	comf	(___flge@ff1+1)^0,f,c
  6153  002B9C  B0D8               	btfsc	status,0,c
  6154  002B9E  2A1B               	incf	(___flge@ff1+1)^0,f,c
  6155  002BA0  1E1C               	comf	(___flge@ff1+2)^0,f,c
  6156  002BA2  B0D8               	btfsc	status,0,c
  6157  002BA4  2A1C               	incf	(___flge@ff1+2)^0,f,c
  6158  002BA6  0E80               	movlw	128
  6159  002BA8  561D               	subfwb	(___flge@ff1+3)^0,f,c
  6160  002BAA                     l3176:
  6161  002BAA  AE21               	btfss	(___flge@ff2+3)^0,7,c
  6162  002BAC  EFDA  F015         	goto	u3421
  6163  002BB0  EFDC  F015         	goto	u3420
  6164  002BB4                     u3421:
  6165  002BB4  EFE5  F015         	goto	l385
  6166  002BB8                     u3420:
  6167  002BB8  6C1E               	negf	___flge@ff2^0,c
  6168  002BBA  1E1F               	comf	(___flge@ff2+1)^0,f,c
  6169  002BBC  B0D8               	btfsc	status,0,c
  6170  002BBE  2A1F               	incf	(___flge@ff2+1)^0,f,c
  6171  002BC0  1E20               	comf	(___flge@ff2+2)^0,f,c
  6172  002BC2  B0D8               	btfsc	status,0,c
  6173  002BC4  2A20               	incf	(___flge@ff2+2)^0,f,c
  6174  002BC6  0E80               	movlw	128
  6175  002BC8  5621               	subfwb	(___flge@ff2+3)^0,f,c
  6176  002BCA                     l385:
  6177  002BCA  0E00               	movlw	0
  6178  002BCC  1A1A               	xorwf	___flge@ff1^0,f,c
  6179  002BCE  0E00               	movlw	0
  6180  002BD0  1A1B               	xorwf	(___flge@ff1+1)^0,f,c
  6181  002BD2  0E00               	movlw	0
  6182  002BD4  1A1C               	xorwf	(___flge@ff1+2)^0,f,c
  6183  002BD6  0E80               	movlw	128
  6184  002BD8  1A1D               	xorwf	(___flge@ff1+3)^0,f,c
  6185  002BDA  0E00               	movlw	0
  6186  002BDC  1A1E               	xorwf	___flge@ff2^0,f,c
  6187  002BDE  0E00               	movlw	0
  6188  002BE0  1A1F               	xorwf	(___flge@ff2+1)^0,f,c
  6189  002BE2  0E00               	movlw	0
  6190  002BE4  1A20               	xorwf	(___flge@ff2+2)^0,f,c
  6191  002BE6  0E80               	movlw	128
  6192  002BE8  1A21               	xorwf	(___flge@ff2+3)^0,f,c
  6193  002BEA  501E               	movf	___flge@ff2^0,w,c
  6194  002BEC  5C1A               	subwf	___flge@ff1^0,w,c
  6195  002BEE  501F               	movf	(___flge@ff2+1)^0,w,c
  6196  002BF0  581B               	subwfb	(___flge@ff1+1)^0,w,c
  6197  002BF2  5020               	movf	(___flge@ff2+2)^0,w,c
  6198  002BF4  581C               	subwfb	(___flge@ff1+2)^0,w,c
  6199  002BF6  5021               	movf	(___flge@ff2+3)^0,w,c
  6200  002BF8  581D               	subwfb	(___flge@ff1+3)^0,w,c
  6201  002BFA  B0D8               	btfsc	status,0,c
  6202  002BFC  EF02  F016         	goto	u3431
  6203  002C00  EF04  F016         	goto	u3430
  6204  002C04                     u3431:
  6205  002C04  EF07  F016         	goto	l3182
  6206  002C08                     u3430:
  6207  002C08  90D8               	bcf	status,0,c
  6208  002C0A  EF08  F016         	goto	l390
  6209  002C0E                     l3182:
  6210  002C0E  80D8               	bsf	status,0,c
  6211  002C10                     l390:
  6212  002C10  0012               	return		;funcret
  6213  002C12                     __end_of___flge:
  6214                           	callstack 0
  6215                           
  6216 ;; *************** function ___fleq *****************
  6217 ;; Defined at:
  6218 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fleq.c"
  6219 ;; Parameters:    Size  Location     Type
  6220 ;;  ff1             4    0[COMRAM] unsigned char 
  6221 ;;  ff2             4    4[COMRAM] unsigned char 
  6222 ;; Auto vars:     Size  Location     Type
  6223 ;;		None
  6224 ;; Return value:  Size  Location     Type
  6225 ;;		None               void
  6226 ;; Registers used:
  6227 ;;		wreg, status,2, status,0
  6228 ;; Tracked objects:
  6229 ;;		On entry : 0/0
  6230 ;;		On exit  : 0/0
  6231 ;;		Unchanged: 0/0
  6232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6233 ;;      Params:         8       0       0       0       0       0       0       0       0
  6234 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6235 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6236 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6237 ;;Total ram usage:       12 bytes
  6238 ;; Hardware stack levels used: 1
  6239 ;; This function calls:
  6240 ;;		Nothing
  6241 ;; This function is called by:
  6242 ;;		_efgtoa
  6243 ;; This function uses a non-reentrant model
  6244 ;;
  6245                           
  6246                           	psect	text22
  6247  0030E6                     __ptext22:
  6248                           	callstack 0
  6249  0030E6                     ___fleq:
  6250                           	callstack 26
  6251  0030E6  0E00               	movlw	0
  6252  0030E8  1401               	andwf	___fleq@ff1^0,w,c
  6253  0030EA  6E09               	movwf	??___fleq^0,c
  6254  0030EC  0E00               	movlw	0
  6255  0030EE  1402               	andwf	(___fleq@ff1+1)^0,w,c
  6256  0030F0  6E0A               	movwf	(??___fleq+1)^0,c
  6257  0030F2  0E80               	movlw	128
  6258  0030F4  1403               	andwf	(___fleq@ff1+2)^0,w,c
  6259  0030F6  6E0B               	movwf	(??___fleq+2)^0,c
  6260  0030F8  0E7F               	movlw	127
  6261  0030FA  1404               	andwf	(___fleq@ff1+3)^0,w,c
  6262  0030FC  6E0C               	movwf	(??___fleq+3)^0,c
  6263  0030FE  5009               	movf	??___fleq^0,w,c
  6264  003100  100A               	iorwf	(??___fleq+1)^0,w,c
  6265  003102  100B               	iorwf	(??___fleq+2)^0,w,c
  6266  003104  100C               	iorwf	(??___fleq+3)^0,w,c
  6267  003106  A4D8               	btfss	status,2,c
  6268  003108  EF88  F018         	goto	u3361
  6269  00310C  EF8A  F018         	goto	u3360
  6270  003110                     u3361:
  6271  003110  EF92  F018         	goto	l3152
  6272  003114                     u3360:
  6273  003114  0E00               	movlw	0
  6274  003116  6E01               	movwf	___fleq@ff1^0,c
  6275  003118  0E00               	movlw	0
  6276  00311A  6E02               	movwf	(___fleq@ff1+1)^0,c
  6277  00311C  0E00               	movlw	0
  6278  00311E  6E03               	movwf	(___fleq@ff1+2)^0,c
  6279  003120  0E00               	movlw	0
  6280  003122  6E04               	movwf	(___fleq@ff1+3)^0,c
  6281  003124                     l3152:
  6282  003124  0E00               	movlw	0
  6283  003126  1405               	andwf	___fleq@ff2^0,w,c
  6284  003128  6E09               	movwf	??___fleq^0,c
  6285  00312A  0E00               	movlw	0
  6286  00312C  1406               	andwf	(___fleq@ff2+1)^0,w,c
  6287  00312E  6E0A               	movwf	(??___fleq+1)^0,c
  6288  003130  0E80               	movlw	128
  6289  003132  1407               	andwf	(___fleq@ff2+2)^0,w,c
  6290  003134  6E0B               	movwf	(??___fleq+2)^0,c
  6291  003136  0E7F               	movlw	127
  6292  003138  1408               	andwf	(___fleq@ff2+3)^0,w,c
  6293  00313A  6E0C               	movwf	(??___fleq+3)^0,c
  6294  00313C  5009               	movf	??___fleq^0,w,c
  6295  00313E  100A               	iorwf	(??___fleq+1)^0,w,c
  6296  003140  100B               	iorwf	(??___fleq+2)^0,w,c
  6297  003142  100C               	iorwf	(??___fleq+3)^0,w,c
  6298  003144  A4D8               	btfss	status,2,c
  6299  003146  EFA7  F018         	goto	u3371
  6300  00314A  EFA9  F018         	goto	u3370
  6301  00314E                     u3371:
  6302  00314E  EFB1  F018         	goto	l3156
  6303  003152                     u3370:
  6304  003152  0E00               	movlw	0
  6305  003154  6E05               	movwf	___fleq@ff2^0,c
  6306  003156  0E00               	movlw	0
  6307  003158  6E06               	movwf	(___fleq@ff2+1)^0,c
  6308  00315A  0E00               	movlw	0
  6309  00315C  6E07               	movwf	(___fleq@ff2+2)^0,c
  6310  00315E  0E00               	movlw	0
  6311  003160  6E08               	movwf	(___fleq@ff2+3)^0,c
  6312  003162                     l3156:
  6313  003162  5005               	movf	___fleq@ff2^0,w,c
  6314  003164  1801               	xorwf	___fleq@ff1^0,w,c
  6315  003166  E10F               	bnz	u3380
  6316  003168  5006               	movf	(___fleq@ff2+1)^0,w,c
  6317  00316A  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  6318  00316C  E10C               	bnz	u3380
  6319  00316E  5007               	movf	(___fleq@ff2+2)^0,w,c
  6320  003170  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  6321  003172  E109               	bnz	u3380
  6322  003174  5008               	movf	(___fleq@ff2+3)^0,w,c
  6323  003176  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  6324  003178  B4D8               	btfsc	status,2,c
  6325  00317A  EFC1  F018         	goto	u3381
  6326  00317E  EFC3  F018         	goto	u3380
  6327  003182                     u3381:
  6328  003182  EFC6  F018         	goto	l3160
  6329  003186                     u3380:
  6330  003186  90D8               	bcf	status,0,c
  6331  003188  EFC7  F018         	goto	l379
  6332  00318C                     l3160:
  6333  00318C  80D8               	bsf	status,0,c
  6334  00318E                     l379:
  6335  00318E  0012               	return		;funcret
  6336  003190                     __end_of___fleq:
  6337                           	callstack 0
  6338                           
  6339 ;; *************** function ___awmod *****************
  6340 ;; Defined at:
  6341 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awmod.c"
  6342 ;; Parameters:    Size  Location     Type
  6343 ;;  dividend        2    0[COMRAM] int 
  6344 ;;  divisor         2    2[COMRAM] int 
  6345 ;; Auto vars:     Size  Location     Type
  6346 ;;  sign            1    5[COMRAM] unsigned char 
  6347 ;;  counter         1    4[COMRAM] unsigned char 
  6348 ;; Return value:  Size  Location     Type
  6349 ;;                  2    0[COMRAM] int 
  6350 ;; Registers used:
  6351 ;;		wreg, status,2, status,0
  6352 ;; Tracked objects:
  6353 ;;		On entry : 0/0
  6354 ;;		On exit  : 0/0
  6355 ;;		Unchanged: 0/0
  6356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6357 ;;      Params:         4       0       0       0       0       0       0       0       0
  6358 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6359 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6360 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6361 ;;Total ram usage:        6 bytes
  6362 ;; Hardware stack levels used: 1
  6363 ;; This function calls:
  6364 ;;		Nothing
  6365 ;; This function is called by:
  6366 ;;		_efgtoa
  6367 ;; This function uses a non-reentrant model
  6368 ;;
  6369                           
  6370                           	psect	text23
  6371  003036                     __ptext23:
  6372                           	callstack 0
  6373  003036                     ___awmod:
  6374                           	callstack 26
  6375  003036  0E00               	movlw	0
  6376  003038  6E06               	movwf	___awmod@sign^0,c
  6377  00303A  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  6378  00303C  EF24  F018         	goto	u3300
  6379  003040  EF22  F018         	goto	u3301
  6380  003044                     u3301:
  6381  003044  EF2A  F018         	goto	l3120
  6382  003048                     u3300:
  6383  003048  6C01               	negf	___awmod@dividend^0,c
  6384  00304A  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6385  00304C  B0D8               	btfsc	status,0,c
  6386  00304E  2A02               	incf	(___awmod@dividend+1)^0,f,c
  6387  003050  0E01               	movlw	1
  6388  003052  6E06               	movwf	___awmod@sign^0,c
  6389  003054                     l3120:
  6390  003054  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  6391  003056  EF31  F018         	goto	u3310
  6392  00305A  EF2F  F018         	goto	u3311
  6393  00305E                     u3311:
  6394  00305E  EF35  F018         	goto	l3124
  6395  003062                     u3310:
  6396  003062  6C03               	negf	___awmod@divisor^0,c
  6397  003064  1E04               	comf	(___awmod@divisor+1)^0,f,c
  6398  003066  B0D8               	btfsc	status,0,c
  6399  003068  2A04               	incf	(___awmod@divisor+1)^0,f,c
  6400  00306A                     l3124:
  6401  00306A  5003               	movf	___awmod@divisor^0,w,c
  6402  00306C  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  6403  00306E  B4D8               	btfsc	status,2,c
  6404  003070  EF3C  F018         	goto	u3321
  6405  003074  EF3E  F018         	goto	u3320
  6406  003078                     u3321:
  6407  003078  EF62  F018         	goto	l3140
  6408  00307C                     u3320:
  6409  00307C  0E01               	movlw	1
  6410  00307E  6E05               	movwf	___awmod@counter^0,c
  6411  003080  EF46  F018         	goto	l3130
  6412  003084                     l3128:
  6413  003084  90D8               	bcf	status,0,c
  6414  003086  3603               	rlcf	___awmod@divisor^0,f,c
  6415  003088  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  6416  00308A  2A05               	incf	___awmod@counter^0,f,c
  6417  00308C                     l3130:
  6418  00308C  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  6419  00308E  EF4B  F018         	goto	u3331
  6420  003092  EF4D  F018         	goto	u3330
  6421  003096                     u3331:
  6422  003096  EF42  F018         	goto	l3128
  6423  00309A                     u3330:
  6424  00309A                     l3132:
  6425  00309A  5003               	movf	___awmod@divisor^0,w,c
  6426  00309C  5C01               	subwf	___awmod@dividend^0,w,c
  6427  00309E  5004               	movf	(___awmod@divisor+1)^0,w,c
  6428  0030A0  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  6429  0030A2  A0D8               	btfss	status,0,c
  6430  0030A4  EF56  F018         	goto	u3341
  6431  0030A8  EF58  F018         	goto	u3340
  6432  0030AC                     u3341:
  6433  0030AC  EF5C  F018         	goto	l3136
  6434  0030B0                     u3340:
  6435  0030B0  5003               	movf	___awmod@divisor^0,w,c
  6436  0030B2  5E01               	subwf	___awmod@dividend^0,f,c
  6437  0030B4  5004               	movf	(___awmod@divisor+1)^0,w,c
  6438  0030B6  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  6439  0030B8                     l3136:
  6440  0030B8  90D8               	bcf	status,0,c
  6441  0030BA  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  6442  0030BC  3203               	rrcf	___awmod@divisor^0,f,c
  6443  0030BE  2E05               	decfsz	___awmod@counter^0,f,c
  6444  0030C0  EF4D  F018         	goto	l3132
  6445  0030C4                     l3140:
  6446  0030C4  5006               	movf	___awmod@sign^0,w,c
  6447  0030C6  B4D8               	btfsc	status,2,c
  6448  0030C8  EF68  F018         	goto	u3351
  6449  0030CC  EF6A  F018         	goto	u3350
  6450  0030D0                     u3351:
  6451  0030D0  EF6E  F018         	goto	l3144
  6452  0030D4                     u3350:
  6453  0030D4  6C01               	negf	___awmod@dividend^0,c
  6454  0030D6  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6455  0030D8  B0D8               	btfsc	status,0,c
  6456  0030DA  2A02               	incf	(___awmod@dividend+1)^0,f,c
  6457  0030DC                     l3144:
  6458  0030DC  C001  F001         	movff	___awmod@dividend,?___awmod
  6459  0030E0  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  6460  0030E4  0012               	return		;funcret
  6461  0030E6                     __end_of___awmod:
  6462                           	callstack 0
  6463                           
  6464 ;; *************** function ___awdiv *****************
  6465 ;; Defined at:
  6466 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
  6467 ;; Parameters:    Size  Location     Type
  6468 ;;  dividend        2    0[COMRAM] int 
  6469 ;;  divisor         2    2[COMRAM] int 
  6470 ;; Auto vars:     Size  Location     Type
  6471 ;;  quotient        2    6[COMRAM] int 
  6472 ;;  sign            1    5[COMRAM] unsigned char 
  6473 ;;  counter         1    4[COMRAM] unsigned char 
  6474 ;; Return value:  Size  Location     Type
  6475 ;;                  2    0[COMRAM] int 
  6476 ;; Registers used:
  6477 ;;		wreg, status,2, status,0
  6478 ;; Tracked objects:
  6479 ;;		On entry : 0/0
  6480 ;;		On exit  : 0/0
  6481 ;;		Unchanged: 0/0
  6482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6483 ;;      Params:         4       0       0       0       0       0       0       0       0
  6484 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6485 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6486 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6487 ;;Total ram usage:        8 bytes
  6488 ;; Hardware stack levels used: 1
  6489 ;; This function calls:
  6490 ;;		Nothing
  6491 ;; This function is called by:
  6492 ;;		_efgtoa
  6493 ;; This function uses a non-reentrant model
  6494 ;;
  6495                           
  6496                           	psect	text24
  6497  002EB0                     __ptext24:
  6498                           	callstack 0
  6499  002EB0                     ___awdiv:
  6500                           	callstack 26
  6501  002EB0  0E00               	movlw	0
  6502  002EB2  6E06               	movwf	___awdiv@sign^0,c
  6503  002EB4  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  6504  002EB6  EF61  F017         	goto	u3240
  6505  002EBA  EF5F  F017         	goto	u3241
  6506  002EBE                     u3241:
  6507  002EBE  EF67  F017         	goto	l3076
  6508  002EC2                     u3240:
  6509  002EC2  6C03               	negf	___awdiv@divisor^0,c
  6510  002EC4  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  6511  002EC6  B0D8               	btfsc	status,0,c
  6512  002EC8  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  6513  002ECA  0E01               	movlw	1
  6514  002ECC  6E06               	movwf	___awdiv@sign^0,c
  6515  002ECE                     l3076:
  6516  002ECE  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  6517  002ED0  EF6E  F017         	goto	u3250
  6518  002ED4  EF6C  F017         	goto	u3251
  6519  002ED8                     u3251:
  6520  002ED8  EF74  F017         	goto	l3082
  6521  002EDC                     u3250:
  6522  002EDC  6C01               	negf	___awdiv@dividend^0,c
  6523  002EDE  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  6524  002EE0  B0D8               	btfsc	status,0,c
  6525  002EE2  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  6526  002EE4  0E01               	movlw	1
  6527  002EE6  1A06               	xorwf	___awdiv@sign^0,f,c
  6528  002EE8                     l3082:
  6529  002EE8  0E00               	movlw	0
  6530  002EEA  6E08               	movwf	(___awdiv@quotient+1)^0,c
  6531  002EEC  0E00               	movlw	0
  6532  002EEE  6E07               	movwf	___awdiv@quotient^0,c
  6533  002EF0  5003               	movf	___awdiv@divisor^0,w,c
  6534  002EF2  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  6535  002EF4  B4D8               	btfsc	status,2,c
  6536  002EF6  EF7F  F017         	goto	u3261
  6537  002EFA  EF81  F017         	goto	u3260
  6538  002EFE                     u3261:
  6539  002EFE  EFA9  F017         	goto	l3104
  6540  002F02                     u3260:
  6541  002F02  0E01               	movlw	1
  6542  002F04  6E05               	movwf	___awdiv@counter^0,c
  6543  002F06  EF89  F017         	goto	l3090
  6544  002F0A                     l3088:
  6545  002F0A  90D8               	bcf	status,0,c
  6546  002F0C  3603               	rlcf	___awdiv@divisor^0,f,c
  6547  002F0E  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  6548  002F10  2A05               	incf	___awdiv@counter^0,f,c
  6549  002F12                     l3090:
  6550  002F12  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  6551  002F14  EF8E  F017         	goto	u3271
  6552  002F18  EF90  F017         	goto	u3270
  6553  002F1C                     u3271:
  6554  002F1C  EF85  F017         	goto	l3088
  6555  002F20                     u3270:
  6556  002F20                     l3092:
  6557  002F20  90D8               	bcf	status,0,c
  6558  002F22  3607               	rlcf	___awdiv@quotient^0,f,c
  6559  002F24  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  6560  002F26  5003               	movf	___awdiv@divisor^0,w,c
  6561  002F28  5C01               	subwf	___awdiv@dividend^0,w,c
  6562  002F2A  5004               	movf	(___awdiv@divisor+1)^0,w,c
  6563  002F2C  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  6564  002F2E  A0D8               	btfss	status,0,c
  6565  002F30  EF9C  F017         	goto	u3281
  6566  002F34  EF9E  F017         	goto	u3280
  6567  002F38                     u3281:
  6568  002F38  EFA3  F017         	goto	l3100
  6569  002F3C                     u3280:
  6570  002F3C  5003               	movf	___awdiv@divisor^0,w,c
  6571  002F3E  5E01               	subwf	___awdiv@dividend^0,f,c
  6572  002F40  5004               	movf	(___awdiv@divisor+1)^0,w,c
  6573  002F42  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  6574  002F44  8007               	bsf	___awdiv@quotient^0,0,c
  6575  002F46                     l3100:
  6576  002F46  90D8               	bcf	status,0,c
  6577  002F48  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  6578  002F4A  3203               	rrcf	___awdiv@divisor^0,f,c
  6579  002F4C  2E05               	decfsz	___awdiv@counter^0,f,c
  6580  002F4E  EF90  F017         	goto	l3092
  6581  002F52                     l3104:
  6582  002F52  5006               	movf	___awdiv@sign^0,w,c
  6583  002F54  B4D8               	btfsc	status,2,c
  6584  002F56  EFAF  F017         	goto	u3291
  6585  002F5A  EFB1  F017         	goto	u3290
  6586  002F5E                     u3291:
  6587  002F5E  EFB5  F017         	goto	l3108
  6588  002F62                     u3290:
  6589  002F62  6C07               	negf	___awdiv@quotient^0,c
  6590  002F64  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  6591  002F66  B0D8               	btfsc	status,0,c
  6592  002F68  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  6593  002F6A                     l3108:
  6594  002F6A  C007  F001         	movff	___awdiv@quotient,?___awdiv
  6595  002F6E  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  6596  002F72  0012               	return		;funcret
  6597  002F74                     __end_of___awdiv:
  6598                           	callstack 0
  6599                           
  6600 ;; *************** function _atoi *****************
  6601 ;; Defined at:
  6602 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\atoi.c"
  6603 ;; Parameters:    Size  Location     Type
  6604 ;;  s               2    7[COMRAM] PTR const unsigned char 
  6605 ;;		 -> STR_2(8), 
  6606 ;; Auto vars:     Size  Location     Type
  6607 ;;  n               2   15[COMRAM] int 
  6608 ;;  neg             2   13[COMRAM] int 
  6609 ;; Return value:  Size  Location     Type
  6610 ;;                  2    7[COMRAM] int 
  6611 ;; Registers used:
  6612 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6613 ;; Tracked objects:
  6614 ;;		On entry : 0/0
  6615 ;;		On exit  : 0/0
  6616 ;;		Unchanged: 0/0
  6617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6618 ;;      Params:         2       0       0       0       0       0       0       0       0
  6619 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6620 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6621 ;;      Totals:        10       0       0       0       0       0       0       0       0
  6622 ;;Total ram usage:       10 bytes
  6623 ;; Hardware stack levels used: 1
  6624 ;; Hardware stack levels required when called: 1
  6625 ;; This function calls:
  6626 ;;		___wmul
  6627 ;;		_isdigit
  6628 ;;		_isspace
  6629 ;; This function is called by:
  6630 ;;		_vfpfcnvrt
  6631 ;; This function uses a non-reentrant model
  6632 ;;
  6633                           
  6634                           	psect	text25
  6635  0028B2                     __ptext25:
  6636                           	callstack 0
  6637  0028B2                     _atoi:
  6638                           	callstack 26
  6639  0028B2  0E00               	movlw	0
  6640  0028B4  6E11               	movwf	(atoi@n+1)^0,c
  6641  0028B6  0E00               	movlw	0
  6642  0028B8  6E10               	movwf	atoi@n^0,c
  6643  0028BA  0E00               	movlw	0
  6644  0028BC  6E0F               	movwf	(atoi@neg+1)^0,c
  6645  0028BE  0E00               	movlw	0
  6646  0028C0  6E0E               	movwf	atoi@neg^0,c
  6647  0028C2  EF65  F014         	goto	l3652
  6648  0028C6                     l3648:
  6649  0028C6  4A08               	infsnz	atoi@s^0,f,c
  6650  0028C8  2A09               	incf	(atoi@s+1)^0,f,c
  6651  0028CA                     l3652:
  6652  0028CA  C008  FFF6         	movff	atoi@s,tblptrl
  6653  0028CE  C009  FFF7         	movff	atoi@s+1,tblptrh
  6654  0028D2                     	if	0	;tblptru may be non-zero
  6655  0028D2                     	endif
  6656  0028D2                     	if	0	;tblptru may be non-zero
  6657  0028D2                     	endif
  6658  0028D2  0008               	tblrd		*
  6659  0028D4  50F5               	movf	tablat,w,c
  6660  0028D6  0A20               	xorlw	32
  6661  0028D8  B4D8               	btfsc	status,2,c
  6662  0028DA  EF71  F014         	goto	u4281
  6663  0028DE  EF73  F014         	goto	u4280
  6664  0028E2                     u4281:
  6665  0028E2  EF63  F014         	goto	l3648
  6666  0028E6                     u4280:
  6667  0028E6  0EF7               	movlw	247
  6668  0028E8  6E0A               	movwf	??_atoi^0,c
  6669  0028EA  0EFF               	movlw	255
  6670  0028EC  6E0B               	movwf	(??_atoi+1)^0,c
  6671  0028EE  C008  FFF6         	movff	atoi@s,tblptrl
  6672  0028F2  C009  FFF7         	movff	atoi@s+1,tblptrh
  6673  0028F6                     	if	0	;tblptru may be non-zero
  6674  0028F6                     	endif
  6675  0028F6                     	if	0	;tblptru may be non-zero
  6676  0028F6                     	endif
  6677  0028F6  0008               	tblrd		*
  6678  0028F8  50F5               	movf	tablat,w,c
  6679  0028FA  6E0C               	movwf	(??_atoi+2)^0,c
  6680  0028FC  6A0D               	clrf	(??_atoi+3)^0,c
  6681  0028FE  500A               	movf	??_atoi^0,w,c
  6682  002900  260C               	addwf	(??_atoi+2)^0,f,c
  6683  002902  500B               	movf	(??_atoi+1)^0,w,c
  6684  002904  220D               	addwfc	(??_atoi+3)^0,f,c
  6685  002906  500D               	movf	(??_atoi+3)^0,w,c
  6686  002908  E109               	bnz	u4290
  6687  00290A  0E05               	movlw	5
  6688  00290C  5C0C               	subwf	(??_atoi+2)^0,w,c
  6689  00290E  A0D8               	btfss	status,0,c
  6690  002910  EF8C  F014         	goto	u4291
  6691  002914  EF8E  F014         	goto	u4290
  6692  002918                     u4291:
  6693  002918  EF63  F014         	goto	l3648
  6694  00291C                     u4290:
  6695  00291C  EF98  F014         	goto	l3660
  6696  002920                     l3656:
  6697  002920  0E00               	movlw	0
  6698  002922  6E0F               	movwf	(atoi@neg+1)^0,c
  6699  002924  0E01               	movlw	1
  6700  002926  6E0E               	movwf	atoi@neg^0,c
  6701  002928                     l3658:
  6702  002928  4A08               	infsnz	atoi@s^0,f,c
  6703  00292A  2A09               	incf	(atoi@s+1)^0,f,c
  6704  00292C  EFCD  F014         	goto	l3668
  6705  002930                     l3660:
  6706  002930  C008  FFF6         	movff	atoi@s,tblptrl
  6707  002934  C009  FFF7         	movff	atoi@s+1,tblptrh
  6708  002938                     	if	0	;tblptru may be non-zero
  6709  002938                     	endif
  6710  002938                     	if	0	;tblptru may be non-zero
  6711  002938                     	endif
  6712  002938  0008               	tblrd		*
  6713  00293A  50F5               	movf	tablat,w,c
  6714  00293C  6E0A               	movwf	??_atoi^0,c
  6715  00293E  6A0B               	clrf	(??_atoi+1)^0,c
  6716                           
  6717                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6718                           ; Switch size 1, requested type "simple"
  6719                           ; Number of cases is 1, Range of values is 0 to 0
  6720                           ; switch strategies available:
  6721                           ; Name         Instructions Cycles
  6722                           ; simple_byte            4     3 (average)
  6723                           ;	Chosen strategy is simple_byte
  6724  002940  500B               	movf	(??_atoi+1)^0,w,c
  6725  002942  0A00               	xorlw	0	; case 0
  6726  002944  B4D8               	btfsc	status,2,c
  6727  002946  EFA7  F014         	goto	l4016
  6728  00294A  EFCD  F014         	goto	l3668
  6729  00294E                     l4016:
  6730                           
  6731                           ; Switch size 1, requested type "simple"
  6732                           ; Number of cases is 2, Range of values is 43 to 45
  6733                           ; switch strategies available:
  6734                           ; Name         Instructions Cycles
  6735                           ; simple_byte            7     4 (average)
  6736                           ;	Chosen strategy is simple_byte
  6737  00294E  500A               	movf	??_atoi^0,w,c
  6738  002950  0A2B               	xorlw	43	; case 43
  6739  002952  B4D8               	btfsc	status,2,c
  6740  002954  EF94  F014         	goto	l3658
  6741  002958  0A06               	xorlw	6	; case 45
  6742  00295A  B4D8               	btfsc	status,2,c
  6743  00295C  EF90  F014         	goto	l3656
  6744  002960  EFCD  F014         	goto	l3668
  6745  002964                     l3662:
  6746  002964  C010  F001         	movff	atoi@n,___wmul@multiplier
  6747  002968  C011  F002         	movff	atoi@n+1,___wmul@multiplier+1
  6748  00296C  0E00               	movlw	0
  6749  00296E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6750  002970  0E0A               	movlw	10
  6751  002972  6E03               	movwf	___wmul@multiplicand^0,c
  6752  002974  ECFB  F01B         	call	___wmul	;wreg free
  6753  002978  C008  FFF6         	movff	atoi@s,tblptrl
  6754  00297C  C009  FFF7         	movff	atoi@s+1,tblptrh
  6755  002980                     	if	0	;tblptru may be non-zero
  6756  002980                     	endif
  6757  002980                     	if	0	;tblptru may be non-zero
  6758  002980                     	endif
  6759  002980  0008               	tblrd		*
  6760  002982  50F5               	movf	tablat,w,c
  6761  002984  5E01               	subwf	?___wmul^0,f,c
  6762  002986  0E00               	movlw	0
  6763  002988  5A02               	subwfb	(?___wmul+1)^0,f,c
  6764  00298A  0E30               	movlw	48
  6765  00298C  2401               	addwf	?___wmul^0,w,c
  6766  00298E  6E10               	movwf	atoi@n^0,c
  6767  002990  0E00               	movlw	0
  6768  002992  2002               	addwfc	(?___wmul+1)^0,w,c
  6769  002994  6E11               	movwf	(atoi@n+1)^0,c
  6770  002996  EF94  F014         	goto	l3658
  6771  00299A                     l3668:
  6772  00299A  0ED0               	movlw	208
  6773  00299C  6E0A               	movwf	??_atoi^0,c
  6774  00299E  0EFF               	movlw	255
  6775  0029A0  6E0B               	movwf	(??_atoi+1)^0,c
  6776  0029A2  C008  FFF6         	movff	atoi@s,tblptrl
  6777  0029A6  C009  FFF7         	movff	atoi@s+1,tblptrh
  6778  0029AA                     	if	0	;tblptru may be non-zero
  6779  0029AA                     	endif
  6780  0029AA                     	if	0	;tblptru may be non-zero
  6781  0029AA                     	endif
  6782  0029AA  0008               	tblrd		*
  6783  0029AC  50F5               	movf	tablat,w,c
  6784  0029AE  6E0C               	movwf	(??_atoi+2)^0,c
  6785  0029B0  6A0D               	clrf	(??_atoi+3)^0,c
  6786  0029B2  500A               	movf	??_atoi^0,w,c
  6787  0029B4  260C               	addwf	(??_atoi+2)^0,f,c
  6788  0029B6  500B               	movf	(??_atoi+1)^0,w,c
  6789  0029B8  220D               	addwfc	(??_atoi+3)^0,f,c
  6790  0029BA  500D               	movf	(??_atoi+3)^0,w,c
  6791  0029BC  E109               	bnz	u4300
  6792  0029BE  0E0A               	movlw	10
  6793  0029C0  5C0C               	subwf	(??_atoi+2)^0,w,c
  6794  0029C2  A0D8               	btfss	status,0,c
  6795  0029C4  EFE6  F014         	goto	u4301
  6796  0029C8  EFE8  F014         	goto	u4300
  6797  0029CC                     u4301:
  6798  0029CC  EFB2  F014         	goto	l3662
  6799  0029D0                     u4300:
  6800  0029D0  500E               	movf	atoi@neg^0,w,c
  6801  0029D2  100F               	iorwf	(atoi@neg+1)^0,w,c
  6802  0029D4  A4D8               	btfss	status,2,c
  6803  0029D6  EFEF  F014         	goto	u4311
  6804  0029DA  EFF1  F014         	goto	u4310
  6805  0029DE                     u4311:
  6806  0029DE  EFFF  F014         	goto	l991
  6807  0029E2                     u4310:
  6808  0029E2  C010  F00A         	movff	atoi@n,??_atoi
  6809  0029E6  C011  F00B         	movff	atoi@n+1,??_atoi+1
  6810  0029EA  1E0A               	comf	??_atoi^0,f,c
  6811  0029EC  1E0B               	comf	(??_atoi+1)^0,f,c
  6812  0029EE  4A0A               	infsnz	??_atoi^0,f,c
  6813  0029F0  2A0B               	incf	(??_atoi+1)^0,f,c
  6814  0029F2  C00A  F008         	movff	??_atoi,?_atoi
  6815  0029F6  C00B  F009         	movff	??_atoi+1,?_atoi+1
  6816  0029FA  EF03  F015         	goto	l994
  6817  0029FE                     l991:
  6818  0029FE  C010  F008         	movff	atoi@n,?_atoi
  6819  002A02  C011  F009         	movff	atoi@n+1,?_atoi+1
  6820  002A06                     l994:
  6821  002A06  0012               	return		;funcret
  6822  002A08                     __end_of_atoi:
  6823                           	callstack 0
  6824                           
  6825 ;; *************** function _isspace *****************
  6826 ;; Defined at:
  6827 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isspace.c"
  6828 ;; Parameters:    Size  Location     Type
  6829 ;;  c               2    0[COMRAM] int 
  6830 ;; Auto vars:     Size  Location     Type
  6831 ;;		None
  6832 ;; Return value:  Size  Location     Type
  6833 ;;                  2    0[COMRAM] int 
  6834 ;; Registers used:
  6835 ;;		wreg, status,2, status,0
  6836 ;; Tracked objects:
  6837 ;;		On entry : 0/0
  6838 ;;		On exit  : 0/0
  6839 ;;		Unchanged: 0/0
  6840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6841 ;;      Params:         2       0       0       0       0       0       0       0       0
  6842 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6843 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6844 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6845 ;;Total ram usage:        7 bytes
  6846 ;; Hardware stack levels used: 1
  6847 ;; This function calls:
  6848 ;;		Nothing
  6849 ;; This function is called by:
  6850 ;;		_atoi
  6851 ;; This function uses a non-reentrant model
  6852 ;;
  6853                           
  6854                           	psect	text26
  6855  003570                     __ptext26:
  6856                           	callstack 0
  6857  003570                     _isspace:
  6858                           	callstack 26
  6859  003570  0E01               	movlw	1
  6860  003572  6E07               	movwf	_isspace$1086^0,c
  6861  003574  0E20               	movlw	32
  6862  003576  1801               	xorwf	isspace@c^0,w,c
  6863  003578  1002               	iorwf	(isspace@c+1)^0,w,c
  6864  00357A  B4D8               	btfsc	status,2,c
  6865  00357C  EFC2  F01A         	goto	u3781
  6866  003580  EFC4  F01A         	goto	u3780
  6867  003584                     u3781:
  6868  003584  EFDD  F01A         	goto	l3336
  6869  003588                     u3780:
  6870  003588  0EF7               	movlw	247
  6871  00358A  6E03               	movwf	??_isspace^0,c
  6872  00358C  0EFF               	movlw	255
  6873  00358E  6E04               	movwf	(??_isspace+1)^0,c
  6874  003590  C001  F005         	movff	isspace@c,??_isspace+2
  6875  003594  C002  F006         	movff	isspace@c+1,??_isspace+3
  6876  003598  5003               	movf	??_isspace^0,w,c
  6877  00359A  2605               	addwf	(??_isspace+2)^0,f,c
  6878  00359C  5004               	movf	(??_isspace+1)^0,w,c
  6879  00359E  2206               	addwfc	(??_isspace+3)^0,f,c
  6880  0035A0  5006               	movf	(??_isspace+3)^0,w,c
  6881  0035A2  E109               	bnz	u3790
  6882  0035A4  0E05               	movlw	5
  6883  0035A6  5C05               	subwf	(??_isspace+2)^0,w,c
  6884  0035A8  A0D8               	btfss	status,0,c
  6885  0035AA  EFD9  F01A         	goto	u3791
  6886  0035AE  EFDB  F01A         	goto	u3790
  6887  0035B2                     u3791:
  6888  0035B2  EFDD  F01A         	goto	l3336
  6889  0035B6                     u3790:
  6890  0035B6  0E00               	movlw	0
  6891  0035B8  6E07               	movwf	_isspace$1086^0,c
  6892  0035BA                     l3336:
  6893  0035BA  C007  F001         	movff	_isspace$1086,?_isspace
  6894  0035BE  6A02               	clrf	(?_isspace+1)^0,c
  6895  0035C0  0012               	return		;funcret
  6896  0035C2                     __end_of_isspace:
  6897                           	callstack 0
  6898                           
  6899 ;; *************** function _isdigit *****************
  6900 ;; Defined at:
  6901 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isdigit.c"
  6902 ;; Parameters:    Size  Location     Type
  6903 ;;  c               2    0[COMRAM] int 
  6904 ;; Auto vars:     Size  Location     Type
  6905 ;;		None
  6906 ;; Return value:  Size  Location     Type
  6907 ;;                  2    0[COMRAM] int 
  6908 ;; Registers used:
  6909 ;;		wreg, status,2, status,0
  6910 ;; Tracked objects:
  6911 ;;		On entry : 0/0
  6912 ;;		On exit  : 0/0
  6913 ;;		Unchanged: 0/0
  6914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6915 ;;      Params:         2       0       0       0       0       0       0       0       0
  6916 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6917 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6918 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6919 ;;Total ram usage:        6 bytes
  6920 ;; Hardware stack levels used: 1
  6921 ;; This function calls:
  6922 ;;		Nothing
  6923 ;; This function is called by:
  6924 ;;		_vfpfcnvrt
  6925 ;;		_atoi
  6926 ;; This function uses a non-reentrant model
  6927 ;;
  6928                           
  6929                           	psect	text27
  6930  003750                     __ptext27:
  6931                           	callstack 0
  6932  003750                     _isdigit:
  6933                           	callstack 27
  6934  003750  0ED0               	movlw	208
  6935  003752  6E03               	movwf	??_isdigit^0,c
  6936  003754  0EFF               	movlw	255
  6937  003756  6E04               	movwf	(??_isdigit+1)^0,c
  6938  003758  C001  F005         	movff	isdigit@c,??_isdigit+2
  6939  00375C  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  6940  003760  5003               	movf	??_isdigit^0,w,c
  6941  003762  2605               	addwf	(??_isdigit+2)^0,f,c
  6942  003764  5004               	movf	(??_isdigit+1)^0,w,c
  6943  003766  2206               	addwfc	(??_isdigit+3)^0,f,c
  6944  003768  5006               	movf	(??_isdigit+3)^0,w,c
  6945  00376A  E10A               	bnz	u3760
  6946  00376C  0E0A               	movlw	10
  6947  00376E  5C05               	subwf	(??_isdigit+2)^0,w,c
  6948  003770  A0D8               	btfss	status,0,c
  6949  003772  EFBD  F01B         	goto	u3761
  6950  003776  EFC0  F01B         	goto	u3760
  6951  00377A                     u3761:
  6952  00377A  0E01               	movlw	1
  6953  00377C  EFC1  F01B         	goto	u3770
  6954  003780                     u3760:
  6955  003780  0E00               	movlw	0
  6956  003782                     u3770:
  6957  003782  6E01               	movwf	?_isdigit^0,c
  6958  003784  6A02               	clrf	(?_isdigit+1)^0,c
  6959  003786  0012               	return		;funcret
  6960  003788                     __end_of_isdigit:
  6961                           	callstack 0
  6962                           
  6963 ;; *************** function ___wmul *****************
  6964 ;; Defined at:
  6965 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
  6966 ;; Parameters:    Size  Location     Type
  6967 ;;  multiplier      2    0[COMRAM] unsigned int 
  6968 ;;  multiplicand    2    2[COMRAM] unsigned int 
  6969 ;; Auto vars:     Size  Location     Type
  6970 ;;  product         2    4[COMRAM] unsigned int 
  6971 ;; Return value:  Size  Location     Type
  6972 ;;                  2    0[COMRAM] unsigned int 
  6973 ;; Registers used:
  6974 ;;		wreg, status,2, status,0, prodl, prodh
  6975 ;; Tracked objects:
  6976 ;;		On entry : 0/0
  6977 ;;		On exit  : 0/0
  6978 ;;		Unchanged: 0/0
  6979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6980 ;;      Params:         4       0       0       0       0       0       0       0       0
  6981 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6982 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6983 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6984 ;;Total ram usage:        6 bytes
  6985 ;; Hardware stack levels used: 1
  6986 ;; This function calls:
  6987 ;;		Nothing
  6988 ;; This function is called by:
  6989 ;;		_atoi
  6990 ;; This function uses a non-reentrant model
  6991 ;;
  6992                           
  6993                           	psect	text28
  6994  0037F6                     __ptext28:
  6995                           	callstack 0
  6996  0037F6                     ___wmul:
  6997                           	callstack 26
  6998  0037F6  5001               	movf	___wmul@multiplier^0,w,c
  6999  0037F8  0203               	mulwf	___wmul@multiplicand^0,c
  7000  0037FA  CFF3 F005          	movff	prodl,___wmul@product
  7001  0037FE  CFF4 F006          	movff	prodh,___wmul@product+1
  7002  003802  5001               	movf	___wmul@multiplier^0,w,c
  7003  003804  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  7004  003806  50F3               	movf	243,w,c
  7005  003808  2606               	addwf	(___wmul@product+1)^0,f,c
  7006  00380A  5002               	movf	(___wmul@multiplier+1)^0,w,c
  7007  00380C  0203               	mulwf	___wmul@multiplicand^0,c
  7008  00380E  50F3               	movf	243,w,c
  7009  003810  2606               	addwf	(___wmul@product+1)^0,f,c
  7010  003812  C005  F001         	movff	___wmul@product,?___wmul
  7011  003816  C006  F002         	movff	___wmul@product+1,?___wmul+1
  7012  00381A  0012               	return		;funcret
  7013  00381C                     __end_of___wmul:
  7014                           	callstack 0
  7015                           
  7016 ;; *************** function _ReadUltrasonic *****************
  7017 ;; Defined at:
  7018 ;;		line 75 in file "main.c"
  7019 ;; Parameters:    Size  Location     Type
  7020 ;;		None
  7021 ;; Auto vars:     Size  Location     Type
  7022 ;;  tiempo          4   29[COMRAM] float 
  7023 ;; Return value:  Size  Location     Type
  7024 ;;                  4   25[COMRAM] float 
  7025 ;; Registers used:
  7026 ;;		wreg, status,2, status,0, cstack
  7027 ;; Tracked objects:
  7028 ;;		On entry : 0/0
  7029 ;;		On exit  : 0/0
  7030 ;;		Unchanged: 0/0
  7031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7032 ;;      Params:         4       0       0       0       0       0       0       0       0
  7033 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7034 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7035 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7036 ;;Total ram usage:        8 bytes
  7037 ;; Hardware stack levels used: 1
  7038 ;; Hardware stack levels required when called: 1
  7039 ;; This function calls:
  7040 ;;		___fldiv
  7041 ;;		___xxtofl
  7042 ;; This function is called by:
  7043 ;;		_main
  7044 ;; This function uses a non-reentrant model
  7045 ;;
  7046                           
  7047                           	psect	text29
  7048  003220                     __ptext29:
  7049                           	callstack 0
  7050  003220                     _ReadUltrasonic:
  7051                           	callstack 29
  7052  003220                     
  7053                           ;main.c: 77:     LATBbits.LATB7=1;
  7054  003220  8E8A               	bsf	138,7,c	;volatile
  7055  003222                     
  7056                           ;main.c: 78:     _delay((unsigned long)((10)*(16000000UL/4000000.0)));
  7057  003222  0E0D               	movlw	13
  7058  003224                     u4707:
  7059  003224  2EE8               	decfsz	wreg,f,c
  7060  003226  D7FE               	bra	u4707
  7061  003228  F000               	nop	
  7062  00322A                     
  7063                           ;main.c: 79:     LATBbits.LATB7=0;
  7064  00322A  9E8A               	bcf	138,7,c	;volatile
  7065  00322C                     l111:
  7066  00322C  AC81               	btfss	129,6,c	;volatile
  7067  00322E  EF1B  F019         	goto	u4671
  7068  003232  EF1D  F019         	goto	u4670
  7069  003236                     u4671:
  7070  003236  EF16  F019         	goto	l111
  7071  00323A                     u4670:
  7072  00323A                     
  7073                           ;main.c: 81:     TMR0=0;
  7074  00323A  0E00               	movlw	0
  7075  00323C  6ED7               	movwf	215,c	;volatile
  7076  00323E  0E00               	movlw	0
  7077  003240  6ED6               	movwf	214,c	;volatile
  7078  003242                     
  7079                           ;main.c: 82:     T0CONbits.TMR0ON=1;
  7080  003242  8ED5               	bsf	213,7,c	;volatile
  7081  003244                     l114:
  7082  003244  BC81               	btfsc	129,6,c	;volatile
  7083  003246  EF27  F019         	goto	u4681
  7084  00324A  EF29  F019         	goto	u4680
  7085  00324E                     u4681:
  7086  00324E  EF22  F019         	goto	l114
  7087  003252                     u4680:
  7088  003252                     
  7089                           ;main.c: 84:     T0CONbits.TMR0ON=0;
  7090  003252  9ED5               	bcf	213,7,c	;volatile
  7091  003254                     
  7092                           ;main.c: 85:     tiempo=TMR0;
  7093  003254  CFD6 F001          	movff	4054,___xxtofl@val	;volatile
  7094  003258  CFD7 F002          	movff	4055,___xxtofl@val+1	;volatile
  7095  00325C  6A03               	clrf	(___xxtofl@val+2)^0,c
  7096  00325E  6A04               	clrf	(___xxtofl@val+3)^0,c
  7097  003260  0E00               	movlw	0
  7098  003262  EC7F  F013         	call	___xxtofl
  7099  003266  C001  F01E         	movff	?___xxtofl,ReadUltrasonic@tiempo
  7100  00326A  C002  F01F         	movff	?___xxtofl+1,ReadUltrasonic@tiempo+1
  7101  00326E  C003  F020         	movff	?___xxtofl+2,ReadUltrasonic@tiempo+2
  7102  003272  C004  F021         	movff	?___xxtofl+3,ReadUltrasonic@tiempo+3
  7103                           
  7104                           ;main.c: 100:     return ((float)tiempo/233.23);
  7105  003276  C01E  F001         	movff	ReadUltrasonic@tiempo,___fldiv@b
  7106  00327A  C01F  F002         	movff	ReadUltrasonic@tiempo+1,___fldiv@b+1
  7107  00327E  C020  F003         	movff	ReadUltrasonic@tiempo+2,___fldiv@b+2
  7108  003282  C021  F004         	movff	ReadUltrasonic@tiempo+3,___fldiv@b+3
  7109  003286  0EE1               	movlw	225
  7110  003288  6E05               	movwf	___fldiv@a^0,c
  7111  00328A  0E3A               	movlw	58
  7112  00328C  6E06               	movwf	(___fldiv@a+1)^0,c
  7113  00328E  0E69               	movlw	105
  7114  003290  6E07               	movwf	(___fldiv@a+2)^0,c
  7115  003292  0E43               	movlw	67
  7116  003294  6E08               	movwf	(___fldiv@a+3)^0,c
  7117  003296  ECA9  F010         	call	___fldiv	;wreg free
  7118  00329A  C001  F01A         	movff	?___fldiv,?_ReadUltrasonic
  7119  00329E  C002  F01B         	movff	?___fldiv+1,?_ReadUltrasonic+1
  7120  0032A2  C003  F01C         	movff	?___fldiv+2,?_ReadUltrasonic+2
  7121  0032A6  C004  F01D         	movff	?___fldiv+3,?_ReadUltrasonic+3
  7122  0032AA  0012               	return		;funcret
  7123  0032AC                     __end_of_ReadUltrasonic:
  7124                           	callstack 0
  7125                           
  7126 ;; *************** function ___xxtofl *****************
  7127 ;; Defined at:
  7128 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\xxtofl.c"
  7129 ;; Parameters:    Size  Location     Type
  7130 ;;  sign            1    wreg     unsigned char 
  7131 ;;  val             4    0[COMRAM] long 
  7132 ;; Auto vars:     Size  Location     Type
  7133 ;;  sign            1    8[COMRAM] unsigned char 
  7134 ;;  arg             4   10[COMRAM] unsigned long 
  7135 ;;  exp             1    9[COMRAM] unsigned char 
  7136 ;; Return value:  Size  Location     Type
  7137 ;;                  4    0[COMRAM] unsigned char 
  7138 ;; Registers used:
  7139 ;;		wreg, status,2, status,0
  7140 ;; Tracked objects:
  7141 ;;		On entry : 0/0
  7142 ;;		On exit  : 0/0
  7143 ;;		Unchanged: 0/0
  7144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7145 ;;      Params:         4       0       0       0       0       0       0       0       0
  7146 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7147 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7148 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7149 ;;Total ram usage:       14 bytes
  7150 ;; Hardware stack levels used: 1
  7151 ;; This function calls:
  7152 ;;		Nothing
  7153 ;; This function is called by:
  7154 ;;		_ReadUltrasonic
  7155 ;; This function uses a non-reentrant model
  7156 ;;
  7157                           
  7158                           	psect	text30
  7159  0026FE                     __ptext30:
  7160                           	callstack 0
  7161  0026FE                     ___xxtofl:
  7162                           	callstack 29
  7163                           
  7164                           ;incstack = 0
  7165                           ;___xxtofl@sign stored from wreg
  7166  0026FE  6E09               	movwf	___xxtofl@sign^0,c
  7167  002700  5009               	movf	___xxtofl@sign^0,w,c
  7168  002702  B4D8               	btfsc	status,2,c
  7169  002704  EF86  F013         	goto	u4511
  7170  002708  EF88  F013         	goto	u4510
  7171  00270C                     u4511:
  7172  00270C  EFAA  F013         	goto	l775
  7173  002710                     u4510:
  7174  002710  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7175  002712  EF8F  F013         	goto	u4520
  7176  002716  EF8D  F013         	goto	u4521
  7177  00271A                     u4521:
  7178  00271A  EFAA  F013         	goto	l775
  7179  00271E                     u4520:
  7180  00271E  C001  F005         	movff	___xxtofl@val,??___xxtofl
  7181  002722  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  7182  002726  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  7183  00272A  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  7184  00272E  1E05               	comf	??___xxtofl^0,f,c
  7185  002730  1E06               	comf	(??___xxtofl+1)^0,f,c
  7186  002732  1E07               	comf	(??___xxtofl+2)^0,f,c
  7187  002734  1E08               	comf	(??___xxtofl+3)^0,f,c
  7188  002736  2A05               	incf	??___xxtofl^0,f,c
  7189  002738  0E00               	movlw	0
  7190  00273A  2206               	addwfc	(??___xxtofl+1)^0,f,c
  7191  00273C  2207               	addwfc	(??___xxtofl+2)^0,f,c
  7192  00273E  2208               	addwfc	(??___xxtofl+3)^0,f,c
  7193  002740  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  7194  002744  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  7195  002748  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  7196  00274C  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  7197  002750  EFB2  F013         	goto	l3838
  7198  002754                     l775:
  7199  002754  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  7200  002758  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7201  00275C  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7202  002760  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7203  002764                     l3838:
  7204  002764  5001               	movf	___xxtofl@val^0,w,c
  7205  002766  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  7206  002768  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  7207  00276A  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  7208  00276C  A4D8               	btfss	status,2,c
  7209  00276E  EFBB  F013         	goto	u4531
  7210  002772  EFBD  F013         	goto	u4530
  7211  002776                     u4531:
  7212  002776  EFC7  F013         	goto	l3844
  7213  00277A                     u4530:
  7214  00277A  0E00               	movlw	0
  7215  00277C  6E01               	movwf	?___xxtofl^0,c
  7216  00277E  0E00               	movlw	0
  7217  002780  6E02               	movwf	(?___xxtofl+1)^0,c
  7218  002782  0E00               	movlw	0
  7219  002784  6E03               	movwf	(?___xxtofl+2)^0,c
  7220  002786  0E00               	movlw	0
  7221  002788  6E04               	movwf	(?___xxtofl+3)^0,c
  7222  00278A  EF58  F014         	goto	l778
  7223  00278E                     l3844:
  7224  00278E  0E96               	movlw	150
  7225  002790  6E0A               	movwf	___xxtofl@exp^0,c
  7226  002792  EFD1  F013         	goto	l3848
  7227  002796                     l3846:
  7228  002796  2A0A               	incf	___xxtofl@exp^0,f,c
  7229  002798  90D8               	bcf	status,0,c
  7230  00279A  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7231  00279C  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7232  00279E  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7233  0027A0  320B               	rrcf	___xxtofl@arg^0,f,c
  7234  0027A2                     l3848:
  7235  0027A2  0E00               	movlw	0
  7236  0027A4  140B               	andwf	___xxtofl@arg^0,w,c
  7237  0027A6  6E05               	movwf	??___xxtofl^0,c
  7238  0027A8  0E00               	movlw	0
  7239  0027AA  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7240  0027AC  6E06               	movwf	(??___xxtofl+1)^0,c
  7241  0027AE  0E00               	movlw	0
  7242  0027B0  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7243  0027B2  6E07               	movwf	(??___xxtofl+2)^0,c
  7244  0027B4  0EFE               	movlw	254
  7245  0027B6  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7246  0027B8  6E08               	movwf	(??___xxtofl+3)^0,c
  7247  0027BA  5005               	movf	??___xxtofl^0,w,c
  7248  0027BC  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7249  0027BE  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7250  0027C0  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7251  0027C2  A4D8               	btfss	status,2,c
  7252  0027C4  EFE6  F013         	goto	u4541
  7253  0027C8  EFE8  F013         	goto	u4540
  7254  0027CC                     u4541:
  7255  0027CC  EFCB  F013         	goto	l3846
  7256  0027D0                     u4540:
  7257  0027D0  EFF6  F013         	goto	l782
  7258  0027D4                     l3850:
  7259  0027D4  2A0A               	incf	___xxtofl@exp^0,f,c
  7260  0027D6  0E01               	movlw	1
  7261  0027D8  260B               	addwf	___xxtofl@arg^0,f,c
  7262  0027DA  0E00               	movlw	0
  7263  0027DC  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  7264  0027DE  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  7265  0027E0  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  7266  0027E2  90D8               	bcf	status,0,c
  7267  0027E4  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7268  0027E6  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7269  0027E8  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7270  0027EA  320B               	rrcf	___xxtofl@arg^0,f,c
  7271  0027EC                     l782:
  7272  0027EC  0E00               	movlw	0
  7273  0027EE  140B               	andwf	___xxtofl@arg^0,w,c
  7274  0027F0  6E05               	movwf	??___xxtofl^0,c
  7275  0027F2  0E00               	movlw	0
  7276  0027F4  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7277  0027F6  6E06               	movwf	(??___xxtofl+1)^0,c
  7278  0027F8  0E00               	movlw	0
  7279  0027FA  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7280  0027FC  6E07               	movwf	(??___xxtofl+2)^0,c
  7281  0027FE  0EFF               	movlw	255
  7282  002800  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7283  002802  6E08               	movwf	(??___xxtofl+3)^0,c
  7284  002804  5005               	movf	??___xxtofl^0,w,c
  7285  002806  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7286  002808  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7287  00280A  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7288  00280C  A4D8               	btfss	status,2,c
  7289  00280E  EF0B  F014         	goto	u4551
  7290  002812  EF0D  F014         	goto	u4550
  7291  002816                     u4551:
  7292  002816  EFEA  F013         	goto	l3850
  7293  00281A                     u4550:
  7294  00281A  EF15  F014         	goto	l3858
  7295  00281E                     l3856:
  7296  00281E  060A               	decf	___xxtofl@exp^0,f,c
  7297  002820  90D8               	bcf	status,0,c
  7298  002822  360B               	rlcf	___xxtofl@arg^0,f,c
  7299  002824  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  7300  002826  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  7301  002828  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  7302  00282A                     l3858:
  7303  00282A  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  7304  00282C  EF1A  F014         	goto	u4561
  7305  002830  EF1C  F014         	goto	u4560
  7306  002834                     u4561:
  7307  002834  EF24  F014         	goto	l789
  7308  002838                     u4560:
  7309  002838  0E02               	movlw	2
  7310  00283A  600A               	cpfslt	___xxtofl@exp^0,c
  7311  00283C  EF22  F014         	goto	u4571
  7312  002840  EF24  F014         	goto	u4570
  7313  002844                     u4571:
  7314  002844  EF0F  F014         	goto	l3856
  7315  002848                     u4570:
  7316  002848                     l789:
  7317  002848  B00A               	btfsc	___xxtofl@exp^0,0,c
  7318  00284A  EF29  F014         	goto	u4581
  7319  00284E  EF2B  F014         	goto	u4580
  7320  002852                     u4581:
  7321  002852  EF2C  F014         	goto	l3864
  7322  002856                     u4580:
  7323  002856  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  7324  002858                     l3864:
  7325  002858  90D8               	bcf	status,0,c
  7326  00285A  320A               	rrcf	___xxtofl@exp^0,f,c
  7327  00285C  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  7328  002860  6A06               	clrf	(??___xxtofl+1)^0,c
  7329  002862  6A07               	clrf	(??___xxtofl+2)^0,c
  7330  002864  6A08               	clrf	(??___xxtofl+3)^0,c
  7331  002866  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  7332  00286A  6A07               	clrf	(??___xxtofl+2)^0,c
  7333  00286C  6A06               	clrf	(??___xxtofl+1)^0,c
  7334  00286E  6A05               	clrf	??___xxtofl^0,c
  7335  002870  5005               	movf	??___xxtofl^0,w,c
  7336  002872  120B               	iorwf	___xxtofl@arg^0,f,c
  7337  002874  5006               	movf	(??___xxtofl+1)^0,w,c
  7338  002876  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  7339  002878  5007               	movf	(??___xxtofl+2)^0,w,c
  7340  00287A  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  7341  00287C  5008               	movf	(??___xxtofl+3)^0,w,c
  7342  00287E  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  7343  002880  5009               	movf	___xxtofl@sign^0,w,c
  7344  002882  B4D8               	btfsc	status,2,c
  7345  002884  EF46  F014         	goto	u4591
  7346  002888  EF48  F014         	goto	u4590
  7347  00288C                     u4591:
  7348  00288C  EF50  F014         	goto	l3874
  7349  002890                     u4590:
  7350  002890  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7351  002892  EF4F  F014         	goto	u4600
  7352  002896  EF4D  F014         	goto	u4601
  7353  00289A                     u4601:
  7354  00289A  EF50  F014         	goto	l3874
  7355  00289E                     u4600:
  7356  00289E  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  7357  0028A0                     l3874:
  7358  0028A0  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  7359  0028A4  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  7360  0028A8  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  7361  0028AC  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  7362  0028B0                     l778:
  7363  0028B0  0012               	return		;funcret
  7364  0028B2                     __end_of___xxtofl:
  7365                           	callstack 0
  7366                           
  7367 ;; *************** function ___fldiv *****************
  7368 ;; Defined at:
  7369 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcdiv.c"
  7370 ;; Parameters:    Size  Location     Type
  7371 ;;  b               4    0[COMRAM] unsigned char 
  7372 ;;  a               4    4[COMRAM] unsigned char 
  7373 ;; Auto vars:     Size  Location     Type
  7374 ;;  grs             4   19[COMRAM] unsigned long 
  7375 ;;  rem             4   12[COMRAM] unsigned long 
  7376 ;;  new_exp         2   17[COMRAM] short 
  7377 ;;  aexp            1   24[COMRAM] unsigned char 
  7378 ;;  bexp            1   23[COMRAM] unsigned char 
  7379 ;;  sign            1   16[COMRAM] unsigned char 
  7380 ;; Return value:  Size  Location     Type
  7381 ;;                  4    0[COMRAM] unsigned char 
  7382 ;; Registers used:
  7383 ;;		wreg, status,2, status,0
  7384 ;; Tracked objects:
  7385 ;;		On entry : 0/0
  7386 ;;		On exit  : 0/0
  7387 ;;		Unchanged: 0/0
  7388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7389 ;;      Params:         8       0       0       0       0       0       0       0       0
  7390 ;;      Locals:        13       0       0       0       0       0       0       0       0
  7391 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7392 ;;      Totals:        25       0       0       0       0       0       0       0       0
  7393 ;;Total ram usage:       25 bytes
  7394 ;; Hardware stack levels used: 1
  7395 ;; This function calls:
  7396 ;;		Nothing
  7397 ;; This function is called by:
  7398 ;;		_ReadUltrasonic
  7399 ;;		_efgtoa
  7400 ;; This function uses a non-reentrant model
  7401 ;;
  7402                           
  7403                           	psect	text31
  7404  002152                     __ptext31:
  7405                           	callstack 0
  7406  002152                     ___fldiv:
  7407                           	callstack 26
  7408  002152  5004               	movf	(___fldiv@b+3)^0,w,c
  7409  002154  0B80               	andlw	128
  7410  002156  6E11               	movwf	___fldiv@sign^0,c
  7411  002158  5004               	movf	(___fldiv@b+3)^0,w,c
  7412  00215A  2404               	addwf	(___fldiv@b+3)^0,w,c
  7413  00215C  6E18               	movwf	___fldiv@bexp^0,c
  7414  00215E  AE03               	btfss	(___fldiv@b+2)^0,7,c
  7415  002160  EFB4  F010         	goto	u2821
  7416  002164  EFB6  F010         	goto	u2820
  7417  002168                     u2821:
  7418  002168  EFB7  F010         	goto	l2800
  7419  00216C                     u2820:
  7420  00216C  8018               	bsf	___fldiv@bexp^0,0,c
  7421  00216E                     l2800:
  7422  00216E  5018               	movf	___fldiv@bexp^0,w,c
  7423  002170  B4D8               	btfsc	status,2,c
  7424  002172  EFBD  F010         	goto	u2831
  7425  002176  EFBF  F010         	goto	u2830
  7426  00217A                     u2831:
  7427  00217A  EFD4  F010         	goto	l2810
  7428  00217E                     u2830:
  7429  00217E  2818               	incf	___fldiv@bexp^0,w,c
  7430  002180  A4D8               	btfss	status,2,c
  7431  002182  EFC5  F010         	goto	u2841
  7432  002186  EFC7  F010         	goto	u2840
  7433  00218A                     u2841:
  7434  00218A  EFCF  F010         	goto	l2806
  7435  00218E                     u2840:
  7436  00218E  0E00               	movlw	0
  7437  002190  6E01               	movwf	___fldiv@b^0,c
  7438  002192  0E00               	movlw	0
  7439  002194  6E02               	movwf	(___fldiv@b+1)^0,c
  7440  002196  0E00               	movlw	0
  7441  002198  6E03               	movwf	(___fldiv@b+2)^0,c
  7442  00219A  0E00               	movlw	0
  7443  00219C  6E04               	movwf	(___fldiv@b+3)^0,c
  7444  00219E                     l2806:
  7445  00219E  8E03               	bsf	(___fldiv@b+2)^0,7,c
  7446  0021A0  0E00               	movlw	0
  7447  0021A2  6E04               	movwf	(___fldiv@b+3)^0,c
  7448  0021A4  EFDC  F010         	goto	l2812
  7449  0021A8                     l2810:
  7450  0021A8  0E00               	movlw	0
  7451  0021AA  6E01               	movwf	___fldiv@b^0,c
  7452  0021AC  0E00               	movlw	0
  7453  0021AE  6E02               	movwf	(___fldiv@b+1)^0,c
  7454  0021B0  0E00               	movlw	0
  7455  0021B2  6E03               	movwf	(___fldiv@b+2)^0,c
  7456  0021B4  0E00               	movlw	0
  7457  0021B6  6E04               	movwf	(___fldiv@b+3)^0,c
  7458  0021B8                     l2812:
  7459  0021B8  5008               	movf	(___fldiv@a+3)^0,w,c
  7460  0021BA  0B80               	andlw	128
  7461  0021BC  1A11               	xorwf	___fldiv@sign^0,f,c
  7462  0021BE  5008               	movf	(___fldiv@a+3)^0,w,c
  7463  0021C0  2408               	addwf	(___fldiv@a+3)^0,w,c
  7464  0021C2  6E19               	movwf	___fldiv@aexp^0,c
  7465  0021C4  AE07               	btfss	(___fldiv@a+2)^0,7,c
  7466  0021C6  EFE7  F010         	goto	u2851
  7467  0021CA  EFE9  F010         	goto	u2850
  7468  0021CE                     u2851:
  7469  0021CE  EFEA  F010         	goto	l2820
  7470  0021D2                     u2850:
  7471  0021D2  8019               	bsf	___fldiv@aexp^0,0,c
  7472  0021D4                     l2820:
  7473  0021D4  5019               	movf	___fldiv@aexp^0,w,c
  7474  0021D6  B4D8               	btfsc	status,2,c
  7475  0021D8  EFF0  F010         	goto	u2861
  7476  0021DC  EFF2  F010         	goto	u2860
  7477  0021E0                     u2861:
  7478  0021E0  EF07  F011         	goto	l2830
  7479  0021E4                     u2860:
  7480  0021E4  2819               	incf	___fldiv@aexp^0,w,c
  7481  0021E6  A4D8               	btfss	status,2,c
  7482  0021E8  EFF8  F010         	goto	u2871
  7483  0021EC  EFFA  F010         	goto	u2870
  7484  0021F0                     u2871:
  7485  0021F0  EF02  F011         	goto	l2826
  7486  0021F4                     u2870:
  7487  0021F4  0E00               	movlw	0
  7488  0021F6  6E05               	movwf	___fldiv@a^0,c
  7489  0021F8  0E00               	movlw	0
  7490  0021FA  6E06               	movwf	(___fldiv@a+1)^0,c
  7491  0021FC  0E00               	movlw	0
  7492  0021FE  6E07               	movwf	(___fldiv@a+2)^0,c
  7493  002200  0E00               	movlw	0
  7494  002202  6E08               	movwf	(___fldiv@a+3)^0,c
  7495  002204                     l2826:
  7496  002204  8E07               	bsf	(___fldiv@a+2)^0,7,c
  7497  002206  0E00               	movlw	0
  7498  002208  6E08               	movwf	(___fldiv@a+3)^0,c
  7499  00220A  EF0F  F011         	goto	l2832
  7500  00220E                     l2830:
  7501  00220E  0E00               	movlw	0
  7502  002210  6E05               	movwf	___fldiv@a^0,c
  7503  002212  0E00               	movlw	0
  7504  002214  6E06               	movwf	(___fldiv@a+1)^0,c
  7505  002216  0E00               	movlw	0
  7506  002218  6E07               	movwf	(___fldiv@a+2)^0,c
  7507  00221A  0E00               	movlw	0
  7508  00221C  6E08               	movwf	(___fldiv@a+3)^0,c
  7509  00221E                     l2832:
  7510  00221E  5005               	movf	___fldiv@a^0,w,c
  7511  002220  1006               	iorwf	(___fldiv@a+1)^0,w,c
  7512  002222  1007               	iorwf	(___fldiv@a+2)^0,w,c
  7513  002224  1008               	iorwf	(___fldiv@a+3)^0,w,c
  7514  002226  A4D8               	btfss	status,2,c
  7515  002228  EF18  F011         	goto	u2881
  7516  00222C  EF1A  F011         	goto	u2880
  7517  002230                     u2881:
  7518  002230  EF32  F011         	goto	l2844
  7519  002234                     u2880:
  7520  002234  0E00               	movlw	0
  7521  002236  6E01               	movwf	___fldiv@b^0,c
  7522  002238  0E00               	movlw	0
  7523  00223A  6E02               	movwf	(___fldiv@b+1)^0,c
  7524  00223C  0E00               	movlw	0
  7525  00223E  6E03               	movwf	(___fldiv@b+2)^0,c
  7526  002240  0E00               	movlw	0
  7527  002242  6E04               	movwf	(___fldiv@b+3)^0,c
  7528  002244  0E80               	movlw	128
  7529  002246  1203               	iorwf	(___fldiv@b+2)^0,f,c
  7530  002248  0E7F               	movlw	127
  7531  00224A  1204               	iorwf	(___fldiv@b+3)^0,f,c
  7532  00224C                     l2838:
  7533  00224C  5011               	movf	___fldiv@sign^0,w,c
  7534  00224E  1204               	iorwf	(___fldiv@b+3)^0,f,c
  7535  002250  C001  F001         	movff	___fldiv@b,?___fldiv
  7536  002254  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  7537  002258  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  7538  00225C  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  7539  002260  EF75  F012         	goto	l702
  7540  002264                     l2844:
  7541  002264  5018               	movf	___fldiv@bexp^0,w,c
  7542  002266  A4D8               	btfss	status,2,c
  7543  002268  EF38  F011         	goto	u2891
  7544  00226C  EF3A  F011         	goto	u2890
  7545  002270                     u2891:
  7546  002270  EF44  F011         	goto	l2852
  7547  002274                     u2890:
  7548  002274  0E00               	movlw	0
  7549  002276  6E01               	movwf	?___fldiv^0,c
  7550  002278  0E00               	movlw	0
  7551  00227A  6E02               	movwf	(?___fldiv+1)^0,c
  7552  00227C  0E00               	movlw	0
  7553  00227E  6E03               	movwf	(?___fldiv+2)^0,c
  7554  002280  0E00               	movlw	0
  7555  002282  6E04               	movwf	(?___fldiv+3)^0,c
  7556  002284  EF75  F012         	goto	l702
  7557  002288                     l2852:
  7558  002288  5019               	movf	___fldiv@aexp^0,w,c
  7559  00228A  C018  F009         	movff	___fldiv@bexp,??___fldiv
  7560  00228E  6A0A               	clrf	(??___fldiv+1)^0,c
  7561  002290  5E09               	subwf	??___fldiv^0,f,c
  7562  002292  0E00               	movlw	0
  7563  002294  5A0A               	subwfb	(??___fldiv+1)^0,f,c
  7564  002296  0E7F               	movlw	127
  7565  002298  2409               	addwf	??___fldiv^0,w,c
  7566  00229A  6E12               	movwf	___fldiv@new_exp^0,c
  7567  00229C  0E00               	movlw	0
  7568  00229E  200A               	addwfc	(??___fldiv+1)^0,w,c
  7569  0022A0  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  7570  0022A2  C001  F00D         	movff	___fldiv@b,___fldiv@rem
  7571  0022A6  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
  7572  0022AA  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
  7573  0022AE  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
  7574  0022B2  0E00               	movlw	0
  7575  0022B4  6E01               	movwf	___fldiv@b^0,c
  7576  0022B6  0E00               	movlw	0
  7577  0022B8  6E02               	movwf	(___fldiv@b+1)^0,c
  7578  0022BA  0E00               	movlw	0
  7579  0022BC  6E03               	movwf	(___fldiv@b+2)^0,c
  7580  0022BE  0E00               	movlw	0
  7581  0022C0  6E04               	movwf	(___fldiv@b+3)^0,c
  7582  0022C2  0E00               	movlw	0
  7583  0022C4  6E14               	movwf	___fldiv@grs^0,c
  7584  0022C6  0E00               	movlw	0
  7585  0022C8  6E15               	movwf	(___fldiv@grs+1)^0,c
  7586  0022CA  0E00               	movlw	0
  7587  0022CC  6E16               	movwf	(___fldiv@grs+2)^0,c
  7588  0022CE  0E00               	movlw	0
  7589  0022D0  6E17               	movwf	(___fldiv@grs+3)^0,c
  7590  0022D2  0E00               	movlw	0
  7591  0022D4  6E19               	movwf	___fldiv@aexp^0,c
  7592  0022D6  EFA5  F011         	goto	l704
  7593  0022DA                     l2862:
  7594  0022DA  5019               	movf	___fldiv@aexp^0,w,c
  7595  0022DC  B4D8               	btfsc	status,2,c
  7596  0022DE  EF73  F011         	goto	u2901
  7597  0022E2  EF75  F011         	goto	u2900
  7598  0022E6                     u2901:
  7599  0022E6  EF8C  F011         	goto	l2870
  7600  0022EA                     u2900:
  7601  0022EA  90D8               	bcf	status,0,c
  7602  0022EC  360D               	rlcf	___fldiv@rem^0,f,c
  7603  0022EE  360E               	rlcf	(___fldiv@rem+1)^0,f,c
  7604  0022F0  360F               	rlcf	(___fldiv@rem+2)^0,f,c
  7605  0022F2  3610               	rlcf	(___fldiv@rem+3)^0,f,c
  7606  0022F4  90D8               	bcf	status,0,c
  7607  0022F6  3601               	rlcf	___fldiv@b^0,f,c
  7608  0022F8  3602               	rlcf	(___fldiv@b+1)^0,f,c
  7609  0022FA  3603               	rlcf	(___fldiv@b+2)^0,f,c
  7610  0022FC  3604               	rlcf	(___fldiv@b+3)^0,f,c
  7611  0022FE  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  7612  002300  EF84  F011         	goto	u2911
  7613  002304  EF86  F011         	goto	u2910
  7614  002308                     u2911:
  7615  002308  EF87  F011         	goto	l707
  7616  00230C                     u2910:
  7617  00230C  8001               	bsf	___fldiv@b^0,0,c
  7618  00230E                     l707:
  7619  00230E  90D8               	bcf	status,0,c
  7620  002310  3614               	rlcf	___fldiv@grs^0,f,c
  7621  002312  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  7622  002314  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  7623  002316  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  7624  002318                     l2870:
  7625  002318  5005               	movf	___fldiv@a^0,w,c
  7626  00231A  5C0D               	subwf	___fldiv@rem^0,w,c
  7627  00231C  5006               	movf	(___fldiv@a+1)^0,w,c
  7628  00231E  580E               	subwfb	(___fldiv@rem+1)^0,w,c
  7629  002320  5007               	movf	(___fldiv@a+2)^0,w,c
  7630  002322  580F               	subwfb	(___fldiv@rem+2)^0,w,c
  7631  002324  5008               	movf	(___fldiv@a+3)^0,w,c
  7632  002326  5810               	subwfb	(___fldiv@rem+3)^0,w,c
  7633  002328  A0D8               	btfss	status,0,c
  7634  00232A  EF99  F011         	goto	u2921
  7635  00232E  EF9B  F011         	goto	u2920
  7636  002332                     u2921:
  7637  002332  EFA4  F011         	goto	l2876
  7638  002336                     u2920:
  7639  002336  8C17               	bsf	(___fldiv@grs+3)^0,6,c
  7640  002338  5005               	movf	___fldiv@a^0,w,c
  7641  00233A  5E0D               	subwf	___fldiv@rem^0,f,c
  7642  00233C  5006               	movf	(___fldiv@a+1)^0,w,c
  7643  00233E  5A0E               	subwfb	(___fldiv@rem+1)^0,f,c
  7644  002340  5007               	movf	(___fldiv@a+2)^0,w,c
  7645  002342  5A0F               	subwfb	(___fldiv@rem+2)^0,f,c
  7646  002344  5008               	movf	(___fldiv@a+3)^0,w,c
  7647  002346  5A10               	subwfb	(___fldiv@rem+3)^0,f,c
  7648  002348                     l2876:
  7649  002348  2A19               	incf	___fldiv@aexp^0,f,c
  7650  00234A                     l704:
  7651  00234A  0E19               	movlw	25
  7652  00234C  6419               	cpfsgt	___fldiv@aexp^0,c
  7653  00234E  EFAB  F011         	goto	u2931
  7654  002352  EFAD  F011         	goto	u2930
  7655  002356                     u2931:
  7656  002356  EF6D  F011         	goto	l2862
  7657  00235A                     u2930:
  7658  00235A  500D               	movf	___fldiv@rem^0,w,c
  7659  00235C  100E               	iorwf	(___fldiv@rem+1)^0,w,c
  7660  00235E  100F               	iorwf	(___fldiv@rem+2)^0,w,c
  7661  002360  1010               	iorwf	(___fldiv@rem+3)^0,w,c
  7662  002362  B4D8               	btfsc	status,2,c
  7663  002364  EFB6  F011         	goto	u2941
  7664  002368  EFB8  F011         	goto	u2940
  7665  00236C                     u2941:
  7666  00236C  EFD0  F011         	goto	l2888
  7667  002370                     u2940:
  7668  002370  8014               	bsf	___fldiv@grs^0,0,c
  7669  002372  EFD0  F011         	goto	l2888
  7670  002376                     l2882:
  7671  002376  90D8               	bcf	status,0,c
  7672  002378  3601               	rlcf	___fldiv@b^0,f,c
  7673  00237A  3602               	rlcf	(___fldiv@b+1)^0,f,c
  7674  00237C  3603               	rlcf	(___fldiv@b+2)^0,f,c
  7675  00237E  3604               	rlcf	(___fldiv@b+3)^0,f,c
  7676  002380  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  7677  002382  EFC5  F011         	goto	u2951
  7678  002386  EFC7  F011         	goto	u2950
  7679  00238A                     u2951:
  7680  00238A  EFC8  F011         	goto	l713
  7681  00238E                     u2950:
  7682  00238E  8001               	bsf	___fldiv@b^0,0,c
  7683  002390                     l713:
  7684  002390  90D8               	bcf	status,0,c
  7685  002392  3614               	rlcf	___fldiv@grs^0,f,c
  7686  002394  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  7687  002396  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  7688  002398  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  7689  00239A  0612               	decf	___fldiv@new_exp^0,f,c
  7690  00239C  A0D8               	btfss	status,0,c
  7691  00239E  0613               	decf	(___fldiv@new_exp+1)^0,f,c
  7692  0023A0                     l2888:
  7693  0023A0  AE03               	btfss	(___fldiv@b+2)^0,7,c
  7694  0023A2  EFD5  F011         	goto	u2961
  7695  0023A6  EFD7  F011         	goto	u2960
  7696  0023AA                     u2961:
  7697  0023AA  EFBB  F011         	goto	l2882
  7698  0023AE                     u2960:
  7699  0023AE  0E00               	movlw	0
  7700  0023B0  6E19               	movwf	___fldiv@aexp^0,c
  7701  0023B2  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  7702  0023B4  EFDE  F011         	goto	u2971
  7703  0023B8  EFE0  F011         	goto	u2970
  7704  0023BC                     u2971:
  7705  0023BC  EF04  F012         	goto	l715
  7706  0023C0                     u2970:
  7707  0023C0  0EFF               	movlw	255
  7708  0023C2  1414               	andwf	___fldiv@grs^0,w,c
  7709  0023C4  6E09               	movwf	??___fldiv^0,c
  7710  0023C6  0EFF               	movlw	255
  7711  0023C8  1415               	andwf	(___fldiv@grs+1)^0,w,c
  7712  0023CA  6E0A               	movwf	(??___fldiv+1)^0,c
  7713  0023CC  0EFF               	movlw	255
  7714  0023CE  1416               	andwf	(___fldiv@grs+2)^0,w,c
  7715  0023D0  6E0B               	movwf	(??___fldiv+2)^0,c
  7716  0023D2  0E7F               	movlw	127
  7717  0023D4  1417               	andwf	(___fldiv@grs+3)^0,w,c
  7718  0023D6  6E0C               	movwf	(??___fldiv+3)^0,c
  7719  0023D8  5009               	movf	??___fldiv^0,w,c
  7720  0023DA  100A               	iorwf	(??___fldiv+1)^0,w,c
  7721  0023DC  100B               	iorwf	(??___fldiv+2)^0,w,c
  7722  0023DE  100C               	iorwf	(??___fldiv+3)^0,w,c
  7723  0023E0  B4D8               	btfsc	status,2,c
  7724  0023E2  EFF5  F011         	goto	u2981
  7725  0023E6  EFF7  F011         	goto	u2980
  7726  0023EA                     u2981:
  7727  0023EA  EFFB  F011         	goto	l716
  7728  0023EE                     u2980:
  7729  0023EE                     l2896:
  7730  0023EE  0E01               	movlw	1
  7731  0023F0  6E19               	movwf	___fldiv@aexp^0,c
  7732  0023F2  EF04  F012         	goto	l715
  7733  0023F6                     l716:
  7734  0023F6  A001               	btfss	___fldiv@b^0,0,c
  7735  0023F8  EF00  F012         	goto	u2991
  7736  0023FC  EF02  F012         	goto	u2990
  7737  002400                     u2991:
  7738  002400  EF04  F012         	goto	l715
  7739  002404                     u2990:
  7740  002404  EFF7  F011         	goto	l2896
  7741  002408                     l715:
  7742  002408  5019               	movf	___fldiv@aexp^0,w,c
  7743  00240A  B4D8               	btfsc	status,2,c
  7744  00240C  EF0A  F012         	goto	u3001
  7745  002410  EF0C  F012         	goto	u3000
  7746  002414                     u3001:
  7747  002414  EF30  F012         	goto	l2908
  7748  002418                     u3000:
  7749  002418  0E01               	movlw	1
  7750  00241A  2601               	addwf	___fldiv@b^0,f,c
  7751  00241C  0E00               	movlw	0
  7752  00241E  2202               	addwfc	(___fldiv@b+1)^0,f,c
  7753  002420  2203               	addwfc	(___fldiv@b+2)^0,f,c
  7754  002422  2204               	addwfc	(___fldiv@b+3)^0,f,c
  7755  002424  A004               	btfss	(___fldiv@b+3)^0,0,c
  7756  002426  EF17  F012         	goto	u3011
  7757  00242A  EF19  F012         	goto	u3010
  7758  00242E                     u3011:
  7759  00242E  EF30  F012         	goto	l2908
  7760  002432                     u3010:
  7761  002432  C001  F009         	movff	___fldiv@b,??___fldiv
  7762  002436  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
  7763  00243A  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
  7764  00243E  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
  7765  002442  340C               	rlcf	(??___fldiv+3)^0,w,c
  7766  002444  320C               	rrcf	(??___fldiv+3)^0,f,c
  7767  002446  320B               	rrcf	(??___fldiv+2)^0,f,c
  7768  002448  320A               	rrcf	(??___fldiv+1)^0,f,c
  7769  00244A  3209               	rrcf	??___fldiv^0,f,c
  7770  00244C  C009  F001         	movff	??___fldiv,___fldiv@b
  7771  002450  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
  7772  002454  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
  7773  002458  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
  7774  00245C  4A12               	infsnz	___fldiv@new_exp^0,f,c
  7775  00245E  2A13               	incf	(___fldiv@new_exp+1)^0,f,c
  7776  002460                     l2908:
  7777  002460  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7778  002462  EF3B  F012         	goto	u3021
  7779  002466  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  7780  002468  E108               	bnz	u3020
  7781  00246A  2812               	incf	___fldiv@new_exp^0,w,c
  7782  00246C  A0D8               	btfss	status,0,c
  7783  00246E  EF3B  F012         	goto	u3021
  7784  002472  EF3D  F012         	goto	u3020
  7785  002476                     u3021:
  7786  002476  EF48  F012         	goto	l2912
  7787  00247A                     u3020:
  7788  00247A  0E00               	movlw	0
  7789  00247C  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  7790  00247E  6812               	setf	___fldiv@new_exp^0,c
  7791  002480  0E00               	movlw	0
  7792  002482  6E01               	movwf	___fldiv@b^0,c
  7793  002484  0E00               	movlw	0
  7794  002486  6E02               	movwf	(___fldiv@b+1)^0,c
  7795  002488  0E00               	movlw	0
  7796  00248A  6E03               	movwf	(___fldiv@b+2)^0,c
  7797  00248C  0E00               	movlw	0
  7798  00248E  6E04               	movwf	(___fldiv@b+3)^0,c
  7799  002490                     l2912:
  7800  002490  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7801  002492  EF55  F012         	goto	u3030
  7802  002496  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  7803  002498  E106               	bnz	u3031
  7804  00249A  0412               	decf	___fldiv@new_exp^0,w,c
  7805  00249C  B0D8               	btfsc	status,0,c
  7806  00249E  EF53  F012         	goto	u3031
  7807  0024A2  EF55  F012         	goto	u3030
  7808  0024A6                     u3031:
  7809  0024A6  EF63  F012         	goto	l2916
  7810  0024AA                     u3030:
  7811  0024AA  0E00               	movlw	0
  7812  0024AC  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  7813  0024AE  0E00               	movlw	0
  7814  0024B0  6E12               	movwf	___fldiv@new_exp^0,c
  7815  0024B2  0E00               	movlw	0
  7816  0024B4  6E01               	movwf	___fldiv@b^0,c
  7817  0024B6  0E00               	movlw	0
  7818  0024B8  6E02               	movwf	(___fldiv@b+1)^0,c
  7819  0024BA  0E00               	movlw	0
  7820  0024BC  6E03               	movwf	(___fldiv@b+2)^0,c
  7821  0024BE  0E00               	movlw	0
  7822  0024C0  6E04               	movwf	(___fldiv@b+3)^0,c
  7823  0024C2  0E00               	movlw	0
  7824  0024C4  6E11               	movwf	___fldiv@sign^0,c
  7825  0024C6                     l2916:
  7826  0024C6  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
  7827  0024CA  A018               	btfss	___fldiv@bexp^0,0,c
  7828  0024CC  EF6A  F012         	goto	u3041
  7829  0024D0  EF6C  F012         	goto	u3040
  7830  0024D4                     u3041:
  7831  0024D4  EF6F  F012         	goto	l2922
  7832  0024D8                     u3040:
  7833  0024D8  8E03               	bsf	(___fldiv@b+2)^0,7,c
  7834  0024DA  EF70  F012         	goto	l2924
  7835  0024DE                     l2922:
  7836  0024DE  9E03               	bcf	(___fldiv@b+2)^0,7,c
  7837  0024E0                     l2924:
  7838  0024E0  90D8               	bcf	status,0,c
  7839  0024E2  3018               	rrcf	___fldiv@bexp^0,w,c
  7840  0024E4  6E04               	movwf	(___fldiv@b+3)^0,c
  7841  0024E6  EF26  F011         	goto	l2838
  7842  0024EA                     l702:
  7843  0024EA  0012               	return		;funcret
  7844  0024EC                     __end_of___fldiv:
  7845                           	callstack 0
  7846                           
  7847 ;; *************** function _Lcd_Write_String *****************
  7848 ;; Defined at:
  7849 ;;		line 97 in file "lcd.c"
  7850 ;; Parameters:    Size  Location     Type
  7851 ;;  a               2    4[COMRAM] PTR unsigned char 
  7852 ;;		 -> str_buffer(16), STR_1(12), 
  7853 ;; Auto vars:     Size  Location     Type
  7854 ;;  i               2    8[COMRAM] int 
  7855 ;; Return value:  Size  Location     Type
  7856 ;;                  1    wreg      void 
  7857 ;; Registers used:
  7858 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7859 ;; Tracked objects:
  7860 ;;		On entry : 0/0
  7861 ;;		On exit  : 0/0
  7862 ;;		Unchanged: 0/0
  7863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7864 ;;      Params:         2       0       0       0       0       0       0       0       0
  7865 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7866 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7867 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7868 ;;Total ram usage:        6 bytes
  7869 ;; Hardware stack levels used: 1
  7870 ;; Hardware stack levels required when called: 2
  7871 ;; This function calls:
  7872 ;;		_Lcd_Write_Char
  7873 ;; This function is called by:
  7874 ;;		_main
  7875 ;; This function uses a non-reentrant model
  7876 ;;
  7877                           
  7878                           	psect	text32
  7879  0032AC                     __ptext32:
  7880                           	callstack 0
  7881  0032AC                     _Lcd_Write_String:
  7882                           	callstack 28
  7883  0032AC                     
  7884                           ;lcd.c: 97: void Lcd_Write_String(unsigned char *a);lcd.c: 98: {;lcd.c: 99:  int i;;lcd.
      +                          c: 100:  for(i=0;a[i]!='\0';i++)
  7885  0032AC  0E00               	movlw	0
  7886  0032AE  6E0A               	movwf	(Lcd_Write_String@i+1)^0,c
  7887  0032B0  0E00               	movlw	0
  7888  0032B2  6E09               	movwf	Lcd_Write_String@i^0,c
  7889  0032B4  EF76  F019         	goto	l3938
  7890  0032B8                     l3934:
  7891                           
  7892                           ;lcd.c: 101:     Lcd_Write_Char(a[i]);
  7893  0032B8  5009               	movf	Lcd_Write_String@i^0,w,c
  7894  0032BA  2405               	addwf	Lcd_Write_String@a^0,w,c
  7895  0032BC  6E07               	movwf	??_Lcd_Write_String^0,c
  7896  0032BE  500A               	movf	(Lcd_Write_String@i+1)^0,w,c
  7897  0032C0  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
  7898  0032C2  6E08               	movwf	(??_Lcd_Write_String+1)^0,c
  7899  0032C4  C007  FFF6         	movff	??_Lcd_Write_String,tblptrl
  7900  0032C8  C008  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
  7901  0032CC  6AF8               	clrf	tblptru,c
  7902  0032CE  0E07               	movlw	(high __ramtop+-1)
  7903  0032D0  64F7               	cpfsgt	tblptrh,c
  7904  0032D2  D003               	bra	u4647
  7905  0032D4  0008               	tblrd		*
  7906  0032D6  50F5               	movf	tablat,w,c
  7907  0032D8  D005               	bra	u4640
  7908  0032DA                     u4647:
  7909  0032DA  CFF6 FFE1          	movff	tblptrl,fsr1l
  7910  0032DE  CFF7 FFE2          	movff	tblptrh,fsr1h
  7911  0032E2  50E7               	movf	indf1,w,c
  7912  0032E4                     u4640:
  7913  0032E4  ECC4  F01B         	call	_Lcd_Write_Char
  7914  0032E8  4A09               	infsnz	Lcd_Write_String@i^0,f,c
  7915  0032EA  2A0A               	incf	(Lcd_Write_String@i+1)^0,f,c
  7916  0032EC                     l3938:
  7917  0032EC  5009               	movf	Lcd_Write_String@i^0,w,c
  7918  0032EE  2405               	addwf	Lcd_Write_String@a^0,w,c
  7919  0032F0  6E07               	movwf	??_Lcd_Write_String^0,c
  7920  0032F2  500A               	movf	(Lcd_Write_String@i+1)^0,w,c
  7921  0032F4  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
  7922  0032F6  6E08               	movwf	(??_Lcd_Write_String+1)^0,c
  7923  0032F8  C007  FFF6         	movff	??_Lcd_Write_String,tblptrl
  7924  0032FC  C008  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
  7925  003300  6AF8               	clrf	tblptru,c
  7926  003302  0E07               	movlw	(high __ramtop+-1)
  7927  003304  64F7               	cpfsgt	tblptrh,c
  7928  003306  D003               	bra	u4657
  7929  003308  0008               	tblrd		*
  7930  00330A  50F5               	movf	tablat,w,c
  7931  00330C  D005               	bra	u4650
  7932  00330E                     u4657:
  7933  00330E  CFF6 FFE1          	movff	tblptrl,fsr1l
  7934  003312  CFF7 FFE2          	movff	tblptrh,fsr1h
  7935  003316  50E7               	movf	indf1,w,c
  7936  003318                     u4650:
  7937  003318  0900               	iorlw	0
  7938  00331A  A4D8               	btfss	status,2,c
  7939  00331C  EF92  F019         	goto	u4661
  7940  003320  EF94  F019         	goto	u4660
  7941  003324                     u4661:
  7942  003324  EF5C  F019         	goto	l3934
  7943  003328                     u4660:
  7944  003328  0012               	return		;funcret
  7945  00332A                     __end_of_Lcd_Write_String:
  7946                           	callstack 0
  7947                           
  7948 ;; *************** function _Lcd_Write_Char *****************
  7949 ;; Defined at:
  7950 ;;		line 81 in file "lcd.c"
  7951 ;; Parameters:    Size  Location     Type
  7952 ;;  a               1    wreg     unsigned char 
  7953 ;; Auto vars:     Size  Location     Type
  7954 ;;  a               1    3[COMRAM] unsigned char 
  7955 ;;  y               1    2[COMRAM] unsigned char 
  7956 ;;  temp            1    1[COMRAM] unsigned char 
  7957 ;; Return value:  Size  Location     Type
  7958 ;;                  1    wreg      void 
  7959 ;; Registers used:
  7960 ;;		wreg, status,2, status,0, cstack
  7961 ;; Tracked objects:
  7962 ;;		On entry : 0/0
  7963 ;;		On exit  : 0/0
  7964 ;;		Unchanged: 0/0
  7965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7966 ;;      Params:         0       0       0       0       0       0       0       0       0
  7967 ;;      Locals:         3       0       0       0       0       0       0       0       0
  7968 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7969 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7970 ;;Total ram usage:        3 bytes
  7971 ;; Hardware stack levels used: 1
  7972 ;; Hardware stack levels required when called: 1
  7973 ;; This function calls:
  7974 ;;		_Lcd_Port
  7975 ;; This function is called by:
  7976 ;;		_Lcd_Write_String
  7977 ;; This function uses a non-reentrant model
  7978 ;;
  7979                           
  7980                           	psect	text33
  7981  003788                     __ptext33:
  7982                           	callstack 0
  7983  003788                     _Lcd_Write_Char:
  7984                           	callstack 28
  7985                           
  7986                           ;incstack = 0
  7987                           ;Lcd_Write_Char@a stored from wreg
  7988  003788  6E04               	movwf	Lcd_Write_Char@a^0,c
  7989  00378A                     
  7990                           ;lcd.c: 81: void Lcd_Write_Char(unsigned char a);lcd.c: 82: {;lcd.c: 83:    char temp,y;
      +                          ;lcd.c: 84:    temp = a&0x0F;
  7991  00378A  5004               	movf	Lcd_Write_Char@a^0,w,c
  7992  00378C  0B0F               	andlw	15
  7993  00378E  6E02               	movwf	Lcd_Write_Char@temp^0,c
  7994                           
  7995                           ;lcd.c: 85:    y = a&0xF0;
  7996  003790  5004               	movf	Lcd_Write_Char@a^0,w,c
  7997  003792  0BF0               	andlw	240
  7998  003794  6E03               	movwf	Lcd_Write_Char@y^0,c
  7999  003796                     
  8000                           ;lcd.c: 86:    LATDbits.LATD2 = 1;
  8001  003796  848C               	bsf	140,2,c	;volatile
  8002  003798                     
  8003                           ;lcd.c: 87:    Lcd_Port(y>>4);
  8004  003798  3803               	swapf	Lcd_Write_Char@y^0,w,c
  8005  00379A  0B0F               	andlw	15
  8006  00379C  EC61  F01A         	call	_Lcd_Port
  8007  0037A0                     
  8008                           ;lcd.c: 88:    LATDbits.LATD3 = 1;
  8009  0037A0  868C               	bsf	140,3,c	;volatile
  8010  0037A2                     
  8011                           ;lcd.c: 89:    _delay((unsigned long)((40)*(16000000UL/4000000.0)));
  8012  0037A2  0E35               	movlw	53
  8013  0037A4                     u4717:
  8014  0037A4  2EE8               	decfsz	wreg,f,c
  8015  0037A6  D7FE               	bra	u4717
  8016  0037A8  F000               	nop	
  8017  0037AA                     
  8018                           ;lcd.c: 90:    LATDbits.LATD3 = 0;
  8019  0037AA  968C               	bcf	140,3,c	;volatile
  8020  0037AC                     
  8021                           ;lcd.c: 91:    Lcd_Port(temp);
  8022  0037AC  5002               	movf	Lcd_Write_Char@temp^0,w,c
  8023  0037AE  EC61  F01A         	call	_Lcd_Port
  8024  0037B2                     
  8025                           ;lcd.c: 92:    LATDbits.LATD3 = 1;
  8026  0037B2  868C               	bsf	140,3,c	;volatile
  8027  0037B4                     
  8028                           ;lcd.c: 93:    _delay((unsigned long)((40)*(16000000UL/4000000.0)));
  8029  0037B4  0E35               	movlw	53
  8030  0037B6                     u4727:
  8031  0037B6  2EE8               	decfsz	wreg,f,c
  8032  0037B8  D7FE               	bra	u4727
  8033  0037BA  F000               	nop	
  8034  0037BC                     
  8035                           ;lcd.c: 94:    LATDbits.LATD3 = 0;
  8036  0037BC  968C               	bcf	140,3,c	;volatile
  8037  0037BE  0012               	return		;funcret
  8038  0037C0                     __end_of_Lcd_Write_Char:
  8039                           	callstack 0
  8040                           
  8041 ;; *************** function _Lcd_Set_Cursor *****************
  8042 ;; Defined at:
  8043 ;;		line 41 in file "lcd.c"
  8044 ;; Parameters:    Size  Location     Type
  8045 ;;  a               1    wreg     unsigned char 
  8046 ;;  b               1    3[COMRAM] unsigned char 
  8047 ;; Auto vars:     Size  Location     Type
  8048 ;;  a               1    4[COMRAM] unsigned char 
  8049 ;;  temp            1    7[COMRAM] unsigned char 
  8050 ;;  y               1    6[COMRAM] unsigned char 
  8051 ;;  z               1    5[COMRAM] unsigned char 
  8052 ;; Return value:  Size  Location     Type
  8053 ;;                  1    wreg      void 
  8054 ;; Registers used:
  8055 ;;		wreg, status,2, status,0, cstack
  8056 ;; Tracked objects:
  8057 ;;		On entry : 0/0
  8058 ;;		On exit  : 0/0
  8059 ;;		Unchanged: 0/0
  8060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8061 ;;      Params:         1       0       0       0       0       0       0       0       0
  8062 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8063 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8064 ;;      Totals:         5       0       0       0       0       0       0       0       0
  8065 ;;Total ram usage:        5 bytes
  8066 ;; Hardware stack levels used: 1
  8067 ;; Hardware stack levels required when called: 2
  8068 ;; This function calls:
  8069 ;;		_Lcd_Cmd
  8070 ;; This function is called by:
  8071 ;;		_main
  8072 ;; This function uses a non-reentrant model
  8073 ;;
  8074                           
  8075                           	psect	text34
  8076  00339E                     __ptext34:
  8077                           	callstack 0
  8078  00339E                     _Lcd_Set_Cursor:
  8079                           	callstack 28
  8080                           
  8081                           ;incstack = 0
  8082                           ;Lcd_Set_Cursor@a stored from wreg
  8083  00339E  6E05               	movwf	Lcd_Set_Cursor@a^0,c
  8084  0033A0                     
  8085                           ;lcd.c: 41: void Lcd_Set_Cursor(unsigned char a, unsigned char b);lcd.c: 42: {;lcd.c: 43
      +                          :  char temp,z,y;;lcd.c: 44:  if(a == 1)
  8086  0033A0  0405               	decf	Lcd_Set_Cursor@a^0,w,c
  8087  0033A2  A4D8               	btfss	status,2,c
  8088  0033A4  EFD6  F019         	goto	u4621
  8089  0033A8  EFD8  F019         	goto	u4620
  8090  0033AC                     u4621:
  8091  0033AC  EFE9  F019         	goto	l3896
  8092  0033B0                     u4620:
  8093  0033B0                     
  8094                           ;lcd.c: 45:  {;lcd.c: 46:    temp = 0x80 + b - 1;
  8095  0033B0  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  8096  0033B2  0F7F               	addlw	127
  8097  0033B4  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  8098                           
  8099                           ;lcd.c: 47:   z = temp>>4;
  8100  0033B6  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  8101  0033B8  0B0F               	andlw	15
  8102  0033BA  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  8103                           
  8104                           ;lcd.c: 48:   y = temp & 0x0F;
  8105  0033BC  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  8106  0033BE  0B0F               	andlw	15
  8107  0033C0  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  8108  0033C2                     
  8109                           ;lcd.c: 49:   Lcd_Cmd(z);
  8110  0033C2  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  8111  0033C4  EC0E  F01C         	call	_Lcd_Cmd
  8112  0033C8                     
  8113                           ;lcd.c: 50:   Lcd_Cmd(y);
  8114  0033C8  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  8115  0033CA  EC0E  F01C         	call	_Lcd_Cmd
  8116                           
  8117                           ;lcd.c: 51:  }
  8118  0033CE  EF01  F01A         	goto	l27
  8119  0033D2                     l3896:
  8120  0033D2  0E02               	movlw	2
  8121  0033D4  1805               	xorwf	Lcd_Set_Cursor@a^0,w,c
  8122  0033D6  A4D8               	btfss	status,2,c
  8123  0033D8  EFF0  F019         	goto	u4631
  8124  0033DC  EFF2  F019         	goto	u4630
  8125  0033E0                     u4631:
  8126  0033E0  EF01  F01A         	goto	l27
  8127  0033E4                     u4630:
  8128  0033E4                     
  8129                           ;lcd.c: 53:  {;lcd.c: 54:   temp = 0xC0 + b - 1;
  8130  0033E4  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  8131  0033E6  0FBF               	addlw	191
  8132  0033E8  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  8133                           
  8134                           ;lcd.c: 55:   z = temp>>4;
  8135  0033EA  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  8136  0033EC  0B0F               	andlw	15
  8137  0033EE  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  8138                           
  8139                           ;lcd.c: 56:   y = temp & 0x0F;
  8140  0033F0  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  8141  0033F2  0B0F               	andlw	15
  8142  0033F4  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  8143  0033F6                     
  8144                           ;lcd.c: 57:   Lcd_Cmd(z);
  8145  0033F6  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  8146  0033F8  EC0E  F01C         	call	_Lcd_Cmd
  8147  0033FC                     
  8148                           ;lcd.c: 58:   Lcd_Cmd(y);
  8149  0033FC  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  8150  0033FE  EC0E  F01C         	call	_Lcd_Cmd
  8151  003402                     l27:
  8152  003402  0012               	return		;funcret
  8153  003404                     __end_of_Lcd_Set_Cursor:
  8154                           	callstack 0
  8155                           
  8156 ;; *************** function _Lcd_Init *****************
  8157 ;; Defined at:
  8158 ;;		line 62 in file "lcd.c"
  8159 ;; Parameters:    Size  Location     Type
  8160 ;;		None
  8161 ;; Auto vars:     Size  Location     Type
  8162 ;;		None
  8163 ;; Return value:  Size  Location     Type
  8164 ;;                  1    wreg      void 
  8165 ;; Registers used:
  8166 ;;		wreg, status,2, cstack
  8167 ;; Tracked objects:
  8168 ;;		On entry : 0/0
  8169 ;;		On exit  : 0/0
  8170 ;;		Unchanged: 0/0
  8171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8172 ;;      Params:         0       0       0       0       0       0       0       0       0
  8173 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8174 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8175 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8176 ;;Total ram usage:        1 bytes
  8177 ;; Hardware stack levels used: 1
  8178 ;; Hardware stack levels required when called: 2
  8179 ;; This function calls:
  8180 ;;		_Lcd_Cmd
  8181 ;;		_Lcd_Port
  8182 ;; This function is called by:
  8183 ;;		_main
  8184 ;; This function uses a non-reentrant model
  8185 ;;
  8186                           
  8187                           	psect	text35
  8188  00332A                     __ptext35:
  8189                           	callstack 0
  8190  00332A                     _Lcd_Init:
  8191                           	callstack 28
  8192  00332A                     
  8193                           ;lcd.c: 64:   Lcd_Port(0x00);
  8194  00332A  0E00               	movlw	0
  8195  00332C  EC61  F01A         	call	_Lcd_Port
  8196  003330                     
  8197                           ;lcd.c: 65:    _delay((unsigned long)((20)*(16000000UL/4000.0)));
  8198  003330  0E68               	movlw	104
  8199  003332  6E04               	movwf	??_Lcd_Init^0,c
  8200  003334  0EE4               	movlw	228
  8201  003336                     u4737:
  8202  003336  2EE8               	decfsz	wreg,f,c
  8203  003338  D7FE               	bra	u4737
  8204  00333A  2E04               	decfsz	??_Lcd_Init^0,f,c
  8205  00333C  D7FC               	bra	u4737
  8206  00333E  D000               	nop2	
  8207  003340                     
  8208                           ;lcd.c: 66:   Lcd_Cmd(0x03);
  8209  003340  0E03               	movlw	3
  8210  003342  EC0E  F01C         	call	_Lcd_Cmd
  8211  003346                     
  8212                           ;lcd.c: 67:  _delay((unsigned long)((5)*(16000000UL/4000.0)));
  8213  003346  0E1A               	movlw	26
  8214  003348  6E04               	movwf	??_Lcd_Init^0,c
  8215  00334A  0EF8               	movlw	248
  8216  00334C                     u4747:
  8217  00334C  2EE8               	decfsz	wreg,f,c
  8218  00334E  D7FE               	bra	u4747
  8219  003350  2E04               	decfsz	??_Lcd_Init^0,f,c
  8220  003352  D7FC               	bra	u4747
  8221  003354  D000               	nop2	
  8222  003356                     
  8223                           ;lcd.c: 68:   Lcd_Cmd(0x03);
  8224  003356  0E03               	movlw	3
  8225  003358  EC0E  F01C         	call	_Lcd_Cmd
  8226  00335C                     
  8227                           ;lcd.c: 69:  _delay((unsigned long)((11)*(16000000UL/4000.0)));
  8228  00335C  0E3A               	movlw	58
  8229  00335E  6E04               	movwf	??_Lcd_Init^0,c
  8230  003360  0E23               	movlw	35
  8231  003362                     u4757:
  8232  003362  2EE8               	decfsz	wreg,f,c
  8233  003364  D7FE               	bra	u4757
  8234  003366  2E04               	decfsz	??_Lcd_Init^0,f,c
  8235  003368  D7FC               	bra	u4757
  8236  00336A  F000               	nop	
  8237  00336C                     
  8238                           ;lcd.c: 70:   Lcd_Cmd(0x03);
  8239  00336C  0E03               	movlw	3
  8240  00336E  EC0E  F01C         	call	_Lcd_Cmd
  8241  003372                     
  8242                           ;lcd.c: 72:   Lcd_Cmd(0x02);
  8243  003372  0E02               	movlw	2
  8244  003374  EC0E  F01C         	call	_Lcd_Cmd
  8245  003378                     
  8246                           ;lcd.c: 73:   Lcd_Cmd(0x02);
  8247  003378  0E02               	movlw	2
  8248  00337A  EC0E  F01C         	call	_Lcd_Cmd
  8249  00337E                     
  8250                           ;lcd.c: 74:   Lcd_Cmd(0x08);
  8251  00337E  0E08               	movlw	8
  8252  003380  EC0E  F01C         	call	_Lcd_Cmd
  8253  003384                     
  8254                           ;lcd.c: 75:   Lcd_Cmd(0x00);
  8255  003384  0E00               	movlw	0
  8256  003386  EC0E  F01C         	call	_Lcd_Cmd
  8257  00338A                     
  8258                           ;lcd.c: 76:   Lcd_Cmd(0x0C);
  8259  00338A  0E0C               	movlw	12
  8260  00338C  EC0E  F01C         	call	_Lcd_Cmd
  8261  003390                     
  8262                           ;lcd.c: 77:   Lcd_Cmd(0x00);
  8263  003390  0E00               	movlw	0
  8264  003392  EC0E  F01C         	call	_Lcd_Cmd
  8265  003396                     
  8266                           ;lcd.c: 78:   Lcd_Cmd(0x06);
  8267  003396  0E06               	movlw	6
  8268  003398  EC0E  F01C         	call	_Lcd_Cmd
  8269  00339C  0012               	return		;funcret
  8270  00339E                     __end_of_Lcd_Init:
  8271                           	callstack 0
  8272                           
  8273 ;; *************** function _Lcd_Clear *****************
  8274 ;; Defined at:
  8275 ;;		line 35 in file "lcd.c"
  8276 ;; Parameters:    Size  Location     Type
  8277 ;;		None
  8278 ;; Auto vars:     Size  Location     Type
  8279 ;;		None
  8280 ;; Return value:  Size  Location     Type
  8281 ;;                  1    wreg      void 
  8282 ;; Registers used:
  8283 ;;		wreg, status,2, cstack
  8284 ;; Tracked objects:
  8285 ;;		On entry : 0/0
  8286 ;;		On exit  : 0/0
  8287 ;;		Unchanged: 0/0
  8288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8289 ;;      Params:         0       0       0       0       0       0       0       0       0
  8290 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8291 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8292 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8293 ;;Total ram usage:        0 bytes
  8294 ;; Hardware stack levels used: 1
  8295 ;; Hardware stack levels required when called: 2
  8296 ;; This function calls:
  8297 ;;		_Lcd_Cmd
  8298 ;; This function is called by:
  8299 ;;		_main
  8300 ;; This function uses a non-reentrant model
  8301 ;;
  8302                           
  8303                           	psect	text36
  8304  00387A                     __ptext36:
  8305                           	callstack 0
  8306  00387A                     _Lcd_Clear:
  8307                           	callstack 28
  8308  00387A                     
  8309                           ;lcd.c: 37:  Lcd_Cmd(0);
  8310  00387A  0E00               	movlw	0
  8311  00387C  EC0E  F01C         	call	_Lcd_Cmd
  8312                           
  8313                           ;lcd.c: 38:  Lcd_Cmd(1);
  8314  003880  0E01               	movlw	1
  8315  003882  EC0E  F01C         	call	_Lcd_Cmd
  8316  003886  0012               	return		;funcret
  8317  003888                     __end_of_Lcd_Clear:
  8318                           	callstack 0
  8319                           
  8320 ;; *************** function _Lcd_Cmd *****************
  8321 ;; Defined at:
  8322 ;;		line 26 in file "lcd.c"
  8323 ;; Parameters:    Size  Location     Type
  8324 ;;  a               1    wreg     unsigned char 
  8325 ;; Auto vars:     Size  Location     Type
  8326 ;;  a               1    2[COMRAM] unsigned char 
  8327 ;; Return value:  Size  Location     Type
  8328 ;;                  1    wreg      void 
  8329 ;; Registers used:
  8330 ;;		wreg, status,2, cstack
  8331 ;; Tracked objects:
  8332 ;;		On entry : 0/0
  8333 ;;		On exit  : 0/0
  8334 ;;		Unchanged: 0/0
  8335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8336 ;;      Params:         0       0       0       0       0       0       0       0       0
  8337 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8338 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8339 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8340 ;;Total ram usage:        2 bytes
  8341 ;; Hardware stack levels used: 1
  8342 ;; Hardware stack levels required when called: 1
  8343 ;; This function calls:
  8344 ;;		_Lcd_Port
  8345 ;; This function is called by:
  8346 ;;		_Lcd_Clear
  8347 ;;		_Lcd_Set_Cursor
  8348 ;;		_Lcd_Init
  8349 ;;		_Lcd_Shift_Right
  8350 ;;		_Lcd_Shift_Left
  8351 ;; This function uses a non-reentrant model
  8352 ;;
  8353                           
  8354                           	psect	text37
  8355  00381C                     __ptext37:
  8356                           	callstack 0
  8357  00381C                     _Lcd_Cmd:
  8358                           	callstack 28
  8359                           
  8360                           ;incstack = 0
  8361                           ;Lcd_Cmd@a stored from wreg
  8362  00381C  6E03               	movwf	Lcd_Cmd@a^0,c
  8363  00381E                     
  8364                           ;lcd.c: 26: void Lcd_Cmd(unsigned char a);lcd.c: 27: {;lcd.c: 28:  LATDbits.LATD2 = 0;
  8365  00381E  948C               	bcf	140,2,c	;volatile
  8366  003820                     
  8367                           ;lcd.c: 29:  Lcd_Port(a);
  8368  003820  5003               	movf	Lcd_Cmd@a^0,w,c
  8369  003822  EC61  F01A         	call	_Lcd_Port
  8370  003826                     
  8371                           ;lcd.c: 30:  LATDbits.LATD3 = 1;
  8372  003826  868C               	bsf	140,3,c	;volatile
  8373  003828                     
  8374                           ;lcd.c: 31:         _delay((unsigned long)((4)*(16000000UL/4000.0)));
  8375  003828  0E15               	movlw	21
  8376  00382A  6E02               	movwf	??_Lcd_Cmd^0,c
  8377  00382C  0EC6               	movlw	198
  8378  00382E                     u4767:
  8379  00382E  2EE8               	decfsz	wreg,f,c
  8380  003830  D7FE               	bra	u4767
  8381  003832  2E02               	decfsz	??_Lcd_Cmd^0,f,c
  8382  003834  D7FC               	bra	u4767
  8383  003836  D000               	nop2	
  8384  003838                     
  8385                           ;lcd.c: 32:         LATDbits.LATD3 = 0;
  8386  003838  968C               	bcf	140,3,c	;volatile
  8387  00383A  0012               	return		;funcret
  8388  00383C                     __end_of_Lcd_Cmd:
  8389                           	callstack 0
  8390                           
  8391 ;; *************** function _Lcd_Port *****************
  8392 ;; Defined at:
  8393 ;;		line 3 in file "lcd.c"
  8394 ;; Parameters:    Size  Location     Type
  8395 ;;  a               1    wreg     unsigned char 
  8396 ;; Auto vars:     Size  Location     Type
  8397 ;;  a               1    0[COMRAM] unsigned char 
  8398 ;; Return value:  Size  Location     Type
  8399 ;;                  1    wreg      void 
  8400 ;; Registers used:
  8401 ;;		wreg
  8402 ;; Tracked objects:
  8403 ;;		On entry : 0/0
  8404 ;;		On exit  : 0/0
  8405 ;;		Unchanged: 0/0
  8406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8407 ;;      Params:         0       0       0       0       0       0       0       0       0
  8408 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8409 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8410 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8411 ;;Total ram usage:        1 bytes
  8412 ;; Hardware stack levels used: 1
  8413 ;; This function calls:
  8414 ;;		Nothing
  8415 ;; This function is called by:
  8416 ;;		_Lcd_Cmd
  8417 ;;		_Lcd_Init
  8418 ;;		_Lcd_Write_Char
  8419 ;; This function uses a non-reentrant model
  8420 ;;
  8421                           
  8422                           	psect	text38
  8423  0034C2                     __ptext38:
  8424                           	callstack 0
  8425  0034C2                     _Lcd_Port:
  8426                           	callstack 28
  8427                           
  8428                           ;incstack = 0
  8429                           ;Lcd_Port@a stored from wreg
  8430  0034C2  6E01               	movwf	Lcd_Port@a^0,c
  8431  0034C4                     
  8432                           ;lcd.c: 3: void Lcd_Port(unsigned char a);lcd.c: 4: {;lcd.c: 5:  if(a & 1)
  8433  0034C4  A001               	btfss	Lcd_Port@a^0,0,c
  8434  0034C6  EF67  F01A         	goto	u4371
  8435  0034CA  EF69  F01A         	goto	u4370
  8436  0034CE                     u4371:
  8437  0034CE  EF6C  F01A         	goto	l7
  8438  0034D2                     u4370:
  8439  0034D2                     
  8440                           ;lcd.c: 6:   LATDbits.LATD4 = 1;
  8441  0034D2  888C               	bsf	140,4,c	;volatile
  8442  0034D4  EF6D  F01A         	goto	l3702
  8443  0034D8                     l7:
  8444                           
  8445                           ;lcd.c: 8:   LATDbits.LATD4 = 0;
  8446  0034D8  988C               	bcf	140,4,c	;volatile
  8447  0034DA                     l3702:
  8448                           
  8449                           ;lcd.c: 10:  if(a & 2)
  8450  0034DA  A201               	btfss	Lcd_Port@a^0,1,c
  8451  0034DC  EF72  F01A         	goto	u4381
  8452  0034E0  EF74  F01A         	goto	u4380
  8453  0034E4                     u4381:
  8454  0034E4  EF77  F01A         	goto	l9
  8455  0034E8                     u4380:
  8456  0034E8                     
  8457                           ;lcd.c: 11:   LATDbits.LATD5 = 1;
  8458  0034E8  8A8C               	bsf	140,5,c	;volatile
  8459  0034EA  EF78  F01A         	goto	l3706
  8460  0034EE                     l9:
  8461                           
  8462                           ;lcd.c: 13:   LATDbits.LATD5 = 0;
  8463  0034EE  9A8C               	bcf	140,5,c	;volatile
  8464  0034F0                     l3706:
  8465                           
  8466                           ;lcd.c: 15:  if(a & 4)
  8467  0034F0  A401               	btfss	Lcd_Port@a^0,2,c
  8468  0034F2  EF7D  F01A         	goto	u4391
  8469  0034F6  EF7F  F01A         	goto	u4390
  8470  0034FA                     u4391:
  8471  0034FA  EF82  F01A         	goto	l11
  8472  0034FE                     u4390:
  8473  0034FE                     
  8474                           ;lcd.c: 16:   LATDbits.LATD6 = 1;
  8475  0034FE  8C8C               	bsf	140,6,c	;volatile
  8476  003500  EF83  F01A         	goto	l3710
  8477  003504                     l11:
  8478                           
  8479                           ;lcd.c: 18:   LATDbits.LATD6 = 0;
  8480  003504  9C8C               	bcf	140,6,c	;volatile
  8481  003506                     l3710:
  8482                           
  8483                           ;lcd.c: 20:  if(a & 8)
  8484  003506  A601               	btfss	Lcd_Port@a^0,3,c
  8485  003508  EF88  F01A         	goto	u4401
  8486  00350C  EF8A  F01A         	goto	u4400
  8487  003510                     u4401:
  8488  003510  EF8D  F01A         	goto	l13
  8489  003514                     u4400:
  8490  003514                     
  8491                           ;lcd.c: 21:   LATDbits.LATD7 = 1;
  8492  003514  8E8C               	bsf	140,7,c	;volatile
  8493  003516  EF8E  F01A         	goto	l15
  8494  00351A                     l13:
  8495                           
  8496                           ;lcd.c: 23:   LATDbits.LATD7 = 0;
  8497  00351A  9E8C               	bcf	140,7,c	;volatile
  8498  00351C                     l15:
  8499  00351C  0012               	return		;funcret
  8500  00351E                     __end_of_Lcd_Port:
  8501                           	callstack 0
  8502                           
  8503 ;; *************** function _InitUltrasonic *****************
  8504 ;; Defined at:
  8505 ;;		line 63 in file "main.c"
  8506 ;; Parameters:    Size  Location     Type
  8507 ;;		None
  8508 ;; Auto vars:     Size  Location     Type
  8509 ;;		None
  8510 ;; Return value:  Size  Location     Type
  8511 ;;                  1    wreg      void 
  8512 ;; Registers used:
  8513 ;;		wreg, status,2
  8514 ;; Tracked objects:
  8515 ;;		On entry : 0/0
  8516 ;;		On exit  : 0/0
  8517 ;;		Unchanged: 0/0
  8518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8519 ;;      Params:         0       0       0       0       0       0       0       0       0
  8520 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8521 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8522 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8523 ;;Total ram usage:        0 bytes
  8524 ;; Hardware stack levels used: 1
  8525 ;; This function calls:
  8526 ;;		Nothing
  8527 ;; This function is called by:
  8528 ;;		_main
  8529 ;; This function uses a non-reentrant model
  8530 ;;
  8531                           
  8532                           	psect	text39
  8533  00383C                     __ptext39:
  8534                           	callstack 0
  8535  00383C                     _InitUltrasonic:
  8536                           	callstack 30
  8537  00383C                     
  8538                           ;main.c: 64:     TRISBbits.TRISB6 =1;
  8539  00383C  8C93               	bsf	147,6,c	;volatile
  8540                           
  8541                           ;main.c: 65:     TRISBbits.TRISB7 =0;
  8542  00383E  9E93               	bcf	147,7,c	;volatile
  8543                           
  8544                           ;main.c: 66:     LATBbits.LATB7 =0;
  8545  003840  9E8A               	bcf	138,7,c	;volatile
  8546                           
  8547                           ;main.c: 67:     T0CONbits.TMR0ON=0;
  8548  003842  9ED5               	bcf	213,7,c	;volatile
  8549                           
  8550                           ;main.c: 68:     T0CONbits.T08BIT=0;
  8551  003844  9CD5               	bcf	213,6,c	;volatile
  8552                           
  8553                           ;main.c: 69:     T0CONbits.T0CS=0;
  8554  003846  9AD5               	bcf	213,5,c	;volatile
  8555                           
  8556                           ;main.c: 70:     T0CONbits.PSA=1;
  8557  003848  86D5               	bsf	213,3,c	;volatile
  8558                           
  8559                           ;main.c: 71:     INTCONbits.TMR0IF=0;
  8560  00384A  94F2               	bcf	242,2,c	;volatile
  8561  00384C                     
  8562                           ;main.c: 72:     TMR0=0;
  8563  00384C  0E00               	movlw	0
  8564  00384E  6ED7               	movwf	215,c	;volatile
  8565  003850  0E00               	movlw	0
  8566  003852  6ED6               	movwf	214,c	;volatile
  8567  003854  0012               	return		;funcret
  8568  003856                     __end_of_InitUltrasonic:
  8569                           	callstack 0
  8570                           
  8571 ;; *************** function _Config_Port *****************
  8572 ;; Defined at:
  8573 ;;		line 49 in file "main.c"
  8574 ;; Parameters:    Size  Location     Type
  8575 ;;		None
  8576 ;; Auto vars:     Size  Location     Type
  8577 ;;		None
  8578 ;; Return value:  Size  Location     Type
  8579 ;;                  1    wreg      void 
  8580 ;; Registers used:
  8581 ;;		wreg, status,2
  8582 ;; Tracked objects:
  8583 ;;		On entry : 0/0
  8584 ;;		On exit  : 0/0
  8585 ;;		Unchanged: 0/0
  8586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8587 ;;      Params:         0       0       0       0       0       0       0       0       0
  8588 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8589 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8590 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8591 ;;Total ram usage:        0 bytes
  8592 ;; Hardware stack levels used: 1
  8593 ;; This function calls:
  8594 ;;		Nothing
  8595 ;; This function is called by:
  8596 ;;		_main
  8597 ;; This function uses a non-reentrant model
  8598 ;;
  8599                           
  8600                           	psect	text40
  8601  003856                     __ptext40:
  8602                           	callstack 0
  8603  003856                     _Config_Port:
  8604                           	callstack 30
  8605  003856                     
  8606                           ;main.c: 51:     LATD= 0b00000000;
  8607  003856  0E00               	movlw	0
  8608  003858  6E8C               	movwf	140,c	;volatile
  8609                           
  8610                           ;main.c: 54:     SLRCON=0b00000000;
  8611  00385A  0E00               	movlw	0
  8612  00385C  6E7A               	movwf	122,c	;volatile
  8613                           
  8614                           ;main.c: 57:     ANSELD=0b00000000;
  8615  00385E  0E00               	movlw	0
  8616  003860  010F               	movlb	15	; () banked
  8617  003862  6F5E               	movwf	94,b	;volatile
  8618                           
  8619                           ;main.c: 60:     TRISD=0b00000000;
  8620  003864  0E00               	movlw	0
  8621  003866  6E95               	movwf	149,c	;volatile
  8622  003868                     
  8623                           ; BSR set to: 15
  8624  003868  0012               	return		;funcret
  8625  00386A                     __end_of_Config_Port:
  8626                           	callstack 0
  8627                           
  8628 ;; *************** function _Config_Clock *****************
  8629 ;; Defined at:
  8630 ;;		line 44 in file "main.c"
  8631 ;; Parameters:    Size  Location     Type
  8632 ;;		None
  8633 ;; Auto vars:     Size  Location     Type
  8634 ;;		None
  8635 ;; Return value:  Size  Location     Type
  8636 ;;                  1    wreg      void 
  8637 ;; Registers used:
  8638 ;;		wreg, status,2
  8639 ;; Tracked objects:
  8640 ;;		On entry : 0/0
  8641 ;;		On exit  : 0/0
  8642 ;;		Unchanged: 0/0
  8643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8644 ;;      Params:         0       0       0       0       0       0       0       0       0
  8645 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8646 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8647 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8648 ;;Total ram usage:        0 bytes
  8649 ;; Hardware stack levels used: 1
  8650 ;; This function calls:
  8651 ;;		Nothing
  8652 ;; This function is called by:
  8653 ;;		_main
  8654 ;; This function uses a non-reentrant model
  8655 ;;
  8656                           
  8657                           	psect	text41
  8658  003888                     __ptext41:
  8659                           	callstack 0
  8660  003888                     _Config_Clock:
  8661                           	callstack 30
  8662  003888                     
  8663                           ;main.c: 45:     OSCCONbits.IRCF=0b111;
  8664  003888  0E70               	movlw	112
  8665  00388A  12D3               	iorwf	211,f,c	;volatile
  8666                           
  8667                           ;main.c: 46:     OSCCONbits.SCS=0b10;
  8668  00388C  50D3               	movf	211,w,c	;volatile
  8669  00388E  0BFC               	andlw	-4
  8670  003890  0902               	iorlw	2
  8671  003892  6ED3               	movwf	211,c	;volatile
  8672  003894  0012               	return		;funcret
  8673  003896                     __end_of_Config_Clock:
  8674                           	callstack 0
  8675                           
  8676                           	psect	rparam
  8677  0000                     
  8678                           	psect	idloc
  8679                           
  8680                           ;Config register IDLOC0 @ 0x200000
  8681                           ;	unspecified, using default values
  8682  200000                     	org	2097152
  8683  200000  FF                 	db	255
  8684                           
  8685                           ;Config register IDLOC1 @ 0x200001
  8686                           ;	unspecified, using default values
  8687  200001                     	org	2097153
  8688  200001  FF                 	db	255
  8689                           
  8690                           ;Config register IDLOC2 @ 0x200002
  8691                           ;	unspecified, using default values
  8692  200002                     	org	2097154
  8693  200002  FF                 	db	255
  8694                           
  8695                           ;Config register IDLOC3 @ 0x200003
  8696                           ;	unspecified, using default values
  8697  200003                     	org	2097155
  8698  200003  FF                 	db	255
  8699                           
  8700                           ;Config register IDLOC4 @ 0x200004
  8701                           ;	unspecified, using default values
  8702  200004                     	org	2097156
  8703  200004  FF                 	db	255
  8704                           
  8705                           ;Config register IDLOC5 @ 0x200005
  8706                           ;	unspecified, using default values
  8707  200005                     	org	2097157
  8708  200005  FF                 	db	255
  8709                           
  8710                           ;Config register IDLOC6 @ 0x200006
  8711                           ;	unspecified, using default values
  8712  200006                     	org	2097158
  8713  200006  FF                 	db	255
  8714                           
  8715                           ;Config register IDLOC7 @ 0x200007
  8716                           ;	unspecified, using default values
  8717  200007                     	org	2097159
  8718  200007  FF                 	db	255
  8719                           
  8720                           	psect	config
  8721                           
  8722                           ;Config register CONFIG1L @ 0x300000
  8723                           ;	PLL Selection
  8724                           ;	PLLSEL = PLL4X, 4x clock multiplier
  8725                           ;	PLL Enable Configuration bit
  8726                           ;	CFGPLLEN = OFF, PLL Disabled (firmware controlled)
  8727                           ;	CPU System Clock Postscaler
  8728                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
  8729                           ;	Low Speed USB mode with 48 MHz system clock
  8730                           ;	LS48MHZ = SYS24X4, System clock at 24 MHz, USB clock divider is set to 4
  8731  300000                     	org	3145728
  8732  300000  00                 	db	0
  8733                           
  8734                           ;Config register CONFIG1H @ 0x300001
  8735                           ;	Oscillator Selection
  8736                           ;	FOSC = INTOSCIO, Internal oscillator
  8737                           ;	Primary Oscillator Shutdown
  8738                           ;	PCLKEN = ON, Primary oscillator enabled
  8739                           ;	Fail-Safe Clock Monitor
  8740                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8741                           ;	Internal/External Oscillator Switchover
  8742                           ;	IESO = OFF, Oscillator Switchover mode disabled
  8743  300001                     	org	3145729
  8744  300001  28                 	db	40
  8745                           
  8746                           ;Config register CONFIG2L @ 0x300002
  8747                           ;	Power-up Timer Enable
  8748                           ;	nPWRTEN = ON, Power up timer enabled
  8749                           ;	Brown-out Reset Enable
  8750                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
  8751                           ;	Brown-out Reset Voltage
  8752                           ;	BORV = 190, BOR set to 1.9V nominal
  8753                           ;	Low-Power Brown-out Reset
  8754                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  8755  300002                     	org	3145730
  8756  300002  5E                 	db	94
  8757                           
  8758                           ;Config register CONFIG2H @ 0x300003
  8759                           ;	Watchdog Timer Enable bits
  8760                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  8761                           ;	Watchdog Timer Postscaler
  8762                           ;	WDTPS = 32768, 1:32768
  8763  300003                     	org	3145731
  8764  300003  3C                 	db	60
  8765                           
  8766                           ; Padding undefined space
  8767  300004                     	org	3145732
  8768  300004  FF                 	db	255
  8769                           
  8770                           ;Config register CONFIG3H @ 0x300005
  8771                           ;	CCP2 MUX bit
  8772                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  8773                           ;	PORTB A/D Enable bit
  8774                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  8775                           ;	Timer3 Clock Input MUX bit
  8776                           ;	T3CMX = RC0, T3CKI function is on RC0
  8777                           ;	SDO Output MUX bit
  8778                           ;	SDOMX = RB3, SDO function is on RB3
  8779                           ;	Master Clear Reset Pin Enable
  8780                           ;	MCLRE = OFF, RE3 input pin enabled; external MCLR disabled
  8781  300005                     	org	3145733
  8782  300005  53                 	db	83
  8783                           
  8784                           ;Config register CONFIG4L @ 0x300006
  8785                           ;	Stack Full/Underflow Reset
  8786                           ;	STVREN = ON, Stack full/underflow will cause Reset
  8787                           ;	Single-Supply ICSP Enable bit
  8788                           ;	LVP = OFF, Single-Supply ICSP disabled
  8789                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  8790                           ;	ICPRT = OFF, ICPORT disabled
  8791                           ;	Extended Instruction Set Enable bit
  8792                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  8793                           ;	Background Debugger Enable bit
  8794                           ;	DEBUG = 0x1, unprogrammed default
  8795  300006                     	org	3145734
  8796  300006  81                 	db	129
  8797                           
  8798                           ; Padding undefined space
  8799  300007                     	org	3145735
  8800  300007  FF                 	db	255
  8801                           
  8802                           ;Config register CONFIG5L @ 0x300008
  8803                           ;	Block 0 Code Protect
  8804                           ;	CP0 = OFF, Block 0 is not code-protected
  8805                           ;	Block 1 Code Protect
  8806                           ;	CP1 = OFF, Block 1 is not code-protected
  8807                           ;	Block 2 Code Protect
  8808                           ;	CP2 = OFF, Block 2 is not code-protected
  8809                           ;	Block 3 Code Protect
  8810                           ;	CP3 = OFF, Block 3 is not code-protected
  8811  300008                     	org	3145736
  8812  300008  0F                 	db	15
  8813                           
  8814                           ;Config register CONFIG5H @ 0x300009
  8815                           ;	Boot Block Code Protect
  8816                           ;	CPB = OFF, Boot block is not code-protected
  8817                           ;	Data EEPROM Code Protect
  8818                           ;	CPD = OFF, Data EEPROM is not code-protected
  8819  300009                     	org	3145737
  8820  300009  C0                 	db	192
  8821                           
  8822                           ;Config register CONFIG6L @ 0x30000A
  8823                           ;	Block 0 Write Protect
  8824                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
  8825                           ;	Block 1 Write Protect
  8826                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
  8827                           ;	Block 2 Write Protect
  8828                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
  8829                           ;	Block 3 Write Protect
  8830                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
  8831  30000A                     	org	3145738
  8832  30000A  0F                 	db	15
  8833                           
  8834                           ;Config register CONFIG6H @ 0x30000B
  8835                           ;	Configuration Registers Write Protect
  8836                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  8837                           ;	Boot Block Write Protect
  8838                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
  8839                           ;	Data EEPROM Write Protect
  8840                           ;	WRTD = OFF, Data EEPROM is not write-protected
  8841  30000B                     	org	3145739
  8842  30000B  E0                 	db	224
  8843                           
  8844                           ;Config register CONFIG7L @ 0x30000C
  8845                           ;	Block 0 Table Read Protect
  8846                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
  8847                           ;	Block 1 Table Read Protect
  8848                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
  8849                           ;	Block 2 Table Read Protect
  8850                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
  8851                           ;	Block 3 Table Read Protect
  8852                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
  8853  30000C                     	org	3145740
  8854  30000C  0F                 	db	15
  8855                           
  8856                           ;Config register CONFIG7H @ 0x30000D
  8857                           ;	Boot Block Table Read Protect
  8858                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
  8859  30000D                     	org	3145741
  8860  30000D  40                 	db	64
  8861                           tosu	equ	0xFFF
  8862                           tosh	equ	0xFFE
  8863                           tosl	equ	0xFFD
  8864                           stkptr	equ	0xFFC
  8865                           pclatu	equ	0xFFB
  8866                           pclath	equ	0xFFA
  8867                           pcl	equ	0xFF9
  8868                           tblptru	equ	0xFF8
  8869                           tblptrh	equ	0xFF7
  8870                           tblptrl	equ	0xFF6
  8871                           tablat	equ	0xFF5
  8872                           prodh	equ	0xFF4
  8873                           prodl	equ	0xFF3
  8874                           indf0	equ	0xFEF
  8875                           postinc0	equ	0xFEE
  8876                           postdec0	equ	0xFED
  8877                           preinc0	equ	0xFEC
  8878                           plusw0	equ	0xFEB
  8879                           fsr0h	equ	0xFEA
  8880                           fsr0l	equ	0xFE9
  8881                           wreg	equ	0xFE8
  8882                           indf1	equ	0xFE7
  8883                           postinc1	equ	0xFE6
  8884                           postdec1	equ	0xFE5
  8885                           preinc1	equ	0xFE4
  8886                           plusw1	equ	0xFE3
  8887                           fsr1h	equ	0xFE2
  8888                           fsr1l	equ	0xFE1
  8889                           bsr	equ	0xFE0
  8890                           indf2	equ	0xFDF
  8891                           postinc2	equ	0xFDE
  8892                           postdec2	equ	0xFDD
  8893                           preinc2	equ	0xFDC
  8894                           plusw2	equ	0xFDB
  8895                           fsr2h	equ	0xFDA
  8896                           fsr2l	equ	0xFD9
  8897                           status	equ	0xFD8

Data Sizes:
    Strings     39
    Constant    0
    Data        16
    BSS         100
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     85      95
    BANK0           160     70      96
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_13(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_13(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_2(CODE[8]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_2(CODE[8]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 8
		 -> STR_2(CODE[8]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_2(CODE[8]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> str_buffer(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S865$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S865$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 16
		 -> str_buffer(BANK0[16]), STR_1(CODE[12]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _atoi->_isspace
    _ReadUltrasonic->___fldiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   31869
                                             84 COMRAM     1     1      0
                       _Config_Clock
                        _Config_Port
                     _InitUltrasonic
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                     _ReadUltrasonic
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    15      8   28028
                                             71 COMRAM    13    13      0
                                             62 BANK0      8     0      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   27671
                                             69 COMRAM     2     2      0
                                             56 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           44    38      6   27299
                                             57 COMRAM    12    12      0
                                             50 BANK0      6     0      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              62    55      7   22144
                                             45 COMRAM    12     5      7
                                              0 BANK0     50    50      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              6     4      2     920
                                              6 COMRAM     6     4      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3165
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             25 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2889
                                             25 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2656
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     790
                                             25 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                10     8      2    1080
                                              7 COMRAM    10     8      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _ReadUltrasonic                                       8     4      4    2581
                                             25 COMRAM     8     4      4
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2159
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     6     4      2     420
                                              4 COMRAM     6     4      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       3     3      0     178
                                              1 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       5     4      1     532
                                              3 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     198
                                              3 COMRAM     1     1      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     2      0     110
                                              1 COMRAM     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _InitUltrasonic                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Config_Port                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Config_Clock                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Config_Clock
   _Config_Port
   _InitUltrasonic
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _ReadUltrasonic
     ___fldiv
     ___xxtofl
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
         _isdigit
         _isupper
         _strncmp
         _tolower

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      32        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     46      60       5       60.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     55      5F       1      100.0%
BITBIGSFRhlh        3D      0       0      23        0.0%
BITBIGSFRllh        1B      0       0      29        0.0%
BITBIGSFRhhhl       1A      0       0      21        0.0%
BITBIGSFRhhhh        D      0       0      20        0.0%
BITBIGSFRlll         B      0       0      30        0.0%
BITBIGSFRlhlh        8      0       0      27        0.0%
BITBIGSFRlhll        6      0       0      28        0.0%
BITBIGSFRhlll        6      0       0      25        0.0%
BITBIGSFRlhh         1      0       0      26        0.0%
BITBIGSFRhllh        1      0       0      24        0.0%
BITBIGSFRhhl         1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     10F      31        0.0%
DATA                 0      0     10F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed Jul 20 17:57:49 2022

                       l7 34D8                         l9 34EE              ___fldiv@aexp 0019  
            ___fldiv@bexp 0018              ___fldiv@sign 0011                        l11 3504  
                      l13 351A                        l21 3886                        l30 339C  
                      l15 351C                        l33 37BE                        l18 383A  
                      l27 3402                        l39 3328              ___awdiv@sign 0006  
     ___wmul@multiplicand 0003                       l102 3894                       l111 322C  
                     l120 381A                       l105 3868                       l114 3244  
                     l108 3854                       l116 3252                       l117 32AA  
                     l351 2F72                       l417 2B0C                       l364 30E4  
                     l702 24EA                       l390 2C10                       l704 234A  
                     l713 2390                       l385 2BCA                       l394 374E  
                     l650 15DC                       l715 2408                       l707 230E  
                     l379 318E                       l716 23F6                       l741 1FE2  
                     l734 1DEC                       l751 2112                       l743 205A  
                     l744 2048                       l648 1628                       l904 1026  
                     l665 1742                       l657 18F8                       l649 1616  
                     l738 2150                       l674 1812                       l690 369A  
                     l842 2FFA                       l675 1800                       l844 3034  
                     l860 1438                       l782 27EC                       l775 2754  
                     l839 2FB8                       l951 1C6C                       l778 28B0  
                     l946 1D26                       l876 0BE6                       l789 2848  
                     l957 345C                       l958 3464                       l798 356E  
                     l991 29FE                       l968 2D0E                       l994 2A06  
                     _pad 2F74              ___awmod@sign 0006                       wreg 000FE8  
            ___flmul@aexp 0012              ___flmul@bexp 0013              ___flmul@sign 000D  
            ___flmul@temp 0018              ___flmul@prod 0014              ___fltol@exp1 000A  
                    l1000 26FC                      l1010 3786                      l1003 2640  
                    l1024 3716                      l1018 35C0                      l1050 3896  
                    l1062 37F4                      l1039 2EAE                      l1047 36DE  
                    l3000 1EF8                      l1056 34C0                      l3010 1F9C  
                    l3002 1F14                      l1066 2DE4                      l3100 2F46  
                    l3020 1FF2                      l3012 1FAA                      l3004 1F20  
                    l1076 364C                      l3102 2F4C                      l3022 2000  
                    l3014 1FC8                      l3006 1F3C                      l1079 3654  
                    l3104 2F52                      l3120 3054                      l3112 3036  
                    l3032 206A                      l3040 20B2                      l3024 2004  
                    l3016 1FD2                      l3008 1F66                      l3200 2A32  
                    l3106 2F62                      l3130 308C                      l3122 3062  
                    l3114 303A                      l3050 2126                      l3042 20CC  
                    l3034 2076                      l3026 2012                      l3018 1FE0  
                    l3210 2A80                      l3202 2A5C                      l3108 2F6A  
                    l3132 309A                      l3140 30C4                      l3124 306A  
                    l3116 3048                      l3052 2134                      l3044 20E0  
                    l3036 2084                      l3028 2040                      l3220 2AAC  
                    l3204 2A5E                      l3300 2562                      l3070 2EB4  
                    l3142 30D4                      l3134 30B0                      l3126 307C  
                    l3118 3050                      l3150 3114                      l3054 2136  
                    l3046 20FA                      l3038 20AE                      l3062 3656  
                    l3230 2ADC                      l3206 2A6E                      l3310 2630  
                    l3302 2576                      l4016 294E                      l3080 2EE4  
                    l3072 2EC2                      l3144 30DC                      l3136 30B8  
                    l3128 3084                      l3160 318C                      l3152 3124  
                    l3048 2116                      l3056 213C                      l2600 1500  
                    l3064 3666                      l3232 2AEC                      l3216 2A98  
                    l3208 2A72                      l3320 26EC                      l3304 2584  
                    l3312 2664                      l3240 2F82                      l3330 3574  
                    l3090 2F12                      l3082 2EE8                      l3074 2ECA  
                    l3138 30BE                      l3154 3152                      l3170 2B7A  
                    l3058 2140                      l2610 153A                      l2602 1502  
                    l3234 2AFC                      l3226 2AC0                      l3218 2AA2  
                    l3314 26A0                      l3250 2FD8                      l3242 2F96  
                    l3324 3750                      l3332 3588                      l3092 2F20  
                    l3084 2EF0                      l3076 2ECE                      l3068 2EB0  
                    l3156 3162                      l3148 30E6                      l3180 2C08  
                    l3172 2B8A                      l3164 2B0E                      l2700 1758  
                    l2620 154E                      l2612 153E                      l2604 150A  
                    l3228 2ACC                      l3260 2C12                      l3316 26B4  
                    l3308 25F4                      l3252 2FDC                      l3244 2FA4  
                    l3500 0F02                      l3420 0B46                      l3412 0A7E  
                    l3340 082A                      l3334 35B6                      l3094 2F26  
                    l3086 2F02                      l3078 2EDC                      l3158 3186  
                    l3182 2C0E                      l3174 2B98                      l3166 2B3C  
                    l3190 373E                      l2710 1794                      l2702 1768  
                    l2630 1562                      l2622 1552                      l2614 1542  
                    l2606 151A                      l3262 2C32                      l3318 26DC  
                    l2550 2DE6                      l3254 3008                      l3246 2FB0  
                    l3238 2F74                      l3510 0FD6                      l3502 0F12  
                    l3430 0BA6                      l3422 0B4E                      l3414 0AB2  
                    l3406 0A2E                      l3350 087E                      l3342 0834  
                    l2800 216E                      l3336 35BA                      l3328 3570  
                    l3096 2F3C                      l3088 2F0A                      l3176 2BAA  
                    l3168 2B4C                      l2720 17C0                      l2712 1796  
                    l2640 1576                      l2632 1566                      l2624 1556  
                    l2616 1546                      l2608 152C                      l3264 2C70  
                    l3272 2CB0                      l2560 2E68                      l2552 2DF8  
                    l3256 301C                      l3248 2FC4                      l3600 12F8  
                    l3520 101E                      l3512 0FEA                      l3504 0F46  
                    l3432 0BB8                      l3416 0AB8                      l3424 0B80  
                    l3408 0A48                      l3360 08C2                      l3352 0888  
                    l3344 0844                      l2802 217E                      l2810 21A8  
                    l3098 2F44                      l3178 2BB8                      l3186 3718  
                    l2730 17F8                      l2714 17A4                      l2706 177C  
                    l2722 17C2                      l2650 15D4                      l2634 156A  
                    l2626 155A                      l2618 154A                      l2642 157A  
                    l2570 1456                      l3194 2A08                      l3274 2CC2  
                    l3266 2C98                      l2554 2E0A                      l3282 3466  
                    l3290 3610                      l3602 12FE                      l3610 134E  
                    l3530 10DA                      l3522 1042                      l3506 0F9C  
                    l3514 0FEE                      l3450 0C68                      l3434 0BC0  
                    l3426 0B90                      l3418 0B12                      l3362 08CE  
                    l3370 08E4                      l3354 0890                      l3346 0852  
                    l3700 34D2                      l2900 2418                      l2820 21D4  
                    l2812 21B8                      l2804 218E                      l3188 372E  
                    l2740 1876                      l2716 17AC                      l2708 1786  
                    l2724 17D0                      l2660 160A                      l2652 15EA  
                    l2644 157E                      l2636 156E                      l2628 155E  
                    l2572 1466                      l2580 1490                      l2564 143A  
                    l3196 2A1E                      l3268 2CA4                      l2556 2E14  
                    l3284 3476                      l3292 363E                      l3620 139E  
                    l3612 1360                      l3604 1324                      l3540 1122  
                    l3532 10E8                      l3524 10A6                      l3516 0FFE  
                    l3508 0FA2                      l3460 0CA0                      l3452 0C70  
                    l3444 0C04                      l3436 0BDA                      l3428 0B94  
                    l3380 0954                      l3364 08D6                      l3356 08A2  
                    l3348 085A                      l3710 3506                      l3702 34DA  
                    l2910 247A                      l2902 2424                      l2822 21E4  
                    l2830 220E                      l2814 21BE                      l2806 219E  
                    l2750 18BC                      l2734 1822                      l2742 1878  
                    l2726 17D4                      l2718 17B0                      l2670 165A  
                    l2662 1614                      l2654 15F6                      l2646 15A8  
                    l2638 1572                      l2590 14C0                      l2582 14A0  
                    l2574 1476                      l2566 1446                      l3278 2D06  
                    l2558 2E32                      l3286 3610                      l3630 13C2  
                    l3622 13A6                      l3614 137A                      l3606 1340  
                    l3550 114C                      l3542 1126                      l3526 10B4  
                    l3534 10F0                      l3518 1012                      l3470 0CEA  
                    l3462 0CAE                      l3446 0C16                      l3454 0C74  
                    l3438 0BF2                      l3382 096E                      l3366 08DA  
                    l3358 08B0                      l3712 3514                      l3704 34E8  
                    l2920 24D8                      l2912 2490                      l2904 2432  
                    l2840 2250                      l2832 221E                      l2824 21F4  
                    l2816 21C4                      l2808 21A0                      l2760 18E6  
                    l2752 18CA                      l2744 1888                      l2736 182E  
                    l2728 17E2                      l2680 1696                      l2672 166A  
                    l2664 1636                      l2656 15FA                      l2648 15C4  
                    l2592 14CE                      l2584 14A6                      l2576 1486  
                    l2568 1454                      l3296 24EC                      l3640 1418  
                    l3632 13EE                      l3624 13B6                      l3616 1380  
                    l3608 1348                      l3560 1180                      l3552 1152  
                    l3544 112C                      l3536 1104                      l3528 10C8  
                    l3480 0D30                      l3472 0CFC                      l3464 0CB2  
                    l3456 0C7C                      l3448 0C32                      l3384 0978  
                    l3376 090A                      l3368 08DE                      l3720 193C  
                    l3706 34F0                      l3810 3838                      l3802 381E  
                    l2922 24DE                      l2914 24AA                      l2906 245C  
                    l2834 2234                      l2826 2204                      l2818 21D2  
                    l2762 18E8                      l2754 18D0                      l2746 1898  
                    l2738 183C                      l2690 16DC                      l2682 16A4  
                    l2674 1678                      l2666 1646                      l2658 1608  
                    l2594 14D0                      l2586 14B8                      l2578 1488  
                    l3298 250C                      l2770 36BA                      l3634 13FA  
                    l3626 13BC                      l3618 1392                      l3546 1138  
                    l3538 1112                      l3554 1158                      l3562 1186  
                    l3570 121E                      l3490 0E44                      l3482 0D94  
                    l3466 0CC4                      l3474 0D04                      l3458 0C8E  
                    l3394 09C6                      l3378 0936                      l3730 199E  
                    l3722 1940                      l3714 18FA                      l3708 34FE  
                    l3804 3820                      l3900 33F6                      l3820 37A2  
                    l3812 378A                      l2924 24E0                      l2916 24C6  
                    l2908 2460                      l2860 22D2                      l2852 2288  
                    l2836 2244                      l2844 2264                      l2828 2206  
                    l3660 2930                      l3652 28CA                      l2940 1D54  
                    l2932 1D28                      l2756 18D2                      l2748 18B8  
                    l2692 1710                      l2684 16A6                      l2676 1686  
                    l2596 14E0                      l2588 14BA                      l2772 36BE  
                    l2780 37E8                      l3636 1402                      l3580 1288  
                    l3572 123C                      l3564 11DE                      l3556 116A  
                    l3548 1148                      l3492 0E78                      l3484 0DEC  
                    l3476 0D0C                      l3468 0CD2                      l3396 09F2  
                    l3388 09A0                      l3732 19D8                      l3724 1964  
                    l3740 1A44                      l3716 191E                      l3806 3826  
                    l3910 3346                      l3902 33FC                      l3830 37BC  
                    l3822 37AA                      l3814 3796                      l2918 24CA  
                    l2870 2318                      l2862 22DA                      l2854 22A2  
                    l2846 2274                      l2838 224C                      l2790 3812  
                    l3670 29D0                      l3662 2964                      l3654 28E6  
                    l3646 28B2                      l2950 1D90                      l2942 1D64  
                    l2934 1D34                      l2758 18D8                      l2694 1712  
                    l2686 16B0                      l2678 1692                      l2598 14F0  
                    l2766 369C                      l2774 37C0                      l3638 1412  
                    l3590 12C6                      l3582 128C                      l3574 1258  
                    l3566 1212                      l3558 117C                      l3494 0EAA  
                    l3486 0E20                      l3478 0D1C                      l3398 0A10  
                    l3750 1AE4                      l3742 1A64                      l3734 19F8  
                    l3726 196C                      l3718 192C                      ?_pad 0011  
                    l3808 3828                      l3920 3378                      l3912 3356  
                    l3904 332A                      l3824 37AC                      l3816 3798  
                    l2880 2370                      l2872 2336                      l2864 22EA  
                    l2856 22B2                      l2848 2274                      l3840 277A  
                    l3832 2700                      l3672 29E2                      l3656 2920  
                    l3648 28C6                      l2960 1DC6                      l2952 1D96  
                    l2944 1D74                      l2936 1D42                      l2696 1722  
                    l2688 16B6                      l2768 36A8                      l2776 37CC  
                    l2784 36E0                      l3592 12CE                      l3584 129C  
                    l3576 126A                      l3568 121A                      l3496 0EC0  
                    l3488 0E26                      l3680 2D3A                      l3752 1AF6  
                    l3744 1A74                      l3728 197A                      l3930 3396  
                    l3922 337E                      l3914 335C                      l3906 3330  
                    l3826 37B2                      l3818 37A0                      l2890 23AE  
                    l2882 2376                      l2874 2338                      l2866 22FE  
                    l2858 22C2                      l2794 2152                      l3850 27D4  
                    l3834 2710                      l3658 2928                      l2962 1DD6  
                    l2954 1DA4                      l2946 1D7A                      l2938 1D44  
                    l2698 1732                      l2778 37D0                      l3594 12DC  
                    l3586 12AE                      l3578 1278                      l3498 0EF2  
                    l3690 2D88                      l3770 1C08                      l3754 1B0C  
                    l3762 1B76                      l3746 1AA4                      l3738 1A06  
                    l3940 3888                      l3924 3384                      l3916 336C  
                    l3908 3340                      l3828 37B4                      l3932 32AC  
                    l2892 23B2                      l2884 2380                      l2876 2348  
                    l2868 230C                      l2796 215E                      l3860 2838  
                    l3852 27D6                      l3844 278E                      l3836 271E  
                    l2788 37F6                      l3668 299A                      l2980 1E58  
                    l2972 1E20                      l2964 1DDC                      l2956 1DA6  
                    l2948 1D8A                      l3596 12E4                      l3588 12B6  
                    l3692 2D9A                      l3684 2D46                      l3780 1CA4  
                    l3772 1C3C                      l3764 1BA4                      l3756 1B1A  
                    l3748 1AB4                      l3942 3856                      l3926 338A  
                    l3918 3372                      l3934 32B8                      l2894 23C0  
                    l2886 238E                      l2878 235A                      l2798 216C  
                    l3870 2890                      l3862 2856                      l3854 27E2  
                    l3846 2796                      l3838 2764                      l3950 3220  
                    l2990 1EA2                      l2982 1E70                      l2974 1E2C  
                    l2966 1DFC                      l2958 1DB6                      l3598 12EC  
                    l3694 2DC2                      l3686 2D54                      l3678 2D10  
                    l3790 1CE2                      l3782 1CB2                      l3758 1B4A  
                    l3944 383C                      l3928 3390                      l3936 32E8  
                    l2896 23EE                      l2888 23A0                      l3872 289E  
                    l3864 2858                      l3856 281E                      l3848 27A2  
                    l3960 3254                      l3952 3222                      l2992 1EB2  
                    l2984 1E7C                      l2976 1E36                      l2968 1E0C  
                    l3688 2D6C                      l3784 1CC6                      l3768 1BCA  
                    l3880 340C                      l3946 384C                      l3698 34C4  
                    l3890 33B0                      l3938 32EC                      l3874 28A0  
                    l3866 285C                      l3858 282A                      l3954 322A  
                    l2994 1EBE                      l2986 1E88                      l2978 1E4C  
                    l3778 1C80                      l3794 1CF0                      l3882 341A  
                    l3970 353E                      l3892 33C2                      l3868 2880  
                    l3956 323A                      l3948 3220                      l2996 1ECE  
                    l2988 1E96                      l3796 1D14                      l3788 1CD4  
                    l3884 3440                      l3972 355C                      l3964 351E  
                    l3980 3190                      l3886 387A                      l3894 33C8  
                    l3958 3242                      l2998 1EE8                      l3878 3404  
                    l3966 352E                      l3990 31F4                      l3982 31A4  
                    l3896 33D2                      l3888 33A0                      l3968 3536  
                    l3992 31FE                      l3984 31AE                      l3898 33E4  
                    l3994 320A                      l3986 31BA                      l3988 31CE  
                    STR_1 0801                      STR_2 080D                      STR_3 0815  
                    STR_4 081D                      STR_7 0819                      STR_8 0821  
                    u3000 2418                      u3001 2414                      u3010 2432  
                    u3011 242E                      u3020 247A                      u3100 1DC6  
                    u3021 2476                      u3101 1DC2                      u3030 24AA  
                    u3110 1DFC                      u3031 24A6                      u3111 1DF8  
                    u3040 24D8                      u3200 2084                      u3120 1E0C  
                    u2400 1466                      u4000 0CAE                      _LATD 000F8C  
                    u3041 24D4                      u3201 2080                      u3121 1E08  
                    u2401 1462                      u4001 0CAA                      u3210 20CC  
                    u3130 1F86                      u3050 1D42                      u2410 1476  
                    u4010 0CC4                      u3211 20C8                      u3051 1D3E  
                    u2411 1472                      u4011 0CC0                      u3300 3048  
                    u3220 20FA                      u3140 1FE0                      u3060 1D54  
                    u2500 15C2                      u2420 14B8                      u4100 1012  
                    u4020 0CD2                      u3301 3044                      u3221 20F6  
                    u3141 1FDC                      u3061 1D50                      u2421 14B4  
                    u4101 100E                      u4021 0CCE                      u3310 3062  
                    u3230 2134                      u3150 2000                      u3070 1D64  
                    u2510 15EA                      u2430 14CE                      u2350 2DF8  
                    u4110 10B4                      u4030 0CFC                      u3311 305E  
                    u3231 2130                      u3151 1FFC                      u3135 1F7C  
                    u3071 1D60                      u2511 15E6                      u2431 14CA  
                    u2351 2DF4                      u4111 10B0                      u4031 0CF8  
                    u3240 2EC2                      u3320 307C                      u3400 2B7A  
                    u3160 2012                      u3080 1DA4                      u2600 1722  
                    u2520 1608                      u2440 14E0                      u2360 2E0A  
                    u4200 126A                      u4120 10C8                      u4040 0E44  
                    u3241 2EBE                      u3321 3078                      u3401 2B76  
                    u3161 200E                      u3081 1DA0                      u2601 171E  
                    u2521 1604                      u2441 14DC                      u2361 2E06  
                    u4201 1266                      u4121 10C4                      u4041 0E40  
                    u3250 2EDC                      u3330 309A                      u3410 2B98  
                    u3170 2040                      u3090 1DB6                      u2610 1758  
                    u2530 1628                      u2450 14F0                      u2370 2E32  
                    u4210 1278                      u4130 10DA                      u4050 0EAA  
                    u3251 2ED8                      u3331 3096                      u3411 2B94  
                    u3171 203C                      u3091 1DB2                      u2611 1754  
                    u2531 1624                      u2451 14EC                      u2371 2E2E  
                    u4211 1274                      u4131 10D6                      u4051 0EA6  
                    u4300 29D0                      u3260 2F02                      u3340 30B0  
                    u3420 2BB8                      u3180 2056                      u2700 1822  
                    u2620 1768                      u2540 1636                      u2460 152C  
                    u3500 2ADC                      u2380 2E68                      u4220 12AE  
                    u4140 10E8                      u4060 0EF2                      u4301 29CC  
                    u3261 2EFE                      u3341 30AC                      u3421 2BB4  
                    u3181 2052                      u2701 181E                      u2621 1764  
                    u2541 1632                      u2461 1528                      u3501 2AD8  
                    u2381 2E64                      u4221 12AA                      u4141 10E4  
                    u4061 0EEE                      u4310 29E2                      u3270 2F20  
                    u3350 30D4                      u3430 2C08                      u3190 206A  
                    u2710 183C                      u2630 1794                      u2550 1646  
                    u2470 153A                      u2390 1454                      u3510 2AEC  
                    u4230 12DC                      u4150 1104                      u4070 0F02  
                    u4311 29DE                      u3271 2F1C                      u3351 30D0  
                    u3431 2C04                      u3191 2066                      u2711 1838  
                    u2631 1790                      u2551 1642                      u2471 1536  
                    u2391 1450                      u3511 2AE8                      u4231 12D8  
                    u4151 1100                      u4071 0EFE                      u4400 3514  
                    u3280 2F3C                      u3360 3114                      u3440 372E  
                    u2720 1876                      u2640 17A4                      u2560 1678  
                    u2480 15A8                      u3520 2F82                      u2800 3710  
                    u4240 1360                      u4160 1112                      u4080 0F9C  
                    u4320 2D3A                      u4401 3510                      u3281 2F38  
                    u3361 3110                      u3441 372A                      u2721 1872  
                    u2641 17A0                      u2561 1674                      u2481 15A4  
                    u3521 2F7E                      u2801 370A                      u4241 135C  
                    u4161 110E                      u4081 0F98                      u4321 2D36  
                    u3290 2F62                      u3370 3152                      u2730 1888  
                    u2650 17C0                      u2570 1686                      u2490 15C0  
                    u3450 2A1E                      u3610 2CFC                      u3530 2FA4  
                    u2810 3712                      u4250 137A                      u4170 116A  
                    u4090 0FEA                      u4330 2D6C                      u4410 191E  
                    u3291 2F5E                      u3371 314E                      u2731 1884  
                    u2651 17BC                      u2571 1682                      u2491 15BA  
                    u3451 2A1A                      u3611 2CF6                      u3531 2FA0  
                    u4251 1376                      u4171 1166                      u4091 0FE6  
                    u4331 2D68                      u4411 191A                      u2900 22EA  
                    u2820 216C                      u3380 3186                      u2740 1898  
                    u2660 17D0                      u2580 16A4                      u3460 2A52  
                    u3620 2CFE                      u3700 25F0                      u3540 2FFA  
                    u4260 1392                      u4180 123C                      u4340 2D88  
                    u4500 1CA4                      u4420 1964                      u2901 22E6  
                    u2821 2168                      u3381 3182                      u2741 1894  
                    u2661 17CC                      u2581 16A0                      u3605 2CD4  
                    u3701 25EC                      u3541 2FF6                      u4261 138E  
                    u4181 1238                      u4341 2D84                      u4501 1CA0  
                    u4421 1960                      u2910 230C                      u2830 217E  
                    u4510 2710                      u3390 2B3C                      u2750 18B8  
                    u2670 17E2                      u2590 16DC                      u3470 2A80  
                    u3710 2614                      u3550 3008                      u3630 34AE  
                    u4270 13EE                      u4190 1258                      u4350 2D9A  
                    u4430 199E                      u2911 2308                      u2831 217A  
                    u4511 270C                      u3391 2B38                      u2751 18B4  
                    u2671 17DE                      u2591 16D8                      u3471 2A7C  
                    u3551 3004                      u4271 13EA                      u4191 1254  
                    u4351 2D96                      u4431 199A                      u2920 2336  
                    u2840 218E                      u4600 289E                      u4520 271E  
                    u4280 28E6                      u2760 18CA                      u2680 17F8  
                    u3480 2A94                      u3560 2C52                      u3720 2630  
                    u3640 34C0                      u3800 0852                      u4360 2DC2  
                    u4440 1A44                      u2921 2332                      u2841 218A  
                    u4601 289A                      u4521 271A                      u4281 28E2  
                    u2761 18C6                      u2681 17F4                      u3481 2A90  
                    u3465 2A48                      u3721 262C                      u3641 34BC  
                    u3801 084E                      u4361 2DBE                      u4441 1A40  
                    u4370 34D2                      u2930 235A                      u2850 21D2  
                    u4530 277A                      u4290 291C                      u2770 18E6  
                    u2690 180E                      u3490 2ABC                      u3570 2C70  
                    u3730 2684                      u3650 363E                      u3810 08A2  
                    u4450 1A74                      u4610 345C                      u4371 34CE  
                    u2931 2356                      u2851 21CE                      u4531 2776  
                    u4291 2918                      u2771 18E2                      u2691 180A  
                    u3491 2AB8                      u3571 2C6C                      u3715 260A  
                    u3651 363A                      u3811 089E                      u4451 1A70  
                    u4611 3458                      u4380 34E8                      u4620 33B0  
                    u2940 2370                      u2860 21E4                      u4540 27D0  
                    u3580 2C98                      u3740 26A0                      u3660 2534  
                    u2780 36DE                      u3900 0B80                      u3820 08B0  
                    u4460 1AB4                      u4381 34E4                      u4621 33AC  
                    u2941 236C                      u2861 21E0                      u4541 27CC  
                    u3581 2C94                      u3565 2C48                      u3741 269C  
                    u2781 36DA                      u3637 34A4                      u3901 0B7C  
                    u3821 08AC                      u4461 1AB0                      u4390 34FE  
                    u4630 33E4                      u2950 238E                      u2870 21F4  
                    u4550 281A                      u3590 2CC2                      u3750 26DC  
                    u3670 2562                      u2790 37E8                      u3910 0BA6  
                    u3830 08C2                      u4470 1AF6                      u4391 34FA  
                    u4631 33E0                      u2951 238A                      u2871 21F0  
                    u4551 2816                      u3591 2CBE                      u3751 26D8  
                    u3735 267A                      u3671 255E                      u2791 37E4  
                    u3911 0BA2                      u3831 08BE                      u4471 1AF2  
                    u4640 32E4                      u2960 23AE                      u2880 2234  
                    u4560 2838                      u3760 3780                      u3680 2584  
                    u3920 0BB8                      u3840 090A                      u4480 1BA4  
                    u2961 23AA                      u2881 2230                      u4561 2834  
                    u3761 377A                      u3681 2580                      u3665 252A  
                    u3921 0BB4                      u3841 0906                      u4481 1BA0  
                    u4650 3318                      u2970 23C0                      u2890 2274  
                    u4570 2848                      u3770 3782                      u3930 0BDA  
                    u3850 0936                      u4490 1C08                      u2971 23BC  
                    u2891 2270                      u4571 2844                      u4707 3224  
                    u3931 0BD6                      u3851 0932                      u4491 1C04  
                    u4660 3328                      u2980 23EE                      u4580 2856  
                    u3780 3588                      u3940 0C00                      u3860 09C6  
                    u4717 37A4                      u4661 3324                      u2981 23EA  
                    u4581 2852                      u3781 3584                      u3941 0BFC  
                    u3861 09C2                      u2990 2404                      u4590 2890  
                    u4670 323A                      u3790 35B6                      u3950 0C16  
                    u3870 09F2                      u4727 37B6                      u4647 32DA  
                    u2991 2400                      u4591 288C                      u4671 3236  
                    u3791 35B2                      u3695 2598                      u3951 0C12  
                    u3871 09EE                      u4680 3252                      u3696 25A2  
                    u3960 0C32                      u3880 0A7A                      u4737 3336  
                    u4657 330E                      u4681 324E                      u3697 25B2  
                    u3961 0C2E                      u3881 0A76                      u3970 0C68  
                    u3890 0B0E                      u4747 334C                      u3971 0C64  
                    u3891 0B0A                      u3980 0C8E                      u4757 3362  
                    u3981 0C8A                      u3990 0CA0                      u4767 382E  
                    u3991 0C9C                      u4697 3210                      _TMR0 000FD6  
       ?_Lcd_Write_String 0005                      _dbuf 0100                      _atoi 28B2  
                    _main 3190                      _prec 005C                      _nout 00BE  
                    pad@i 0018                      pad@p 0015                      fsr1h 000FE2  
                    fsr2h 000FDA                      indf1 000FE7                      indf2 000FDF  
                    fsr1l 000FE1                      pad@w 001A                      fsr2l 000FD9  
           ___fpclassifyf 2C12                      prodh 000FF4                      prodl 000FF3  
                    start 0000        ??_Lcd_Write_String 0007           ___fldiv@new_exp 0012  
         __end_of_Lcd_Cmd 383C              ___param_bank 000000       __end_of_Config_Port 386A  
                   ??_pad 0017             ___fltol@sign1 0009                     ?_atoi 0008  
         __end_of___fladd 18FA                     ?_main 0001           __end_of___fldiv 24EC  
         __end_of___awdiv 2F74           __end_of___flneg 3750                     STR_11 0825  
                   STR_13 0825           __end_of___awmod 30E6           __end_of___flmul 2152  
         __end_of___flsub 369C           __end_of___fltol 2B0E           ___awdiv@divisor 0003  
         ___awdiv@counter 0005              vfpfcnvrt@fmt 0094                     _TRISD 000F95  
                   _flags 005E                     _fputc 2DE6                     _fputs 369C  
         __end_of_isdigit 3788                     atoi@n 0010                     pad@fp 0011  
                   atoi@s 0008                     _width 005A                     _putch 3896  
         __end_of_isspace 35C2           __end_of_isupper 3718                     tablat 000FF5  
                   status 000FD8           __end_of_sprintf 3570            ?___fpclassifyf 0001  
         __end_of_tolower 3656           __end_of_strncmp 2DE6          __end_of_Lcd_Init 339E  
        __end_of_Lcd_Port 351E           __initialization 35C2      __end_of_Config_Clock 3896  
            __end_of_atoi 2A08              __end_of_main 3220                    ??_atoi 000A  
                  ??_main 0055             __activetblptr 000002                    ?_fputc 0001  
                  ?_fputs 000A          ___awdiv@dividend 0001                    ?_putch 0001  
                  _ANSELD 000F5E                 ??_Lcd_Cmd 0002                    _SLRCON 000F7A  
             _Config_Port 3856          __end_of___xxtofl 28B2              vfprintf@cfmt 0046  
                  ___flge 2B0E                    ___fleq 30E6                 ??___fladd 0009  
                  ___wmul 37F6                 ??___fldiv 0009                 ??___awdiv 0005  
               ??___flneg 0005                 ??___awmod 0005                 ??___flmul 0009  
               ??___flsub 0022                 ??___fltol 0005                    _efgtoa 082A  
                  _floorf 24EC                    clear_0 35E8                    clear_1 35F4  
                  clear_2 3600          ___awdiv@quotient 0007           ___awmod@divisor 0003  
                  isa$std 000001           ___awmod@counter 0005                    pad@buf 0013  
                  _strcpy 3466                    _strlen 37C0                    fputc@c 0001  
                  fputs@c 000E                    fputs@i 000F                    fputs@s 000A  
               ??_isdigit 0003           ___fpclassifyf@e 0009           ___fpclassifyf@u 000B  
         ___fpclassifyf@x 0001              __mediumconst 0000                 ??_isspace 0003  
                  tblptrh 000FF7                 ??_isupper 0003                    tblptrl 000FF6  
                  tblptru 000FF8            _InitUltrasonic 383C                    putch@c 0001  
        __end_of_vfprintf 3466                 ??_sprintf 0048                 ??_tolower 0009  
               ??_strncmp 0007           Lcd_Set_Cursor@a 0005           Lcd_Set_Cursor@b 0004  
         Lcd_Set_Cursor@y 0007           Lcd_Set_Cursor@z 0006                ___flge@ff1 001A  
              ___flge@ff2 001E           ??___fpclassifyf 0005              ___xxtofl@arg 000B  
            ___xxtofl@exp 000A              ___xxtofl@val 0001                ___fleq@ff1 0001  
              ___fleq@ff2 0005                __accesstop 0060   __end_of__initialization 3606  
              ___flneg@f1 0001         __end_of_Lcd_Clear 3888             ___rparam_used 000001  
              ___fltol@f1 0001            __pcstackCOMRAM 0001              __pidataBANK0 386A  
           __end_of_fputc 2EB0             __end_of_fputs 36E0             __end_of_putch 3898  
          _Lcd_Set_Cursor 339E    __end_of_InitUltrasonic 3856                 ?_Lcd_Init 0001  
          _ReadUltrasonic 3220                 ?_Lcd_Port 0001      ReadUltrasonic@tiempo 001E  
                 ??_fputc 0005                   ??_fputs 000E                   ??_putch 0001  
              __pbssBANK0 00B6                __pbssBANK1 0100                _efgtoa$999 0060  
                 ?___flge 001A                   ?___fleq 0001                   ?___wmul 0001  
                 ?_efgtoa 002E                   ?_floorf 001A    __end_of_Lcd_Set_Cursor 3404  
                 ?_strcpy 0001                   ?_strlen 0001           ?_InitUltrasonic 0001  
  __end_of_ReadUltrasonic 32AC                 ?___xxtofl 0001                ??_Lcd_Init 0004  
            _Config_Clock 3888                ??_Lcd_Port 0001            _Lcd_Write_Char 3788  
                 _Lcd_Cmd 381C                   __Hparam 0000                   __Lparam 0000  
                 ___fladd 143A                   ___fldiv 2152                   ___awdiv 2EB0  
                 ___flneg 3718                   ___awmod 3036                   ___flmul 1D28  
                 ___flsub 3656                   ___fltol 2A08                 ?_vfprintf 0098  
            __psmallconst 0800                   __pcinit 35C2                   __ramtop 0800  
         ?_Lcd_Set_Cursor 0004                   __ptext0 3190                   __ptext1 351E  
                 __ptext2 3404                   __ptext3 18FA                   __ptext4 2D10  
                 __ptext5 082A                   __ptext6 3610                   __ptext7 36E0  
                 __ptext8 3466                   __ptext9 2F74                 _T0CONbits 000FD5  
                 _isdigit 3750                ??___xxtofl 0005           ?_ReadUltrasonic 001A  
        ___awmod@dividend 0001                   _isspace 3570                   _isupper 36E0  
                 efgtoa@c 0034                   efgtoa@d 0072                   efgtoa@e 008A  
                 efgtoa@f 0030                   efgtoa@g 0086                   efgtoa@h 007C  
                 efgtoa@i 0084                   efgtoa@l 0080                   efgtoa@m 006C  
                 efgtoa@n 008C                   efgtoa@p 0076                   efgtoa@t 0066  
                 efgtoa@u 008E                   efgtoa@w 0078                   atoi@neg 000E  
                 _sprintf 351E                   _tolower 3610    __end_of_Lcd_Write_Char 37C0  
                 _strncmp 2D10      end_of_initialization 3606                   floorf@e 0028  
                 floorf@m 0024                   floorf@u 002A                   floorf@x 001A  
                 fputc@fp 0003             __Lmediumconst 0000              ?_Config_Port 0001  
                 fputs@fp 000C         __end_of_vfpfcnvrt 1D28                efgtoa@mode 007B  
              efgtoa@sign 0074                   postdec1 000FE5                   postdec2 000FDD  
                 postinc0 000FEE                   postinc1 000FE6                   postinc2 000FDE  
               Lcd_Port@a 0001                ??_vfprintf 0046                   strcpy@d 0009  
                 strlen@a 0003                   strcpy@s 0007                   strlen@s 0001  
               _PORTBbits 000F81               ___fladd@grs 0010             ___xxtofl@sign 0009  
               _TRISBbits 000F93               ___fldiv@grs 0014               ___fldiv@rem 000D  
         ?_Lcd_Write_Char 0001         Lcd_Write_String@a 0005         Lcd_Write_String@i 0009  
             ___flmul@grs 000E                _str_buffer 00A6                 _Lcd_Clear 387A  
          __end_of___flge 2C12            __end_of___fleq 3190               vfpfcnvrt@ap 0096  
             vfpfcnvrt@ct 0042               vfpfcnvrt@fp 0092            __end_of___wmul 381C  
        _Lcd_Write_String 32AC            __end_of_efgtoa 143A            __end_of_floorf 26FE  
              floorf@F526 00B6            __end_of_strcpy 34C2            __end_of_strlen 37F6  
     start_initialization 35C2               __end_of_pad 3036     __end_of___fpclassifyf 2D10  
             vfprintf@fmt 009A                ?_Lcd_Clear 0001                  ??___flge 0022  
                ??___fleq 0009                  ??___wmul 0005                  ??_efgtoa 0035  
             __pdataBANK0 00A6                  ??_floorf 001E          ??_InitUltrasonic 0001  
         Lcd_Write_Char@a 0004           Lcd_Write_Char@y 0003                  ??_strcpy 0005  
                ??_strlen 0003                 ___fladd@a 0005                 ___fladd@b 0001  
               ___fldiv@a 0005                 ___fldiv@b 0001                 ___flmul@a 0005  
               ___flmul@b 0001               __pbssCOMRAM 0056                 ___flsub@a 001E  
               ___flsub@b 001A             __pcstackBANK0 0060                  ?_Lcd_Cmd 0001  
             _efgtoa$1007 0062               _efgtoa$1008 0064          ??_Lcd_Set_Cursor 0005  
                ?___fladd 0001                  ?___fldiv 0001                  ?___awdiv 0001  
                ?___flneg 0001                  ?___awmod 0001                  ?___flmul 0001  
                ?___flsub 001A                  ?___fltol 0001          ??_ReadUltrasonic 001E  
               _distancia 00BA               __smallconst 0800                  ?_isdigit 0001  
                ?_isspace 0001                  ?_isupper 0001                  ?_sprintf 009E  
                ?_tolower 0007                  ?_strncmp 0001            ___wmul@product 0005  
                _LATBbits 000F8A                  _LATDbits 000F8C                  Lcd_Cmd@a 0003  
             ??_Lcd_Clear 0004                 _vfpfcnvrt 18FA         ___wmul@multiplier 0001  
        ??_Lcd_Write_Char 0002              _isspace$1086 0007                  _Lcd_Init 332A  
                _Lcd_Port 34C2                vfpfcnvrt@c 0045                vfpfcnvrt@f 003E  
               copy_data0 35D6  __end_of_Lcd_Write_String 332A                  __Hrparam 0000  
              vfprintf@ap 009C                  __Lrparam 0000                vfprintf@fp 0098  
              ?_vfpfcnvrt 0092        ___fpclassifyf@F465 0056                sprintf@fmt 00A0  
                ___xxtofl 26FE                  __ptext10 37C0                  __ptext11 369C  
                __ptext20 1D28                  __ptext12 2DE6                  __ptext21 2B0E  
                __ptext13 3896                  __ptext30 26FE                  __ptext22 30E6  
                __ptext14 24EC                  __ptext31 2152                  __ptext23 3036  
                __ptext15 2C12                  __ptext40 3856                  __ptext32 32AC  
                __ptext24 2EB0                  __ptext16 2A08                  __ptext41 3888  
                __ptext33 3788                  __ptext25 28B2                  __ptext17 3656  
                __ptext34 339E                  __ptext26 3570                  __ptext18 143A  
                __ptext35 332A                  __ptext27 3750                  __ptext19 3718  
                __ptext36 387A                  __ptext28 37F6                  __ptext37 381C  
                __ptext29 3220                  __ptext38 34C2                  __ptext39 383C  
              strcpy@dest 0001                  efgtoa@fp 002E                  efgtoa@ne 006A  
                efgtoa@pp 0068                  efgtoa@ou 006E                  isa$xinst 000000  
                _vfprintf 3404                _INTCONbits 000FF2             ?_Config_Clock 0001  
                isdigit@c 0001        Lcd_Write_Char@temp 0002                 sprintf@ap 0048  
                isspace@c 0001                 strcpy@src 0003                  isupper@c 0001  
               strncmp@_l 0001                 strncmp@_r 0003                _OSCCONbits 000FD3  
             efgtoa@nmode 007A               ??_vfpfcnvrt 003A        Lcd_Set_Cursor@temp 0008  
                sprintf@f 004A                  tolower@c 0007                  sprintf@s 009E  
          ??_Config_Clock 0001                  strncmp@l 0008                  strncmp@n 0005  
                strncmp@r 000A             ___fladd@signs 000D             ??_Config_Port 0001  
            ___fladd@aexp 000E              ___fladd@bexp 000F  
