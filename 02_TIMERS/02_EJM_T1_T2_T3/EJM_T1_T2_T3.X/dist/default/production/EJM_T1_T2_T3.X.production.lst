

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sun Jul 10 17:16:40 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    16                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    18  0000                     
    19                           ; Version 2.35
    20                           ; Generated 05/05/2021 GMT
    21                           ; 
    22                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F45K50 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     _LATDbits	set	3980
    55  0000                     _ANSELA	set	3931
    56  0000                     _ANSELD	set	3934
    57  0000                     _ANSELE	set	3935
    58  0000                     _SLRCON	set	3962
    59  0000                     _LATA	set	3977
    60  0000                     _LATD	set	3980
    61  0000                     _OSCCONbits	set	4051
    62  0000                     _TMR0	set	4054
    63  0000                     _T0CONbits	set	4053
    64  0000                     _INTCONbits	set	4082
    65  0000                     _TRISA	set	3986
    66  0000                     _TRISD	set	3989
    67  0000                     _TRISE	set	3990
    68  0000                     _LATE	set	3981
    69  0000                     _PIE1bits	set	3997
    70  0000                     _PIR1bits	set	3998
    71  0000                     _PIE2bits	set	4000
    72  0000                     _PIR2bits	set	4001
    73  0000                     _TMR3	set	4018
    74  0000                     _TMR1	set	4046
    75  0000                     _T3CONbits	set	4017
    76  0000                     _T1CONbits	set	4045
    77                           
    78                           ; #config settings
    79                           
    80                           	psect	cinit
    81  000124                     __pcinit:
    82                           	callstack 0
    83  000124                     start_initialization:
    84                           	callstack 0
    85  000124                     __initialization:
    86                           	callstack 0
    87  000124                     end_of_initialization:
    88                           	callstack 0
    89  000124                     __end_of__initialization:
    90                           	callstack 0
    91  000124  9001               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    92  000126  9201               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    93  000128  0100               	movlb	0
    94  00012A  EF76  F000         	goto	_main	;jump to C main() function
    95                           
    96                           	psect	cstackCOMRAM
    97  000000                     __pcstackCOMRAM:
    98                           	callstack 0
    99  000000                     
   100                           ; 1 bytes @ 0x0
   101 ;;
   102 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   103 ;;
   104 ;; *************** function _main *****************
   105 ;; Defined at:
   106 ;;		line 20 in file "main.c"
   107 ;; Parameters:    Size  Location     Type
   108 ;;		None
   109 ;; Auto vars:     Size  Location     Type
   110 ;;		None
   111 ;; Return value:  Size  Location     Type
   112 ;;                  1    wreg      void 
   113 ;; Registers used:
   114 ;;		wreg, status,2, status,0, cstack
   115 ;; Tracked objects:
   116 ;;		On entry : 0/0
   117 ;;		On exit  : 0/0
   118 ;;		Unchanged: 0/0
   119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   120 ;;      Params:         0       0       0       0       0       0       0       0       0
   121 ;;      Locals:         0       0       0       0       0       0       0       0       0
   122 ;;      Temps:          0       0       0       0       0       0       0       0       0
   123 ;;      Totals:         0       0       0       0       0       0       0       0       0
   124 ;;Total ram usage:        0 bytes
   125 ;; Hardware stack levels required when called: 2
   126 ;; This function calls:
   127 ;;		_Config_Clock
   128 ;;		_Config_Port
   129 ;;		_Config_TMR0_TMR1_TMR3
   130 ;;		_Config_TMRS_Interrupt
   131 ;; This function is called by:
   132 ;;		Startup code after reset
   133 ;; This function uses a non-reentrant model
   134 ;;
   135                           
   136                           	psect	text0
   137  0000EC                     __ptext0:
   138                           	callstack 0
   139  0000EC                     _main:
   140                           	callstack 29
   141  0000EC                     
   142                           ;main.c: 22:     Config_Clock();
   143  0000EC  EC8B  F000         	call	_Config_Clock	;wreg free
   144  0000F0                     
   145                           ;main.c: 23:     Config_Port();
   146  0000F0  EC5D  F000         	call	_Config_Port	;wreg free
   147  0000F4                     
   148                           ;main.c: 24:     Config_TMRS_Interrupt();
   149  0000F4  EC82  F000         	call	_Config_TMRS_Interrupt	;wreg free
   150  0000F8                     
   151                           ;main.c: 25:     Config_TMR0_TMR1_TMR3();
   152  0000F8  EC35  F000         	call	_Config_TMR0_TMR1_TMR3	;wreg free
   153  0000FC                     l57:
   154  0000FC  EF7E  F000         	goto	l57
   155  000100  EF33  F000         	goto	start
   156  000104                     __end_of_main:
   157                           	callstack 0
   158                           
   159 ;; *************** function _Config_TMRS_Interrupt *****************
   160 ;; Defined at:
   161 ;;		line 64 in file "main.c"
   162 ;; Parameters:    Size  Location     Type
   163 ;;		None
   164 ;; Auto vars:     Size  Location     Type
   165 ;;		None
   166 ;; Return value:  Size  Location     Type
   167 ;;                  1    wreg      void 
   168 ;; Registers used:
   169 ;;		None
   170 ;; Tracked objects:
   171 ;;		On entry : 0/0
   172 ;;		On exit  : 0/0
   173 ;;		Unchanged: 0/0
   174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   175 ;;      Params:         0       0       0       0       0       0       0       0       0
   176 ;;      Locals:         0       0       0       0       0       0       0       0       0
   177 ;;      Temps:          0       0       0       0       0       0       0       0       0
   178 ;;      Totals:         0       0       0       0       0       0       0       0       0
   179 ;;Total ram usage:        0 bytes
   180 ;; Hardware stack levels used: 1
   181 ;; Hardware stack levels required when called: 1
   182 ;; This function calls:
   183 ;;		Nothing
   184 ;; This function is called by:
   185 ;;		_main
   186 ;; This function uses a non-reentrant model
   187 ;;
   188                           
   189                           	psect	text1
   190  000104                     __ptext1:
   191                           	callstack 0
   192  000104                     _Config_TMRS_Interrupt:
   193                           	callstack 29
   194  000104                     
   195                           ;main.c: 65:     INTCONbits.GIE = 1;
   196  000104  8EF2               	bsf	242,7,c	;volatile
   197                           
   198                           ;main.c: 66:     INTCONbits.PEIE = 1;
   199  000106  8CF2               	bsf	242,6,c	;volatile
   200                           
   201                           ;main.c: 69:     INTCONbits.TMR0IF = 0;
   202  000108  94F2               	bcf	242,2,c	;volatile
   203                           
   204                           ;main.c: 70:     INTCONbits.TMR0IE = 1;
   205  00010A  8AF2               	bsf	242,5,c	;volatile
   206                           
   207                           ;main.c: 73:     PIR1bits.TMR1IF = 0;
   208  00010C  909E               	bcf	158,0,c	;volatile
   209                           
   210                           ;main.c: 74:     PIE1bits.TMR1IE = 1;
   211  00010E  809D               	bsf	157,0,c	;volatile
   212                           
   213                           ;main.c: 77:     PIR2bits.TMR3IF = 0;
   214  000110  92A1               	bcf	161,1,c	;volatile
   215                           
   216                           ;main.c: 78:     PIE2bits.TMR3IE = 1;
   217  000112  82A0               	bsf	160,1,c	;volatile
   218  000114  0012               	return		;funcret
   219  000116                     __end_of_Config_TMRS_Interrupt:
   220                           	callstack 0
   221                           
   222 ;; *************** function _Config_TMR0_TMR1_TMR3 *****************
   223 ;; Defined at:
   224 ;;		line 105 in file "main.c"
   225 ;; Parameters:    Size  Location     Type
   226 ;;		None
   227 ;; Auto vars:     Size  Location     Type
   228 ;;		None
   229 ;; Return value:  Size  Location     Type
   230 ;;                  1    wreg      void 
   231 ;; Registers used:
   232 ;;		wreg, status,2
   233 ;; Tracked objects:
   234 ;;		On entry : 0/0
   235 ;;		On exit  : 0/0
   236 ;;		Unchanged: 0/0
   237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   238 ;;      Params:         0       0       0       0       0       0       0       0       0
   239 ;;      Locals:         0       0       0       0       0       0       0       0       0
   240 ;;      Temps:          0       0       0       0       0       0       0       0       0
   241 ;;      Totals:         0       0       0       0       0       0       0       0       0
   242 ;;Total ram usage:        0 bytes
   243 ;; Hardware stack levels used: 1
   244 ;; Hardware stack levels required when called: 1
   245 ;; This function calls:
   246 ;;		Nothing
   247 ;; This function is called by:
   248 ;;		_main
   249 ;; This function uses a non-reentrant model
   250 ;;
   251                           
   252                           	psect	text2
   253  00006A                     __ptext2:
   254                           	callstack 0
   255  00006A                     _Config_TMR0_TMR1_TMR3:
   256                           	callstack 29
   257  00006A                     
   258                           ;main.c: 107:     T0CONbits.TMR0ON = 0;
   259  00006A  9ED5               	bcf	213,7,c	;volatile
   260                           
   261                           ;main.c: 108:     T0CONbits.T08BIT = 0;
   262  00006C  9CD5               	bcf	213,6,c	;volatile
   263                           
   264                           ;main.c: 109:     T0CONbits.T0CS = 0;
   265  00006E  9AD5               	bcf	213,5,c	;volatile
   266                           
   267                           ;main.c: 117:     T0CONbits.PSA = 0;
   268  000070  96D5               	bcf	213,3,c	;volatile
   269  000072                     
   270                           ;main.c: 118:     T0CONbits.T0PS = 0b101;
   271  000072  50D5               	movf	213,w,c	;volatile
   272  000074  0BF8               	andlw	-8
   273  000076  0905               	iorlw	5
   274  000078  6ED5               	movwf	213,c	;volatile
   275                           
   276                           ;main.c: 119:     TMR0 = 53036;
   277  00007A  0ECF               	movlw	207
   278  00007C  6ED7               	movwf	215,c	;volatile
   279  00007E  0E2C               	movlw	44
   280  000080  6ED6               	movwf	214,c	;volatile
   281  000082                     
   282                           ;main.c: 120:     T0CONbits.TMR0ON = 1;
   283  000082  8ED5               	bsf	213,7,c	;volatile
   284  000084                     
   285                           ;main.c: 123:     T1CONbits.TMR1ON = 0;
   286  000084  90CD               	bcf	205,0,c	;volatile
   287                           
   288                           ;main.c: 124:     T1CONbits.TMR1CS = 0b00;
   289  000086  0E3F               	movlw	-193
   290  000088  16CD               	andwf	205,f,c	;volatile
   291  00008A                     
   292                           ;main.c: 125:     T1CONbits.SOSCEN = 0;
   293  00008A  96CD               	bcf	205,3,c	;volatile
   294  00008C                     
   295                           ;main.c: 126:     T1CONbits.T1SYNC =0;
   296  00008C  94CD               	bcf	205,2,c	;volatile
   297  00008E                     
   298                           ;main.c: 127:     T1CONbits.RD16 = 0;
   299  00008E  92CD               	bcf	205,1,c	;volatile
   300                           
   301                           ;main.c: 133:     T1CONbits.T1CKPS = 0b11;
   302  000090  0E30               	movlw	48
   303  000092  12CD               	iorwf	205,f,c	;volatile
   304                           
   305                           ;main.c: 134:     TMR1 = 15336;
   306  000094  0E3B               	movlw	59
   307  000096  6ECF               	movwf	207,c	;volatile
   308  000098  0EE8               	movlw	232
   309  00009A  6ECE               	movwf	206,c	;volatile
   310  00009C                     
   311                           ;main.c: 135:     T1CONbits.TMR1ON = 1;
   312  00009C  80CD               	bsf	205,0,c	;volatile
   313  00009E                     
   314                           ;main.c: 139:     T3CONbits.TMR3ON = 0;
   315  00009E  90B1               	bcf	177,0,c	;volatile
   316                           
   317                           ;main.c: 140:     T3CONbits.TMR3CS = 0b00;
   318  0000A0  0E3F               	movlw	-193
   319  0000A2  16B1               	andwf	177,f,c	;volatile
   320  0000A4                     
   321                           ;main.c: 141:     T3CONbits.SOSCEN = 0;
   322  0000A4  96B1               	bcf	177,3,c	;volatile
   323  0000A6                     
   324                           ;main.c: 142:     T3CONbits.T3SYNC =0;
   325  0000A6  94B1               	bcf	177,2,c	;volatile
   326  0000A8                     
   327                           ;main.c: 143:     T3CONbits.RD16 = 0;
   328  0000A8  92B1               	bcf	177,1,c	;volatile
   329                           
   330                           ;main.c: 149:     T3CONbits.T3CKPS = 0b11;
   331  0000AA  0E30               	movlw	48
   332  0000AC  12B1               	iorwf	177,f,c	;volatile
   333                           
   334                           ;main.c: 150:     TMR3 = 40536;
   335  0000AE  0E9E               	movlw	158
   336  0000B0  6EB3               	movwf	179,c	;volatile
   337  0000B2  0E58               	movlw	88
   338  0000B4  6EB2               	movwf	178,c	;volatile
   339  0000B6                     
   340                           ;main.c: 151:     T3CONbits.TMR3ON = 1;
   341  0000B6  80B1               	bsf	177,0,c	;volatile
   342  0000B8  0012               	return		;funcret
   343  0000BA                     __end_of_Config_TMR0_TMR1_TMR3:
   344                           	callstack 0
   345                           
   346 ;; *************** function _Config_Port *****************
   347 ;; Defined at:
   348 ;;		line 38 in file "main.c"
   349 ;; Parameters:    Size  Location     Type
   350 ;;		None
   351 ;; Auto vars:     Size  Location     Type
   352 ;;		None
   353 ;; Return value:  Size  Location     Type
   354 ;;                  1    wreg      void 
   355 ;; Registers used:
   356 ;;		wreg, status,2, status,0
   357 ;; Tracked objects:
   358 ;;		On entry : 0/0
   359 ;;		On exit  : 0/0
   360 ;;		Unchanged: 0/0
   361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   362 ;;      Params:         0       0       0       0       0       0       0       0       0
   363 ;;      Locals:         0       0       0       0       0       0       0       0       0
   364 ;;      Temps:          0       0       0       0       0       0       0       0       0
   365 ;;      Totals:         0       0       0       0       0       0       0       0       0
   366 ;;Total ram usage:        0 bytes
   367 ;; Hardware stack levels used: 1
   368 ;; Hardware stack levels required when called: 1
   369 ;; This function calls:
   370 ;;		Nothing
   371 ;; This function is called by:
   372 ;;		_main
   373 ;; This function uses a non-reentrant model
   374 ;;
   375                           
   376                           	psect	text3
   377  0000BA                     __ptext3:
   378                           	callstack 0
   379  0000BA                     _Config_Port:
   380                           	callstack 29
   381  0000BA                     
   382                           ;main.c: 40:     LATD = 0x00;
   383  0000BA  0E00               	movlw	0
   384  0000BC  6E8C               	movwf	140,c	;volatile
   385                           
   386                           ;main.c: 41:     LATA = 0x00;
   387  0000BE  0E00               	movlw	0
   388  0000C0  6E89               	movwf	137,c	;volatile
   389  0000C2                     
   390                           ;main.c: 42:     LATE &= ~(1<<0);
   391  0000C2  908D               	bcf	141,0,c	;volatile
   392  0000C4                     
   393                           ;main.c: 43:     LATE &= ~(1<<1);
   394  0000C4  928D               	bcf	141,1,c	;volatile
   395  0000C6                     
   396                           ;main.c: 44:     LATE &= ~(1<<2);
   397  0000C6  948D               	bcf	141,2,c	;volatile
   398  0000C8                     
   399                           ;main.c: 47:     SLRCON=0b00000000;
   400  0000C8  0E00               	movlw	0
   401  0000CA  6E7A               	movwf	122,c	;volatile
   402                           
   403                           ;main.c: 50:     ANSELE &= ~(1<<0);
   404  0000CC  010F               	movlb	15	; () banked
   405  0000CE  915F               	bcf	95,0,b	;volatile
   406                           
   407                           ;main.c: 51:     ANSELE &= ~(1<<1);
   408  0000D0  935F               	bcf	95,1,b	;volatile
   409                           
   410                           ;main.c: 52:     ANSELE &= ~(1<<2);
   411  0000D2  955F               	bcf	95,2,b	;volatile
   412  0000D4                     
   413                           ; BSR set to: 15
   414                           ;main.c: 53:     ANSELD = 0x00;
   415  0000D4  0E00               	movlw	0
   416  0000D6  6F5E               	movwf	94,b	;volatile
   417  0000D8                     
   418                           ; BSR set to: 15
   419                           ;main.c: 54:     ANSELA = 0x00;
   420  0000D8  0E00               	movlw	0
   421  0000DA  6F5B               	movwf	91,b	;volatile
   422                           
   423                           ;main.c: 57:     TRISE &= ~(1<<0);
   424  0000DC  9096               	bcf	150,0,c	;volatile
   425                           
   426                           ;main.c: 58:     TRISE &= ~(1<<1);
   427  0000DE  9296               	bcf	150,1,c	;volatile
   428                           
   429                           ;main.c: 59:     TRISE &= ~(1<<2);
   430  0000E0  9496               	bcf	150,2,c	;volatile
   431  0000E2                     
   432                           ; BSR set to: 15
   433                           ;main.c: 60:     TRISD = 0x00;
   434  0000E2  0E00               	movlw	0
   435  0000E4  6E95               	movwf	149,c	;volatile
   436  0000E6                     
   437                           ; BSR set to: 15
   438                           ;main.c: 61:     TRISA = 0x00;
   439  0000E6  0E00               	movlw	0
   440  0000E8  6E92               	movwf	146,c	;volatile
   441  0000EA                     
   442                           ; BSR set to: 15
   443  0000EA  0012               	return		;funcret
   444  0000EC                     __end_of_Config_Port:
   445                           	callstack 0
   446                           
   447 ;; *************** function _Config_Clock *****************
   448 ;; Defined at:
   449 ;;		line 33 in file "main.c"
   450 ;; Parameters:    Size  Location     Type
   451 ;;		None
   452 ;; Auto vars:     Size  Location     Type
   453 ;;		None
   454 ;; Return value:  Size  Location     Type
   455 ;;                  1    wreg      void 
   456 ;; Registers used:
   457 ;;		wreg, status,2
   458 ;; Tracked objects:
   459 ;;		On entry : 0/0
   460 ;;		On exit  : 0/0
   461 ;;		Unchanged: 0/0
   462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   463 ;;      Params:         0       0       0       0       0       0       0       0       0
   464 ;;      Locals:         0       0       0       0       0       0       0       0       0
   465 ;;      Temps:          0       0       0       0       0       0       0       0       0
   466 ;;      Totals:         0       0       0       0       0       0       0       0       0
   467 ;;Total ram usage:        0 bytes
   468 ;; Hardware stack levels used: 1
   469 ;; Hardware stack levels required when called: 1
   470 ;; This function calls:
   471 ;;		Nothing
   472 ;; This function is called by:
   473 ;;		_main
   474 ;; This function uses a non-reentrant model
   475 ;;
   476                           
   477                           	psect	text4
   478  000116                     __ptext4:
   479                           	callstack 0
   480  000116                     _Config_Clock:
   481                           	callstack 29
   482  000116                     
   483                           ;main.c: 34:     OSCCONbits.IRCF=0b111;
   484  000116  0E70               	movlw	112
   485  000118  12D3               	iorwf	211,f,c	;volatile
   486                           
   487                           ;main.c: 35:     OSCCONbits.SCS=0b10;
   488  00011A  50D3               	movf	211,w,c	;volatile
   489  00011C  0BFC               	andlw	-4
   490  00011E  0902               	iorlw	2
   491  000120  6ED3               	movwf	211,c	;volatile
   492  000122  0012               	return		;funcret
   493  000124                     __end_of_Config_Clock:
   494                           	callstack 0
   495                           
   496 ;; *************** function _ISR_TMRS *****************
   497 ;; Defined at:
   498 ;;		line 83 in file "main.c"
   499 ;; Parameters:    Size  Location     Type
   500 ;;		None
   501 ;; Auto vars:     Size  Location     Type
   502 ;;		None
   503 ;; Return value:  Size  Location     Type
   504 ;;                  1    wreg      void 
   505 ;; Registers used:
   506 ;;		wreg, status,2, status,0
   507 ;; Tracked objects:
   508 ;;		On entry : 0/0
   509 ;;		On exit  : 0/0
   510 ;;		Unchanged: 0/0
   511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   512 ;;      Params:         0       0       0       0       0       0       0       0       0
   513 ;;      Locals:         0       0       0       0       0       0       0       0       0
   514 ;;      Temps:          0       0       0       0       0       0       0       0       0
   515 ;;      Totals:         0       0       0       0       0       0       0       0       0
   516 ;;Total ram usage:        0 bytes
   517 ;; Hardware stack levels used: 1
   518 ;; This function calls:
   519 ;;		Nothing
   520 ;; This function is called by:
   521 ;;		Interrupt level 2
   522 ;; This function uses a non-reentrant model
   523 ;;
   524                           
   525                           	psect	intcode
   526  000008                     __pintcode:
   527                           	callstack 0
   528  000008                     _ISR_TMRS:
   529                           	callstack 29
   530                           
   531                           ;incstack = 0
   532  000008  8201               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   533  00000A                     
   534                           ;main.c: 84:     if(INTCONbits.TMR0IF){
   535  00000A  A4F2               	btfss	242,2,c	;volatile
   536  00000C  EF0A  F000         	goto	i2u5_41
   537  000010  EF0C  F000         	goto	i2u5_40
   538  000014                     i2u5_41:
   539  000014  EF13  F000         	goto	i2l911
   540  000018                     i2u5_40:
   541  000018                     
   542                           ;main.c: 85:         INTCONbits.TMR0IF=0;
   543  000018  94F2               	bcf	242,2,c	;volatile
   544  00001A                     
   545                           ;main.c: 86:         LATE^=(1<<0);
   546  00001A  0E01               	movlw	1
   547  00001C  1A8D               	xorwf	141,f,c	;volatile
   548  00001E                     
   549                           ;main.c: 87:         TMR0 = 53036;
   550  00001E  0ECF               	movlw	207
   551  000020  6ED7               	movwf	215,c	;volatile
   552  000022  0E2C               	movlw	44
   553  000024  6ED6               	movwf	214,c	;volatile
   554  000026                     i2l911:
   555                           
   556                           ;main.c: 90:     if(PIR1bits.TMR1IF){
   557  000026  A09E               	btfss	158,0,c	;volatile
   558  000028  EF18  F000         	goto	i2u6_41
   559  00002C  EF1A  F000         	goto	i2u6_40
   560  000030                     i2u6_41:
   561  000030  EF22  F000         	goto	i2l921
   562  000034                     i2u6_40:
   563  000034                     
   564                           ;main.c: 91:         PIR1bits.TMR1IF=0;
   565  000034  909E               	bcf	158,0,c	;volatile
   566  000036                     
   567                           ;main.c: 92:         LATE^=(1<<1);
   568  000036  0E02               	movlw	2
   569  000038  1A8D               	xorwf	141,f,c	;volatile
   570  00003A                     
   571                           ;main.c: 93:         TMR1 = 15536;
   572  00003A  0E3C               	movlw	60
   573  00003C  6ECF               	movwf	207,c	;volatile
   574  00003E  0EB0               	movlw	176
   575  000040  6ECE               	movwf	206,c	;volatile
   576  000042                     
   577                           ;main.c: 94:         LATD++;
   578  000042  2A8C               	incf	140,f,c	;volatile
   579  000044                     i2l921:
   580                           
   581                           ;main.c: 97:     if(PIR2bits.TMR3IF){
   582  000044  A2A1               	btfss	161,1,c	;volatile
   583  000046  EF27  F000         	goto	i2u7_41
   584  00004A  EF29  F000         	goto	i2u7_40
   585  00004E                     i2u7_41:
   586  00004E  EF31  F000         	goto	i2l77
   587  000052                     i2u7_40:
   588  000052                     
   589                           ;main.c: 98:         PIR2bits.TMR3IF =0;
   590  000052  92A1               	bcf	161,1,c	;volatile
   591  000054                     
   592                           ;main.c: 99:         LATE^=(1<<2);
   593  000054  0E04               	movlw	4
   594  000056  1A8D               	xorwf	141,f,c	;volatile
   595  000058                     
   596                           ;main.c: 100:         LATA++;
   597  000058  2A89               	incf	137,f,c	;volatile
   598  00005A                     
   599                           ;main.c: 101:         TMR3 = 40536;
   600  00005A  0E9E               	movlw	158
   601  00005C  6EB3               	movwf	179,c	;volatile
   602  00005E  0E58               	movlw	88
   603  000060  6EB2               	movwf	178,c	;volatile
   604  000062                     i2l77:
   605  000062  9201               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   606  000064  0011               	retfie		f
   607  000066                     __end_of_ISR_TMRS:
   608                           	callstack 0
   609  0000                     
   610                           	psect	rparam
   611  0000                     
   612                           	psect	temp
   613  000001                     btemp:
   614                           	callstack 0
   615  000001                     	ds	1
   616  0000                     int$flags	set	btemp
   617  0000                     wtemp8	set	btemp+1
   618  0000                     ttemp5	set	btemp+1
   619  0000                     ttemp6	set	btemp+4
   620  0000                     ttemp7	set	btemp+8
   621                           
   622                           	psect	idloc
   623                           
   624                           ;Config register IDLOC0 @ 0x200000
   625                           ;	unspecified, using default values
   626  200000                     	org	2097152
   627  200000  FF                 	db	255
   628                           
   629                           ;Config register IDLOC1 @ 0x200001
   630                           ;	unspecified, using default values
   631  200001                     	org	2097153
   632  200001  FF                 	db	255
   633                           
   634                           ;Config register IDLOC2 @ 0x200002
   635                           ;	unspecified, using default values
   636  200002                     	org	2097154
   637  200002  FF                 	db	255
   638                           
   639                           ;Config register IDLOC3 @ 0x200003
   640                           ;	unspecified, using default values
   641  200003                     	org	2097155
   642  200003  FF                 	db	255
   643                           
   644                           ;Config register IDLOC4 @ 0x200004
   645                           ;	unspecified, using default values
   646  200004                     	org	2097156
   647  200004  FF                 	db	255
   648                           
   649                           ;Config register IDLOC5 @ 0x200005
   650                           ;	unspecified, using default values
   651  200005                     	org	2097157
   652  200005  FF                 	db	255
   653                           
   654                           ;Config register IDLOC6 @ 0x200006
   655                           ;	unspecified, using default values
   656  200006                     	org	2097158
   657  200006  FF                 	db	255
   658                           
   659                           ;Config register IDLOC7 @ 0x200007
   660                           ;	unspecified, using default values
   661  200007                     	org	2097159
   662  200007  FF                 	db	255
   663                           
   664                           	psect	config
   665                           
   666                           ;Config register CONFIG1L @ 0x300000
   667                           ;	PLL Selection
   668                           ;	PLLSEL = PLL4X, 4x clock multiplier
   669                           ;	PLL Enable Configuration bit
   670                           ;	CFGPLLEN = OFF, PLL Disabled (firmware controlled)
   671                           ;	CPU System Clock Postscaler
   672                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
   673                           ;	Low Speed USB mode with 48 MHz system clock
   674                           ;	LS48MHZ = SYS24X4, System clock at 24 MHz, USB clock divider is set to 4
   675  300000                     	org	3145728
   676  300000  00                 	db	0
   677                           
   678                           ;Config register CONFIG1H @ 0x300001
   679                           ;	Oscillator Selection
   680                           ;	FOSC = INTOSCIO, Internal oscillator
   681                           ;	Primary Oscillator Shutdown
   682                           ;	PCLKEN = ON, Primary oscillator enabled
   683                           ;	Fail-Safe Clock Monitor
   684                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   685                           ;	Internal/External Oscillator Switchover
   686                           ;	IESO = OFF, Oscillator Switchover mode disabled
   687  300001                     	org	3145729
   688  300001  28                 	db	40
   689                           
   690                           ;Config register CONFIG2L @ 0x300002
   691                           ;	Power-up Timer Enable
   692                           ;	nPWRTEN = ON, Power up timer enabled
   693                           ;	Brown-out Reset Enable
   694                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
   695                           ;	Brown-out Reset Voltage
   696                           ;	BORV = 190, BOR set to 1.9V nominal
   697                           ;	Low-Power Brown-out Reset
   698                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
   699  300002                     	org	3145730
   700  300002  5E                 	db	94
   701                           
   702                           ;Config register CONFIG2H @ 0x300003
   703                           ;	Watchdog Timer Enable bits
   704                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
   705                           ;	Watchdog Timer Postscaler
   706                           ;	WDTPS = 32768, 1:32768
   707  300003                     	org	3145731
   708  300003  3C                 	db	60
   709                           
   710                           ; Padding undefined space
   711  300004                     	org	3145732
   712  300004  FF                 	db	255
   713                           
   714                           ;Config register CONFIG3H @ 0x300005
   715                           ;	CCP2 MUX bit
   716                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
   717                           ;	PORTB A/D Enable bit
   718                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
   719                           ;	Timer3 Clock Input MUX bit
   720                           ;	T3CMX = RC0, T3CKI function is on RC0
   721                           ;	SDO Output MUX bit
   722                           ;	SDOMX = RB3, SDO function is on RB3
   723                           ;	Master Clear Reset Pin Enable
   724                           ;	MCLRE = OFF, RE3 input pin enabled; external MCLR disabled
   725  300005                     	org	3145733
   726  300005  53                 	db	83
   727                           
   728                           ;Config register CONFIG4L @ 0x300006
   729                           ;	Stack Full/Underflow Reset
   730                           ;	STVREN = ON, Stack full/underflow will cause Reset
   731                           ;	Single-Supply ICSP Enable bit
   732                           ;	LVP = OFF, Single-Supply ICSP disabled
   733                           ;	Dedicated In-Circuit Debug/Programming Port Enable
   734                           ;	ICPRT = OFF, ICPORT disabled
   735                           ;	Extended Instruction Set Enable bit
   736                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
   737                           ;	Background Debugger Enable bit
   738                           ;	DEBUG = 0x1, unprogrammed default
   739  300006                     	org	3145734
   740  300006  81                 	db	129
   741                           
   742                           ; Padding undefined space
   743  300007                     	org	3145735
   744  300007  FF                 	db	255
   745                           
   746                           ;Config register CONFIG5L @ 0x300008
   747                           ;	Block 0 Code Protect
   748                           ;	CP0 = OFF, Block 0 is not code-protected
   749                           ;	Block 1 Code Protect
   750                           ;	CP1 = OFF, Block 1 is not code-protected
   751                           ;	Block 2 Code Protect
   752                           ;	CP2 = OFF, Block 2 is not code-protected
   753                           ;	Block 3 Code Protect
   754                           ;	CP3 = OFF, Block 3 is not code-protected
   755  300008                     	org	3145736
   756  300008  0F                 	db	15
   757                           
   758                           ;Config register CONFIG5H @ 0x300009
   759                           ;	Boot Block Code Protect
   760                           ;	CPB = OFF, Boot block is not code-protected
   761                           ;	Data EEPROM Code Protect
   762                           ;	CPD = OFF, Data EEPROM is not code-protected
   763  300009                     	org	3145737
   764  300009  C0                 	db	192
   765                           
   766                           ;Config register CONFIG6L @ 0x30000A
   767                           ;	Block 0 Write Protect
   768                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
   769                           ;	Block 1 Write Protect
   770                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
   771                           ;	Block 2 Write Protect
   772                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
   773                           ;	Block 3 Write Protect
   774                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
   775  30000A                     	org	3145738
   776  30000A  0F                 	db	15
   777                           
   778                           ;Config register CONFIG6H @ 0x30000B
   779                           ;	Configuration Registers Write Protect
   780                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   781                           ;	Boot Block Write Protect
   782                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
   783                           ;	Data EEPROM Write Protect
   784                           ;	WRTD = OFF, Data EEPROM is not write-protected
   785  30000B                     	org	3145739
   786  30000B  E0                 	db	224
   787                           
   788                           ;Config register CONFIG7L @ 0x30000C
   789                           ;	Block 0 Table Read Protect
   790                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
   791                           ;	Block 1 Table Read Protect
   792                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
   793                           ;	Block 2 Table Read Protect
   794                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
   795                           ;	Block 3 Table Read Protect
   796                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
   797  30000C                     	org	3145740
   798  30000C  0F                 	db	15
   799                           
   800                           ;Config register CONFIG7H @ 0x30000D
   801                           ;	Boot Block Table Read Protect
   802                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
   803  30000D                     	org	3145741
   804  30000D  40                 	db	64
   805                           tosu	equ	0xFFF
   806                           tosh	equ	0xFFE
   807                           tosl	equ	0xFFD
   808                           stkptr	equ	0xFFC
   809                           pclatu	equ	0xFFB
   810                           pclath	equ	0xFFA
   811                           pcl	equ	0xFF9
   812                           tblptru	equ	0xFF8
   813                           tblptrh	equ	0xFF7
   814                           tblptrl	equ	0xFF6
   815                           tablat	equ	0xFF5
   816                           prodh	equ	0xFF4
   817                           prodl	equ	0xFF3
   818                           indf0	equ	0xFEF
   819                           postinc0	equ	0xFEE
   820                           postdec0	equ	0xFED
   821                           preinc0	equ	0xFEC
   822                           plusw0	equ	0xFEB
   823                           fsr0h	equ	0xFEA
   824                           fsr0l	equ	0xFE9
   825                           wreg	equ	0xFE8
   826                           indf1	equ	0xFE7
   827                           postinc1	equ	0xFE6
   828                           postdec1	equ	0xFE5
   829                           preinc1	equ	0xFE4
   830                           plusw1	equ	0xFE3
   831                           fsr1h	equ	0xFE2
   832                           fsr1l	equ	0xFE1
   833                           bsr	equ	0xFE0
   834                           indf2	equ	0xFDF
   835                           postinc2	equ	0xFDE
   836                           postdec2	equ	0xFDD
   837                           preinc2	equ	0xFDC
   838                           plusw2	equ	0xFDB
   839                           fsr2h	equ	0xFDA
   840                           fsr2l	equ	0xFD9
   841                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      0       0
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_TMRS in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR_TMRS in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_TMRS in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_TMRS in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_TMRS in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_TMRS in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_TMRS in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_TMRS in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_TMRS in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                       _Config_Clock
                        _Config_Port
              _Config_TMR0_TMR1_TMR3
              _Config_TMRS_Interrupt
 ---------------------------------------------------------------------------------
 (1) _Config_TMRS_Interrupt                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Config_TMR0_TMR1_TMR3                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Config_Port                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Config_Clock                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR_TMRS                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Config_Clock
   _Config_Port
   _Config_TMR0_TMR1_TMR3
   _Config_TMRS_Interrupt

 _ISR_TMRS (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E      0       0       1        0.0%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBIGSFRhh          D      0       0      20        0.0%
BITBIGSFRhlh        1A      0       0      21        0.0%
BITBIGSFRhll         1      0       0      22        0.0%
BITBIGSFRlhhhhh      3      0       0      23        0.0%
BITBIGSFRlhhhhl     19      0       0      24        0.0%
BITBIGSFRlhhhhl      F      0       0      25        0.0%
BITBIGSFRlhhhl       1      0       0      26        0.0%
BITBIGSFRlhhl        6      0       0      27        0.0%
BITBIGSFRlhlh        2      0       0      28        0.0%
BITBIGSFRlhll        4      0       0      29        0.0%
BITBIGSFRllh         2      0       0      30        0.0%
BITBIGSFRlllh        E      0       0      31        0.0%
BITBIGSFRllllh      1A      0       0      32        0.0%
BITBIGSFRlllllh      2      0       0      33        0.0%
BITBIGSFRllllll      8      0       0      34        0.0%
ABS                  0      0       0      35        0.0%
BIGRAM             7FF      0       0      36        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sun Jul 10 17:16:40 2022

                           l63 0122                             l80 00B8                             l57 00FC  
                           l66 00EA                             l58 00FC                             l69 0114  
                          l821 00C2                            l901 00F8                            l831 00D8  
                          l823 00C4                            l817 0116                            l833 00E2  
                          l825 00C6                            l841 0072                            l835 00E6  
                          l827 00C8                            l819 00BA                            l851 008E  
                          l843 0082                            l829 00D4                            l861 00A8  
                          l853 009C                            l845 0084                            l837 0104  
                          l863 00B6                            l855 009E                            l847 008A  
                          l839 006A                            l857 00A4                            l849 008C  
                          l859 00A6                            l895 00EC                            l897 00F0  
                          l899 00F4                           _LATA 000F89                           _LATD 000F8C  
                         _LATE 000F8D                           i2l77 0062                           _TMR0 000FD6  
                         _TMR1 000FCE                           _TMR3 000FB2                           _main 00EC  
                         btemp 0001                           start 0066                   ___param_bank 000000  
          __end_of_Config_Port 00EC                          ?_main 0000                          i2l911 0026  
                        i2l903 000A                          i2l913 0034                          i2l921 0044  
                        i2l905 0018                          i2l923 0052                          i2l915 0036  
                        i2l907 001A                          i2l925 0054                          i2l917 003A  
                        i2l909 001E                          i2l927 0058                          i2l919 0042  
                        i2l929 005A                          _TRISA 000F92                          _TRISD 000F95  
                        _TRISE 000F96               __end_of_ISR_TMRS 0066  __end_of_Config_TMR0_TMR1_TMR3 00BA  
                        ttemp5 0002                          ttemp6 0005                          ttemp7 0009  
                        wtemp8 0002                __initialization 0124           __end_of_Config_Clock 0124  
                 __end_of_main 0104          _Config_TMRS_Interrupt 0104                         ??_main 0000  
                __activetblptr 000000                         _ANSELA 000F5B                         _ANSELD 000F5E  
                       _ANSELE 000F5F                         _SLRCON 000F7A                         i2u5_40 0018  
                       i2u5_41 0014                         i2u6_40 0034                         i2u6_41 0030  
                       i2u7_40 0052                         i2u7_41 004E                    _Config_Port 00BA  
                       isa$std 000001                     __accesstop 0060        __end_of__initialization 0124  
                ___rparam_used 000001                      ?_ISR_TMRS 0000         ?_Config_TMRS_Interrupt 0000  
               __pcstackCOMRAM 0000                     ??_ISR_TMRS 0000                   _Config_Clock 0116  
                      __Hparam 0000                        __Lparam 0000                        __pcinit 0124  
                      __ramtop 0800                        __ptext0 00EC                        __ptext1 0104  
                      __ptext2 006A                        __ptext3 00BA                        __ptext4 0116  
                    _T0CONbits 000FD5                      _T1CONbits 000FCD                      _T3CONbits 000FB1  
         end_of_initialization 0124          _Config_TMR0_TMR1_TMR3 006A                   ?_Config_Port 0000  
      ??_Config_TMRS_Interrupt 0000            start_initialization 0124         ?_Config_TMR0_TMR1_TMR3 0000  
                    __pintcode 0008                       _LATDbits 000F8C                       _PIE1bits 000F9D  
                     _PIE2bits 000FA0                       _PIR1bits 000F9E                       _PIR2bits 000FA1  
                     _ISR_TMRS 0008                       __Hrparam 0000  __end_of_Config_TMRS_Interrupt 0116  
                     __Lrparam 0000        ??_Config_TMR0_TMR1_TMR3 0000                       isa$xinst 000000  
                     int$flags 0001                     _INTCONbits 000FF2                  ?_Config_Clock 0000  
                     intlevel2 0000                     _OSCCONbits 000FD3                 ??_Config_Clock 0000  
                ??_Config_Port 0000  
